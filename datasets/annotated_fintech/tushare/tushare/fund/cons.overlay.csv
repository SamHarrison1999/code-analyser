annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Use of lambda for simple formatting functions,"[26486, 227, 6705, 19939, 25, 5765, 286, 37456, 329, 2829, 33313, 5499]",0.5,9,best_practice,9,Use of lambda for simple formatting functions,,0,VERSION = '0.0.1',"[43717, 796, 705, 15, 13, 15, 13, 16, 6]"
‚úÖ Best Practice: Use of lambda for simple formatting functions,"[26486, 227, 6705, 19939, 25, 5765, 286, 37456, 329, 2829, 33313, 5499]",0.5,22,best_practice,11,Use of lambda for simple formatting functions,,9,FORMAT = lambda x: '%.2f' % x,"[21389, 1404, 796, 37456, 2124, 25, 705, 7225, 17, 69, 6, 4064, 2124]"
‚ö†Ô∏è SAST Risk (Low): Potential for URL manipulation if user input is used,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 10289, 17512, 611, 2836, 5128, 318, 973]",1.0,47,sast_risk,58,Potential for URL manipulation if user input is used,Low,22,"NAV_HIS_JJJZ = ['fbrq', 'jjjz', 'ljjz']","[4535, 53, 62, 39, 1797, 62, 32178, 41, 57, 796, 37250, 69, 1671, 80, 3256, 705, 41098, 73, 89, 3256, 705, 75, 41098, 89, 20520]"
‚ö†Ô∏è SAST Risk (Low): Potential for URL manipulation if user input is used,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 10289, 17512, 611, 2836, 5128, 318, 973]",1.0,47,sast_risk,60,Potential for URL manipulation if user input is used,Low,47,,[]
‚ö†Ô∏è SAST Risk (Low): Potential for URL manipulation if user input is used,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 10289, 17512, 611, 2836, 5128, 318, 973]",1.0,87,sast_risk,62,Potential for URL manipulation if user input is used,Low,47,"                  'Type1Name', 'Type2Name', 'Type3Name', 'jjgm', 'jjfe',","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 705, 6030, 16, 5376, 3256, 705, 6030, 17, 5376, 3256, 705, 6030, 18, 5376, 3256, 705, 41098, 39870, 3256, 705, 41098, 5036, 3256]"
‚ö†Ô∏è SAST Risk (Low): Potential for URL manipulation if user input is used,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 10289, 17512, 611, 2836, 5128, 318, 973]",1.0,87,sast_risk,64,Potential for URL manipulation if user input is used,Low,87,,[]
‚ö†Ô∏è SAST Risk (Low): Potential for URL manipulation if user input is used,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 10289, 17512, 611, 2836, 5128, 318, 973]",1.0,119,sast_risk,66,Potential for URL manipulation if user input is used,Low,87,"NAV_CLOSE_COLUMNS = ['symbol', 'sname', 'per_nav', 'total_nav', 'nav_rate',","[4535, 53, 62, 32737, 62, 25154, 5883, 8035, 796, 37250, 1837, 23650, 3256, 705, 82, 3672, 3256, 705, 525, 62, 28341, 3256, 705, 23350, 62, 28341, 3256, 705, 28341, 62, 4873, 3256]"
‚ö†Ô∏è SAST Risk (Low): Potential for URL manipulation if user input is used,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 10289, 17512, 611, 2836, 5128, 318, 973]",1.0,154,sast_risk,68,Potential for URL manipulation if user input is used,Low,119,"                     'fund_manager', 'jjlx', 'jjzfe']","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 705, 10990, 62, 37153, 3256, 705, 73, 20362, 87, 3256, 705, 41098, 89, 5036, 20520]"
‚ö†Ô∏è SAST Risk (Low): Potential for URL manipulation if user input is used,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 10289, 17512, 611, 2836, 5128, 318, 973]",1.0,154,sast_risk,70,Potential for URL manipulation if user input is used,Low,154,,[]
‚ö†Ô∏è SAST Risk (Low): Potential for URL manipulation if user input is used,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 10289, 17512, 611, 2836, 5128, 318, 973]",1.0,197,sast_risk,72,Potential for URL manipulation if user input is used,Low,154,"                       'discount_rate', 'nav_date', 'start_date', 'end_date',","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 705, 15410, 608, 62, 4873, 3256, 705, 28341, 62, 4475, 3256, 705, 9688, 62, 4475, 3256, 705, 437, 62, 4475, 3256]"
üß† ML Signal: Checking Python version for compatibility,"[8582, 100, 254, 10373, 26484, 25, 39432, 11361, 2196, 329, 17764]",0.5,218,ml_signal,97,Checking Python version for compatibility,,197,DATA_ROWS_TIPS = '%s rows data found.Please wait for a moment.',"[26947, 62, 49, 22845, 62, 25621, 3705, 796, 705, 4, 82, 15274, 1366, 1043, 13, 5492, 4043, 329, 257, 2589, 2637]"
‚ö†Ô∏è SAST Risk (Low): Directly writing to sys.stdout can be risky if the output is not properly sanitized.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 306, 3597, 284, 25064, 13, 19282, 448, 460, 307, 17564, 611, 262, 5072, 318, 407, 6105, 5336, 36951, 13]",1.0,287,sast_risk,88,Directly writing to sys.stdout can be risky if the output is not properly sanitized.,Low,218,SINA_NAV_HISTROY_DATA_CUR_URL = '%s%s/fundInfo/api/openapi.php/CaihuiFundInfoService.getNavcur?symbol=%s&datefrom=%s&dateto=%s&num=%s',"[50, 28893, 62, 4535, 53, 62, 39, 1797, 5446, 21414, 62, 26947, 62, 34, 4261, 62, 21886, 796, 705, 4, 82, 4, 82, 14, 10990, 12360, 14, 15042, 14, 9654, 15042, 13, 10121, 14, 34, 1872, 71, 9019, 24553, 12360, 16177, 13, 1136, 30575, 22019, 30, 1837, 23650, 28, 4, 82, 5, 4475, 6738, 28, 4, 82, 5, 19608, 27206, 28, 4, 82, 5, 22510, 28, 4, 82, 6]"
‚úÖ Best Practice: Consider using a logging framework instead of direct stdout writes for better control and flexibility.,"[26486, 227, 6705, 19939, 25, 12642, 1262, 257, 18931, 9355, 2427, 286, 1277, 14367, 448, 6797, 329, 1365, 1630, 290, 13688, 13]",0.5,287,best_practice,89,Consider using a logging framework instead of direct stdout writes for better control and flexibility.,,287,,[]
üß† ML Signal: Usage of sys.stdout.write indicates a pattern of direct output handling.,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 25064, 13, 19282, 448, 13, 13564, 9217, 257, 3912, 286, 1277, 5072, 9041, 13]",0.5,358,ml_signal,90,Usage of sys.stdout.write indicates a pattern of direct output handling.,,287,SINA_DATA_DETAIL_URL = '%s%s/quotes_service/api/%s/Market_Center.getHQNodeData?page=1&num=400&sort=symbol&asc=1&node=%s&symbol=&_s_r_a=page',"[50, 28893, 62, 26947, 62, 35, 20892, 4146, 62, 21886, 796, 705, 4, 82, 4, 82, 14, 421, 6421, 62, 15271, 14, 15042, 14, 4, 82, 14, 27470, 62, 23656, 13, 1136, 41275, 19667, 6601, 30, 7700, 28, 16, 5, 22510, 28, 7029, 5, 30619, 28, 1837, 23650, 5, 3372, 28, 16, 5, 17440, 28, 4, 82, 5, 1837, 23650, 28, 5, 62, 82, 62, 81, 62, 64, 28, 7700, 6]"
"‚ö†Ô∏è SAST Risk (Low): Flushing stdout can be risky if not handled properly, as it may lead to unexpected behavior in output.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 1610, 8023, 14367, 448, 460, 307, 17564, 611, 407, 12118, 6105, 11, 355, 340, 743, 1085, 284, 10059, 4069, 287, 5072, 13]",0.5,404,sast_risk,92,"Flushing stdout can be risky if not handled properly, as it may lead to unexpected behavior in output.",Low,358,SINA_FUND_INFO_URL = '%s%s/fundInfo/api/openapi.php/FundPageInfoService.tabjjgk?symbol=%s&format=json',"[50, 28893, 62, 42296, 35, 62, 10778, 62, 21886, 796, 705, 4, 82, 4, 82, 14, 10990, 12360, 14, 15042, 14, 9654, 15042, 13, 10121, 14, 24553, 9876, 12360, 16177, 13, 8658, 41098, 70, 74, 30, 1837, 23650, 28, 4, 82, 5, 18982, 28, 17752, 6]"
‚úÖ Best Practice: Ensure that flushing is necessary to avoid performance issues.,"[26486, 227, 6705, 19939, 25, 48987, 326, 781, 8023, 318, 3306, 284, 3368, 2854, 2428, 13]",0.5,404,best_practice,93,Ensure that flushing is necessary to avoid performance issues.,,404,,[]
üß† ML Signal: Usage of sys.stdout.flush indicates a pattern of manual output management.,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 25064, 13, 19282, 448, 13, 25925, 9217, 257, 3912, 286, 10107, 5072, 4542, 13]",0.5,408,ml_signal,94,Usage of sys.stdout.flush indicates a pattern of manual output management.,,404,##########################################################################,"[29113, 29113, 7804, 2235]"
‚ö†Ô∏è SAST Risk (Low): Directly writing to sys.stdout can lead to issues if the output stream is redirected or closed.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 306, 3597, 284, 25064, 13, 19282, 448, 460, 1085, 284, 2428, 611, 262, 5072, 4269, 318, 45158, 393, 4838, 13]",1.0,408,sast_risk,91,Directly writing to sys.stdout can lead to issues if the output stream is redirected or closed.,Low,408,,[]
‚úÖ Best Practice: Consider using the print function for better compatibility and readability.,"[26486, 227, 6705, 19939, 25, 12642, 1262, 262, 3601, 2163, 329, 1365, 17764, 290, 1100, 1799, 13]",1.0,454,best_practice,92,Consider using the print function for better compatibility and readability.,,408,SINA_FUND_INFO_URL = '%s%s/fundInfo/api/openapi.php/FundPageInfoService.tabjjgk?symbol=%s&format=json',"[50, 28893, 62, 42296, 35, 62, 10778, 62, 21886, 796, 705, 4, 82, 4, 82, 14, 10990, 12360, 14, 15042, 14, 9654, 15042, 13, 10121, 14, 24553, 9876, 12360, 16177, 13, 8658, 41098, 70, 74, 30, 1837, 23650, 28, 4, 82, 5, 18982, 28, 17752, 6]"
‚ö†Ô∏è SAST Risk (Low): Flushing sys.stdout without checking if it's open can lead to exceptions if the stream is closed.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 1610, 8023, 25064, 13, 19282, 448, 1231, 10627, 611, 340, 338, 1280, 460, 1085, 284, 13269, 611, 262, 4269, 318, 4838, 13]",1.0,458,sast_risk,94,Flushing sys.stdout without checking if it's open can lead to exceptions if the stream is closed.,Low,454,##########################################################################,"[29113, 29113, 7804, 2235]"
‚ö†Ô∏è SAST Risk (Low): Using sys.stdout directly can lead to issues if the output stream is redirected or closed.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 25064, 13, 19282, 448, 3264, 460, 1085, 284, 2428, 611, 262, 5072, 4269, 318, 45158, 393, 4838, 13]",1.0,462,sast_risk,94,Using sys.stdout directly can lead to issues if the output stream is redirected or closed.,Low,458,##########################################################################,"[29113, 29113, 7804, 2235]"
‚úÖ Best Practice: Consider using the print function for better readability and automatic handling of newlines.,"[26486, 227, 6705, 19939, 25, 12642, 1262, 262, 3601, 2163, 329, 1365, 1100, 1799, 290, 11353, 9041, 286, 649, 6615, 13]",1.0,475,best_practice,95,Consider using the print function for better readability and automatic handling of newlines.,,462,DATA_GETTING_TIPS = '[Getting data:]',"[26947, 62, 18851, 48996, 62, 25621, 3705, 796, 44438, 20570, 1366, 47715, 6]"
‚ö†Ô∏è SAST Risk (Low): Flushing stdout can be unnecessary and may affect performance if used excessively.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 1610, 8023, 14367, 448, 460, 307, 13114, 290, 743, 2689, 2854, 611, 973, 40437, 13]",1.0,496,sast_risk,97,Flushing stdout can be unnecessary and may affect performance if used excessively.,Low,475,DATA_ROWS_TIPS = '%s rows data found.Please wait for a moment.',"[26947, 62, 49, 22845, 62, 25621, 3705, 796, 705, 4, 82, 15274, 1366, 1043, 13, 5492, 4043, 329, 257, 2589, 2637]"
"‚ö†Ô∏è SAST Risk (Low): sys.stdout.write can be redirected, which might lead to unintended data exposure if not handled properly.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 25064, 13, 19282, 448, 13, 13564, 460, 307, 45158, 11, 543, 1244, 1085, 284, 30261, 1366, 7111, 611, 407, 12118, 6105, 13]",0.5,517,sast_risk,97,"sys.stdout.write can be redirected, which might lead to unintended data exposure if not handled properly.",Low,496,DATA_ROWS_TIPS = '%s rows data found.Please wait for a moment.',"[26947, 62, 49, 22845, 62, 25621, 3705, 796, 705, 4, 82, 15274, 1366, 1043, 13, 5492, 4043, 329, 257, 2589, 2637]"
‚úÖ Best Practice: Consider using print() for writing to stdout for better readability and automatic flushing.,"[26486, 227, 6705, 19939, 25, 12642, 1262, 3601, 3419, 329, 3597, 284, 14367, 448, 329, 1365, 1100, 1799, 290, 11353, 781, 8023, 13]",0.5,532,best_practice,98,Consider using print() for writing to stdout for better readability and automatic flushing.,,517,DATA_INPUT_ERROR_MSG = 'date input error.',"[26947, 62, 1268, 30076, 62, 24908, 62, 5653, 38, 796, 705, 4475, 5128, 4049, 2637]"
‚ö†Ô∏è SAST Risk (Low): Directly writing to sys.stdout without validation can lead to injection vulnerabilities if msg is not sanitized.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 306, 3597, 284, 25064, 13, 19282, 448, 1231, 21201, 460, 1085, 284, 16954, 23805, 611, 31456, 318, 407, 5336, 36951, 13]",0.5,595,sast_risk,100,Directly writing to sys.stdout without validation can lead to injection vulnerabilities if msg is not sanitized.,Low,532,DATE_CHK_MSG = 'Âπ¥Â∫¶ËæìÂÖ•ÈîôËØØÔºöËØ∑ËæìÂÖ•1989Âπ¥‰ª•ÂêéÁöÑÂπ¥‰ªΩÊï∞Â≠óÔºåÊ†ºÂºèÔºöYYYY',"[35, 6158, 62, 3398, 42, 62, 5653, 38, 796, 705, 33176, 112, 41753, 99, 164, 122, 241, 17739, 98, 165, 242, 247, 46237, 107, 171, 120, 248, 46237, 115, 164, 122, 241, 17739, 98, 25475, 33176, 112, 20015, 98, 28938, 236, 21410, 33176, 112, 20015, 121, 46763, 108, 27764, 245, 171, 120, 234, 43718, 120, 28156, 237, 171, 120, 248, 26314, 26314, 6]"
"‚úÖ Best Practice: Flushing stdout immediately ensures that the message is output without delay, which is useful for real-time logging.","[26486, 227, 6705, 19939, 25, 1610, 8023, 14367, 448, 3393, 19047, 326, 262, 3275, 318, 5072, 1231, 5711, 11, 543, 318, 4465, 329, 1103, 12, 2435, 18931, 13]",0.5,627,best_practice,102,"Flushing stdout immediately ensures that the message is output without delay, which is useful for real-time logging.",,595,TOP_PARAS_MSG = 'topÊúâËØØÔºåËØ∑ËæìÂÖ•Êï¥Êï∞Êàñall.',"[35222, 62, 27082, 1921, 62, 5653, 38, 796, 705, 4852, 17312, 231, 46237, 107, 171, 120, 234, 46237, 115, 164, 122, 241, 17739, 98, 46763, 112, 46763, 108, 22755, 244, 439, 2637]"
"‚úÖ Best Practice: Function name starts with an underscore, indicating it's intended for internal use.","[26486, 227, 6705, 19939, 25, 15553, 1438, 4940, 351, 281, 44810, 11, 12739, 340, 338, 5292, 329, 5387, 779, 13]",0.5,690,best_practice,100,"Function name starts with an underscore, indicating it's intended for internal use.",,627,DATE_CHK_MSG = 'Âπ¥Â∫¶ËæìÂÖ•ÈîôËØØÔºöËØ∑ËæìÂÖ•1989Âπ¥‰ª•ÂêéÁöÑÂπ¥‰ªΩÊï∞Â≠óÔºåÊ†ºÂºèÔºöYYYY',"[35, 6158, 62, 3398, 42, 62, 5653, 38, 796, 705, 33176, 112, 41753, 99, 164, 122, 241, 17739, 98, 165, 242, 247, 46237, 107, 171, 120, 248, 46237, 115, 164, 122, 241, 17739, 98, 25475, 33176, 112, 20015, 98, 28938, 236, 21410, 33176, 112, 20015, 121, 46763, 108, 27764, 245, 171, 120, 234, 43718, 120, 28156, 237, 171, 120, 248, 26314, 26314, 6]"
‚úÖ Best Practice: Using 'in' to check membership in a dictionary's keys is efficient.,"[26486, 227, 6705, 19939, 25, 8554, 705, 259, 6, 284, 2198, 9931, 287, 257, 22155, 338, 8251, 318, 6942, 13]",0.5,722,best_practice,102,Using 'in' to check membership in a dictionary's keys is efficient.,,690,TOP_PARAS_MSG = 'topÊúâËØØÔºåËØ∑ËæìÂÖ•Êï¥Êï∞Êàñall.',"[35222, 62, 27082, 1921, 62, 5653, 38, 796, 705, 4852, 17312, 231, 46237, 107, 171, 120, 234, 46237, 115, 164, 122, 241, 17739, 98, 46763, 112, 46763, 108, 22755, 244, 439, 2637]"
‚ö†Ô∏è SAST Risk (Low): Raising a generic TypeError without additional context can make debugging difficult.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 7567, 1710, 257, 14276, 5994, 12331, 1231, 3224, 4732, 460, 787, 28769, 2408, 13]",0.5,722,sast_risk,104,Raising a generic TypeError without additional context can make debugging difficult.,Low,722,,[]
‚úÖ Best Practice: Explicitly returning True improves readability and clarity of the function's intent.,"[26486, 227, 6705, 19939, 25, 11884, 306, 8024, 6407, 19575, 1100, 1799, 290, 16287, 286, 262, 2163, 338, 6824, 13]",0.5,733,best_practice,107,Explicitly returning True improves readability and clarity of the function's intent.,,722,DICT_NAV_EQUITY = {,"[35, 18379, 62, 4535, 53, 62, 36, 10917, 9050, 796, 1391]"
"‚úÖ Best Practice: Function name starts with an underscore, indicating it's intended for internal use.","[26486, 227, 6705, 19939, 25, 15553, 1438, 4940, 351, 281, 44810, 11, 12739, 340, 338, 5292, 329, 5387, 779, 13]",1.0,796,best_practice,105,"Function name starts with an underscore, indicating it's intended for internal use.",,733,OFT_MSG = u'ÂºÄÊîæÂûãÂü∫ÈáëÁ±ªÂûãËæìÂÖ•ÊúâËØØÔºåËØ∑ËæìÂÖ•all„ÄÅequity„ÄÅmix„ÄÅbond„ÄÅmonetary„ÄÅqdii',"[46, 9792, 62, 5653, 38, 796, 334, 6, 28156, 222, 162, 242, 122, 161, 252, 233, 161, 253, 118, 34932, 239, 163, 109, 119, 161, 252, 233, 164, 122, 241, 17739, 98, 17312, 231, 46237, 107, 171, 120, 234, 46237, 115, 164, 122, 241, 17739, 98, 439, 23513, 4853, 414, 23513, 19816, 23513, 65, 623, 23513, 2144, 8527, 23513, 80, 67, 4178, 6]"
‚úÖ Best Practice: Using isinstance to check the type of 'year' ensures type safety.,"[26486, 227, 6705, 19939, 25, 8554, 318, 39098, 284, 2198, 262, 2099, 286, 705, 1941, 6, 19047, 2099, 3747, 13]",0.5,807,best_practice,107,Using isinstance to check the type of 'year' ensures type safety.,,796,DICT_NAV_EQUITY = {,"[35, 18379, 62, 4535, 53, 62, 36, 10917, 9050, 796, 1391]"
‚ö†Ô∏è SAST Risk (Low): Potential information disclosure if DATE_CHK_MSG contains sensitive information.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 1321, 13019, 611, 360, 6158, 62, 3398, 42, 62, 5653, 38, 4909, 8564, 1321, 13]",0.5,818,sast_risk,108,Potential information disclosure if DATE_CHK_MSG contains sensitive information.,Low,807,"    'fbrq': 'date',","[220, 220, 220, 705, 69, 1671, 80, 10354, 705, 4475, 3256]"
‚úÖ Best Practice: Using isinstance to check the type of 'quarter' ensures type safety.,"[26486, 227, 6705, 19939, 25, 8554, 318, 39098, 284, 2198, 262, 2099, 286, 705, 24385, 6, 19047, 2099, 3747, 13]",0.5,827,best_practice,111,Using isinstance to check the type of 'quarter' ensures type safety.,,818,    'change': 'change',"[220, 220, 220, 705, 3803, 10354, 705, 3803, 6]"
‚ö†Ô∏è SAST Risk (Low): Potential information disclosure if DATE_CHK_Q_MSG contains sensitive information.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 1321, 13019, 611, 360, 6158, 62, 3398, 42, 62, 48, 62, 5653, 38, 4909, 8564, 1321, 13]",0.5,836,sast_risk,111,Potential information disclosure if DATE_CHK_Q_MSG contains sensitive information.,Low,827,    'change': 'change',"[220, 220, 220, 705, 3803, 10354, 705, 3803, 6]"
