[
  {
    "line": 8,
    "text": "@group : tushare.pro",
    "annotation": "\ud83e\udde0 ML Signal: Usage of JSON library for data serialization/deserialization",
    "confidence": 0.5,
    "tokens": [
      31,
      8094,
      1058,
      256,
      1530,
      533,
      13,
      1676
    ],
    "start_token": 0,
    "end_token": 8,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      19449,
      5888,
      329,
      1366,
      11389,
      1634,
      14,
      8906,
      48499,
      1634
    ],
    "label": "ml_signal",
    "reason": "Usage of JSON library for data serialization/deserialization"
  },
  {
    "line": 10,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of functools for higher-order functions",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 8,
    "end_token": 8,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      1257,
      310,
      10141,
      329,
      2440,
      12,
      2875,
      5499
    ],
    "label": "ml_signal",
    "reason": "Usage of functools for higher-order functions"
  },
  {
    "line": 12,
    "text": "import simplejson as json",
    "annotation": "\ud83e\udde0 ML Signal: Usage of requests library for HTTP requests",
    "confidence": 0.5,
    "tokens": [
      11748,
      2829,
      17752,
      355,
      33918
    ],
    "start_token": 8,
    "end_token": 13,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      7007,
      5888,
      329,
      14626,
      7007
    ],
    "label": "ml_signal",
    "reason": "Usage of requests library for HTTP requests"
  },
  {
    "line": 11,
    "text": "import pandas as pd",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Storing sensitive information like tokens in class variables can lead to security vulnerabilities.",
    "confidence": 1.0,
    "tokens": [
      11748,
      19798,
      292,
      355,
      279,
      67
    ],
    "start_token": 13,
    "end_token": 19,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      520,
      3255,
      8564,
      1321,
      588,
      16326,
      287,
      1398,
      9633,
      460,
      1085,
      284,
      2324,
      23805,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Storing sensitive information like tokens in class variables can lead to security vulnerabilities."
  },
  {
    "line": 12,
    "text": "import simplejson as json",
    "annotation": "\u2705 Best Practice: Consider using environment variables or secure vaults to manage sensitive information.",
    "confidence": 1.0,
    "tokens": [
      11748,
      2829,
      17752,
      355,
      33918
    ],
    "start_token": 19,
    "end_token": 24,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      2858,
      9633,
      393,
      5713,
      410,
      13185,
      284,
      6687,
      8564,
      1321,
      13
    ],
    "label": "best_practice",
    "reason": "Consider using environment variables or secure vaults to manage sensitive information."
  },
  {
    "line": 14,
    "text": "import requests",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Using HTTP instead of HTTPS can expose data to interception and man-in-the-middle attacks.",
    "confidence": 1.0,
    "tokens": [
      11748,
      7007
    ],
    "start_token": 24,
    "end_token": 26,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      8554,
      14626,
      2427,
      286,
      38288,
      460,
      15651,
      1366,
      284,
      28759,
      290,
      582,
      12,
      259,
      12,
      1169,
      12,
      27171,
      3434,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Using HTTP instead of HTTPS can expose data to interception and man-in-the-middle attacks."
  },
  {
    "line": 15,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Constructor method with parameters, useful for model training on class instantiation patterns",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 26,
    "end_token": 26,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      28407,
      273,
      2446,
      351,
      10007,
      11,
      4465,
      329,
      2746,
      3047,
      319,
      1398,
      9113,
      3920,
      7572
    ],
    "label": "ml_signal",
    "reason": "Constructor method with parameters, useful for model training on class instantiation patterns"
  },
  {
    "line": 15,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of default parameter values for flexibility and ease of use",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 26,
    "end_token": 26,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      4277,
      11507,
      3815,
      329,
      13688,
      290,
      10152,
      286,
      779
    ],
    "label": "best_practice",
    "reason": "Use of default parameter values for flexibility and ease of use"
  },
  {
    "line": 23,
    "text": "        \"\"\"",
    "annotation": "\u2705 Best Practice: Use of docstring to describe parameters and their purpose",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 26,
    "end_token": 34,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2205,
      8841,
      284,
      6901,
      10007,
      290,
      511,
      4007
    ],
    "label": "best_practice",
    "reason": "Use of docstring to describe parameters and their purpose"
  },
  {
    "line": 24,
    "text": "        Parameters",
    "annotation": "\u2705 Best Practice: Use of double underscore for private variable to indicate intended private access",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      40117
    ],
    "start_token": 34,
    "end_token": 42,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      4274,
      44810,
      329,
      2839,
      7885,
      284,
      7603,
      5292,
      2839,
      1895
    ],
    "label": "best_practice",
    "reason": "Use of double underscore for private variable to indicate intended private access"
  },
  {
    "line": 24,
    "text": "        Parameters",
    "annotation": "\u2705 Best Practice: Use of double underscore for private variable to indicate intended private access",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      40117
    ],
    "start_token": 42,
    "end_token": 50,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      4274,
      44810,
      329,
      2839,
      7885,
      284,
      7603,
      5292,
      2839,
      1895
    ],
    "label": "best_practice",
    "reason": "Use of double underscore for private variable to indicate intended private access"
  },
  {
    "line": 23,
    "text": "        \"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Method signature with variable arguments can indicate flexible API usage patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 50,
    "end_token": 58,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      9877,
      351,
      7885,
      7159,
      460,
      7603,
      12846,
      7824,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Method signature with variable arguments can indicate flexible API usage patterns"
  },
  {
    "line": 31,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential exposure of sensitive information if __token is not handled securely",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 58,
    "end_token": 58,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      7111,
      286,
      8564,
      1321,
      611,
      11593,
      30001,
      318,
      407,
      12118,
      30835
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential exposure of sensitive information if __token is not handled securely"
  },
  {
    "line": 32,
    "text": "    def query(self, api_name, fields='', **kwargs):",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): No validation or sanitization of input parameters before making the request",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      12405,
      7,
      944,
      11,
      40391,
      62,
      3672,
      11,
      7032,
      11639,
      3256,
      12429,
      46265,
      22046,
      2599
    ],
    "start_token": 58,
    "end_token": 77,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      1400,
      21201,
      393,
      5336,
      270,
      1634,
      286,
      5128,
      10007,
      878,
      1642,
      262,
      2581
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "No validation or sanitization of input parameters before making the request"
  },
  {
    "line": 34,
    "text": "            'api_name': api_name,",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): No error handling for network issues or request failures",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      705,
      15042,
      62,
      3672,
      10354,
      40391,
      62,
      3672,
      11
    ],
    "start_token": 77,
    "end_token": 97,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      1400,
      4049,
      9041,
      329,
      3127,
      2428,
      393,
      2581,
      15536
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "No error handling for network issues or request failures"
  },
  {
    "line": 36,
    "text": "            'params': kwargs,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Assumes 'code' and 'msg' keys are always present in the response",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      705,
      37266,
      10354,
      479,
      86,
      22046,
      11
    ],
    "start_token": 97,
    "end_token": 115,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      2195,
      8139,
      705,
      8189,
      6,
      290,
      705,
      19662,
      6,
      8251,
      389,
      1464,
      1944,
      287,
      262,
      2882
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Assumes 'code' and 'msg' keys are always present in the response"
  },
  {
    "line": 39,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Assumes 'fields' and 'items' keys are always present in the response",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 115,
    "end_token": 115,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      2195,
      8139,
      705,
      25747,
      6,
      290,
      705,
      23814,
      6,
      8251,
      389,
      1464,
      1944,
      287,
      262,
      2882
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Assumes 'fields' and 'items' keys are always present in the response"
  },
  {
    "line": 39,
    "text": "",
    "annotation": "\u2705 Best Practice: Returning a DataFrame directly can be efficient for data manipulation",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 115,
    "end_token": 115,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      42882,
      257,
      6060,
      19778,
      3264,
      460,
      307,
      6942,
      329,
      1366,
      17512
    ],
    "label": "best_practice",
    "reason": "Returning a DataFrame directly can be efficient for data manipulation"
  },
  {
    "line": 38,
    "text": "        }",
    "annotation": "\u2705 Best Practice: Use of __getattr__ allows for dynamic attribute access, enhancing flexibility.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1782
    ],
    "start_token": 115,
    "end_token": 123,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      1136,
      35226,
      834,
      3578,
      329,
      8925,
      11688,
      1895,
      11,
      27496,
      13688,
      13
    ],
    "label": "best_practice",
    "reason": "Use of __getattr__ allows for dynamic attribute access, enhancing flexibility."
  },
  {
    "line": 39,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Dynamic attribute access pattern can be used to infer usage of flexible APIs.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 123,
    "end_token": 123,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      26977,
      11688,
      1895,
      3912,
      460,
      307,
      973,
      284,
      13249,
      8748,
      286,
      12846,
      23113,
      13
    ],
    "label": "ml_signal",
    "reason": "Dynamic attribute access pattern can be used to infer usage of flexible APIs."
  },
  {
    "line": 39,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of functools.partial to pre-fill arguments in function calls, improving code reusability.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 123,
    "end_token": 123,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      1257,
      310,
      10141,
      13,
      47172,
      284,
      662,
      12,
      20797,
      7159,
      287,
      2163,
      3848,
      11,
      10068,
      2438,
      302,
      385,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Use of functools.partial to pre-fill arguments in function calls, improving code reusability."
  }
]