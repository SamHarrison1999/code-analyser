[
  {
    "line": 8,
    "text": "\"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Importing specific modules from a package indicates usage patterns and dependencies",
    "confidence": 1.0,
    "tokens": [
      37811
    ],
    "start_token": 0,
    "end_token": 1,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      2176,
      13103,
      422,
      257,
      5301,
      9217,
      8748,
      7572,
      290,
      20086
    ],
    "label": "ml_signal",
    "reason": "Importing specific modules from a package indicates usage patterns and dependencies"
  },
  {
    "line": 10,
    "text": "from pytdx.exhq import TdxExHq_API",
    "annotation": "\ud83e\udde0 ML Signal: Importing specific modules from a package indicates usage patterns and dependencies",
    "confidence": 1.0,
    "tokens": [
      6738,
      12972,
      8671,
      87,
      13,
      1069,
      71,
      80,
      1330,
      309,
      34350,
      3109,
      39,
      80,
      62,
      17614
    ],
    "start_token": 1,
    "end_token": 17,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      2176,
      13103,
      422,
      257,
      5301,
      9217,
      8748,
      7572,
      290,
      20086
    ],
    "label": "ml_signal",
    "reason": "Importing specific modules from a package indicates usage patterns and dependencies"
  },
  {
    "line": 12,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Importing specific modules from a package indicates usage patterns and dependencies",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 17,
    "end_token": 17,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      2176,
      13103,
      422,
      257,
      5301,
      9217,
      8748,
      7572,
      290,
      20086
    ],
    "label": "ml_signal",
    "reason": "Importing specific modules from a package indicates usage patterns and dependencies"
  },
  {
    "line": 12,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of retry logic pattern",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 17,
    "end_token": 17,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1005,
      563,
      9156,
      3912
    ],
    "label": "ml_signal",
    "reason": "Use of retry logic pattern"
  },
  {
    "line": 15,
    "text": "    for _ in range(retry_count):",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potentially unsafe API instantiation without error handling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      329,
      4808,
      287,
      2837,
      7,
      1186,
      563,
      62,
      9127,
      2599
    ],
    "start_token": 17,
    "end_token": 30,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6902,
      3746,
      21596,
      7824,
      9113,
      3920,
      1231,
      4049,
      9041
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potentially unsafe API instantiation without error handling"
  },
  {
    "line": 17,
    "text": "            api = TdxHq_API(heartbeat=True)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potentially unsafe network connection without error handling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      40391,
      796,
      309,
      34350,
      39,
      80,
      62,
      17614,
      7,
      11499,
      12945,
      28,
      17821,
      8
    ],
    "start_token": 30,
    "end_token": 55,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6902,
      3746,
      21596,
      3127,
      4637,
      1231,
      4049,
      9041
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potentially unsafe network connection without error handling"
  },
  {
    "line": 20,
    "text": "            print(e)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Generic exception handling; may hide specific errors",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      68,
      8
    ],
    "start_token": 55,
    "end_token": 70,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      42044,
      6631,
      9041,
      26,
      743,
      7808,
      2176,
      8563
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Generic exception handling; may hide specific errors"
  },
  {
    "line": 23,
    "text": "    raise IOError(ct.NETWORK_URL_ERROR_MSG)",
    "annotation": "\u2705 Best Practice: Return early to avoid unnecessary iterations",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      5298,
      24418,
      12331,
      7,
      310,
      13,
      12884,
      33249,
      62,
      21886,
      62,
      24908,
      62,
      5653,
      38,
      8
    ],
    "start_token": 70,
    "end_token": 89,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8229,
      1903,
      284,
      3368,
      13114,
      34820
    ],
    "label": "best_practice",
    "reason": "Return early to avoid unnecessary iterations"
  },
  {
    "line": 25,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Raising a generic IOError; consider using a more specific exception",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 89,
    "end_token": 89,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      7567,
      1710,
      257,
      14276,
      24418,
      12331,
      26,
      2074,
      1262,
      257,
      517,
      2176,
      6631
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Raising a generic IOError; consider using a more specific exception"
  },
  {
    "line": 21,
    "text": "        else:",
    "annotation": "\ud83e\udde0 ML Signal: Function with retry logic pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 89,
    "end_token": 98,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      351,
      1005,
      563,
      9156,
      3912
    ],
    "label": "ml_signal",
    "reason": "Function with retry logic pattern"
  },
  {
    "line": 23,
    "text": "    raise IOError(ct.NETWORK_URL_ERROR_MSG)",
    "annotation": "\ud83e\udde0 ML Signal: Loop with retry pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      5298,
      24418,
      12331,
      7,
      310,
      13,
      12884,
      33249,
      62,
      21886,
      62,
      24908,
      62,
      5653,
      38,
      8
    ],
    "start_token": 98,
    "end_token": 117,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      26304,
      351,
      1005,
      563,
      3912
    ],
    "label": "ml_signal",
    "reason": "Loop with retry pattern"
  },
  {
    "line": 25,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: API instantiation pattern",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 117,
    "end_token": 117,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7824,
      9113,
      3920,
      3912
    ],
    "label": "ml_signal",
    "reason": "API instantiation pattern"
  },
  {
    "line": 27,
    "text": "    for _ in range(retry_count):",
    "annotation": "\ud83e\udde0 ML Signal: API connection pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      329,
      4808,
      287,
      2837,
      7,
      1186,
      563,
      62,
      9127,
      2599
    ],
    "start_token": 117,
    "end_token": 130,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7824,
      4637,
      3912
    ],
    "label": "ml_signal",
    "reason": "API connection pattern"
  },
  {
    "line": 31,
    "text": "        except Exception as e:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Catching broad exception",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2845,
      35528,
      355,
      304,
      25
    ],
    "start_token": 130,
    "end_token": 142,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      327,
      19775,
      3154,
      6631
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Catching broad exception"
  },
  {
    "line": 34,
    "text": "            return api",
    "annotation": "\ud83e\udde0 ML Signal: Successful API connection return pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      40391
    ],
    "start_token": 142,
    "end_token": 155,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      16282,
      913,
      7824,
      4637,
      1441,
      3912
    ],
    "label": "ml_signal",
    "reason": "Successful API connection return pattern"
  },
  {
    "line": 35,
    "text": "    raise IOError(ct.NETWORK_URL_ERROR_MSG)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Raising generic IOError",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      5298,
      24418,
      12331,
      7,
      310,
      13,
      12884,
      33249,
      62,
      21886,
      62,
      24908,
      62,
      5653,
      38,
      8
    ],
    "start_token": 155,
    "end_token": 174,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      7567,
      1710,
      14276,
      24418,
      12331
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Raising generic IOError"
  },
  {
    "line": 32,
    "text": "            print(e)",
    "annotation": "\ud83e\udde0 ML Signal: Use of retry pattern for network operations",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      68,
      8
    ],
    "start_token": 174,
    "end_token": 189,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1005,
      563,
      3912,
      329,
      3127,
      4560
    ],
    "label": "ml_signal",
    "reason": "Use of retry pattern for network operations"
  },
  {
    "line": 35,
    "text": "    raise IOError(ct.NETWORK_URL_ERROR_MSG)",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of API object with heartbeat enabled",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      5298,
      24418,
      12331,
      7,
      310,
      13,
      12884,
      33249,
      62,
      21886,
      62,
      24908,
      62,
      5653,
      38,
      8
    ],
    "start_token": 189,
    "end_token": 208,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      7824,
      2134,
      351,
      36051,
      9343
    ],
    "label": "ml_signal",
    "reason": "Instantiation of API object with heartbeat enabled"
  },
  {
    "line": 37,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential for unhandled exceptions if connect fails",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 208,
    "end_token": 208,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      329,
      555,
      38788,
      13269,
      611,
      2018,
      10143
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential for unhandled exceptions if connect fails"
  },
  {
    "line": 40,
    "text": "        try:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Generic exception handling, may hide specific errors",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1949,
      25
    ],
    "start_token": 208,
    "end_token": 217,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      42044,
      6631,
      9041,
      11,
      743,
      7808,
      2176,
      8563
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Generic exception handling, may hide specific errors"
  },
  {
    "line": 43,
    "text": "        except Exception as e:",
    "annotation": "\u2705 Best Practice: Return early to avoid unnecessary iterations",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2845,
      35528,
      355,
      304,
      25
    ],
    "start_token": 217,
    "end_token": 229,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8229,
      1903,
      284,
      3368,
      13114,
      34820
    ],
    "label": "best_practice",
    "reason": "Return early to avoid unnecessary iterations"
  },
  {
    "line": 45,
    "text": "        else:",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Raising a generic IOError without specific context",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 229,
    "end_token": 238,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      7567,
      1710,
      257,
      14276,
      24418,
      12331,
      1231,
      2176,
      4732
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Raising a generic IOError without specific context"
  },
  {
    "line": 41,
    "text": "            api = TdxExHq_API(heartbeat=True)",
    "annotation": "\ud83e\udde0 ML Signal: Function returning multiple API instances",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      40391,
      796,
      309,
      34350,
      3109,
      39,
      80,
      62,
      17614,
      7,
      11499,
      12945,
      28,
      17821,
      8
    ],
    "start_token": 238,
    "end_token": 264,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      8024,
      3294,
      7824,
      10245
    ],
    "label": "ml_signal",
    "reason": "Function returning multiple API instances"
  },
  {
    "line": 42,
    "text": "            api.connect(ct._get_xxserver(), ct.X_PORT)",
    "annotation": "\u2705 Best Practice: Consider adding docstring to describe the function's purpose and return values",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      40391,
      13,
      8443,
      7,
      310,
      13557,
      1136,
      62,
      5324,
      15388,
      22784,
      269,
      83,
      13,
      55,
      62,
      15490,
      8
    ],
    "start_token": 264,
    "end_token": 293,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      4375,
      2205,
      8841,
      284,
      6901,
      262,
      2163,
      338,
      4007,
      290,
      1441,
      3815
    ],
    "label": "best_practice",
    "reason": "Consider adding docstring to describe the function's purpose and return values"
  },
  {
    "line": 44,
    "text": "            print(e)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Ensure api() and xapi() are safe and do not expose sensitive data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      68,
      8
    ],
    "start_token": 293,
    "end_token": 308,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      48987,
      40391,
      3419,
      290,
      2124,
      15042,
      3419,
      389,
      3338,
      290,
      466,
      407,
      15651,
      8564,
      1366
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Ensure api() and xapi() are safe and do not expose sensitive data"
  },
  {
    "line": 46,
    "text": "            return api",
    "annotation": "\u2705 Best Practice: Ensure that resources are properly released in a finally block.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      40391
    ],
    "start_token": 308,
    "end_token": 321,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      48987,
      326,
      4133,
      389,
      6105,
      2716,
      287,
      257,
      3443,
      2512,
      13
    ],
    "label": "best_practice",
    "reason": "Ensure that resources are properly released in a finally block."
  },
  {
    "line": 49,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Catching broad exceptions can hide specific errors and make debugging difficult.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 321,
    "end_token": 321,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      327,
      19775,
      3154,
      13269,
      460,
      7808,
      2176,
      8563,
      290,
      787,
      28769,
      2408,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Catching broad exceptions can hide specific errors and make debugging difficult."
  },
  {
    "line": 49,
    "text": "",
    "annotation": "\u2705 Best Practice: Log exceptions using a logging framework instead of print for better control over logging levels and outputs.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 321,
    "end_token": 321,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5972,
      13269,
      1262,
      257,
      18931,
      9355,
      2427,
      286,
      3601,
      329,
      1365,
      1630,
      625,
      18931,
      2974,
      290,
      23862,
      13
    ],
    "label": "best_practice",
    "reason": "Log exceptions using a logging framework instead of print for better control over logging levels and outputs."
  }
]