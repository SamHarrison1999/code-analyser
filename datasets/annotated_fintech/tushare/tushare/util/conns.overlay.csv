annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
üß† ML Signal: Importing specific modules from a package indicates usage patterns and dependencies,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 13103, 422, 257, 5301, 9217, 8748, 7572, 290, 20086]",1.0,1,ml_signal,8,Importing specific modules from a package indicates usage patterns and dependencies,,0,"""""""",[37811]
üß† ML Signal: Importing specific modules from a package indicates usage patterns and dependencies,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 13103, 422, 257, 5301, 9217, 8748, 7572, 290, 20086]",1.0,17,ml_signal,10,Importing specific modules from a package indicates usage patterns and dependencies,,1,from pytdx.exhq import TdxExHq_API,"[6738, 12972, 8671, 87, 13, 1069, 71, 80, 1330, 309, 34350, 3109, 39, 80, 62, 17614]"
üß† ML Signal: Importing specific modules from a package indicates usage patterns and dependencies,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 13103, 422, 257, 5301, 9217, 8748, 7572, 290, 20086]",1.0,17,ml_signal,12,Importing specific modules from a package indicates usage patterns and dependencies,,17,,[]
üß† ML Signal: Use of retry logic pattern,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1005, 563, 9156, 3912]",0.5,17,ml_signal,12,Use of retry logic pattern,,17,,[]
‚ö†Ô∏è SAST Risk (Low): Potentially unsafe API instantiation without error handling,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6902, 3746, 21596, 7824, 9113, 3920, 1231, 4049, 9041]",0.5,30,sast_risk,15,Potentially unsafe API instantiation without error handling,Low,17,    for _ in range(retry_count):,"[220, 220, 220, 329, 4808, 287, 2837, 7, 1186, 563, 62, 9127, 2599]"
‚ö†Ô∏è SAST Risk (Low): Potentially unsafe network connection without error handling,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6902, 3746, 21596, 3127, 4637, 1231, 4049, 9041]",0.5,55,sast_risk,17,Potentially unsafe network connection without error handling,Low,30,            api = TdxHq_API(heartbeat=True),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 40391, 796, 309, 34350, 39, 80, 62, 17614, 7, 11499, 12945, 28, 17821, 8]"
‚ö†Ô∏è SAST Risk (Low): Generic exception handling; may hide specific errors,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 42044, 6631, 9041, 26, 743, 7808, 2176, 8563]",1.0,70,sast_risk,20,Generic exception handling; may hide specific errors,Low,55,            print(e),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 3601, 7, 68, 8]"
‚úÖ Best Practice: Return early to avoid unnecessary iterations,"[26486, 227, 6705, 19939, 25, 8229, 1903, 284, 3368, 13114, 34820]",0.5,89,best_practice,23,Return early to avoid unnecessary iterations,,70,    raise IOError(ct.NETWORK_URL_ERROR_MSG),"[220, 220, 220, 5298, 24418, 12331, 7, 310, 13, 12884, 33249, 62, 21886, 62, 24908, 62, 5653, 38, 8]"
‚ö†Ô∏è SAST Risk (Low): Raising a generic IOError; consider using a more specific exception,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 7567, 1710, 257, 14276, 24418, 12331, 26, 2074, 1262, 257, 517, 2176, 6631]",0.5,89,sast_risk,25,Raising a generic IOError; consider using a more specific exception,Low,89,,[]
üß† ML Signal: Function with retry logic pattern,"[8582, 100, 254, 10373, 26484, 25, 15553, 351, 1005, 563, 9156, 3912]",1.0,98,ml_signal,21,Function with retry logic pattern,,89,        else:,"[220, 220, 220, 220, 220, 220, 220, 2073, 25]"
üß† ML Signal: Loop with retry pattern,"[8582, 100, 254, 10373, 26484, 25, 26304, 351, 1005, 563, 3912]",1.0,117,ml_signal,23,Loop with retry pattern,,98,    raise IOError(ct.NETWORK_URL_ERROR_MSG),"[220, 220, 220, 5298, 24418, 12331, 7, 310, 13, 12884, 33249, 62, 21886, 62, 24908, 62, 5653, 38, 8]"
üß† ML Signal: API instantiation pattern,"[8582, 100, 254, 10373, 26484, 25, 7824, 9113, 3920, 3912]",1.0,117,ml_signal,25,API instantiation pattern,,117,,[]
üß† ML Signal: API connection pattern,"[8582, 100, 254, 10373, 26484, 25, 7824, 4637, 3912]",1.0,130,ml_signal,27,API connection pattern,,117,    for _ in range(retry_count):,"[220, 220, 220, 329, 4808, 287, 2837, 7, 1186, 563, 62, 9127, 2599]"
‚ö†Ô∏è SAST Risk (Low): Catching broad exception,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 327, 19775, 3154, 6631]",1.0,142,sast_risk,31,Catching broad exception,Low,130,        except Exception as e:,"[220, 220, 220, 220, 220, 220, 220, 2845, 35528, 355, 304, 25]"
üß† ML Signal: Successful API connection return pattern,"[8582, 100, 254, 10373, 26484, 25, 16282, 913, 7824, 4637, 1441, 3912]",1.0,155,ml_signal,34,Successful API connection return pattern,,142,            return api,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441, 40391]"
‚ö†Ô∏è SAST Risk (Low): Raising generic IOError,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 7567, 1710, 14276, 24418, 12331]",0.5,174,sast_risk,35,Raising generic IOError,Low,155,    raise IOError(ct.NETWORK_URL_ERROR_MSG),"[220, 220, 220, 5298, 24418, 12331, 7, 310, 13, 12884, 33249, 62, 21886, 62, 24908, 62, 5653, 38, 8]"
üß† ML Signal: Use of retry pattern for network operations,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1005, 563, 3912, 329, 3127, 4560]",0.5,189,ml_signal,32,Use of retry pattern for network operations,,174,            print(e),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 3601, 7, 68, 8]"
üß† ML Signal: Instantiation of API object with heartbeat enabled,"[8582, 100, 254, 10373, 26484, 25, 24470, 3920, 286, 7824, 2134, 351, 36051, 9343]",0.5,208,ml_signal,35,Instantiation of API object with heartbeat enabled,,189,    raise IOError(ct.NETWORK_URL_ERROR_MSG),"[220, 220, 220, 5298, 24418, 12331, 7, 310, 13, 12884, 33249, 62, 21886, 62, 24908, 62, 5653, 38, 8]"
‚ö†Ô∏è SAST Risk (Medium): Potential for unhandled exceptions if connect fails,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 32480, 329, 555, 38788, 13269, 611, 2018, 10143]",0.5,208,sast_risk,37,Potential for unhandled exceptions if connect fails,Medium,208,,[]
"‚ö†Ô∏è SAST Risk (Low): Generic exception handling, may hide specific errors","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 42044, 6631, 9041, 11, 743, 7808, 2176, 8563]",1.0,217,sast_risk,40,"Generic exception handling, may hide specific errors",Low,208,        try:,"[220, 220, 220, 220, 220, 220, 220, 1949, 25]"
‚úÖ Best Practice: Return early to avoid unnecessary iterations,"[26486, 227, 6705, 19939, 25, 8229, 1903, 284, 3368, 13114, 34820]",0.5,229,best_practice,43,Return early to avoid unnecessary iterations,,217,        except Exception as e:,"[220, 220, 220, 220, 220, 220, 220, 2845, 35528, 355, 304, 25]"
‚ö†Ô∏è SAST Risk (Medium): Raising a generic IOError without specific context,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 7567, 1710, 257, 14276, 24418, 12331, 1231, 2176, 4732]",1.0,238,sast_risk,45,Raising a generic IOError without specific context,Medium,229,        else:,"[220, 220, 220, 220, 220, 220, 220, 2073, 25]"
üß† ML Signal: Function returning multiple API instances,"[8582, 100, 254, 10373, 26484, 25, 15553, 8024, 3294, 7824, 10245]",0.5,264,ml_signal,41,Function returning multiple API instances,,238,            api = TdxExHq_API(heartbeat=True),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 40391, 796, 309, 34350, 3109, 39, 80, 62, 17614, 7, 11499, 12945, 28, 17821, 8]"
‚úÖ Best Practice: Consider adding docstring to describe the function's purpose and return values,"[26486, 227, 6705, 19939, 25, 12642, 4375, 2205, 8841, 284, 6901, 262, 2163, 338, 4007, 290, 1441, 3815]",1.0,293,best_practice,42,Consider adding docstring to describe the function's purpose and return values,,264,"            api.connect(ct._get_xxserver(), ct.X_PORT)","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 40391, 13, 8443, 7, 310, 13557, 1136, 62, 5324, 15388, 22784, 269, 83, 13, 55, 62, 15490, 8]"
‚ö†Ô∏è SAST Risk (Low): Ensure api() and xapi() are safe and do not expose sensitive data,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 40391, 3419, 290, 2124, 15042, 3419, 389, 3338, 290, 466, 407, 15651, 8564, 1366]",0.5,308,sast_risk,44,Ensure api() and xapi() are safe and do not expose sensitive data,Low,293,            print(e),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 3601, 7, 68, 8]"
‚úÖ Best Practice: Ensure that resources are properly released in a finally block.,"[26486, 227, 6705, 19939, 25, 48987, 326, 4133, 389, 6105, 2716, 287, 257, 3443, 2512, 13]",0.5,321,best_practice,46,Ensure that resources are properly released in a finally block.,,308,            return api,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441, 40391]"
‚ö†Ô∏è SAST Risk (Low): Catching broad exceptions can hide specific errors and make debugging difficult.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 327, 19775, 3154, 13269, 460, 7808, 2176, 8563, 290, 787, 28769, 2408, 13]",1.0,321,sast_risk,49,Catching broad exceptions can hide specific errors and make debugging difficult.,Low,321,,[]
‚úÖ Best Practice: Log exceptions using a logging framework instead of print for better control over logging levels and outputs.,"[26486, 227, 6705, 19939, 25, 5972, 13269, 1262, 257, 18931, 9355, 2427, 286, 3601, 329, 1365, 1630, 625, 18931, 2974, 290, 23862, 13]",0.5,321,best_practice,49,Log exceptions using a logging framework instead of print for better control over logging levels and outputs.,,321,,[]
