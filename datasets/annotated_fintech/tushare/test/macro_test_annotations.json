[
  {
    "line": 6,
    "text": "import unittest",
    "annotation": "\ud83e\udde0 ML Signal: Importing a specific module from a package",
    "confidence": 0.5,
    "tokens": [
      11748,
      555,
      715,
      395
    ],
    "start_token": 0,
    "end_token": 4,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      257,
      2176,
      8265,
      422,
      257,
      5301
    ],
    "label": "ml_signal",
    "reason": "Importing a specific module from a package"
  },
  {
    "line": 7,
    "text": "import tushare.stock.macro as fd",
    "annotation": "\u2705 Best Practice: Inheriting from unittest.TestCase to create a test case class",
    "confidence": 1.0,
    "tokens": [
      11748,
      256,
      1530,
      533,
      13,
      13578,
      13,
      20285,
      305,
      355,
      277,
      67
    ],
    "start_token": 4,
    "end_token": 16,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      47025,
      1780,
      422,
      555,
      715,
      395,
      13,
      14402,
      20448,
      284,
      2251,
      257,
      1332,
      1339,
      1398
    ],
    "label": "best_practice",
    "reason": "Inheriting from unittest.TestCase to create a test case class"
  },
  {
    "line": 8,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Method name follows a common test naming pattern",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 16,
    "end_token": 16,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      1438,
      5679,
      257,
      2219,
      1332,
      19264,
      3912
    ],
    "label": "ml_signal",
    "reason": "Method name follows a common test naming pattern"
  },
  {
    "line": 10,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Using print statements in tests can clutter output and is not a best practice for test assertions",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 16,
    "end_token": 16,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      8554,
      3601,
      6299,
      287,
      5254,
      460,
      45343,
      5072,
      290,
      318,
      407,
      257,
      1266,
      3357,
      329,
      1332,
      29965
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Using print statements in tests can clutter output and is not a best practice for test assertions"
  },
  {
    "line": 10,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Method name follows a common test naming pattern",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 16,
    "end_token": 16,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      1438,
      5679,
      257,
      2219,
      1332,
      19264,
      3912
    ],
    "label": "ml_signal",
    "reason": "Method name follows a common test naming pattern"
  },
  {
    "line": 12,
    "text": "        print(fd.get_gdp_year())",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of print statements in test code can clutter output",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      16344,
      13,
      1136,
      62,
      21287,
      79,
      62,
      1941,
      28955
    ],
    "start_token": 16,
    "end_token": 34,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      3601,
      6299,
      287,
      1332,
      2438,
      460,
      45343,
      5072
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of print statements in test code can clutter output"
  },
  {
    "line": 13,
    "text": "              ",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with a test prefix, indicating a test case",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 34,
    "end_token": 48,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      257,
      1332,
      21231,
      11,
      12739,
      257,
      1332,
      1339
    ],
    "label": "ml_signal",
    "reason": "Function definition with a test prefix, indicating a test case"
  },
  {
    "line": 14,
    "text": "    def test_get_gdp_quarter(self):",
    "annotation": "\u2705 Best Practice: Consider using a testing framework like unittest or pytest",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      21287,
      79,
      62,
      24385,
      7,
      944,
      2599
    ],
    "start_token": 48,
    "end_token": 63,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      257,
      4856,
      9355,
      588,
      555,
      715,
      395,
      393,
      12972,
      9288
    ],
    "label": "best_practice",
    "reason": "Consider using a testing framework like unittest or pytest"
  },
  {
    "line": 16,
    "text": "         ",
    "annotation": "\ud83e\udde0 ML Signal: Direct function call within a test, indicating a pattern of testing",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 63,
    "end_token": 72,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      4128,
      2163,
      869,
      1626,
      257,
      1332,
      11,
      12739,
      257,
      3912,
      286,
      4856
    ],
    "label": "ml_signal",
    "reason": "Direct function call within a test, indicating a pattern of testing"
  },
  {
    "line": 17,
    "text": "    def test_get_gdp_for(self):",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for missing assertions in test case",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      21287,
      79,
      62,
      1640,
      7,
      944,
      2599
    ],
    "start_token": 72,
    "end_token": 87,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      4814,
      29965,
      287,
      1332,
      1339
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for missing assertions in test case"
  },
  {
    "line": 14,
    "text": "    def test_get_gdp_quarter(self):",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with a test prefix, indicating a test case",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      21287,
      79,
      62,
      24385,
      7,
      944,
      2599
    ],
    "start_token": 87,
    "end_token": 102,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      257,
      1332,
      21231,
      11,
      12739,
      257,
      1332,
      1339
    ],
    "label": "ml_signal",
    "reason": "Function definition with a test prefix, indicating a test case"
  },
  {
    "line": 16,
    "text": "         ",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of print statements in test code can clutter output and is not a best practice for testing",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 102,
    "end_token": 111,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      3601,
      6299,
      287,
      1332,
      2438,
      460,
      45343,
      5072,
      290,
      318,
      407,
      257,
      1266,
      3357,
      329,
      4856
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of print statements in test code can clutter output and is not a best practice for testing"
  },
  {
    "line": 17,
    "text": "    def test_get_gdp_for(self):",
    "annotation": "\u2705 Best Practice: Consider using assertions to validate the output instead of print statements",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      21287,
      79,
      62,
      1640,
      7,
      944,
      2599
    ],
    "start_token": 111,
    "end_token": 126,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      29965,
      284,
      26571,
      262,
      5072,
      2427,
      286,
      3601,
      6299
    ],
    "label": "best_practice",
    "reason": "Consider using assertions to validate the output instead of print statements"
  },
  {
    "line": 16,
    "text": "         ",
    "annotation": "\ud83e\udde0 ML Signal: Function name suggests a test function, indicating a pattern for testing",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 126,
    "end_token": 135,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      1438,
      5644,
      257,
      1332,
      2163,
      11,
      12739,
      257,
      3912,
      329,
      4856
    ],
    "label": "ml_signal",
    "reason": "Function name suggests a test function, indicating a pattern for testing"
  },
  {
    "line": 18,
    "text": "        print(fd.get_gdp_for())",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of print statements in test functions can clutter output and is not a best practice for testing",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      16344,
      13,
      1136,
      62,
      21287,
      79,
      62,
      1640,
      28955
    ],
    "start_token": 135,
    "end_token": 153,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      3601,
      6299,
      287,
      1332,
      5499,
      460,
      45343,
      5072,
      290,
      318,
      407,
      257,
      1266,
      3357,
      329,
      4856
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of print statements in test functions can clutter output and is not a best practice for testing"
  },
  {
    "line": 19,
    "text": "     ",
    "annotation": "\u2705 Best Practice: Consider using assertions instead of print statements for testing",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 153,
    "end_token": 158,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      29965,
      2427,
      286,
      3601,
      6299,
      329,
      4856
    ],
    "label": "best_practice",
    "reason": "Consider using assertions instead of print statements for testing"
  },
  {
    "line": 18,
    "text": "        print(fd.get_gdp_for())",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with a test prefix, indicating a test case",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      16344,
      13,
      1136,
      62,
      21287,
      79,
      62,
      1640,
      28955
    ],
    "start_token": 158,
    "end_token": 176,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      257,
      1332,
      21231,
      11,
      12739,
      257,
      1332,
      1339
    ],
    "label": "ml_signal",
    "reason": "Function definition with a test prefix, indicating a test case"
  },
  {
    "line": 20,
    "text": "    def test_get_gdp_pull(self):",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of print statements for debugging in test code",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      21287,
      79,
      62,
      31216,
      7,
      944,
      2599
    ],
    "start_token": 176,
    "end_token": 191,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      3601,
      6299,
      329,
      28769,
      287,
      1332,
      2438
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of print statements for debugging in test code"
  },
  {
    "line": 21,
    "text": "        print(fd.get_gdp_pull())",
    "annotation": "\ud83e\udde0 ML Signal: Direct call to a function within a test case",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      16344,
      13,
      1136,
      62,
      21287,
      79,
      62,
      31216,
      28955
    ],
    "start_token": 191,
    "end_token": 209,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      4128,
      869,
      284,
      257,
      2163,
      1626,
      257,
      1332,
      1339
    ],
    "label": "ml_signal",
    "reason": "Direct call to a function within a test case"
  },
  {
    "line": 20,
    "text": "    def test_get_gdp_pull(self):",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with a test prefix, indicating a test case",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      21287,
      79,
      62,
      31216,
      7,
      944,
      2599
    ],
    "start_token": 209,
    "end_token": 224,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      257,
      1332,
      21231,
      11,
      12739,
      257,
      1332,
      1339
    ],
    "label": "ml_signal",
    "reason": "Function definition with a test prefix, indicating a test case"
  },
  {
    "line": 22,
    "text": "         ",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of print statements for debugging in test code",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 224,
    "end_token": 233,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      3601,
      6299,
      329,
      28769,
      287,
      1332,
      2438
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of print statements for debugging in test code"
  },
  {
    "line": 23,
    "text": "    def test_get_gdp_contrib(self):",
    "annotation": "\ud83e\udde0 ML Signal: Direct call to a function within a test case",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      21287,
      79,
      62,
      3642,
      822,
      7,
      944,
      2599
    ],
    "start_token": 233,
    "end_token": 249,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      4128,
      869,
      284,
      257,
      2163,
      1626,
      257,
      1332,
      1339
    ],
    "label": "ml_signal",
    "reason": "Direct call to a function within a test case"
  },
  {
    "line": 23,
    "text": "    def test_get_gdp_contrib(self):",
    "annotation": "\u2705 Best Practice: Consider using assertions to validate the expected output of the function.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      21287,
      79,
      62,
      3642,
      822,
      7,
      944,
      2599
    ],
    "start_token": 249,
    "end_token": 265,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      29965,
      284,
      26571,
      262,
      2938,
      5072,
      286,
      262,
      2163,
      13
    ],
    "label": "best_practice",
    "reason": "Consider using assertions to validate the expected output of the function."
  },
  {
    "line": 24,
    "text": "        print(fd.get_gdp_contrib())",
    "annotation": "\ud83e\udde0 ML Signal: Usage of print statements in test functions can indicate debugging practices.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      16344,
      13,
      1136,
      62,
      21287,
      79,
      62,
      3642,
      822,
      28955
    ],
    "start_token": 265,
    "end_token": 284,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      3601,
      6299,
      287,
      1332,
      5499,
      460,
      7603,
      28769,
      6593,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of print statements in test functions can indicate debugging practices."
  },
  {
    "line": 24,
    "text": "        print(fd.get_gdp_contrib())",
    "annotation": "\ud83e\udde0 ML Signal: Function name suggests this is a test case, useful for identifying test patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      16344,
      13,
      1136,
      62,
      21287,
      79,
      62,
      3642,
      822,
      28955
    ],
    "start_token": 284,
    "end_token": 303,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      1438,
      5644,
      428,
      318,
      257,
      1332,
      1339,
      11,
      4465,
      329,
      13720,
      1332,
      7572
    ],
    "label": "ml_signal",
    "reason": "Function name suggests this is a test case, useful for identifying test patterns"
  },
  {
    "line": 26,
    "text": "    def test_get_cpi(self):",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Using print statements in tests is not ideal for automated testing",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      13155,
      72,
      7,
      944,
      2599
    ],
    "start_token": 303,
    "end_token": 316,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      8554,
      3601,
      6299,
      287,
      5254,
      318,
      407,
      7306,
      329,
      16359,
      4856
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Using print statements in tests is not ideal for automated testing"
  },
  {
    "line": 27,
    "text": "        print(fd.get_cpi())",
    "annotation": "\u2705 Best Practice: Consider using assertions instead of print statements for test validation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      16344,
      13,
      1136,
      62,
      13155,
      72,
      28955
    ],
    "start_token": 316,
    "end_token": 332,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      29965,
      2427,
      286,
      3601,
      6299,
      329,
      1332,
      21201
    ],
    "label": "best_practice",
    "reason": "Consider using assertions instead of print statements for test validation"
  },
  {
    "line": 26,
    "text": "    def test_get_cpi(self):",
    "annotation": "\ud83e\udde0 ML Signal: Method name suggests this is a test function",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      13155,
      72,
      7,
      944,
      2599
    ],
    "start_token": 332,
    "end_token": 345,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      1438,
      5644,
      428,
      318,
      257,
      1332,
      2163
    ],
    "label": "ml_signal",
    "reason": "Method name suggests this is a test function"
  },
  {
    "line": 28,
    "text": "         ",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Using print statements in test functions can clutter output",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 345,
    "end_token": 354,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      8554,
      3601,
      6299,
      287,
      1332,
      5499,
      460,
      45343,
      5072
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Using print statements in test functions can clutter output"
  },
  {
    "line": 29,
    "text": "    def test_get_ppi(self):",
    "annotation": "\u2705 Best Practice: Consider using assertions instead of print statements for testing",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      381,
      72,
      7,
      944,
      2599
    ],
    "start_token": 354,
    "end_token": 367,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      29965,
      2427,
      286,
      3601,
      6299,
      329,
      4856
    ],
    "label": "best_practice",
    "reason": "Consider using assertions instead of print statements for testing"
  },
  {
    "line": 28,
    "text": "         ",
    "annotation": "\ud83e\udde0 ML Signal: Method name suggests a test function, indicating a pattern for test case identification",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 367,
    "end_token": 376,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      1438,
      5644,
      257,
      1332,
      2163,
      11,
      12739,
      257,
      3912,
      329,
      1332,
      1339,
      11795
    ],
    "label": "ml_signal",
    "reason": "Method name suggests a test function, indicating a pattern for test case identification"
  },
  {
    "line": 30,
    "text": "        print(fd.get_ppi())",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Direct use of print statements in test functions can clutter test output",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      16344,
      13,
      1136,
      62,
      381,
      72,
      28955
    ],
    "start_token": 376,
    "end_token": 392,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      4128,
      779,
      286,
      3601,
      6299,
      287,
      1332,
      5499,
      460,
      45343,
      1332,
      5072
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Direct use of print statements in test functions can clutter test output"
  },
  {
    "line": 31,
    "text": "         ",
    "annotation": "\u2705 Best Practice: Consider using assertions to validate expected outcomes in test functions",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 392,
    "end_token": 401,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      29965,
      284,
      26571,
      2938,
      10906,
      287,
      1332,
      5499
    ],
    "label": "best_practice",
    "reason": "Consider using assertions to validate expected outcomes in test functions"
  },
  {
    "line": 31,
    "text": "         ",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Directly printing in test functions can clutter test output and is not a best practice.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 401,
    "end_token": 410,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      4128,
      306,
      13570,
      287,
      1332,
      5499,
      460,
      45343,
      1332,
      5072,
      290,
      318,
      407,
      257,
      1266,
      3357,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Directly printing in test functions can clutter test output and is not a best practice."
  },
  {
    "line": 33,
    "text": "        print(fd.get_deposit_rate())",
    "annotation": "\u2705 Best Practice: Use the standard unittest framework entry point for running tests.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      16344,
      13,
      1136,
      62,
      10378,
      7434,
      62,
      4873,
      28955
    ],
    "start_token": 410,
    "end_token": 428,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      262,
      3210,
      555,
      715,
      395,
      9355,
      5726,
      966,
      329,
      2491,
      5254,
      13
    ],
    "label": "best_practice",
    "reason": "Use the standard unittest framework entry point for running tests."
  }
]