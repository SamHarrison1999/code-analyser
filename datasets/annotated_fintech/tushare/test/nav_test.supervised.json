[
  {
    "line": 6,
    "text": "import unittest",
    "annotation": "\ud83e\udde0 ML Signal: Importing external libraries, indicating dependencies",
    "confidence": 0.5,
    "tokens": [
      11748,
      555,
      715,
      395
    ],
    "start_token": 0,
    "end_token": 4,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      7097,
      12782,
      11,
      12739,
      20086
    ],
    "label": "ml_signal",
    "reason": "Importing external libraries, indicating dependencies"
  },
  {
    "line": 7,
    "text": "import tushare.fund.nav as nav",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Ensure the library is up-to-date to avoid known vulnerabilities",
    "confidence": 0.5,
    "tokens": [
      11748,
      256,
      1530,
      533,
      13,
      10990,
      13,
      28341,
      355,
      6812
    ],
    "start_token": 4,
    "end_token": 14,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      48987,
      262,
      5888,
      318,
      510,
      12,
      1462,
      12,
      4475,
      284,
      3368,
      1900,
      23805
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Ensure the library is up-to-date to avoid known vulnerabilities"
  },
  {
    "line": 7,
    "text": "import tushare.fund.nav as nav",
    "annotation": "\u2705 Best Practice: Inheriting from unittest.TestCase to create a test case class",
    "confidence": 1.0,
    "tokens": [
      11748,
      256,
      1530,
      533,
      13,
      10990,
      13,
      28341,
      355,
      6812
    ],
    "start_token": 14,
    "end_token": 24,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      47025,
      1780,
      422,
      555,
      715,
      395,
      13,
      14402,
      20448,
      284,
      2251,
      257,
      1332,
      1339,
      1398
    ],
    "label": "best_practice",
    "reason": "Inheriting from unittest.TestCase to create a test case class"
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Method setting fixed data values, useful for detecting hardcoded configurations",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 24,
    "end_token": 24,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      4634,
      5969,
      1366,
      3815,
      11,
      4465,
      329,
      31521,
      1327,
      40976,
      25412
    ],
    "label": "ml_signal",
    "reason": "Method setting fixed data values, useful for detecting hardcoded configurations"
  },
  {
    "line": 11,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Hardcoded date values, useful for detecting static time ranges",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 24,
    "end_token": 24,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6912,
      40976,
      3128,
      3815,
      11,
      4465,
      329,
      31521,
      9037,
      640,
      16069
    ],
    "label": "ml_signal",
    "reason": "Hardcoded date values, useful for detecting static time ranges"
  },
  {
    "line": 13,
    "text": "        self.symbol = '600848'",
    "annotation": "\ud83e\udde0 ML Signal: Hardcoded date values, useful for detecting static time ranges",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      1837,
      23650,
      796,
      705,
      8054,
      23,
      2780,
      6
    ],
    "start_token": 24,
    "end_token": 41,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6912,
      40976,
      3128,
      3815,
      11,
      4465,
      329,
      31521,
      9037,
      640,
      16069
    ],
    "label": "ml_signal",
    "reason": "Hardcoded date values, useful for detecting static time ranges"
  },
  {
    "line": 15,
    "text": "        self.end = '2016-02-29'",
    "annotation": "\ud83e\udde0 ML Signal: Hardcoded display value, useful for detecting static configurations",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      437,
      796,
      705,
      5304,
      12,
      2999,
      12,
      1959,
      6
    ],
    "start_token": 41,
    "end_token": 59,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6912,
      40976,
      3359,
      1988,
      11,
      4465,
      329,
      31521,
      9037,
      25412
    ],
    "label": "ml_signal",
    "reason": "Hardcoded display value, useful for detecting static configurations"
  },
  {
    "line": 14,
    "text": "        self.start = '2014-11-24'",
    "annotation": "\ud83e\udde0 ML Signal: Method name suggests a test function, useful for identifying test patterns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      9688,
      796,
      705,
      4967,
      12,
      1157,
      12,
      1731,
      6
    ],
    "start_token": 59,
    "end_token": 77,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      1438,
      5644,
      257,
      1332,
      2163,
      11,
      4465,
      329,
      13720,
      1332,
      7572
    ],
    "label": "ml_signal",
    "reason": "Method name suggests a test function, useful for identifying test patterns"
  },
  {
    "line": 16,
    "text": "        self.disp = 5",
    "annotation": "\ud83e\udde0 ML Signal: Use of a list to iterate over categories, indicating a pattern of categorical processing",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      6381,
      79,
      796,
      642
    ],
    "start_token": 77,
    "end_token": 90,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      1351,
      284,
      11629,
      378,
      625,
      9376,
      11,
      12739,
      257,
      3912,
      286,
      4253,
      12409,
      7587
    ],
    "label": "ml_signal",
    "reason": "Use of a list to iterate over categories, indicating a pattern of categorical processing"
  },
  {
    "line": 18,
    "text": "    def test_get_nav_open(self):",
    "annotation": "\u2705 Best Practice: Debugging print statement, consider using logging for better control",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      28341,
      62,
      9654,
      7,
      944,
      2599
    ],
    "start_token": 90,
    "end_token": 104,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      31687,
      2667,
      3601,
      2643,
      11,
      2074,
      1262,
      18931,
      329,
      1365,
      1630
    ],
    "label": "best_practice",
    "reason": "Debugging print statement, consider using logging for better control"
  },
  {
    "line": 21,
    "text": "        print('get nav open................\\n')",
    "annotation": "\u2705 Best Practice: Debugging print statement, consider using logging for better control",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      10786,
      1136,
      6812,
      1280,
      4181,
      59,
      77,
      11537
    ],
    "start_token": 104,
    "end_token": 120,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      31687,
      2667,
      3601,
      2643,
      11,
      2074,
      1262,
      18931,
      329,
      1365,
      1630
    ],
    "label": "best_practice",
    "reason": "Debugging print statement, consider using logging for better control"
  },
  {
    "line": 23,
    "text": "            print('=============\\nget %s nav\\n=============' % item)",
    "annotation": "\ud83e\udde0 ML Signal: Calling a function with a category, useful for learning function usage patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      10786,
      25609,
      28,
      59,
      782,
      316,
      4064,
      82,
      6812,
      59,
      77,
      25609,
      11639,
      4064,
      2378,
      8
    ],
    "start_token": 120,
    "end_token": 148,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      32677,
      257,
      2163,
      351,
      257,
      6536,
      11,
      4465,
      329,
      4673,
      2163,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Calling a function with a category, useful for learning function usage patterns"
  },
  {
    "line": 25,
    "text": "            print('\\nnums=%d' % len(fund_df))",
    "annotation": "\ud83e\udde0 ML Signal: Printing the length of a DataFrame, common pattern in data processing",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      10786,
      59,
      20471,
      5700,
      28,
      4,
      67,
      6,
      4064,
      18896,
      7,
      10990,
      62,
      7568,
      4008
    ],
    "start_token": 148,
    "end_token": 175,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      44118,
      262,
      4129,
      286,
      257,
      6060,
      19778,
      11,
      2219,
      3912,
      287,
      1366,
      7587
    ],
    "label": "ml_signal",
    "reason": "Printing the length of a DataFrame, common pattern in data processing"
  },
  {
    "line": 26,
    "text": "            print(fund_df[:self.disp])",
    "annotation": "\u2705 Best Practice: Debugging print statement, consider using logging for better control",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      10990,
      62,
      7568,
      58,
      25,
      944,
      13,
      6381,
      79,
      12962
    ],
    "start_token": 175,
    "end_token": 198,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      31687,
      2667,
      3601,
      2643,
      11,
      2074,
      1262,
      18931,
      329,
      1365,
      1630
    ],
    "label": "best_practice",
    "reason": "Debugging print statement, consider using logging for better control"
  },
  {
    "line": 28,
    "text": "    def test_get_nav_close(self):",
    "annotation": "\ud83e\udde0 ML Signal: Slicing a DataFrame for display, indicates data inspection pattern",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      28341,
      62,
      19836,
      7,
      944,
      2599
    ],
    "start_token": 198,
    "end_token": 212,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      311,
      677,
      278,
      257,
      6060,
      19778,
      329,
      3359,
      11,
      9217,
      1366,
      15210,
      3912
    ],
    "label": "ml_signal",
    "reason": "Slicing a DataFrame for display, indicates data inspection pattern"
  },
  {
    "line": 29,
    "text": "        self.set_data()",
    "annotation": "\u2705 Best Practice: Debugging print statement, consider using logging for better control",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      2617,
      62,
      7890,
      3419
    ],
    "start_token": 212,
    "end_token": 225,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      31687,
      2667,
      3601,
      2643,
      11,
      2074,
      1262,
      18931,
      329,
      1365,
      1630
    ],
    "label": "best_practice",
    "reason": "Debugging print statement, consider using logging for better control"
  },
  {
    "line": 24,
    "text": "            fund_df = nav.get_nav_open(item)",
    "annotation": "\ud83e\udde0 ML Signal: Usage of hardcoded lists for types and categories",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1814,
      62,
      7568,
      796,
      6812,
      13,
      1136,
      62,
      28341,
      62,
      9654,
      7,
      9186,
      8
    ],
    "start_token": 225,
    "end_token": 250,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      1327,
      40976,
      8341,
      329,
      3858,
      290,
      9376
    ],
    "label": "ml_signal",
    "reason": "Usage of hardcoded lists for types and categories"
  },
  {
    "line": 26,
    "text": "            print(fund_df[:self.disp])",
    "annotation": "\ud83e\udde0 ML Signal: Usage of hardcoded lists for types and categories",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      10990,
      62,
      7568,
      58,
      25,
      944,
      13,
      6381,
      79,
      12962
    ],
    "start_token": 250,
    "end_token": 273,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      1327,
      40976,
      8341,
      329,
      3858,
      290,
      9376
    ],
    "label": "ml_signal",
    "reason": "Usage of hardcoded lists for types and categories"
  },
  {
    "line": 28,
    "text": "    def test_get_nav_close(self):",
    "annotation": "\ud83e\udde0 ML Signal: Usage of hardcoded lists for types and categories",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      28341,
      62,
      19836,
      7,
      944,
      2599
    ],
    "start_token": 273,
    "end_token": 287,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      1327,
      40976,
      8341,
      329,
      3858,
      290,
      9376
    ],
    "label": "ml_signal",
    "reason": "Usage of hardcoded lists for types and categories"
  },
  {
    "line": 35,
    "text": "        fund_df = None",
    "annotation": "\u2705 Best Practice: Use of formatted strings for readability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1814,
      62,
      7568,
      796,
      6045
    ],
    "start_token": 287,
    "end_token": 299,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      39559,
      13042,
      329,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of formatted strings for readability"
  },
  {
    "line": 38,
    "text": "                for t3i in qy_t3:",
    "annotation": "\ud83e\udde0 ML Signal: Function call pattern with parameters",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      329,
      256,
      18,
      72,
      287,
      10662,
      88,
      62,
      83,
      18,
      25
    ],
    "start_token": 299,
    "end_token": 325,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      3912,
      351,
      10007
    ],
    "label": "ml_signal",
    "reason": "Function call pattern with parameters"
  },
  {
    "line": 39,
    "text": "                    print('\\n=============\\nget %s-%s nav\\n=============' %",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of printing data length",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      10786,
      59,
      77,
      25609,
      28,
      59,
      782,
      316,
      4064,
      82,
      12,
      4,
      82,
      6812,
      59,
      77,
      25609,
      11639,
      4064
    ],
    "start_token": 325,
    "end_token": 364,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      13570,
      1366,
      4129
    ],
    "label": "ml_signal",
    "reason": "Pattern of printing data length"
  },
  {
    "line": 42,
    "text": "                    print('\\nnums=%d' % len(fund_df))",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of slicing data for display",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      10786,
      59,
      20471,
      5700,
      28,
      4,
      67,
      6,
      4064,
      18896,
      7,
      10990,
      62,
      7568,
      4008
    ],
    "start_token": 364,
    "end_token": 399,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      49289,
      1366,
      329,
      3359
    ],
    "label": "ml_signal",
    "reason": "Pattern of slicing data for display"
  },
  {
    "line": 46,
    "text": "                    print('\\n=============\\nget %s-%s nav\\n=============' %",
    "annotation": "\u2705 Best Practice: Use of formatted strings for readability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      10786,
      59,
      77,
      25609,
      28,
      59,
      782,
      316,
      4064,
      82,
      12,
      4,
      82,
      6812,
      59,
      77,
      25609,
      11639,
      4064
    ],
    "start_token": 399,
    "end_token": 438,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      39559,
      13042,
      329,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of formatted strings for readability"
  },
  {
    "line": 49,
    "text": "                    print('\\nnums=%d' % len(fund_df))",
    "annotation": "\ud83e\udde0 ML Signal: Function call pattern with parameters",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      10786,
      59,
      20471,
      5700,
      28,
      4,
      67,
      6,
      4064,
      18896,
      7,
      10990,
      62,
      7568,
      4008
    ],
    "start_token": 438,
    "end_token": 473,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      3912,
      351,
      10007
    ],
    "label": "ml_signal",
    "reason": "Function call pattern with parameters"
  },
  {
    "line": 51,
    "text": "            else:",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of printing data length",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 473,
    "end_token": 486,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      13570,
      1366,
      4129
    ],
    "label": "ml_signal",
    "reason": "Pattern of printing data length"
  },
  {
    "line": 52,
    "text": "                print('\\n=============\\nget %s nav\\n=============' % item)",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of slicing data for display",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      10786,
      59,
      77,
      25609,
      28,
      59,
      782,
      316,
      4064,
      82,
      6812,
      59,
      77,
      25609,
      11639,
      4064,
      2378,
      8
    ],
    "start_token": 486,
    "end_token": 520,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      49289,
      1366,
      329,
      3359
    ],
    "label": "ml_signal",
    "reason": "Pattern of slicing data for display"
  },
  {
    "line": 56,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of formatted strings for readability",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 520,
    "end_token": 520,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      39559,
      13042,
      329,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of formatted strings for readability"
  },
  {
    "line": 58,
    "text": "        self.set_data()",
    "annotation": "\ud83e\udde0 ML Signal: Function call pattern with parameters",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      2617,
      62,
      7890,
      3419
    ],
    "start_token": 520,
    "end_token": 533,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      3912,
      351,
      10007
    ],
    "label": "ml_signal",
    "reason": "Function call pattern with parameters"
  },
  {
    "line": 60,
    "text": "        t3 = {'all': '0', 'wjzq': '13', 'gp': '14',",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of printing data length",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      256,
      18,
      796,
      1391,
      6,
      439,
      10354,
      705,
      15,
      3256,
      705,
      86,
      73,
      89,
      80,
      10354,
      705,
      1485,
      3256,
      705,
      31197,
      10354,
      705,
      1415,
      3256
    ],
    "start_token": 533,
    "end_token": 565,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      13570,
      1366,
      4129
    ],
    "label": "ml_signal",
    "reason": "Pattern of printing data length"
  },
  {
    "line": 61,
    "text": "              'zs': '15', 'czzq': '16', 'jjzq': '17'}",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of slicing data for display",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      705,
      89,
      82,
      10354,
      705,
      1314,
      3256,
      705,
      66,
      3019,
      80,
      10354,
      705,
      1433,
      3256,
      705,
      41098,
      89,
      80,
      10354,
      705,
      1558,
      6,
      92
    ],
    "start_token": 565,
    "end_token": 602,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      49289,
      1366,
      329,
      3359
    ],
    "label": "ml_signal",
    "reason": "Pattern of slicing data for display"
  },
  {
    "line": 50,
    "text": "                    print(fund_df[:self.disp])",
    "annotation": "\ud83e\udde0 ML Signal: Method name suggests a test function, useful for identifying test patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      10990,
      62,
      7568,
      58,
      25,
      944,
      13,
      6381,
      79,
      12962
    ],
    "start_token": 602,
    "end_token": 633,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      1438,
      5644,
      257,
      1332,
      2163,
      11,
      4465,
      329,
      13720,
      1332,
      7572
    ],
    "label": "ml_signal",
    "reason": "Method name suggests a test function, useful for identifying test patterns"
  },
  {
    "line": 52,
    "text": "                print('\\n=============\\nget %s nav\\n=============' % item)",
    "annotation": "\ud83e\udde0 ML Signal: Usage of lists and dictionaries for configuration or test data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      10786,
      59,
      77,
      25609,
      28,
      59,
      782,
      316,
      4064,
      82,
      6812,
      59,
      77,
      25609,
      11639,
      4064,
      2378,
      8
    ],
    "start_token": 633,
    "end_token": 667,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      8341,
      290,
      48589,
      3166,
      329,
      8398,
      393,
      1332,
      1366
    ],
    "label": "ml_signal",
    "reason": "Usage of lists and dictionaries for configuration or test data"
  },
  {
    "line": 56,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of print statements for debugging or logging",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 667,
    "end_token": 667,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      3601,
      6299,
      329,
      28769,
      393,
      18931
    ],
    "label": "best_practice",
    "reason": "Use of print statements for debugging or logging"
  },
  {
    "line": 61,
    "text": "              'zs': '15', 'czzq': '16', 'jjzq': '17'}",
    "annotation": "\u2705 Best Practice: Clear and descriptive print statements for debugging",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      705,
      89,
      82,
      10354,
      705,
      1314,
      3256,
      705,
      66,
      3019,
      80,
      10354,
      705,
      1433,
      3256,
      705,
      41098,
      89,
      80,
      10354,
      705,
      1558,
      6,
      92
    ],
    "start_token": 667,
    "end_token": 704,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11459,
      290,
      35644,
      3601,
      6299,
      329,
      28769
    ],
    "label": "best_practice",
    "reason": "Clear and descriptive print statements for debugging"
  },
  {
    "line": 63,
    "text": "        print('\\nget nav grading................\\n')",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential risk if nav.get_nav_grading is not properly validated",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      10786,
      59,
      782,
      316,
      6812,
      43165,
      4181,
      59,
      77,
      11537
    ],
    "start_token": 704,
    "end_token": 722,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2526,
      611,
      6812,
      13,
      1136,
      62,
      28341,
      62,
      29247,
      318,
      407,
      6105,
      31031
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential risk if nav.get_nav_grading is not properly validated"
  },
  {
    "line": 64,
    "text": "        fund_df = None",
    "annotation": "\u2705 Best Practice: Logging the length of the dataframe for verification",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1814,
      62,
      7568,
      796,
      6045
    ],
    "start_token": 722,
    "end_token": 734,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5972,
      2667,
      262,
      4129,
      286,
      262,
      1366,
      14535,
      329,
      19637
    ],
    "label": "best_practice",
    "reason": "Logging the length of the dataframe for verification"
  },
  {
    "line": 67,
    "text": "                print('\\n=============\\nget %s nav\\n=============' % item)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential risk if fund_df is not properly validated",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      10786,
      59,
      77,
      25609,
      28,
      59,
      782,
      316,
      4064,
      82,
      6812,
      59,
      77,
      25609,
      11639,
      4064,
      2378,
      8
    ],
    "start_token": 734,
    "end_token": 768,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2526,
      611,
      1814,
      62,
      7568,
      318,
      407,
      6105,
      31031
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential risk if fund_df is not properly validated"
  },
  {
    "line": 71,
    "text": "            else:",
    "annotation": "\u2705 Best Practice: Clear and descriptive print statements for debugging",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 768,
    "end_token": 781,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11459,
      290,
      35644,
      3601,
      6299,
      329,
      28769
    ],
    "label": "best_practice",
    "reason": "Clear and descriptive print statements for debugging"
  },
  {
    "line": 74,
    "text": "                          (item, t3i))",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential risk if nav.get_nav_grading is not properly validated",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      357,
      9186,
      11,
      256,
      18,
      72,
      4008
    ],
    "start_token": 781,
    "end_token": 813,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2526,
      611,
      6812,
      13,
      1136,
      62,
      28341,
      62,
      29247,
      318,
      407,
      6105,
      31031
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential risk if nav.get_nav_grading is not properly validated"
  },
  {
    "line": 76,
    "text": "                    print('\\nnums=%d' % len(fund_df))",
    "annotation": "\u2705 Best Practice: Logging the length of the dataframe for verification",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      10786,
      59,
      20471,
      5700,
      28,
      4,
      67,
      6,
      4064,
      18896,
      7,
      10990,
      62,
      7568,
      4008
    ],
    "start_token": 813,
    "end_token": 848,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5972,
      2667,
      262,
      4129,
      286,
      262,
      1366,
      14535,
      329,
      19637
    ],
    "label": "best_practice",
    "reason": "Logging the length of the dataframe for verification"
  },
  {
    "line": 78,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential risk if fund_df is not properly validated",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 848,
    "end_token": 848,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2526,
      611,
      1814,
      62,
      7568,
      318,
      407,
      6105,
      31031
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential risk if fund_df is not properly validated"
  },
  {
    "line": 70,
    "text": "                print(fund_df[:self.disp])",
    "annotation": "\ud83e\udde0 ML Signal: Method that sets up data, indicating a setup pattern for tests",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      10990,
      62,
      7568,
      58,
      25,
      944,
      13,
      6381,
      79,
      12962
    ],
    "start_token": 848,
    "end_token": 875,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      326,
      5621,
      510,
      1366,
      11,
      12739,
      257,
      9058,
      3912,
      329,
      5254
    ],
    "label": "ml_signal",
    "reason": "Method that sets up data, indicating a setup pattern for tests"
  },
  {
    "line": 71,
    "text": "            else:",
    "annotation": "\ud83e\udde0 ML Signal: Use of a hardcoded list, indicating a fixed dataset for testing",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 875,
    "end_token": 888,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      1327,
      40976,
      1351,
      11,
      12739,
      257,
      5969,
      27039,
      329,
      4856
    ],
    "label": "ml_signal",
    "reason": "Use of a hardcoded list, indicating a fixed dataset for testing"
  },
  {
    "line": 76,
    "text": "                    print('\\nnums=%d' % len(fund_df))",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over a list with enumerate, common pattern in Python",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      10786,
      59,
      20471,
      5700,
      28,
      4,
      67,
      6,
      4064,
      18896,
      7,
      10990,
      62,
      7568,
      4008
    ],
    "start_token": 888,
    "end_token": 923,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      257,
      1351,
      351,
      27056,
      378,
      11,
      2219,
      3912,
      287,
      11361
    ],
    "label": "ml_signal",
    "reason": "Iterating over a list with enumerate, common pattern in Python"
  },
  {
    "line": 78,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of print statements for debugging, could expose sensitive data",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 923,
    "end_token": 923,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      3601,
      6299,
      329,
      28769,
      11,
      714,
      15651,
      8564,
      1366
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of print statements for debugging, could expose sensitive data"
  },
  {
    "line": 80,
    "text": "        self.set_data()",
    "annotation": "\ud83e\udde0 ML Signal: Calling a function with parameters, indicating a pattern of function usage",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      2617,
      62,
      7890,
      3419
    ],
    "start_token": 923,
    "end_token": 936,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      32677,
      257,
      2163,
      351,
      10007,
      11,
      12739,
      257,
      3912,
      286,
      2163,
      8748
    ],
    "label": "ml_signal",
    "reason": "Calling a function with parameters, indicating a pattern of function usage"
  },
  {
    "line": 82,
    "text": "               '184721', '165519', '164302', '519749', '150275', '150305',",
    "annotation": "\u2705 Best Practice: Checking if a variable is not None before proceeding",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      705,
      1507,
      2857,
      2481,
      3256,
      705,
      1433,
      2816,
      1129,
      3256,
      705,
      23237,
      22709,
      3256,
      705,
      20,
      24991,
      2920,
      3256,
      705,
      8628,
      23195,
      3256,
      705,
      8628,
      22515,
      3256
    ],
    "start_token": 936,
    "end_token": 977,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      39432,
      611,
      257,
      7885,
      318,
      407,
      6045,
      878,
      18788
    ],
    "label": "best_practice",
    "reason": "Checking if a variable is not None before proceeding"
  },
  {
    "line": 85,
    "text": "            print('\\n=============\\nget %s nav\\n=============' % item)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of print statements for debugging, could expose sensitive data",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      10786,
      59,
      77,
      25609,
      28,
      59,
      782,
      316,
      4064,
      82,
      6812,
      59,
      77,
      25609,
      11639,
      4064,
      2378,
      8
    ],
    "start_token": 977,
    "end_token": 1007,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      3601,
      6299,
      329,
      28769,
      11,
      714,
      15651,
      8564,
      1366
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of print statements for debugging, could expose sensitive data"
  },
  {
    "line": 86,
    "text": "            fund_df = nav.get_nav_history(item, self.start, self.end)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of print statements for debugging, could expose sensitive data",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1814,
      62,
      7568,
      796,
      6812,
      13,
      1136,
      62,
      28341,
      62,
      23569,
      7,
      9186,
      11,
      2116,
      13,
      9688,
      11,
      2116,
      13,
      437,
      8
    ],
    "start_token": 1007,
    "end_token": 1040,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      3601,
      6299,
      329,
      28769,
      11,
      714,
      15651,
      8564,
      1366
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of print statements for debugging, could expose sensitive data"
  },
  {
    "line": 81,
    "text": "        lst = ['164905', '161005', '380007', '000733', '159920', '164902',",
    "annotation": "\ud83e\udde0 ML Signal: Use of a test function indicates a testing pattern",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      300,
      301,
      796,
      37250,
      1433,
      2920,
      2713,
      3256,
      705,
      1433,
      3064,
      20,
      3256,
      705,
      2548,
      830,
      22,
      3256,
      705,
      830,
      49995,
      3256,
      705,
      1314,
      2079,
      1238,
      3256,
      705,
      1433,
      2920,
      2999,
      3256
    ],
    "start_token": 1040,
    "end_token": 1079,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      1332,
      2163,
      9217,
      257,
      4856,
      3912
    ],
    "label": "ml_signal",
    "reason": "Use of a test function indicates a testing pattern"
  },
  {
    "line": 82,
    "text": "               '184721', '165519', '164302', '519749', '150275', '150305',",
    "annotation": "\ud83e\udde0 ML Signal: Use of a list to store fund IDs",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      705,
      1507,
      2857,
      2481,
      3256,
      705,
      1433,
      2816,
      1129,
      3256,
      705,
      23237,
      22709,
      3256,
      705,
      20,
      24991,
      2920,
      3256,
      705,
      8628,
      23195,
      3256,
      705,
      8628,
      22515,
      3256
    ],
    "start_token": 1079,
    "end_token": 1120,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      1351,
      284,
      3650,
      1814,
      32373
    ],
    "label": "ml_signal",
    "reason": "Use of a list to store fund IDs"
  },
  {
    "line": 88,
    "text": "                print('\\nnums=%d' % len(fund_df))",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over a list of fund IDs",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      10786,
      59,
      20471,
      5700,
      28,
      4,
      67,
      6,
      4064,
      18896,
      7,
      10990,
      62,
      7568,
      4008
    ],
    "start_token": 1120,
    "end_token": 1151,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      257,
      1351,
      286,
      1814,
      32373
    ],
    "label": "ml_signal",
    "reason": "Iterating over a list of fund IDs"
  },
  {
    "line": 89,
    "text": "                print(fund_df[:self.disp])",
    "annotation": "\u2705 Best Practice: Use f-string for better readability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      10990,
      62,
      7568,
      58,
      25,
      944,
      13,
      6381,
      79,
      12962
    ],
    "start_token": 1151,
    "end_token": 1178,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      277,
      12,
      8841,
      329,
      1365,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Use f-string for better readability"
  },
  {
    "line": 91,
    "text": "    def test_get_fund_info(self):",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potentially unsafe use of external function without validation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      10990,
      62,
      10951,
      7,
      944,
      2599
    ],
    "start_token": 1178,
    "end_token": 1192,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6902,
      3746,
      21596,
      779,
      286,
      7097,
      2163,
      1231,
      21201
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potentially unsafe use of external function without validation"
  },
  {
    "line": 92,
    "text": "        self.set_data()",
    "annotation": "\ud83e\udde0 ML Signal: Checking for None before proceeding",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      2617,
      62,
      7890,
      3419
    ],
    "start_token": 1192,
    "end_token": 1205,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      6045,
      878,
      18788
    ],
    "label": "ml_signal",
    "reason": "Checking for None before proceeding"
  },
  {
    "line": 92,
    "text": "        self.set_data()",
    "annotation": "\u2705 Best Practice: Use f-string for better readability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      2617,
      62,
      7890,
      3419
    ],
    "start_token": 1205,
    "end_token": 1218,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      277,
      12,
      8841,
      329,
      1365,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Use f-string for better readability"
  },
  {
    "line": 92,
    "text": "        self.set_data()",
    "annotation": "\ud83e\udde0 ML Signal: Use of unittest framework for testing",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      2617,
      62,
      7890,
      3419
    ],
    "start_token": 1218,
    "end_token": 1231,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      555,
      715,
      395,
      9355,
      329,
      4856
    ],
    "label": "ml_signal",
    "reason": "Use of unittest framework for testing"
  }
]