[
  {
    "line": 5,
    "text": "'''",
    "annotation": "\u2705 Best Practice: Group standard library imports at the top before third-party imports",
    "confidence": 0.5,
    "tokens": [
      7061,
      6
    ],
    "start_token": 0,
    "end_token": 2,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      3210,
      5888,
      17944,
      379,
      262,
      1353,
      878,
      2368,
      12,
      10608,
      17944
    ],
    "label": "best_practice",
    "reason": "Group standard library imports at the top before third-party imports"
  },
  {
    "line": 7,
    "text": "import tushare.stock.classifying as fd",
    "annotation": "\ud83e\udde0 ML Signal: Importing specific modules from a library can indicate which functionalities are frequently used",
    "confidence": 0.5,
    "tokens": [
      11748,
      256,
      1530,
      533,
      13,
      13578,
      13,
      4871,
      4035,
      355,
      277,
      67
    ],
    "start_token": 2,
    "end_token": 14,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      2176,
      13103,
      422,
      257,
      5888,
      460,
      7603,
      543,
      10345,
      871,
      389,
      6777,
      973
    ],
    "label": "ml_signal",
    "reason": "Importing specific modules from a library can indicate which functionalities are frequently used"
  },
  {
    "line": 8,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Importing external libraries can introduce security risks if the library is compromised",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 14,
    "end_token": 14,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      17267,
      278,
      7097,
      12782,
      460,
      10400,
      2324,
      7476,
      611,
      262,
      5888,
      318,
      19066
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Importing external libraries can introduce security risks if the library is compromised"
  },
  {
    "line": 7,
    "text": "import tushare.stock.classifying as fd",
    "annotation": "\u2705 Best Practice: Inheriting from unittest.TestCase to create a test case class",
    "confidence": 1.0,
    "tokens": [
      11748,
      256,
      1530,
      533,
      13,
      13578,
      13,
      4871,
      4035,
      355,
      277,
      67
    ],
    "start_token": 14,
    "end_token": 26,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      47025,
      1780,
      422,
      555,
      715,
      395,
      13,
      14402,
      20448,
      284,
      2251,
      257,
      1332,
      1339,
      1398
    ],
    "label": "best_practice",
    "reason": "Inheriting from unittest.TestCase to create a test case class"
  },
  {
    "line": 9,
    "text": "class Test(unittest.TestCase):",
    "annotation": "\ud83e\udde0 ML Signal: Method setting multiple attributes, indicating a pattern of data initialization",
    "confidence": 1.0,
    "tokens": [
      4871,
      6208,
      7,
      403,
      715,
      395,
      13,
      14402,
      20448,
      2599
    ],
    "start_token": 26,
    "end_token": 36,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      4634,
      3294,
      12608,
      11,
      12739,
      257,
      3912,
      286,
      1366,
      37588
    ],
    "label": "ml_signal",
    "reason": "Method setting multiple attributes, indicating a pattern of data initialization"
  },
  {
    "line": 11,
    "text": "    def set_data(self):",
    "annotation": "\ud83e\udde0 ML Signal: Hardcoded values for attributes, indicating a pattern of static data usage",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      900,
      62,
      7890,
      7,
      944,
      2599
    ],
    "start_token": 36,
    "end_token": 46,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6912,
      40976,
      3815,
      329,
      12608,
      11,
      12739,
      257,
      3912,
      286,
      9037,
      1366,
      8748
    ],
    "label": "ml_signal",
    "reason": "Hardcoded values for attributes, indicating a pattern of static data usage"
  },
  {
    "line": 13,
    "text": "        self.start = '2015-01-03'",
    "annotation": "\ud83e\udde0 ML Signal: Hardcoded values for attributes, indicating a pattern of static data usage",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      9688,
      796,
      705,
      4626,
      12,
      486,
      12,
      3070,
      6
    ],
    "start_token": 46,
    "end_token": 64,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6912,
      40976,
      3815,
      329,
      12608,
      11,
      12739,
      257,
      3912,
      286,
      9037,
      1366,
      8748
    ],
    "label": "ml_signal",
    "reason": "Hardcoded values for attributes, indicating a pattern of static data usage"
  },
  {
    "line": 15,
    "text": "        self.year = 2014",
    "annotation": "\ud83e\udde0 ML Signal: Hardcoded values for attributes, indicating a pattern of static data usage",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      1941,
      796,
      1946
    ],
    "start_token": 64,
    "end_token": 76,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6912,
      40976,
      3815,
      329,
      12608,
      11,
      12739,
      257,
      3912,
      286,
      9037,
      1366,
      8748
    ],
    "label": "ml_signal",
    "reason": "Hardcoded values for attributes, indicating a pattern of static data usage"
  },
  {
    "line": 17,
    "text": "        ",
    "annotation": "\ud83e\udde0 ML Signal: Hardcoded values for attributes, indicating a pattern of static data usage",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 76,
    "end_token": 84,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6912,
      40976,
      3815,
      329,
      12608,
      11,
      12739,
      257,
      3912,
      286,
      9037,
      1366,
      8748
    ],
    "label": "ml_signal",
    "reason": "Hardcoded values for attributes, indicating a pattern of static data usage"
  },
  {
    "line": 14,
    "text": "        self.end = '2015-04-07'",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with a test prefix, indicating a test case",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      437,
      796,
      705,
      4626,
      12,
      3023,
      12,
      2998,
      6
    ],
    "start_token": 84,
    "end_token": 102,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      257,
      1332,
      21231,
      11,
      12739,
      257,
      1332,
      1339
    ],
    "label": "ml_signal",
    "reason": "Function definition with a test prefix, indicating a test case"
  },
  {
    "line": 16,
    "text": "        self.quarter = 4",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of print statements for debugging in production code",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      24385,
      796,
      604
    ],
    "start_token": 102,
    "end_token": 114,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      3601,
      6299,
      329,
      28769,
      287,
      3227,
      2438
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of print statements for debugging in production code"
  },
  {
    "line": 17,
    "text": "        ",
    "annotation": "\ud83e\udde0 ML Signal: Direct call to a function within a test case",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 114,
    "end_token": 122,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      4128,
      869,
      284,
      257,
      2163,
      1626,
      257,
      1332,
      1339
    ],
    "label": "ml_signal",
    "reason": "Direct call to a function within a test case"
  },
  {
    "line": 16,
    "text": "        self.quarter = 4",
    "annotation": "\u2705 Best Practice: Method names should be descriptive and use snake_case for readability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      24385,
      796,
      604
    ],
    "start_token": 122,
    "end_token": 134,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11789,
      3891,
      815,
      307,
      35644,
      290,
      779,
      17522,
      62,
      7442,
      329,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Method names should be descriptive and use snake_case for readability"
  },
  {
    "line": 18,
    "text": "    def test_get_industry_classified(self):",
    "annotation": "\u2705 Best Practice: Consider using logging instead of print for better control over output",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      23213,
      563,
      62,
      31691,
      7,
      944,
      2599
    ],
    "start_token": 134,
    "end_token": 149,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      18931,
      2427,
      286,
      3601,
      329,
      1365,
      1630,
      625,
      5072
    ],
    "label": "best_practice",
    "reason": "Consider using logging instead of print for better control over output"
  },
  {
    "line": 20,
    "text": "        ",
    "annotation": "\ud83e\udde0 ML Signal: Tracking the usage of specific function calls can help in understanding common patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 149,
    "end_token": 157,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      37169,
      262,
      8748,
      286,
      2176,
      2163,
      3848,
      460,
      1037,
      287,
      4547,
      2219,
      7572
    ],
    "label": "ml_signal",
    "reason": "Tracking the usage of specific function calls can help in understanding common patterns"
  },
  {
    "line": 18,
    "text": "    def test_get_industry_classified(self):",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with a test prefix, indicating a test case",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      23213,
      563,
      62,
      31691,
      7,
      944,
      2599
    ],
    "start_token": 157,
    "end_token": 172,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      257,
      1332,
      21231,
      11,
      12739,
      257,
      1332,
      1339
    ],
    "label": "ml_signal",
    "reason": "Function definition with a test prefix, indicating a test case"
  },
  {
    "line": 20,
    "text": "        ",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of print statements in test functions can clutter test output",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 172,
    "end_token": 180,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      3601,
      6299,
      287,
      1332,
      5499,
      460,
      45343,
      1332,
      5072
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of print statements in test functions can clutter test output"
  },
  {
    "line": 21,
    "text": "    def test_get_concept_classified(self):",
    "annotation": "\u2705 Best Practice: Consider using assertions to validate the output instead of print",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      43169,
      62,
      31691,
      7,
      944,
      2599
    ],
    "start_token": 180,
    "end_token": 194,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      29965,
      284,
      26571,
      262,
      5072,
      2427,
      286,
      3601
    ],
    "label": "best_practice",
    "reason": "Consider using assertions to validate the output instead of print"
  },
  {
    "line": 20,
    "text": "        ",
    "annotation": "\ud83e\udde0 ML Signal: Method name suggests this is a test function, useful for identifying test patterns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 194,
    "end_token": 202,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      1438,
      5644,
      428,
      318,
      257,
      1332,
      2163,
      11,
      4465,
      329,
      13720,
      1332,
      7572
    ],
    "label": "ml_signal",
    "reason": "Method name suggests this is a test function, useful for identifying test patterns"
  },
  {
    "line": 22,
    "text": "        print(fd.get_concept_classified())",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Using print statements in test functions can clutter output and is not a best practice for testing",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      16344,
      13,
      1136,
      62,
      43169,
      62,
      31691,
      28955
    ],
    "start_token": 202,
    "end_token": 219,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      8554,
      3601,
      6299,
      287,
      1332,
      5499,
      460,
      45343,
      5072,
      290,
      318,
      407,
      257,
      1266,
      3357,
      329,
      4856
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Using print statements in test functions can clutter output and is not a best practice for testing"
  },
  {
    "line": 23,
    "text": "        ",
    "annotation": "\u2705 Best Practice: Consider using assertions to validate behavior instead of print statements",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 219,
    "end_token": 227,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      29965,
      284,
      26571,
      4069,
      2427,
      286,
      3601,
      6299
    ],
    "label": "best_practice",
    "reason": "Consider using assertions to validate behavior instead of print statements"
  },
  {
    "line": 22,
    "text": "        print(fd.get_concept_classified())",
    "annotation": "\ud83e\udde0 ML Signal: Method name suggests a test function, indicating a pattern for test case identification",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      16344,
      13,
      1136,
      62,
      43169,
      62,
      31691,
      28955
    ],
    "start_token": 227,
    "end_token": 244,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      1438,
      5644,
      257,
      1332,
      2163,
      11,
      12739,
      257,
      3912,
      329,
      1332,
      1339,
      11795
    ],
    "label": "ml_signal",
    "reason": "Method name suggests a test function, indicating a pattern for test case identification"
  },
  {
    "line": 23,
    "text": "        ",
    "annotation": "\u2705 Best Practice: Function should have a docstring to describe its purpose",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 244,
    "end_token": 252,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      15553,
      815,
      423,
      257,
      2205,
      8841,
      284,
      6901,
      663,
      4007
    ],
    "label": "best_practice",
    "reason": "Function should have a docstring to describe its purpose"
  },
  {
    "line": 25,
    "text": "        print(fd.get_area_classified())",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of print statements in test functions can clutter output; consider using assertions",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      16344,
      13,
      1136,
      62,
      20337,
      62,
      31691,
      28955
    ],
    "start_token": 252,
    "end_token": 269,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      3601,
      6299,
      287,
      1332,
      5499,
      460,
      45343,
      5072,
      26,
      2074,
      1262,
      29965
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of print statements in test functions can clutter output; consider using assertions"
  },
  {
    "line": 24,
    "text": "    def test_get_area_classified(self):",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with a test prefix, indicating a test case",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      20337,
      62,
      31691,
      7,
      944,
      2599
    ],
    "start_token": 269,
    "end_token": 283,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      257,
      1332,
      21231,
      11,
      12739,
      257,
      1332,
      1339
    ],
    "label": "ml_signal",
    "reason": "Function definition with a test prefix, indicating a test case"
  },
  {
    "line": 26,
    "text": "        ",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of print statements in test functions can clutter test output",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 283,
    "end_token": 291,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      3601,
      6299,
      287,
      1332,
      5499,
      460,
      45343,
      1332,
      5072
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of print statements in test functions can clutter test output"
  },
  {
    "line": 27,
    "text": "    def test_get_gem_classified(self):",
    "annotation": "\u2705 Best Practice: Consider using assertions to validate behavior instead of print",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      24090,
      62,
      31691,
      7,
      944,
      2599
    ],
    "start_token": 291,
    "end_token": 305,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      29965,
      284,
      26571,
      4069,
      2427,
      286,
      3601
    ],
    "label": "best_practice",
    "reason": "Consider using assertions to validate behavior instead of print"
  },
  {
    "line": 26,
    "text": "        ",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with a test prefix, indicating a test case or test function",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 305,
    "end_token": 313,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      257,
      1332,
      21231,
      11,
      12739,
      257,
      1332,
      1339,
      393,
      1332,
      2163
    ],
    "label": "ml_signal",
    "reason": "Function definition with a test prefix, indicating a test case or test function"
  },
  {
    "line": 28,
    "text": "        print(fd.get_gem_classified())",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of print statements for debugging can expose sensitive data in production",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      16344,
      13,
      1136,
      62,
      24090,
      62,
      31691,
      28955
    ],
    "start_token": 313,
    "end_token": 330,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      3601,
      6299,
      329,
      28769,
      460,
      15651,
      8564,
      1366,
      287,
      3227
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of print statements for debugging can expose sensitive data in production"
  },
  {
    "line": 29,
    "text": "        ",
    "annotation": "\u2705 Best Practice: Consider using logging instead of print for better control over output",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 330,
    "end_token": 338,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      18931,
      2427,
      286,
      3601,
      329,
      1365,
      1630,
      625,
      5072
    ],
    "label": "best_practice",
    "reason": "Consider using logging instead of print for better control over output"
  },
  {
    "line": 29,
    "text": "        ",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with a test prefix, indicating a test case",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 338,
    "end_token": 346,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      257,
      1332,
      21231,
      11,
      12739,
      257,
      1332,
      1339
    ],
    "label": "ml_signal",
    "reason": "Function definition with a test prefix, indicating a test case"
  },
  {
    "line": 30,
    "text": "    def test_get_sme_classified(self):",
    "annotation": "\u2705 Best Practice: Use of self parameter suggests this is a method in a class",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      82,
      1326,
      62,
      31691,
      7,
      944,
      2599
    ],
    "start_token": 346,
    "end_token": 361,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2116,
      11507,
      5644,
      428,
      318,
      257,
      2446,
      287,
      257,
      1398
    ],
    "label": "best_practice",
    "reason": "Use of self parameter suggests this is a method in a class"
  },
  {
    "line": 32,
    "text": "        ",
    "annotation": "\ud83e\udde0 ML Signal: Direct function call within a test, indicating a pattern of testing outputs",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 361,
    "end_token": 369,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      4128,
      2163,
      869,
      1626,
      257,
      1332,
      11,
      12739,
      257,
      3912,
      286,
      4856,
      23862
    ],
    "label": "ml_signal",
    "reason": "Direct function call within a test, indicating a pattern of testing outputs"
  },
  {
    "line": 33,
    "text": "    def test_get_st_classified(self):",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Direct print statements in tests can clutter output and are not ideal for automated testing",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      301,
      62,
      31691,
      7,
      944,
      2599
    ],
    "start_token": 369,
    "end_token": 383,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      4128,
      3601,
      6299,
      287,
      5254,
      460,
      45343,
      5072,
      290,
      389,
      407,
      7306,
      329,
      16359,
      4856
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Direct print statements in tests can clutter output and are not ideal for automated testing"
  },
  {
    "line": 31,
    "text": "        print(fd.get_sme_classified())",
    "annotation": "\ud83e\udde0 ML Signal: Use of print statements in test functions can indicate debugging practices.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      16344,
      13,
      1136,
      62,
      82,
      1326,
      62,
      31691,
      28955
    ],
    "start_token": 383,
    "end_token": 401,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      3601,
      6299,
      287,
      1332,
      5499,
      460,
      7603,
      28769,
      6593,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of print statements in test functions can indicate debugging practices."
  },
  {
    "line": 33,
    "text": "    def test_get_st_classified(self):",
    "annotation": "\u2705 Best Practice: Ensure the script is being run directly before executing test cases.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      301,
      62,
      31691,
      7,
      944,
      2599
    ],
    "start_token": 401,
    "end_token": 415,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      48987,
      262,
      4226,
      318,
      852,
      1057,
      3264,
      878,
      23710,
      1332,
      2663,
      13
    ],
    "label": "best_practice",
    "reason": "Ensure the script is being run directly before executing test cases."
  },
  {
    "line": 33,
    "text": "    def test_get_st_classified(self):",
    "annotation": "\ud83e\udde0 ML Signal: Use of unittest.main() indicates a pattern for running test cases.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      301,
      62,
      31691,
      7,
      944,
      2599
    ],
    "start_token": 415,
    "end_token": 429,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      555,
      715,
      395,
      13,
      12417,
      3419,
      9217,
      257,
      3912,
      329,
      2491,
      1332,
      2663,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of unittest.main() indicates a pattern for running test cases."
  }
]