[
  {
    "line": 5,
    "text": "",
    "annotation": "\u2705 Best Practice: Import only necessary functions or classes to avoid namespace pollution",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 0,
    "end_token": 0,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      17267,
      691,
      3306,
      5499,
      393,
      6097,
      284,
      3368,
      25745,
      12231
    ],
    "label": "best_practice",
    "reason": "Import only necessary functions or classes to avoid namespace pollution"
  },
  {
    "line": 7,
    "text": "",
    "annotation": "\u2705 Best Practice: Import only necessary functions or classes to avoid namespace pollution",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 0,
    "end_token": 0,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      17267,
      691,
      3306,
      5499,
      393,
      6097,
      284,
      3368,
      25745,
      12231
    ],
    "label": "best_practice",
    "reason": "Import only necessary functions or classes to avoid namespace pollution"
  },
  {
    "line": 8,
    "text": "from tushare.util import dateu",
    "annotation": "\u2705 Best Practice: Class names should follow the CapWords convention for readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      256,
      1530,
      533,
      13,
      22602,
      1330,
      3128,
      84
    ],
    "start_token": 0,
    "end_token": 9,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      3891,
      815,
      1061,
      262,
      4476,
      37117,
      9831,
      329,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Class names should follow the CapWords convention for readability."
  },
  {
    "line": 8,
    "text": "from tushare.util import dateu",
    "annotation": "\ud83e\udde0 ML Signal: Use of hardcoded test data for unit testing",
    "confidence": 1.0,
    "tokens": [
      6738,
      256,
      1530,
      533,
      13,
      22602,
      1330,
      3128,
      84
    ],
    "start_token": 9,
    "end_token": 18,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1327,
      40976,
      1332,
      1366,
      329,
      4326,
      4856
    ],
    "label": "ml_signal",
    "reason": "Use of hardcoded test data for unit testing"
  },
  {
    "line": 9,
    "text": "from tushare.util.dateu import is_holiday",
    "annotation": "\u2705 Best Practice: Use of unit tests to verify function behavior",
    "confidence": 0.5,
    "tokens": [
      6738,
      256,
      1530,
      533,
      13,
      22602,
      13,
      4475,
      84,
      1330,
      318,
      62,
      37689
    ],
    "start_token": 18,
    "end_token": 31,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      4326,
      5254,
      284,
      11767,
      2163,
      4069
    ],
    "label": "best_practice",
    "reason": "Use of unit tests to verify function behavior"
  },
  {
    "line": 11,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of assertTrue to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 31,
    "end_token": 31,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      6818,
      17821,
      284,
      26571,
      2938,
      10906
    ],
    "label": "ml_signal",
    "reason": "Use of assertTrue to validate expected outcomes"
  },
  {
    "line": 13,
    "text": "    def test_is_holiday(self):",
    "annotation": "\ud83e\udde0 ML Signal: Use of assertFalse to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      271,
      62,
      37689,
      7,
      944,
      2599
    ],
    "start_token": 31,
    "end_token": 43,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      6818,
      25101,
      284,
      26571,
      2938,
      10906
    ],
    "label": "ml_signal",
    "reason": "Use of assertFalse to validate expected outcomes"
  },
  {
    "line": 13,
    "text": "    def test_is_holiday(self):",
    "annotation": "\ud83e\udde0 ML Signal: Use of assertTrue to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      271,
      62,
      37689,
      7,
      944,
      2599
    ],
    "start_token": 43,
    "end_token": 55,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      6818,
      17821,
      284,
      26571,
      2938,
      10906
    ],
    "label": "ml_signal",
    "reason": "Use of assertTrue to validate expected outcomes"
  },
  {
    "line": 13,
    "text": "    def test_is_holiday(self):",
    "annotation": "\ud83e\udde0 ML Signal: Use of assertTrue to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      271,
      62,
      37689,
      7,
      944,
      2599
    ],
    "start_token": 55,
    "end_token": 67,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      6818,
      17821,
      284,
      26571,
      2938,
      10906
    ],
    "label": "ml_signal",
    "reason": "Use of assertTrue to validate expected outcomes"
  }
]