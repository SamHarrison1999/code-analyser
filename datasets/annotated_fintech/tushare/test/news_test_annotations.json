[
  {
    "line": 6,
    "text": "import unittest",
    "annotation": "\ud83e\udde0 ML Signal: Importing specific modules from a package indicates usage patterns",
    "confidence": 0.5,
    "tokens": [
      11748,
      555,
      715,
      395
    ],
    "start_token": 0,
    "end_token": 4,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      2176,
      13103,
      422,
      257,
      5301,
      9217,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Importing specific modules from a package indicates usage patterns"
  },
  {
    "line": 7,
    "text": "import tushare.stock.newsevent as fd",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Ensure the imported module is from a trusted source to avoid supply chain risks",
    "confidence": 0.5,
    "tokens": [
      11748,
      256,
      1530,
      533,
      13,
      13578,
      13,
      3605,
      325,
      1151,
      355,
      277,
      67
    ],
    "start_token": 4,
    "end_token": 17,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      48987,
      262,
      17392,
      8265,
      318,
      422,
      257,
      13467,
      2723,
      284,
      3368,
      5127,
      6333,
      7476
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Ensure the imported module is from a trusted source to avoid supply chain risks"
  },
  {
    "line": 7,
    "text": "import tushare.stock.newsevent as fd",
    "annotation": "\u2705 Best Practice: Inheriting from unittest.TestCase to create a test case class",
    "confidence": 1.0,
    "tokens": [
      11748,
      256,
      1530,
      533,
      13,
      13578,
      13,
      3605,
      325,
      1151,
      355,
      277,
      67
    ],
    "start_token": 17,
    "end_token": 30,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      47025,
      1780,
      422,
      555,
      715,
      395,
      13,
      14402,
      20448,
      284,
      2251,
      257,
      1332,
      1339,
      1398
    ],
    "label": "best_practice",
    "reason": "Inheriting from unittest.TestCase to create a test case class"
  },
  {
    "line": 9,
    "text": "class Test(unittest.TestCase):",
    "annotation": "\ud83e\udde0 ML Signal: Method setting multiple attributes, indicating a pattern of data initialization",
    "confidence": 0.5,
    "tokens": [
      4871,
      6208,
      7,
      403,
      715,
      395,
      13,
      14402,
      20448,
      2599
    ],
    "start_token": 30,
    "end_token": 40,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      4634,
      3294,
      12608,
      11,
      12739,
      257,
      3912,
      286,
      1366,
      37588
    ],
    "label": "ml_signal",
    "reason": "Method setting multiple attributes, indicating a pattern of data initialization"
  },
  {
    "line": 11,
    "text": "    def set_data(self):",
    "annotation": "\ud83e\udde0 ML Signal: Hardcoded values for attributes, indicating a pattern of static configuration",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      900,
      62,
      7890,
      7,
      944,
      2599
    ],
    "start_token": 40,
    "end_token": 50,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6912,
      40976,
      3815,
      329,
      12608,
      11,
      12739,
      257,
      3912,
      286,
      9037,
      8398
    ],
    "label": "ml_signal",
    "reason": "Hardcoded values for attributes, indicating a pattern of static configuration"
  },
  {
    "line": 13,
    "text": "        self.start = '2015-01-03'",
    "annotation": "\ud83e\udde0 ML Signal: Hardcoded values for attributes, indicating a pattern of static configuration",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      9688,
      796,
      705,
      4626,
      12,
      486,
      12,
      3070,
      6
    ],
    "start_token": 50,
    "end_token": 68,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6912,
      40976,
      3815,
      329,
      12608,
      11,
      12739,
      257,
      3912,
      286,
      9037,
      8398
    ],
    "label": "ml_signal",
    "reason": "Hardcoded values for attributes, indicating a pattern of static configuration"
  },
  {
    "line": 15,
    "text": "        self.year = 2014",
    "annotation": "\ud83e\udde0 ML Signal: Hardcoded values for attributes, indicating a pattern of static configuration",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      1941,
      796,
      1946
    ],
    "start_token": 68,
    "end_token": 80,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6912,
      40976,
      3815,
      329,
      12608,
      11,
      12739,
      257,
      3912,
      286,
      9037,
      8398
    ],
    "label": "ml_signal",
    "reason": "Hardcoded values for attributes, indicating a pattern of static configuration"
  },
  {
    "line": 17,
    "text": "        self.top = 60",
    "annotation": "\ud83e\udde0 ML Signal: Hardcoded values for attributes, indicating a pattern of static configuration",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      4852,
      796,
      3126
    ],
    "start_token": 80,
    "end_token": 92,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6912,
      40976,
      3815,
      329,
      12608,
      11,
      12739,
      257,
      3912,
      286,
      9037,
      8398
    ],
    "label": "ml_signal",
    "reason": "Hardcoded values for attributes, indicating a pattern of static configuration"
  },
  {
    "line": 19,
    "text": "     ",
    "annotation": "\ud83e\udde0 ML Signal: Hardcoded values for attributes, indicating a pattern of static configuration",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 92,
    "end_token": 97,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6912,
      40976,
      3815,
      329,
      12608,
      11,
      12739,
      257,
      3912,
      286,
      9037,
      8398
    ],
    "label": "ml_signal",
    "reason": "Hardcoded values for attributes, indicating a pattern of static configuration"
  },
  {
    "line": 21,
    "text": "    def test_get_latest_news(self):",
    "annotation": "\ud83e\udde0 ML Signal: Hardcoded values for attributes, indicating a pattern of static configuration",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      42861,
      62,
      10827,
      7,
      944,
      2599
    ],
    "start_token": 97,
    "end_token": 111,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6912,
      40976,
      3815,
      329,
      12608,
      11,
      12739,
      257,
      3912,
      286,
      9037,
      8398
    ],
    "label": "ml_signal",
    "reason": "Hardcoded values for attributes, indicating a pattern of static configuration"
  },
  {
    "line": 23,
    "text": "        print(fd.get_latest_news(self.top, self.show_content)) ",
    "annotation": "\ud83e\udde0 ML Signal: Boolean flag indicating a pattern of conditional behavior",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      16344,
      13,
      1136,
      62,
      42861,
      62,
      10827,
      7,
      944,
      13,
      4852,
      11,
      2116,
      13,
      12860,
      62,
      11299,
      4008,
      220
    ],
    "start_token": 111,
    "end_token": 139,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      41146,
      6056,
      12739,
      257,
      3912,
      286,
      26340,
      4069
    ],
    "label": "ml_signal",
    "reason": "Boolean flag indicating a pattern of conditional behavior"
  },
  {
    "line": 17,
    "text": "        self.top = 60",
    "annotation": "\ud83e\udde0 ML Signal: Method name follows a common test naming pattern",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      4852,
      796,
      3126
    ],
    "start_token": 139,
    "end_token": 151,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      1438,
      5679,
      257,
      2219,
      1332,
      19264,
      3912
    ],
    "label": "ml_signal",
    "reason": "Method name follows a common test naming pattern"
  },
  {
    "line": 19,
    "text": "     ",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of print statements in test code can clutter output",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 151,
    "end_token": 156,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      3601,
      6299,
      287,
      1332,
      2438,
      460,
      45343,
      5072
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of print statements in test code can clutter output"
  },
  {
    "line": 20,
    "text": "     ",
    "annotation": "\u2705 Best Practice: Consider using assertions instead of print for testing",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 156,
    "end_token": 161,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      29965,
      2427,
      286,
      3601,
      329,
      4856
    ],
    "label": "best_practice",
    "reason": "Consider using assertions instead of print for testing"
  },
  {
    "line": 20,
    "text": "     ",
    "annotation": "\ud83e\udde0 ML Signal: Method name follows a common test naming pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 161,
    "end_token": 166,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      1438,
      5679,
      257,
      2219,
      1332,
      19264,
      3912
    ],
    "label": "ml_signal",
    "reason": "Method name follows a common test naming pattern"
  },
  {
    "line": 22,
    "text": "        self.set_data()",
    "annotation": "\ud83e\udde0 ML Signal: Method call pattern for setting up test data",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      2617,
      62,
      7890,
      3419
    ],
    "start_token": 166,
    "end_token": 179,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      869,
      3912,
      329,
      4634,
      510,
      1332,
      1366
    ],
    "label": "ml_signal",
    "reason": "Method call pattern for setting up test data"
  },
  {
    "line": 24,
    "text": "        ",
    "annotation": "\ud83e\udde0 ML Signal: Method call pattern for fetching notices",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 179,
    "end_token": 187,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      869,
      3912,
      329,
      21207,
      278,
      19748
    ],
    "label": "ml_signal",
    "reason": "Method call pattern for fetching notices"
  },
  {
    "line": 25,
    "text": "        ",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for NoneType if fd.get_notices returns None",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 187,
    "end_token": 195,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      6045,
      6030,
      611,
      277,
      67,
      13,
      1136,
      62,
      1662,
      1063,
      5860,
      6045
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for NoneType if fd.get_notices returns None"
  },
  {
    "line": 27,
    "text": "        self.set_data()",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of deprecated .ix indexer, which can lead to unexpected behavior",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      2617,
      62,
      7890,
      3419
    ],
    "start_token": 195,
    "end_token": 208,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      39224,
      764,
      844,
      6376,
      263,
      11,
      543,
      460,
      1085,
      284,
      10059,
      4069
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of deprecated .ix indexer, which can lead to unexpected behavior"
  },
  {
    "line": 27,
    "text": "        self.set_data()",
    "annotation": "\u2705 Best Practice: Consider using .iloc or .loc for indexing DataFrames",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      2617,
      62,
      7890,
      3419
    ],
    "start_token": 208,
    "end_token": 221,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      764,
      346,
      420,
      393,
      764,
      17946,
      329,
      6376,
      278,
      6060,
      35439
    ],
    "label": "best_practice",
    "reason": "Consider using .iloc or .loc for indexing DataFrames"
  },
  {
    "line": 27,
    "text": "        self.set_data()",
    "annotation": "\ud83e\udde0 ML Signal: Accessing DataFrame content using index",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      2617,
      62,
      7890,
      3419
    ],
    "start_token": 221,
    "end_token": 234,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8798,
      278,
      6060,
      19778,
      2695,
      1262,
      6376
    ],
    "label": "ml_signal",
    "reason": "Accessing DataFrame content using index"
  },
  {
    "line": 24,
    "text": "        ",
    "annotation": "\u2705 Best Practice: Consider adding a docstring to describe the purpose of the test case.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220
    ],
    "start_token": 234,
    "end_token": 242,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      4375,
      257,
      2205,
      8841,
      284,
      6901,
      262,
      4007,
      286,
      262,
      1332,
      1339,
      13
    ],
    "label": "best_practice",
    "reason": "Consider adding a docstring to describe the purpose of the test case."
  },
  {
    "line": 26,
    "text": "    def test_get_notices(self):",
    "annotation": "\ud83e\udde0 ML Signal: Usage of print statements in test functions can indicate debugging practices.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      1136,
      62,
      1662,
      1063,
      7,
      944,
      2599
    ],
    "start_token": 242,
    "end_token": 255,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      3601,
      6299,
      287,
      1332,
      5499,
      460,
      7603,
      28769,
      6593,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of print statements in test functions can indicate debugging practices."
  },
  {
    "line": 27,
    "text": "        self.set_data()",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Direct execution of unittest.main() without argument control can lead to unintended test discovery.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      2617,
      62,
      7890,
      3419
    ],
    "start_token": 255,
    "end_token": 268,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      4128,
      9706,
      286,
      555,
      715,
      395,
      13,
      12417,
      3419,
      1231,
      4578,
      1630,
      460,
      1085,
      284,
      30261,
      1332,
      9412,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Direct execution of unittest.main() without argument control can lead to unintended test discovery."
  }
]