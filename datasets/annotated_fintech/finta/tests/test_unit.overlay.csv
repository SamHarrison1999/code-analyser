annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Importing specific modules or classes can improve code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 17267, 278, 2176, 13103, 393, 6097, 460, 2987, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,7,best_practice,4,Importing specific modules or classes can improve code readability and maintainability.,,0,from pandas.core import series,"[6738, 19798, 292, 13, 7295, 1330, 2168]"
‚úÖ Best Practice: Importing specific functions or classes from a library can improve code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 17267, 278, 2176, 5499, 393, 6097, 422, 257, 5888, 460, 2987, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,7,best_practice,6,Importing specific functions or classes from a library can improve code readability and maintainability.,,7,,[]
‚ö†Ô∏è SAST Risk (Medium): os.path.abspath(__file__) can expose sensitive file path information.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 28686, 13, 6978, 13, 397, 2777, 776, 7, 834, 7753, 834, 8, 460, 15651, 8564, 2393, 3108, 1321, 13]",1.0,7,sast_risk,6,os.path.abspath(__file__) can expose sensitive file path information.,Medium,7,,[]
‚ö†Ô∏è SAST Risk (Medium): os.path.join with user-controlled input can lead to directory traversal vulnerabilities.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 28686, 13, 6978, 13, 22179, 351, 2836, 12, 14401, 5128, 460, 1085, 284, 8619, 33038, 282, 23805, 13]",1.0,30,sast_risk,10,os.path.join with user-controlled input can lead to directory traversal vulnerabilities.,Medium,7,    return os.path.dirname(os.path.abspath(__file__)),"[220, 220, 220, 1441, 28686, 13, 6978, 13, 15908, 3672, 7, 418, 13, 6978, 13, 397, 2777, 776, 7, 834, 7753, 834, 4008]"
üß† ML Signal: Reading CSV files is a common operation in data processing tasks.,"[8582, 100, 254, 10373, 26484, 25, 11725, 44189, 3696, 318, 257, 2219, 4905, 287, 1366, 7587, 8861, 13]",1.0,58,ml_signal,13,Reading CSV files is a common operation in data processing tasks.,,30,"data_file = os.path.join(rootdir(), ""data/bittrex_btc-usdt.csv"")","[7890, 62, 7753, 796, 28686, 13, 6978, 13, 22179, 7, 15763, 15908, 22784, 366, 7890, 14, 65, 715, 21510, 62, 18347, 66, 12, 385, 28664, 13, 40664, 4943]"
‚ö†Ô∏è SAST Risk (Low): pd.read_csv can be exploited if the CSV file contains malicious content.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 279, 67, 13, 961, 62, 40664, 460, 307, 21514, 611, 262, 44189, 2393, 4909, 17412, 2695, 13]",1.0,58,sast_risk,14,pd.read_csv can be exploited if the CSV file contains malicious content.,Low,58,,[]
‚úÖ Best Practice: Specify 'index_col' and 'parse_dates' for better data handling and performance.,"[26486, 227, 6705, 19939, 25, 18291, 1958, 705, 9630, 62, 4033, 6, 290, 705, 29572, 62, 19581, 6, 329, 1365, 1366, 9041, 290, 2854, 13]",1.0,84,best_practice,15,Specify 'index_col' and 'parse_dates' for better data handling and performance.,,58,"ohlc = pd.read_csv(data_file, index_col=""date"", parse_dates=True)","[1219, 44601, 796, 279, 67, 13, 961, 62, 40664, 7, 7890, 62, 7753, 11, 6376, 62, 4033, 2625, 4475, 1600, 21136, 62, 19581, 28, 17821, 8]"
üß† ML Signal: Usage of TA.SMA function with specific parameters,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 21664, 13, 50, 5673, 2163, 351, 2176, 10007]",0.5,84,ml_signal,12,Usage of TA.SMA function with specific parameters,,84,,[]
"‚ö†Ô∏è SAST Risk (Low): Assert statements are used for testing, which may be disabled in production","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 861, 6299, 389, 973, 329, 4856, 11, 543, 743, 307, 10058, 287, 3227]",0.5,84,sast_risk,14,"Assert statements are used for testing, which may be disabled in production",Low,84,,[]
"‚ö†Ô∏è SAST Risk (Low): Assert statements are used for testing, which may be disabled in production","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 861, 6299, 389, 973, 329, 4856, 11, 543, 743, 307, 10058, 287, 3227]",0.5,84,sast_risk,16,"Assert statements are used for testing, which may be disabled in production",Low,84,,[]
"üß† ML Signal: Testing function for TA.SMM, useful for learning test patterns","[8582, 100, 254, 10373, 26484, 25, 23983, 2163, 329, 21664, 13, 50, 12038, 11, 4465, 329, 4673, 1332, 7572]",0.5,84,ml_signal,17,"Testing function for TA.SMM, useful for learning test patterns",,84,,[]
‚ö†Ô∏è SAST Risk (Low): Potential risk if 'ohlc' is not validated or sanitized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 705, 1219, 44601, 6, 318, 407, 31031, 393, 5336, 36951]",1.0,93,sast_risk,19,Potential risk if 'ohlc' is not validated or sanitized,Low,84,"    """"""test TA.ma""""""","[220, 220, 220, 37227, 9288, 21664, 13, 2611, 37811]"
‚úÖ Best Practice: Use of round() to ensure precision in floating-point operations,"[26486, 227, 6705, 19939, 25, 5765, 286, 2835, 3419, 284, 4155, 15440, 287, 12462, 12, 4122, 4560]",0.5,93,best_practice,20,Use of round() to ensure precision in floating-point operations,,93,,[]
"‚ö†Ô∏è SAST Risk (Low): If 'ma' is not a series, this will raise an AssertionError","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 1002, 705, 2611, 6, 318, 407, 257, 2168, 11, 428, 481, 5298, 281, 2195, 861, 295, 12331]",0.5,93,sast_risk,22,"If 'ma' is not a series, this will raise an AssertionError",Low,93,,[]
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can be unreliable,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 307, 29954]",0.5,112,sast_risk,24,Direct comparison of floating-point numbers can be unreliable,Low,93,    assert ma.values[-1] == 6922.33922063,"[220, 220, 220, 6818, 17266, 13, 27160, 58, 12, 16, 60, 6624, 8644, 1828, 13, 2091, 5892, 1238, 5066]"
üß† ML Signal: Use of assert to validate expected outcomes in tests,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 284, 26571, 2938, 10906, 287, 5254]",1.0,112,ml_signal,25,Use of assert to validate expected outcomes in tests,,112,,[]
"üß† ML Signal: Testing function for TA.SSMA, useful for learning test patterns","[8582, 100, 254, 10373, 26484, 25, 23983, 2163, 329, 21664, 13, 5432, 5673, 11, 4465, 329, 4673, 1332, 7572]",1.0,112,ml_signal,22,"Testing function for TA.SSMA, useful for learning test patterns",,112,,[]
‚ö†Ô∏è SAST Risk (Low): Potential risk if 'ohlc' is not validated or sanitized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 705, 1219, 44601, 6, 318, 407, 31031, 393, 5336, 36951]",0.5,131,sast_risk,24,Potential risk if 'ohlc' is not validated or sanitized,Low,112,    assert ma.values[-1] == 6922.33922063,"[220, 220, 220, 6818, 17266, 13, 27160, 58, 12, 16, 60, 6624, 8644, 1828, 13, 2091, 5892, 1238, 5066]"
‚úÖ Best Practice: Use of round() for consistent decimal precision,"[26486, 227, 6705, 19939, 25, 5765, 286, 2835, 3419, 329, 6414, 32465, 15440]",1.0,131,best_practice,25,Use of round() for consistent decimal precision,,131,,[]
‚ö†Ô∏è SAST Risk (Low): Assertion without error message can make debugging harder,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 861, 295, 1231, 4049, 3275, 460, 787, 28769, 7069]",0.5,137,sast_risk,27,Assertion without error message can make debugging harder,Low,131,def test_smm():,"[4299, 1332, 62, 82, 3020, 33529]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can be unreliable,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 307, 29954]",1.0,137,sast_risk,29,Direct comparison of floating-point numbers can be unreliable,Low,137,,[]
"üß† ML Signal: Function definition for testing, useful for identifying test patterns","[8582, 100, 254, 10373, 26484, 25, 15553, 6770, 329, 4856, 11, 4465, 329, 13720, 1332, 7572]",0.5,137,ml_signal,25,"Function definition for testing, useful for identifying test patterns",,137,,[]
"üß† ML Signal: Usage of TA.EMA with specific parameters, indicating a pattern for EMA calculation","[8582, 100, 254, 10373, 26484, 25, 29566, 286, 21664, 13, 27630, 351, 2176, 10007, 11, 12739, 257, 3912, 329, 412, 5673, 17952]",0.5,147,ml_signal,28,"Usage of TA.EMA with specific parameters, indicating a pattern for EMA calculation",,137,"    """"""test TA.SMM""""""","[220, 220, 220, 37227, 9288, 21664, 13, 50, 12038, 37811]"
‚ö†Ô∏è SAST Risk (Low): Lack of exception handling for potential errors in TA.EMA or round,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 38289, 286, 6631, 9041, 329, 2785, 8563, 287, 21664, 13, 27630, 393, 2835]",0.5,168,sast_risk,30,Lack of exception handling for potential errors in TA.EMA or round,Low,147,    ma = TA.SMM(ohlc).round(decimals=8),"[220, 220, 220, 17266, 796, 21664, 13, 50, 12038, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
"üß† ML Signal: Type checking with isinstance, useful for understanding expected data types","[8582, 100, 254, 10373, 26484, 25, 5994, 10627, 351, 318, 39098, 11, 4465, 329, 4547, 2938, 1366, 3858]",0.5,168,ml_signal,31,"Type checking with isinstance, useful for understanding expected data types",,168,,[]
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",0.5,184,sast_risk,33,Direct comparison of floating-point numbers can lead to precision issues,Low,168,    assert ma.values[-1] == 6490.0,"[220, 220, 220, 6818, 17266, 13, 27160, 58, 12, 16, 60, 6624, 718, 31503, 13, 15]"
"üß† ML Signal: Assertion with specific value, indicating expected output for test case","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 295, 351, 2176, 1988, 11, 12739, 2938, 5072, 329, 1332, 1339]",0.5,184,ml_signal,34,"Assertion with specific value, indicating expected output for test case",,184,,[]
üß† ML Signal: Function name follows a common pattern for test functions,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 3912, 329, 1332, 5499]",0.5,197,ml_signal,32,Function name follows a common pattern for test functions,,184,"    assert isinstance(ma, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 2611, 11, 2168, 13, 27996, 8]"
‚ö†Ô∏è SAST Risk (Low): Ensure 'ohlc' is validated and sanitized before use,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 705, 1219, 44601, 6, 318, 31031, 290, 5336, 36951, 878, 779]",1.0,197,sast_risk,34,Ensure 'ohlc' is validated and sanitized before use,Low,197,,[]
‚úÖ Best Practice: Use of 'round' for consistent decimal precision,"[26486, 227, 6705, 19939, 25, 5765, 286, 705, 744, 6, 329, 6414, 32465, 15440]",0.5,197,best_practice,35,Use of 'round' for consistent decimal precision,,197,,[]
‚ö†Ô∏è SAST Risk (Low): Ensure 'series.Series' is the correct type and imported,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 705, 25076, 13, 27996, 6, 318, 262, 3376, 2099, 290, 17392]",0.5,207,sast_risk,37,Ensure 'series.Series' is the correct type and imported,Low,197,"    """"""test TA.SSMA""""""","[220, 220, 220, 37227, 9288, 21664, 13, 5432, 5673, 37811]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can be unreliable,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 307, 29954]",0.5,228,sast_risk,39,Direct comparison of floating-point numbers can be unreliable,Low,207,    ma = TA.SSMA(ohlc).round(decimals=8),"[220, 220, 220, 17266, 796, 21664, 13, 5432, 5673, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
üß† ML Signal: Use of TA.TEMA indicates a pattern of using technical analysis for financial data,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 21664, 13, 51, 27630, 9217, 257, 3912, 286, 1262, 6276, 3781, 329, 3176, 1366]",0.5,238,ml_signal,37,Use of TA.TEMA indicates a pattern of using technical analysis for financial data,,228,"    """"""test TA.SSMA""""""","[220, 220, 220, 37227, 9288, 21664, 13, 5432, 5673, 37811]"
‚ö†Ô∏è SAST Risk (Low): Potential risk if 'ohlc' is not validated or sanitized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 705, 1219, 44601, 6, 318, 407, 31031, 393, 5336, 36951]",1.0,259,sast_risk,39,Potential risk if 'ohlc' is not validated or sanitized,Low,238,    ma = TA.SSMA(ohlc).round(decimals=8),"[220, 220, 220, 17266, 796, 21664, 13, 5432, 5673, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
üß† ML Signal: Rounding to a specific number of decimals is a common data preprocessing step,"[8582, 100, 254, 10373, 26484, 25, 371, 9969, 284, 257, 2176, 1271, 286, 875, 320, 874, 318, 257, 2219, 1366, 662, 36948, 2239]",0.5,259,ml_signal,40,Rounding to a specific number of decimals is a common data preprocessing step,,259,,[]
‚úÖ Best Practice: Ensure that the rounding is necessary for the precision required,"[26486, 227, 6705, 19939, 25, 48987, 326, 262, 38185, 318, 3306, 329, 262, 15440, 2672]",0.5,272,best_practice,41,Ensure that the rounding is necessary for the precision required,,259,"    assert isinstance(ma, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 2611, 11, 2168, 13, 27996, 8]"
‚ö†Ô∏è SAST Risk (Low): Ensure 'series.Series' is the correct type and imported properly,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 705, 25076, 13, 27996, 6, 318, 262, 3376, 2099, 290, 17392, 6105]",0.5,272,sast_risk,43,Ensure 'series.Series' is the correct type and imported properly,Low,272,,[]
üß† ML Signal: Type checking with 'isinstance' is a common pattern for ensuring data integrity,"[8582, 100, 254, 10373, 26484, 25, 5994, 10627, 351, 705, 271, 39098, 6, 318, 257, 2219, 3912, 329, 13359, 1366, 11540]",0.5,272,ml_signal,44,Type checking with 'isinstance' is a common pattern for ensuring data integrity,,272,,[]
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",0.5,281,sast_risk,46,Direct comparison of floating-point numbers can lead to precision issues,Low,272,"    """"""test TA.EMA""""""","[220, 220, 220, 37227, 9288, 21664, 13, 27630, 37811]"
üß† ML Signal: Use of assert statements indicates a pattern of test-driven development,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 6299, 9217, 257, 3912, 286, 1332, 12, 15808, 2478]",0.5,281,ml_signal,47,Use of assert statements indicates a pattern of test-driven development,,281,,[]
üß† ML Signal: Function name follows a common pattern for test functions,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 3912, 329, 1332, 5499]",1.0,300,ml_signal,42,Function name follows a common pattern for test functions,,281,    assert ma.values[-1] == 6907.53759817,"[220, 220, 220, 6818, 17266, 13, 27160, 58, 12, 16, 60, 6624, 8644, 2998, 13, 4310, 2425, 4089, 1558]"
‚ö†Ô∏è SAST Risk (Low): Ensure 'ohlc' is validated to prevent unexpected data issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 705, 1219, 44601, 6, 318, 31031, 284, 2948, 10059, 1366, 2428]",0.5,300,sast_risk,44,Ensure 'ohlc' is validated to prevent unexpected data issues,Low,300,,[]
"üß† ML Signal: Use of method chaining with round, common in data processing","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2446, 442, 1397, 351, 2835, 11, 2219, 287, 1366, 7587]",1.0,305,ml_signal,45,"Use of method chaining with round, common in data processing",,300,def test_ema():,"[4299, 1332, 62, 19687, 33529]"
‚ö†Ô∏è SAST Risk (Low): Ensure 'series.Series' is the expected type to prevent type errors,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 705, 25076, 13, 27996, 6, 318, 262, 2938, 2099, 284, 2948, 2099, 8563]",0.5,305,sast_risk,47,Ensure 'series.Series' is the expected type to prevent type errors,Low,305,,[]
üß† ML Signal: Use of isinstance for type checking,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 318, 39098, 329, 2099, 10627]",1.0,327,ml_signal,48,Use of isinstance for type checking,,305,"    ma = TA.EMA(ohlc, 50).round(decimals=8)","[220, 220, 220, 17266, 796, 21664, 13, 27630, 7, 1219, 44601, 11, 2026, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",1.0,340,sast_risk,50,Direct comparison of floating-point numbers can lead to precision issues,Low,327,"    assert isinstance(ma, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 2611, 11, 2168, 13, 27996, 8]"
üß† ML Signal: Use of assert for validation in test functions,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 329, 21201, 287, 1332, 5499]",1.0,359,ml_signal,51,Use of assert for validation in test functions,,340,    assert ma.values[-1] == 7606.84391951,"[220, 220, 220, 6818, 17266, 13, 27160, 58, 12, 16, 60, 6624, 767, 33206, 13, 5705, 2670, 1129, 4349]"
üß† ML Signal: Function name follows a common pattern for test functions,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 3912, 329, 1332, 5499]",1.0,359,ml_signal,47,Function name follows a common pattern for test functions,,359,,[]
‚ö†Ô∏è SAST Risk (Low): Potential risk if 'ohlc' is not validated or sanitized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 705, 1219, 44601, 6, 318, 407, 31031, 393, 5336, 36951]",0.5,359,sast_risk,49,Potential risk if 'ohlc' is not validated or sanitized,Low,359,,[]
"üß† ML Signal: Use of method chaining with round, common in data processing","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2446, 442, 1397, 351, 2835, 11, 2219, 287, 1366, 7587]",0.5,372,ml_signal,50,"Use of method chaining with round, common in data processing",,359,"    assert isinstance(ma, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 2611, 11, 2168, 13, 27996, 8]"
"‚úÖ Best Practice: Use of isinstance to check type, ensures correct type handling","[26486, 227, 6705, 19939, 25, 5765, 286, 318, 39098, 284, 2198, 2099, 11, 19047, 3376, 2099, 9041]",0.5,372,best_practice,52,"Use of isinstance to check type, ensures correct type handling",,372,,[]
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",1.0,378,sast_risk,54,Direct comparison of floating-point numbers can lead to precision issues,Low,372,def test_dema():,"[4299, 1332, 62, 9536, 64, 33529]"
"üß† ML Signal: Use of assert for validation, common in test functions","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 329, 21201, 11, 2219, 287, 1332, 5499]",0.5,388,ml_signal,55,"Use of assert for validation, common in test functions",,378,"    """"""test TA.DEMA""""""","[220, 220, 220, 37227, 9288, 21664, 13, 35, 27630, 37811]"
"üß† ML Signal: Testing function for TA.VAMA, useful for learning test patterns","[8582, 100, 254, 10373, 26484, 25, 23983, 2163, 329, 21664, 13, 53, 25087, 11, 4465, 329, 4673, 1332, 7572]",1.0,388,ml_signal,52,"Testing function for TA.VAMA, useful for learning test patterns",,388,,[]
"‚ö†Ô∏è SAST Risk (Low): Assumes 'ohlc' is defined and valid, potential for NameError","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 1219, 44601, 6, 318, 5447, 290, 4938, 11, 2785, 329, 6530, 12331]",1.0,394,sast_risk,54,"Assumes 'ohlc' is defined and valid, potential for NameError",Low,388,def test_dema():,"[4299, 1332, 62, 9536, 64, 33529]"
‚úÖ Best Practice: Use of method chaining for concise code,"[26486, 227, 6705, 19939, 25, 5765, 286, 2446, 442, 1397, 329, 35327, 2438]",1.0,404,best_practice,55,Use of method chaining for concise code,,394,"    """"""test TA.DEMA""""""","[220, 220, 220, 37227, 9288, 21664, 13, 35, 27630, 37811]"
"‚ö†Ô∏è SAST Risk (Low): Assumes 'series' is defined and valid, potential for NameError","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 25076, 6, 318, 5447, 290, 4938, 11, 2785, 329, 6530, 12331]",1.0,425,sast_risk,57,"Assumes 'series' is defined and valid, potential for NameError",Low,404,    ma = TA.DEMA(ohlc).round(decimals=8),"[220, 220, 220, 17266, 796, 21664, 13, 35, 27630, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
‚úÖ Best Practice: Use of assert to validate the type of 'ma',"[26486, 227, 6705, 19939, 25, 5765, 286, 6818, 284, 26571, 262, 2099, 286, 705, 2611, 6]",1.0,425,best_practice,58,Use of assert to validate the type of 'ma',,425,,[]
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point values can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3815, 460, 1085, 284, 15440, 2428]",1.0,443,sast_risk,60,Direct comparison of floating-point values can lead to precision issues,Low,425,    assert ma.values[-1] == 6323.41923994,"[220, 220, 220, 6818, 17266, 13, 27160, 58, 12, 16, 60, 6624, 8093, 1954, 13, 45068, 1954, 42691]"
‚úÖ Best Practice: Use of assert to validate the final value of 'ma',"[26486, 227, 6705, 19939, 25, 5765, 286, 6818, 284, 26571, 262, 2457, 1988, 286, 705, 2611, 6]",0.5,443,best_practice,61,Use of assert to validate the final value of 'ma',,443,,[]
üß† ML Signal: Function call to TA.ER with ohlc as input,"[8582, 100, 254, 10373, 26484, 25, 15553, 869, 284, 21664, 13, 1137, 351, 11752, 44601, 355, 5128]",1.0,464,ml_signal,57,Function call to TA.ER with ohlc as input,,443,    ma = TA.DEMA(ohlc).round(decimals=8),"[220, 220, 220, 17266, 796, 21664, 13, 35, 27630, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
‚úÖ Best Practice: Rounding to a specific number of decimals for consistency,"[26486, 227, 6705, 19939, 25, 371, 9969, 284, 257, 2176, 1271, 286, 875, 320, 874, 329, 15794]",0.5,464,best_practice,58,Rounding to a specific number of decimals for consistency,,464,,[]
‚úÖ Best Practice: Using isinstance to check the type of the variable,"[26486, 227, 6705, 19939, 25, 8554, 318, 39098, 284, 2198, 262, 2099, 286, 262, 7885]",1.0,482,best_practice,60,Using isinstance to check the type of the variable,,464,    assert ma.values[-1] == 6323.41923994,"[220, 220, 220, 6818, 17266, 13, 27160, 58, 12, 16, 60, 6624, 8093, 1954, 13, 45068, 1954, 42691]"
"üß† ML Signal: Assertion to check value range, indicating expected behavior","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 295, 284, 2198, 1988, 2837, 11, 12739, 2938, 4069]",0.5,482,ml_signal,62,"Assertion to check value range, indicating expected behavior",,482,,[]
"üß† ML Signal: Testing function for TA.KAMA, useful for learning test patterns","[8582, 100, 254, 10373, 26484, 25, 23983, 2163, 329, 21664, 13, 42, 25087, 11, 4465, 329, 4673, 1332, 7572]",1.0,482,ml_signal,62,"Testing function for TA.KAMA, useful for learning test patterns",,482,,[]
‚ö†Ô∏è SAST Risk (Low): Potential risk if 'ohlc' is not validated or sanitized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 705, 1219, 44601, 6, 318, 407, 31031, 393, 5336, 36951]",0.5,492,sast_risk,64,Potential risk if 'ohlc' is not validated or sanitized,Low,482,"    """"""test TA.TEMA""""""","[220, 220, 220, 37227, 9288, 21664, 13, 51, 27630, 37811]"
‚úÖ Best Practice: Rounding to a fixed number of decimals for consistency,"[26486, 227, 6705, 19939, 25, 371, 9969, 284, 257, 5969, 1271, 286, 875, 320, 874, 329, 15794]",0.5,492,best_practice,65,Rounding to a fixed number of decimals for consistency,,492,,[]
‚ö†Ô∏è SAST Risk (Low): Ensure 'series.Series' is the correct type and imported,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 705, 25076, 13, 27996, 6, 318, 262, 3376, 2099, 290, 17392]",1.0,492,sast_risk,67,Ensure 'series.Series' is the correct type and imported,Low,492,,[]
"üß† ML Signal: Use of assert to validate expected output, useful for learning expected behavior","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 284, 26571, 2938, 5072, 11, 4465, 329, 4673, 2938, 4069]",0.5,511,ml_signal,69,"Use of assert to validate expected output, useful for learning expected behavior",,492,    assert ma.values[-1] == 6307.48151844,"[220, 220, 220, 6818, 17266, 13, 27160, 58, 12, 16, 60, 6624, 718, 22996, 13, 2780, 1314, 1507, 2598]"
"‚ö†Ô∏è SAST Risk (Low): Hardcoded value in test, ensure it matches expected output","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 1988, 287, 1332, 11, 4155, 340, 7466, 2938, 5072]",1.0,511,sast_risk,70,"Hardcoded value in test, ensure it matches expected output",Low,511,,[]
üß† ML Signal: Use of TA.ZLEMA indicates a pattern of using technical analysis for financial data,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 21664, 13, 57, 2538, 5673, 9217, 257, 3912, 286, 1262, 6276, 3781, 329, 3176, 1366]",1.0,511,ml_signal,67,Use of TA.ZLEMA indicates a pattern of using technical analysis for financial data,,511,,[]
‚ö†Ô∏è SAST Risk (Low): Potential risk if 'ohlc' is not validated or sanitized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 705, 1219, 44601, 6, 318, 407, 31031, 393, 5336, 36951]",0.5,530,sast_risk,69,Potential risk if 'ohlc' is not validated or sanitized,Low,511,    assert ma.values[-1] == 6307.48151844,"[220, 220, 220, 6818, 17266, 13, 27160, 58, 12, 16, 60, 6624, 718, 22996, 13, 2780, 1314, 1507, 2598]"
üß† ML Signal: Rounding to a specific number of decimals is a common data preprocessing step,"[8582, 100, 254, 10373, 26484, 25, 371, 9969, 284, 257, 2176, 1271, 286, 875, 320, 874, 318, 257, 2219, 1366, 662, 36948, 2239]",1.0,530,ml_signal,70,Rounding to a specific number of decimals is a common data preprocessing step,,530,,[]
‚ö†Ô∏è SAST Risk (Low): Use of assert statements for validation; may be disabled in optimized mode,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 6818, 6299, 329, 21201, 26, 743, 307, 10058, 287, 23392, 4235]",0.5,536,sast_risk,72,Use of assert statements for validation; may be disabled in optimized mode,Low,530,def test_trima():,"[4299, 1332, 62, 2213, 8083, 33529]"
üß† ML Signal: Checking the type of 'ma' suggests a pattern of ensuring data structure integrity,"[8582, 100, 254, 10373, 26484, 25, 39432, 262, 2099, 286, 705, 2611, 6, 5644, 257, 3912, 286, 13359, 1366, 4645, 11540]",0.5,547,ml_signal,73,Checking the type of 'ma' suggests a pattern of ensuring data structure integrity,,536,"    """"""test TA.TRIMA""""""","[220, 220, 220, 37227, 9288, 21664, 13, 5446, 3955, 32, 37811]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",1.0,569,sast_risk,75,Direct comparison of floating-point numbers can lead to precision issues,Low,547,    ma = TA.TRIMA(ohlc).round(decimals=8),"[220, 220, 220, 17266, 796, 21664, 13, 5446, 3955, 32, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
üß† ML Signal: Asserting specific values indicates a pattern of using known benchmarks for validation,"[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 3815, 9217, 257, 3912, 286, 1262, 1900, 31747, 329, 21201]",0.5,569,ml_signal,76,Asserting specific values indicates a pattern of using known benchmarks for validation,,569,,[]
üß† ML Signal: Use of TA.WMA indicates a pattern of using technical analysis for financial data,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 21664, 13, 54, 5673, 9217, 257, 3912, 286, 1262, 6276, 3781, 329, 3176, 1366]",1.0,575,ml_signal,72,Use of TA.WMA indicates a pattern of using technical analysis for financial data,,569,def test_trima():,"[4299, 1332, 62, 2213, 8083, 33529]"
‚ö†Ô∏è SAST Risk (Low): Potential risk if 'ohlc' is not validated or sanitized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 705, 1219, 44601, 6, 318, 407, 31031, 393, 5336, 36951]",1.0,575,sast_risk,74,Potential risk if 'ohlc' is not validated or sanitized,Low,575,,[]
"üß† ML Signal: Use of isinstance to check type, common pattern in testing","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 318, 39098, 284, 2198, 2099, 11, 2219, 3912, 287, 4856]",1.0,597,ml_signal,75,"Use of isinstance to check type, common pattern in testing",,575,    ma = TA.TRIMA(ohlc).round(decimals=8),"[220, 220, 220, 17266, 796, 21664, 13, 5446, 3955, 32, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
"üß† ML Signal: Use of assert to validate expected output, common in test functions","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 284, 26571, 2938, 5072, 11, 2219, 287, 1332, 5499]",0.5,610,ml_signal,77,"Use of assert to validate expected output, common in test functions",,597,"    assert isinstance(ma, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 2611, 11, 2168, 13, 27996, 8]"
"üß† ML Signal: Function call to TA.HMA with ohlc as input, indicating usage of a specific technical analysis function","[8582, 100, 254, 10373, 26484, 25, 15553, 869, 284, 21664, 13, 39, 5673, 351, 11752, 44601, 355, 5128, 11, 12739, 8748, 286, 257, 2176, 6276, 3781, 2163]",0.5,623,ml_signal,77,"Function call to TA.HMA with ohlc as input, indicating usage of a specific technical analysis function",,610,"    assert isinstance(ma, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 2611, 11, 2168, 13, 27996, 8]"
‚ö†Ô∏è SAST Risk (Low): Lack of exception handling for TA.HMA call could lead to unhandled exceptions,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 38289, 286, 6631, 9041, 329, 21664, 13, 39, 5673, 869, 714, 1085, 284, 555, 38788, 13269]",0.5,623,sast_risk,79,Lack of exception handling for TA.HMA call could lead to unhandled exceptions,Low,623,,[]
"‚úÖ Best Practice: Use isinstance to ensure ma is of the expected type, improving code robustness","[26486, 227, 6705, 19939, 25, 5765, 318, 39098, 284, 4155, 17266, 318, 286, 262, 2938, 2099, 11, 10068, 2438, 12373, 1108]",0.5,623,best_practice,80,"Use isinstance to ensure ma is of the expected type, improving code robustness",,623,,[]
"üß† ML Signal: Asserting the last value of ma, indicating expected output behavior","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 262, 938, 1988, 286, 17266, 11, 12739, 2938, 5072, 4069]",0.5,633,ml_signal,82,"Asserting the last value of ma, indicating expected output behavior",,623,"    """"""test TA.TRIX""""""","[220, 220, 220, 37227, 9288, 21664, 13, 5446, 10426, 37811]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",0.5,633,sast_risk,83,Direct comparison of floating-point numbers can lead to precision issues,Low,633,,[]
üß† ML Signal: Function name follows a common test naming pattern,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 1332, 19264, 3912]",1.0,643,ml_signal,82,Function name follows a common test naming pattern,,633,"    """"""test TA.TRIX""""""","[220, 220, 220, 37227, 9288, 21664, 13, 5446, 10426, 37811]"
‚ö†Ô∏è SAST Risk (Low): Potential risk if 'TA.EVWMA' or 'ohlc' are not validated or sanitized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 705, 5603, 13, 20114, 54, 5673, 6, 393, 705, 1219, 44601, 6, 389, 407, 31031, 393, 5336, 36951]",1.0,664,sast_risk,84,Potential risk if 'TA.EVWMA' or 'ohlc' are not validated or sanitized,Low,643,    ma = TA.TRIX(ohlc).round(decimals=8),"[220, 220, 220, 17266, 796, 21664, 13, 5446, 10426, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
‚úÖ Best Practice: Use of 'round' for consistent decimal precision,"[26486, 227, 6705, 19939, 25, 5765, 286, 705, 744, 6, 329, 6414, 32465, 15440]",0.5,664,best_practice,85,Use of 'round' for consistent decimal precision,,664,,[]
‚ö†Ô∏è SAST Risk (Low): Assertion without error message can make debugging harder,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 861, 295, 1231, 4049, 3275, 460, 787, 28769, 7069]",0.5,682,sast_risk,87,Assertion without error message can make debugging harder,Low,664,    assert ma.values[-1] == -0.5498364,"[220, 220, 220, 6818, 17266, 13, 27160, 58, 12, 16, 60, 6624, 532, 15, 13, 44966, 5999, 2414]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",1.0,682,sast_risk,89,Direct comparison of floating-point numbers can lead to precision issues,Low,682,,[]
‚úÖ Best Practice: Include a docstring to describe the purpose of the test function,"[26486, 227, 6705, 19939, 25, 40348, 257, 2205, 8841, 284, 6901, 262, 4007, 286, 262, 1332, 2163]",0.5,682,best_practice,85,Include a docstring to describe the purpose of the test function,,682,,[]
üß† ML Signal: Usage of TA.VWAP indicates a pattern of using technical analysis functions,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 21664, 13, 30133, 2969, 9217, 257, 3912, 286, 1262, 6276, 3781, 5499]",1.0,682,ml_signal,88,Usage of TA.VWAP indicates a pattern of using technical analysis functions,,682,,[]
‚ö†Ô∏è SAST Risk (Low): Ensure that 'ohlc' is properly validated and sanitized before use,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 326, 705, 1219, 44601, 6, 318, 6105, 31031, 290, 5336, 36951, 878, 779]",0.5,688,sast_risk,90,Ensure that 'ohlc' is properly validated and sanitized before use,Low,682,def test_vama():,"[4299, 1332, 62, 85, 1689, 33529]"
üß† ML Signal: Checking the type of 'ma' suggests a pattern of type validation,"[8582, 100, 254, 10373, 26484, 25, 39432, 262, 2099, 286, 705, 2611, 6, 5644, 257, 3912, 286, 2099, 21201]",0.5,698,ml_signal,91,Checking the type of 'ma' suggests a pattern of type validation,,688,"    """"""test TA.VAMA""""""","[220, 220, 220, 37227, 9288, 21664, 13, 53, 25087, 37811]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",1.0,721,sast_risk,93,Direct comparison of floating-point numbers can lead to precision issues,Low,698,"    ma = TA.VAMA(ohlc, 20).round(decimals=8)","[220, 220, 220, 17266, 796, 21664, 13, 53, 25087, 7, 1219, 44601, 11, 1160, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
"üß† ML Signal: Testing function for TA.SMMA, useful for learning test patterns","[8582, 100, 254, 10373, 26484, 25, 23983, 2163, 329, 21664, 13, 12310, 5673, 11, 4465, 329, 4673, 1332, 7572]",0.5,721,ml_signal,92,"Testing function for TA.SMMA, useful for learning test patterns",,721,,[]
‚ö†Ô∏è SAST Risk (Low): Potential risk if 'ohlc' is not validated or sanitized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 705, 1219, 44601, 6, 318, 407, 31031, 393, 5336, 36951]",0.5,721,sast_risk,94,Potential risk if 'ohlc' is not validated or sanitized,Low,721,,[]
"üß† ML Signal: Use of method chaining with round, common in data processing","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2446, 442, 1397, 351, 2835, 11, 2219, 287, 1366, 7587]",0.5,734,ml_signal,95,"Use of method chaining with round, common in data processing",,721,"    assert isinstance(ma, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 2611, 11, 2168, 13, 27996, 8]"
"‚ö†Ô∏è SAST Risk (Low): Assumes 'series.Series' is a valid type, could raise an exception if not","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 25076, 13, 27996, 6, 318, 257, 4938, 2099, 11, 714, 5298, 281, 6631, 611, 407]",0.5,734,sast_risk,97,"Assumes 'series.Series' is a valid type, could raise an exception if not",Low,734,,[]
"üß† ML Signal: Assertion for type checking, useful for learning type validation","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 295, 329, 2099, 10627, 11, 4465, 329, 4673, 2099, 21201]",0.5,734,ml_signal,98,"Assertion for type checking, useful for learning type validation",,734,,[]
"‚ö†Ô∏è SAST Risk (Low): Hardcoded value in assertion, may lead to false positives if data changes","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 1988, 287, 19190, 11, 743, 1085, 284, 3991, 38548, 611, 1366, 2458]",0.5,743,sast_risk,100,"Hardcoded value in assertion, may lead to false positives if data changes",Low,734,"    """"""test TA.ER""""""","[220, 220, 220, 37227, 9288, 21664, 13, 1137, 37811]"
"üß† ML Signal: Assertion for value checking, useful for learning value validation","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 295, 329, 1988, 10627, 11, 4465, 329, 4673, 1988, 21201]",0.5,743,ml_signal,101,"Assertion for value checking, useful for learning value validation",,743,,[]
üß† ML Signal: Usage of TA.FRAMA function indicates a pattern for financial analysis,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 21664, 13, 10913, 25087, 2163, 9217, 257, 3912, 329, 3176, 3781]",0.5,743,ml_signal,97,Usage of TA.FRAMA function indicates a pattern for financial analysis,,743,,[]
‚ö†Ô∏è SAST Risk (Low): Potential risk if 'ohlc' is not validated or sanitized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 705, 1219, 44601, 6, 318, 407, 31031, 393, 5336, 36951]",1.0,748,sast_risk,99,Potential risk if 'ohlc' is not validated or sanitized,Low,743,def test_er():,"[4299, 1332, 62, 263, 33529]"
‚úÖ Best Practice: Use of round() for consistent decimal precision,"[26486, 227, 6705, 19939, 25, 5765, 286, 2835, 3419, 329, 6414, 32465, 15440]",1.0,757,best_practice,100,Use of round() for consistent decimal precision,,748,"    """"""test TA.ER""""""","[220, 220, 220, 37227, 9288, 21664, 13, 1137, 37811]"
‚ö†Ô∏è SAST Risk (Low): Assertion without error handling could lead to unhandled exceptions,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 861, 295, 1231, 4049, 9041, 714, 1085, 284, 555, 38788, 13269]",0.5,777,sast_risk,102,Assertion without error handling could lead to unhandled exceptions,Low,757,    er = TA.ER(ohlc).round(decimals=8),"[220, 220, 220, 1931, 796, 21664, 13, 1137, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
‚ö†Ô∏è SAST Risk (Low): Hardcoded value in assertion may lead to brittle tests,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 1988, 287, 19190, 743, 1085, 284, 49307, 5254]",1.0,790,sast_risk,104,Hardcoded value in assertion may lead to brittle tests,Low,777,"    assert isinstance(er, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 263, 11, 2168, 13, 27996, 8]"
üß† ML Signal: Function definition for testing a specific feature or component,"[8582, 100, 254, 10373, 26484, 25, 15553, 6770, 329, 4856, 257, 2176, 3895, 393, 7515]",1.0,799,ml_signal,100,Function definition for testing a specific feature or component,,790,"    """"""test TA.ER""""""","[220, 220, 220, 37227, 9288, 21664, 13, 1137, 37811]"
üß† ML Signal: Instantiation and usage of a specific method from a library,"[8582, 100, 254, 10373, 26484, 25, 24470, 3920, 290, 8748, 286, 257, 2176, 2446, 422, 257, 5888]",0.5,799,ml_signal,103,Instantiation and usage of a specific method from a library,,799,,[]
‚ö†Ô∏è SAST Risk (Low): Lack of exception handling for potential errors in method calls,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 38289, 286, 6631, 9041, 329, 2785, 8563, 287, 2446, 3848]",1.0,815,sast_risk,105,Lack of exception handling for potential errors in method calls,Low,799,    assert -100 < er.values[-1] < 100,"[220, 220, 220, 6818, 532, 3064, 1279, 1931, 13, 27160, 58, 12, 16, 60, 1279, 1802]"
‚úÖ Best Practice: Use of isinstance to ensure the correct type of the object,"[26486, 227, 6705, 19939, 25, 5765, 286, 318, 39098, 284, 4155, 262, 3376, 2099, 286, 262, 2134]",0.5,815,best_practice,106,Use of isinstance to ensure the correct type of the object,,815,,[]
‚úÖ Best Practice: Use of isinstance to ensure the correct type of the object,"[26486, 227, 6705, 19939, 25, 5765, 286, 318, 39098, 284, 4155, 262, 3376, 2099, 286, 262, 2134]",0.5,821,best_practice,108,Use of isinstance to ensure the correct type of the object,,815,def test_kama():,"[4299, 1332, 62, 74, 1689, 33529]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",1.0,821,sast_risk,110,Direct comparison of floating-point numbers can lead to precision issues,Low,821,,[]
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",1.0,821,sast_risk,112,Direct comparison of floating-point numbers can lead to precision issues,Low,821,,[]
üß† ML Signal: Usage of TA.PPO function with specific rounding,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 21664, 13, 10246, 46, 2163, 351, 2176, 38185]",0.5,831,ml_signal,109,Usage of TA.PPO function with specific rounding,,821,"    """"""test TA.KAMA""""""","[220, 220, 220, 37227, 9288, 21664, 13, 42, 25087, 37811]"
"üß† ML Signal: Checking type of ""PPO"" key in ppo dictionary","[8582, 100, 254, 10373, 26484, 25, 39432, 2099, 286, 366, 10246, 46, 1, 1994, 287, 279, 7501, 22155]",0.5,852,ml_signal,111,"Checking type of ""PPO"" key in ppo dictionary",,831,    ma = TA.KAMA(ohlc).round(decimals=8),"[220, 220, 220, 17266, 796, 21664, 13, 42, 25087, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
"üß† ML Signal: Checking type of ""SIGNAL"" key in ppo dictionary","[8582, 100, 254, 10373, 26484, 25, 39432, 2099, 286, 366, 46224, 1847, 1, 1994, 287, 279, 7501, 22155]",0.5,865,ml_signal,113,"Checking type of ""SIGNAL"" key in ppo dictionary",,852,"    assert isinstance(ma, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 2611, 11, 2168, 13, 27996, 8]"
"üß† ML Signal: Checking type of ""HISTO"" key in ppo dictionary","[8582, 100, 254, 10373, 26484, 25, 39432, 2099, 286, 366, 39, 8808, 46, 1, 1994, 287, 279, 7501, 22155]",0.5,865,ml_signal,115,"Checking type of ""HISTO"" key in ppo dictionary",,865,,[]
"üß† ML Signal: Verifying specific value in ""PPO"" series","[8582, 100, 254, 10373, 26484, 25, 4643, 4035, 2176, 1988, 287, 366, 10246, 46, 1, 2168]",0.5,872,ml_signal,117,"Verifying specific value in ""PPO"" series",,865,def test_zlema():,"[4299, 1332, 62, 89, 293, 2611, 33529]"
"üß† ML Signal: Verifying specific value in ""SIGNAL"" series","[8582, 100, 254, 10373, 26484, 25, 4643, 4035, 2176, 1988, 287, 366, 46224, 1847, 1, 2168]",0.5,872,ml_signal,119,"Verifying specific value in ""SIGNAL"" series",,872,,[]
"üß† ML Signal: Verifying specific value in ""HISTO"" series","[8582, 100, 254, 10373, 26484, 25, 4643, 4035, 2176, 1988, 287, 366, 39, 8808, 46, 1, 2168]",0.5,872,ml_signal,121,"Verifying specific value in ""HISTO"" series",,872,,[]
"üß† ML Signal: Testing function for VW_MACD, useful for learning test patterns","[8582, 100, 254, 10373, 26484, 25, 23983, 2163, 329, 31388, 62, 44721, 35, 11, 4465, 329, 4673, 1332, 7572]",1.0,883,ml_signal,118,"Testing function for VW_MACD, useful for learning test patterns",,872,"    """"""test TA.ZLEMA""""""","[220, 220, 220, 37227, 9288, 21664, 13, 57, 2538, 5673, 37811]"
"‚ö†Ô∏è SAST Risk (Low): Assumes 'ohlc' is defined and valid, potential for NameError","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 1219, 44601, 6, 318, 5447, 290, 4938, 11, 2785, 329, 6530, 12331]",1.0,905,sast_risk,120,"Assumes 'ohlc' is defined and valid, potential for NameError",Low,883,    ma = TA.ZLEMA(ohlc).round(decimals=8),"[220, 220, 220, 17266, 796, 21664, 13, 57, 2538, 5673, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
‚úÖ Best Practice: Use of round() for consistent decimal precision,"[26486, 227, 6705, 19939, 25, 5765, 286, 2835, 3419, 329, 6414, 32465, 15440]",1.0,905,best_practice,121,Use of round() for consistent decimal precision,,905,,[]
"‚ö†Ô∏è SAST Risk (Low): Assumes 'series.Series' is the correct type, potential for TypeError","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 25076, 13, 27996, 6, 318, 262, 3376, 2099, 11, 2785, 329, 5994, 12331]",1.0,924,sast_risk,123,"Assumes 'series.Series' is the correct type, potential for TypeError",Low,905,    assert ma.values[-1] == 6462.46183365,"[220, 220, 220, 6818, 17266, 13, 27160, 58, 12, 16, 60, 6624, 718, 39997, 13, 3510, 1507, 2091, 2996]"
"‚ö†Ô∏è SAST Risk (Low): Assumes 'series.Series' is the correct type, potential for TypeError","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 25076, 13, 27996, 6, 318, 262, 3376, 2099, 11, 2785, 329, 5994, 12331]",1.0,924,sast_risk,125,"Assumes 'series.Series' is the correct type, potential for TypeError",Low,924,,[]
"‚ö†Ô∏è SAST Risk (Low): Hardcoded value for test, may cause false negatives if data changes","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 1988, 329, 1332, 11, 743, 2728, 3991, 42510, 611, 1366, 2458]",0.5,934,sast_risk,127,"Hardcoded value for test, may cause false negatives if data changes",Low,924,"    """"""test TA.WMA""""""","[220, 220, 220, 37227, 9288, 21664, 13, 54, 5673, 37811]"
"‚ö†Ô∏è SAST Risk (Low): Hardcoded value for test, may cause false negatives if data changes","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 1988, 329, 1332, 11, 743, 2728, 3991, 42510, 611, 1366, 2458]",0.5,955,sast_risk,129,"Hardcoded value for test, may cause false negatives if data changes",Low,934,    ma = TA.WMA(ohlc).round(decimals=8),"[220, 220, 220, 17266, 796, 21664, 13, 54, 5673, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
‚úÖ Best Practice: Include a docstring to describe the purpose of the test function,"[26486, 227, 6705, 19939, 25, 40348, 257, 2205, 8841, 284, 6901, 262, 4007, 286, 262, 1332, 2163]",0.5,974,best_practice,123,Include a docstring to describe the purpose of the test function,,955,    assert ma.values[-1] == 6462.46183365,"[220, 220, 220, 6818, 17266, 13, 27160, 58, 12, 16, 60, 6624, 718, 39997, 13, 3510, 1507, 2091, 2996]"
üß† ML Signal: Usage of a specific method from a library (TA.EV_MACD) indicates a pattern in how this library is used,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2176, 2446, 422, 257, 5888, 357, 5603, 13, 20114, 62, 44721, 35, 8, 9217, 257, 3912, 287, 703, 428, 5888, 318, 973]",0.5,980,ml_signal,126,Usage of a specific method from a library (TA.EV_MACD) indicates a pattern in how this library is used,,974,def test_wma():,"[4299, 1332, 62, 86, 2611, 33529]"
‚ö†Ô∏è SAST Risk (Low): Ensure that 'ohlc' is validated and sanitized before use to prevent potential data integrity issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 326, 705, 1219, 44601, 6, 318, 31031, 290, 5336, 36951, 878, 779, 284, 2948, 2785, 1366, 11540, 2428]",0.5,980,sast_risk,128,Ensure that 'ohlc' is validated and sanitized before use to prevent potential data integrity issues,Low,980,,[]
‚úÖ Best Practice: Use of assert to validate the type of the result,"[26486, 227, 6705, 19939, 25, 5765, 286, 6818, 284, 26571, 262, 2099, 286, 262, 1255]",1.0,1001,best_practice,129,Use of assert to validate the type of the result,,980,    ma = TA.WMA(ohlc).round(decimals=8),"[220, 220, 220, 17266, 796, 21664, 13, 54, 5673, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
‚úÖ Best Practice: Use of assert to validate the type of the result,"[26486, 227, 6705, 19939, 25, 5765, 286, 6818, 284, 26571, 262, 2099, 286, 262, 1255]",1.0,1014,best_practice,131,Use of assert to validate the type of the result,,1001,"    assert isinstance(ma, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 2611, 11, 2168, 13, 27996, 8]"
‚úÖ Best Practice: Use of assert to validate the expected value of the result,"[26486, 227, 6705, 19939, 25, 5765, 286, 6818, 284, 26571, 262, 2938, 1988, 286, 262, 1255]",1.0,1014,best_practice,133,Use of assert to validate the expected value of the result,,1014,,[]
‚úÖ Best Practice: Use of assert to validate the expected value of the result,"[26486, 227, 6705, 19939, 25, 5765, 286, 6818, 284, 26571, 262, 2938, 1988, 286, 262, 1255]",1.0,1019,best_practice,135,Use of assert to validate the expected value of the result,,1014,def test_hma():,"[4299, 1332, 62, 21720, 33529]"
üß† ML Signal: Use of a method from a library (TA) to perform a calculation,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 2446, 422, 257, 5888, 357, 5603, 8, 284, 1620, 257, 17952]",0.5,1038,ml_signal,132,Use of a method from a library (TA) to perform a calculation,,1019,    assert ma.values[-1] == 6474.47003078,"[220, 220, 220, 6818, 17266, 13, 27160, 58, 12, 16, 60, 6624, 718, 38652, 13, 2857, 405, 1270, 3695]"
‚ö†Ô∏è SAST Risk (Low): Lack of error handling for TA.MOM method call,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 38289, 286, 4049, 9041, 329, 21664, 13, 44, 2662, 2446, 869]",0.5,1038,sast_risk,134,Lack of error handling for TA.MOM method call,Low,1038,,[]
"üß† ML Signal: Type checking with isinstance, indicating expected data type","[8582, 100, 254, 10373, 26484, 25, 5994, 10627, 351, 318, 39098, 11, 12739, 2938, 1366, 2099]",0.5,1043,ml_signal,135,"Type checking with isinstance, indicating expected data type",,1038,def test_hma():,"[4299, 1332, 62, 21720, 33529]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",0.5,1043,sast_risk,137,Direct comparison of floating-point numbers can lead to precision issues,Low,1043,,[]
üß† ML Signal: Use of assert to validate the output of a function,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 284, 26571, 262, 5072, 286, 257, 2163]",1.0,1064,ml_signal,138,Use of assert to validate the output of a function,,1043,    ma = TA.HMA(ohlc).round(decimals=8),"[220, 220, 220, 17266, 796, 21664, 13, 39, 5673, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
üß† ML Signal: Function name follows a common pattern for test functions,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 3912, 329, 1332, 5499]",0.5,1064,ml_signal,137,Function name follows a common pattern for test functions,,1064,,[]
‚ö†Ô∏è SAST Risk (Low): Ensure 'ohlc' is validated to prevent potential misuse or errors,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 705, 1219, 44601, 6, 318, 31031, 284, 2948, 2785, 29169, 393, 8563]",0.5,1064,sast_risk,139,Ensure 'ohlc' is validated to prevent potential misuse or errors,Low,1064,,[]
‚úÖ Best Practice: Use of 'round' for precision control in floating-point operations,"[26486, 227, 6705, 19939, 25, 5765, 286, 705, 744, 6, 329, 15440, 1630, 287, 12462, 12, 4122, 4560]",0.5,1077,best_practice,140,Use of 'round' for precision control in floating-point operations,,1064,"    assert isinstance(ma, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 2611, 11, 2168, 13, 27996, 8]"
‚ö†Ô∏è SAST Risk (Low): Ensure 'series.Series' is the correct type and imported properly,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 705, 25076, 13, 27996, 6, 318, 262, 3376, 2099, 290, 17392, 6105]",0.5,1077,sast_risk,142,Ensure 'series.Series' is the correct type and imported properly,Low,1077,,[]
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",0.5,1084,sast_risk,144,Direct comparison of floating-point numbers can lead to precision issues,Low,1077,def test_evwma():,"[4299, 1332, 62, 1990, 86, 2611, 33529]"
"üß† ML Signal: Testing function for TA.VBM, useful for learning test patterns","[8582, 100, 254, 10373, 26484, 25, 23983, 2163, 329, 21664, 13, 53, 12261, 11, 4465, 329, 4673, 1332, 7572]",0.5,1084,ml_signal,142,"Testing function for TA.VBM, useful for learning test patterns",,1084,,[]
‚úÖ Best Practice: Checking the type of the result to ensure correct function output,"[26486, 227, 6705, 19939, 25, 39432, 262, 2099, 286, 262, 1255, 284, 4155, 3376, 2163, 5072]",0.5,1091,best_practice,144,Checking the type of the result to ensure correct function output,,1084,def test_evwma():,"[4299, 1332, 62, 1990, 86, 2611, 33529]"
"üß† ML Signal: Use of assert to validate expected output, common in test-driven development","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 284, 26571, 2938, 5072, 11, 2219, 287, 1332, 12, 15808, 2478]",0.5,1091,ml_signal,146,"Use of assert to validate expected output, common in test-driven development",,1091,,[]
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",1.0,1115,sast_risk,147,Direct comparison of floating-point numbers can lead to precision issues,Low,1091,    evwma = TA.EVWMA(ohlc).round(decimals=8),"[220, 220, 220, 819, 86, 2611, 796, 21664, 13, 20114, 54, 5673, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
üß† ML Signal: Use of a method from a specific library (TA) for RSI calculation,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 2446, 422, 257, 2176, 5888, 357, 5603, 8, 329, 371, 11584, 17952]",0.5,1139,ml_signal,147,Use of a method from a specific library (TA) for RSI calculation,,1115,    evwma = TA.EVWMA(ohlc).round(decimals=8),"[220, 220, 220, 819, 86, 2611, 796, 21664, 13, 20114, 54, 5673, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
"‚ö†Ô∏è SAST Risk (Low): Assumes 'ohlc' is defined and valid, potential for NameError if not","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 1219, 44601, 6, 318, 5447, 290, 4938, 11, 2785, 329, 6530, 12331, 611, 407]",0.5,1154,sast_risk,149,"Assumes 'ohlc' is defined and valid, potential for NameError if not",Low,1139,"    assert isinstance(evwma, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 1990, 86, 2611, 11, 2168, 13, 27996, 8]"
‚úÖ Best Practice: Use of assert to validate the type of 'rsi',"[26486, 227, 6705, 19939, 25, 5765, 286, 6818, 284, 26571, 262, 2099, 286, 705, 3808, 72, 6]",0.5,1175,best_practice,150,Use of assert to validate the type of 'rsi',,1154,    assert evwma.values[-1] == 7445.46084062,"[220, 220, 220, 6818, 819, 86, 2611, 13, 27160, 58, 12, 16, 60, 6624, 8915, 2231, 13, 19, 28688, 1821, 5237]"
‚úÖ Best Practice: Use of assert to validate the range of 'rsi' values,"[26486, 227, 6705, 19939, 25, 5765, 286, 6818, 284, 26571, 262, 2837, 286, 705, 3808, 72, 6, 3815]",0.5,1175,best_practice,152,Use of assert to validate the range of 'rsi' values,,1175,,[]
üß† ML Signal: Function name follows a common test naming pattern,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 1332, 19264, 3912]",1.0,1175,ml_signal,152,Function name follows a common test naming pattern,,1175,,[]
‚ö†Ô∏è SAST Risk (Low): Potential risk if 'ohlc' is not validated or sanitized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 705, 1219, 44601, 6, 318, 407, 31031, 393, 5336, 36951]",0.5,1185,sast_risk,154,Potential risk if 'ohlc' is not validated or sanitized,Low,1175,"    """"""test TA.VWAP""""""","[220, 220, 220, 37227, 9288, 21664, 13, 30133, 2969, 37811]"
üß† ML Signal: Use of method chaining with round,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2446, 442, 1397, 351, 2835]",0.5,1185,ml_signal,155,Use of method chaining with round,,1185,,[]
‚ö†Ô∏è SAST Risk (Low): Assumes 'rsi' is always a 'series.Series' without error handling,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 3808, 72, 6, 318, 1464, 257, 705, 25076, 13, 27996, 6, 1231, 4049, 9041]",0.5,1185,sast_risk,157,Assumes 'rsi' is always a 'series.Series' without error handling,Low,1185,,[]
üß† ML Signal: Use of isinstance for type checking,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 318, 39098, 329, 2099, 10627]",0.5,1198,ml_signal,158,Use of isinstance for type checking,,1185,"    assert isinstance(ma, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 2611, 11, 2168, 13, 27996, 8]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",1.0,1198,sast_risk,160,Direct comparison of floating-point numbers can lead to precision issues,Low,1198,,[]
üß† ML Signal: Use of assert for validation in tests,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 329, 21201, 287, 5254]",0.5,1198,ml_signal,161,Use of assert for validation in tests,,1198,,[]
üß† ML Signal: Use of a method from a library (TA.DYMI) indicates a pattern of library usage,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 2446, 422, 257, 5888, 357, 5603, 13, 35, 56, 8895, 8, 9217, 257, 3912, 286, 5888, 8748]",1.0,1198,ml_signal,157,Use of a method from a library (TA.DYMI) indicates a pattern of library usage,,1198,,[]
‚úÖ Best Practice: Rounding to a specific number of decimals for consistency in test results,"[26486, 227, 6705, 19939, 25, 371, 9969, 284, 257, 2176, 1271, 286, 875, 320, 874, 329, 15794, 287, 1332, 2482]",0.5,1211,best_practice,158,Rounding to a specific number of decimals for consistency in test results,,1198,"    assert isinstance(ma, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 2611, 11, 2168, 13, 27996, 8]"
‚ö†Ô∏è SAST Risk (Low): Lack of exception handling may cause the test to fail ungracefully if TA.DYMI or rounding fails,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 38289, 286, 6631, 9041, 743, 2728, 262, 1332, 284, 2038, 555, 2164, 558, 2759, 611, 21664, 13, 35, 56, 8895, 393, 38185, 10143]",0.5,1211,sast_risk,160,Lack of exception handling may cause the test to fail ungracefully if TA.DYMI or rounding fails,Low,1211,,[]
üß† ML Signal: Checking the type of a variable is a common pattern in testing,"[8582, 100, 254, 10373, 26484, 25, 39432, 262, 2099, 286, 257, 7885, 318, 257, 2219, 3912, 287, 4856]",0.5,1211,ml_signal,161,Checking the type of a variable is a common pattern in testing,,1211,,[]
üß† ML Signal: Asserting specific values is a common pattern in testing to ensure correctness,"[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 3815, 318, 257, 2219, 3912, 287, 4856, 284, 4155, 29409]",0.5,1221,ml_signal,163,Asserting specific values is a common pattern in testing to ensure correctness,,1211,"    """"""test TA.SMMA""""""","[220, 220, 220, 37227, 9288, 21664, 13, 12310, 5673, 37811]"
"üß† ML Signal: Testing function for TA.TR, useful for learning test patterns","[8582, 100, 254, 10373, 26484, 25, 23983, 2163, 329, 21664, 13, 5446, 11, 4465, 329, 4673, 1332, 7572]",0.5,1227,ml_signal,162,"Testing function for TA.TR, useful for learning test patterns",,1221,def test_smma():,"[4299, 1332, 62, 5796, 2611, 33529]"
‚ö†Ô∏è SAST Risk (Low): Ensure 'ohlc' is validated to prevent unexpected data issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 705, 1219, 44601, 6, 318, 31031, 284, 2948, 10059, 1366, 2428]",0.5,1227,sast_risk,164,Ensure 'ohlc' is validated to prevent unexpected data issues,Low,1227,,[]
‚úÖ Best Practice: Use of round() for consistent decimal precision,"[26486, 227, 6705, 19939, 25, 5765, 286, 2835, 3419, 329, 6414, 32465, 15440]",0.5,1248,best_practice,165,Use of round() for consistent decimal precision,,1227,    ma = TA.SMMA(ohlc).round(decimals=8),"[220, 220, 220, 17266, 796, 21664, 13, 12310, 5673, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
‚ö†Ô∏è SAST Risk (Low): Ensure 'series.Series' is the correct expected type,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 705, 25076, 13, 27996, 6, 318, 262, 3376, 2938, 2099]",0.5,1261,sast_risk,167,Ensure 'series.Series' is the correct expected type,Low,1248,"    assert isinstance(ma, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 2611, 11, 2168, 13, 27996, 8]"
"‚ö†Ô∏è SAST Risk (Low): Hardcoded value in test, ensure it matches expected output","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 1988, 287, 1332, 11, 4155, 340, 7466, 2938, 5072]",0.5,1261,sast_risk,169,"Hardcoded value in test, ensure it matches expected output",Low,1261,,[]
"üß† ML Signal: Function name follows a common pattern for test functions, useful for identifying test cases.","[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 3912, 329, 1332, 5499, 11, 4465, 329, 13720, 1332, 2663, 13]",0.5,1274,ml_signal,167,"Function name follows a common pattern for test functions, useful for identifying test cases.",,1261,"    assert isinstance(ma, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 2611, 11, 2168, 13, 27996, 8]"
‚ö†Ô∏è SAST Risk (Low): Ensure that 'ohlc' is validated and sanitized before use to prevent data integrity issues.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 326, 705, 1219, 44601, 6, 318, 31031, 290, 5336, 36951, 878, 779, 284, 2948, 1366, 11540, 2428, 13]",0.5,1274,sast_risk,169,Ensure that 'ohlc' is validated and sanitized before use to prevent data integrity issues.,Low,1274,,[]
‚úÖ Best Practice: Rounding to a fixed number of decimals improves consistency in test results.,"[26486, 227, 6705, 19939, 25, 371, 9969, 284, 257, 5969, 1271, 286, 875, 320, 874, 19575, 15794, 287, 1332, 2482, 13]",0.5,1274,best_practice,170,Rounding to a fixed number of decimals improves consistency in test results.,,1274,,[]
‚ö†Ô∏è SAST Risk (Low): Type checking with 'isinstance' is generally safe but ensure 'series.Series' is the expected type.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5994, 10627, 351, 705, 271, 39098, 6, 318, 4143, 3338, 475, 4155, 705, 25076, 13, 27996, 6, 318, 262, 2938, 2099, 13]",0.5,1284,sast_risk,172,Type checking with 'isinstance' is generally safe but ensure 'series.Series' is the expected type.,Low,1274,"    """"""test TA.FRAMA""""""","[220, 220, 220, 37227, 9288, 21664, 13, 10913, 25087, 37811]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues; consider using a tolerance.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428, 26, 2074, 1262, 257, 15621, 13]",0.5,1305,sast_risk,174,Direct comparison of floating-point numbers can lead to precision issues; consider using a tolerance.,Low,1284,    ma = TA.FRAMA(ohlc).round(decimals=8),"[220, 220, 220, 17266, 796, 21664, 13, 10913, 25087, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
üß† ML Signal: Function name follows a common test naming pattern,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 1332, 19264, 3912]",1.0,1315,ml_signal,172,Function name follows a common test naming pattern,,1305,"    """"""test TA.FRAMA""""""","[220, 220, 220, 37227, 9288, 21664, 13, 10913, 25087, 37811]"
‚ö†Ô∏è SAST Risk (Low): Assumes 'TA.SAR' and 'ohlc' are safe and correctly implemented,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 5603, 13, 50, 1503, 6, 290, 705, 1219, 44601, 6, 389, 3338, 290, 9380, 9177]",0.5,1336,sast_risk,174,Assumes 'TA.SAR' and 'ohlc' are safe and correctly implemented,Low,1315,    ma = TA.FRAMA(ohlc).round(decimals=8),"[220, 220, 220, 17266, 796, 21664, 13, 10913, 25087, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
‚úÖ Best Practice: Rounding to a fixed number of decimals for consistency,"[26486, 227, 6705, 19939, 25, 371, 9969, 284, 257, 5969, 1271, 286, 875, 320, 874, 329, 15794]",0.5,1336,best_practice,175,Rounding to a fixed number of decimals for consistency,,1336,,[]
‚ö†Ô∏è SAST Risk (Low): Assumes 'sar' is a valid series object,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 82, 283, 6, 318, 257, 4938, 2168, 2134]",0.5,1354,sast_risk,177,Assumes 'sar' is a valid series object,Low,1336,    assert ma.values[-1] == 6574.14605454,"[220, 220, 220, 6818, 17266, 13, 27160, 58, 12, 16, 60, 6624, 718, 46900, 13, 1415, 32417, 34229]"
‚ö†Ô∏è SAST Risk (Low): Hardcoded value in test may lead to false positives/negatives,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 1988, 287, 1332, 743, 1085, 284, 3991, 38548, 14, 12480, 2929]",1.0,1354,sast_risk,179,Hardcoded value in test may lead to false positives/negatives,Low,1354,,[]
‚úÖ Best Practice: Use of assert to validate expected outcome,"[26486, 227, 6705, 19939, 25, 5765, 286, 6818, 284, 26571, 2938, 8055]",0.5,1360,best_practice,180,Use of assert to validate expected outcome,,1354,def test_macd():,"[4299, 1332, 62, 20285, 67, 33529]"
üß† ML Signal: Usage of TA.PSAR indicates a pattern of using technical analysis for financial data.,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 21664, 13, 3705, 1503, 9217, 257, 3912, 286, 1262, 6276, 3781, 329, 3176, 1366, 13]",0.5,1378,ml_signal,177,Usage of TA.PSAR indicates a pattern of using technical analysis for financial data.,,1360,    assert ma.values[-1] == 6574.14605454,"[220, 220, 220, 6818, 17266, 13, 27160, 58, 12, 16, 60, 6624, 718, 46900, 13, 1415, 32417, 34229]"
‚ö†Ô∏è SAST Risk (Low): Ensure that 'ohlc' is validated and sanitized to prevent potential data integrity issues.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 326, 705, 1219, 44601, 6, 318, 31031, 290, 5336, 36951, 284, 2948, 2785, 1366, 11540, 2428, 13]",0.5,1378,sast_risk,179,Ensure that 'ohlc' is validated and sanitized to prevent potential data integrity issues.,Low,1378,,[]
üß† ML Signal: Checking the type of 'sar.psar' suggests a pattern of verifying data structures.,"[8582, 100, 254, 10373, 26484, 25, 39432, 262, 2099, 286, 705, 82, 283, 13, 862, 283, 6, 5644, 257, 3912, 286, 45505, 1366, 8573, 13]",0.5,1384,ml_signal,180,Checking the type of 'sar.psar' suggests a pattern of verifying data structures.,,1378,def test_macd():,"[4299, 1332, 62, 20285, 67, 33529]"
üß† ML Signal: Asserting specific values indicates a pattern of expected output validation.,"[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 3815, 9217, 257, 3912, 286, 2938, 5072, 21201, 13]",0.5,1384,ml_signal,182,Asserting specific values indicates a pattern of expected output validation.,,1384,,[]
"üß† ML Signal: Use of TA.BBANDS indicates testing of a technical analysis function, which is common in financial applications.","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 21664, 13, 15199, 1565, 5258, 9217, 4856, 286, 257, 6276, 3781, 2163, 11, 543, 318, 2219, 287, 3176, 5479, 13]",1.0,1384,ml_signal,182,"Use of TA.BBANDS indicates testing of a technical analysis function, which is common in financial applications.",,1384,,[]
‚úÖ Best Practice: Checking the type of the result ensures that the function returns the expected data structure.,"[26486, 227, 6705, 19939, 25, 39432, 262, 2099, 286, 262, 1255, 19047, 326, 262, 2163, 5860, 262, 2938, 1366, 4645, 13]",1.0,1384,best_practice,184,Checking the type of the result ensures that the function returns the expected data structure.,,1384,,[]
‚úÖ Best Practice: Checking the type of the result ensures that the function returns the expected data structure.,"[26486, 227, 6705, 19939, 25, 39432, 262, 2099, 286, 262, 1255, 19047, 326, 262, 2163, 5860, 262, 2938, 1366, 4645, 13]",1.0,1401,best_practice,186,Checking the type of the result ensures that the function returns the expected data structure.,,1384,"    assert isinstance(macd[""SIGNAL""], series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 20285, 67, 14692, 46224, 1847, 33116, 2168, 13, 27996, 8]"
‚úÖ Best Practice: Checking the type of the result ensures that the function returns the expected data structure.,"[26486, 227, 6705, 19939, 25, 39432, 262, 2099, 286, 262, 1255, 19047, 326, 262, 2163, 5860, 262, 2938, 1366, 4645, 13]",1.0,1424,best_practice,188,Checking the type of the result ensures that the function returns the expected data structure.,,1401,"    assert macd[""MACD""].values[-1] == -419.21923359","[220, 220, 220, 6818, 8352, 67, 14692, 44721, 35, 1, 4083, 27160, 58, 12, 16, 60, 6624, 532, 45068, 13, 28896, 1954, 30743]"
üß† ML Signal: Use of hardcoded expected values in assertions can indicate a test for specific known outputs.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1327, 40976, 2938, 3815, 287, 29965, 460, 7603, 257, 1332, 329, 2176, 1900, 23862, 13]",0.5,1424,ml_signal,190,Use of hardcoded expected values in assertions can indicate a test for specific known outputs.,,1424,,[]
üß† ML Signal: Use of hardcoded expected values in assertions can indicate a test for specific known outputs.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1327, 40976, 2938, 3815, 287, 29965, 460, 7603, 257, 1332, 329, 2176, 1900, 23862, 13]",0.5,1429,ml_signal,192,Use of hardcoded expected values in assertions can indicate a test for specific known outputs.,,1424,def test_ppo():,"[4299, 1332, 62, 16634, 33529]"
üß† ML Signal: Use of hardcoded expected values in assertions can indicate a test for specific known outputs.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1327, 40976, 2938, 3815, 287, 29965, 460, 7603, 257, 1332, 329, 2176, 1900, 23862, 13]",0.5,1429,ml_signal,194,Use of hardcoded expected values in assertions can indicate a test for specific known outputs.,,1429,,[]
üß† ML Signal: Use of TA.MOBO function indicates a pattern of using technical analysis for financial data.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 21664, 13, 11770, 8202, 2163, 9217, 257, 3912, 286, 1262, 6276, 3781, 329, 3176, 1366, 13]",1.0,1429,ml_signal,191,Use of TA.MOBO function indicates a pattern of using technical analysis for financial data.,,1429,,[]
‚ö†Ô∏è SAST Risk (Low): Use of assert statements for testing can be disabled with optimization flags.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 6818, 6299, 329, 4856, 460, 307, 10058, 351, 23989, 9701, 13]",0.5,1439,sast_risk,193,Use of assert statements for testing can be disabled with optimization flags.,Low,1429,"    """"""test TA.PPO""""""","[220, 220, 220, 37227, 9288, 21664, 13, 10246, 46, 37811]"
‚ö†Ô∏è SAST Risk (Low): Use of assert statements for testing can be disabled with optimization flags.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 6818, 6299, 329, 4856, 460, 307, 10058, 351, 23989, 9701, 13]",0.5,1461,sast_risk,195,Use of assert statements for testing can be disabled with optimization flags.,Low,1439,    ppo = TA.PPO(ohlc).round(decimals=8),"[220, 220, 220, 279, 7501, 796, 21664, 13, 10246, 46, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
‚ö†Ô∏è SAST Risk (Low): Use of assert statements for testing can be disabled with optimization flags.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 6818, 6299, 329, 4856, 460, 307, 10058, 351, 23989, 9701, 13]",0.5,1477,sast_risk,197,Use of assert statements for testing can be disabled with optimization flags.,Low,1461,"    assert isinstance(ppo[""PPO""], series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 16634, 14692, 10246, 46, 33116, 2168, 13, 27996, 8]"
‚ö†Ô∏è SAST Risk (Low): Use of assert statements for testing can be disabled with optimization flags.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 6818, 6299, 329, 4856, 460, 307, 10058, 351, 23989, 9701, 13]",0.5,1494,sast_risk,199,Use of assert statements for testing can be disabled with optimization flags.,Low,1477,"    assert isinstance(ppo[""HISTO""], series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 16634, 14692, 39, 8808, 46, 33116, 2168, 13, 27996, 8]"
‚ö†Ô∏è SAST Risk (Low): Use of assert statements for testing can be disabled with optimization flags.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 6818, 6299, 329, 4856, 460, 307, 10058, 351, 23989, 9701, 13]",0.5,1518,sast_risk,201,Use of assert statements for testing can be disabled with optimization flags.,Low,1494,"    assert ppo[""PPO""].values[-1] == -5.85551658","[220, 220, 220, 6818, 279, 7501, 14692, 10246, 46, 1, 4083, 27160, 58, 12, 16, 60, 6624, 532, 20, 13, 23, 31046, 1433, 3365]"
‚ö†Ô∏è SAST Risk (Low): Use of assert statements for testing can be disabled with optimization flags.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 6818, 6299, 329, 4856, 460, 307, 10058, 351, 23989, 9701, 13]",0.5,1543,sast_risk,203,Use of assert statements for testing can be disabled with optimization flags.,Low,1518,"    assert ppo[""HISTO""].values[-1] == -0.79604402","[220, 220, 220, 6818, 279, 7501, 14692, 39, 8808, 46, 1, 4083, 27160, 58, 12, 16, 60, 6624, 532, 15, 13, 3720, 1899, 25644, 17]"
üß† ML Signal: Function name follows a common pattern for test functions,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 3912, 329, 1332, 5499]",1.0,1543,ml_signal,200,Function name follows a common pattern for test functions,,1543,,[]
‚úÖ Best Practice: Rounding to a fixed number of decimals for consistency,"[26486, 227, 6705, 19939, 25, 371, 9969, 284, 257, 5969, 1271, 286, 875, 320, 874, 329, 15794]",1.0,1566,best_practice,202,Rounding to a fixed number of decimals for consistency,,1543,"    assert ppo[""SIGNAL""].values[-1] == -5.05947256","[220, 220, 220, 6818, 279, 7501, 14692, 46224, 1847, 1, 4083, 27160, 58, 12, 16, 60, 6624, 532, 20, 13, 46712, 2857, 11645]"
‚ö†Ô∏è SAST Risk (Low): Ensure 'series.Series' is the correct type and not a typo or undefined,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 705, 25076, 13, 27996, 6, 318, 262, 3376, 2099, 290, 407, 257, 46517, 393, 28721]",0.5,1566,sast_risk,204,Ensure 'series.Series' is the correct type and not a typo or undefined,Low,1566,,[]
‚úÖ Best Practice: Asserting value range to ensure expected output,"[26486, 227, 6705, 19939, 25, 2195, 861, 278, 1988, 2837, 284, 4155, 2938, 5072]",1.0,1575,best_practice,206,Asserting value range to ensure expected output,,1566,def test_vw_macd():,"[4299, 1332, 62, 85, 86, 62, 20285, 67, 33529]"
üß† ML Signal: Function name follows a common test naming pattern,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 1332, 19264, 3912]",1.0,1575,ml_signal,205,Function name follows a common test naming pattern,,1575,,[]
‚ö†Ô∏è SAST Risk (Low): Assumes 'TA.PERCENT_B' and 'ohlc' are safe and correctly implemented,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 5603, 13, 18973, 43960, 62, 33, 6, 290, 705, 1219, 44601, 6, 389, 3338, 290, 9380, 9177]",0.5,1587,sast_risk,207,Assumes 'TA.PERCENT_B' and 'ohlc' are safe and correctly implemented,Low,1575,"    """"""test TA.VW_MACD""""""","[220, 220, 220, 37227, 9288, 21664, 13, 30133, 62, 44721, 35, 37811]"
üß† ML Signal: Use of method chaining with round,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2446, 442, 1397, 351, 2835]",1.0,1587,ml_signal,208,Use of method chaining with round,,1587,,[]
‚ö†Ô∏è SAST Risk (Low): Assumes 'bb' is a valid series object,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 11848, 6, 318, 257, 4938, 2168, 2134]",0.5,1587,sast_risk,210,Assumes 'bb' is a valid series object,Low,1587,,[]
üß† ML Signal: Use of isinstance for type checking,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 318, 39098, 329, 2099, 10627]",1.0,1604,ml_signal,211,Use of isinstance for type checking,,1587,"    assert isinstance(macd[""MACD""], series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 20285, 67, 14692, 44721, 35, 33116, 2168, 13, 27996, 8]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146]",1.0,1604,sast_risk,213,Direct comparison of floating-point numbers,Low,1604,,[]
üß† ML Signal: Use of assert for validation,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 329, 21201]",1.0,1628,ml_signal,214,Use of assert for validation,,1604,"    assert macd[""MACD""].values[-1] == -535.21281201","[220, 220, 220, 6818, 8352, 67, 14692, 44721, 35, 1, 4083, 27160, 58, 12, 16, 60, 6624, 532, 44465, 13, 17, 12762, 1065, 486]"
üß† ML Signal: Usage of TA.ZLEMA indicates a pattern of using technical analysis indicators,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 21664, 13, 57, 2538, 5673, 9217, 257, 3912, 286, 1262, 6276, 3781, 21337]",1.0,1628,ml_signal,210,Usage of TA.ZLEMA indicates a pattern of using technical analysis indicators,,1628,,[]
üß† ML Signal: Usage of TA.KC indicates a pattern of using technical analysis indicators,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 21664, 13, 36222, 9217, 257, 3912, 286, 1262, 6276, 3781, 21337]",1.0,1645,ml_signal,212,Usage of TA.KC indicates a pattern of using technical analysis indicators,,1628,"    assert isinstance(macd[""SIGNAL""], series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 20285, 67, 14692, 46224, 1847, 33116, 2168, 13, 27996, 8]"
‚úÖ Best Practice: Checking the type of the result ensures that the function returns the expected data structure,"[26486, 227, 6705, 19939, 25, 39432, 262, 2099, 286, 262, 1255, 19047, 326, 262, 2163, 5860, 262, 2938, 1366, 4645]",1.0,1669,best_practice,214,Checking the type of the result ensures that the function returns the expected data structure,,1645,"    assert macd[""MACD""].values[-1] == -535.21281201","[220, 220, 220, 6818, 8352, 67, 14692, 44721, 35, 1, 4083, 27160, 58, 12, 16, 60, 6624, 532, 44465, 13, 17, 12762, 1065, 486]"
‚úÖ Best Practice: Checking the type of the result ensures that the function returns the expected data structure,"[26486, 227, 6705, 19939, 25, 39432, 262, 2099, 286, 262, 1255, 19047, 326, 262, 2163, 5860, 262, 2938, 1366, 4645]",1.0,1669,best_practice,216,Checking the type of the result ensures that the function returns the expected data structure,,1669,,[]
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",0.5,1677,sast_risk,218,Direct comparison of floating-point numbers can lead to precision issues,Low,1669,def test_ev_macd():,"[4299, 1332, 62, 1990, 62, 20285, 67, 33529]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",0.5,1677,sast_risk,220,Direct comparison of floating-point numbers can lead to precision issues,Low,1677,,[]
"üß† ML Signal: Usage of a method from the TA module, indicating a pattern for technical analysis.","[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2446, 422, 262, 21664, 8265, 11, 12739, 257, 3912, 329, 6276, 3781, 13]",0.5,1685,ml_signal,218,"Usage of a method from the TA module, indicating a pattern for technical analysis.",,1677,def test_ev_macd():,"[4299, 1332, 62, 1990, 62, 20285, 67, 33529]"
"üß† ML Signal: Checking the type of the result, indicating a pattern of expected data structure.","[8582, 100, 254, 10373, 26484, 25, 39432, 262, 2099, 286, 262, 1255, 11, 12739, 257, 3912, 286, 2938, 1366, 4645, 13]",1.0,1685,ml_signal,220,"Checking the type of the result, indicating a pattern of expected data structure.",,1685,,[]
"üß† ML Signal: Checking the type of the result, indicating a pattern of expected data structure.","[8582, 100, 254, 10373, 26484, 25, 39432, 262, 2099, 286, 262, 1255, 11, 12739, 257, 3912, 286, 2938, 1366, 4645, 13]",1.0,1685,ml_signal,222,"Checking the type of the result, indicating a pattern of expected data structure.",,1685,,[]
"üß† ML Signal: Checking the type of the result, indicating a pattern of expected data structure.","[8582, 100, 254, 10373, 26484, 25, 39432, 262, 2099, 286, 262, 1255, 11, 12739, 257, 3912, 286, 2938, 1366, 4645, 13]",1.0,1702,ml_signal,224,"Checking the type of the result, indicating a pattern of expected data structure.",,1685,"    assert isinstance(macd[""SIGNAL""], series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 20285, 67, 14692, 46224, 1847, 33116, 2168, 13, 27996, 8]"
"üß† ML Signal: Asserting specific values, indicating a pattern of expected output.","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 3815, 11, 12739, 257, 3912, 286, 2938, 5072, 13]",0.5,1725,ml_signal,226,"Asserting specific values, indicating a pattern of expected output.",,1702,"    assert macd[""MACD""].values[-1] == -786.70979566","[220, 220, 220, 6818, 8352, 67, 14692, 44721, 35, 1, 4083, 27160, 58, 12, 16, 60, 6624, 532, 46302, 13, 31495, 41544, 2791]"
"üß† ML Signal: Asserting specific values, indicating a pattern of expected output.","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 3815, 11, 12739, 257, 3912, 286, 2938, 5072, 13]",0.5,1725,ml_signal,228,"Asserting specific values, indicating a pattern of expected output.",,1725,,[]
"üß† ML Signal: Asserting specific values, indicating a pattern of expected output.","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 3815, 11, 12739, 257, 3912, 286, 2938, 5072, 13]",0.5,1730,ml_signal,230,"Asserting specific values, indicating a pattern of expected output.",,1725,def test_mom():,"[4299, 1332, 62, 32542, 33529]"
üß† ML Signal: Use of TA.DMI indicates a pattern of using technical analysis for financial data,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 21664, 13, 35, 8895, 9217, 257, 3912, 286, 1262, 6276, 3781, 329, 3176, 1366]",1.0,1754,ml_signal,227,Use of TA.DMI indicates a pattern of using technical analysis for financial data,,1730,"    assert macd[""SIGNAL""].values[-1] == -708.68194345","[220, 220, 220, 6818, 8352, 67, 14692, 46224, 1847, 1, 4083, 27160, 58, 12, 16, 60, 6624, 532, 32583, 13, 3104, 1129, 3559, 2231]"
‚ö†Ô∏è SAST Risk (Low): Potential risk if 'ohlc' is not validated or sanitized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 705, 1219, 44601, 6, 318, 407, 31031, 393, 5336, 36951]",1.0,1754,sast_risk,229,Potential risk if 'ohlc' is not validated or sanitized,Low,1754,,[]
‚úÖ Best Practice: Checking type ensures that the expected data structure is returned,"[26486, 227, 6705, 19939, 25, 39432, 2099, 19047, 326, 262, 2938, 1366, 4645, 318, 4504]",0.5,1764,best_practice,231,Checking type ensures that the expected data structure is returned,,1754,"    """"""test TA.MOM""""""","[220, 220, 220, 37227, 9288, 21664, 13, 44, 2662, 37811]"
‚úÖ Best Practice: Checking type ensures that the expected data structure is returned,"[26486, 227, 6705, 19939, 25, 39432, 2099, 19047, 326, 262, 2938, 1366, 4645, 318, 4504]",0.5,1785,best_practice,233,Checking type ensures that the expected data structure is returned,,1764,    mom = TA.MOM(ohlc).round(decimals=8),"[220, 220, 220, 1995, 796, 21664, 13, 44, 2662, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",0.5,1798,sast_risk,235,Direct comparison of floating-point numbers can lead to precision issues,Low,1785,"    assert isinstance(mom, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 32542, 11, 2168, 13, 27996, 8]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",0.5,1798,sast_risk,237,Direct comparison of floating-point numbers can lead to precision issues,Low,1798,,[]
üß† ML Signal: Function name follows a common pattern for test functions,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 3912, 329, 1332, 5499]",0.5,1798,ml_signal,234,Function name follows a common pattern for test functions,,1798,,[]
‚ö†Ô∏è SAST Risk (Low): Potential risk if 'ohlc' is not validated or sanitized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 705, 1219, 44601, 6, 318, 407, 31031, 393, 5336, 36951]",1.0,1818,sast_risk,236,Potential risk if 'ohlc' is not validated or sanitized,Low,1798,    assert mom.values[-1] == -1215.54681371,"[220, 220, 220, 6818, 1995, 13, 27160, 58, 12, 16, 60, 6624, 532, 1065, 1314, 13, 4051, 3104, 1485, 4869]"
üß† ML Signal: Use of method chaining with round function,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2446, 442, 1397, 351, 2835, 2163]",0.5,1818,ml_signal,237,Use of method chaining with round function,,1818,,[]
‚ö†Ô∏è SAST Risk (Low): Assumes 'adx' is always a 'series.Series' without error handling,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 324, 87, 6, 318, 1464, 257, 705, 25076, 13, 27996, 6, 1231, 4049, 9041]",0.5,1823,sast_risk,239,Assumes 'adx' is always a 'series.Series' without error handling,Low,1818,def test_roc():,"[4299, 1332, 62, 12204, 33529]"
üß† ML Signal: Use of isinstance to check object type,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 318, 39098, 284, 2198, 2134, 2099]",0.5,1833,ml_signal,240,Use of isinstance to check object type,,1823,"    """"""test TA.ROC""""""","[220, 220, 220, 37227, 9288, 21664, 13, 49, 4503, 37811]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",1.0,1855,sast_risk,242,Direct comparison of floating-point numbers can lead to precision issues,Low,1833,    roc = TA.ROC(ohlc).round(decimals=8),"[220, 220, 220, 686, 66, 796, 21664, 13, 49, 4503, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
üß† ML Signal: Use of assert statement for validation,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 2643, 329, 21201]",0.5,1855,ml_signal,243,Use of assert statement for validation,,1855,,[]
üß† ML Signal: Function name follows a common pattern for test functions,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 3912, 329, 1332, 5499]",1.0,1860,ml_signal,239,Function name follows a common pattern for test functions,,1855,def test_roc():,"[4299, 1332, 62, 12204, 33529]"
‚úÖ Best Practice: Use of isinstance to check the type of 'st',"[26486, 227, 6705, 19939, 25, 5765, 286, 318, 39098, 284, 2198, 262, 2099, 286, 705, 301, 6]",0.5,1860,best_practice,241,Use of isinstance to check the type of 'st',,1860,,[]
‚ö†Ô∏è SAST Risk (Low): Assumes 'st.values' is a list-like object with at least one element,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 301, 13, 27160, 6, 318, 257, 1351, 12, 2339, 2134, 351, 379, 1551, 530, 5002]",0.5,1860,sast_risk,243,Assumes 'st.values' is a list-like object with at least one element,Low,1860,,[]
"üß† ML Signal: Testing function for TA.STOCHD, useful for learning test patterns","[8582, 100, 254, 10373, 26484, 25, 23983, 2163, 329, 21664, 13, 2257, 46, 3398, 35, 11, 4465, 329, 4673, 1332, 7572]",1.0,1873,ml_signal,244,"Testing function for TA.STOCHD, useful for learning test patterns",,1860,"    assert isinstance(roc, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 12204, 11, 2168, 13, 27996, 8]"
‚úÖ Best Practice: Checking the type of the result to ensure correct function behavior,"[26486, 227, 6705, 19939, 25, 39432, 262, 2099, 286, 262, 1255, 284, 4155, 3376, 2163, 4069]",1.0,1873,best_practice,246,Checking the type of the result to ensure correct function behavior,,1873,,[]
‚úÖ Best Practice: Asserting value range to ensure expected output,"[26486, 227, 6705, 19939, 25, 2195, 861, 278, 1988, 2837, 284, 4155, 2938, 5072]",1.0,1883,best_practice,248,Asserting value range to ensure expected output,,1873,"    """"""test TA.VBM""""""","[220, 220, 220, 37227, 9288, 21664, 13, 53, 12261, 37811]"
"üß† ML Signal: Function name follows a common pattern for test functions, useful for identifying test cases.","[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 3912, 329, 1332, 5499, 11, 4465, 329, 13720, 1332, 2663, 13]",0.5,1883,ml_signal,249,"Function name follows a common pattern for test functions, useful for identifying test cases.",,1883,,[]
"‚ö†Ô∏è SAST Risk (Low): Assumes 'TA.STOCHRSI' and 'ohlc' are defined and valid, potential for NameError if not.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 5603, 13, 2257, 46, 3398, 6998, 40, 6, 290, 705, 1219, 44601, 6, 389, 5447, 290, 4938, 11, 2785, 329, 6530, 12331, 611, 407, 13]",1.0,1883,sast_risk,251,"Assumes 'TA.STOCHRSI' and 'ohlc' are defined and valid, potential for NameError if not.",Low,1883,,[]
‚úÖ Best Practice: Rounding to a fixed number of decimals improves consistency in floating-point operations.,"[26486, 227, 6705, 19939, 25, 371, 9969, 284, 257, 5969, 1271, 286, 875, 320, 874, 19575, 15794, 287, 12462, 12, 4122, 4560, 13]",1.0,1897,best_practice,252,Rounding to a fixed number of decimals improves consistency in floating-point operations.,,1883,"    assert isinstance(vbm, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 85, 20475, 11, 2168, 13, 27996, 8]"
"‚ö†Ô∏è SAST Risk (Low): Assumes 'series.Series' is the correct type, potential for AssertionError if not.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 25076, 13, 27996, 6, 318, 262, 3376, 2099, 11, 2785, 329, 2195, 861, 295, 12331, 611, 407, 13]",1.0,1897,sast_risk,254,"Assumes 'series.Series' is the correct type, potential for AssertionError if not.",Low,1897,,[]
"‚ö†Ô∏è SAST Risk (Low): Assumes 'st.values' is a valid list-like object, potential for IndexError if empty.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 301, 13, 27160, 6, 318, 257, 4938, 1351, 12, 2339, 2134, 11, 2785, 329, 12901, 12331, 611, 6565, 13]",1.0,1907,sast_risk,256,"Assumes 'st.values' is a valid list-like object, potential for IndexError if empty.",Low,1897,"    """"""test TA.RSI""""""","[220, 220, 220, 37227, 9288, 21664, 13, 6998, 40, 37811]"
‚úÖ Best Practice: Asserting value range ensures the output is within expected bounds.,"[26486, 227, 6705, 19939, 25, 2195, 861, 278, 1988, 2837, 19047, 262, 5072, 318, 1626, 2938, 22303, 13]",0.5,1907,best_practice,257,Asserting value range ensures the output is within expected bounds.,,1907,,[]
üß† ML Signal: Use of TA.WILLIAMS indicates a pattern of financial technical analysis,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 21664, 13, 54, 8267, 40, 40834, 9217, 257, 3912, 286, 3176, 6276, 3781]",0.5,1907,ml_signal,254,Use of TA.WILLIAMS indicates a pattern of financial technical analysis,,1907,,[]
‚úÖ Best Practice: Checking the type of the result ensures the function returns the expected data structure,"[26486, 227, 6705, 19939, 25, 39432, 262, 2099, 286, 262, 1255, 19047, 262, 2163, 5860, 262, 2938, 1366, 4645]",0.5,1917,best_practice,256,Checking the type of the result ensures the function returns the expected data structure,,1907,"    """"""test TA.RSI""""""","[220, 220, 220, 37227, 9288, 21664, 13, 6998, 40, 37811]"
‚ö†Ô∏è SAST Risk (Low): Directly accessing the last element of a series without checking if it's empty could lead to an IndexError,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 306, 22534, 262, 938, 5002, 286, 257, 2168, 1231, 10627, 611, 340, 338, 6565, 714, 1085, 284, 281, 12901, 12331]",0.5,1939,sast_risk,258,Directly accessing the last element of a series without checking if it's empty could lead to an IndexError,Low,1917,    rsi = TA.RSI(ohlc).round(decimals=8),"[220, 220, 220, 374, 13396, 796, 21664, 13, 6998, 40, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
üß† ML Signal: Function name follows a common pattern for test functions,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 3912, 329, 1332, 5499]",1.0,1939,ml_signal,259,Function name follows a common pattern for test functions,,1939,,[]
‚ö†Ô∏è SAST Risk (Low): Assumes 'TA.UO' and 'ohlc' are safe and correctly implemented,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 5603, 13, 52, 46, 6, 290, 705, 1219, 44601, 6, 389, 3338, 290, 9380, 9177]",0.5,1956,sast_risk,261,Assumes 'TA.UO' and 'ohlc' are safe and correctly implemented,Low,1939,    assert -100 < rsi.values[-1] < 100,"[220, 220, 220, 6818, 532, 3064, 1279, 374, 13396, 13, 27160, 58, 12, 16, 60, 1279, 1802]"
‚úÖ Best Practice: Rounding to a fixed number of decimals for consistency,"[26486, 227, 6705, 19939, 25, 371, 9969, 284, 257, 5969, 1271, 286, 875, 320, 874, 329, 15794]",1.0,1956,best_practice,262,Rounding to a fixed number of decimals for consistency,,1956,,[]
‚ö†Ô∏è SAST Risk (Low): Assumes 'uo' is a valid object and 'series.Series' is the correct type,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 20895, 6, 318, 257, 4938, 2134, 290, 705, 25076, 13, 27996, 6, 318, 262, 3376, 2099]",0.5,1964,sast_risk,264,Assumes 'uo' is a valid object and 'series.Series' is the correct type,Low,1956,def test_ift_rsi():,"[4299, 1332, 62, 2135, 62, 3808, 72, 33529]"
‚ö†Ô∏è SAST Risk (Low): Assumes 'uo.values' is a valid list and has at least one element,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 20895, 13, 27160, 6, 318, 257, 4938, 1351, 290, 468, 379, 1551, 530, 5002]",0.5,1964,sast_risk,266,Assumes 'uo.values' is a valid list and has at least one element,Low,1964,,[]
‚úÖ Best Practice: Asserting value range to ensure expected behavior,"[26486, 227, 6705, 19939, 25, 2195, 861, 278, 1988, 2837, 284, 4155, 2938, 4069]",1.0,1988,best_practice,267,Asserting value range to ensure expected behavior,,1964,    rsi = TA.IFT_RSI(ohlc).round(decimals=8),"[220, 220, 220, 374, 13396, 796, 21664, 13, 32297, 62, 6998, 40, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
"üß† ML Signal: Testing function for TA.AO, useful for learning test patterns","[8582, 100, 254, 10373, 26484, 25, 23983, 2163, 329, 21664, 13, 32, 46, 11, 4465, 329, 4673, 1332, 7572]",0.5,1996,ml_signal,264,"Testing function for TA.AO, useful for learning test patterns",,1988,def test_ift_rsi():,"[4299, 1332, 62, 2135, 62, 3808, 72, 33529]"
‚ö†Ô∏è SAST Risk (Low): Ensure 'ohlc' is validated to prevent unexpected data issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 705, 1219, 44601, 6, 318, 31031, 284, 2948, 10059, 1366, 2428]",0.5,1996,sast_risk,266,Ensure 'ohlc' is validated to prevent unexpected data issues,Low,1996,,[]
‚úÖ Best Practice: Use of round() for consistent precision in floating-point operations,"[26486, 227, 6705, 19939, 25, 5765, 286, 2835, 3419, 329, 6414, 15440, 287, 12462, 12, 4122, 4560]",0.5,2020,best_practice,267,Use of round() for consistent precision in floating-point operations,,1996,    rsi = TA.IFT_RSI(ohlc).round(decimals=8),"[220, 220, 220, 374, 13396, 796, 21664, 13, 32297, 62, 6998, 40, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
‚ö†Ô∏è SAST Risk (Low): Ensure 'series.Series' is the correct type and imported,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 705, 25076, 13, 27996, 6, 318, 262, 3376, 2099, 290, 17392]",0.5,2034,sast_risk,269,Ensure 'series.Series' is the correct type and imported,Low,2020,"    assert isinstance(rsi, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 3808, 72, 11, 2168, 13, 27996, 8]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can be unreliable,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 307, 29954]",1.0,2034,sast_risk,271,Direct comparison of floating-point numbers can be unreliable,Low,2034,,[]
üß† ML Signal: Use of assert to validate expected outcomes in tests,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 284, 26571, 2938, 10906, 287, 5254]",0.5,2034,ml_signal,272,Use of assert to validate expected outcomes in tests,,2034,,[]
üß† ML Signal: Function name follows a common test naming pattern,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 1332, 19264, 3912]",0.5,2048,ml_signal,269,Function name follows a common test naming pattern,,2034,"    assert isinstance(rsi, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 3808, 72, 11, 2168, 13, 27996, 8]"
‚ö†Ô∏è SAST Risk (Low): Assumes TA.MI and ohlc are safe and correctly implemented,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 21664, 13, 8895, 290, 11752, 44601, 389, 3338, 290, 9380, 9177]",0.5,2048,sast_risk,271,Assumes TA.MI and ohlc are safe and correctly implemented,Low,2048,,[]
‚úÖ Best Practice: Rounding to a fixed number of decimals for consistency,"[26486, 227, 6705, 19939, 25, 371, 9969, 284, 257, 5969, 1271, 286, 875, 320, 874, 329, 15794]",0.5,2048,best_practice,272,Rounding to a fixed number of decimals for consistency,,2048,,[]
‚ö†Ô∏è SAST Risk (Low): Assumes mi is a valid series object,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 21504, 318, 257, 4938, 2168, 2134]",0.5,2059,sast_risk,274,Assumes mi is a valid series object,Low,2048,"    """"""test TA.DYMI""""""","[220, 220, 220, 37227, 9288, 21664, 13, 35, 56, 8895, 37811]"
‚úÖ Best Practice: Using isinstance to ensure mi is of the expected type,"[26486, 227, 6705, 19939, 25, 8554, 318, 39098, 284, 4155, 21504, 318, 286, 262, 2938, 2099]",0.5,2059,best_practice,275,Using isinstance to ensure mi is of the expected type,,2059,,[]
‚ö†Ô∏è SAST Risk (Low): Hardcoded value in assertion may lead to brittle tests,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 1988, 287, 19190, 743, 1085, 284, 49307, 5254]",0.5,2059,sast_risk,277,Hardcoded value in assertion may lead to brittle tests,Low,2059,,[]
‚úÖ Best Practice: Asserting the last value to ensure correct calculation,"[26486, 227, 6705, 19939, 25, 2195, 861, 278, 262, 938, 1988, 284, 4155, 3376, 17952]",0.5,2074,best_practice,278,Asserting the last value to ensure correct calculation,,2059,"    assert isinstance(dymi, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 67, 4948, 72, 11, 2168, 13, 27996, 8]"
üß† ML Signal: Function name follows a common test naming pattern,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 1332, 19264, 3912]",0.5,2085,ml_signal,274,Function name follows a common test naming pattern,,2074,"    """"""test TA.DYMI""""""","[220, 220, 220, 37227, 9288, 21664, 13, 35, 56, 8895, 37811]"
‚ö†Ô∏è SAST Risk (Low): Assumes 'TA.BOP' and 'ohlc' are safe and correctly implemented,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 5603, 13, 33, 3185, 6, 290, 705, 1219, 44601, 6, 389, 3338, 290, 9380, 9177]",0.5,2109,sast_risk,276,Assumes 'TA.BOP' and 'ohlc' are safe and correctly implemented,Low,2085,    dymi = TA.DYMI(ohlc).round(decimals=8),"[220, 220, 220, 288, 4948, 72, 796, 21664, 13, 35, 56, 8895, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
‚úÖ Best Practice: Rounding to a fixed number of decimals for consistency,"[26486, 227, 6705, 19939, 25, 371, 9969, 284, 257, 5969, 1271, 286, 875, 320, 874, 329, 15794]",0.5,2109,best_practice,277,Rounding to a fixed number of decimals for consistency,,2109,,[]
‚ö†Ô∏è SAST Risk (Low): Assumes 'bop' is a valid series object,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 65, 404, 6, 318, 257, 4938, 2168, 2134]",0.5,2128,sast_risk,279,Assumes 'bop' is a valid series object,Low,2109,    assert dymi.values[-1] == 32.4897564,"[220, 220, 220, 6818, 288, 4948, 72, 13, 27160, 58, 12, 16, 60, 6624, 3933, 13, 35890, 2425, 2414]"
‚ö†Ô∏è SAST Risk (Low): Hardcoded value in test may lead to false positives/negatives,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 1988, 287, 1332, 743, 1085, 284, 3991, 38548, 14, 12480, 2929]",0.5,2128,sast_risk,281,Hardcoded value in test may lead to false positives/negatives,Low,2128,,[]
‚úÖ Best Practice: Use of assertions to validate expected outcomes,"[26486, 227, 6705, 19939, 25, 5765, 286, 29965, 284, 26571, 2938, 10906]",1.0,2133,best_practice,282,Use of assertions to validate expected outcomes,,2128,def test_tr():,"[4299, 1332, 62, 2213, 33529]"
üß† ML Signal: Usage of a specific method from a library (TA.VORTEX) indicates a pattern in how this library is used.,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2176, 2446, 422, 257, 5888, 357, 5603, 13, 53, 9863, 6369, 8, 9217, 257, 3912, 287, 703, 428, 5888, 318, 973, 13]",0.5,2152,ml_signal,279,Usage of a specific method from a library (TA.VORTEX) indicates a pattern in how this library is used.,,2133,    assert dymi.values[-1] == 32.4897564,"[220, 220, 220, 6818, 288, 4948, 72, 13, 27160, 58, 12, 16, 60, 6624, 3933, 13, 35890, 2425, 2414]"
"‚ö†Ô∏è SAST Risk (Low): Direct use of assert statements for testing can be disabled with the -O and -OO flags in Python, potentially skipping these checks.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 779, 286, 6818, 6299, 329, 4856, 460, 307, 10058, 351, 262, 532, 46, 290, 532, 6684, 9701, 287, 11361, 11, 6196, 31017, 777, 8794, 13]",0.5,2152,sast_risk,281,"Direct use of assert statements for testing can be disabled with the -O and -OO flags in Python, potentially skipping these checks.",Low,2152,,[]
üß† ML Signal: Checking the type of an object is a common pattern in testing to ensure correct data types.,"[8582, 100, 254, 10373, 26484, 25, 39432, 262, 2099, 286, 281, 2134, 318, 257, 2219, 3912, 287, 4856, 284, 4155, 3376, 1366, 3858, 13]",0.5,2157,ml_signal,282,Checking the type of an object is a common pattern in testing to ensure correct data types.,,2152,def test_tr():,"[4299, 1332, 62, 2213, 33529]"
"‚ö†Ô∏è SAST Risk (Low): Direct use of assert statements for testing can be disabled with the -O and -OO flags in Python, potentially skipping these checks.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 779, 286, 6818, 6299, 329, 4856, 460, 307, 10058, 351, 262, 532, 46, 290, 532, 6684, 9701, 287, 11361, 11, 6196, 31017, 777, 8794, 13]",0.5,2157,sast_risk,284,"Direct use of assert statements for testing can be disabled with the -O and -OO flags in Python, potentially skipping these checks.",Low,2157,,[]
üß† ML Signal: Checking the type of an object is a common pattern in testing to ensure correct data types.,"[8582, 100, 254, 10373, 26484, 25, 39432, 262, 2099, 286, 281, 2134, 318, 257, 2219, 3912, 287, 4856, 284, 4155, 3376, 1366, 3858, 13]",0.5,2177,ml_signal,285,Checking the type of an object is a common pattern in testing to ensure correct data types.,,2157,    tr = TA.TR(ohlc).round(decimals=8),"[220, 220, 220, 491, 796, 21664, 13, 5446, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
"‚ö†Ô∏è SAST Risk (Low): Direct use of assert statements for testing can be disabled with the -O and -OO flags in Python, potentially skipping these checks.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 779, 286, 6818, 6299, 329, 4856, 460, 307, 10058, 351, 262, 532, 46, 290, 532, 6684, 9701, 287, 11361, 11, 6196, 31017, 777, 8794, 13]",0.5,2190,sast_risk,287,"Direct use of assert statements for testing can be disabled with the -O and -OO flags in Python, potentially skipping these checks.",Low,2177,"    assert isinstance(tr, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 2213, 11, 2168, 13, 27996, 8]"
üß† ML Signal: Asserting specific values in a test indicates expected behavior or output.,"[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 3815, 287, 257, 1332, 9217, 2938, 4069, 393, 5072, 13]",1.0,2205,ml_signal,288,Asserting specific values in a test indicates expected behavior or output.,,2190,    assert tr.values[-1] == 113.4,"[220, 220, 220, 6818, 491, 13, 27160, 58, 12, 16, 60, 6624, 17318, 13, 19]"
"‚ö†Ô∏è SAST Risk (Low): Direct use of assert statements for testing can be disabled with the -O and -OO flags in Python, potentially skipping these checks.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 779, 286, 6818, 6299, 329, 4856, 460, 307, 10058, 351, 262, 532, 46, 290, 532, 6684, 9701, 287, 11361, 11, 6196, 31017, 777, 8794, 13]",0.5,2205,sast_risk,290,"Direct use of assert statements for testing can be disabled with the -O and -OO flags in Python, potentially skipping these checks.",Low,2205,,[]
üß† ML Signal: Asserting specific values in a test indicates expected behavior or output.,"[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 3815, 287, 257, 1332, 9217, 2938, 4069, 393, 5072, 13]",1.0,2211,ml_signal,291,Asserting specific values in a test indicates expected behavior or output.,,2205,def test_atr():,"[4299, 1332, 62, 265, 81, 33529]"
"üß† ML Signal: Testing function for TA.KST, useful for learning test patterns","[8582, 100, 254, 10373, 26484, 25, 23983, 2163, 329, 21664, 13, 42, 2257, 11, 4465, 329, 4673, 1332, 7572]",1.0,2211,ml_signal,286,"Testing function for TA.KST, useful for learning test patterns",,2211,,[]
"‚ö†Ô∏è SAST Risk (Low): Assumes 'ohlc' is defined and valid, potential NameError if not","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 1219, 44601, 6, 318, 5447, 290, 4938, 11, 2785, 6530, 12331, 611, 407]",1.0,2226,sast_risk,288,"Assumes 'ohlc' is defined and valid, potential NameError if not",Low,2211,    assert tr.values[-1] == 113.4,"[220, 220, 220, 6818, 491, 13, 27160, 58, 12, 16, 60, 6624, 17318, 13, 19]"
‚úÖ Best Practice: Use of round() for consistent decimal precision,"[26486, 227, 6705, 19939, 25, 5765, 286, 2835, 3419, 329, 6414, 32465, 15440]",1.0,2226,best_practice,289,Use of round() for consistent decimal precision,,2226,,[]
"‚ö†Ô∏è SAST Risk (Low): Assumes 'series.Series' is the correct type, potential AttributeError if not","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 25076, 13, 27996, 6, 318, 262, 3376, 2099, 11, 2785, 3460, 4163, 12331, 611, 407]",0.5,2232,sast_risk,291,"Assumes 'series.Series' is the correct type, potential AttributeError if not",Low,2226,def test_atr():,"[4299, 1332, 62, 265, 81, 33529]"
"‚ö†Ô∏è SAST Risk (Low): Assumes 'series.Series' is the correct type, potential AttributeError if not","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 25076, 13, 27996, 6, 318, 262, 3376, 2099, 11, 2785, 3460, 4163, 12331, 611, 407]",0.5,2232,sast_risk,293,"Assumes 'series.Series' is the correct type, potential AttributeError if not",Low,2232,,[]
"‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers, potential precision issues","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 11, 2785, 15440, 2428]",0.5,2232,sast_risk,295,"Direct comparison of floating-point numbers, potential precision issues",Low,2232,,[]
"‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers, potential precision issues","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 11, 2785, 15440, 2428]",0.5,2249,sast_risk,297,"Direct comparison of floating-point numbers, potential precision issues",Low,2232,    assert tr.values[-1] == 328.56890383,"[220, 220, 220, 6818, 491, 13, 27160, 58, 12, 16, 60, 6624, 39093, 13, 49211, 3829, 34741]"
üß† ML Signal: Function name follows a common test naming pattern,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 1332, 19264, 3912]",0.5,2249,ml_signal,293,Function name follows a common test naming pattern,,2249,,[]
‚ö†Ô∏è SAST Risk (Low): Assumes 'TA.TSI' and 'ohlc' are safe and correctly implemented,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 5603, 13, 4694, 40, 6, 290, 705, 1219, 44601, 6, 389, 3338, 290, 9380, 9177]",0.5,2249,sast_risk,295,Assumes 'TA.TSI' and 'ohlc' are safe and correctly implemented,Low,2249,,[]
"‚ö†Ô∏è SAST Risk (Low): Assumes 'tsi[""TSI""]' is a valid key and 'series.Series' is the correct type","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 912, 72, 14692, 4694, 40, 8973, 6, 318, 257, 4938, 1994, 290, 705, 25076, 13, 27996, 6, 318, 262, 3376, 2099]",0.5,2266,sast_risk,297,"Assumes 'tsi[""TSI""]' is a valid key and 'series.Series' is the correct type",Low,2249,    assert tr.values[-1] == 328.56890383,"[220, 220, 220, 6818, 491, 13, 27160, 58, 12, 16, 60, 6624, 39093, 13, 49211, 3829, 34741]"
"‚ö†Ô∏è SAST Risk (Low): Assumes 'tsi[""signal""]' is a valid key and 'series.Series' is the correct type","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 912, 72, 14692, 12683, 282, 8973, 6, 318, 257, 4938, 1994, 290, 705, 25076, 13, 27996, 6, 318, 262, 3376, 2099]",0.5,2266,sast_risk,299,"Assumes 'tsi[""signal""]' is a valid key and 'series.Series' is the correct type",Low,2266,,[]
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point values can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3815, 460, 1085, 284, 15440, 2428]",0.5,2276,sast_risk,301,Direct comparison of floating-point values can lead to precision issues,Low,2266,"    """"""test TA.SAR""""""","[220, 220, 220, 37227, 9288, 21664, 13, 50, 1503, 37811]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point values can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3815, 460, 1085, 284, 15440, 2428]",0.5,2297,sast_risk,303,Direct comparison of floating-point values can lead to precision issues,Low,2276,    sar = TA.SAR(ohlc).round(decimals=8),"[220, 220, 220, 29008, 796, 21664, 13, 50, 1503, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
üß† ML Signal: Function name follows a common test naming pattern,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 1332, 19264, 3912]",1.0,2303,ml_signal,300,Function name follows a common test naming pattern,,2297,def test_sar():,"[4299, 1332, 62, 82, 283, 33529]"
‚ö†Ô∏è SAST Risk (Low): Assumes TA.TP and ohlc are defined and valid,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 21664, 13, 7250, 290, 11752, 44601, 389, 5447, 290, 4938]",0.5,2303,sast_risk,302,Assumes TA.TP and ohlc are defined and valid,Low,2303,,[]
‚úÖ Best Practice: Rounding to a fixed number of decimals for consistency,"[26486, 227, 6705, 19939, 25, 371, 9969, 284, 257, 5969, 1271, 286, 875, 320, 874, 329, 15794]",0.5,2324,best_practice,303,Rounding to a fixed number of decimals for consistency,,2303,    sar = TA.SAR(ohlc).round(decimals=8),"[220, 220, 220, 29008, 796, 21664, 13, 50, 1503, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
‚ö†Ô∏è SAST Risk (Low): Assumes 'series' module is imported and 'Series' is a valid class,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 25076, 6, 8265, 318, 17392, 290, 705, 27996, 6, 318, 257, 4938, 1398]",0.5,2338,sast_risk,305,Assumes 'series' module is imported and 'Series' is a valid class,Low,2324,"    assert isinstance(sar, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 82, 283, 11, 2168, 13, 27996, 8]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",0.5,2338,sast_risk,307,Direct comparison of floating-point numbers can lead to precision issues,Low,2338,,[]
üß† ML Signal: Use of assert to validate expected outcomes in tests,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 284, 26571, 2938, 10906, 287, 5254]",0.5,2338,ml_signal,308,Use of assert to validate expected outcomes in tests,,2338,,[]
"üß† ML Signal: Function definition for testing, indicating a test pattern","[8582, 100, 254, 10373, 26484, 25, 15553, 6770, 329, 4856, 11, 12739, 257, 1332, 3912]",0.5,2359,ml_signal,303,"Function definition for testing, indicating a test pattern",,2338,    sar = TA.SAR(ohlc).round(decimals=8),"[220, 220, 220, 29008, 796, 21664, 13, 50, 1503, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
"üß† ML Signal: Instantiation of a class from a module, indicating usage pattern","[8582, 100, 254, 10373, 26484, 25, 24470, 3920, 286, 257, 1398, 422, 257, 8265, 11, 12739, 8748, 3912]",0.5,2373,ml_signal,305,"Instantiation of a class from a module, indicating usage pattern",,2359,"    assert isinstance(sar, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 82, 283, 11, 2168, 13, 27996, 8]"
‚ö†Ô∏è SAST Risk (Low): Lack of exception handling for potential errors in class instantiation,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 38289, 286, 6631, 9041, 329, 2785, 8563, 287, 1398, 9113, 3920]",1.0,2373,sast_risk,307,Lack of exception handling for potential errors in class instantiation,Low,2373,,[]
‚úÖ Best Practice: Use of isinstance to check the type of a variable,"[26486, 227, 6705, 19939, 25, 5765, 286, 318, 39098, 284, 2198, 262, 2099, 286, 257, 7885]",0.5,2373,best_practice,308,Use of isinstance to check the type of a variable,,2373,,[]
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",0.5,2383,sast_risk,310,Direct comparison of floating-point numbers can lead to precision issues,Low,2373,"    """"""test TA.PSAR""""""","[220, 220, 220, 37227, 9288, 21664, 13, 3705, 1503, 37811]"
"üß† ML Signal: Function name follows a common pattern for test functions, useful for identifying test cases.","[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 3912, 329, 1332, 5499, 11, 4465, 329, 13720, 1332, 2663, 13]",1.0,2389,ml_signal,309,"Function name follows a common pattern for test functions, useful for identifying test cases.",,2383,def test_psar():,"[4299, 1332, 62, 862, 283, 33529]"
"‚ö†Ô∏è SAST Risk (Low): Assumes `TA.CHAIKIN` and `ohlc` are defined and valid, potential for NameError if not.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 4600, 5603, 13, 49285, 18694, 1268, 63, 290, 4600, 1219, 44601, 63, 389, 5447, 290, 4938, 11, 2785, 329, 6530, 12331, 611, 407, 13]",1.0,2389,sast_risk,311,"Assumes `TA.CHAIKIN` and `ohlc` are defined and valid, potential for NameError if not.",Low,2389,,[]
"üß† ML Signal: Use of method chaining, common in data processing libraries.","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2446, 442, 1397, 11, 2219, 287, 1366, 7587, 12782, 13]",0.5,2410,ml_signal,312,"Use of method chaining, common in data processing libraries.",,2389,    sar = TA.PSAR(ohlc).round(decimals=8),"[220, 220, 220, 29008, 796, 21664, 13, 3705, 1503, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
‚úÖ Best Practice: Rounding to a fixed number of decimals for consistency in test results.,"[26486, 227, 6705, 19939, 25, 371, 9969, 284, 257, 5969, 1271, 286, 875, 320, 874, 329, 15794, 287, 1332, 2482, 13]",0.5,2410,best_practice,313,Rounding to a fixed number of decimals for consistency in test results.,,2410,,[]
"‚ö†Ô∏è SAST Risk (Low): Assumes `series.Series` is defined, potential for NameError if not.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 4600, 25076, 13, 27996, 63, 318, 5447, 11, 2785, 329, 6530, 12331, 611, 407, 13]",0.5,2431,sast_risk,315,"Assumes `series.Series` is defined, potential for NameError if not.",Low,2410,    assert sar.psar.values[-1] == 7113.5666702,"[220, 220, 220, 6818, 29008, 13, 862, 283, 13, 27160, 58, 12, 16, 60, 6624, 767, 16616, 13, 20, 27310, 36680]"
"üß† ML Signal: Type checking with `isinstance`, common pattern for ensuring correct data types.","[8582, 100, 254, 10373, 26484, 25, 5994, 10627, 351, 4600, 271, 39098, 47671, 2219, 3912, 329, 13359, 3376, 1366, 3858, 13]",0.5,2431,ml_signal,316,"Type checking with `isinstance`, common pattern for ensuring correct data types.",,2431,,[]
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428, 13]",1.0,2437,sast_risk,318,Direct comparison of floating-point numbers can lead to precision issues.,Low,2431,def test_bbands():,"[4299, 1332, 62, 11848, 1746, 33529]"
"üß† ML Signal: Use of assert statements, common in test functions to validate outcomes.","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 6299, 11, 2219, 287, 1332, 5499, 284, 26571, 10906, 13]",0.5,2448,ml_signal,319,"Use of assert statements, common in test functions to validate outcomes.",,2437,"    """"""test TA.BBANDS""""""","[220, 220, 220, 37227, 9288, 21664, 13, 15199, 1565, 5258, 37811]"
‚úÖ Best Practice: Function docstring provides a brief description of the test,"[26486, 227, 6705, 19939, 25, 15553, 2205, 8841, 3769, 257, 4506, 6764, 286, 262, 1332]",0.5,2469,best_practice,312,Function docstring provides a brief description of the test,,2448,    sar = TA.PSAR(ohlc).round(decimals=8),"[220, 220, 220, 29008, 796, 21664, 13, 3705, 1503, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
üß† ML Signal: Usage of TA.MFI function indicates a pattern for financial analysis,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 21664, 13, 44, 11674, 2163, 9217, 257, 3912, 329, 3176, 3781]",1.0,2490,ml_signal,315,Usage of TA.MFI function indicates a pattern for financial analysis,,2469,    assert sar.psar.values[-1] == 7113.5666702,"[220, 220, 220, 6818, 29008, 13, 862, 283, 13, 27160, 58, 12, 16, 60, 6624, 767, 16616, 13, 20, 27310, 36680]"
‚úÖ Best Practice: Rounding the result to a specific number of decimals for consistency,"[26486, 227, 6705, 19939, 25, 371, 9969, 262, 1255, 284, 257, 2176, 1271, 286, 875, 320, 874, 329, 15794]",1.0,2490,best_practice,316,Rounding the result to a specific number of decimals for consistency,,2490,,[]
‚úÖ Best Practice: Asserting the type of the result ensures expected behavior,"[26486, 227, 6705, 19939, 25, 2195, 861, 278, 262, 2099, 286, 262, 1255, 19047, 2938, 4069]",1.0,2496,best_practice,318,Asserting the type of the result ensures expected behavior,,2490,def test_bbands():,"[4299, 1332, 62, 11848, 1746, 33529]"
"‚ö†Ô∏è SAST Risk (Low): Assumes mfi.values is not empty, which could raise an IndexError","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 285, 12463, 13, 27160, 318, 407, 6565, 11, 543, 714, 5298, 281, 12901, 12331]",0.5,2496,sast_risk,320,"Assumes mfi.values is not empty, which could raise an IndexError",Low,2496,,[]
‚úÖ Best Practice: Asserting value range to ensure the result is within expected bounds,"[26486, 227, 6705, 19939, 25, 2195, 861, 278, 1988, 2837, 284, 4155, 262, 1255, 318, 1626, 2938, 22303]",0.5,2519,best_practice,321,Asserting value range to ensure the result is within expected bounds,,2496,    bb = TA.BBANDS(ohlc).round(decimals=8),"[220, 220, 220, 275, 65, 796, 21664, 13, 15199, 1565, 5258, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
üß† ML Signal: Function name follows a common pattern for test functions,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 3912, 329, 1332, 5499]",0.5,2530,ml_signal,319,Function name follows a common pattern for test functions,,2519,"    """"""test TA.BBANDS""""""","[220, 220, 220, 37227, 9288, 21664, 13, 15199, 1565, 5258, 37811]"
‚ö†Ô∏è SAST Risk (Low): Potential risk if 'ohlc' is not validated or sanitized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 705, 1219, 44601, 6, 318, 407, 31031, 393, 5336, 36951]",0.5,2553,sast_risk,321,Potential risk if 'ohlc' is not validated or sanitized,Low,2530,    bb = TA.BBANDS(ohlc).round(decimals=8),"[220, 220, 220, 275, 65, 796, 21664, 13, 15199, 1565, 5258, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
‚úÖ Best Practice: Use of method chaining for concise code,"[26486, 227, 6705, 19939, 25, 5765, 286, 2446, 442, 1397, 329, 35327, 2438]",0.5,2553,best_practice,322,Use of method chaining for concise code,,2553,,[]
‚ö†Ô∏è SAST Risk (Low): Lack of error handling for type checking,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 38289, 286, 4049, 9041, 329, 2099, 10627]",0.5,2573,sast_risk,324,Lack of error handling for type checking,Low,2553,"    assert isinstance(bb[""BB_MIDDLE""], series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 11848, 14692, 15199, 62, 44, 2389, 35, 2538, 33116, 2168, 13, 27996, 8]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",0.5,2573,sast_risk,326,Direct comparison of floating-point numbers can lead to precision issues,Low,2573,,[]
‚úÖ Best Practice: Use of descriptive variable names improves code readability,"[26486, 227, 6705, 19939, 25, 5765, 286, 35644, 7885, 3891, 19575, 2438, 1100, 1799]",0.5,2593,best_practice,324,Use of descriptive variable names improves code readability,,2573,"    assert isinstance(bb[""BB_MIDDLE""], series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 11848, 14692, 15199, 62, 44, 2389, 35, 2538, 33116, 2168, 13, 27996, 8]"
üß† ML Signal: Checking the type of a variable can indicate expected data structures,"[8582, 100, 254, 10373, 26484, 25, 39432, 262, 2099, 286, 257, 7885, 460, 7603, 2938, 1366, 8573]",0.5,2593,ml_signal,326,Checking the type of a variable can indicate expected data structures,,2593,,[]
üß† ML Signal: Asserting specific values can indicate expected outcomes or invariants,"[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 3815, 460, 7603, 2938, 10906, 393, 25275, 1187]",0.5,2621,ml_signal,328,Asserting specific values can indicate expected outcomes or invariants,,2593,"    assert bb[""BB_MIDDLE""].values[-1] == 7110.55082354","[220, 220, 220, 6818, 275, 65, 14692, 15199, 62, 44, 2389, 35, 2538, 1, 4083, 27160, 58, 12, 16, 60, 6624, 9166, 940, 13, 22730, 23, 1954, 4051]"
üß† ML Signal: Function name follows a common test naming pattern,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 1332, 19264, 3912]",0.5,2647,ml_signal,329,Function name follows a common test naming pattern,,2621,"    assert bb[""BB_LOWER""].values[-1] == 6008.30372428","[220, 220, 220, 6818, 275, 65, 14692, 15199, 62, 43, 36048, 1, 4083, 27160, 58, 12, 16, 60, 6624, 10053, 23, 13, 1270, 2718, 1731, 2078]"
‚ö†Ô∏è SAST Risk (Low): Ensure 'ohlc' is validated and sanitized before use,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 705, 1219, 44601, 6, 318, 31031, 290, 5336, 36951, 878, 779]",0.5,2653,sast_risk,331,Ensure 'ohlc' is validated and sanitized before use,Low,2647,def test_mobo():,"[4299, 1332, 62, 76, 20391, 33529]"
üß† ML Signal: Use of TA.VZO indicates a pattern of technical analysis,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 21664, 13, 53, 57, 46, 9217, 257, 3912, 286, 6276, 3781]",0.5,2663,ml_signal,332,Use of TA.VZO indicates a pattern of technical analysis,,2653,"    """"""test TA.mobo""""""","[220, 220, 220, 37227, 9288, 21664, 13, 76, 20391, 37811]"
‚úÖ Best Practice: Use of isinstance for type checking,"[26486, 227, 6705, 19939, 25, 5765, 286, 318, 39098, 329, 2099, 10627]",0.5,2685,best_practice,334,Use of isinstance for type checking,,2663,    mbb = TA.MOBO(ohlc).round(decimals=8),"[220, 220, 220, 285, 11848, 796, 21664, 13, 11770, 8202, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
‚úÖ Best Practice: Asserting value range for expected output,"[26486, 227, 6705, 19939, 25, 2195, 861, 278, 1988, 2837, 329, 2938, 5072]",0.5,2704,best_practice,336,Asserting value range for expected output,,2685,"    assert isinstance(mbb[""BB_UPPER""], series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 2022, 65, 14692, 15199, 62, 8577, 18973, 33116, 2168, 13, 27996, 8]"
üß† ML Signal: Function definition with a specific naming pattern indicating a test function,"[8582, 100, 254, 10373, 26484, 25, 15553, 6770, 351, 257, 2176, 19264, 3912, 12739, 257, 1332, 2163]",1.0,2714,ml_signal,332,Function definition with a specific naming pattern indicating a test function,,2704,"    """"""test TA.mobo""""""","[220, 220, 220, 37227, 9288, 21664, 13, 76, 20391, 37811]"
"üß† ML Signal: Instantiation of a class from a module, indicating usage pattern","[8582, 100, 254, 10373, 26484, 25, 24470, 3920, 286, 257, 1398, 422, 257, 8265, 11, 12739, 8748, 3912]",0.5,2714,ml_signal,335,"Instantiation of a class from a module, indicating usage pattern",,2714,,[]
‚ö†Ô∏è SAST Risk (Low): Lack of exception handling for the instantiation,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 38289, 286, 6631, 9041, 329, 262, 9113, 3920]",1.0,2735,sast_risk,337,Lack of exception handling for the instantiation,Low,2714,"    assert isinstance(mbb[""BB_MIDDLE""], series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 2022, 65, 14692, 15199, 62, 44, 2389, 35, 2538, 33116, 2168, 13, 27996, 8]"
üß† ML Signal: Use of isinstance to check the type of an object,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 318, 39098, 284, 2198, 262, 2099, 286, 281, 2134]",0.5,2754,ml_signal,338,Use of isinstance to check the type of an object,,2735,"    assert isinstance(mbb[""BB_LOWER""], series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 2022, 65, 14692, 15199, 62, 43, 36048, 33116, 2168, 13, 27996, 8]"
‚ö†Ô∏è SAST Risk (Low): Lack of exception handling for the assertion,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 38289, 286, 6631, 9041, 329, 262, 19190]",1.0,2780,sast_risk,340,Lack of exception handling for the assertion,Low,2754,"    assert mbb[""BB_UPPER""].values[-1] == 6919.48336631","[220, 220, 220, 6818, 285, 11848, 14692, 15199, 62, 8577, 18973, 1, 4083, 27160, 58, 12, 16, 60, 6624, 8644, 1129, 13, 2780, 2091, 2791, 3132]"
üß† ML Signal: Use of assert to validate a condition,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 284, 26571, 257, 4006]",0.5,2807,ml_signal,341,Use of assert to validate a condition,,2780,"    assert mbb[""BB_MIDDLE""].values[-1] == 6633.75040888","[220, 220, 220, 6818, 285, 11848, 14692, 15199, 62, 44, 2389, 35, 2538, 1, 4083, 27160, 58, 12, 16, 60, 6624, 7930, 2091, 13, 15426, 1821, 28011]"
‚ö†Ô∏è SAST Risk (Low): Lack of exception handling for the assertion,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 38289, 286, 6631, 9041, 329, 262, 19190]",1.0,2807,sast_risk,343,Lack of exception handling for the assertion,Low,2807,,[]
"üß† ML Signal: Testing function for TA.EFI, useful for learning test patterns","[8582, 100, 254, 10373, 26484, 25, 23983, 2163, 329, 21664, 13, 36, 11674, 11, 4465, 329, 4673, 1332, 7572]",0.5,2807,ml_signal,339,"Testing function for TA.EFI, useful for learning test patterns",,2807,,[]
‚ö†Ô∏è SAST Risk (Low): Assumes TA.EFI and ohlc are defined and valid,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 21664, 13, 36, 11674, 290, 11752, 44601, 389, 5447, 290, 4938]",0.5,2834,sast_risk,341,Assumes TA.EFI and ohlc are defined and valid,Low,2807,"    assert mbb[""BB_MIDDLE""].values[-1] == 6633.75040888","[220, 220, 220, 6818, 285, 11848, 14692, 15199, 62, 44, 2389, 35, 2538, 1, 4083, 27160, 58, 12, 16, 60, 6624, 7930, 2091, 13, 15426, 1821, 28011]"
‚ö†Ô∏è SAST Risk (Low): Assumes efi is a series.Series object,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 304, 12463, 318, 257, 2168, 13, 27996, 2134]",0.5,2834,sast_risk,343,Assumes efi is a series.Series object,Low,2834,,[]
‚ö†Ô∏è SAST Risk (Low): Assumes efi.values has enough elements and valid indices,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 304, 12463, 13, 27160, 468, 1576, 4847, 290, 4938, 36525]",0.5,2840,sast_risk,345,Assumes efi.values has enough elements and valid indices,Low,2834,def test_bbwidth():,"[4299, 1332, 62, 11848, 10394, 33529]"
‚ö†Ô∏è SAST Risk (Low): Assumes efi.values has enough elements and valid indices,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 304, 12463, 13, 27160, 468, 1576, 4847, 290, 4938, 36525]",0.5,2840,sast_risk,347,Assumes efi.values has enough elements and valid indices,Low,2840,,[]
‚ö†Ô∏è SAST Risk (Low): Assumes efi.values has enough elements and valid indices,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 304, 12463, 13, 27160, 468, 1576, 4847, 290, 4938, 36525]",0.5,2840,sast_risk,349,Assumes efi.values has enough elements and valid indices,Low,2840,,[]
‚ö†Ô∏è SAST Risk (Low): Assumes efi.values has enough elements and valid indices,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 304, 12463, 13, 27160, 468, 1576, 4847, 290, 4938, 36525]",0.5,2856,sast_risk,351,Assumes efi.values has enough elements and valid indices,Low,2840,    assert 0 < bb.values[-1] < 1,"[220, 220, 220, 6818, 657, 1279, 275, 65, 13, 27160, 58, 12, 16, 60, 1279, 352]"
üß† ML Signal: Function name follows a common pattern for test functions,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 3912, 329, 1332, 5499]",0.5,2856,ml_signal,347,Function name follows a common pattern for test functions,,2856,,[]
‚ö†Ô∏è SAST Risk (Low): Potential risk if `ohlc` is not validated or sanitized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 4600, 1219, 44601, 63, 318, 407, 31031, 393, 5336, 36951]",1.0,2856,sast_risk,349,Potential risk if `ohlc` is not validated or sanitized,Low,2856,,[]
üß† ML Signal: Use of method chaining with `round` on the result of `TA.CFI`,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2446, 442, 1397, 351, 4600, 744, 63, 319, 262, 1255, 286, 4600, 5603, 13, 34, 11674, 63]",0.5,2869,ml_signal,350,Use of method chaining with `round` on the result of `TA.CFI`,,2856,"    assert isinstance(bb, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 11848, 11, 2168, 13, 27996, 8]"
"‚ö†Ô∏è SAST Risk (Low): Assumes `cfi` is always a `series.Series`, which may not be the case if `TA.CFI` changes","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 4600, 66, 12463, 63, 318, 1464, 257, 4600, 25076, 13, 27996, 47671, 543, 743, 407, 307, 262, 1339, 611, 4600, 5603, 13, 34, 11674, 63, 2458]",0.5,2869,sast_risk,352,"Assumes `cfi` is always a `series.Series`, which may not be the case if `TA.CFI` changes",Low,2869,,[]
üß† ML Signal: Use of `assert` to validate the type of `cfi`,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4600, 30493, 63, 284, 26571, 262, 2099, 286, 4600, 66, 12463, 63]",0.5,2869,ml_signal,353,Use of `assert` to validate the type of `cfi`,,2869,,[]
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",0.5,2881,sast_risk,355,Direct comparison of floating-point numbers can lead to precision issues,Low,2869,"    """"""test TA.PERCENT_B""""""","[220, 220, 220, 37227, 9288, 21664, 13, 18973, 43960, 62, 33, 37811]"
üß† ML Signal: Use of `assert` to validate the last value of `cfi`,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4600, 30493, 63, 284, 26571, 262, 938, 1988, 286, 4600, 66, 12463, 63]",0.5,2881,ml_signal,356,Use of `assert` to validate the last value of `cfi`,,2881,,[]
üß† ML Signal: Function name follows a common pattern for test functions,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 3912, 329, 1332, 5499]",0.5,2881,ml_signal,352,Function name follows a common pattern for test functions,,2881,,[]
‚ö†Ô∏è SAST Risk (Low): Assumes 'TA.EBBP' and 'ohlc' are defined and safe,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 5603, 13, 36, 15199, 47, 6, 290, 705, 1219, 44601, 6, 389, 5447, 290, 3338]",0.5,2887,sast_risk,354,Assumes 'TA.EBBP' and 'ohlc' are defined and safe,Low,2881,def test_percentb():,"[4299, 1332, 62, 25067, 65, 33529]"
‚úÖ Best Practice: Use of 'round' for consistent decimal precision,"[26486, 227, 6705, 19939, 25, 5765, 286, 705, 744, 6, 329, 6414, 32465, 15440]",0.5,2899,best_practice,355,Use of 'round' for consistent decimal precision,,2887,"    """"""test TA.PERCENT_B""""""","[220, 220, 220, 37227, 9288, 21664, 13, 18973, 43960, 62, 33, 37811]"
"‚ö†Ô∏è SAST Risk (Low): Assumes 'eb' has the expected structure with ""Bull."" key","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 1765, 6, 468, 262, 2938, 4645, 351, 366, 39549, 526, 1994]",0.5,2923,sast_risk,357,"Assumes 'eb' has the expected structure with ""Bull."" key",Low,2899,    bb = TA.PERCENT_B(ohlc).round(decimals=8),"[220, 220, 220, 275, 65, 796, 21664, 13, 18973, 43960, 62, 33, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
‚úÖ Best Practice: Use of 'isinstance' for type checking,"[26486, 227, 6705, 19939, 25, 5765, 286, 705, 271, 39098, 6, 329, 2099, 10627]",1.0,2923,best_practice,358,Use of 'isinstance' for type checking,,2923,,[]
"‚ö†Ô∏è SAST Risk (Low): Assumes 'eb' has the expected structure with ""Bear."" key","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 1765, 6, 468, 262, 2938, 4645, 351, 366, 36352, 526, 1994]",0.5,2942,sast_risk,360,"Assumes 'eb' has the expected structure with ""Bear."" key",Low,2923,    assert bb.values[-1] == 0.18695874,"[220, 220, 220, 6818, 275, 65, 13, 27160, 58, 12, 16, 60, 6624, 657, 13, 1507, 3388, 3365, 4524]"
‚úÖ Best Practice: Use of 'isinstance' for type checking,"[26486, 227, 6705, 19939, 25, 5765, 286, 705, 271, 39098, 6, 329, 2099, 10627]",1.0,2942,best_practice,361,Use of 'isinstance' for type checking,,2942,,[]
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can be unreliable,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 307, 29954]",1.0,2948,sast_risk,363,Direct comparison of floating-point numbers can be unreliable,Low,2942,def test_kc():,"[4299, 1332, 62, 74, 66, 33529]"
‚úÖ Best Practice: Use of assert for validation in test functions,"[26486, 227, 6705, 19939, 25, 5765, 286, 6818, 329, 21201, 287, 1332, 5499]",0.5,2957,best_practice,364,Use of assert for validation in test functions,,2948,"    """"""test TA.KC""""""","[220, 220, 220, 37227, 9288, 21664, 13, 36222, 37811]"
"üß† ML Signal: Testing function for TA.EMV, useful for learning test patterns","[8582, 100, 254, 10373, 26484, 25, 23983, 2163, 329, 21664, 13, 3620, 53, 11, 4465, 329, 4673, 1332, 7572]",1.0,2957,ml_signal,358,"Testing function for TA.EMV, useful for learning test patterns",,2957,,[]
‚ö†Ô∏è SAST Risk (Low): Ensure 'ohlc' is validated to prevent unexpected data issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 705, 1219, 44601, 6, 318, 31031, 284, 2948, 10059, 1366, 2428]",1.0,2976,sast_risk,360,Ensure 'ohlc' is validated to prevent unexpected data issues,Low,2957,    assert bb.values[-1] == 0.18695874,"[220, 220, 220, 6818, 275, 65, 13, 27160, 58, 12, 16, 60, 6624, 657, 13, 1507, 3388, 3365, 4524]"
‚úÖ Best Practice: Use descriptive variable names for clarity,"[26486, 227, 6705, 19939, 25, 5765, 35644, 7885, 3891, 329, 16287]",0.5,2976,best_practice,361,Use descriptive variable names for clarity,,2976,,[]
‚ö†Ô∏è SAST Risk (Low): Ensure 'series.Series' is the correct type and imported,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 705, 25076, 13, 27996, 6, 318, 262, 3376, 2099, 290, 17392]",1.0,2982,sast_risk,363,Ensure 'series.Series' is the correct type and imported,Low,2976,def test_kc():,"[4299, 1332, 62, 74, 66, 33529]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",1.0,2982,sast_risk,365,Direct comparison of floating-point numbers can lead to precision issues,Low,2982,,[]
"üß† ML Signal: Assertion for expected output, useful for learning expected behavior","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 295, 329, 2938, 5072, 11, 4465, 329, 4673, 2938, 4069]",0.5,3006,ml_signal,366,"Assertion for expected output, useful for learning expected behavior",,2982,"    ma = TA.ZLEMA(ohlc, 20).round(decimals=8)","[220, 220, 220, 17266, 796, 21664, 13, 57, 2538, 5673, 7, 1219, 44601, 11, 1160, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
üß† ML Signal: Function name follows a common pattern for test functions,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 3912, 329, 1332, 5499]",1.0,3012,ml_signal,363,Function name follows a common pattern for test functions,,3006,def test_kc():,"[4299, 1332, 62, 74, 66, 33529]"
‚ö†Ô∏è SAST Risk (Low): Ensure 'ohlc' is validated to prevent unexpected data issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 705, 1219, 44601, 6, 318, 31031, 284, 2948, 10059, 1366, 2428]",0.5,3012,sast_risk,365,Ensure 'ohlc' is validated to prevent unexpected data issues,Low,3012,,[]
‚úÖ Best Practice: Use of 'round' for consistent decimal precision,"[26486, 227, 6705, 19939, 25, 5765, 286, 705, 744, 6, 329, 6414, 32465, 15440]",0.5,3036,best_practice,366,Use of 'round' for consistent decimal precision,,3012,"    ma = TA.ZLEMA(ohlc, 20).round(decimals=8)","[220, 220, 220, 17266, 796, 21664, 13, 57, 2538, 5673, 7, 1219, 44601, 11, 1160, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
‚ö†Ô∏è SAST Risk (Low): Ensure 'series.Series' is the expected type to prevent runtime errors,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 705, 25076, 13, 27996, 6, 318, 262, 2938, 2099, 284, 2948, 19124, 8563]",0.5,3036,sast_risk,368,Ensure 'series.Series' is the expected type to prevent runtime errors,Low,3036,,[]
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",1.0,3055,sast_risk,370,Direct comparison of floating-point numbers can lead to precision issues,Low,3036,"    assert isinstance(kc[""KC_LOWER""], series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 74, 66, 14692, 36222, 62, 43, 36048, 33116, 2168, 13, 27996, 8]"
üß† ML Signal: Usage of a method from a library (TA.BASP) which could indicate a pattern in financial data analysis.,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2446, 422, 257, 5888, 357, 5603, 13, 33, 1921, 47, 8, 543, 714, 7603, 257, 3912, 287, 3176, 1366, 3781, 13]",0.5,3055,ml_signal,368,Usage of a method from a library (TA.BASP) which could indicate a pattern in financial data analysis.,,3055,,[]
‚ö†Ô∏è SAST Risk (Low): Potential risk if 'TA.BASP' or 'ohlc' are not properly validated or sanitized.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 705, 5603, 13, 33, 1921, 47, 6, 393, 705, 1219, 44601, 6, 389, 407, 6105, 31031, 393, 5336, 36951, 13]",1.0,3074,sast_risk,370,Potential risk if 'TA.BASP' or 'ohlc' are not properly validated or sanitized.,Low,3055,"    assert isinstance(kc[""KC_LOWER""], series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 74, 66, 14692, 36222, 62, 43, 36048, 33116, 2168, 13, 27996, 8]"
"‚ö†Ô∏è SAST Risk (Low): Potential risk if 'basp[""Buy.""]' is not properly validated or sanitized.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 705, 65, 5126, 14692, 14518, 526, 49946, 318, 407, 6105, 31031, 393, 5336, 36951, 13]",1.0,3100,sast_risk,372,"Potential risk if 'basp[""Buy.""]' is not properly validated or sanitized.",Low,3074,"    assert kc[""KC_UPPER""].values[-1] == 7014.74943624","[220, 220, 220, 6818, 479, 66, 14692, 36222, 62, 8577, 18973, 1, 4083, 27160, 58, 12, 16, 60, 6624, 767, 28645, 13, 22, 39449, 2623, 1731]"
"‚ö†Ô∏è SAST Risk (Low): Potential risk if 'basp[""Sell.""]' is not properly validated or sanitized.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 705, 65, 5126, 14692, 50, 695, 526, 49946, 318, 407, 6105, 31031, 393, 5336, 36951, 13]",1.0,3100,sast_risk,374,"Potential risk if 'basp[""Sell.""]' is not properly validated or sanitized.",Low,3100,,[]
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428, 13]",0.5,3105,sast_risk,376,Direct comparison of floating-point numbers can lead to precision issues.,Low,3100,def test_do():,"[4299, 1332, 62, 4598, 33529]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428, 13]",0.5,3105,sast_risk,378,Direct comparison of floating-point numbers can lead to precision issues.,Low,3105,,[]
üß† ML Signal: Usage of TA.BASPN with rounding indicates a pattern for data preprocessing,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 21664, 13, 33, 1921, 13137, 351, 38185, 9217, 257, 3912, 329, 1366, 662, 36948]",0.5,3105,ml_signal,375,Usage of TA.BASPN with rounding indicates a pattern for data preprocessing,,3105,,[]
‚ö†Ô∏è SAST Risk (Low): Lack of error handling for TA.BASPN function call,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 38289, 286, 4049, 9041, 329, 21664, 13, 33, 1921, 13137, 2163, 869]",0.5,3114,sast_risk,377,Lack of error handling for TA.BASPN function call,Low,3105,"    """"""test TA.DO""""""","[220, 220, 220, 37227, 9288, 21664, 13, 18227, 37811]"
üß† ML Signal: Checking type of 'Buy.' and 'Sell.' suggests expected data structure,"[8582, 100, 254, 10373, 26484, 25, 39432, 2099, 286, 705, 14518, 2637, 290, 705, 50, 695, 2637, 5644, 2938, 1366, 4645]",0.5,3114,ml_signal,378,Checking type of 'Buy.' and 'Sell.' suggests expected data structure,,3114,,[]
üß† ML Signal: Validation of specific values indicates expected output for test case,"[8582, 100, 254, 10373, 26484, 25, 3254, 24765, 286, 2176, 3815, 9217, 2938, 5072, 329, 1332, 1339]",1.0,3130,ml_signal,381,Validation of specific values indicates expected output for test case,,3114,"    assert isinstance(do[""UPPER""], series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 4598, 14692, 8577, 18973, 33116, 2168, 13, 27996, 8]"
"üß† ML Signal: Testing function for TA.CMO, useful for learning test patterns","[8582, 100, 254, 10373, 26484, 25, 23983, 2163, 329, 21664, 13, 34, 11770, 11, 4465, 329, 4673, 1332, 7572]",0.5,3148,ml_signal,382,"Testing function for TA.CMO, useful for learning test patterns",,3130,"    assert isinstance(do[""MIDDLE""], series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 4598, 14692, 44, 2389, 35, 2538, 33116, 2168, 13, 27996, 8]"
"‚ö†Ô∏è SAST Risk (Low): Assumes ohlc is defined and valid, potential NameError if not","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 11752, 44601, 318, 5447, 290, 4938, 11, 2785, 6530, 12331, 611, 407]",0.5,3148,sast_risk,384,"Assumes ohlc is defined and valid, potential NameError if not",Low,3148,,[]
"üß† ML Signal: Use of TA.CMO function, indicating usage of technical analysis library","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 21664, 13, 34, 11770, 2163, 11, 12739, 8748, 286, 6276, 3781, 5888]",0.5,3168,ml_signal,385,"Use of TA.CMO function, indicating usage of technical analysis library",,3148,"    assert do[""UPPER""].values[-1] == 7770.0","[220, 220, 220, 6818, 466, 14692, 8577, 18973, 1, 4083, 27160, 58, 12, 16, 60, 6624, 8541, 2154, 13, 15]"
"‚ö†Ô∏è SAST Risk (Low): Assumes series is defined and valid, potential NameError if not","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 2168, 318, 5447, 290, 4938, 11, 2785, 6530, 12331, 611, 407]",0.5,3190,sast_risk,387,"Assumes series is defined and valid, potential NameError if not",Low,3168,"    assert do[""LOWER""].values[-1] == 6250.0010000000002","[220, 220, 220, 6818, 466, 14692, 43, 36048, 1, 4083, 27160, 58, 12, 16, 60, 6624, 8190, 1120, 13, 8298, 10535, 34215]"
"üß† ML Signal: Checking type of cmo, useful for learning type validation patterns","[8582, 100, 254, 10373, 26484, 25, 39432, 2099, 286, 269, 5908, 11, 4465, 329, 4673, 2099, 21201, 7572]",0.5,3190,ml_signal,388,"Checking type of cmo, useful for learning type validation patterns",,3190,,[]
"üß† ML Signal: Validating range of cmo values, useful for learning validation patterns","[8582, 100, 254, 10373, 26484, 25, 48951, 803, 2837, 286, 269, 5908, 3815, 11, 4465, 329, 4673, 21201, 7572]",0.5,3196,ml_signal,390,"Validating range of cmo values, useful for learning validation patterns",,3190,def test_dmi():,"[4299, 1332, 62, 67, 11632, 33529]"
"‚ö†Ô∏è SAST Risk (Low): Assumes cmo.values is a valid list, potential IndexError if empty","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 269, 5908, 13, 27160, 318, 257, 4938, 1351, 11, 2785, 12901, 12331, 611, 6565]",0.5,3206,sast_risk,391,"Assumes cmo.values is a valid list, potential IndexError if empty",Low,3196,"    """"""test TA.DMI""""""","[220, 220, 220, 37227, 9288, 21664, 13, 35, 8895, 37811]"
üß† ML Signal: Use of TA.CHANDELIER indicates a pattern of using technical analysis indicators.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 21664, 13, 3398, 6981, 3698, 38311, 9217, 257, 3912, 286, 1262, 6276, 3781, 21337, 13]",1.0,3228,ml_signal,387,Use of TA.CHANDELIER indicates a pattern of using technical analysis indicators.,,3206,"    assert do[""LOWER""].values[-1] == 6250.0010000000002","[220, 220, 220, 6818, 466, 14692, 43, 36048, 1, 4083, 27160, 58, 12, 16, 60, 6624, 8190, 1120, 13, 8298, 10535, 34215]"
‚ö†Ô∏è SAST Risk (Low): Potential risk if 'ohlc' is not validated or sanitized before use.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 705, 1219, 44601, 6, 318, 407, 31031, 393, 5336, 36951, 878, 779, 13]",1.0,3228,sast_risk,389,Potential risk if 'ohlc' is not validated or sanitized before use.,Low,3228,,[]
üß† ML Signal: Use of isinstance to check types is a common pattern for type validation.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 318, 39098, 284, 2198, 3858, 318, 257, 2219, 3912, 329, 2099, 21201, 13]",0.5,3234,ml_signal,390,Use of isinstance to check types is a common pattern for type validation.,,3228,def test_dmi():,"[4299, 1332, 62, 67, 11632, 33529]"
üß† ML Signal: Use of isinstance to check types is a common pattern for type validation.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 318, 39098, 284, 2198, 3858, 318, 257, 2219, 3912, 329, 2099, 21201, 13]",0.5,3234,ml_signal,392,Use of isinstance to check types is a common pattern for type validation.,,3234,,[]
üß† ML Signal: Use of assert to validate expected values is a common testing pattern.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 284, 26571, 2938, 3815, 318, 257, 2219, 4856, 3912, 13]",1.0,3234,ml_signal,394,Use of assert to validate expected values is a common testing pattern.,,3234,,[]
üß† ML Signal: Use of assert to validate expected values is a common testing pattern.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 284, 26571, 2938, 3815, 318, 257, 2219, 4856, 3912, 13]",1.0,3251,ml_signal,396,Use of assert to validate expected values is a common testing pattern.,,3234,"    assert isinstance(dmi[""DI-""], series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 67, 11632, 14692, 17931, 21215, 4357, 2168, 13, 27996, 8]"
üß† ML Signal: Function name follows a common pattern for test functions,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 3912, 329, 1332, 5499]",0.5,3251,ml_signal,394,Function name follows a common pattern for test functions,,3251,,[]
‚ö†Ô∏è SAST Risk (Low): Potential risk if 'ohlc' is not validated or sanitized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 705, 1219, 44601, 6, 318, 407, 31031, 393, 5336, 36951]",1.0,3268,sast_risk,396,Potential risk if 'ohlc' is not validated or sanitized,Low,3251,"    assert isinstance(dmi[""DI-""], series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 67, 11632, 14692, 17931, 21215, 4357, 2168, 13, 27996, 8]"
üß† ML Signal: Use of method chaining with round,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2446, 442, 1397, 351, 2835]",0.5,3268,ml_signal,397,Use of method chaining with round,,3268,,[]
‚úÖ Best Practice: Use of round for consistent decimal precision,"[26486, 227, 6705, 19939, 25, 5765, 286, 2835, 329, 6414, 32465, 15440]",0.5,3290,best_practice,398,Use of round for consistent decimal precision,,3268,"    assert dmi[""DI+""].values[-1] == 7.07135289","[220, 220, 220, 6818, 288, 11632, 14692, 17931, 10, 1, 4083, 27160, 58, 12, 16, 60, 6624, 767, 13, 2998, 17059, 27693]"
üß† ML Signal: Use of isinstance to check object type,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 318, 39098, 284, 2198, 2134, 2099]",0.5,3290,ml_signal,400,Use of isinstance to check object type,,3290,,[]
üß† ML Signal: Use of assert to validate expected outcome,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 284, 26571, 2938, 8055]",1.0,3296,ml_signal,402,Use of assert to validate expected outcome,,3290,def test_adx():,"[4299, 1332, 62, 324, 87, 33529]"
‚ö†Ô∏è SAST Risk (Low): Hardcoded value in test may lead to brittle tests,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 1988, 287, 1332, 743, 1085, 284, 49307, 5254]",0.5,3306,sast_risk,403,Hardcoded value in test may lead to brittle tests,Low,3296,"    """"""test TA.ADX""""""","[220, 220, 220, 37227, 9288, 21664, 13, 2885, 55, 37811]"
üß† ML Signal: Use of pytest for testing indicates a pattern of test-driven development,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 12972, 9288, 329, 4856, 9217, 257, 3912, 286, 1332, 12, 15808, 2478]",0.5,3306,ml_signal,397,Use of pytest for testing indicates a pattern of test-driven development,,3306,,[]
‚úÖ Best Practice: Using pytest.raises to assert exceptions is a good practice for testing error handling,"[26486, 227, 6705, 19939, 25, 8554, 12972, 9288, 13, 430, 2696, 284, 6818, 13269, 318, 257, 922, 3357, 329, 4856, 4049, 9041]",0.5,3328,best_practice,399,Using pytest.raises to assert exceptions is a good practice for testing error handling,,3306,"    assert dmi[""DI-""].values[-1] == 28.62895818","[220, 220, 220, 6818, 288, 11632, 14692, 17931, 21215, 4083, 27160, 58, 12, 16, 60, 6624, 2579, 13, 21, 27693, 3365, 1507]"
‚ö†Ô∏è SAST Risk (Low): Instantiating an object without checking input validation may lead to unexpected behavior,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2262, 17096, 803, 281, 2134, 1231, 10627, 5128, 21201, 743, 1085, 284, 10059, 4069]",0.5,3328,sast_risk,401,Instantiating an object without checking input validation may lead to unexpected behavior,Low,3328,,[]
üß† ML Signal: Function definition with a specific naming pattern indicating a test function,"[8582, 100, 254, 10373, 26484, 25, 15553, 6770, 351, 257, 2176, 19264, 3912, 12739, 257, 1332, 2163]",1.0,3328,ml_signal,400,Function definition with a specific naming pattern indicating a test function,,3328,,[]
üß† ML Signal: Instantiation of a class with method chaining,"[8582, 100, 254, 10373, 26484, 25, 24470, 3920, 286, 257, 1398, 351, 2446, 442, 1397]",0.5,3338,ml_signal,403,Instantiation of a class with method chaining,,3328,"    """"""test TA.ADX""""""","[220, 220, 220, 37227, 9288, 21664, 13, 2885, 55, 37811]"
‚ö†Ô∏è SAST Risk (Low): Lack of error handling for potential exceptions during method calls,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 38289, 286, 4049, 9041, 329, 2785, 13269, 1141, 2446, 3848]",1.0,3360,sast_risk,405,Lack of error handling for potential exceptions during method calls,Low,3338,    adx = TA.ADX(ohlc).round(decimals=8),"[220, 220, 220, 512, 87, 796, 21664, 13, 2885, 55, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
üß† ML Signal: Type checking using isinstance,"[8582, 100, 254, 10373, 26484, 25, 5994, 10627, 1262, 318, 39098]",0.5,3360,ml_signal,406,Type checking using isinstance,,3360,,[]
üß† ML Signal: Type checking using isinstance,"[8582, 100, 254, 10373, 26484, 25, 5994, 10627, 1262, 318, 39098]",0.5,3378,ml_signal,408,Type checking using isinstance,,3360,    assert adx.values[-1] == 46.43950615,"[220, 220, 220, 6818, 512, 87, 13, 27160, 58, 12, 16, 60, 6624, 6337, 13, 47106, 35638, 1314]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146]",0.5,3378,sast_risk,410,Direct comparison of floating-point numbers,Low,3378,,[]
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146]",0.5,3389,sast_risk,412,Direct comparison of floating-point numbers,Low,3378,"    """"""test TA.STOCH""""""","[220, 220, 220, 37227, 9288, 21664, 13, 2257, 46, 3398, 37811]"
üß† ML Signal: Function name follows a common pattern for test functions,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 3912, 329, 1332, 5499]",1.0,3389,ml_signal,409,Function name follows a common pattern for test functions,,3389,,[]
‚ö†Ô∏è SAST Risk (Low): Potential risk if 'ohlc' is not validated or sanitized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 705, 1219, 44601, 6, 318, 407, 31031, 393, 5336, 36951]",0.5,3395,sast_risk,411,Potential risk if 'ohlc' is not validated or sanitized,Low,3389,def test_stoch():,"[4299, 1332, 62, 301, 5374, 33529]"
"üß† ML Signal: Use of method chaining with round, common in data processing","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2446, 442, 1397, 351, 2835, 11, 2219, 287, 1366, 7587]",1.0,3406,ml_signal,412,"Use of method chaining with round, common in data processing",,3395,"    """"""test TA.STOCH""""""","[220, 220, 220, 37227, 9288, 21664, 13, 2257, 46, 3398, 37811]"
‚úÖ Best Practice: Using isinstance to check the type of 'fish',"[26486, 227, 6705, 19939, 25, 8554, 318, 39098, 284, 2198, 262, 2099, 286, 705, 11084, 6]",0.5,3428,best_practice,414,Using isinstance to check the type of 'fish',,3406,    st = TA.STOCH(ohlc).round(decimals=8),"[220, 220, 220, 336, 796, 21664, 13, 2257, 46, 3398, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",1.0,3441,sast_risk,416,Direct comparison of floating-point numbers can lead to precision issues,Low,3428,"    assert isinstance(st, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 301, 11, 2168, 13, 27996, 8]"
üß† ML Signal: Use of assert to validate expected outcomes in tests,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 284, 26571, 2938, 10906, 287, 5254]",1.0,3456,ml_signal,417,Use of assert to validate expected outcomes in tests,,3441,    assert 0 < st.values[-1] < 100,"[220, 220, 220, 6818, 657, 1279, 336, 13, 27160, 58, 12, 16, 60, 1279, 1802]"
üß† ML Signal: Usage of TA.ICHIMOKU with specific parameters could indicate a pattern in financial data analysis.,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 21664, 13, 20739, 3955, 11380, 52, 351, 2176, 10007, 714, 7603, 257, 3912, 287, 3176, 1366, 3781, 13]",1.0,3478,ml_signal,414,Usage of TA.ICHIMOKU with specific parameters could indicate a pattern in financial data analysis.,,3456,    st = TA.STOCH(ohlc).round(decimals=8),"[220, 220, 220, 336, 796, 21664, 13, 2257, 46, 3398, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
‚úÖ Best Practice: Using isinstance to check the type of an object ensures that the object behaves as expected.,"[26486, 227, 6705, 19939, 25, 8554, 318, 39098, 284, 2198, 262, 2099, 286, 281, 2134, 19047, 326, 262, 2134, 39341, 355, 2938, 13]",0.5,3491,best_practice,416,Using isinstance to check the type of an object ensures that the object behaves as expected.,,3478,"    assert isinstance(st, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 301, 11, 2168, 13, 27996, 8]"
‚úÖ Best Practice: Using isinstance to check the type of an object ensures that the object behaves as expected.,"[26486, 227, 6705, 19939, 25, 8554, 318, 39098, 284, 2198, 262, 2099, 286, 281, 2134, 19047, 326, 262, 2134, 39341, 355, 2938, 13]",0.5,3491,best_practice,418,Using isinstance to check the type of an object ensures that the object behaves as expected.,,3491,,[]
‚úÖ Best Practice: Using isinstance to check the type of an object ensures that the object behaves as expected.,"[26486, 227, 6705, 19939, 25, 8554, 318, 39098, 284, 2198, 262, 2099, 286, 281, 2134, 19047, 326, 262, 2134, 39341, 355, 2938, 13]",0.5,3498,best_practice,420,Using isinstance to check the type of an object ensures that the object behaves as expected.,,3491,def test_stochd():,"[4299, 1332, 62, 301, 5374, 67, 33529]"
‚úÖ Best Practice: Using isinstance to check the type of an object ensures that the object behaves as expected.,"[26486, 227, 6705, 19939, 25, 8554, 318, 39098, 284, 2198, 262, 2099, 286, 281, 2134, 19047, 326, 262, 2134, 39341, 355, 2938, 13]",0.5,3498,best_practice,422,Using isinstance to check the type of an object ensures that the object behaves as expected.,,3498,,[]
üß† ML Signal: Asserting specific values in the output could indicate expected patterns or thresholds in the data.,"[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 3815, 287, 262, 5072, 714, 7603, 2938, 7572, 393, 40885, 287, 262, 1366, 13]",0.5,3498,ml_signal,424,Asserting specific values in the output could indicate expected patterns or thresholds in the data.,,3498,,[]
üß† ML Signal: Asserting specific values in the output could indicate expected patterns or thresholds in the data.,"[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 3815, 287, 262, 5072, 714, 7603, 2938, 7572, 393, 40885, 287, 262, 1366, 13]",0.5,3513,ml_signal,426,Asserting specific values in the output could indicate expected patterns or thresholds in the data.,,3498,    assert 0 < st.values[-1] < 100,"[220, 220, 220, 6818, 657, 1279, 336, 13, 27160, 58, 12, 16, 60, 1279, 1802]"
üß† ML Signal: Asserting specific values in the output could indicate expected patterns or thresholds in the data.,"[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 3815, 287, 262, 5072, 714, 7603, 2938, 7572, 393, 40885, 287, 262, 1366, 13]",0.5,3513,ml_signal,428,Asserting specific values in the output could indicate expected patterns or thresholds in the data.,,3513,,[]
üß† ML Signal: Asserting specific values in the output could indicate expected patterns or thresholds in the data.,"[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 3815, 287, 262, 5072, 714, 7603, 2938, 7572, 393, 40885, 287, 262, 1366, 13]",0.5,3525,ml_signal,430,Asserting specific values in the output could indicate expected patterns or thresholds in the data.,,3513,"    """"""test TA.STOCRSI""""""","[220, 220, 220, 37227, 9288, 21664, 13, 2257, 4503, 6998, 40, 37811]"
"üß† ML Signal: Function definition for testing, useful for identifying test patterns","[8582, 100, 254, 10373, 26484, 25, 15553, 6770, 329, 4856, 11, 4465, 329, 13720, 1332, 7572]",0.5,3548,ml_signal,423,"Function definition for testing, useful for identifying test patterns",,3525,    st = TA.STOCHD(ohlc).round(decimals=8),"[220, 220, 220, 336, 796, 21664, 13, 2257, 46, 3398, 35, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
"üß† ML Signal: Instantiation of TA.APZ with rounding, useful for understanding usage patterns","[8582, 100, 254, 10373, 26484, 25, 24470, 3920, 286, 21664, 13, 2969, 57, 351, 38185, 11, 4465, 329, 4547, 8748, 7572]",0.5,3563,ml_signal,426,"Instantiation of TA.APZ with rounding, useful for understanding usage patterns",,3548,    assert 0 < st.values[-1] < 100,"[220, 220, 220, 6818, 657, 1279, 336, 13, 27160, 58, 12, 16, 60, 1279, 1802]"
‚ö†Ô∏è SAST Risk (Low): Lack of error handling for potential exceptions in isinstance checks,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 38289, 286, 4049, 9041, 329, 2785, 13269, 287, 318, 39098, 8794]",0.5,3563,sast_risk,428,Lack of error handling for potential exceptions in isinstance checks,Low,3563,,[]
‚ö†Ô∏è SAST Risk (Low): Lack of error handling for potential exceptions in isinstance checks,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 38289, 286, 4049, 9041, 329, 2785, 13269, 287, 318, 39098, 8794]",0.5,3575,sast_risk,430,Lack of error handling for potential exceptions in isinstance checks,Low,3563,"    """"""test TA.STOCRSI""""""","[220, 220, 220, 37227, 9288, 21664, 13, 2257, 4503, 6998, 40, 37811]"
‚ö†Ô∏è SAST Risk (Low): Lack of error handling for potential exceptions in equality check,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 38289, 286, 4049, 9041, 329, 2785, 13269, 287, 10537, 2198]",0.5,3599,sast_risk,432,Lack of error handling for potential exceptions in equality check,Low,3575,    st = TA.STOCHRSI(ohlc).round(decimals=8),"[220, 220, 220, 336, 796, 21664, 13, 2257, 46, 3398, 6998, 40, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
üß† ML Signal: Function name follows a common test naming pattern,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 1332, 19264, 3912]",0.5,3599,ml_signal,431,Function name follows a common test naming pattern,,3599,,[]
üß† ML Signal: Use of assert to validate the type of the result,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 284, 26571, 262, 2099, 286, 262, 1255]",0.5,3599,ml_signal,433,Use of assert to validate the type of the result,,3599,,[]
‚úÖ Best Practice: Check if the result is an instance of the expected type,"[26486, 227, 6705, 19939, 25, 6822, 611, 262, 1255, 318, 281, 4554, 286, 262, 2938, 2099]",0.5,3612,best_practice,434,Check if the result is an instance of the expected type,,3599,"    assert isinstance(st, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 301, 11, 2168, 13, 27996, 8]"
üß† ML Signal: Use of assert to validate the behavior of the result,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 284, 26571, 262, 4069, 286, 262, 1255]",0.5,3612,ml_signal,436,Use of assert to validate the behavior of the result,,3612,,[]
‚úÖ Best Practice: Ensure the last value in the series is as expected,"[26486, 227, 6705, 19939, 25, 48987, 262, 938, 1988, 287, 262, 2168, 318, 355, 2938]",0.5,3612,best_practice,437,Ensure the last value in the series is as expected,,3612,,[]
"üß† ML Signal: Testing function for VPT calculation, useful for learning test patterns","[8582, 100, 254, 10373, 26484, 25, 23983, 2163, 329, 569, 11571, 17952, 11, 4465, 329, 4673, 1332, 7572]",0.5,3612,ml_signal,436,"Testing function for VPT calculation, useful for learning test patterns",,3612,,[]
‚ö†Ô∏è SAST Risk (Low): Ensure 'ohlc' is validated to prevent unexpected data issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 705, 1219, 44601, 6, 318, 31031, 284, 2948, 10059, 1366, 2428]",1.0,3619,sast_risk,438,Ensure 'ohlc' is validated to prevent unexpected data issues,Low,3612,def test_williams():,"[4299, 1332, 62, 10594, 1789, 82, 33529]"
‚úÖ Best Practice: Use of round() for consistent decimal precision,"[26486, 227, 6705, 19939, 25, 5765, 286, 2835, 3419, 329, 6414, 32465, 15440]",0.5,3631,best_practice,439,Use of round() for consistent decimal precision,,3619,"    """"""test TA.WILLIAMS""""""","[220, 220, 220, 37227, 9288, 21664, 13, 54, 8267, 40, 40834, 37811]"
‚ö†Ô∏è SAST Risk (Low): Ensure 'series.Series' is the correct type and imported,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 705, 25076, 13, 27996, 6, 318, 262, 3376, 2099, 290, 17392]",0.5,3654,sast_risk,441,Ensure 'series.Series' is the correct type and imported,Low,3631,    w = TA.WILLIAMS(ohlc).round(decimals=8),"[220, 220, 220, 266, 796, 21664, 13, 54, 8267, 40, 40834, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can be unreliable,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 307, 29954]",0.5,3667,sast_risk,443,Direct comparison of floating-point numbers can be unreliable,Low,3654,"    assert isinstance(w, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 86, 11, 2168, 13, 27996, 8]"
üß† ML Signal: Function name follows a common test naming pattern,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 1332, 19264, 3912]",1.0,3690,ml_signal,441,Function name follows a common test naming pattern,,3667,    w = TA.WILLIAMS(ohlc).round(decimals=8),"[220, 220, 220, 266, 796, 21664, 13, 54, 8267, 40, 40834, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
‚ö†Ô∏è SAST Risk (Low): Ensure 'ohlc' is validated to prevent unexpected data issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 705, 1219, 44601, 6, 318, 31031, 284, 2948, 10059, 1366, 2428]",0.5,3703,sast_risk,443,Ensure 'ohlc' is validated to prevent unexpected data issues,Low,3690,"    assert isinstance(w, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 86, 11, 2168, 13, 27996, 8]"
üß† ML Signal: Use of TA.FVE indicates a pattern of using technical analysis functions,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 21664, 13, 37, 6089, 9217, 257, 3912, 286, 1262, 6276, 3781, 5499]",1.0,3719,ml_signal,444,Use of TA.FVE indicates a pattern of using technical analysis functions,,3703,    assert -100 < w.values[-1] < 0,"[220, 220, 220, 6818, 532, 3064, 1279, 266, 13, 27160, 58, 12, 16, 60, 1279, 657]"
‚úÖ Best Practice: Asserting the type ensures the function returns the expected data structure,"[26486, 227, 6705, 19939, 25, 2195, 861, 278, 262, 2099, 19047, 262, 2163, 5860, 262, 2938, 1366, 4645]",1.0,3719,best_practice,446,Asserting the type ensures the function returns the expected data structure,,3719,,[]
‚úÖ Best Practice: Asserting value range helps ensure the function's output is within expected bounds,"[26486, 227, 6705, 19939, 25, 2195, 861, 278, 1988, 2837, 5419, 4155, 262, 2163, 338, 5072, 318, 1626, 2938, 22303]",0.5,3729,best_practice,448,Asserting value range helps ensure the function's output is within expected bounds,,3719,"    """"""test TA.UO""""""","[220, 220, 220, 37227, 9288, 21664, 13, 52, 46, 37811]"
üß† ML Signal: Function name follows a common test naming pattern,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 1332, 19264, 3912]",1.0,3729,ml_signal,446,Function name follows a common test naming pattern,,3729,,[]
‚ö†Ô∏è SAST Risk (Low): Ensure 'ohlc' is validated before use to prevent potential data issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 705, 1219, 44601, 6, 318, 31031, 878, 779, 284, 2948, 2785, 1366, 2428]",1.0,3739,sast_risk,448,Ensure 'ohlc' is validated before use to prevent potential data issues,Low,3729,"    """"""test TA.UO""""""","[220, 220, 220, 37227, 9288, 21664, 13, 52, 46, 37811]"
‚úÖ Best Practice: Use of method chaining for concise code,"[26486, 227, 6705, 19939, 25, 5765, 286, 2446, 442, 1397, 329, 35327, 2438]",0.5,3739,best_practice,449,Use of method chaining for concise code,,3739,,[]
‚ö†Ô∏è SAST Risk (Low): Ensure 'series.Series' is the correct type to prevent assertion errors,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 705, 25076, 13, 27996, 6, 318, 262, 3376, 2099, 284, 2948, 19190, 8563]",1.0,3739,sast_risk,451,Ensure 'series.Series' is the correct type to prevent assertion errors,Low,3739,,[]
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",1.0,3755,sast_risk,453,Direct comparison of floating-point numbers can lead to precision issues,Low,3739,    assert 0 < uo.values[-1] < 100,"[220, 220, 220, 6818, 657, 1279, 334, 78, 13, 27160, 58, 12, 16, 60, 1279, 1802]"
üß† ML Signal: Use of TA.PIVOT function indicates a pattern of financial data analysis.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 21664, 13, 47, 3824, 2394, 2163, 9217, 257, 3912, 286, 3176, 1366, 3781, 13]",0.5,3755,ml_signal,451,Use of TA.PIVOT function indicates a pattern of financial data analysis.,,3755,,[]
"üß† ML Signal: Checking type of pivot[""pivot""] suggests a pattern of ensuring data structure integrity.","[8582, 100, 254, 10373, 26484, 25, 39432, 2099, 286, 30355, 14692, 79, 45785, 8973, 5644, 257, 3912, 286, 13359, 1366, 4645, 11540, 13]",0.5,3771,ml_signal,453,"Checking type of pivot[""pivot""] suggests a pattern of ensuring data structure integrity.",,3755,    assert 0 < uo.values[-1] < 100,"[220, 220, 220, 6818, 657, 1279, 334, 78, 13, 27160, 58, 12, 16, 60, 1279, 1802]"
"üß† ML Signal: Checking type of pivot[""s1""] suggests a pattern of ensuring data structure integrity.","[8582, 100, 254, 10373, 26484, 25, 39432, 2099, 286, 30355, 14692, 82, 16, 8973, 5644, 257, 3912, 286, 13359, 1366, 4645, 11540, 13]",0.5,3771,ml_signal,455,"Checking type of pivot[""s1""] suggests a pattern of ensuring data structure integrity.",,3771,,[]
"üß† ML Signal: Checking type of pivot[""s2""] suggests a pattern of ensuring data structure integrity.","[8582, 100, 254, 10373, 26484, 25, 39432, 2099, 286, 30355, 14692, 82, 17, 8973, 5644, 257, 3912, 286, 13359, 1366, 4645, 11540, 13]",0.5,3781,ml_signal,457,"Checking type of pivot[""s2""] suggests a pattern of ensuring data structure integrity.",,3771,"    """"""test TA.AO""""""","[220, 220, 220, 37227, 9288, 21664, 13, 32, 46, 37811]"
"üß† ML Signal: Checking type of pivot[""s3""] suggests a pattern of ensuring data structure integrity.","[8582, 100, 254, 10373, 26484, 25, 39432, 2099, 286, 30355, 14692, 82, 18, 8973, 5644, 257, 3912, 286, 13359, 1366, 4645, 11540, 13]",0.5,3803,ml_signal,459,"Checking type of pivot[""s3""] suggests a pattern of ensuring data structure integrity.",,3781,    ao = TA.AO(ohlc).round(decimals=8),"[220, 220, 220, 257, 78, 796, 21664, 13, 32, 46, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
"üß† ML Signal: Checking type of pivot[""r1""] suggests a pattern of ensuring data structure integrity.","[8582, 100, 254, 10373, 26484, 25, 39432, 2099, 286, 30355, 14692, 81, 16, 8973, 5644, 257, 3912, 286, 13359, 1366, 4645, 11540, 13]",0.5,3816,ml_signal,461,"Checking type of pivot[""r1""] suggests a pattern of ensuring data structure integrity.",,3803,"    assert isinstance(ao, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 5488, 11, 2168, 13, 27996, 8]"
"üß† ML Signal: Checking type of pivot[""r2""] suggests a pattern of ensuring data structure integrity.","[8582, 100, 254, 10373, 26484, 25, 39432, 2099, 286, 30355, 14692, 81, 17, 8973, 5644, 257, 3912, 286, 13359, 1366, 4645, 11540, 13]",0.5,3816,ml_signal,463,"Checking type of pivot[""r2""] suggests a pattern of ensuring data structure integrity.",,3816,,[]
"üß† ML Signal: Checking type of pivot[""r3""] suggests a pattern of ensuring data structure integrity.","[8582, 100, 254, 10373, 26484, 25, 39432, 2099, 286, 30355, 14692, 81, 18, 8973, 5644, 257, 3912, 286, 13359, 1366, 4645, 11540, 13]",0.5,3821,ml_signal,465,"Checking type of pivot[""r3""] suggests a pattern of ensuring data structure integrity.",,3816,def test_mi():,"[4299, 1332, 62, 11632, 33529]"
"üß† ML Signal: Asserting specific value of pivot[""pivot""] indicates a pattern of expected output validation.","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 1988, 286, 30355, 14692, 79, 45785, 8973, 9217, 257, 3912, 286, 2938, 5072, 21201, 13]",0.5,3821,ml_signal,467,"Asserting specific value of pivot[""pivot""] indicates a pattern of expected output validation.",,3821,,[]
"üß† ML Signal: Asserting specific value of pivot[""s1""] indicates a pattern of expected output validation.","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 1988, 286, 30355, 14692, 82, 16, 8973, 9217, 257, 3912, 286, 2938, 5072, 21201, 13]",0.5,3821,ml_signal,469,"Asserting specific value of pivot[""s1""] indicates a pattern of expected output validation.",,3821,,[]
"üß† ML Signal: Asserting specific value of pivot[""s2""] indicates a pattern of expected output validation.","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 1988, 286, 30355, 14692, 82, 17, 8973, 9217, 257, 3912, 286, 2938, 5072, 21201, 13]",0.5,3838,ml_signal,471,"Asserting specific value of pivot[""s2""] indicates a pattern of expected output validation.",,3821,    assert mi.values[-1] == 23.92808696,"[220, 220, 220, 6818, 21504, 13, 27160, 58, 12, 16, 60, 6624, 2242, 13, 5892, 28362, 38205]"
"üß† ML Signal: Asserting specific value of pivot[""s3""] indicates a pattern of expected output validation.","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 1988, 286, 30355, 14692, 82, 18, 8973, 9217, 257, 3912, 286, 2938, 5072, 21201, 13]",0.5,3838,ml_signal,473,"Asserting specific value of pivot[""s3""] indicates a pattern of expected output validation.",,3838,,[]
"üß† ML Signal: Asserting specific value of pivot[""s4""] indicates a pattern of expected output validation.","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 1988, 286, 30355, 14692, 82, 19, 8973, 9217, 257, 3912, 286, 2938, 5072, 21201, 13]",0.5,3848,ml_signal,475,"Asserting specific value of pivot[""s4""] indicates a pattern of expected output validation.",,3838,"    """"""test TA.BOP""""""","[220, 220, 220, 37227, 9288, 21664, 13, 33, 3185, 37811]"
"üß† ML Signal: Asserting specific value of pivot[""r1""] indicates a pattern of expected output validation.","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 1988, 286, 30355, 14692, 81, 16, 8973, 9217, 257, 3912, 286, 2938, 5072, 21201, 13]",0.5,3870,ml_signal,477,"Asserting specific value of pivot[""r1""] indicates a pattern of expected output validation.",,3848,    bop = TA.BOP(ohlc).round(decimals=8),"[220, 220, 220, 275, 404, 796, 21664, 13, 33, 3185, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
"üß† ML Signal: Asserting specific value of pivot[""r2""] indicates a pattern of expected output validation.","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 1988, 286, 30355, 14692, 81, 17, 8973, 9217, 257, 3912, 286, 2938, 5072, 21201, 13]",0.5,3884,ml_signal,479,"Asserting specific value of pivot[""r2""] indicates a pattern of expected output validation.",,3870,"    assert isinstance(bop, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 65, 404, 11, 2168, 13, 27996, 8]"
"üß† ML Signal: Asserting specific value of pivot[""r3""] indicates a pattern of expected output validation.","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 1988, 286, 30355, 14692, 81, 18, 8973, 9217, 257, 3912, 286, 2938, 5072, 21201, 13]",0.5,3884,ml_signal,481,"Asserting specific value of pivot[""r3""] indicates a pattern of expected output validation.",,3884,,[]
"üß† ML Signal: Asserting specific value of pivot[""r4""] indicates a pattern of expected output validation.","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 1988, 286, 30355, 14692, 81, 19, 8973, 9217, 257, 3912, 286, 2938, 5072, 21201, 13]",0.5,3890,ml_signal,483,"Asserting specific value of pivot[""r4""] indicates a pattern of expected output validation.",,3884,def test_vortex():,"[4299, 1332, 62, 85, 26158, 33529]"
"üß† ML Signal: Testing function for TA.PIVOT_FIB, useful for learning test patterns","[8582, 100, 254, 10373, 26484, 25, 23983, 2163, 329, 21664, 13, 47, 3824, 2394, 62, 37, 9865, 11, 4465, 329, 4673, 1332, 7572]",1.0,3903,ml_signal,470,"Testing function for TA.PIVOT_FIB, useful for learning test patterns",,3890,"    assert isinstance(mi, series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 11632, 11, 2168, 13, 27996, 8]"
"‚úÖ Best Practice: Using isinstance to check the type of pivot[""pivot""]","[26486, 227, 6705, 19939, 25, 8554, 318, 39098, 284, 2198, 262, 2099, 286, 30355, 14692, 79, 45785, 8973]",0.5,3903,best_practice,472,"Using isinstance to check the type of pivot[""pivot""]",,3903,,[]
"‚úÖ Best Practice: Using isinstance to check the type of pivot[""s1""]","[26486, 227, 6705, 19939, 25, 8554, 318, 39098, 284, 2198, 262, 2099, 286, 30355, 14692, 82, 16, 8973]",0.5,3909,best_practice,474,"Using isinstance to check the type of pivot[""s1""]",,3903,def test_bop():,"[4299, 1332, 62, 65, 404, 33529]"
"‚úÖ Best Practice: Using isinstance to check the type of pivot[""s2""]","[26486, 227, 6705, 19939, 25, 8554, 318, 39098, 284, 2198, 262, 2099, 286, 30355, 14692, 82, 17, 8973]",0.5,3909,best_practice,476,"Using isinstance to check the type of pivot[""s2""]",,3909,,[]
"‚úÖ Best Practice: Using isinstance to check the type of pivot[""s3""]","[26486, 227, 6705, 19939, 25, 8554, 318, 39098, 284, 2198, 262, 2099, 286, 30355, 14692, 82, 18, 8973]",0.5,3909,best_practice,478,"Using isinstance to check the type of pivot[""s3""]",,3909,,[]
"‚úÖ Best Practice: Using isinstance to check the type of pivot[""r1""]","[26486, 227, 6705, 19939, 25, 8554, 318, 39098, 284, 2198, 262, 2099, 286, 30355, 14692, 81, 16, 8973]",0.5,3927,best_practice,480,"Using isinstance to check the type of pivot[""r1""]",,3909,    assert bop.values[-1] == 0.03045138,"[220, 220, 220, 6818, 275, 404, 13, 27160, 58, 12, 16, 60, 6624, 657, 13, 39101, 2231, 20107]"
"‚úÖ Best Practice: Using isinstance to check the type of pivot[""r2""]","[26486, 227, 6705, 19939, 25, 8554, 318, 39098, 284, 2198, 262, 2099, 286, 30355, 14692, 81, 17, 8973]",0.5,3927,best_practice,482,"Using isinstance to check the type of pivot[""r2""]",,3927,,[]
"‚úÖ Best Practice: Using isinstance to check the type of pivot[""r3""]","[26486, 227, 6705, 19939, 25, 8554, 318, 39098, 284, 2198, 262, 2099, 286, 30355, 14692, 81, 18, 8973]",0.5,3938,best_practice,484,"Using isinstance to check the type of pivot[""r3""]",,3927,"    """"""test TA.VORTEX""""""","[220, 220, 220, 37227, 9288, 21664, 13, 53, 9863, 6369, 37811]"
"üß† ML Signal: Asserting specific values, useful for learning expected output patterns","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 3815, 11, 4465, 329, 4673, 2938, 5072, 7572]",1.0,3960,ml_signal,486,"Asserting specific values, useful for learning expected output patterns",,3938,    v = TA.VORTEX(ohlc).round(decimals=8),"[220, 220, 220, 410, 796, 21664, 13, 53, 9863, 6369, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
"üß† ML Signal: Asserting specific values, useful for learning expected output patterns","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 3815, 11, 4465, 329, 4673, 2938, 5072, 7572]",1.0,3976,ml_signal,488,"Asserting specific values, useful for learning expected output patterns",,3960,"    assert isinstance(v[""VIp""], series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 85, 14692, 12861, 79, 33116, 2168, 13, 27996, 8]"
"üß† ML Signal: Asserting specific values, useful for learning expected output patterns","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 3815, 11, 4465, 329, 4673, 2938, 5072, 7572]",1.0,3976,ml_signal,490,"Asserting specific values, useful for learning expected output patterns",,3976,,[]
"üß† ML Signal: Asserting specific values, useful for learning expected output patterns","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 3815, 11, 4465, 329, 4673, 2938, 5072, 7572]",1.0,3997,ml_signal,492,"Asserting specific values, useful for learning expected output patterns",,3976,"    assert v[""VIm""].values[-1] == 1.27305188","[220, 220, 220, 6818, 410, 14692, 53, 3546, 1, 4083, 27160, 58, 12, 16, 60, 6624, 352, 13, 1983, 22515, 20356]"
"üß† ML Signal: Asserting specific values, useful for learning expected output patterns","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 3815, 11, 4465, 329, 4673, 2938, 5072, 7572]",1.0,3997,ml_signal,494,"Asserting specific values, useful for learning expected output patterns",,3997,,[]
"üß† ML Signal: Asserting specific values, useful for learning expected output patterns","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 3815, 11, 4465, 329, 4673, 2938, 5072, 7572]",1.0,4007,ml_signal,496,"Asserting specific values, useful for learning expected output patterns",,3997,"    """"""test TA.KST""""""","[220, 220, 220, 37227, 9288, 21664, 13, 42, 2257, 37811]"
"üß† ML Signal: Asserting specific values, useful for learning expected output patterns","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 3815, 11, 4465, 329, 4673, 2938, 5072, 7572]",1.0,4029,ml_signal,498,"Asserting specific values, useful for learning expected output patterns",,4007,    kst = TA.KST(ohlc).round(decimals=8),"[220, 220, 220, 479, 301, 796, 21664, 13, 42, 2257, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
"üß† ML Signal: Asserting specific values, useful for learning expected output patterns","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 3815, 11, 4465, 329, 4673, 2938, 5072, 7572]",1.0,4046,ml_signal,500,"Asserting specific values, useful for learning expected output patterns",,4029,"    assert isinstance(kst[""KST""], series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 74, 301, 14692, 42, 2257, 33116, 2168, 13, 27996, 8]"
"üß† ML Signal: Asserting specific values, useful for learning expected output patterns","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 3815, 11, 4465, 329, 4673, 2938, 5072, 7572]",1.0,4046,ml_signal,502,"Asserting specific values, useful for learning expected output patterns",,4046,,[]
üß† ML Signal: Use of a method from a specific library (TA) indicates a pattern of financial data analysis.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 2446, 422, 257, 2176, 5888, 357, 5603, 8, 9217, 257, 3912, 286, 3176, 1366, 3781, 13]",0.5,4062,ml_signal,489,Use of a method from a specific library (TA) indicates a pattern of financial data analysis.,,4046,"    assert isinstance(v[""VIm""], series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 85, 14692, 53, 3546, 33116, 2168, 13, 27996, 8]"
‚ö†Ô∏è SAST Risk (Low): Potential risk if 'ohlc' is not validated or sanitized before use.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 705, 1219, 44601, 6, 318, 407, 31031, 393, 5336, 36951, 878, 779, 13]",1.0,4083,sast_risk,491,Potential risk if 'ohlc' is not validated or sanitized before use.,Low,4062,"    assert v[""VIp""].values[-1] == 0.76856105","[220, 220, 220, 6818, 410, 14692, 12861, 79, 1, 4083, 27160, 58, 12, 16, 60, 6624, 657, 13, 30610, 3980, 13348]"
üß† ML Signal: Use of 'round' method indicates a pattern of precision control in numerical computations.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 705, 744, 6, 2446, 9217, 257, 3912, 286, 15440, 1630, 287, 29052, 2653, 602, 13]",0.5,4104,ml_signal,492,Use of 'round' method indicates a pattern of precision control in numerical computations.,,4083,"    assert v[""VIm""].values[-1] == 1.27305188","[220, 220, 220, 6818, 410, 14692, 53, 3546, 1, 4083, 27160, 58, 12, 16, 60, 6624, 352, 13, 1983, 22515, 20356]"
"‚ö†Ô∏è SAST Risk (Low): Assumes 'msd' is always a 'series.Series', which might not be the case if input changes.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 907, 67, 6, 318, 1464, 257, 705, 25076, 13, 27996, 3256, 543, 1244, 407, 307, 262, 1339, 611, 5128, 2458, 13]",0.5,4104,sast_risk,494,"Assumes 'msd' is always a 'series.Series', which might not be the case if input changes.",Low,4104,,[]
üß† ML Signal: Use of 'assert' indicates a pattern of test-driven development or validation.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 705, 30493, 6, 9217, 257, 3912, 286, 1332, 12, 15808, 2478, 393, 21201, 13]",0.5,4110,ml_signal,495,Use of 'assert' indicates a pattern of test-driven development or validation.,,4104,def test_kst():,"[4299, 1332, 62, 74, 301, 33529]"
‚ö†Ô∏è SAST Risk (Low): Hardcoded value in test can lead to false positives/negatives if data changes.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 1988, 287, 1332, 460, 1085, 284, 3991, 38548, 14, 12480, 2929, 611, 1366, 2458, 13]",1.0,4110,sast_risk,497,Hardcoded value in test can lead to false positives/negatives if data changes.,Low,4110,,[]
‚úÖ Best Practice: Consider using a tolerance range for floating-point comparison.,"[26486, 227, 6705, 19939, 25, 12642, 1262, 257, 15621, 2837, 329, 12462, 12, 4122, 7208, 13]",0.5,4132,best_practice,498,Consider using a tolerance range for floating-point comparison.,,4110,    kst = TA.KST(ohlc).round(decimals=8),"[220, 220, 220, 479, 301, 796, 21664, 13, 42, 2257, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
üß† ML Signal: Function definition with a specific naming pattern indicating a test function,"[8582, 100, 254, 10373, 26484, 25, 15553, 6770, 351, 257, 2176, 19264, 3912, 12739, 257, 1332, 2163]",0.5,4132,ml_signal,494,Function definition with a specific naming pattern indicating a test function,,4132,,[]
"‚ö†Ô∏è SAST Risk (Low): Assumes TA.STC and ohlc are defined and valid, potential for NameError","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 21664, 13, 2257, 34, 290, 11752, 44601, 389, 5447, 290, 4938, 11, 2785, 329, 6530, 12331]",0.5,4142,sast_risk,496,"Assumes TA.STC and ohlc are defined and valid, potential for NameError",Low,4132,"    """"""test TA.KST""""""","[220, 220, 220, 37227, 9288, 21664, 13, 42, 2257, 37811]"
‚úÖ Best Practice: Chaining method calls for concise code,"[26486, 227, 6705, 19939, 25, 609, 1397, 2446, 3848, 329, 35327, 2438]",0.5,4142,best_practice,497,Chaining method calls for concise code,,4142,,[]
"‚ö†Ô∏è SAST Risk (Low): Assumes series.Series is the correct type, potential for AssertionError","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 2168, 13, 27996, 318, 262, 3376, 2099, 11, 2785, 329, 2195, 861, 295, 12331]",0.5,4142,sast_risk,499,"Assumes series.Series is the correct type, potential for AssertionError",Low,4142,,[]
‚úÖ Best Practice: Use of isinstance for type checking,"[26486, 227, 6705, 19939, 25, 5765, 286, 318, 39098, 329, 2099, 10627]",1.0,4159,best_practice,500,Use of isinstance for type checking,,4142,"    assert isinstance(kst[""KST""], series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 74, 301, 14692, 42, 2257, 33116, 2168, 13, 27996, 8]"
"‚ö†Ô∏è SAST Risk (Low): Assumes stc.values is a valid sequence, potential for IndexError","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 336, 66, 13, 27160, 318, 257, 4938, 8379, 11, 2785, 329, 12901, 12331]",0.5,4159,sast_risk,502,"Assumes stc.values is a valid sequence, potential for IndexError",Low,4159,,[]
‚úÖ Best Practice: Asserting value range for expected output,"[26486, 227, 6705, 19939, 25, 2195, 861, 278, 1988, 2837, 329, 2938, 5072]",1.0,4182,best_practice,503,Asserting value range for expected output,,4159,"    assert kst[""KST""].values[-1] == -157.42229442","[220, 220, 220, 6818, 479, 301, 14692, 42, 2257, 1, 4083, 27160, 58, 12, 16, 60, 6624, 532, 18458, 13, 44361, 1959, 39506]"
"üß† ML Signal: Testing function for TA.EVSTC, useful for learning test patterns","[8582, 100, 254, 10373, 26484, 25, 23983, 2163, 329, 21664, 13, 20114, 2257, 34, 11, 4465, 329, 4673, 1332, 7572]",1.0,4182,ml_signal,499,"Testing function for TA.EVSTC, useful for learning test patterns",,4182,,[]
"‚ö†Ô∏è SAST Risk (Low): Assumes ohlc is defined and valid, potential for NameError","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 11752, 44601, 318, 5447, 290, 4938, 11, 2785, 329, 6530, 12331]",1.0,4199,sast_risk,501,"Assumes ohlc is defined and valid, potential for NameError",Low,4182,"    assert isinstance(kst[""signal""], series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 74, 301, 14692, 12683, 282, 33116, 2168, 13, 27996, 8]"
‚úÖ Best Practice: Use of round() for consistent decimal precision,"[26486, 227, 6705, 19939, 25, 5765, 286, 2835, 3419, 329, 6414, 32465, 15440]",1.0,4199,best_practice,502,Use of round() for consistent decimal precision,,4199,,[]
"‚ö†Ô∏è SAST Risk (Low): Assumes series is imported and valid, potential for NameError","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 2168, 318, 17392, 290, 4938, 11, 2785, 329, 6530, 12331]",1.0,4223,sast_risk,504,"Assumes series is imported and valid, potential for NameError",Low,4199,"    assert kst[""signal""].values[-1] == -132.10367593","[220, 220, 220, 6818, 479, 301, 14692, 12683, 282, 1, 4083, 27160, 58, 12, 16, 60, 6624, 532, 19924, 13, 940, 2623, 2425, 6052]"
‚úÖ Best Practice: Use of isinstance() to ensure correct type,"[26486, 227, 6705, 19939, 25, 5765, 286, 318, 39098, 3419, 284, 4155, 3376, 2099]",1.0,4223,best_practice,505,Use of isinstance() to ensure correct type,,4223,,[]
‚úÖ Best Practice: Boundary check to ensure values are within expected range,"[26486, 227, 6705, 19939, 25, 30149, 560, 2198, 284, 4155, 3815, 389, 1626, 2938, 2837]",1.0,4229,best_practice,507,Boundary check to ensure values are within expected range,,4223,def test_tsi():,"[4299, 1332, 62, 912, 72, 33529]"
üß† ML Signal: Function definition with a specific naming pattern indicating a test function,"[8582, 100, 254, 10373, 26484, 25, 15553, 6770, 351, 257, 2176, 19264, 3912, 12739, 257, 1332, 2163]",0.5,4229,ml_signal,502,Function definition with a specific naming pattern indicating a test function,,4229,,[]
üß† ML Signal: Calling a method from a module with a specific pattern,"[8582, 100, 254, 10373, 26484, 25, 32677, 257, 2446, 422, 257, 8265, 351, 257, 2176, 3912]",0.5,4229,ml_signal,505,Calling a method from a module with a specific pattern,,4229,,[]
‚ö†Ô∏è SAST Risk (Low): Lack of error handling for the function call,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 38289, 286, 4049, 9041, 329, 262, 2163, 869]",0.5,4235,sast_risk,507,Lack of error handling for the function call,Low,4229,def test_tsi():,"[4299, 1332, 62, 912, 72, 33529]"
üß† ML Signal: Type checking using isinstance,"[8582, 100, 254, 10373, 26484, 25, 5994, 10627, 1262, 318, 39098]",0.5,4245,ml_signal,508,Type checking using isinstance,,4235,"    """"""test TA.TSI""""""","[220, 220, 220, 37227, 9288, 21664, 13, 4694, 40, 37811]"
üß† ML Signal: Type checking using isinstance,"[8582, 100, 254, 10373, 26484, 25, 5994, 10627, 1262, 318, 39098]",0.5,4267,ml_signal,510,Type checking using isinstance,,4245,    tsi = TA.TSI(ohlc).round(decimals=8),"[220, 220, 220, 256, 13396, 796, 21664, 13, 4694, 40, 7, 1219, 44601, 737, 744, 7, 12501, 320, 874, 28, 23, 8]"
‚ö†Ô∏è SAST Risk (Low): Direct access to list elements without bounds checking,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 1895, 284, 1351, 4847, 1231, 22303, 10627]",0.5,4284,sast_risk,512,Direct access to list elements without bounds checking,Low,4267,"    assert isinstance(tsi[""TSI""], series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 912, 72, 14692, 4694, 40, 33116, 2168, 13, 27996, 8]"
‚ö†Ô∏è SAST Risk (Low): Direct access to list elements without bounds checking,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 1895, 284, 1351, 4847, 1231, 22303, 10627]",0.5,4284,sast_risk,514,Direct access to list elements without bounds checking,Low,4284,,[]
"üß† ML Signal: Function name follows a common test naming pattern, useful for identifying test functions.","[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 2219, 1332, 19264, 3912, 11, 4465, 329, 13720, 1332, 5499, 13]",0.5,4284,ml_signal,511,"Function name follows a common test naming pattern, useful for identifying test functions.",,4284,,[]
‚ö†Ô∏è SAST Risk (Low): Assumes 'TA.VC' and 'ohlc' are safe and correctly implemented.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 5603, 13, 15922, 6, 290, 705, 1219, 44601, 6, 389, 3338, 290, 9380, 9177, 13]",1.0,4301,sast_risk,513,Assumes 'TA.VC' and 'ohlc' are safe and correctly implemented.,Low,4284,"    assert isinstance(tsi[""signal""], series.Series)","[220, 220, 220, 6818, 318, 39098, 7, 912, 72, 14692, 12683, 282, 33116, 2168, 13, 27996, 8]"
‚úÖ Best Practice: Rounding to a fixed number of decimals improves consistency in floating-point operations.,"[26486, 227, 6705, 19939, 25, 371, 9969, 284, 257, 5969, 1271, 286, 875, 320, 874, 19575, 15794, 287, 12462, 12, 4122, 4560, 13]",0.5,4301,best_practice,514,Rounding to a fixed number of decimals improves consistency in floating-point operations.,,4301,,[]
‚ö†Ô∏è SAST Risk (Low): Assumes 'vc' contains the expected keys and types.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 28435, 6, 4909, 262, 2938, 8251, 290, 3858, 13]",0.5,4325,sast_risk,516,Assumes 'vc' contains the expected keys and types.,Low,4301,"    assert tsi[""signal""].values[-1] == -26.94173827","[220, 220, 220, 6818, 256, 13396, 14692, 12683, 282, 1, 4083, 27160, 58, 12, 16, 60, 6624, 532, 2075, 13, 5824, 1558, 2548, 1983]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428, 13]",0.5,4325,sast_risk,518,Direct comparison of floating-point numbers can lead to precision issues.,Low,4325,,[]
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428, 13]",0.5,4330,sast_risk,519,Direct comparison of floating-point numbers can lead to precision issues.,Low,4325,def test_tp():,"[4299, 1332, 62, 34788, 33529]"
‚úÖ Best Practice: Include a docstring to describe the purpose of the test function,"[26486, 227, 6705, 19939, 25, 40348, 257, 2205, 8841, 284, 6901, 262, 4007, 286, 262, 1332, 2163]",0.5,4353,best_practice,515,Include a docstring to describe the purpose of the test function,,4330,"    assert tsi[""TSI""].values[-1] == -32.12837201","[220, 220, 220, 6818, 256, 13396, 14692, 4694, 40, 1, 4083, 27160, 58, 12, 16, 60, 6624, 532, 2624, 13, 12762, 2718, 1264]"
üß† ML Signal: Usage of a specific TA function with parameters,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2176, 21664, 2163, 351, 10007]",1.0,4353,ml_signal,518,Usage of a specific TA function with parameters,,4353,,[]
‚ö†Ô∏è SAST Risk (Low): Ensure 'ohlc' is validated and sanitized before use,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 705, 1219, 44601, 6, 318, 31031, 290, 5336, 36951, 878, 779]",0.5,4358,sast_risk,519,Ensure 'ohlc' is validated and sanitized before use,Low,4353,def test_tp():,"[4299, 1332, 62, 34788, 33529]"
‚úÖ Best Practice: Use of assert to validate the type of the result,"[26486, 227, 6705, 19939, 25, 5765, 286, 6818, 284, 26571, 262, 2099, 286, 262, 1255]",1.0,4363,best_practice,519,Use of assert to validate the type of the result,,4358,def test_tp():,"[4299, 1332, 62, 34788, 33529]"
‚ö†Ô∏è SAST Risk (Low): Direct comparison of floating-point numbers can lead to precision issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 7208, 286, 12462, 12, 4122, 3146, 460, 1085, 284, 15440, 2428]",0.5,4368,sast_risk,519,Direct comparison of floating-point numbers can lead to precision issues,Low,4363,def test_tp():,"[4299, 1332, 62, 34788, 33529]"
