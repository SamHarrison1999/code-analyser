[
  {
    "line": 11,
    "text": "from qlib.utils import init_instance_by_config",
    "annotation": "\u2705 Best Practice: Group related imports together and separate them with a blank line for better readability.",
    "confidence": 0.5,
    "tokens": [
      6738,
      10662,
      8019,
      13,
      26791,
      1330,
      2315,
      62,
      39098,
      62,
      1525,
      62,
      11250
    ],
    "start_token": 0,
    "end_token": 13,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      3519,
      17944,
      1978,
      290,
      4553,
      606,
      351,
      257,
      9178,
      1627,
      329,
      1365,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Group related imports together and separate them with a blank line for better readability."
  },
  {
    "line": 13,
    "text": "from qlib.data.ops import Operators",
    "annotation": "\ud83e\udde0 ML Signal: Use of specific custom operations for data processing",
    "confidence": 1.0,
    "tokens": [
      6738,
      10662,
      8019,
      13,
      7890,
      13,
      2840,
      1330,
      6564,
      2024
    ],
    "start_token": 13,
    "end_token": 23,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2176,
      2183,
      4560,
      329,
      1366,
      7587
    ],
    "label": "ml_signal",
    "reason": "Use of specific custom operations for data processing"
  },
  {
    "line": 15,
    "text": "from qlib.tests.data import GetData",
    "annotation": "\ud83e\udde0 ML Signal: Use of a specific market for data handling",
    "confidence": 1.0,
    "tokens": [
      6738,
      10662,
      8019,
      13,
      41989,
      13,
      7890,
      1330,
      3497,
      6601
    ],
    "start_token": 23,
    "end_token": 33,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      2176,
      1910,
      329,
      1366,
      9041
    ],
    "label": "ml_signal",
    "reason": "Use of a specific market for data handling"
  },
  {
    "line": 17,
    "text": "from highfreq_ops import get_calendar_day, DayLast, FFillNan, BFillNan, Date, Select, IsNull, Cut",
    "annotation": "\ud83e\udde0 ML Signal: Specific start time for data processing",
    "confidence": 1.0,
    "tokens": [
      6738,
      1029,
      19503,
      80,
      62,
      2840,
      1330,
      651,
      62,
      9948,
      9239,
      62,
      820,
      11,
      3596,
      5956,
      11,
      18402,
      359,
      45,
      272,
      11,
      347,
      33762,
      45,
      272,
      11,
      7536,
      11,
      9683,
      11,
      1148,
      35067,
      11,
      9712
    ],
    "start_token": 33,
    "end_token": 68,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17377,
      923,
      640,
      329,
      1366,
      7587
    ],
    "label": "ml_signal",
    "reason": "Specific start time for data processing"
  },
  {
    "line": 19,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Specific end time for data processing",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 68,
    "end_token": 68,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17377,
      886,
      640,
      329,
      1366,
      7587
    ],
    "label": "ml_signal",
    "reason": "Specific end time for data processing"
  },
  {
    "line": 19,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Specific train end time for data segmentation",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 68,
    "end_token": 68,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17377,
      4512,
      886,
      640,
      329,
      1366,
      10618,
      341
    ],
    "label": "ml_signal",
    "reason": "Specific train end time for data segmentation"
  },
  {
    "line": 19,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Specific test start time for data segmentation",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 68,
    "end_token": 68,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17377,
      1332,
      923,
      640,
      329,
      1366,
      10618,
      341
    ],
    "label": "ml_signal",
    "reason": "Specific test start time for data segmentation"
  },
  {
    "line": 27,
    "text": "    train_end_time = \"2020-11-30 16:00:00\"",
    "annotation": "\u2705 Best Practice: Use of a configuration dictionary for data handler settings",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      4512,
      62,
      437,
      62,
      2435,
      796,
      366,
      42334,
      12,
      1157,
      12,
      1270,
      1467,
      25,
      405,
      25,
      405,
      1
    ],
    "start_token": 68,
    "end_token": 89,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      257,
      8398,
      22155,
      329,
      1366,
      21360,
      6460
    ],
    "label": "best_practice",
    "reason": "Use of a configuration dictionary for data handler settings"
  },
  {
    "line": 32,
    "text": "        \"end_time\": end_time,",
    "annotation": "\ud83e\udde0 ML Signal: Use of a specific data processing class and module",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      437,
      62,
      2435,
      1298,
      886,
      62,
      2435,
      11
    ],
    "start_token": 89,
    "end_token": 105,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      2176,
      1366,
      7587,
      1398,
      290,
      8265
    ],
    "label": "ml_signal",
    "reason": "Use of a specific data processing class and module"
  },
  {
    "line": 32,
    "text": "        \"end_time\": end_time,",
    "annotation": "\u2705 Best Practice: Use of a configuration dictionary for data handler settings",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      437,
      62,
      2435,
      1298,
      886,
      62,
      2435,
      11
    ],
    "start_token": 105,
    "end_token": 121,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      257,
      8398,
      22155,
      329,
      1366,
      21360,
      6460
    ],
    "label": "best_practice",
    "reason": "Use of a configuration dictionary for data handler settings"
  },
  {
    "line": 32,
    "text": "        \"end_time\": end_time,",
    "annotation": "\u2705 Best Practice: Use of a task dictionary to organize dataset configurations",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      437,
      62,
      2435,
      1298,
      886,
      62,
      2435,
      11
    ],
    "start_token": 121,
    "end_token": 137,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      257,
      4876,
      22155,
      284,
      16481,
      27039,
      25412
    ],
    "label": "best_practice",
    "reason": "Use of a task dictionary to organize dataset configurations"
  },
  {
    "line": 32,
    "text": "        \"end_time\": end_time,",
    "annotation": "\ud83e\udde0 ML Signal: Use of a specific dataset class and module",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      437,
      62,
      2435,
      1298,
      886,
      62,
      2435,
      11
    ],
    "start_token": 137,
    "end_token": 153,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      2176,
      27039,
      1398,
      290,
      8265
    ],
    "label": "ml_signal",
    "reason": "Use of a specific dataset class and module"
  },
  {
    "line": 32,
    "text": "        \"end_time\": end_time,",
    "annotation": "\ud83e\udde0 ML Signal: Use of a specific handler class and module",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      437,
      62,
      2435,
      1298,
      886,
      62,
      2435,
      11
    ],
    "start_token": 153,
    "end_token": 169,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      2176,
      21360,
      1398,
      290,
      8265
    ],
    "label": "ml_signal",
    "reason": "Use of a specific handler class and module"
  },
  {
    "line": 70,
    "text": "                    \"kwargs\": DATA_HANDLER_CONFIG1,",
    "annotation": "\ud83e\udde0 ML Signal: Specific data segmentation for training and testing",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      46265,
      22046,
      1298,
      42865,
      62,
      39,
      6981,
      39878,
      62,
      10943,
      16254,
      16,
      11
    ],
    "start_token": 169,
    "end_token": 202,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17377,
      1366,
      10618,
      341,
      329,
      3047,
      290,
      4856
    ],
    "label": "ml_signal",
    "reason": "Specific data segmentation for training and testing"
  },
  {
    "line": 70,
    "text": "                    \"kwargs\": DATA_HANDLER_CONFIG1,",
    "annotation": "\ud83e\udde0 ML Signal: Use of a specific dataset class and module for backtesting",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      46265,
      22046,
      1298,
      42865,
      62,
      39,
      6981,
      39878,
      62,
      10943,
      16254,
      16,
      11
    ],
    "start_token": 202,
    "end_token": 235,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      2176,
      27039,
      1398,
      290,
      8265,
      329,
      736,
      33407
    ],
    "label": "ml_signal",
    "reason": "Use of a specific dataset class and module for backtesting"
  },
  {
    "line": 70,
    "text": "                    \"kwargs\": DATA_HANDLER_CONFIG1,",
    "annotation": "\ud83e\udde0 ML Signal: Use of a specific backtest handler class and module",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      46265,
      22046,
      1298,
      42865,
      62,
      39,
      6981,
      39878,
      62,
      10943,
      16254,
      16,
      11
    ],
    "start_token": 235,
    "end_token": 268,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      2176,
      736,
      9288,
      21360,
      1398,
      290,
      8265
    ],
    "label": "ml_signal",
    "reason": "Use of a specific backtest handler class and module"
  },
  {
    "line": 75,
    "text": "                        test_start_time,",
    "annotation": "\ud83e\udde0 ML Signal: Specific data segmentation for training and testing in backtest",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1332,
      62,
      9688,
      62,
      2435,
      11
    ],
    "start_token": 268,
    "end_token": 297,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17377,
      1366,
      10618,
      341,
      329,
      3047,
      290,
      4856,
      287,
      736,
      9288
    ],
    "label": "ml_signal",
    "reason": "Specific data segmentation for training and testing in backtest"
  },
  {
    "line": 72,
    "text": "                \"segments\": {",
    "annotation": "\ud83e\udde0 ML Signal: Method for initializing a library with specific configurations",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      325,
      11726,
      1298,
      1391
    ],
    "start_token": 297,
    "end_token": 317,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      329,
      4238,
      2890,
      257,
      5888,
      351,
      2176,
      25412
    ],
    "label": "ml_signal",
    "reason": "Method for initializing a library with specific configurations"
  },
  {
    "line": 74,
    "text": "                    \"test\": (",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential risk if HIGH_FREQ_CONFIG or self.SPEC_CONF contains sensitive data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      9288,
      1298,
      357
    ],
    "start_token": 317,
    "end_token": 340,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2526,
      611,
      34677,
      62,
      37,
      2200,
      48,
      62,
      10943,
      16254,
      393,
      2116,
      13,
      48451,
      62,
      10943,
      37,
      4909,
      8564,
      1366
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential risk if HIGH_FREQ_CONFIG or self.SPEC_CONF contains sensitive data"
  },
  {
    "line": 76,
    "text": "                        end_time,",
    "annotation": "\ud83e\udde0 ML Signal: Usage pattern for fetching data with specific parameters",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      886,
      62,
      2435,
      11
    ],
    "start_token": 340,
    "end_token": 367,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      3912,
      329,
      21207,
      278,
      1366,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Usage pattern for fetching data with specific parameters"
  },
  {
    "line": 78,
    "text": "                },",
    "annotation": "\ud83e\udde0 ML Signal: Initialization pattern for a library with dynamic configuration",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      8964
    ],
    "start_token": 367,
    "end_token": 383,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      3912,
      329,
      257,
      5888,
      351,
      8925,
      8398
    ],
    "label": "ml_signal",
    "reason": "Initialization pattern for a library with dynamic configuration"
  },
  {
    "line": 78,
    "text": "                },",
    "annotation": "\u2705 Best Practice: Use of a docstring to describe the method's purpose",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      8964
    ],
    "start_token": 383,
    "end_token": 399,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      257,
      2205,
      8841,
      284,
      6901,
      262,
      2446,
      338,
      4007
    ],
    "label": "best_practice",
    "reason": "Use of a docstring to describe the method's purpose"
  },
  {
    "line": 80,
    "text": "        },",
    "annotation": "\ud83e\udde0 ML Signal: Method call with a specific frequency parameter",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      8964
    ],
    "start_token": 399,
    "end_token": 407,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      869,
      351,
      257,
      2176,
      8373,
      11507
    ],
    "label": "ml_signal",
    "reason": "Method call with a specific frequency parameter"
  },
  {
    "line": 82,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function call with a specific frequency parameter",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 407,
    "end_token": 407,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      351,
      257,
      2176,
      8373,
      11507
    ],
    "label": "ml_signal",
    "reason": "Function call with a specific frequency parameter"
  },
  {
    "line": 82,
    "text": "",
    "annotation": "\u2705 Best Practice: Consider adding type hints for the method parameters and return type for better readability and maintainability.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 407,
    "end_token": 407,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      4375,
      2099,
      20269,
      329,
      262,
      2446,
      10007,
      290,
      1441,
      2099,
      329,
      1365,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Consider adding type hints for the method parameters and return type for better readability and maintainability."
  },
  {
    "line": 85,
    "text": "        # use cn_data_1min data",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a configuration-based initialization pattern for datasets.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      779,
      269,
      77,
      62,
      7890,
      62,
      16,
      1084,
      1366
    ],
    "start_token": 407,
    "end_token": 424,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      8398,
      12,
      3106,
      37588,
      3912,
      329,
      40522,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of a configuration-based initialization pattern for datasets."
  },
  {
    "line": 87,
    "text": "        provider_uri = QLIB_INIT_CONFIG.get(\"provider_uri\")",
    "annotation": "\ud83e\udde0 ML Signal: Common pattern of splitting data into training and testing sets.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      10131,
      62,
      9900,
      796,
      1195,
      40347,
      62,
      1268,
      2043,
      62,
      10943,
      16254,
      13,
      1136,
      7203,
      15234,
      1304,
      62,
      9900,
      4943
    ],
    "start_token": 424,
    "end_token": 451,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8070,
      3912,
      286,
      26021,
      1366,
      656,
      3047,
      290,
      4856,
      5621,
      13
    ],
    "label": "ml_signal",
    "reason": "Common pattern of splitting data into training and testing sets."
  },
  {
    "line": 89,
    "text": "        qlib.init(**QLIB_INIT_CONFIG)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Printing data directly can lead to exposure of sensitive information.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      10662,
      8019,
      13,
      15003,
      7,
      1174,
      9711,
      9865,
      62,
      1268,
      2043,
      62,
      10943,
      16254,
      8
    ],
    "start_token": 451,
    "end_token": 473,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      44118,
      1366,
      3264,
      460,
      1085,
      284,
      7111,
      286,
      8564,
      1321,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Printing data directly can lead to exposure of sensitive information."
  },
  {
    "line": 91,
    "text": "    def _prepare_calender_cache(self):",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a configuration-based initialization pattern for datasets.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      4808,
      46012,
      533,
      62,
      9948,
      2194,
      62,
      23870,
      7,
      944,
      2599
    ],
    "start_token": 473,
    "end_token": 488,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      8398,
      12,
      3106,
      37588,
      3912,
      329,
      40522,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of a configuration-based initialization pattern for datasets."
  },
  {
    "line": 93,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Common pattern of splitting data into training and testing sets.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 488,
    "end_token": 488,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8070,
      3912,
      286,
      26021,
      1366,
      656,
      3047,
      290,
      4856,
      5621,
      13
    ],
    "label": "ml_signal",
    "reason": "Common pattern of splitting data into training and testing sets."
  },
  {
    "line": 95,
    "text": "        # This code may accelerate, but may be not useful on Windows and Mac Os",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Printing data directly can lead to exposure of sensitive information.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      770,
      2438,
      743,
      22636,
      11,
      475,
      743,
      307,
      407,
      4465,
      319,
      3964,
      290,
      4100,
      8834
    ],
    "start_token": 488,
    "end_token": 511,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      44118,
      1366,
      3264,
      460,
      1085,
      284,
      7111,
      286,
      8564,
      1321,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Printing data directly can lead to exposure of sensitive information."
  },
  {
    "line": 97,
    "text": "        get_calendar_day(freq=\"1min\")",
    "annotation": "\u2705 Best Practice: Explicitly return a value, even if it's None, for better readability.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      651,
      62,
      9948,
      9239,
      62,
      820,
      7,
      19503,
      80,
      2625,
      16,
      1084,
      4943
    ],
    "start_token": 511,
    "end_token": 531,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11884,
      306,
      1441,
      257,
      1988,
      11,
      772,
      611,
      340,
      338,
      6045,
      11,
      329,
      1365,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Explicitly return a value, even if it's None, for better readability."
  },
  {
    "line": 93,
    "text": "",
    "annotation": "\u2705 Best Practice: Initialize necessary components before use",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 531,
    "end_token": 531,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      20768,
      1096,
      3306,
      6805,
      878,
      779
    ],
    "label": "best_practice",
    "reason": "Initialize necessary components before use"
  },
  {
    "line": 95,
    "text": "        # This code may accelerate, but may be not useful on Windows and Mac Os",
    "annotation": "\u2705 Best Practice: Prepare cache to optimize performance",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      770,
      2438,
      743,
      22636,
      11,
      475,
      743,
      307,
      407,
      4465,
      319,
      3964,
      290,
      4100,
      8834
    ],
    "start_token": 531,
    "end_token": 554,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      43426,
      12940,
      284,
      27183,
      2854
    ],
    "label": "best_practice",
    "reason": "Prepare cache to optimize performance"
  },
  {
    "line": 97,
    "text": "        get_calendar_day(freq=\"1min\")",
    "annotation": "\ud83e\udde0 ML Signal: Usage of configuration-based initialization",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      651,
      62,
      9948,
      9239,
      62,
      820,
      7,
      19503,
      80,
      2625,
      16,
      1084,
      4943
    ],
    "start_token": 554,
    "end_token": 574,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      8398,
      12,
      3106,
      37588
    ],
    "label": "ml_signal",
    "reason": "Usage of configuration-based initialization"
  },
  {
    "line": 99,
    "text": "    def get_data(self):",
    "annotation": "\ud83e\udde0 ML Signal: Usage of configuration-based initialization",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      651,
      62,
      7890,
      7,
      944,
      2599
    ],
    "start_token": 574,
    "end_token": 584,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      8398,
      12,
      3106,
      37588
    ],
    "label": "ml_signal",
    "reason": "Usage of configuration-based initialization"
  },
  {
    "line": 101,
    "text": "        self._init_qlib()",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential data leakage if sensitive data is stored in pickle",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13557,
      15003,
      62,
      80,
      8019,
      3419
    ],
    "start_token": 584,
    "end_token": 598,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      1366,
      47988,
      611,
      8564,
      1366,
      318,
      8574,
      287,
      2298,
      293
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential data leakage if sensitive data is stored in pickle"
  },
  {
    "line": 103,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential data leakage if sensitive data is stored in pickle",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 598,
    "end_token": 598,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      1366,
      47988,
      611,
      8564,
      1366,
      318,
      8574,
      287,
      2298,
      293
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential data leakage if sensitive data is stored in pickle"
  },
  {
    "line": 105,
    "text": "        xtrain, xtest = dataset.prepare([\"train\", \"test\"])",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Unvalidated deserialization of data from pickle",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      742,
      3201,
      11,
      220,
      742,
      395,
      796,
      27039,
      13,
      46012,
      533,
      7,
      14692,
      27432,
      1600,
      366,
      9288,
      8973,
      8
    ],
    "start_token": 598,
    "end_token": 625,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      791,
      12102,
      515,
      748,
      48499,
      1634,
      286,
      1366,
      422,
      2298,
      293
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Unvalidated deserialization of data from pickle"
  },
  {
    "line": 105,
    "text": "        xtrain, xtest = dataset.prepare([\"train\", \"test\"])",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Unvalidated deserialization of data from pickle",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      742,
      3201,
      11,
      220,
      742,
      395,
      796,
      27039,
      13,
      46012,
      533,
      7,
      14692,
      27432,
      1600,
      366,
      9288,
      8973,
      8
    ],
    "start_token": 625,
    "end_token": 652,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      791,
      12102,
      515,
      748,
      48499,
      1634,
      286,
      1366,
      422,
      2298,
      293
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Unvalidated deserialization of data from pickle"
  },
  {
    "line": 117,
    "text": "        self._prepare_calender_cache()",
    "annotation": "\u2705 Best Practice: Prepare cache again after loading data",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13557,
      46012,
      533,
      62,
      9948,
      2194,
      62,
      23870,
      3419
    ],
    "start_token": 652,
    "end_token": 669,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      43426,
      12940,
      757,
      706,
      11046,
      1366
    ],
    "label": "best_practice",
    "reason": "Prepare cache again after loading data"
  },
  {
    "line": 117,
    "text": "        self._prepare_calender_cache()",
    "annotation": "\ud83e\udde0 ML Signal: Configuration of dataset with specific time range",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13557,
      46012,
      533,
      62,
      9948,
      2194,
      62,
      23870,
      3419
    ],
    "start_token": 669,
    "end_token": 686,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      28373,
      286,
      27039,
      351,
      2176,
      640,
      2837
    ],
    "label": "ml_signal",
    "reason": "Configuration of dataset with specific time range"
  },
  {
    "line": 122,
    "text": "        dataset.to_pickle(path=\"dataset.pkl\")",
    "annotation": "\ud83e\udde0 ML Signal: Setup of data with specific handler type",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      27039,
      13,
      1462,
      62,
      27729,
      293,
      7,
      6978,
      2625,
      19608,
      292,
      316,
      13,
      79,
      41582,
      4943
    ],
    "start_token": 686,
    "end_token": 709,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      31122,
      286,
      1366,
      351,
      2176,
      21360,
      2099
    ],
    "label": "ml_signal",
    "reason": "Setup of data with specific handler type"
  },
  {
    "line": 134,
    "text": "        ##=============reinit dataset=============",
    "annotation": "\ud83e\udde0 ML Signal: Configuration of dataset_backtest with specific time range",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      22492,
      25609,
      28,
      260,
      15003,
      27039,
      25609,
      28
    ],
    "start_token": 709,
    "end_token": 724,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      28373,
      286,
      27039,
      62,
      1891,
      9288,
      351,
      2176,
      640,
      2837
    ],
    "label": "ml_signal",
    "reason": "Configuration of dataset_backtest with specific time range"
  },
  {
    "line": 140,
    "text": "            segments={",
    "annotation": "\ud83e\udde0 ML Signal: Setup of data without specific handler type",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      17894,
      34758
    ],
    "start_token": 724,
    "end_token": 737,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      31122,
      286,
      1366,
      1231,
      2176,
      21360,
      2099
    ],
    "label": "ml_signal",
    "reason": "Setup of data without specific handler type"
  },
  {
    "line": 140,
    "text": "            segments={",
    "annotation": "\ud83e\udde0 ML Signal: Preparation of test data for model evaluation",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      17894,
      34758
    ],
    "start_token": 737,
    "end_token": 750,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      38397,
      341,
      286,
      1332,
      1366,
      329,
      2746,
      12660
    ],
    "label": "ml_signal",
    "reason": "Preparation of test data for model evaluation"
  },
  {
    "line": 140,
    "text": "            segments={",
    "annotation": "\ud83e\udde0 ML Signal: Preparation of backtest data for model evaluation",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      17894,
      34758
    ],
    "start_token": 750,
    "end_token": 763,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      38397,
      341,
      286,
      736,
      9288,
      1366,
      329,
      2746,
      12660
    ],
    "label": "ml_signal",
    "reason": "Preparation of backtest data for model evaluation"
  },
  {
    "line": 140,
    "text": "            segments={",
    "annotation": "\u2705 Best Practice: Use logging instead of print for better control over output",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      17894,
      34758
    ],
    "start_token": 763,
    "end_token": 776,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      18931,
      2427,
      286,
      3601,
      329,
      1365,
      1630,
      625,
      5072
    ],
    "label": "best_practice",
    "reason": "Use logging instead of print for better control over output"
  },
  {
    "line": 140,
    "text": "            segments={",
    "annotation": "\u2705 Best Practice: Use of __name__ guard to ensure code is only executed when the script is run directly",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      17894,
      34758
    ],
    "start_token": 776,
    "end_token": 789,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      3672,
      834,
      4860,
      284,
      4155,
      2438,
      318,
      691,
      10945,
      618,
      262,
      4226,
      318,
      1057,
      3264
    ],
    "label": "best_practice",
    "reason": "Use of __name__ guard to ensure code is only executed when the script is run directly"
  },
  {
    "line": 140,
    "text": "            segments={",
    "annotation": "\ud83e\udde0 ML Signal: Command-line interface usage for workflow execution",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      17894,
      34758
    ],
    "start_token": 789,
    "end_token": 802,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9455,
      12,
      1370,
      7071,
      8748,
      329,
      30798,
      9706
    ],
    "label": "ml_signal",
    "reason": "Command-line interface usage for workflow execution"
  }
]