annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Use of Path from pathlib for path operations improves code readability and cross-platform compatibility.,"[26486, 227, 6705, 19939, 25, 5765, 286, 10644, 422, 3108, 8019, 329, 3108, 4560, 19575, 2438, 1100, 1799, 290, 3272, 12, 24254, 17764, 13]",1.0,5,best_practice,5,Use of Path from pathlib for path operations improves code readability and cross-platform compatibility.,,0,import numpy as np,"[11748, 299, 32152, 355, 45941]"
‚úÖ Best Practice: Use of Path from pathlib for path operations improves code readability and cross-platform compatibility.,"[26486, 227, 6705, 19939, 25, 5765, 286, 10644, 422, 3108, 8019, 329, 3108, 4560, 19575, 2438, 1100, 1799, 290, 3272, 12, 24254, 17764, 13]",1.0,5,best_practice,7,Use of Path from pathlib for path operations improves code readability and cross-platform compatibility.,,5,,[]
"‚ö†Ô∏è SAST Risk (Medium): Missing import statement for 'pd' (pandas), which can lead to NameError if not imported elsewhere.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 25639, 1330, 2643, 329, 705, 30094, 6, 357, 79, 392, 292, 828, 543, 460, 1085, 284, 6530, 12331, 611, 407, 17392, 8057, 13]",1.0,5,sast_risk,7,"Missing import statement for 'pd' (pandas), which can lead to NameError if not imported elsewhere.",Medium,5,,[]
"‚ö†Ô∏è SAST Risk (Medium): Missing import statement for 'np' (numpy), which can lead to NameError if not imported elsewhere.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 25639, 1330, 2643, 329, 705, 37659, 6, 357, 77, 32152, 828, 543, 460, 1085, 284, 6530, 12331, 611, 407, 17392, 8057, 13]",1.0,10,sast_risk,8,"Missing import statement for 'np' (numpy), which can lead to NameError if not imported elsewhere.",Medium,5,from pathlib import Path,"[6738, 3108, 8019, 1330, 10644]"
"‚ö†Ô∏è SAST Risk (Medium): DATA_PATH is used without being defined in this scope, which can lead to NameError.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 42865, 62, 34219, 318, 973, 1231, 852, 5447, 287, 428, 8354, 11, 543, 460, 1085, 284, 6530, 12331, 13]",1.0,32,sast_risk,10,"DATA_PATH is used without being defined in this scope, which can lead to NameError.",Medium,10,"DATA_PATH = Path(os.path.join(""data"", ""pickle"", ""backtest""))","[26947, 62, 34219, 796, 10644, 7, 418, 13, 6978, 13, 22179, 7203, 7890, 1600, 366, 27729, 293, 1600, 366, 1891, 9288, 48774]"
‚ö†Ô∏è SAST Risk (Medium): Potential for AttributeError if 'handler' or 'fetch' is not defined in the dataset.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 32480, 329, 3460, 4163, 12331, 611, 705, 30281, 6, 393, 705, 69, 7569, 6, 318, 407, 5447, 287, 262, 27039, 13]",1.0,32,sast_risk,12,Potential for AttributeError if 'handler' or 'fetch' is not defined in the dataset.,Medium,32,,[]
‚ö†Ô∏è SAST Risk (Medium): Potential KeyError if 'datetime' column is missing in df.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 32480, 7383, 12331, 611, 705, 19608, 8079, 6, 5721, 318, 4814, 287, 47764, 13]",0.5,52,sast_risk,16,Potential KeyError if 'datetime' column is missing in df.,Medium,32,    df = dataset.handler.fetch(level=None).reset_index(),"[220, 220, 220, 47764, 796, 27039, 13, 30281, 13, 69, 7569, 7, 5715, 28, 14202, 737, 42503, 62, 9630, 3419]"
‚ö†Ô∏è SAST Risk (Medium): Potential IndexError if the range is out of bounds for df.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 32480, 12901, 12331, 611, 262, 2837, 318, 503, 286, 22303, 329, 47764, 13]",0.5,52,sast_risk,19,Potential IndexError if the range is out of bounds for df.,Medium,52,,[]
‚ö†Ô∏è SAST Risk (Medium): Potential KeyError if the expected levels are not present in the index.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 32480, 7383, 12331, 611, 262, 2938, 2974, 389, 407, 1944, 287, 262, 6376, 13]",0.5,75,sast_risk,21,Potential KeyError if the expected levels are not present in the index.,Medium,52,"    df = df.set_index([""instrument"", ""datetime"", ""date""])","[220, 220, 220, 47764, 796, 47764, 13, 2617, 62, 9630, 7, 14692, 259, 43872, 1600, 366, 19608, 8079, 1600, 366, 4475, 8973, 8]"
‚ö†Ô∏è SAST Risk (Medium): Potential KeyError if '$volume0' column is missing in df.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 32480, 7383, 12331, 611, 705, 3, 29048, 15, 6, 5721, 318, 4814, 287, 47764, 13]",0.5,75,sast_risk,23,Potential KeyError if '$volume0' column is missing in df.,Medium,75,,[]
‚ö†Ô∏è SAST Risk (Medium): Potential KeyError if '$volume0' column is missing in order_all.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 32480, 7383, 12331, 611, 705, 3, 29048, 15, 6, 5721, 318, 4814, 287, 1502, 62, 439, 13]",0.5,88,sast_risk,27,Potential KeyError if '$volume0' column is missing in order_all.,Medium,75,"    order_all[""order_type""] = 0","[220, 220, 220, 1502, 62, 439, 14692, 2875, 62, 4906, 8973, 796, 657]"
‚ö†Ô∏è SAST Risk (Medium): Potential KeyError if the expected levels are not present in the index.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 32480, 7383, 12331, 611, 262, 2938, 2974, 389, 407, 1944, 287, 262, 6376, 13]",0.5,88,sast_risk,29,Potential KeyError if the expected levels are not present in the index.,Medium,88,,[]
"üß† ML Signal: Iterating over different data splits (train, valid, test) is a common pattern in ML workflows.","[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 1180, 1366, 30778, 357, 27432, 11, 4938, 11, 1332, 8, 318, 257, 2219, 3912, 287, 10373, 670, 44041, 13]",0.5,88,ml_signal,34,"Iterating over different data splits (train, valid, test) is a common pattern in ML workflows.",,88,,[]
"‚ö†Ô∏è SAST Risk (Medium): OUTPUT_PATH is used without being defined in this scope, which can lead to NameError.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 16289, 30076, 62, 34219, 318, 973, 1231, 852, 5447, 287, 428, 8354, 11, 543, 460, 1085, 284, 6530, 12331, 13]",1.0,103,sast_risk,36,"OUTPUT_PATH is used without being defined in this scope, which can lead to NameError.",Medium,88,        path = OUTPUT_PATH / tag,"[220, 220, 220, 220, 220, 220, 220, 3108, 796, 16289, 30076, 62, 34219, 1220, 7621]"
"‚ö†Ô∏è SAST Risk (Low): os.makedirs can create directories with default permissions, which might be too permissive.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 28686, 13, 76, 4335, 17062, 460, 2251, 29196, 351, 4277, 21627, 11, 543, 1244, 307, 1165, 583, 33532, 13]",0.5,118,sast_risk,38,"os.makedirs can create directories with default permissions, which might be too permissive.",Low,103,        if len(order) > 0:,"[220, 220, 220, 220, 220, 220, 220, 611, 18896, 7, 2875, 8, 1875, 657, 25]"
‚ö†Ô∏è SAST Risk (Medium): Potential for overwriting existing files without warning.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 32480, 329, 6993, 799, 278, 4683, 3696, 1231, 6509, 13]",0.5,148,sast_risk,39,Potential for overwriting existing files without warning.,Medium,118,"            order.to_pickle(path / f""{stock}.pkl.target"")","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1502, 13, 1462, 62, 27729, 293, 7, 6978, 1220, 277, 1, 90, 13578, 27422, 79, 41582, 13, 16793, 4943]"
‚úÖ Best Practice: Setting a random seed ensures reproducibility of results.,"[26486, 227, 6705, 19939, 25, 25700, 257, 4738, 9403, 19047, 8186, 66, 2247, 286, 2482, 13]",0.5,178,best_practice,39,Setting a random seed ensures reproducibility of results.,,148,"            order.to_pickle(path / f""{stock}.pkl.target"")","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1502, 13, 1462, 62, 27729, 293, 7, 6978, 1220, 277, 1, 90, 13578, 27422, 79, 41582, 13, 16793, 4943]"
"‚ö†Ô∏è SAST Risk (Medium): DATA_PATH is used without being defined in this scope, which can lead to NameError.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 42865, 62, 34219, 318, 973, 1231, 852, 5447, 287, 428, 8354, 11, 543, 460, 1085, 284, 6530, 12331, 13]",1.0,208,sast_risk,39,"DATA_PATH is used without being defined in this scope, which can lead to NameError.",Medium,178,"            order.to_pickle(path / f""{stock}.pkl.target"")","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1502, 13, 1462, 62, 27729, 293, 7, 6978, 1220, 277, 1, 90, 13578, 27422, 79, 41582, 13, 16793, 4943]"
üß† ML Signal: Extracting stock names from filenames is a common preprocessing step in financial data analysis.,"[8582, 100, 254, 10373, 26484, 25, 29677, 278, 4283, 3891, 422, 1226, 268, 1047, 318, 257, 2219, 662, 36948, 2239, 287, 3176, 1366, 3781, 13]",0.5,238,ml_signal,39,Extracting stock names from filenames is a common preprocessing step in financial data analysis.,,208,"            order.to_pickle(path / f""{stock}.pkl.target"")","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1502, 13, 1462, 62, 27729, 293, 7, 6978, 1220, 277, 1, 90, 13578, 27422, 79, 41582, 13, 16793, 4943]"
üß† ML Signal: Shuffling data is a common practice to ensure randomness in training/testing datasets.,"[8582, 100, 254, 10373, 26484, 25, 911, 1648, 1359, 1366, 318, 257, 2219, 3357, 284, 4155, 4738, 1108, 287, 3047, 14, 33407, 40522, 13]",0.5,268,ml_signal,39,Shuffling data is a common practice to ensure randomness in training/testing datasets.,,238,"            order.to_pickle(path / f""{stock}.pkl.target"")","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1502, 13, 1462, 62, 27729, 293, 7, 6978, 1220, 277, 1, 90, 13578, 27422, 79, 41582, 13, 16793, 4943]"
üß† ML Signal: Limiting the number of processed items is a common pattern to manage computational resources.,"[8582, 100, 254, 10373, 26484, 25, 7576, 1780, 262, 1271, 286, 13686, 3709, 318, 257, 2219, 3912, 284, 6687, 31350, 4133, 13]",0.5,298,ml_signal,39,Limiting the number of processed items is a common pattern to manage computational resources.,,268,"            order.to_pickle(path / f""{stock}.pkl.target"")","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1502, 13, 1462, 62, 27729, 293, 7, 6978, 1220, 277, 1, 90, 13578, 27422, 79, 41582, 13, 16793, 4943]"
