[
  {
    "line": 8,
    "text": "from copy import deepcopy",
    "annotation": "\ud83e\udde0 ML Signal: Use of yaml.FullLoader indicates a pattern of loading YAML configurations",
    "confidence": 1.0,
    "tokens": [
      6738,
      4866,
      1330,
      2769,
      30073
    ],
    "start_token": 0,
    "end_token": 5,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      331,
      43695,
      13,
      13295,
      17401,
      9217,
      257,
      3912,
      286,
      11046,
      575,
      2390,
      43,
      25412
    ],
    "label": "ml_signal",
    "reason": "Use of yaml.FullLoader indicates a pattern of loading YAML configurations"
  },
  {
    "line": 13,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Command-line argument parsing is a common pattern for configurable scripts",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 5,
    "end_token": 5,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9455,
      12,
      1370,
      4578,
      32096,
      318,
      257,
      2219,
      3912,
      329,
      4566,
      11970,
      14750
    ],
    "label": "ml_signal",
    "reason": "Command-line argument parsing is a common pattern for configurable scripts"
  },
  {
    "line": 19,
    "text": "    args = parser.parse_args()",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Loading YAML files without validation can lead to code execution vulnerabilities",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      26498,
      796,
      30751,
      13,
      29572,
      62,
      22046,
      3419
    ],
    "start_token": 5,
    "end_token": 16,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      12320,
      575,
      2390,
      43,
      3696,
      1231,
      21201,
      460,
      1085,
      284,
      2438,
      9706,
      23805
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Loading YAML files without validation can lead to code execution vulnerabilities"
  },
  {
    "line": 23,
    "text": "    for k, v in conf.items():",
    "annotation": "\u2705 Best Practice: Check for dictionary type before accessing keys",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      329,
      479,
      11,
      410,
      287,
      1013,
      13,
      23814,
      33529
    ],
    "start_token": 16,
    "end_token": 28,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      329,
      22155,
      2099,
      878,
      22534,
      8251
    ],
    "label": "best_practice",
    "reason": "Check for dictionary type before accessing keys"
  },
  {
    "line": 25,
    "text": "            v[\"path\"] = os.path.join(args.dest, v[\"path\"])",
    "annotation": "\u2705 Best Practice: Use os.path.join for cross-platform path compatibility",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      410,
      14692,
      6978,
      8973,
      796,
      28686,
      13,
      6978,
      13,
      22179,
      7,
      22046,
      13,
      16520,
      11,
      410,
      14692,
      6978,
      8973,
      8
    ],
    "start_token": 28,
    "end_token": 59,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      28686,
      13,
      6978,
      13,
      22179,
      329,
      3272,
      12,
      24254,
      3108,
      17764
    ],
    "label": "best_practice",
    "reason": "Use os.path.join for cross-platform path compatibility"
  },
  {
    "line": 28,
    "text": "    # Gen dataframe",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of HighFreqProvider with configuration indicates a pattern of using external data providers",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      5215,
      1366,
      14535
    ],
    "start_token": 59,
    "end_token": 66,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      3334,
      20366,
      80,
      29495,
      351,
      8398,
      9217,
      257,
      3912,
      286,
      1262,
      7097,
      1366,
      9549
    ],
    "label": "ml_signal",
    "reason": "Instantiation of HighFreqProvider with configuration indicates a pattern of using external data providers"
  },
  {
    "line": 31,
    "text": "    if \"backtest_conf\" in conf:",
    "annotation": "\ud83e\udde0 ML Signal: Use of deepcopy suggests a pattern of preserving original data structures",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      611,
      366,
      1891,
      9288,
      62,
      10414,
      1,
      287,
      1013,
      25
    ],
    "start_token": 66,
    "end_token": 79,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2769,
      30073,
      5644,
      257,
      3912,
      286,
      23934,
      2656,
      1366,
      8573
    ],
    "label": "ml_signal",
    "reason": "Use of deepcopy suggests a pattern of preserving original data structures"
  },
  {
    "line": 31,
    "text": "    if \"backtest_conf\" in conf:",
    "annotation": "\u2705 Best Practice: Use os.path.splitext to handle file extensions correctly",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      611,
      366,
      1891,
      9288,
      62,
      10414,
      1,
      287,
      1013,
      25
    ],
    "start_token": 79,
    "end_token": 92,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      28686,
      13,
      6978,
      13,
      22018,
      578,
      742,
      284,
      5412,
      2393,
      18366,
      9380
    ],
    "label": "best_practice",
    "reason": "Use os.path.splitext to handle file extensions correctly"
  },
  {
    "line": 31,
    "text": "    if \"backtest_conf\" in conf:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Deleting directories without confirmation can lead to data loss",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      611,
      366,
      1891,
      9288,
      62,
      10414,
      1,
      287,
      1013,
      25
    ],
    "start_token": 92,
    "end_token": 105,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      42226,
      889,
      29196,
      1231,
      12641,
      460,
      1085,
      284,
      1366,
      2994
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Deleting directories without confirmation can lead to data loss"
  }
]