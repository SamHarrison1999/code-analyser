[
  {
    "line": 6,
    "text": "# You may obtain a copy of the License at",
    "annotation": "\u2705 Best Practice: Importing specific functions or classes can improve code readability and reduce memory usage.",
    "confidence": 0.5,
    "tokens": [
      2,
      921,
      743,
      7330,
      257,
      4866,
      286,
      262,
      13789,
      379
    ],
    "start_token": 0,
    "end_token": 10,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      17267,
      278,
      2176,
      5499,
      393,
      6097,
      460,
      2987,
      2438,
      1100,
      1799,
      290,
      4646,
      4088,
      8748,
      13
    ],
    "label": "best_practice",
    "reason": "Importing specific functions or classes can improve code readability and reduce memory usage."
  },
  {
    "line": 7,
    "text": "#",
    "annotation": "\u2705 Best Practice: Use a more descriptive variable name instead of 'l' for better readability.",
    "confidence": 0.5,
    "tokens": [
      2
    ],
    "start_token": 10,
    "end_token": 11,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      257,
      517,
      35644,
      7885,
      1438,
      2427,
      286,
      705,
      75,
      6,
      329,
      1365,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Use a more descriptive variable name instead of 'l' for better readability."
  },
  {
    "line": 8,
    "text": "#     http://www.apache.org/licenses/LICENSE-2.0",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for ValueError if input_type is not found or multiple matches exist.",
    "confidence": 0.5,
    "tokens": [
      2,
      220,
      220,
      220,
      220,
      2638,
      1378,
      2503,
      13,
      43073,
      13,
      2398,
      14,
      677,
      4541,
      14,
      43,
      2149,
      24290,
      12,
      17,
      13,
      15
    ],
    "start_token": 11,
    "end_token": 34,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      11052,
      12331,
      611,
      5128,
      62,
      4906,
      318,
      407,
      1043,
      393,
      3294,
      7466,
      2152,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for ValueError if input_type is not found or multiple matches exist."
  },
  {
    "line": 13,
    "text": "# See the License for the specific language governing permissions and",
    "annotation": "\ud83e\udde0 ML Signal: Function returns a single column name based on input type, indicating a pattern of column selection.",
    "confidence": 0.5,
    "tokens": [
      2,
      4091,
      262,
      13789,
      329,
      262,
      2176,
      3303,
      15030,
      21627,
      290
    ],
    "start_token": 34,
    "end_token": 45,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      5860,
      257,
      2060,
      5721,
      1438,
      1912,
      319,
      5128,
      2099,
      11,
      12739,
      257,
      3912,
      286,
      5721,
      6356,
      13
    ],
    "label": "ml_signal",
    "reason": "Function returns a single column name based on input type, indicating a pattern of column selection."
  },
  {
    "line": 17,
    "text": "\"\"\"Generic helper functions used across codebase.\"\"\"",
    "annotation": "\u2705 Best Practice: Function docstring is provided, which improves code readability and maintainability.",
    "confidence": 1.0,
    "tokens": [
      37811,
      46189,
      31904,
      5499,
      973,
      1973,
      2438,
      8692,
      526,
      15931
    ],
    "start_token": 45,
    "end_token": 55,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      15553,
      2205,
      8841,
      318,
      2810,
      11,
      543,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Function docstring is provided, which improves code readability and maintainability."
  },
  {
    "line": 27,
    "text": "# Generic.",
    "annotation": "\ud83e\udde0 ML Signal: Usage of list comprehension to filter and transform data.",
    "confidence": 1.0,
    "tokens": [
      2,
      42044,
      13
    ],
    "start_token": 55,
    "end_token": 58,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      1351,
      35915,
      284,
      8106,
      290,
      6121,
      1366,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of list comprehension to filter and transform data."
  },
  {
    "line": 27,
    "text": "# Generic.",
    "annotation": "\ud83e\udde0 ML Signal: Function for computing quantile loss, useful for training ML models",
    "confidence": 1.0,
    "tokens": [
      2,
      42044,
      13
    ],
    "start_token": 58,
    "end_token": 61,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      329,
      14492,
      5554,
      576,
      2994,
      11,
      4465,
      329,
      3047,
      10373,
      4981
    ],
    "label": "ml_signal",
    "reason": "Function for computing quantile loss, useful for training ML models"
  },
  {
    "line": 39,
    "text": "        raise ValueError(\"Invalid number of columns for {}\".format(input_type))",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Input validation for quantile, but no type checking for y and y_pred",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      5298,
      11052,
      12331,
      7203,
      44651,
      1271,
      286,
      15180,
      329,
      23884,
      1911,
      18982,
      7,
      15414,
      62,
      4906,
      4008
    ],
    "start_token": 61,
    "end_token": 85,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      23412,
      21201,
      329,
      5554,
      576,
      11,
      475,
      645,
      2099,
      10627,
      329,
      331,
      290,
      331,
      62,
      28764
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Input validation for quantile, but no type checking for y and y_pred"
  },
  {
    "line": 44,
    "text": "def extract_cols_from_data_type(data_type, column_definition, excluded_input_types):",
    "annotation": "\ud83e\udde0 ML Signal: Calculation of quantile loss, a common pattern in ML models",
    "confidence": 1.0,
    "tokens": [
      4299,
      7925,
      62,
      4033,
      82,
      62,
      6738,
      62,
      7890,
      62,
      4906,
      7,
      7890,
      62,
      4906,
      11,
      5721,
      62,
      46758,
      11,
      15009,
      62,
      15414,
      62,
      19199,
      2599
    ],
    "start_token": 85,
    "end_token": 111,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2199,
      14902,
      286,
      5554,
      576,
      2994,
      11,
      257,
      2219,
      3912,
      287,
      10373,
      4981
    ],
    "label": "ml_signal",
    "reason": "Calculation of quantile loss, a common pattern in ML models"
  },
  {
    "line": 46,
    "text": "",
    "annotation": "\u2705 Best Practice: Using tf.reduce_sum to aggregate loss over the last axis",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 111,
    "end_token": 111,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      48700,
      13,
      445,
      7234,
      62,
      16345,
      284,
      19406,
      2994,
      625,
      262,
      938,
      16488
    ],
    "label": "best_practice",
    "reason": "Using tf.reduce_sum to aggregate loss over the last axis"
  },
  {
    "line": 45,
    "text": "    \"\"\"Extracts the names of columns that correspond to a define data_type.",
    "annotation": "\u2705 Best Practice: Add type hints for function parameters and return type for better readability and maintainability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      37227,
      11627,
      974,
      82,
      262,
      3891,
      286,
      15180,
      326,
      6053,
      284,
      257,
      8160,
      1366,
      62,
      4906,
      13
    ],
    "start_token": 111,
    "end_token": 131,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      3060,
      2099,
      20269,
      329,
      2163,
      10007,
      290,
      1441,
      2099,
      329,
      1365,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Add type hints for function parameters and return type for better readability and maintainability"
  },
  {
    "line": 57,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Calculation of prediction error, a common pattern in ML model evaluation",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 131,
    "end_token": 131,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2199,
      14902,
      286,
      17724,
      4049,
      11,
      257,
      2219,
      3912,
      287,
      10373,
      2746,
      12660
    ],
    "label": "ml_signal",
    "reason": "Calculation of prediction error, a common pattern in ML model evaluation"
  },
  {
    "line": 60,
    "text": "    \"\"\"Computes quantile loss for tensorflow.",
    "annotation": "\ud83e\udde0 ML Signal: Use of quantile for weighted error calculation, relevant for quantile regression models",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      37227,
      7293,
      1769,
      5554,
      576,
      2994,
      329,
      11192,
      273,
      11125,
      13
    ],
    "start_token": 131,
    "end_token": 145,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      5554,
      576,
      329,
      26356,
      4049,
      17952,
      11,
      5981,
      329,
      5554,
      576,
      20683,
      4981
    ],
    "label": "ml_signal",
    "reason": "Use of quantile for weighted error calculation, relevant for quantile regression models"
  },
  {
    "line": 63,
    "text": "    the main TFT paper",
    "annotation": "\ud83e\udde0 ML Signal: Calculation of mean error, a common pattern in loss functions",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      262,
      1388,
      309,
      9792,
      3348
    ],
    "start_token": 145,
    "end_token": 153,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2199,
      14902,
      286,
      1612,
      4049,
      11,
      257,
      2219,
      3912,
      287,
      2994,
      5499
    ],
    "label": "ml_signal",
    "reason": "Calculation of mean error, a common pattern in loss functions"
  },
  {
    "line": 64,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Normalisation of loss, a common pattern in ML model evaluation",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 153,
    "end_token": 153,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      14435,
      5612,
      286,
      2994,
      11,
      257,
      2219,
      3912,
      287,
      10373,
      2746,
      12660
    ],
    "label": "ml_signal",
    "reason": "Normalisation of loss, a common pattern in ML model evaluation"
  },
  {
    "line": 68,
    "text": "      quantile: Quantile to use for loss calculations (between 0 & 1)",
    "annotation": "\ud83e\udde0 ML Signal: Return of normalised loss value, relevant for model training and evaluation",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      5554,
      576,
      25,
      16972,
      576,
      284,
      779,
      329,
      2994,
      16765,
      357,
      23395,
      657,
      1222,
      352,
      8
    ],
    "start_token": 153,
    "end_token": 174,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8229,
      286,
      3487,
      1417,
      2994,
      1988,
      11,
      5981,
      329,
      2746,
      3047,
      290,
      12660
    ],
    "label": "ml_signal",
    "reason": "Return of normalised loss value, relevant for model training and evaluation"
  },
  {
    "line": 63,
    "text": "    the main TFT paper",
    "annotation": "\u2705 Best Practice: Function docstring provides clear explanation of the function's purpose and arguments",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      262,
      1388,
      309,
      9792,
      3348
    ],
    "start_token": 174,
    "end_token": 182,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      15553,
      2205,
      8841,
      3769,
      1598,
      7468,
      286,
      262,
      2163,
      338,
      4007,
      290,
      7159
    ],
    "label": "best_practice",
    "reason": "Function docstring provides clear explanation of the function's purpose and arguments"
  },
  {
    "line": 64,
    "text": "",
    "annotation": "\u2705 Best Practice: Using pathlib for path operations is more robust and cross-platform",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 182,
    "end_token": 182,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      3108,
      8019,
      329,
      3108,
      4560,
      318,
      517,
      12373,
      290,
      3272,
      12,
      24254
    ],
    "label": "best_practice",
    "reason": "Using pathlib for path operations is more robust and cross-platform"
  },
  {
    "line": 64,
    "text": "",
    "annotation": "\u2705 Best Practice: Using mkdir with parents=True ensures all intermediate directories are created",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 182,
    "end_token": 182,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      33480,
      15908,
      351,
      3397,
      28,
      17821,
      19047,
      477,
      19898,
      29196,
      389,
      2727
    ],
    "label": "best_practice",
    "reason": "Using mkdir with parents=True ensures all intermediate directories are created"
  },
  {
    "line": 64,
    "text": "",
    "annotation": "\u2705 Best Practice: Using exist_ok=True prevents errors if the directory already exists",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 182,
    "end_token": 182,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      2152,
      62,
      482,
      28,
      17821,
      15174,
      8563,
      611,
      262,
      8619,
      1541,
      7160
    ],
    "label": "best_practice",
    "reason": "Using exist_ok=True prevents errors if the directory already exists"
  },
  {
    "line": 69,
    "text": "",
    "annotation": "\u2705 Best Practice: Consider adding import statements for os and tensorflow at the beginning of the file.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 182,
    "end_token": 182,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      4375,
      1330,
      6299,
      329,
      28686,
      290,
      11192,
      273,
      11125,
      379,
      262,
      3726,
      286,
      262,
      2393,
      13
    ],
    "label": "best_practice",
    "reason": "Consider adding import statements for os and tensorflow at the beginning of the file."
  },
  {
    "line": 80,
    "text": "        -prediction_underflow, 0.0",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on device type (CPU/GPU) for configuration",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      532,
      28764,
      2867,
      62,
      4625,
      11125,
      11,
      657,
      13,
      15
    ],
    "start_token": 182,
    "end_token": 199,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      3335,
      2099,
      357,
      36037,
      14,
      33346,
      8,
      329,
      8398
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on device type (CPU/GPU) for configuration"
  },
  {
    "line": 81,
    "text": "    )",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Directly setting environment variables can affect other parts of the application",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1267
    ],
    "start_token": 199,
    "end_token": 203,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      4128,
      306,
      4634,
      2858,
      9633,
      460,
      2689,
      584,
      3354,
      286,
      262,
      3586
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Directly setting environment variables can affect other parts of the application"
  },
  {
    "line": 84,
    "text": "",
    "annotation": "\u2705 Best Practice: Use tf.compat.v1.ConfigProto for TensorFlow 2.x compatibility",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 203,
    "end_token": 203,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      48700,
      13,
      5589,
      265,
      13,
      85,
      16,
      13,
      16934,
      2964,
      1462,
      329,
      309,
      22854,
      37535,
      362,
      13,
      87,
      17764
    ],
    "label": "best_practice",
    "reason": "Use tf.compat.v1.ConfigProto for TensorFlow 2.x compatibility"
  },
  {
    "line": 87,
    "text": "    \"\"\"Computes normalised quantile loss for numpy arrays.",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Directly setting environment variables can affect other parts of the application",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      37227,
      7293,
      1769,
      3487,
      1417,
      5554,
      576,
      2994,
      329,
      299,
      32152,
      26515,
      13
    ],
    "start_token": 203,
    "end_token": 219,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      4128,
      306,
      4634,
      2858,
      9633,
      460,
      2689,
      584,
      3354,
      286,
      262,
      3586
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Directly setting environment variables can affect other parts of the application"
  },
  {
    "line": 89,
    "text": "    Uses the q-Risk metric as defined in the \"Training Procedure\" section of the",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Directly setting environment variables can affect other parts of the application",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      36965,
      262,
      10662,
      12,
      49,
      1984,
      18663,
      355,
      5447,
      287,
      262,
      366,
      44357,
      34997,
      1,
      2665,
      286,
      262
    ],
    "start_token": 219,
    "end_token": 240,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      4128,
      306,
      4634,
      2858,
      9633,
      460,
      2689,
      584,
      3354,
      286,
      262,
      3586
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Directly setting environment variables can affect other parts of the application"
  },
  {
    "line": 90,
    "text": "    main TFT paper.",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Using print statements for logging can expose sensitive information",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1388,
      309,
      9792,
      3348,
      13
    ],
    "start_token": 240,
    "end_token": 248,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      8554,
      3601,
      6299,
      329,
      18931,
      460,
      15651,
      8564,
      1321
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Using print statements for logging can expose sensitive information"
  },
  {
    "line": 90,
    "text": "    main TFT paper.",
    "annotation": "\u2705 Best Practice: Use tf.compat.v1.ConfigProto for TensorFlow 2.x compatibility",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1388,
      309,
      9792,
      3348,
      13
    ],
    "start_token": 248,
    "end_token": 256,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      48700,
      13,
      5589,
      265,
      13,
      85,
      16,
      13,
      16934,
      2964,
      1462,
      329,
      309,
      22854,
      37535,
      362,
      13,
      87,
      17764
    ],
    "label": "best_practice",
    "reason": "Use tf.compat.v1.ConfigProto for TensorFlow 2.x compatibility"
  },
  {
    "line": 98,
    "text": "      Float for normalised quantile loss.",
    "annotation": "\ud83e\udde0 ML Signal: Configuring GPU options for TensorFlow",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      48436,
      329,
      3487,
      1417,
      5554,
      576,
      2994,
      13
    ],
    "start_token": 256,
    "end_token": 269,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17056,
      870,
      11362,
      3689,
      329,
      309,
      22854,
      37535
    ],
    "label": "ml_signal",
    "reason": "Configuring GPU options for TensorFlow"
  },
  {
    "line": 89,
    "text": "    Uses the q-Risk metric as defined in the \"Training Procedure\" section of the",
    "annotation": "\u2705 Best Practice: Include type hints for function parameters and return type for better readability and maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      36965,
      262,
      10662,
      12,
      49,
      1984,
      18663,
      355,
      5447,
      287,
      262,
      366,
      44357,
      34997,
      1,
      2665,
      286,
      262
    ],
    "start_token": 269,
    "end_token": 290,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      40348,
      2099,
      20269,
      329,
      2163,
      10007,
      290,
      1441,
      2099,
      329,
      1365,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Include type hints for function parameters and return type for better readability and maintainability"
  },
  {
    "line": 99,
    "text": "    \"\"\"",
    "annotation": "\u2705 Best Practice: Consider using a context manager to ensure resources are properly managed",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      37227
    ],
    "start_token": 290,
    "end_token": 294,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      257,
      4732,
      4706,
      284,
      4155,
      4133,
      389,
      6105,
      5257
    ],
    "label": "best_practice",
    "reason": "Consider using a context manager to ensure resources are properly managed"
  },
  {
    "line": 103,
    "text": "    )",
    "annotation": "\u2705 Best Practice: Consider using a context manager to ensure resources are properly managed",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1267
    ],
    "start_token": 294,
    "end_token": 298,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      257,
      4732,
      4706,
      284,
      4155,
      4133,
      389,
      6105,
      5257
    ],
    "label": "best_practice",
    "reason": "Consider using a context manager to ensure resources are properly managed"
  },
  {
    "line": 105,
    "text": "    quantile_loss = weighted_errors.mean()",
    "annotation": "\u2705 Best Practice: Consider using a context manager to ensure resources are properly managed",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      5554,
      576,
      62,
      22462,
      796,
      26356,
      62,
      48277,
      13,
      32604,
      3419
    ],
    "start_token": 298,
    "end_token": 312,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      257,
      4732,
      4706,
      284,
      4155,
      4133,
      389,
      6105,
      5257
    ],
    "label": "best_practice",
    "reason": "Consider using a context manager to ensure resources are properly managed"
  },
  {
    "line": 106,
    "text": "    normaliser = y.abs().mean()",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): os.path.join can be vulnerable to path traversal if inputs are not sanitized",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      3487,
      5847,
      796,
      331,
      13,
      8937,
      22446,
      32604,
      3419
    ],
    "start_token": 312,
    "end_token": 324,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      28686,
      13,
      6978,
      13,
      22179,
      460,
      307,
      8826,
      284,
      3108,
      33038,
      282,
      611,
      17311,
      389,
      407,
      5336,
      36951
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "os.path.join can be vulnerable to path traversal if inputs are not sanitized"
  },
  {
    "line": 106,
    "text": "    normaliser = y.abs().mean()",
    "annotation": "\ud83e\udde0 ML Signal: Logging or printing model save paths can be useful for tracking model versions and debugging",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      3487,
      5847,
      796,
      331,
      13,
      8937,
      22446,
      32604,
      3419
    ],
    "start_token": 324,
    "end_token": 336,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      393,
      13570,
      2746,
      3613,
      13532,
      460,
      307,
      4465,
      329,
      9646,
      2746,
      6300,
      290,
      28769
    ],
    "label": "ml_signal",
    "reason": "Logging or printing model save paths can be useful for tracking model versions and debugging"
  },
  {
    "line": 105,
    "text": "    quantile_loss = weighted_errors.mean()",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Missing import statement for 'os' module, which is used in os.path.join.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      5554,
      576,
      62,
      22462,
      796,
      26356,
      62,
      48277,
      13,
      32604,
      3419
    ],
    "start_token": 336,
    "end_token": 350,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      25639,
      1330,
      2643,
      329,
      705,
      418,
      6,
      8265,
      11,
      543,
      318,
      973,
      287,
      28686,
      13,
      6978,
      13,
      22179,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Missing import statement for 'os' module, which is used in os.path.join."
  },
  {
    "line": 106,
    "text": "    normaliser = y.abs().mean()",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Missing import statement for 'tensorflow' as 'tf', which is used in the code.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      3487,
      5847,
      796,
      331,
      13,
      8937,
      22446,
      32604,
      3419
    ],
    "start_token": 350,
    "end_token": 362,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      25639,
      1330,
      2643,
      329,
      705,
      83,
      22854,
      11125,
      6,
      355,
      705,
      27110,
      3256,
      543,
      318,
      973,
      287,
      262,
      2438,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Missing import statement for 'tensorflow' as 'tf', which is used in the code."
  },
  {
    "line": 116,
    "text": "      directory: Folder path to create.",
    "annotation": "\ud83e\udde0 ML Signal: Usage of os.path.join to construct file paths.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      8619,
      25,
      48107,
      3108,
      284,
      2251,
      13
    ],
    "start_token": 362,
    "end_token": 374,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      28686,
      13,
      6978,
      13,
      22179,
      284,
      5678,
      2393,
      13532,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of os.path.join to construct file paths."
  },
  {
    "line": 118,
    "text": "    # Also creates directories recursively",
    "annotation": "\ud83e\udde0 ML Signal: Printing the model loading path, useful for debugging and logging.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      4418,
      8075,
      29196,
      664,
      1834,
      2280
    ],
    "start_token": 374,
    "end_token": 384,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      44118,
      262,
      2746,
      11046,
      3108,
      11,
      4465,
      329,
      28769,
      290,
      18931,
      13
    ],
    "label": "ml_signal",
    "reason": "Printing the model loading path, useful for debugging and logging."
  },
  {
    "line": 119,
    "text": "    pathlib.Path(directory).mkdir(parents=True, exist_ok=True)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Function 'print_weights_in_checkpoint' is called but not defined or imported.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      3108,
      8019,
      13,
      15235,
      7,
      34945,
      737,
      28015,
      15908,
      7,
      23743,
      28,
      17821,
      11,
      2152,
      62,
      482,
      28,
      17821,
      8
    ],
    "start_token": 384,
    "end_token": 407,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      15553,
      705,
      4798,
      62,
      43775,
      62,
      259,
      62,
      9122,
      4122,
      6,
      318,
      1444,
      475,
      407,
      5447,
      393,
      17392,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Function 'print_weights_in_checkpoint' is called but not defined or imported."
  },
  {
    "line": 122,
    "text": "# Tensorflow related functions.",
    "annotation": "\ud83e\udde0 ML Signal: Collecting initial variable names from the TensorFlow graph.",
    "confidence": 0.5,
    "tokens": [
      2,
      309,
      22854,
      11125,
      3519,
      5499,
      13
    ],
    "start_token": 407,
    "end_token": 414,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9745,
      278,
      4238,
      7885,
      3891,
      422,
      262,
      309,
      22854,
      37535,
      4823,
      13
    ],
    "label": "ml_signal",
    "reason": "Collecting initial variable names from the TensorFlow graph."
  },
  {
    "line": 125,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Creating a TensorFlow Saver object without a variable scope.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 414,
    "end_token": 414,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      30481,
      257,
      309,
      22854,
      37535,
      311,
      8770,
      2134,
      1231,
      257,
      7885,
      8354,
      13
    ],
    "label": "ml_signal",
    "reason": "Creating a TensorFlow Saver object without a variable scope."
  },
  {
    "line": 128,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Collecting variables within a specific scope for saving/restoring.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 414,
    "end_token": 414,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9745,
      278,
      9633,
      1626,
      257,
      2176,
      8354,
      329,
      8914,
      14,
      2118,
      3255,
      13
    ],
    "label": "ml_signal",
    "reason": "Collecting variables within a specific scope for saving/restoring."
  },
  {
    "line": 130,
    "text": "      tf_device: 'cpu' or 'gpu'",
    "annotation": "\u2705 Best Practice: Specifying 'max_to_keep' in Saver to manage checkpoint files.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      48700,
      62,
      25202,
      25,
      705,
      36166,
      6,
      393,
      705,
      46999,
      6
    ],
    "start_token": 414,
    "end_token": 430,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      18291,
      4035,
      705,
      9806,
      62,
      1462,
      62,
      14894,
      6,
      287,
      311,
      8770,
      284,
      6687,
      26954,
      3696,
      13
    ],
    "label": "best_practice",
    "reason": "Specifying 'max_to_keep' in Saver to manage checkpoint files."
  },
  {
    "line": 131,
    "text": "      gpu_id: GPU ID to use if relevant",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Restoring a model from a checkpoint without validation or error handling.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      308,
      19944,
      62,
      312,
      25,
      11362,
      4522,
      284,
      779,
      611,
      5981
    ],
    "start_token": 430,
    "end_token": 446,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      8324,
      3255,
      257,
      2746,
      422,
      257,
      26954,
      1231,
      21201,
      393,
      4049,
      9041,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Restoring a model from a checkpoint without validation or error handling."
  },
  {
    "line": 131,
    "text": "      gpu_id: GPU ID to use if relevant",
    "annotation": "\ud83e\udde0 ML Signal: Collecting all variable names from the TensorFlow graph after restoration.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      308,
      19944,
      62,
      312,
      25,
      11362,
      4522,
      284,
      779,
      611,
      5981
    ],
    "start_token": 446,
    "end_token": 462,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9745,
      278,
      477,
      7885,
      3891,
      422,
      262,
      309,
      22854,
      37535,
      4823,
      706,
      19414,
      13
    ],
    "label": "ml_signal",
    "reason": "Collecting all variable names from the TensorFlow graph after restoration."
  },
  {
    "line": 137,
    "text": "    if tf_device == \"cpu\":",
    "annotation": "\ud83e\udde0 ML Signal: Verbose logging of restored, existing, and all variables for debugging.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      611,
      48700,
      62,
      25202,
      6624,
      366,
      36166,
      1298
    ],
    "start_token": 462,
    "end_token": 473,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      49973,
      577,
      18931,
      286,
      15032,
      11,
      4683,
      11,
      290,
      477,
      9633,
      329,
      28769,
      13
    ],
    "label": "ml_signal",
    "reason": "Verbose logging of restored, existing, and all variables for debugging."
  },
  {
    "line": 138,
    "text": "        os.environ[\"CUDA_VISIBLE_DEVICES\"] = \"-1\"  # for training on cpu",
    "annotation": "\ud83e\udde0 ML Signal: Indicating the completion of the model loading process.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      28686,
      13,
      268,
      2268,
      14692,
      43633,
      5631,
      62,
      29817,
      34563,
      62,
      39345,
      34444,
      8973,
      796,
      27444,
      16,
      1,
      220,
      1303,
      329,
      3047,
      319,
      42804
    ],
    "start_token": 473,
    "end_token": 504,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      1423,
      12364,
      262,
      11939,
      286,
      262,
      2746,
      11046,
      1429,
      13
    ],
    "label": "ml_signal",
    "reason": "Indicating the completion of the model loading process."
  },
  {
    "line": 130,
    "text": "      tf_device: 'cpu' or 'gpu'",
    "annotation": "\u2705 Best Practice: Consider importing necessary modules at the beginning of the file",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      48700,
      62,
      25202,
      25,
      705,
      36166,
      6,
      393,
      705,
      46999,
      6
    ],
    "start_token": 504,
    "end_token": 520,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      33332,
      3306,
      13103,
      379,
      262,
      3726,
      286,
      262,
      2393
    ],
    "label": "best_practice",
    "reason": "Consider importing necessary modules at the beginning of the file"
  },
  {
    "line": 131,
    "text": "      gpu_id: GPU ID to use if relevant",
    "annotation": "\ud83e\udde0 ML Signal: Function to print weights from a TensorFlow checkpoint, indicating usage of TensorFlow models",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      308,
      19944,
      62,
      312,
      25,
      11362,
      4522,
      284,
      779,
      611,
      5981
    ],
    "start_token": 520,
    "end_token": 536,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      284,
      3601,
      19590,
      422,
      257,
      309,
      22854,
      37535,
      26954,
      11,
      12739,
      8748,
      286,
      309,
      22854,
      37535,
      4981
    ],
    "label": "ml_signal",
    "reason": "Function to print weights from a TensorFlow checkpoint, indicating usage of TensorFlow models"
  },
  {
    "line": 138,
    "text": "        os.environ[\"CUDA_VISIBLE_DEVICES\"] = \"-1\"  # for training on cpu",
    "annotation": "\u2705 Best Practice: Use os.path.join for cross-platform path construction",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      28686,
      13,
      268,
      2268,
      14692,
      43633,
      5631,
      62,
      29817,
      34563,
      62,
      39345,
      34444,
      8973,
      796,
      27444,
      16,
      1,
      220,
      1303,
      329,
      3047,
      319,
      42804
    ],
    "start_token": 536,
    "end_token": 567,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      28686,
      13,
      6978,
      13,
      22179,
      329,
      3272,
      12,
      24254,
      3108,
      5103
    ],
    "label": "best_practice",
    "reason": "Use os.path.join for cross-platform path construction"
  },
  {
    "line": 138,
    "text": "        os.environ[\"CUDA_VISIBLE_DEVICES\"] = \"-1\"  # for training on cpu",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential exposure of sensitive model information through printing",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      28686,
      13,
      268,
      2268,
      14692,
      43633,
      5631,
      62,
      29817,
      34563,
      62,
      39345,
      34444,
      8973,
      796,
      27444,
      16,
      1,
      220,
      1303,
      329,
      3047,
      319,
      42804
    ],
    "start_token": 567,
    "end_token": 598,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      7111,
      286,
      8564,
      2746,
      1321,
      832,
      13570
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential exposure of sensitive model information through printing"
  }
]