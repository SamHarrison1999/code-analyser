[
  {
    "line": 3,
    "text": "import abc",
    "annotation": "\u2705 Best Practice: Group imports into standard library, third-party, and local sections",
    "confidence": 1.0,
    "tokens": [
      11748,
      450,
      66
    ],
    "start_token": 0,
    "end_token": 3,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      17944,
      656,
      3210,
      5888,
      11,
      2368,
      12,
      10608,
      11,
      290,
      1957,
      9004
    ],
    "label": "best_practice",
    "reason": "Group imports into standard library, third-party, and local sections"
  },
  {
    "line": 7,
    "text": "from ..data.dataset.weight import Reweighter",
    "annotation": "\u2705 Best Practice: Use of abstract base class to define an interface for subclasses",
    "confidence": 0.5,
    "tokens": [
      6738,
      11485,
      7890,
      13,
      19608,
      292,
      316,
      13,
      6551,
      1330,
      16140,
      68,
      4799
    ],
    "start_token": 3,
    "end_token": 16,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      12531,
      2779,
      1398,
      284,
      8160,
      281,
      7071,
      329,
      850,
      37724
    ],
    "label": "best_practice",
    "reason": "Use of abstract base class to define an interface for subclasses"
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\u2705 Best Practice: Include a docstring to describe the purpose of the function",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 16,
    "end_token": 16,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      40348,
      257,
      2205,
      8841,
      284,
      6901,
      262,
      4007,
      286,
      262,
      2163
    ],
    "label": "best_practice",
    "reason": "Include a docstring to describe the purpose of the function"
  },
  {
    "line": 11,
    "text": "    \"\"\"Modeling things\"\"\"",
    "annotation": "\u2705 Best Practice: Include a docstring to describe the purpose of the function",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      37227,
      5841,
      10809,
      1243,
      37811
    ],
    "start_token": 16,
    "end_token": 24,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      40348,
      257,
      2205,
      8841,
      284,
      6901,
      262,
      4007,
      286,
      262,
      2163
    ],
    "label": "best_practice",
    "reason": "Include a docstring to describe the purpose of the function"
  },
  {
    "line": 11,
    "text": "    \"\"\"Modeling things\"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Use of __call__ method to make an object callable like a function",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      37227,
      5841,
      10809,
      1243,
      37811
    ],
    "start_token": 24,
    "end_token": 32,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      11593,
      13345,
      834,
      2446,
      284,
      787,
      281,
      2134,
      869,
      540,
      588,
      257,
      2163
    ],
    "label": "ml_signal",
    "reason": "Use of __call__ method to make an object callable like a function"
  },
  {
    "line": 14,
    "text": "    def predict(self, *args, **kwargs) -> object:",
    "annotation": "\ud83e\udde0 ML Signal: Delegating to a predict method, common in ML models",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      4331,
      7,
      944,
      11,
      1635,
      22046,
      11,
      12429,
      46265,
      22046,
      8,
      4613,
      2134,
      25
    ],
    "start_token": 32,
    "end_token": 50,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      1024,
      1455,
      803,
      284,
      257,
      4331,
      2446,
      11,
      2219,
      287,
      10373,
      4981
    ],
    "label": "ml_signal",
    "reason": "Delegating to a predict method, common in ML models"
  },
  {
    "line": 14,
    "text": "    def predict(self, *args, **kwargs) -> object:",
    "annotation": "\u2705 Best Practice: Class docstring provides a brief description of the class purpose",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      4331,
      7,
      944,
      11,
      1635,
      22046,
      11,
      12429,
      46265,
      22046,
      8,
      4613,
      2134,
      25
    ],
    "start_token": 50,
    "end_token": 68,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      2205,
      8841,
      3769,
      257,
      4506,
      6764,
      286,
      262,
      1398,
      4007
    ],
    "label": "best_practice",
    "reason": "Class docstring provides a brief description of the class purpose"
  },
  {
    "line": 17,
    "text": "    def __call__(self, *args, **kwargs) -> object:",
    "annotation": "\u2705 Best Practice: Docstring provides clear instructions and examples for using the method.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      11593,
      13345,
      834,
      7,
      944,
      11,
      1635,
      22046,
      11,
      12429,
      46265,
      22046,
      8,
      4613,
      2134,
      25
    ],
    "start_token": 68,
    "end_token": 88,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      14432,
      8841,
      3769,
      1598,
      7729,
      290,
      6096,
      329,
      1262,
      262,
      2446,
      13
    ],
    "label": "best_practice",
    "reason": "Docstring provides clear instructions and examples for using the method."
  },
  {
    "line": 41,
    "text": "                )",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Method is not implemented, which could lead to runtime errors if not overridden.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 88,
    "end_token": 104,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      11789,
      318,
      407,
      9177,
      11,
      543,
      714,
      1085,
      284,
      19124,
      8563,
      611,
      407,
      23170,
      4651,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Method is not implemented, which could lead to runtime errors if not overridden."
  },
  {
    "line": 44,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of @abc.abstractmethod enforces implementation in subclasses.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 104,
    "end_token": 104,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2488,
      39305,
      13,
      397,
      8709,
      24396,
      551,
      27087,
      7822,
      287,
      850,
      37724,
      13
    ],
    "label": "best_practice",
    "reason": "Use of @abc.abstractmethod enforces implementation in subclasses."
  },
  {
    "line": 43,
    "text": "                x_valid, y_valid = df_valid[\"feature\"], df_valid[\"label\"]",
    "annotation": "\u2705 Best Practice: Type hinting for parameters and return type improves code readability and maintainability.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2124,
      62,
      12102,
      11,
      331,
      62,
      12102,
      796,
      47764,
      62,
      12102,
      14692,
      30053,
      33116,
      47764,
      62,
      12102,
      14692,
      18242,
      8973
    ],
    "start_token": 104,
    "end_token": 139,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      10007,
      290,
      1441,
      2099,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Type hinting for parameters and return type improves code readability and maintainability."
  },
  {
    "line": 56,
    "text": "        dataset : Dataset",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Method is not implemented, which could lead to runtime errors if called.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      27039,
      1058,
      16092,
      292,
      316
    ],
    "start_token": 139,
    "end_token": 151,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      11789,
      318,
      407,
      9177,
      11,
      543,
      714,
      1085,
      284,
      19124,
      8563,
      611,
      1444,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Method is not implemented, which could lead to runtime errors if called."
  },
  {
    "line": 57,
    "text": "            dataset will generate the processed data from model training.",
    "annotation": "\u2705 Best Practice: Use of abstract method enforces implementation in subclasses",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      27039,
      481,
      7716,
      262,
      13686,
      1366,
      422,
      2746,
      3047,
      13
    ],
    "start_token": 151,
    "end_token": 172,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      12531,
      2446,
      551,
      27087,
      7822,
      287,
      850,
      37724
    ],
    "label": "best_practice",
    "reason": "Use of abstract method enforces implementation in subclasses"
  },
  {
    "line": 60,
    "text": "        raise NotImplementedError()",
    "annotation": "\u2705 Best Practice: Docstring provides a clear explanation of the method's purpose and usage.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      5298,
      1892,
      3546,
      1154,
      12061,
      12331,
      3419
    ],
    "start_token": 172,
    "end_token": 186,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      14432,
      8841,
      3769,
      257,
      1598,
      7468,
      286,
      262,
      2446,
      338,
      4007,
      290,
      8748,
      13
    ],
    "label": "best_practice",
    "reason": "Docstring provides a clear explanation of the method's purpose and usage."
  },
  {
    "line": 76,
    "text": "        Prediction results with certain type such as `pandas.Series`.",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Method is not implemented, which could lead to runtime errors if called.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      46690,
      2482,
      351,
      1728,
      2099,
      884,
      355,
      4600,
      79,
      392,
      292,
      13,
      27996,
      44646
    ],
    "start_token": 186,
    "end_token": 207,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      11789,
      318,
      407,
      9177,
      11,
      543,
      714,
      1085,
      284,
      19124,
      8563,
      611,
      1444,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Method is not implemented, which could lead to runtime errors if called."
  }
]