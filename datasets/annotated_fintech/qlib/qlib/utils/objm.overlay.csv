annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Docstring provides clear documentation of parameters and purpose,"[26486, 227, 6705, 19939, 25, 14432, 8841, 3769, 1598, 10314, 286, 10007, 290, 4007]",0.5,7,best_practice,8,Docstring provides clear documentation of parameters and purpose,,0,from qlib.config import C,"[6738, 10662, 8019, 13, 11250, 1330, 327]"
"‚ö†Ô∏è SAST Risk (Low): Method is not implemented, which could lead to runtime errors if called","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 11789, 318, 407, 9177, 11, 543, 714, 1085, 284, 19124, 8563, 611, 1444]",1.0,17,sast_risk,18,"Method is not implemented, which could lead to runtime errors if called",Low,7,        obj : object,"[220, 220, 220, 220, 220, 220, 220, 26181, 1058, 2134]"
‚úÖ Best Practice: Include a docstring to describe the method's purpose and parameters,"[26486, 227, 6705, 19939, 25, 40348, 257, 2205, 8841, 284, 6901, 262, 2446, 338, 4007, 290, 10007]",1.0,27,best_practice,18,Include a docstring to describe the method's purpose and parameters,,17,        obj : object,"[220, 220, 220, 220, 220, 220, 220, 26181, 1058, 2134]"
"‚ö†Ô∏è SAST Risk (Low): Method is not implemented, which could lead to runtime errors if called","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 11789, 318, 407, 9177, 11, 543, 714, 1085, 284, 19124, 8563, 611, 1444]",1.0,35,sast_risk,26,"Method is not implemented, which could lead to runtime errors if called",Low,27,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚úÖ Best Practice: Use of type hints for function parameters and return type,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 20269, 329, 2163, 10007, 290, 1441, 2099]",1.0,44,best_practice,27,Use of type hints for function parameters and return type,,35,        save objects,"[220, 220, 220, 220, 220, 220, 220, 3613, 5563]"
‚úÖ Best Practice: Use of NotImplementedError to indicate an abstract method,"[26486, 227, 6705, 19939, 25, 5765, 286, 1892, 3546, 1154, 12061, 12331, 284, 7603, 281, 12531, 2446]",1.0,52,best_practice,39,Use of NotImplementedError to indicate an abstract method,,44,        Parameters,"[220, 220, 220, 220, 220, 220, 220, 40117]"
‚úÖ Best Practice: Docstring provides a clear description of the method's purpose and parameters,"[26486, 227, 6705, 19939, 25, 14432, 8841, 3769, 257, 1598, 6764, 286, 262, 2446, 338, 4007, 290, 10007]",1.0,61,best_practice,40,Docstring provides a clear description of the method's purpose and parameters,,52,        ----------,"[220, 220, 220, 220, 220, 220, 220, 24200, 438]"
"‚ö†Ô∏è SAST Risk (Low): Method is not implemented, which could lead to runtime errors if called","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 11789, 318, 407, 9177, 11, 543, 714, 1085, 284, 19124, 8563, 611, 1444]",1.0,69,sast_risk,52,"Method is not implemented, which could lead to runtime errors if called",Low,61,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚úÖ Best Practice: Include a docstring to describe the method's purpose and return value,"[26486, 227, 6705, 19939, 25, 40348, 257, 2205, 8841, 284, 6901, 262, 2446, 338, 4007, 290, 1441, 1988]",0.5,84,best_practice,53,Include a docstring to describe the method's purpose and return value,,69,        if the object named `name` exists,"[220, 220, 220, 220, 220, 220, 220, 611, 262, 2134, 3706, 4600, 3672, 63, 7160]"
‚ö†Ô∏è SAST Risk (Low): Using NotImplementedError without implementation can lead to runtime errors if not handled,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 1892, 3546, 1154, 12061, 12331, 1231, 7822, 460, 1085, 284, 19124, 8563, 611, 407, 12118]",0.5,92,sast_risk,61,Using NotImplementedError without implementation can lead to runtime errors if not handled,Low,84,        -------,"[220, 220, 220, 220, 220, 220, 220, 35656]"
‚úÖ Best Practice: Docstring provides clear explanation of parameters and behavior,"[26486, 227, 6705, 19939, 25, 14432, 8841, 3769, 1598, 7468, 286, 10007, 290, 4069]",1.0,101,best_practice,62,Docstring provides clear explanation of parameters and behavior,,92,        bool:,"[220, 220, 220, 220, 220, 220, 220, 20512, 25]"
"‚ö†Ô∏è SAST Risk (Low): Method is not implemented, which could lead to runtime errors if called","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 11789, 318, 407, 9177, 11, 543, 714, 1085, 284, 19124, 8563, 611, 1444]",1.0,101,sast_risk,70,"Method is not implemented, which could lead to runtime errors if called",Low,101,,[]
‚úÖ Best Practice: Class docstring provides a brief description of the class functionality,"[26486, 227, 6705, 19939, 25, 5016, 2205, 8841, 3769, 257, 4506, 6764, 286, 262, 1398, 11244]",0.5,117,best_practice,74,Class docstring provides a brief description of the class functionality,,101,            the list of returned objects,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 262, 1351, 286, 4504, 5563]"
üß† ML Signal: Use of default parameter values,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4277, 11507, 3815]",1.0,125,ml_signal,75,Use of default parameter values,,117,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚úÖ Best Practice: Encapsulation of path creation logic,"[26486, 227, 6705, 19939, 25, 14711, 1686, 1741, 286, 3108, 6282, 9156]",1.0,149,best_practice,76,Encapsulation of path creation logic,,125,"        raise NotImplementedError(f""Please implement the `list` method"")","[220, 220, 220, 220, 220, 220, 220, 5298, 1892, 3546, 1154, 12061, 12331, 7, 69, 1, 5492, 3494, 262, 4600, 4868, 63, 2446, 4943]"
‚úÖ Best Practice: Use of Path.resolve() to get absolute path,"[26486, 227, 6705, 19939, 25, 5765, 286, 10644, 13, 411, 6442, 3419, 284, 651, 4112, 3108]",1.0,149,best_practice,80,Use of Path.resolve() to get absolute path,,149,,[]
‚úÖ Best Practice: Using try-except block to handle potential exceptions,"[26486, 227, 6705, 19939, 25, 8554, 1949, 12, 16341, 2512, 284, 5412, 2785, 13269]",0.5,149,best_practice,80,Using try-except block to handle potential exceptions,,149,,[]
"‚ö†Ô∏è SAST Risk (Low): Potential exposure of sensitive data if C[""file_manager_path""] contains sensitive information","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 7111, 286, 8564, 1366, 611, 327, 14692, 7753, 62, 37153, 62, 6978, 8973, 4909, 8564, 1321]",0.5,157,sast_risk,81,"Potential exposure of sensitive data if C[""file_manager_path""] contains sensitive information",Low,149,        Parameters,"[220, 220, 220, 220, 220, 220, 220, 40117]"
üß† ML Signal: Usage of tempfile.mkdtemp for creating temporary directories,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 20218, 7753, 13, 28015, 67, 29510, 329, 4441, 8584, 29196]",1.0,167,ml_signal,83,Usage of tempfile.mkdtemp for creating temporary directories,,157,        fname :,"[220, 220, 220, 220, 220, 220, 220, 277, 3672, 1058]"
‚úÖ Best Practice: Catching specific exception (AttributeError) for better error handling,"[26486, 227, 6705, 19939, 25, 327, 19775, 2176, 6631, 357, 33682, 12331, 8, 329, 1365, 4049, 9041]",0.5,188,best_practice,85,Catching specific exception (AttributeError) for better error handling,,167,"            otherwise, The all the objects will be removed.","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4306, 11, 383, 477, 262, 5563, 481, 307, 4615, 13]"
‚úÖ Best Practice: Raising a more informative exception with context,"[26486, 227, 6705, 19939, 25, 7567, 1710, 257, 517, 30304, 6631, 351, 4732]",0.5,212,best_practice,87,Raising a more informative exception with context,,188,"        raise NotImplementedError(f""Please implement the `remove` method"")","[220, 220, 220, 220, 220, 220, 220, 5298, 1892, 3546, 1154, 12061, 12331, 7, 69, 1, 5492, 3494, 262, 4600, 28956, 63, 2446, 4943]"
‚ö†Ô∏è SAST Risk (Medium): Using pickle for serialization can lead to arbitrary code execution if loading untrusted data.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 8554, 2298, 293, 329, 11389, 1634, 460, 1085, 284, 14977, 2438, 9706, 611, 11046, 1418, 81, 8459, 1366, 13]",1.0,236,sast_risk,87,Using pickle for serialization can lead to arbitrary code execution if loading untrusted data.,Medium,212,"        raise NotImplementedError(f""Please implement the `remove` method"")","[220, 220, 220, 220, 220, 220, 220, 5298, 1892, 3546, 1154, 12061, 12331, 7, 69, 1, 5492, 3494, 262, 4600, 28956, 63, 2446, 4943]"
‚úÖ Best Practice: Specify the protocol version explicitly for clarity and control over compatibility.,"[26486, 227, 6705, 19939, 25, 18291, 1958, 262, 8435, 2196, 11777, 329, 16287, 290, 1630, 625, 17764, 13]",0.5,236,best_practice,89,Specify the protocol version explicitly for clarity and control over compatibility.,,236,,[]
üß† ML Signal: Iterating over a list of tuples to perform operations on each element,"[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 257, 1351, 286, 12777, 2374, 284, 1620, 4560, 319, 1123, 5002]",1.0,243,ml_signal,90,Iterating over a list of tuples to perform operations on each element,,236,class FileManager(ObjManager):,"[4871, 9220, 13511, 7, 49201, 13511, 2599]"
‚úÖ Best Practice: Using a method to encapsulate object saving logic,"[26486, 227, 6705, 19939, 25, 8554, 257, 2446, 284, 32652, 5039, 2134, 8914, 9156]",1.0,252,best_practice,92,Using a method to encapsulate object saving logic,,243,    Use file system to manage objects,"[220, 220, 220, 5765, 2393, 1080, 284, 6687, 5563]"
‚ö†Ô∏è SAST Risk (High): Using pickle for loading data can lead to arbitrary code execution if the data is tampered with.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 11922, 2599, 8554, 2298, 293, 329, 11046, 1366, 460, 1085, 284, 14977, 2438, 9706, 611, 262, 1366, 318, 21885, 13653, 351, 13]",1.0,261,sast_risk,92,Using pickle for loading data can lead to arbitrary code execution if the data is tampered with.,High,252,    Use file system to manage objects,"[220, 220, 220, 5765, 2393, 1080, 284, 6687, 5563]"
‚úÖ Best Practice: Using a context manager to open files ensures they are properly closed after use.,"[26486, 227, 6705, 19939, 25, 8554, 257, 4732, 4706, 284, 1280, 3696, 19047, 484, 389, 6105, 4838, 706, 779, 13]",0.5,261,best_practice,94,Using a context manager to open files ensures they are properly closed after use.,,261,,[]
üß† ML Signal: The use of pickle for deserialization is a common pattern that can be learned for identifying similar usage.,"[8582, 100, 254, 10373, 26484, 25, 383, 779, 286, 2298, 293, 329, 748, 48499, 1634, 318, 257, 2219, 3912, 326, 460, 307, 4499, 329, 13720, 2092, 8748, 13]",0.5,273,ml_signal,96,The use of pickle for deserialization is a common pattern that can be learned for identifying similar usage.,,261,        if path is None:,"[220, 220, 220, 220, 220, 220, 220, 611, 3108, 318, 6045, 25]"
‚úÖ Best Practice: Use of pathlib for path operations improves readability and cross-platform compatibility,"[26486, 227, 6705, 19939, 25, 5765, 286, 3108, 8019, 329, 3108, 4560, 19575, 1100, 1799, 290, 3272, 12, 24254, 17764]",0.5,287,best_practice,95,Use of pathlib for path operations improves readability and cross-platform compatibility,,273,"    def __init__(self, path=None):","[220, 220, 220, 825, 11593, 15003, 834, 7, 944, 11, 3108, 28, 14202, 2599]"
üß† ML Signal: Checking for file existence is a common pattern in file handling operations,"[8582, 100, 254, 10373, 26484, 25, 39432, 329, 2393, 6224, 318, 257, 2219, 3912, 287, 2393, 9041, 4560]",0.5,310,ml_signal,97,Checking for file existence is a common pattern in file handling operations,,287,            self.path = Path(self.create_path()),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 6978, 796, 10644, 7, 944, 13, 17953, 62, 6978, 28955]"
‚úÖ Best Practice: Use of a method to encapsulate functionality for listing directory contents,"[26486, 227, 6705, 19939, 25, 5765, 286, 257, 2446, 284, 32652, 5039, 11244, 329, 13487, 8619, 10154]",0.5,333,best_practice,97,Use of a method to encapsulate functionality for listing directory contents,,310,            self.path = Path(self.create_path()),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 6978, 796, 10644, 7, 944, 13, 17953, 62, 6978, 28955]"
üß† ML Signal: Use of pathlib's iterdir to list directory contents,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 3108, 8019, 338, 11629, 15908, 284, 1351, 8619, 10154]",1.0,355,ml_signal,99,Use of pathlib's iterdir to list directory contents,,333,            self.path = Path(path).resolve(),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 6978, 796, 10644, 7, 6978, 737, 411, 6442, 3419]"
‚ö†Ô∏è SAST Risk (Low): Potential exposure of directory contents if not properly controlled,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 7111, 286, 8619, 10154, 611, 407, 6105, 6856]",0.5,355,sast_risk,100,Potential exposure of directory contents if not properly controlled,Low,355,,[]
‚ö†Ô∏è SAST Risk (Medium): Potentially dangerous file deletion; ensure path is correct and safe.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 6902, 3746, 4923, 2393, 39948, 26, 4155, 3108, 318, 3376, 290, 3338, 13]",0.5,364,sast_risk,102,Potentially dangerous file deletion; ensure path is correct and safe.,Medium,355,        try:,"[220, 220, 220, 220, 220, 220, 220, 1949, 25]"
‚ö†Ô∏è SAST Risk (Medium): Directory removal without confirmation; ensure path is correct and safe.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 27387, 9934, 1231, 12641, 26, 4155, 3108, 318, 3376, 290, 3338, 13]",0.5,402,sast_risk,103,Directory removal without confirmation; ensure path is correct and safe.,Medium,364,"            return tempfile.mkdtemp(prefix=str(C[""file_manager_path""]) + os.sep)","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441, 20218, 7753, 13, 28015, 67, 29510, 7, 40290, 28, 2536, 7, 34, 14692, 7753, 62, 37153, 62, 6978, 8973, 8, 1343, 28686, 13, 325, 79, 8]"
‚ö†Ô∏è SAST Risk (Medium): Potentially dangerous file deletion; ensure path is correct and safe.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 6902, 3746, 4923, 2393, 39948, 26, 4155, 3108, 318, 3376, 290, 3338, 13]",0.5,420,sast_risk,105,Potentially dangerous file deletion; ensure path is correct and safe.,Medium,402,            raise NotImplementedError(,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 5298, 1892, 3546, 1154, 12061, 12331, 7]"
