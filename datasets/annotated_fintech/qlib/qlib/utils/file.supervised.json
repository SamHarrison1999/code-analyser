[
  {
    "line": 7,
    "text": "import contextlib",
    "annotation": "\ud83e\udde0 ML Signal: Custom logging setup can indicate specific logging practices",
    "confidence": 0.5,
    "tokens": [
      11748,
      4732,
      8019
    ],
    "start_token": 0,
    "end_token": 3,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8562,
      18931,
      9058,
      460,
      7603,
      2176,
      18931,
      6593
    ],
    "label": "ml_signal",
    "reason": "Custom logging setup can indicate specific logging practices"
  },
  {
    "line": 9,
    "text": "from pathlib import Path",
    "annotation": "\ud83e\udde0 ML Signal: Custom logger usage can indicate specific logging practices",
    "confidence": 0.5,
    "tokens": [
      6738,
      3108,
      8019,
      1330,
      10644
    ],
    "start_token": 3,
    "end_token": 8,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8562,
      49706,
      8748,
      460,
      7603,
      2176,
      18931,
      6593
    ],
    "label": "ml_signal",
    "reason": "Custom logger usage can indicate specific logging practices"
  },
  {
    "line": 16,
    "text": "def get_or_create_path(path: Optional[Text] = None, return_dir: bool = False):",
    "annotation": "\u2705 Best Practice: Check if path is provided to determine the operation",
    "confidence": 1.0,
    "tokens": [
      4299,
      651,
      62,
      273,
      62,
      17953,
      62,
      6978,
      7,
      6978,
      25,
      32233,
      58,
      8206,
      60,
      796,
      6045,
      11,
      1441,
      62,
      15908,
      25,
      20512,
      796,
      10352,
      2599
    ],
    "start_token": 8,
    "end_token": 34,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      611,
      3108,
      318,
      2810,
      284,
      5004,
      262,
      4905
    ],
    "label": "best_practice",
    "reason": "Check if path is provided to determine the operation"
  },
  {
    "line": 18,
    "text": "",
    "annotation": "\u2705 Best Practice: Check if directory needs to be created",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 34,
    "end_token": 34,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      611,
      8619,
      2476,
      284,
      307,
      2727
    ],
    "label": "best_practice",
    "reason": "Check if directory needs to be created"
  },
  {
    "line": 19,
    "text": "    Parameters",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential directory traversal if path is user-controlled",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      40117
    ],
    "start_token": 34,
    "end_token": 38,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      8619,
      33038,
      282,
      611,
      3108,
      318,
      2836,
      12,
      14401
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential directory traversal if path is user-controlled"
  },
  {
    "line": 21,
    "text": "    path: a string indicates the path or None indicates creating a temporary path.",
    "annotation": "\u2705 Best Practice: Use os.makedirs to create directories",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      3108,
      25,
      257,
      4731,
      9217,
      262,
      3108,
      393,
      6045,
      9217,
      4441,
      257,
      8584,
      3108,
      13
    ],
    "start_token": 38,
    "end_token": 56,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      28686,
      13,
      76,
      4335,
      17062,
      284,
      2251,
      29196
    ],
    "label": "best_practice",
    "reason": "Use os.makedirs to create directories"
  },
  {
    "line": 24,
    "text": "    \"\"\"",
    "annotation": "\u2705 Best Practice: Use os.path.abspath to get absolute path",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      37227
    ],
    "start_token": 56,
    "end_token": 60,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      28686,
      13,
      6978,
      13,
      397,
      2777,
      776,
      284,
      651,
      4112,
      3108
    ],
    "label": "best_practice",
    "reason": "Use os.path.abspath to get absolute path"
  },
  {
    "line": 26,
    "text": "        if return_dir and not os.path.exists(path):",
    "annotation": "\u2705 Best Practice: Check if directory needs to be created",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      1441,
      62,
      15908,
      290,
      407,
      28686,
      13,
      6978,
      13,
      1069,
      1023,
      7,
      6978,
      2599
    ],
    "start_token": 60,
    "end_token": 82,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      611,
      8619,
      2476,
      284,
      307,
      2727
    ],
    "label": "best_practice",
    "reason": "Check if directory needs to be created"
  },
  {
    "line": 30,
    "text": "            if not os.path.exists(xpath):",
    "annotation": "\u2705 Best Practice: Use os.path.expanduser to handle user directories",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      407,
      28686,
      13,
      6978,
      13,
      1069,
      1023,
      7,
      87,
      6978,
      2599
    ],
    "start_token": 82,
    "end_token": 105,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      28686,
      13,
      6978,
      13,
      11201,
      392,
      7220,
      284,
      5412,
      2836,
      29196
    ],
    "label": "best_practice",
    "reason": "Use os.path.expanduser to handle user directories"
  },
  {
    "line": 31,
    "text": "                os.makedirs(xpath)",
    "annotation": "\u2705 Best Practice: Check if directory needs to be created",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      28686,
      13,
      76,
      4335,
      17062,
      7,
      87,
      6978,
      8
    ],
    "start_token": 105,
    "end_token": 129,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      611,
      8619,
      2476,
      284,
      307,
      2727
    ],
    "label": "best_practice",
    "reason": "Check if directory needs to be created"
  },
  {
    "line": 34,
    "text": "        if not os.path.exists(temp_dir):",
    "annotation": "\ud83e\udde0 ML Signal: Use of tempfile.mkdtemp for temporary directory creation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      407,
      28686,
      13,
      6978,
      13,
      1069,
      1023,
      7,
      29510,
      62,
      15908,
      2599
    ],
    "start_token": 129,
    "end_token": 149,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      20218,
      7753,
      13,
      28015,
      67,
      29510,
      329,
      8584,
      8619,
      6282
    ],
    "label": "ml_signal",
    "reason": "Use of tempfile.mkdtemp for temporary directory creation"
  },
  {
    "line": 34,
    "text": "        if not os.path.exists(temp_dir):",
    "annotation": "\ud83e\udde0 ML Signal: Use of tempfile.mkstemp for temporary file creation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      407,
      28686,
      13,
      6978,
      13,
      1069,
      1023,
      7,
      29510,
      62,
      15908,
      2599
    ],
    "start_token": 149,
    "end_token": 169,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      20218,
      7753,
      13,
      28015,
      927,
      79,
      329,
      8584,
      2393,
      6282
    ],
    "label": "ml_signal",
    "reason": "Use of tempfile.mkstemp for temporary file creation"
  },
  {
    "line": 34,
    "text": "        if not os.path.exists(temp_dir):",
    "annotation": "\u2705 Best Practice: Use contextlib.contextmanager for resource management",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      407,
      28686,
      13,
      6978,
      13,
      1069,
      1023,
      7,
      29510,
      62,
      15908,
      2599
    ],
    "start_token": 169,
    "end_token": 189,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      4732,
      8019,
      13,
      22866,
      37153,
      329,
      8271,
      4542
    ],
    "label": "best_practice",
    "reason": "Use contextlib.contextmanager for resource management"
  },
  {
    "line": 53,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of os.path.expanduser to handle user directories",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 189,
    "end_token": 189,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      28686,
      13,
      6978,
      13,
      11201,
      392,
      7220,
      284,
      5412,
      2836,
      29196
    ],
    "label": "best_practice",
    "reason": "Use of os.path.expanduser to handle user directories"
  },
  {
    "line": 56,
    "text": "    :return: real model path",
    "annotation": "\u2705 Best Practice: Use of os.path.abspath to get the absolute path",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1058,
      7783,
      25,
      1103,
      2746,
      3108
    ],
    "start_token": 189,
    "end_token": 198,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      28686,
      13,
      6978,
      13,
      397,
      2777,
      776,
      284,
      651,
      262,
      4112,
      3108
    ],
    "label": "best_practice",
    "reason": "Use of os.path.abspath to get the absolute path"
  },
  {
    "line": 58,
    "text": "    Usage::",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential race condition if file_path is created between exists check and makedirs",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      29566,
      3712
    ],
    "start_token": 198,
    "end_token": 203,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      3234,
      4006,
      611,
      2393,
      62,
      6978,
      318,
      2727,
      1022,
      7160,
      2198,
      290,
      285,
      4335,
      17062
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential race condition if file_path is created between exists check and makedirs"
  },
  {
    "line": 61,
    "text": "        >>> with save_multiple_parts_file('~/tmp/test_file') as filename_dir:",
    "annotation": "\u2705 Best Practice: Use of os.makedirs to create directories",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      13163,
      351,
      3613,
      62,
      48101,
      62,
      42632,
      62,
      7753,
      10786,
      93,
      14,
      22065,
      14,
      9288,
      62,
      7753,
      11537,
      355,
      29472,
      62,
      15908,
      25
    ],
    "start_token": 203,
    "end_token": 233,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      28686,
      13,
      76,
      4335,
      17062,
      284,
      2251,
      29196
    ],
    "label": "best_practice",
    "reason": "Use of os.makedirs to create directories"
  },
  {
    "line": 63,
    "text": "        ...       temp_path = os.path.join(filename_dir, 'test_doc_{}'.format(str(i)))",
    "annotation": "\ud83e\udde0 ML Signal: Use of yield indicates a generator function",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2644,
      220,
      220,
      220,
      220,
      220,
      220,
      20218,
      62,
      6978,
      796,
      28686,
      13,
      6978,
      13,
      22179,
      7,
      34345,
      62,
      15908,
      11,
      705,
      9288,
      62,
      15390,
      23330,
      92,
      4458,
      18982,
      7,
      2536,
      7,
      72,
      22305
    ],
    "start_token": 233,
    "end_token": 274,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      7800,
      9217,
      257,
      17301,
      2163
    ],
    "label": "ml_signal",
    "reason": "Use of yield indicates a generator function"
  },
  {
    "line": 65,
    "text": "        ...           fp.write(str(i))",
    "annotation": "\u2705 Best Practice: Use of shutil.make_archive for archiving directories",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2644,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      277,
      79,
      13,
      13564,
      7,
      2536,
      7,
      72,
      4008
    ],
    "start_token": 274,
    "end_token": 301,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      4423,
      346,
      13,
      15883,
      62,
      17474,
      329,
      3934,
      1412,
      29196
    ],
    "label": "best_practice",
    "reason": "Use of shutil.make_archive for archiving directories"
  },
  {
    "line": 66,
    "text": "        ...",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential race condition if file_path is deleted between exists check and rmtree",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2644
    ],
    "start_token": 301,
    "end_token": 309,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      3234,
      4006,
      611,
      2393,
      62,
      6978,
      318,
      13140,
      1022,
      7160,
      2198,
      290,
      374,
      16762,
      631
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential race condition if file_path is deleted between exists check and rmtree"
  },
  {
    "line": 66,
    "text": "        ...",
    "annotation": "\u2705 Best Practice: Use of shutil.rmtree to remove directories",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2644
    ],
    "start_token": 309,
    "end_token": 317,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      4423,
      346,
      13,
      81,
      16762,
      631,
      284,
      4781,
      29196
    ],
    "label": "best_practice",
    "reason": "Use of shutil.rmtree to remove directories"
  },
  {
    "line": 66,
    "text": "        ...",
    "annotation": "\u2705 Best Practice: Use of os.rename to rename files",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2644
    ],
    "start_token": 317,
    "end_token": 325,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      28686,
      13,
      918,
      480,
      284,
      36265,
      3696
    ],
    "label": "best_practice",
    "reason": "Use of os.rename to rename files"
  },
  {
    "line": 66,
    "text": "        ...",
    "annotation": "\u2705 Best Practice: Use of contextlib.contextmanager for resource management",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2644
    ],
    "start_token": 325,
    "end_token": 333,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      4732,
      8019,
      13,
      22866,
      37153,
      329,
      8271,
      4542
    ],
    "label": "best_practice",
    "reason": "Use of contextlib.contextmanager for resource management"
  },
  {
    "line": 87,
    "text": "    # Remove filename dir",
    "annotation": "\u2705 Best Practice: Use of os.path.expanduser to handle user directories",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      17220,
      29472,
      26672
    ],
    "start_token": 333,
    "end_token": 340,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      28686,
      13,
      6978,
      13,
      11201,
      392,
      7220,
      284,
      5412,
      2836,
      29196
    ],
    "label": "best_practice",
    "reason": "Use of os.path.expanduser to handle user directories"
  },
  {
    "line": 89,
    "text": "        shutil.rmtree(file_path)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential race condition if directory is created/deleted by another process",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4423,
      346,
      13,
      81,
      16762,
      631,
      7,
      7753,
      62,
      6978,
      8
    ],
    "start_token": 340,
    "end_token": 358,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      3234,
      4006,
      611,
      8619,
      318,
      2727,
      14,
      2934,
      33342,
      416,
      1194,
      1429
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential race condition if directory is created/deleted by another process"
  },
  {
    "line": 92,
    "text": "    os.rename(tar_file, file_path)",
    "annotation": "\u2705 Best Practice: Use of NamedTemporaryFile for temporary file creation",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      28686,
      13,
      918,
      480,
      7,
      18870,
      62,
      7753,
      11,
      2393,
      62,
      6978,
      8
    ],
    "start_token": 358,
    "end_token": 374,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      34441,
      12966,
      5551,
      8979,
      329,
      8584,
      2393,
      6282
    ],
    "label": "best_practice",
    "reason": "Use of NamedTemporaryFile for temporary file creation"
  },
  {
    "line": 98,
    "text": "    After the call is finished, the archive file and directory will be deleted.",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): os.rename can fail if the target file exists",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2293,
      262,
      869,
      318,
      5201,
      11,
      262,
      15424,
      2393,
      290,
      8619,
      481,
      307,
      13140,
      13
    ],
    "start_token": 374,
    "end_token": 392,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      28686,
      13,
      918,
      480,
      460,
      2038,
      611,
      262,
      2496,
      2393,
      7160
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "os.rename can fail if the target file exists"
  },
  {
    "line": 100,
    "text": "    Implementation process:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential race condition if directory is created/deleted by another process",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      46333,
      1429,
      25
    ],
    "start_token": 392,
    "end_token": 398,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      3234,
      4006,
      611,
      8619,
      318,
      2727,
      14,
      2934,
      33342,
      416,
      1194,
      1429
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential race condition if directory is created/deleted by another process"
  },
  {
    "line": 102,
    "text": "        2. 'buffer' write to 'tempfile'",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): shutil.unpack_archive can overwrite files in the target directory",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      362,
      13,
      705,
      22252,
      6,
      3551,
      284,
      705,
      29510,
      7753,
      6
    ],
    "start_token": 398,
    "end_token": 416,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      4423,
      346,
      13,
      403,
      8002,
      62,
      17474,
      460,
      49312,
      3696,
      287,
      262,
      2496,
      8619
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "shutil.unpack_archive can overwrite files in the target directory"
  },
  {
    "line": 105,
    "text": "        5. remove 'tempfile' and 'tempfile directory'",
    "annotation": "\u2705 Best Practice: Logging exceptions for debugging purposes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      642,
      13,
      4781,
      705,
      29510,
      7753,
      6,
      290,
      705,
      29510,
      7753,
      8619,
      6
    ],
    "start_token": 416,
    "end_token": 436,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5972,
      2667,
      13269,
      329,
      28769,
      4959
    ],
    "label": "best_practice",
    "reason": "Logging exceptions for debugging purposes"
  },
  {
    "line": 109,
    "text": "    :return: unpack archive directory path",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): os.unlink can fail if the file does not exist",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1058,
      7783,
      25,
      555,
      8002,
      15424,
      8619,
      3108
    ],
    "start_token": 436,
    "end_token": 447,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      28686,
      13,
      403,
      8726,
      460,
      2038,
      611,
      262,
      2393,
      857,
      407,
      2152
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "os.unlink can fail if the file does not exist"
  },
  {
    "line": 112,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): shutil.rmtree can fail if the directory does not exist",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 447,
    "end_token": 447,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      4423,
      346,
      13,
      81,
      16762,
      631,
      460,
      2038,
      611,
      262,
      8619,
      857,
      407,
      2152
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "shutil.rmtree can fail if the directory does not exist"
  },
  {
    "line": 114,
    "text": "        >>> with open('test_unpack.tar.gz') as fp:",
    "annotation": "\u2705 Best Practice: Use of contextlib.contextmanager for resource management",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      13163,
      351,
      1280,
      10786,
      9288,
      62,
      403,
      8002,
      13,
      18870,
      13,
      34586,
      11537,
      355,
      277,
      79,
      25
    ],
    "start_token": 447,
    "end_token": 471,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      4732,
      8019,
      13,
      22866,
      37153,
      329,
      8271,
      4542
    ],
    "label": "best_practice",
    "reason": "Use of contextlib.contextmanager for resource management"
  },
  {
    "line": 108,
    "text": "    :param format: archive format: one of \"zip\", \"tar\", \"gztar\", \"bztar\", or \"xztar\"",
    "annotation": "\u2705 Best Practice: Use os.path.expanduser to handle user directories correctly",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1058,
      17143,
      5794,
      25,
      15424,
      5794,
      25,
      530,
      286,
      366,
      13344,
      1600,
      366,
      18870,
      1600,
      366,
      34586,
      18870,
      1600,
      366,
      65,
      89,
      18870,
      1600,
      393,
      366,
      87,
      89,
      18870,
      1
    ],
    "start_token": 471,
    "end_token": 504,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      28686,
      13,
      6978,
      13,
      11201,
      392,
      7220,
      284,
      5412,
      2836,
      29196,
      9380
    ],
    "label": "best_practice",
    "reason": "Use os.path.expanduser to handle user directories correctly"
  },
  {
    "line": 110,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential directory traversal if temp_dir is influenced by user input",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 504,
    "end_token": 504,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      8619,
      33038,
      282,
      611,
      20218,
      62,
      15908,
      318,
      12824,
      416,
      2836,
      5128
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential directory traversal if temp_dir is influenced by user input"
  },
  {
    "line": 112,
    "text": "",
    "annotation": "\u2705 Best Practice: Use os.makedirs to ensure the directory is created if it doesn't exist",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 504,
    "end_token": 504,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      28686,
      13,
      76,
      4335,
      17062,
      284,
      4155,
      262,
      8619,
      318,
      2727,
      611,
      340,
      1595,
      470,
      2152
    ],
    "label": "best_practice",
    "reason": "Use os.makedirs to ensure the directory is created if it doesn't exist"
  },
  {
    "line": 114,
    "text": "        >>> with open('test_unpack.tar.gz') as fp:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Using a predictable temporary directory can lead to security risks",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      13163,
      351,
      1280,
      10786,
      9288,
      62,
      403,
      8002,
      13,
      18870,
      13,
      34586,
      11537,
      355,
      277,
      79,
      25
    ],
    "start_token": 504,
    "end_token": 528,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      8554,
      257,
      20039,
      8584,
      8619,
      460,
      1085,
      284,
      2324,
      7476
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Using a predictable temporary directory can lead to security risks"
  },
  {
    "line": 116,
    "text": "        ...",
    "annotation": "\ud83e\udde0 ML Signal: Writing buffer data to a temporary file",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2644
    ],
    "start_token": 528,
    "end_token": 536,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      22183,
      11876,
      1366,
      284,
      257,
      8584,
      2393
    ],
    "label": "ml_signal",
    "reason": "Writing buffer data to a temporary file"
  },
  {
    "line": 117,
    "text": "        >>> with unpack_archive_with_buffer(buffer) as temp_dir:",
    "annotation": "\ud83e\udde0 ML Signal: Yielding file path for further processing",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      13163,
      351,
      555,
      8002,
      62,
      17474,
      62,
      4480,
      62,
      22252,
      7,
      22252,
      8,
      355,
      20218,
      62,
      15908,
      25
    ],
    "start_token": 536,
    "end_token": 561,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      575,
      30449,
      2393,
      3108,
      329,
      2252,
      7587
    ],
    "label": "ml_signal",
    "reason": "Yielding file path for further processing"
  },
  {
    "line": 117,
    "text": "        >>> with unpack_archive_with_buffer(buffer) as temp_dir:",
    "annotation": "\u2705 Best Practice: Use contextlib.contextmanager for resource management",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      13163,
      351,
      555,
      8002,
      62,
      17474,
      62,
      4480,
      62,
      22252,
      7,
      22252,
      8,
      355,
      20218,
      62,
      15908,
      25
    ],
    "start_token": 561,
    "end_token": 586,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      4732,
      8019,
      13,
      22866,
      37153,
      329,
      8271,
      4542
    ],
    "label": "best_practice",
    "reason": "Use contextlib.contextmanager for resource management"
  },
  {
    "line": 117,
    "text": "        >>> with unpack_archive_with_buffer(buffer) as temp_dir:",
    "annotation": "\u2705 Best Practice: Docstring provides a clear description of the function's purpose and parameters",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      13163,
      351,
      555,
      8002,
      62,
      17474,
      62,
      4480,
      62,
      22252,
      7,
      22252,
      8,
      355,
      20218,
      62,
      15908,
      25
    ],
    "start_token": 586,
    "end_token": 611,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      14432,
      8841,
      3769,
      257,
      1598,
      6764,
      286,
      262,
      2163,
      338,
      4007,
      290,
      10007
    ],
    "label": "best_practice",
    "reason": "Docstring provides a clear description of the function's purpose and parameters"
  },
  {
    "line": 136,
    "text": "",
    "annotation": "\u2705 Best Practice: Converts string paths to Path objects for consistency",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 611,
    "end_token": 611,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      1482,
      24040,
      4731,
      13532,
      284,
      10644,
      5563,
      329,
      15794
    ],
    "label": "best_practice",
    "reason": "Converts string paths to Path objects for consistency"
  },
  {
    "line": 139,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Raises NotImplementedError for unsupported types, which could be unexpected",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 611,
    "end_token": 611,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      7567,
      2696,
      1892,
      3546,
      1154,
      12061,
      12331,
      329,
      24222,
      3858,
      11,
      543,
      714,
      307,
      10059
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Raises NotImplementedError for unsupported types, which could be unexpected"
  },
  {
    "line": 139,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of file context management with 'with' statement",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 611,
    "end_token": 611,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2393,
      4732,
      4542,
      351,
      705,
      4480,
      6,
      2643
    ],
    "label": "ml_signal",
    "reason": "Usage of file context management with 'with' statement"
  }
]