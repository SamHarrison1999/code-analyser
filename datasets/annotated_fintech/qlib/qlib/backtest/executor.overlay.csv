annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Importing specific classes or functions from a module can improve code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 17267, 278, 2176, 6097, 393, 5499, 422, 257, 8265, 460, 2987, 2438, 1100, 1799, 290, 5529, 1799, 13]",0.5,5,best_practice,5,Importing specific classes or functions from a module can improve code readability and maintainability.,,0,from collections import defaultdict,"[6738, 17268, 1330, 4277, 11600]"
‚úÖ Best Practice: Using type hints improves code readability and helps with static analysis.,"[26486, 227, 6705, 19939, 25, 8554, 2099, 20269, 19575, 2438, 1100, 1799, 290, 5419, 351, 9037, 3781, 13]",0.5,23,best_practice,7,Using type hints improves code readability and helps with static analysis.,,5,"from typing import Any, Dict, Generator, List, Tuple, Union, cast","[6738, 19720, 1330, 4377, 11, 360, 713, 11, 35986, 11, 7343, 11, 309, 29291, 11, 4479, 11, 3350]"
"üß† ML Signal: Importing pandas suggests data manipulation or analysis, which is common in ML workflows.","[8582, 100, 254, 10373, 26484, 25, 17267, 278, 19798, 292, 5644, 1366, 17512, 393, 3781, 11, 543, 318, 2219, 287, 10373, 670, 44041, 13]",0.5,23,ml_signal,10,"Importing pandas suggests data manipulation or analysis, which is common in ML workflows.",,23,,[]
"üß† ML Signal: Importing from qlib indicates usage of a quantitative trading library, relevant for financial ML models.","[8582, 100, 254, 10373, 26484, 25, 17267, 278, 422, 10662, 8019, 9217, 8748, 286, 257, 26610, 7313, 5888, 11, 5981, 329, 3176, 10373, 4981, 13]",0.5,35,ml_signal,13,"Importing from qlib indicates usage of a quantitative trading library, relevant for financial ML models.",,23,from qlib.log import get_module_logger,"[6738, 10662, 8019, 13, 6404, 1330, 651, 62, 21412, 62, 6404, 1362]"
‚úÖ Best Practice: Using a logger is a best practice for tracking and debugging application behavior.,"[26486, 227, 6705, 19939, 25, 8554, 257, 49706, 318, 257, 1266, 3357, 329, 9646, 290, 28769, 3586, 4069, 13]",0.5,45,best_practice,15,Using a logger is a best practice for tracking and debugging application behavior.,,35,from ..strategy.base import BaseStrategy,"[6738, 11485, 2536, 4338, 13, 8692, 1330, 7308, 13290, 4338]"
‚úÖ Best Practice: Docstring provides detailed parameter descriptions and examples,"[26486, 227, 6705, 19939, 25, 14432, 8841, 3769, 6496, 11507, 16969, 290, 6096]",1.0,59,best_practice,32,Docstring provides detailed parameter descriptions and examples,,45,"        verbose: bool = False,","[220, 220, 220, 220, 220, 220, 220, 15942, 577, 25, 20512, 796, 10352, 11]"
üß† ML Signal: Initialization of class attributes with parameters,"[8582, 100, 254, 10373, 26484, 25, 20768, 1634, 286, 1398, 12608, 351, 10007]",1.0,79,ml_signal,101,Initialization of class attributes with parameters,,59,"            common infrastructure for backtesting, may including:","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2219, 6884, 329, 736, 33407, 11, 743, 1390, 25]"
‚ö†Ô∏è SAST Risk (Low): Mutable default argument for `indicator_config`,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 13859, 540, 4277, 4578, 329, 4600, 521, 26407, 62, 11250, 63]",1.0,98,sast_risk,103,Mutable default argument for `indicator_config`,Low,79,                trade account for trading,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 3292, 1848, 329, 7313]"
üß† ML Signal: Boolean flags for feature toggles,"[8582, 100, 254, 10373, 26484, 25, 41146, 9701, 329, 3895, 284, 32723]",1.0,118,ml_signal,105,Boolean flags for feature toggles,,98,                exchange that provides market info,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 5163, 326, 3769, 1910, 7508]"
üß† ML Signal: Boolean flags for feature toggles,"[8582, 100, 254, 10373, 26484, 25, 41146, 9701, 329, 3895, 284, 32723]",1.0,130,ml_signal,107,Boolean flags for feature toggles,,118,        settle_type : str,"[220, 220, 220, 220, 220, 220, 220, 12259, 62, 4906, 1058, 965]"
üß† ML Signal: Boolean flags for feature toggles,"[8582, 100, 254, 10373, 26484, 25, 41146, 9701, 329, 3895, 284, 32723]",1.0,138,ml_signal,109,Boolean flags for feature toggles,,130,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
üß† ML Signal: Method call with parameters,"[8582, 100, 254, 10373, 26484, 25, 11789, 869, 351, 10007]",1.0,152,ml_signal,113,Method call with parameters,,138,        self.verbose = verbose,"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 19011, 577, 796, 15942, 577]"
üß† ML Signal: Method call with parameters,"[8582, 100, 254, 10373, 26484, 25, 11789, 869, 351, 10007]",1.0,170,ml_signal,115,Method call with parameters,,152,        self._trade_exchange = trade_exchange,"[220, 220, 220, 220, 220, 220, 220, 2116, 13557, 25351, 62, 1069, 3803, 796, 3292, 62, 1069, 3803]"
‚ö†Ô∏è SAST Risk (Low): Potential logging of sensitive information,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 18931, 286, 8564, 1321]",1.0,207,sast_risk,119,Potential logging of sensitive information,Low,170,"        self.reset(start_time=start_time, end_time=end_time, common_infra=common_infra)","[220, 220, 220, 220, 220, 220, 220, 2116, 13, 42503, 7, 9688, 62, 2435, 28, 9688, 62, 2435, 11, 886, 62, 2435, 28, 437, 62, 2435, 11, 2219, 62, 10745, 430, 28, 11321, 62, 10745, 430, 8]"
üß† ML Signal: Use of defaultdict for automatic dictionary value initialization,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4277, 11600, 329, 11353, 22155, 1988, 37588]",1.0,222,ml_signal,120,Use of defaultdict for automatic dictionary value initialization,,207,        if common_infra is None:,"[220, 220, 220, 220, 220, 220, 220, 611, 2219, 62, 10745, 430, 318, 6045, 25]"
‚úÖ Best Practice: Check if the object has an attribute before accessing it,"[26486, 227, 6705, 19939, 25, 6822, 611, 262, 2134, 468, 281, 11688, 878, 22534, 340]",0.5,259,best_practice,119,Check if the object has an attribute before accessing it,,222,"        self.reset(start_time=start_time, end_time=end_time, common_infra=common_infra)","[220, 220, 220, 220, 220, 220, 220, 2116, 13, 42503, 7, 9688, 62, 2435, 28, 9688, 62, 2435, 11, 886, 62, 2435, 28, 437, 62, 2435, 11, 2219, 62, 10745, 430, 28, 11321, 62, 10745, 430, 8]"
‚úÖ Best Practice: Use update method for merging or updating objects,"[26486, 227, 6705, 19939, 25, 5765, 4296, 2446, 329, 35981, 393, 19698, 5563]",0.5,274,best_practice,123,Use update method for merging or updating objects,,259,        # record deal order amount in one day,"[220, 220, 220, 220, 220, 220, 220, 1303, 1700, 1730, 1502, 2033, 287, 530, 1110]"
üß† ML Signal: Method call pattern for resetting infrastructure,"[8582, 100, 254, 10373, 26484, 25, 11789, 869, 3912, 329, 13259, 889, 6884]",1.0,288,ml_signal,125,Method call pattern for resetting infrastructure,,274,        self.deal_day = None,"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 31769, 62, 820, 796, 6045]"
üß† ML Signal: Conditional logic based on the presence of a key,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9156, 1912, 319, 262, 4931, 286, 257, 1994]",1.0,302,ml_signal,125,Conditional logic based on the presence of a key,,288,        self.deal_day = None,"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 31769, 62, 820, 796, 6045]"
üß† ML Signal: Use of copy.copy for conditional object copying,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4866, 13, 30073, 329, 26340, 2134, 23345]",0.5,318,ml_signal,130,Use of copy.copy for conditional object copying,,302,            - reset trade_account,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 532, 13259, 3292, 62, 23317]"
üß† ML Signal: Method call pattern for resetting account with parameters,"[8582, 100, 254, 10373, 26484, 25, 11789, 869, 3912, 329, 13259, 889, 1848, 351, 10007]",1.0,327,ml_signal,134,Method call pattern for resetting account with parameters,,318,        else:,"[220, 220, 220, 220, 220, 220, 220, 2073, 25]"
‚úÖ Best Practice: Include a docstring to describe the method's purpose.,"[26486, 227, 6705, 19939, 25, 40348, 257, 2205, 8841, 284, 6901, 262, 2446, 338, 4007, 13]",0.5,349,best_practice,133,Include a docstring to describe the method's purpose.,,327,            self.common_infra = common_infra,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 11321, 62, 10745, 430, 796, 2219, 62, 10745, 430]"
‚úÖ Best Practice: Use of getattr with a default value to avoid AttributeError.,"[26486, 227, 6705, 19939, 25, 5765, 286, 651, 35226, 351, 257, 4277, 1988, 284, 3368, 3460, 4163, 12331, 13]",1.0,358,best_practice,134,Use of getattr with a default value to avoid AttributeError.,,349,        else:,"[220, 220, 220, 220, 220, 220, 220, 2073, 25]"
‚úÖ Best Practice: Method docstring provides a clear explanation of the method's purpose,"[26486, 227, 6705, 19939, 25, 11789, 2205, 8841, 3769, 257, 1598, 7468, 286, 262, 2446, 338, 4007]",1.0,358,best_practice,136,Method docstring provides a clear explanation of the method's purpose,,358,,[]
"üß† ML Signal: Accessing a centralized resource, indicating a pattern of resource management","[8582, 100, 254, 10373, 26484, 25, 8798, 278, 257, 29024, 8271, 11, 12739, 257, 3912, 286, 8271, 4542]",0.5,376,ml_signal,142,"Accessing a centralized resource, indicating a pattern of resource management",,358,            # 1. So positions are shared,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 352, 13, 1406, 6116, 389, 4888]"
‚úÖ Best Practice: Use of type hints for function parameters and return type,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 20269, 329, 2163, 10007, 290, 1441, 2099]",1.0,409,best_practice,143,Use of type hints for function parameters and return type,,376,"            # 2. Others are not shared, so each level has it own metrics (portfolio and trading metrics)","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 362, 13, 12691, 389, 407, 4888, 11, 523, 1123, 1241, 468, 340, 898, 20731, 357, 634, 13652, 290, 7313, 20731, 8]"
üß† ML Signal: Conditional logic based on presence of specific keys in kwargs,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9156, 1912, 319, 4931, 286, 2176, 8251, 287, 479, 86, 22046]",0.5,457,ml_signal,149,Conditional logic based on presence of specific keys in kwargs,,409,"            self.trade_account.reset(freq=self.time_per_step, port_metr_enabled=self.generate_portfolio_metrics)","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 25351, 62, 23317, 13, 42503, 7, 19503, 80, 28, 944, 13, 2435, 62, 525, 62, 9662, 11, 2493, 62, 4164, 81, 62, 25616, 28, 944, 13, 8612, 378, 62, 634, 13652, 62, 4164, 10466, 8]"
üß† ML Signal: Use of method chaining and parameter passing,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2446, 442, 1397, 290, 11507, 6427]",0.5,471,ml_signal,152,Use of method chaining and parameter passing,,457,    def trade_exchange(self) -> Exchange:,"[220, 220, 220, 825, 3292, 62, 1069, 3803, 7, 944, 8, 4613, 12516, 25]"
üß† ML Signal: Conditional logic based on parameter presence,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9156, 1912, 319, 11507, 4931]",0.5,471,ml_signal,155,Conditional logic based on parameter presence,,471,,[]
‚úÖ Best Practice: Include a docstring to describe the method's purpose and return value,"[26486, 227, 6705, 19939, 25, 40348, 257, 2205, 8841, 284, 6901, 262, 2446, 338, 4007, 290, 1441, 1988]",1.0,488,best_practice,153,Include a docstring to describe the method's purpose and return value,,471,"        """"""get trade exchange in a prioritized order""""""","[220, 220, 220, 220, 220, 220, 220, 37227, 1136, 3292, 5163, 287, 257, 19086, 1143, 1502, 37811]"
‚úÖ Best Practice: Use of type hinting for return value improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 9254, 278, 329, 1441, 1988, 19575, 2438, 1100, 1799, 290, 5529, 1799]",1.0,488,best_practice,155,Use of type hinting for return value improves code readability and maintainability,,488,,[]
‚úÖ Best Practice: Use of type hinting for return value improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 9254, 278, 329, 1441, 1988, 19575, 2438, 1100, 1799, 290, 5529, 1799]",1.0,488,best_practice,155,Use of type hinting for return value improves code readability and maintainability,,488,,[]
"üß† ML Signal: Method delegation pattern, where a method calls another method on a different object","[8582, 100, 254, 10373, 26484, 25, 11789, 22635, 3912, 11, 810, 257, 2446, 3848, 1194, 2446, 319, 257, 1180, 2134]",1.0,505,ml_signal,157,"Method delegation pattern, where a method calls another method on a different object",,488,    def trade_calendar(self) -> TradeCalendarManager:,"[220, 220, 220, 825, 3292, 62, 9948, 9239, 7, 944, 8, 4613, 9601, 9771, 9239, 13511, 25]"
‚úÖ Best Practice: Docstring provides a clear explanation of the function's purpose and parameters,"[26486, 227, 6705, 19939, 25, 14432, 8841, 3769, 257, 1598, 7468, 286, 262, 2163, 338, 4007, 290, 10007]",1.0,513,best_practice,158,Docstring provides a clear explanation of the function's purpose and parameters,,505,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚úÖ Best Practice: Using a dictionary to store return values allows for flexible data handling,"[26486, 227, 6705, 19939, 25, 8554, 257, 22155, 284, 3650, 1441, 3815, 3578, 329, 12846, 1366, 9041]",1.0,538,best_practice,172,Using a dictionary to store return values allows for flexible data handling,,513,"            end_time = kwargs.get(""end_time"")","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 886, 62, 2435, 796, 479, 86, 22046, 13, 1136, 7203, 437, 62, 2435, 4943]"
‚ö†Ô∏è SAST Risk (Low): Potential risk if 'execute_result' key is not present in 'return_value',"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 705, 41049, 62, 20274, 6, 1994, 318, 407, 1944, 287, 705, 7783, 62, 8367, 6]",0.5,563,sast_risk,175,Potential risk if 'execute_result' key is not present in 'return_value',Low,538,            self.reset_common_infra(common_infra),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 42503, 62, 11321, 62, 10745, 430, 7, 11321, 62, 10745, 430, 8]"
‚úÖ Best Practice: Include a docstring to describe the function's purpose and usage.,"[26486, 227, 6705, 19939, 25, 40348, 257, 2205, 8841, 284, 6901, 262, 2163, 338, 4007, 290, 8748, 13]",1.0,574,best_practice,180,Include a docstring to describe the function's purpose and usage.,,563,    def finished(self) -> bool:,"[220, 220, 220, 825, 5201, 7, 944, 8, 4613, 20512, 25]"
‚ö†Ô∏è SAST Risk (Low): Potential for ValueError if `range_limit` is specified for atomic executor,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 11052, 12331, 611, 4600, 9521, 62, 32374, 63, 318, 7368, 329, 17226, 3121, 273]",0.5,590,sast_risk,223,Potential for ValueError if `range_limit` is specified for atomic executor,Low,574,"        Tuple[List[object], dict]:","[220, 220, 220, 220, 220, 220, 220, 309, 29291, 58, 8053, 58, 15252, 4357, 8633, 5974]"
‚ö†Ô∏è SAST Risk (Low): AssertionError risk if `yield_res` is not a tuple of length 2,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 861, 295, 12331, 2526, 611, 4600, 88, 1164, 62, 411, 63, 318, 407, 257, 46545, 286, 4129, 362]",0.5,603,sast_risk,231,AssertionError risk if `yield_res` is not a tuple of length 2,Low,590,"        level: int = 0,","[220, 220, 220, 220, 220, 220, 220, 1241, 25, 493, 796, 657, 11]"
üß† ML Signal: Updates to trade account and calendar could be used to model trading behavior,"[8582, 100, 254, 10373, 26484, 25, 28090, 284, 3292, 1848, 290, 11845, 714, 307, 973, 284, 2746, 7313, 4069]",0.5,617,ml_signal,235,Updates to trade account and calendar could be used to model trading behavior,,603,        his function will make a step forward,"[220, 220, 220, 220, 220, 220, 220, 465, 2163, 481, 787, 257, 2239, 2651]"
‚úÖ Best Practice: Include type hints for better code readability and maintainability,"[26486, 227, 6705, 19939, 25, 40348, 2099, 20269, 329, 1365, 2438, 1100, 1799, 290, 5529, 1799]",1.0,632,best_practice,250,Include type hints for better code readability and maintainability,,617,        execute_result : List[object],"[220, 220, 220, 220, 220, 220, 220, 12260, 62, 20274, 1058, 7343, 58, 15252, 60]"
"üß† ML Signal: Method returning a list of objects, indicating a pattern of object collection","[8582, 100, 254, 10373, 26484, 25, 11789, 8024, 257, 1351, 286, 5563, 11, 12739, 257, 3912, 286, 2134, 4947]",1.0,663,ml_signal,253,"Method returning a list of objects, indicating a pattern of object collection",,632,"            1) This is necessary,  The return value of generator will be used in NestedExecutor","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 352, 8, 770, 318, 3306, 11, 220, 383, 1441, 1988, 286, 17301, 481, 307, 973, 287, 399, 7287, 23002, 38409]"
‚úÖ Best Practice: Docstring provides clear parameter descriptions,"[26486, 227, 6705, 19939, 25, 14432, 8841, 3769, 1598, 11507, 16969]",1.0,679,best_practice,275,Docstring provides clear parameter descriptions,,663,"        if isinstance(obj, GeneratorType):","[220, 220, 220, 220, 220, 220, 220, 611, 318, 39098, 7, 26801, 11, 35986, 6030, 2599]"
‚ö†Ô∏è SAST Risk (Low): Using mutable default argument 'indicator_config' can lead to unexpected behavior,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 4517, 540, 4277, 4578, 705, 521, 26407, 62, 11250, 6, 460, 1085, 284, 10059, 4069]",0.5,701,sast_risk,291,Using mutable default argument 'indicator_config' can lead to unexpected behavior,Low,679,"            indicator_config=self.indicator_config,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 16916, 62, 11250, 28, 944, 13, 521, 26407, 62, 11250, 11]"
üß† ML Signal: Use of boolean flags to control behavior,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 25131, 9701, 284, 1630, 4069]",1.0,710,ml_signal,303,Use of boolean flags to control behavior,,701,        return res,"[220, 220, 220, 220, 220, 220, 220, 1441, 581]"
üß† ML Signal: Use of boolean flags to control behavior,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 25131, 9701, 284, 1630, 4069]",1.0,719,ml_signal,303,Use of boolean flags to control behavior,,710,        return res,"[220, 220, 220, 220, 220, 220, 220, 1441, 581]"
‚úÖ Best Practice: Explicitly calling superclass constructor,"[26486, 227, 6705, 19939, 25, 11884, 306, 4585, 2208, 4871, 23772]",0.5,728,best_practice,303,Explicitly calling superclass constructor,,719,        return res,"[220, 220, 220, 220, 220, 220, 220, 1441, 581]"
‚úÖ Best Practice: Docstring provides a brief description of the method's purpose.,"[26486, 227, 6705, 19939, 25, 14432, 8841, 3769, 257, 4506, 6764, 286, 262, 2446, 338, 4007, 13]",1.0,732,best_practice,315,Docstring provides a brief description of the method's purpose.,,728,"    """"""","[220, 220, 220, 37227]"
üß† ML Signal: Use of inheritance and method overriding.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 24155, 290, 2446, 44987, 13]",1.0,752,ml_signal,320,Use of inheritance and method overriding.,,732,"        inner_executor: Union[BaseExecutor, dict],","[220, 220, 220, 220, 220, 220, 220, 8434, 62, 18558, 38409, 25, 4479, 58, 14881, 23002, 38409, 11, 8633, 4357]"
üß† ML Signal: Method chaining pattern for resetting infrastructure.,"[8582, 100, 254, 10373, 26484, 25, 11789, 442, 1397, 3912, 329, 13259, 889, 6884, 13]",1.0,776,ml_signal,322,Method chaining pattern for resetting infrastructure.,,752,"        start_time: Union[str, pd.Timestamp] = None,","[220, 220, 220, 220, 220, 220, 220, 923, 62, 2435, 25, 4479, 58, 2536, 11, 279, 67, 13, 14967, 27823, 60, 796, 6045, 11]"
üß† ML Signal: Method chaining pattern for resetting infrastructure.,"[8582, 100, 254, 10373, 26484, 25, 11789, 442, 1397, 3912, 329, 13259, 889, 6884, 13]",1.0,791,ml_signal,324,Method chaining pattern for resetting infrastructure.,,776,"        indicator_config: dict = {},","[220, 220, 220, 220, 220, 220, 220, 16916, 62, 11250, 25, 8633, 796, 1391, 5512]"
"üß† ML Signal: Method initializes trading with a decision, indicating a pattern of decision-based initialization.","[8582, 100, 254, 10373, 26484, 25, 11789, 4238, 4340, 7313, 351, 257, 2551, 11, 12739, 257, 3912, 286, 2551, 12, 3106, 37588, 13]",1.0,815,ml_signal,323,"Method initializes trading with a decision, indicating a pattern of decision-based initialization.",,791,"        end_time: Union[str, pd.Timestamp] = None,","[220, 220, 220, 220, 220, 220, 220, 886, 62, 2435, 25, 4479, 58, 2536, 11, 279, 67, 13, 14967, 27823, 60, 796, 6045, 11]"
‚úÖ Best Practice: Resetting executor with specific start and end times ensures clear state management.,"[26486, 227, 6705, 19939, 25, 30027, 889, 3121, 273, 351, 2176, 923, 290, 886, 1661, 19047, 1598, 1181, 4542, 13]",1.0,834,best_practice,325,Resetting executor with specific start and end times ensures clear state management.,,815,"        generate_portfolio_metrics: bool = False,","[220, 220, 220, 220, 220, 220, 220, 7716, 62, 634, 13652, 62, 4164, 10466, 25, 20512, 796, 10352, 11]"
"üß† ML Signal: Fetching infrastructure level details, indicating a pattern of hierarchical infrastructure management.","[8582, 100, 254, 10373, 26484, 25, 376, 7569, 278, 6884, 1241, 3307, 11, 12739, 257, 3912, 286, 38958, 6884, 4542, 13]",0.5,849,ml_signal,327,"Fetching infrastructure level details, indicating a pattern of hierarchical infrastructure management.",,834,"        track_data: bool = False,","[220, 220, 220, 220, 220, 220, 220, 2610, 62, 7890, 25, 20512, 796, 10352, 11]"
‚úÖ Best Practice: Setting sub-level infrastructure promotes modular and maintainable code.,"[26486, 227, 6705, 19939, 25, 25700, 850, 12, 5715, 6884, 21068, 26507, 290, 5529, 540, 2438, 13]",1.0,866,best_practice,329,Setting sub-level infrastructure promotes modular and maintainable code.,,849,"        align_range_limit: bool = True,","[220, 220, 220, 220, 220, 220, 220, 10548, 62, 9521, 62, 32374, 25, 20512, 796, 6407, 11]"
"üß† ML Signal: Resetting strategy with infrastructure and decision, indicating a pattern of strategy configuration.","[8582, 100, 254, 10373, 26484, 25, 30027, 889, 4811, 351, 6884, 290, 2551, 11, 12739, 257, 3912, 286, 4811, 8398, 13]",1.0,879,ml_signal,331,"Resetting strategy with infrastructure and decision, indicating a pattern of strategy configuration.",,866,"        **kwargs: Any,","[220, 220, 220, 220, 220, 220, 220, 12429, 46265, 22046, 25, 4377, 11]"
‚úÖ Best Practice: Use of descriptive variable names improves code readability.,"[26486, 227, 6705, 19939, 25, 5765, 286, 35644, 7885, 3891, 19575, 2438, 1100, 1799, 13]",0.5,896,best_practice,329,Use of descriptive variable names improves code readability.,,879,"        align_range_limit: bool = True,","[220, 220, 220, 220, 220, 220, 220, 10548, 62, 9521, 62, 32374, 25, 20512, 796, 6407, 11]"
‚ö†Ô∏è SAST Risk (Low): Potential for NoneType error if `trade_decision.update` returns None unexpectedly.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 6045, 6030, 4049, 611, 4600, 25351, 62, 12501, 1166, 13, 19119, 63, 5860, 6045, 25884, 13]",0.5,909,sast_risk,331,Potential for NoneType error if `trade_decision.update` returns None unexpectedly.,Low,896,"        **kwargs: Any,","[220, 220, 220, 220, 220, 220, 220, 12429, 46265, 22046, 25, 4377, 11]"
üß† ML Signal: Pattern of altering a decision object could be used to train models on decision-making processes.,"[8582, 100, 254, 10373, 26484, 25, 23939, 286, 29057, 257, 2551, 2134, 714, 307, 973, 284, 4512, 4981, 319, 2551, 12, 8601, 7767, 13]",0.5,917,ml_signal,334,Pattern of altering a decision object could be used to train models on decision-making processes.,,909,        Parameters,"[220, 220, 220, 220, 220, 220, 220, 40117]"
‚úÖ Best Practice: Explicit return of the trade_decision enhances clarity of function output.,"[26486, 227, 6705, 19939, 25, 11884, 1441, 286, 262, 3292, 62, 12501, 1166, 32479, 16287, 286, 2163, 5072, 13]",0.5,925,best_practice,334,Explicit return of the trade_decision enhances clarity of function output.,,917,        Parameters,"[220, 220, 220, 220, 220, 220, 220, 40117]"
"‚ö†Ô∏è SAST Risk (Low): Use of assert statement can be disabled with optimization flags, consider using explicit error handling","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 6818, 2643, 460, 307, 10058, 351, 23989, 9701, 11, 2074, 1262, 7952, 4049, 9041]",0.5,925,sast_risk,362,"Use of assert statement can be disabled with optimization flags, consider using explicit error handling",Low,925,,[]
‚úÖ Best Practice: Docstring provides a clear explanation of the method's purpose and parameters,"[26486, 227, 6705, 19939, 25, 14432, 8841, 3769, 257, 1598, 7468, 286, 262, 2446, 338, 4007, 290, 10007]",0.5,940,best_practice,372,Docstring provides a clear explanation of the method's purpose and parameters,,925,"            **kwargs,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 12429, 46265, 22046, 11]"
"üß† ML Signal: Method calls another method on an object, indicating a pattern of delegation or composition","[8582, 100, 254, 10373, 26484, 25, 11789, 3848, 1194, 2446, 319, 281, 2134, 11, 12739, 257, 3912, 286, 22635, 393, 11742]",0.5,977,ml_signal,380,"Method calls another method on an object, indicating a pattern of delegation or composition",,940,        # NOTE: please refer to the docs of BaseExecutor.reset_common_infra for the meaning of `copy_trade_account`,"[220, 220, 220, 220, 220, 220, 220, 1303, 24550, 25, 3387, 3522, 284, 262, 34165, 286, 7308, 23002, 38409, 13, 42503, 62, 11321, 62, 10745, 430, 329, 262, 3616, 286, 4600, 30073, 62, 25351, 62, 23317, 63]"
‚úÖ Best Practice: Include a docstring to describe the method's purpose,"[26486, 227, 6705, 19939, 25, 40348, 257, 2205, 8841, 284, 6901, 262, 2446, 338, 4007]",1.0,1014,best_practice,380,Include a docstring to describe the method's purpose,,977,        # NOTE: please refer to the docs of BaseExecutor.reset_common_infra for the meaning of `copy_trade_account`,"[220, 220, 220, 220, 220, 220, 220, 1303, 24550, 25, 3387, 3522, 284, 262, 34165, 286, 7308, 23002, 38409, 13, 42503, 62, 11321, 62, 10745, 430, 329, 262, 3616, 286, 4600, 30073, 62, 25351, 62, 23317, 63]"
‚úÖ Best Practice: Docstring provides clarity on what the method returns,"[26486, 227, 6705, 19939, 25, 14432, 8841, 3769, 16287, 319, 644, 262, 2446, 5860]",0.5,1038,best_practice,382,Docstring provides clarity on what the method returns,,1014,        # The first level follow the `copy_trade_account` from the upper level,"[220, 220, 220, 220, 220, 220, 220, 1303, 383, 717, 1241, 1061, 262, 4600, 30073, 62, 25351, 62, 23317, 63, 422, 262, 6727, 1241]"
üß† ML Signal: Use of list unpacking to combine lists,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1351, 8593, 5430, 284, 12082, 8341]",1.0,1038,ml_signal,384,Use of list unpacking to combine lists,,1038,,[]
üß† ML Signal: Use of method calls on objects to retrieve data,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2446, 3848, 319, 5563, 284, 19818, 1366]",0.5,1064,ml_signal,387,Use of method calls on objects to retrieve data,,1038,        self.inner_strategy.reset_common_infra(common_infra),"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 5083, 62, 2536, 4338, 13, 42503, 62, 11321, 62, 10745, 430, 7, 11321, 62, 10745, 430, 8]"
‚úÖ Best Practice: Type hinting for list initialization improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5994, 9254, 278, 329, 1351, 37588, 19575, 2438, 1100, 1799, 290, 5529, 1799]",1.0,1091,best_practice,389,Type hinting for list initialization improves code readability and maintainability,,1064,"    def _init_sub_trading(self, trade_decision: BaseTradeDecision) -> None:","[220, 220, 220, 825, 4808, 15003, 62, 7266, 62, 2213, 4980, 7, 944, 11, 3292, 62, 12501, 1166, 25, 7308, 35965, 10707, 1166, 8, 4613, 6045, 25]"
‚ö†Ô∏è SAST Risk (Low): Use of assert for type checking can be bypassed; consider using explicit type checks,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 6818, 329, 2099, 10627, 460, 307, 17286, 276, 26, 2074, 1262, 7952, 2099, 8794]",0.5,1119,sast_risk,392,Use of assert for type checking can be bypassed; consider using explicit type checks,Low,1091,        sub_level_infra = self.inner_executor.get_level_infra(),"[220, 220, 220, 220, 220, 220, 220, 850, 62, 5715, 62, 10745, 430, 796, 2116, 13, 5083, 62, 18558, 38409, 13, 1136, 62, 5715, 62, 10745, 430, 3419]"
‚úÖ Best Practice: Class docstring provides a brief description of the class purpose,"[26486, 227, 6705, 19939, 25, 5016, 2205, 8841, 3769, 257, 4506, 6764, 286, 262, 1398, 4007]",1.0,1149,best_practice,393,Class docstring provides a brief description of the class purpose,,1119,        self.level_infra.set_sub_level_infra(sub_level_infra),"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 5715, 62, 10745, 430, 13, 2617, 62, 7266, 62, 5715, 62, 10745, 430, 7, 7266, 62, 5715, 62, 10745, 430, 8]"
‚úÖ Best Practice: Constants are defined with clear and descriptive names,"[26486, 227, 6705, 19939, 25, 4757, 1187, 389, 5447, 351, 1598, 290, 35644, 3891]",1.0,1179,best_practice,396,Constants are defined with clear and descriptive names,,1149,"    def _update_trade_decision(self, trade_decision: BaseTradeDecision) -> BaseTradeDecision:","[220, 220, 220, 825, 4808, 19119, 62, 25351, 62, 12501, 1166, 7, 944, 11, 3292, 62, 12501, 1166, 25, 7308, 35965, 10707, 1166, 8, 4613, 7308, 35965, 10707, 1166, 25]"
‚ö†Ô∏è SAST Risk (Low): Using a mutable default value for `indicator_config` can lead to unexpected behavior if the dictionary is modified.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 257, 4517, 540, 4277, 1988, 329, 4600, 521, 26407, 62, 11250, 63, 460, 1085, 284, 10059, 4069, 611, 262, 22155, 318, 9518, 13]",0.5,1196,sast_risk,397,Using a mutable default value for `indicator_config` can lead to unexpected behavior if the dictionary is modified.,Low,1179,        # outer strategy have chance to update decision each iterator,"[220, 220, 220, 220, 220, 220, 220, 1303, 12076, 4811, 423, 2863, 284, 4296, 2551, 1123, 41313]"
‚úÖ Best Practice: Explicitly calling the superclass's __init__ method ensures proper initialization of inherited attributes.,"[26486, 227, 6705, 19939, 25, 11884, 306, 4585, 262, 2208, 4871, 338, 11593, 15003, 834, 2446, 19047, 1774, 37588, 286, 19552, 12608, 13]",0.5,1214,best_practice,416,Explicitly calling the superclass's __init__ method ensures proper initialization of inherited attributes.,,1196,        # - more detailed information will be set into trade decision,"[220, 220, 220, 220, 220, 220, 220, 1303, 532, 517, 6496, 1321, 481, 307, 900, 656, 3292, 2551]"
"üß† ML Signal: The use of `trade_type` indicates a configuration or mode that could influence the behavior of the simulator, useful for ML models to understand different operational modes.","[8582, 100, 254, 10373, 26484, 25, 383, 779, 286, 4600, 25351, 62, 4906, 63, 9217, 257, 8398, 393, 4235, 326, 714, 4588, 262, 4069, 286, 262, 35375, 11, 4465, 329, 10373, 4981, 284, 1833, 1180, 13919, 12881, 13]",0.5,1245,ml_signal,429,"The use of `trade_type` indicates a configuration or mode that could influence the behavior of the simulator, useful for ML models to understand different operational modes.",,1214,            sub_cal: TradeCalendarManager = self.inner_executor.trade_calendar,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 850, 62, 9948, 25, 9601, 9771, 9239, 13511, 796, 2116, 13, 5083, 62, 18558, 38409, 13, 25351, 62, 9948, 9239]"
üß† ML Signal: Usage of a helper function to retrieve orders based on a decision,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 31904, 2163, 284, 19818, 6266, 1912, 319, 257, 2551]",1.0,1272,ml_signal,439,Usage of a helper function to retrieve orders based on a decision,,1245,                # the two lines below is for a special case in RL,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 262, 734, 3951, 2174, 318, 329, 257, 2041, 1339, 287, 45715]"
üß† ML Signal: Sorting orders based on a specific attribute,"[8582, 100, 254, 10373, 26484, 25, 311, 24707, 6266, 1912, 319, 257, 2176, 11688]",1.0,1298,ml_signal,443,Sorting orders based on a specific attribute,,1272,                #   (inner Qlib Executor)]),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 220, 220, 357, 5083, 1195, 8019, 8393, 38409, 8, 12962]"
‚ö†Ô∏è SAST Risk (Low): Use of NotImplementedError for unsupported types,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 1892, 3546, 1154, 12061, 12331, 329, 24222, 3858]",1.0,1317,sast_risk,447,Use of NotImplementedError for unsupported types,Low,1298,                # below is proposed,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 2174, 318, 5150]"
‚úÖ Best Practice: Explicit return of the iterator for clarity,"[26486, 227, 6705, 19939, 25, 11884, 1441, 286, 262, 41313, 329, 16287]",0.5,1337,best_practice,449,Explicit return of the iterator for clarity,,1317,                #   RL Framework,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 220, 220, 45715, 25161]"
üß† ML Signal: Method signature with specific parameter types and return type hints,"[8582, 100, 254, 10373, 26484, 25, 11789, 9877, 351, 2176, 11507, 3858, 290, 1441, 2099, 20269]",0.5,1374,ml_signal,448,Method signature with specific parameter types and return type hints,,1337,                # - The entry script follow the example of  _RL learning example_ to be compatible with all kinds of,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 532, 383, 5726, 4226, 1061, 262, 1672, 286, 220, 4808, 7836, 4673, 1672, 62, 284, 307, 11670, 351, 477, 6982, 286]"
"üß† ML Signal: Iterating over orders, indicating a pattern of processing multiple items","[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 6266, 11, 12739, 257, 3912, 286, 7587, 3294, 3709]",0.5,1410,ml_signal,452,"Iterating over orders, indicating a pattern of processing multiple items",,1374,                #       by `yield from` and wait for the action from the policy,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 220, 220, 220, 220, 220, 220, 416, 4600, 88, 1164, 422, 63, 290, 4043, 329, 262, 2223, 422, 262, 2450]"
‚ö†Ô∏è SAST Risk (Low): Potential risk if `deal_order` method is not handling inputs safely,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 4600, 31769, 62, 2875, 63, 2446, 318, 407, 9041, 17311, 11512]",0.5,1451,sast_risk,462,Potential risk if `deal_order` method is not handling inputs safely,Low,1410,"                decision_list.append((_inner_trade_decision, *sub_cal.get_step_time()))","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2551, 62, 4868, 13, 33295, 19510, 62, 5083, 62, 25351, 62, 12501, 1166, 11, 1635, 7266, 62, 9948, 13, 1136, 62, 9662, 62, 2435, 3419, 4008]"
‚úÖ Best Practice: Using formatted strings for logging improves readability,"[26486, 227, 6705, 19939, 25, 8554, 39559, 13042, 329, 18931, 19575, 1100, 1799]",0.5,1451,best_practice,463,Using formatted strings for logging improves readability,,1451,,[]
"üß† ML Signal: Returning a tuple with a list and a dictionary, indicating structured data output","[8582, 100, 254, 10373, 26484, 25, 42882, 257, 46545, 351, 257, 1351, 290, 257, 22155, 11, 12739, 20793, 1366, 5072]",0.5,1473,ml_signal,477,"Returning a tuple with a list and a dictionary, indicating structured data output",,1451,                # do nothing and just step forward,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 466, 2147, 290, 655, 2239, 2651]"
