[
  {
    "line": 4,
    "text": "from typing import Dict, List, Text, Tuple, Union",
    "annotation": "\u2705 Best Practice: Grouping imports from the same package together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      19720,
      1330,
      360,
      713,
      11,
      7343,
      11,
      8255,
      11,
      309,
      29291,
      11,
      4479
    ],
    "start_token": 0,
    "end_token": 14,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      5301,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same package together improves readability."
  },
  {
    "line": 6,
    "text": "import pandas as pd",
    "annotation": "\u2705 Best Practice: Grouping imports from the same package together improves readability.",
    "confidence": 1.0,
    "tokens": [
      11748,
      19798,
      292,
      355,
      279,
      67
    ],
    "start_token": 14,
    "end_token": 20,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      5301,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same package together improves readability."
  },
  {
    "line": 8,
    "text": "from qlib.utils import init_instance_by_config",
    "annotation": "\u2705 Best Practice: Grouping imports from the same package together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      10662,
      8019,
      13,
      26791,
      1330,
      2315,
      62,
      39098,
      62,
      1525,
      62,
      11250
    ],
    "start_token": 20,
    "end_token": 33,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      5301,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same package together improves readability."
  },
  {
    "line": 10,
    "text": "from ..data.dataset import Dataset",
    "annotation": "\u2705 Best Practice: Grouping imports from the same package together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      11485,
      7890,
      13,
      19608,
      292,
      316,
      1330,
      16092,
      292,
      316
    ],
    "start_token": 33,
    "end_token": 44,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      5301,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same package together improves readability."
  },
  {
    "line": 10,
    "text": "from ..data.dataset import Dataset",
    "annotation": "\u2705 Best Practice: Grouping imports from the same package together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      11485,
      7890,
      13,
      19608,
      292,
      316,
      1330,
      16092,
      292,
      316
    ],
    "start_token": 44,
    "end_token": 55,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      5301,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same package together improves readability."
  },
  {
    "line": 16,
    "text": "class Signal(metaclass=abc.ABCMeta):",
    "annotation": "\u2705 Best Practice: Use of abstract method to enforce implementation in subclasses",
    "confidence": 1.0,
    "tokens": [
      4871,
      26484,
      7,
      4164,
      330,
      31172,
      28,
      39305,
      13,
      24694,
      48526,
      2599
    ],
    "start_token": 55,
    "end_token": 67,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      12531,
      2446,
      284,
      4605,
      7822,
      287,
      850,
      37724
    ],
    "label": "best_practice",
    "reason": "Use of abstract method to enforce implementation in subclasses"
  },
  {
    "line": 17,
    "text": "    \"\"\"",
    "annotation": "\u2705 Best Practice: Docstring provides a clear explanation of the method's purpose and return type",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      37227
    ],
    "start_token": 67,
    "end_token": 71,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      14432,
      8841,
      3769,
      257,
      1598,
      7468,
      286,
      262,
      2446,
      338,
      4007,
      290,
      1441,
      2099
    ],
    "label": "best_practice",
    "reason": "Docstring provides a clear explanation of the method's purpose and return type"
  },
  {
    "line": 24,
    "text": "    @abc.abstractmethod",
    "annotation": "\u2705 Best Practice: Class docstring provides a clear description of the class functionality",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      2488,
      39305,
      13,
      397,
      8709,
      24396
    ],
    "start_token": 71,
    "end_token": 80,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      2205,
      8841,
      3769,
      257,
      1598,
      6764,
      286,
      262,
      1398,
      11244
    ],
    "label": "best_practice",
    "reason": "Class docstring provides a clear description of the class functionality"
  },
  {
    "line": 30,
    "text": "        -------",
    "annotation": "\ud83e\udde0 ML Signal: Type hinting with Union can be used to infer expected input types for ML models",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      35656
    ],
    "start_token": 80,
    "end_token": 88,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5994,
      9254,
      278,
      351,
      4479,
      460,
      307,
      973,
      284,
      13249,
      2938,
      5128,
      3858,
      329,
      10373,
      4981
    ],
    "label": "ml_signal",
    "reason": "Type hinting with Union can be used to infer expected input types for ML models"
  },
  {
    "line": 44,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of a descriptive method name 'convert_index_format' improves code readability",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 88,
    "end_token": 88,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      257,
      35644,
      2446,
      1438,
      705,
      1102,
      1851,
      62,
      9630,
      62,
      18982,
      6,
      19575,
      2438,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of a descriptive method name 'convert_index_format' improves code readability"
  },
  {
    "line": 44,
    "text": "",
    "annotation": "\u2705 Best Practice: Type hints for parameters and return type improve code readability and maintainability",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 88,
    "end_token": 88,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      20269,
      329,
      10007,
      290,
      1441,
      2099,
      2987,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hints for parameters and return type improve code readability and maintainability"
  },
  {
    "line": 46,
    "text": "        ----------",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a caching mechanism (self.signal_cache) indicates optimization for repeated access",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      24200,
      438
    ],
    "start_token": 88,
    "end_token": 97,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      40918,
      9030,
      357,
      944,
      13,
      12683,
      282,
      62,
      23870,
      8,
      9217,
      23989,
      329,
      5100,
      1895
    ],
    "label": "ml_signal",
    "reason": "Usage of a caching mechanism (self.signal_cache) indicates optimization for repeated access"
  },
  {
    "line": 47,
    "text": "        signal : Union[pd.Series, pd.DataFrame]",
    "annotation": "\ud83e\udde0 ML Signal: Resampling time series data is a common pattern in time series analysis",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6737,
      1058,
      4479,
      58,
      30094,
      13,
      27996,
      11,
      279,
      67,
      13,
      6601,
      19778,
      60
    ],
    "start_token": 97,
    "end_token": 118,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      1874,
      321,
      11347,
      640,
      2168,
      1366,
      318,
      257,
      2219,
      3912,
      287,
      640,
      2168,
      3781
    ],
    "label": "ml_signal",
    "reason": "Resampling time series data is a common pattern in time series analysis"
  },
  {
    "line": 49,
    "text": "            automatically adjusted)",
    "annotation": "\u2705 Best Practice: Returning the result immediately after computation is clear and concise",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6338,
      12328,
      8
    ],
    "start_token": 118,
    "end_token": 132,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      42882,
      262,
      1255,
      3393,
      706,
      29964,
      318,
      1598,
      290,
      35327
    ],
    "label": "best_practice",
    "reason": "Returning the result immediately after computation is clear and concise"
  },
  {
    "line": 47,
    "text": "        signal : Union[pd.Series, pd.DataFrame]",
    "annotation": "\ud83e\udde0 ML Signal: Inherits from SignalWCache, indicating a pattern of using caching in model signals",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6737,
      1058,
      4479,
      58,
      30094,
      13,
      27996,
      11,
      279,
      67,
      13,
      6601,
      19778,
      60
    ],
    "start_token": 132,
    "end_token": 153,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47025,
      896,
      422,
      26484,
      27353,
      4891,
      11,
      12739,
      257,
      3912,
      286,
      1262,
      40918,
      287,
      2746,
      10425
    ],
    "label": "ml_signal",
    "reason": "Inherits from SignalWCache, indicating a pattern of using caching in model signals"
  },
  {
    "line": 49,
    "text": "            automatically adjusted)",
    "annotation": "\ud83e\udde0 ML Signal: Storing model and dataset as instance variables indicates a pattern of model usage.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6338,
      12328,
      8
    ],
    "start_token": 153,
    "end_token": 167,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      520,
      3255,
      2746,
      290,
      27039,
      355,
      4554,
      9633,
      9217,
      257,
      3912,
      286,
      2746,
      8748,
      13
    ],
    "label": "ml_signal",
    "reason": "Storing model and dataset as instance variables indicates a pattern of model usage."
  },
  {
    "line": 51,
    "text": "                instrument datetime",
    "annotation": "\ud83e\udde0 ML Signal: Storing model and dataset as instance variables indicates a pattern of model usage.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      8875,
      4818,
      8079
    ],
    "start_token": 167,
    "end_token": 185,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      520,
      3255,
      2746,
      290,
      27039,
      355,
      4554,
      9633,
      9217,
      257,
      3912,
      286,
      2746,
      8748,
      13
    ],
    "label": "ml_signal",
    "reason": "Storing model and dataset as instance variables indicates a pattern of model usage."
  },
  {
    "line": 53,
    "text": "                           2008-01-03  0.120125",
    "annotation": "\ud83e\udde0 ML Signal: Calling predict on a model with a dataset is a common ML operation.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3648,
      12,
      486,
      12,
      3070,
      220,
      657,
      13,
      1065,
      486,
      1495
    ],
    "start_token": 185,
    "end_token": 222,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      32677,
      4331,
      319,
      257,
      2746,
      351,
      257,
      27039,
      318,
      257,
      2219,
      10373,
      4905,
      13
    ],
    "label": "ml_signal",
    "reason": "Calling predict on a model with a dataset is a common ML operation."
  },
  {
    "line": 55,
    "text": "                           2008-01-07  0.505539",
    "annotation": "\u2705 Best Practice: Checking the type of pred_scores ensures compatibility with subsequent operations.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3648,
      12,
      486,
      12,
      2998,
      220,
      657,
      13,
      1120,
      2816,
      2670
    ],
    "start_token": 222,
    "end_token": 259,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      39432,
      262,
      2099,
      286,
      2747,
      62,
      1416,
      2850,
      19047,
      17764,
      351,
      8840,
      4560,
      13
    ],
    "label": "best_practice",
    "reason": "Checking the type of pred_scores ensures compatibility with subsequent operations."
  },
  {
    "line": 56,
    "text": "                           2008-01-08  0.395004",
    "annotation": "\u2705 Best Practice: Selecting the first column of a DataFrame is a common operation when dealing with predictions.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3648,
      12,
      486,
      12,
      2919,
      220,
      657,
      13,
      2670,
      4059,
      19
    ],
    "start_token": 259,
    "end_token": 296,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      9683,
      278,
      262,
      717,
      5721,
      286,
      257,
      6060,
      19778,
      318,
      257,
      2219,
      4905,
      618,
      7219,
      351,
      16277,
      13
    ],
    "label": "best_practice",
    "reason": "Selecting the first column of a DataFrame is a common operation when dealing with predictions."
  },
  {
    "line": 56,
    "text": "                           2008-01-08  0.395004",
    "annotation": "\u2705 Best Practice: Calling the superclass constructor ensures proper initialization of the base class.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3648,
      12,
      486,
      12,
      2919,
      220,
      657,
      13,
      2670,
      4059,
      19
    ],
    "start_token": 296,
    "end_token": 333,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      32677,
      262,
      2208,
      4871,
      23772,
      19047,
      1774,
      37588,
      286,
      262,
      2779,
      1398,
      13
    ],
    "label": "best_practice",
    "reason": "Calling the superclass constructor ensures proper initialization of the base class."
  },
  {
    "line": 56,
    "text": "                           2008-01-08  0.395004",
    "annotation": "\u2705 Best Practice: Use of type hint for return value improves code readability and maintainability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3648,
      12,
      486,
      12,
      2919,
      220,
      657,
      13,
      2670,
      4059,
      19
    ],
    "start_token": 333,
    "end_token": 370,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      9254,
      329,
      1441,
      1988,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of type hint for return value improves code readability and maintainability"
  },
  {
    "line": 63,
    "text": "        # the latest signal leverage more recent data and therefore is used in trading.",
    "annotation": "\ud83e\udde0 ML Signal: Presence of a method intended for updating a model with online data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      262,
      3452,
      6737,
      16094,
      517,
      2274,
      1366,
      290,
      4361,
      318,
      973,
      287,
      7313,
      13
    ],
    "start_token": 370,
    "end_token": 392,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      46523,
      286,
      257,
      2446,
      5292,
      329,
      19698,
      257,
      2746,
      351,
      2691,
      1366
    ],
    "label": "ml_signal",
    "reason": "Presence of a method intended for updating a model with online data"
  },
  {
    "line": 66,
    "text": "",
    "annotation": "\u2705 Best Practice: Raising NotImplementedError is a clear way to indicate that the method should be overridden",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 392,
    "end_token": 392,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      7567,
      1710,
      1892,
      3546,
      1154,
      12061,
      12331,
      318,
      257,
      1598,
      835,
      284,
      7603,
      326,
      262,
      2446,
      815,
      307,
      23170,
      4651
    ],
    "label": "best_practice",
    "reason": "Raising NotImplementedError is a clear way to indicate that the method should be overridden"
  },
  {
    "line": 71,
    "text": "        self.dataset = dataset",
    "annotation": "\ud83e\udde0 ML Signal: Use of isinstance to determine object type for dynamic behavior",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      19608,
      292,
      316,
      796,
      27039
    ],
    "start_token": 392,
    "end_token": 406,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      318,
      39098,
      284,
      5004,
      2134,
      2099,
      329,
      8925,
      4069
    ],
    "label": "ml_signal",
    "reason": "Use of isinstance to determine object type for dynamic behavior"
  },
  {
    "line": 74,
    "text": "            pred_scores = pred_scores.iloc[:, 0]",
    "annotation": "\ud83e\udde0 ML Signal: Use of isinstance to determine object type for dynamic behavior",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2747,
      62,
      1416,
      2850,
      796,
      2747,
      62,
      1416,
      2850,
      13,
      346,
      420,
      58,
      45299,
      657,
      60
    ],
    "start_token": 406,
    "end_token": 433,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      318,
      39098,
      284,
      5004,
      2134,
      2099,
      329,
      8925,
      4069
    ],
    "label": "ml_signal",
    "reason": "Use of isinstance to determine object type for dynamic behavior"
  },
  {
    "line": 76,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for unexpected behavior if obj is not a valid tuple or list",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 433,
    "end_token": 433,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      10059,
      4069,
      611,
      26181,
      318,
      407,
      257,
      4938,
      46545,
      393,
      1351
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for unexpected behavior if obj is not a valid tuple or list"
  },
  {
    "line": 78,
    "text": "        \"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Use of isinstance to determine object type for dynamic behavior",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 433,
    "end_token": 441,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      318,
      39098,
      284,
      5004,
      2134,
      2099,
      329,
      8925,
      4069
    ],
    "label": "ml_signal",
    "reason": "Use of isinstance to determine object type for dynamic behavior"
  },
  {
    "line": 80,
    "text": "            - update dataset with online data, the dataset should support online update",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for unexpected behavior if obj is not a valid dict or str",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      532,
      4296,
      27039,
      351,
      2691,
      1366,
      11,
      262,
      27039,
      815,
      1104,
      2691,
      4296
    ],
    "start_token": 441,
    "end_token": 465,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      10059,
      4069,
      611,
      26181,
      318,
      407,
      257,
      4938,
      8633,
      393,
      965
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for unexpected behavior if obj is not a valid dict or str"
  },
  {
    "line": 80,
    "text": "            - update dataset with online data, the dataset should support online update",
    "annotation": "\ud83e\udde0 ML Signal: Use of isinstance to determine object type for dynamic behavior",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      532,
      4296,
      27039,
      351,
      2691,
      1366,
      11,
      262,
      27039,
      815,
      1104,
      2691,
      4296
    ],
    "start_token": 465,
    "end_token": 489,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      318,
      39098,
      284,
      5004,
      2134,
      2099,
      329,
      8925,
      4069
    ],
    "label": "ml_signal",
    "reason": "Use of isinstance to determine object type for dynamic behavior"
  },
  {
    "line": 80,
    "text": "            - update dataset with online data, the dataset should support online update",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of NotImplementedError to handle unsupported types",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      532,
      4296,
      27039,
      351,
      2691,
      1366,
      11,
      262,
      27039,
      815,
      1104,
      2691,
      4296
    ],
    "start_token": 489,
    "end_token": 513,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      1892,
      3546,
      1154,
      12061,
      12331,
      284,
      5412,
      24222,
      3858
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of NotImplementedError to handle unsupported types"
  }
]