annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Class should inherit from abc.ABC to use abstract methods,"[26486, 227, 6705, 19939, 25, 5016, 815, 16955, 422, 450, 66, 13, 24694, 284, 779, 12531, 5050]",0.5,0,best_practice,4,Class should inherit from abc.ABC to use abstract methods,,0,,[]
üß† ML Signal: Use of __call__ method indicates a pattern where instances of the class are intended to be callable.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 11593, 13345, 834, 2446, 9217, 257, 3912, 810, 10245, 286, 262, 1398, 389, 5292, 284, 307, 869, 540, 13]",0.5,9,ml_signal,7,Use of __call__ method indicates a pattern where instances of the class are intended to be callable.,,0,    @abc.abstractmethod,"[220, 220, 220, 2488, 39305, 13, 397, 8709, 24396]"
‚ö†Ô∏è SAST Risk (Medium): In-place modification of `df` can lead to unintended side effects if the caller is not aware.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 554, 12, 5372, 17613, 286, 4600, 7568, 63, 460, 1085, 284, 30261, 1735, 3048, 611, 262, 24955, 318, 407, 3910, 13]",1.0,18,sast_risk,7,In-place modification of `df` can lead to unintended side effects if the caller is not aware.,Medium,9,    @abc.abstractmethod,"[220, 220, 220, 2488, 39305, 13, 397, 8709, 24396]"
‚úÖ Best Practice: Documenting the in-place modification behavior is good for user awareness.,"[26486, 227, 6705, 19939, 25, 16854, 278, 262, 287, 12, 5372, 17613, 4069, 318, 922, 329, 2836, 9359, 13]",0.5,43,best_practice,12,Documenting the in-place modification behavior is good for user awareness.,,18,        NOTE: **The processor could change the content of `df` inplace !!!!! **,"[220, 220, 220, 220, 220, 220, 220, 24550, 25, 12429, 464, 12649, 714, 1487, 262, 2695, 286, 4600, 7568, 63, 287, 5372, 37867, 10185, 12429]"
‚úÖ Best Practice: Advising users to keep a copy of data helps prevent data loss or corruption.,"[26486, 227, 6705, 19939, 25, 8007, 1710, 2985, 284, 1394, 257, 4866, 286, 1366, 5419, 2948, 1366, 2994, 393, 9253, 13]",0.5,43,best_practice,14,Advising users to keep a copy of data helps prevent data loss or corruption.,,43,,[]
‚úÖ Best Practice: Use of f-string for string formatting improves readability and performance,"[26486, 227, 6705, 19939, 25, 5765, 286, 277, 12, 8841, 329, 4731, 33313, 19575, 1100, 1799, 290, 2854]",0.5,52,best_practice,16,Use of f-string for string formatting improves readability and performance,,43,        ----------,"[220, 220, 220, 220, 220, 220, 220, 24200, 438]"
‚ö†Ô∏è SAST Risk (Low): Potential exposure of sensitive information by converting object attributes to a JSON string,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 7111, 286, 8564, 1321, 416, 23202, 2134, 12608, 284, 257, 19449, 4731]",0.5,66,sast_risk,17,Potential exposure of sensitive information by converting object attributes to a JSON string,Low,52,        df : pd.DataFrame,"[220, 220, 220, 220, 220, 220, 220, 47764, 1058, 279, 67, 13, 6601, 19778]"
üß† ML Signal: Use of __str__ method to provide a string representation of an object,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 11593, 2536, 834, 2446, 284, 2148, 257, 4731, 10552, 286, 281, 2134]",0.5,80,ml_signal,17,Use of __str__ method to provide a string representation of an object,,66,        df : pd.DataFrame,"[220, 220, 220, 220, 220, 220, 220, 47764, 1058, 279, 67, 13, 6601, 19778]"
‚úÖ Best Practice: Use of json.dumps with sort_keys for consistent output,"[26486, 227, 6705, 19939, 25, 5765, 286, 33918, 13, 67, 8142, 351, 3297, 62, 13083, 329, 6414, 5072]",1.0,94,best_practice,17,Use of json.dumps with sort_keys for consistent output,,80,        df : pd.DataFrame,"[220, 220, 220, 220, 220, 220, 220, 47764, 1058, 279, 67, 13, 6601, 19778]"
‚úÖ Best Practice: Use of default=str in json.dumps to handle non-serializable objects,"[26486, 227, 6705, 19939, 25, 5765, 286, 4277, 28, 2536, 287, 33918, 13, 67, 8142, 284, 5412, 1729, 12, 46911, 13821, 5563]",0.5,108,best_practice,17,Use of default=str in json.dumps to handle non-serializable objects,,94,        df : pd.DataFrame,"[220, 220, 220, 220, 220, 220, 220, 47764, 1058, 279, 67, 13, 6601, 19778]"
