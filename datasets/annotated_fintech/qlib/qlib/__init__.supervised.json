[
  {
    "line": 11,
    "text": "import logging",
    "annotation": "\u2705 Best Practice: Importing specific functions or classes is preferred for clarity and to avoid potential conflicts.",
    "confidence": 0.5,
    "tokens": [
      11748,
      18931
    ],
    "start_token": 0,
    "end_token": 2,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      17267,
      278,
      2176,
      5499,
      393,
      6097,
      318,
      9871,
      329,
      16287,
      290,
      284,
      3368,
      2785,
      12333,
      13
    ],
    "label": "best_practice",
    "reason": "Importing specific functions or classes is preferred for clarity and to avoid potential conflicts."
  },
  {
    "line": 29,
    "text": "            It is often used to improve performance when init will be called for multiple times",
    "annotation": "\u2705 Best Practice: Consider importing at the top of the file for better readability and maintainability.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      632,
      318,
      1690,
      973,
      284,
      2987,
      2854,
      618,
      2315,
      481,
      307,
      1444,
      329,
      3294,
      1661
    ],
    "start_token": 2,
    "end_token": 28,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      33332,
      379,
      262,
      1353,
      286,
      262,
      2393,
      329,
      1365,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Consider importing at the top of the file for better readability and maintainability."
  },
  {
    "line": 31,
    "text": "            the default value is True;",
    "annotation": "\ud83e\udde0 ML Signal: Usage of logger for tracking and debugging.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      262,
      4277,
      1988,
      318,
      6407,
      26
    ],
    "start_token": 28,
    "end_token": 45,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      49706,
      329,
      9646,
      290,
      28769,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of logger for tracking and debugging."
  },
  {
    "line": 61,
    "text": "                    logger.error(",
    "annotation": "\u2705 Best Practice: Use of a logger for consistent logging",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      49706,
      13,
      18224,
      7
    ],
    "start_token": 45,
    "end_token": 68,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      257,
      49706,
      329,
      6414,
      18931
    ],
    "label": "best_practice",
    "reason": "Use of a logger for consistent logging"
  },
  {
    "line": 64,
    "text": "                else:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for exception handling improvement",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 68,
    "end_token": 85,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      6631,
      9041,
      9025
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for exception handling improvement"
  },
  {
    "line": 67,
    "text": "            _mount_nfs_uri(provider_uri, C.dpm.get_data_uri(_freq), C[\"auto_mount\"])",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Regular expression could be too permissive",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4808,
      14948,
      62,
      77,
      9501,
      62,
      9900,
      7,
      15234,
      1304,
      62,
      9900,
      11,
      327,
      13,
      67,
      4426,
      13,
      1136,
      62,
      7890,
      62,
      9900,
      28264,
      19503,
      80,
      828,
      327,
      14692,
      23736,
      62,
      14948,
      8973,
      8
    ],
    "start_token": 85,
    "end_token": 130,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      23603,
      5408,
      714,
      307,
      1165,
      583,
      33532
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Regular expression could be too permissive"
  },
  {
    "line": 69,
    "text": "            raise NotImplementedError(f\"This type of URI is not supported\")",
    "annotation": "\u2705 Best Practice: Use of list for command arguments to avoid shell injection",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      5298,
      1892,
      3546,
      1154,
      12061,
      12331,
      7,
      69,
      1,
      1212,
      2099,
      286,
      43975,
      318,
      407,
      4855,
      4943
    ],
    "start_token": 130,
    "end_token": 158,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      1351,
      329,
      3141,
      7159,
      284,
      3368,
      7582,
      16954
    ],
    "label": "best_practice",
    "reason": "Use of list for command arguments to avoid shell injection"
  },
  {
    "line": 73,
    "text": "    if \"flask_server\" in C:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for exception handling improvement",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      611,
      366,
      2704,
      2093,
      62,
      15388,
      1,
      287,
      327,
      25
    ],
    "start_token": 158,
    "end_token": 171,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      6631,
      9041,
      9025
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for exception handling improvement"
  },
  {
    "line": 82,
    "text": "    if mount_path is None:",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Use of subprocess without shell=False",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      611,
      3817,
      62,
      6978,
      318,
      6045,
      25
    ],
    "start_token": 171,
    "end_token": 181,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      5765,
      286,
      850,
      14681,
      1231,
      7582,
      28,
      25101
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Use of subprocess without shell=False"
  },
  {
    "line": 94,
    "text": "                f\"Invalid mount path: {mount_path}! Please mount manually: {' '.join(mount_command)} or Set init parameter `auto_mount=True`\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for exception handling improvement",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      277,
      1,
      44651,
      3817,
      3108,
      25,
      1391,
      14948,
      62,
      6978,
      92,
      0,
      4222,
      3817,
      14500,
      25,
      1391,
      6,
      45302,
      22179,
      7,
      14948,
      62,
      21812,
      38165,
      393,
      5345,
      2315,
      11507,
      4600,
      23736,
      62,
      14948,
      28,
      17821,
      63,
      1
    ],
    "start_token": 181,
    "end_token": 233,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      6631,
      9041,
      9025
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for exception handling improvement"
  },
  {
    "line": 97,
    "text": "        # Judging system type",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for exception handling improvement",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      47024,
      1080,
      2099
    ],
    "start_token": 233,
    "end_token": 244,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      6631,
      9041,
      9025
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for exception handling improvement"
  },
  {
    "line": 100,
    "text": "            # system: window",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for exception handling improvement",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      1080,
      25,
      4324
    ],
    "start_token": 244,
    "end_token": 259,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      6631,
      9041,
      9025
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for exception handling improvement"
  },
  {
    "line": 116,
    "text": "                    raise OSError(\"Invalid mount path\") from e",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of filtering command output",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      5298,
      440,
      5188,
      81,
      1472,
      7203,
      44651,
      3817,
      3108,
      4943,
      422,
      304
    ],
    "start_token": 259,
    "end_token": 290,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      25431,
      3141,
      5072
    ],
    "label": "ml_signal",
    "reason": "Pattern of filtering command output"
  },
  {
    "line": 120,
    "text": "            # system: linux/Unix/Mac",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for decoding issues",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      1080,
      25,
      32639,
      14,
      47000,
      14,
      14155
    ],
    "start_token": 290,
    "end_token": 309,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      39938,
      2428
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for decoding issues"
  },
  {
    "line": 133,
    "text": "                    stderr=subprocess.STDOUT,",
    "annotation": "\u2705 Best Practice: Use of pathlib for path operations",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      336,
      1082,
      81,
      28,
      7266,
      14681,
      13,
      36886,
      11
    ],
    "start_token": 309,
    "end_token": 337,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      3108,
      8019,
      329,
      3108,
      4560
    ],
    "label": "best_practice",
    "reason": "Use of pathlib for path operations"
  },
  {
    "line": 136,
    "text": "                    _command_log = [line for line in _command_log if _remote_uri in line]",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for exception handling improvement",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4808,
      21812,
      62,
      6404,
      796,
      685,
      1370,
      329,
      1627,
      287,
      4808,
      21812,
      62,
      6404,
      611,
      4808,
      47960,
      62,
      9900,
      287,
      1627,
      60
    ],
    "start_token": 337,
    "end_token": 378,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      6631,
      9041,
      9025
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for exception handling improvement"
  },
  {
    "line": 140,
    "text": "                        _temp_mount = _temp_mount[:-1] if _temp_mount.endswith(\"/\") else _temp_mount",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Use of os.popen which can be unsafe",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4808,
      29510,
      62,
      14948,
      796,
      4808,
      29510,
      62,
      14948,
      58,
      21912,
      16,
      60,
      611,
      4808,
      29510,
      62,
      14948,
      13,
      437,
      2032,
      342,
      7203,
      14,
      4943,
      2073,
      4808,
      29510,
      62,
      14948
    ],
    "start_token": 378,
    "end_token": 431,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      5765,
      286,
      28686,
      13,
      79,
      9654,
      543,
      460,
      307,
      21596
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Use of os.popen which can be unsafe"
  },
  {
    "line": 144,
    "text": "                if _is_mount:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for exception handling improvement",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      4808,
      271,
      62,
      14948,
      25
    ],
    "start_token": 431,
    "end_token": 452,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      6631,
      9041,
      9025
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for exception handling improvement"
  },
  {
    "line": 147,
    "text": "                _mount_path = \"/\".join(_mount_path.split(\"/\")[:-1])",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Use of subprocess without shell=False",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4808,
      14948,
      62,
      6978,
      796,
      12813,
      1911,
      22179,
      28264,
      14948,
      62,
      6978,
      13,
      35312,
      7203,
      14,
      4943,
      58,
      21912,
      16,
      12962
    ],
    "start_token": 452,
    "end_token": 488,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      5765,
      286,
      850,
      14681,
      1231,
      7582,
      28,
      25101
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Use of subprocess without shell=False"
  },
  {
    "line": 152,
    "text": "                    Path(mount_path).mkdir(parents=True, exist_ok=True)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for exception handling improvement",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      10644,
      7,
      14948,
      62,
      6978,
      737,
      28015,
      15908,
      7,
      23743,
      28,
      17821,
      11,
      2152,
      62,
      482,
      28,
      17821,
      8
    ],
    "start_token": 488,
    "end_token": 526,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      6631,
      9041,
      9025
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for exception handling improvement"
  },
  {
    "line": 155,
    "text": "                        f\"Failed to create directory {mount_path}, please create {mount_path} manually!\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for exception handling improvement",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      277,
      1,
      37,
      6255,
      284,
      2251,
      8619,
      1391,
      14948,
      62,
      6978,
      5512,
      3387,
      2251,
      1391,
      14948,
      62,
      6978,
      92,
      14500,
      2474
    ],
    "start_token": 526,
    "end_token": 570,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      6631,
      9041,
      9025
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for exception handling improvement"
  },
  {
    "line": 157,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for exception handling improvement",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 570,
    "end_token": 570,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      6631,
      9041,
      9025
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for exception handling improvement"
  },
  {
    "line": 147,
    "text": "                _mount_path = \"/\".join(_mount_path.split(\"/\")[:-1])",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential issue if conf_path is user-controlled and None is not expected.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4808,
      14948,
      62,
      6978,
      796,
      12813,
      1911,
      22179,
      28264,
      14948,
      62,
      6978,
      13,
      35312,
      7203,
      14,
      4943,
      58,
      21912,
      16,
      12962
    ],
    "start_token": 570,
    "end_token": 606,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2071,
      611,
      1013,
      62,
      6978,
      318,
      2836,
      12,
      14401,
      290,
      6045,
      318,
      407,
      2938,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential issue if conf_path is user-controlled and None is not expected."
  },
  {
    "line": 151,
    "text": "                try:",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Opening files without exception handling can lead to unhandled exceptions.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1949,
      25
    ],
    "start_token": 606,
    "end_token": 623,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      25522,
      3696,
      1231,
      6631,
      9041,
      460,
      1085,
      284,
      555,
      38788,
      13269,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Opening files without exception handling can lead to unhandled exceptions."
  },
  {
    "line": 153,
    "text": "                except Exception as e:",
    "annotation": "\u2705 Best Practice: Use safe loading to prevent execution of arbitrary code in YAML.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2845,
      35528,
      355,
      304,
      25
    ],
    "start_token": 623,
    "end_token": 643,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      3338,
      11046,
      284,
      2948,
      9706,
      286,
      14977,
      2438,
      287,
      575,
      2390,
      43,
      13
    ],
    "label": "best_practice",
    "reason": "Use safe loading to prevent execution of arbitrary code in YAML."
  },
  {
    "line": 155,
    "text": "                        f\"Failed to create directory {mount_path}, please create {mount_path} manually!\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Loading YAML without validation can lead to security issues if the file is untrusted.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      277,
      1,
      37,
      6255,
      284,
      2251,
      8619,
      1391,
      14948,
      62,
      6978,
      5512,
      3387,
      2251,
      1391,
      14948,
      62,
      6978,
      92,
      14500,
      2474
    ],
    "start_token": 643,
    "end_token": 687,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      12320,
      575,
      2390,
      43,
      1231,
      21201,
      460,
      1085,
      284,
      2324,
      2428,
      611,
      262,
      2393,
      318,
      1418,
      81,
      8459,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Loading YAML without validation can lead to security issues if the file is untrusted."
  },
  {
    "line": 157,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of dictionary update pattern.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 687,
    "end_token": 687,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      22155,
      4296,
      3912,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of dictionary update pattern."
  },
  {
    "line": 157,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of dictionary pop pattern.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 687,
    "end_token": 687,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      22155,
      1461,
      3912,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of dictionary pop pattern."
  },
  {
    "line": 157,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function call with dynamic arguments.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 687,
    "end_token": 687,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      351,
      8925,
      7159,
      13
    ],
    "label": "ml_signal",
    "reason": "Function call with dynamic arguments."
  },
  {
    "line": 176,
    "text": "",
    "annotation": "\u2705 Best Practice: Default argument values should be immutable to avoid unexpected behavior.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 687,
    "end_token": 687,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      15161,
      4578,
      3815,
      815,
      307,
      40139,
      284,
      3368,
      10059,
      4069,
      13
    ],
    "label": "best_practice",
    "reason": "Default argument values should be immutable to avoid unexpected behavior."
  },
  {
    "line": 178,
    "text": "def init_from_yaml_conf(conf_path, **kwargs):",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Using __file__ can expose file system structure, which might be sensitive.",
    "confidence": 1.0,
    "tokens": [
      4299,
      2315,
      62,
      6738,
      62,
      88,
      43695,
      62,
      10414,
      7,
      10414,
      62,
      6978,
      11,
      12429,
      46265,
      22046,
      2599
    ],
    "start_token": 687,
    "end_token": 705,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      8554,
      11593,
      7753,
      834,
      460,
      15651,
      2393,
      1080,
      4645,
      11,
      543,
      1244,
      307,
      8564,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Using __file__ can expose file system structure, which might be sensitive."
  },
  {
    "line": 180,
    "text": "",
    "annotation": "\u2705 Best Practice: Convert cur_path to Path object for consistent path operations.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 705,
    "end_token": 705,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      38240,
      1090,
      62,
      6978,
      284,
      10644,
      2134,
      329,
      6414,
      3108,
      4560,
      13
    ],
    "label": "best_practice",
    "reason": "Convert cur_path to Path object for consistent path operations."
  },
  {
    "line": 183,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Checking for file existence in a loop is a common pattern for directory traversal.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 705,
    "end_token": 705,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      2393,
      6224,
      287,
      257,
      9052,
      318,
      257,
      2219,
      3912,
      329,
      8619,
      33038,
      282,
      13
    ],
    "label": "ml_signal",
    "reason": "Checking for file existence in a loop is a common pattern for directory traversal."
  },
  {
    "line": 186,
    "text": "    else:",
    "annotation": "\ud83e\udde0 ML Signal: Comparing a path with its parent to determine the root directory.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 705,
    "end_token": 710,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3082,
      1723,
      257,
      3108,
      351,
      663,
      2560,
      284,
      5004,
      262,
      6808,
      8619,
      13
    ],
    "label": "ml_signal",
    "reason": "Comparing a path with its parent to determine the root directory."
  },
  {
    "line": 186,
    "text": "    else:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Raising a generic FileNotFoundError without specific details.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 710,
    "end_token": 715,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      7567,
      1710,
      257,
      14276,
      9220,
      3673,
      21077,
      12331,
      1231,
      2176,
      3307,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Raising a generic FileNotFoundError without specific details."
  },
  {
    "line": 186,
    "text": "    else:",
    "annotation": "\ud83e\udde0 ML Signal: Moving up one directory level in a loop is a common pattern for searching parent directories.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 715,
    "end_token": 720,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      26768,
      510,
      530,
      8619,
      1241,
      287,
      257,
      9052,
      318,
      257,
      2219,
      3912,
      329,
      10342,
      2560,
      29196,
      13
    ],
    "label": "ml_signal",
    "reason": "Moving up one directory level in a loop is a common pattern for searching parent directories."
  },
  {
    "line": 217,
    "text": "    Raises",
    "annotation": "\ud83e\udde0 ML Signal: Use of default values in kwargs",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      7567,
      2696
    ],
    "start_token": 720,
    "end_token": 725,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      3815,
      287,
      479,
      86,
      22046
    ],
    "label": "ml_signal",
    "reason": "Use of default values in kwargs"
  },
  {
    "line": 219,
    "text": "    FileNotFoundError:",
    "annotation": "\ud83e\udde0 ML Signal: Use of function to determine project path",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      9220,
      3673,
      21077,
      12331,
      25
    ],
    "start_token": 725,
    "end_token": 733,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2163,
      284,
      5004,
      1628,
      3108
    ],
    "label": "ml_signal",
    "reason": "Use of function to determine project path"
  },
  {
    "line": 223,
    "text": "        cur_path = Path(__file__).absolute().resolve()",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for unhandled exceptions if init fails",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1090,
      62,
      6978,
      796,
      10644,
      7,
      834,
      7753,
      834,
      737,
      48546,
      22446,
      411,
      6442,
      3419
    ],
    "start_token": 733,
    "end_token": 755,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      555,
      38788,
      13269,
      611,
      2315,
      10143
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for unhandled exceptions if init fails"
  },
  {
    "line": 226,
    "text": "        if (cur_path / config_name).exists():",
    "annotation": "\ud83e\udde0 ML Signal: Use of logging for initialization process",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      357,
      22019,
      62,
      6978,
      1220,
      4566,
      62,
      3672,
      737,
      1069,
      1023,
      33529
    ],
    "start_token": 755,
    "end_token": 775,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      18931,
      329,
      37588,
      1429
    ],
    "label": "ml_signal",
    "reason": "Use of logging for initialization process"
  },
  {
    "line": 229,
    "text": "            raise FileNotFoundError(\"We can't find the project path\")",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for file handling issues if file is not accessible",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      5298,
      9220,
      3673,
      21077,
      12331,
      7203,
      1135,
      460,
      470,
      1064,
      262,
      1628,
      3108,
      4943
    ],
    "start_token": 775,
    "end_token": 800,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      2393,
      9041,
      2428,
      611,
      2393,
      318,
      407,
      9857
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for file handling issues if file is not accessible"
  },
  {
    "line": 232,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for unsafe YAML loading",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 800,
    "end_token": 800,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      21596,
      575,
      2390,
      43,
      11046
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for unsafe YAML loading"
  },
  {
    "line": 234,
    "text": "    \"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Use of configuration type to determine initialization process",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      37227
    ],
    "start_token": 800,
    "end_token": 804,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      8398,
      2099,
      284,
      5004,
      37588,
      1429
    ],
    "label": "ml_signal",
    "reason": "Use of configuration type to determine initialization process"
  },
  {
    "line": 237,
    "text": "        - The parsing process will be affected by the `conf_type` of the configuration file",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on configuration type",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      532,
      383,
      32096,
      1429,
      481,
      307,
      5676,
      416,
      262,
      4600,
      10414,
      62,
      4906,
      63,
      286,
      262,
      8398,
      2393
    ],
    "start_token": 804,
    "end_token": 829,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      8398,
      2099
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on configuration type"
  },
  {
    "line": 239,
    "text": "    - Skip initialization if already initialized",
    "annotation": "\ud83e\udde0 ML Signal: Logging of configuration overrides",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      532,
      32214,
      37588,
      611,
      1541,
      23224
    ],
    "start_token": 829,
    "end_token": 838,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      286,
      8398,
      23170,
      1460
    ],
    "label": "ml_signal",
    "reason": "Logging of configuration overrides"
  },
  {
    "line": 239,
    "text": "    - Skip initialization if already initialized",
    "annotation": "\ud83e\udde0 ML Signal: Logging of successful configuration loading",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      532,
      32214,
      37588,
      611,
      1541,
      23224
    ],
    "start_token": 838,
    "end_token": 847,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      286,
      4388,
      8398,
      11046
    ],
    "label": "ml_signal",
    "reason": "Logging of successful configuration loading"
  }
]