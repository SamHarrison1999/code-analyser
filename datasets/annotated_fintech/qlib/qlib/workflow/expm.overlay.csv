annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Use of relative imports for better modularity and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 3585, 17944, 329, 1365, 26507, 414, 290, 5529, 1799]",0.5,2,best_practice,9,Use of relative imports for better modularity and maintainability,,0,import os,"[11748, 28686]"
‚úÖ Best Practice: Use of relative imports for better modularity and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 3585, 17944, 329, 1365, 26507, 414, 290, 5529, 1799]",0.5,7,best_practice,11,Use of relative imports for better modularity and maintainability,,2,from pathlib import Path,"[6738, 3108, 8019, 1330, 10644]"
‚úÖ Best Practice: Use of relative imports for better modularity and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 3585, 17944, 329, 1365, 26507, 414, 290, 5529, 1799]",0.5,17,best_practice,13,Use of relative imports for better modularity and maintainability,,7,"from .exp import MLflowExperiment, Experiment","[6738, 764, 11201, 1330, 10373, 11125, 20468, 3681, 11, 29544]"
‚úÖ Best Practice: Use of relative imports for better modularity and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 3585, 17944, 329, 1365, 26507, 414, 290, 5529, 1799]",0.5,24,best_practice,15,Use of relative imports for better modularity and maintainability,,17,from .recorder import Recorder,"[6738, 764, 8344, 2875, 1330, 3311, 2875]"
‚úÖ Best Practice: Use of relative imports for better modularity and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 3585, 17944, 329, 1365, 26507, 414, 290, 5529, 1799]",0.5,34,best_practice,16,Use of relative imports for better modularity and maintainability,,24,from ..log import get_module_logger,"[6738, 11485, 6404, 1330, 651, 62, 21412, 62, 6404, 1362]"
üß† ML Signal: Logging setup indicates potential for tracking and monitoring,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 9058, 9217, 2785, 329, 9646, 290, 9904]",0.5,44,ml_signal,16,Logging setup indicates potential for tracking and monitoring,,34,from ..log import get_module_logger,"[6738, 11485, 6404, 1330, 651, 62, 21412, 62, 6404, 1362]"
‚úÖ Best Practice: Type hinting improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5994, 9254, 278, 19575, 2438, 1100, 1799, 290, 5529, 1799]",1.0,48,best_practice,23,Type hinting improves code readability and maintainability,,44,class ExpManager:,"[4871, 5518, 13511, 25]"
‚úÖ Best Practice: Use of type annotations for function parameters improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 2163, 10007, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,73,best_practice,25,Use of type annotations for function parameters improves code readability and maintainability.,,48,    This is the `ExpManager` class for managing experiments. The API is designed similar to mlflow.,"[220, 220, 220, 770, 318, 262, 4600, 16870, 13511, 63, 1398, 329, 11149, 10256, 13, 383, 7824, 318, 3562, 2092, 284, 285, 1652, 9319, 13]"
‚ö†Ô∏è SAST Risk (Low): Potential exposure of sensitive information in logs. Ensure `self.uri` does not contain sensitive data.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 7111, 286, 8564, 1321, 287, 17259, 13, 48987, 4600, 944, 13, 9900, 63, 857, 407, 3994, 8564, 1366, 13]",0.5,117,sast_risk,30,Potential exposure of sensitive information in logs. Ensure `self.uri` does not contain sensitive data.,Low,73,"    So we try to align them together.  They share the same variable, which is called **default uri**. Please refer to `ExpManager.default_uri` for details of variable sharing.","[220, 220, 220, 1406, 356, 1949, 284, 10548, 606, 1978, 13, 220, 1119, 2648, 262, 976, 7885, 11, 543, 318, 1444, 12429, 12286, 2956, 72, 1174, 13, 4222, 3522, 284, 4600, 16870, 13511, 13, 12286, 62, 9900, 63, 329, 3307, 286, 7885, 7373, 13]"
‚úÖ Best Practice: Use of __repr__ for a clear and unambiguous string representation of the object,"[26486, 227, 6705, 19939, 25, 5765, 286, 11593, 260, 1050, 834, 329, 257, 1598, 290, 42053, 29709, 4731, 10552, 286, 262, 2134]",1.0,161,best_practice,30,Use of __repr__ for a clear and unambiguous string representation of the object,,117,"    So we try to align them together.  They share the same variable, which is called **default uri**. Please refer to `ExpManager.default_uri` for details of variable sharing.","[220, 220, 220, 1406, 356, 1949, 284, 10548, 606, 1978, 13, 220, 1119, 2648, 262, 976, 7885, 11, 543, 318, 1444, 12429, 12286, 2956, 72, 1174, 13, 4222, 3522, 284, 4600, 16870, 13511, 13, 12286, 62, 9900, 63, 329, 3307, 286, 7885, 7373, 13]"
‚úÖ Best Practice: Using format method for string formatting improves readability,"[26486, 227, 6705, 19939, 25, 8554, 5794, 2446, 329, 4731, 33313, 19575, 1100, 1799]",1.0,240,best_practice,32,Using format method for string formatting improves readability,,161,"    When the user starts an experiment, the user may want to set the uri to a specific uri (it will override **default uri** during this period), and then unset the **specific uri** and fallback to the **default uri**.    `ExpManager._active_exp_uri` is that **specific uri**.","[220, 220, 220, 1649, 262, 2836, 4940, 281, 6306, 11, 262, 2836, 743, 765, 284, 900, 262, 2956, 72, 284, 257, 2176, 2956, 72, 357, 270, 481, 20957, 12429, 12286, 2956, 72, 1174, 1141, 428, 2278, 828, 290, 788, 555, 2617, 262, 12429, 11423, 2956, 72, 1174, 290, 2121, 1891, 284, 262, 12429, 12286, 2956, 72, 1174, 13, 220, 220, 220, 4600, 16870, 13511, 13557, 5275, 62, 11201, 62, 9900, 63, 318, 326, 12429, 11423, 2956, 72, 1174, 13]"
‚úÖ Best Practice: Docstring provides a clear explanation of the method's purpose and parameters.,"[26486, 227, 6705, 19939, 25, 14432, 8841, 3769, 257, 1598, 7468, 286, 262, 2446, 338, 4007, 290, 10007, 13]",1.0,240,best_practice,43,Docstring provides a clear explanation of the method's purpose and parameters.,,240,,[]
üß† ML Signal: Usage of optional parameters and default values can indicate common patterns in function design.,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 11902, 10007, 290, 4277, 3815, 460, 7603, 2219, 7572, 287, 2163, 1486, 13]",0.5,252,ml_signal,66,Usage of optional parameters and default values can indicate common patterns in function design.,,240,        experiment_id : str,"[220, 220, 220, 220, 220, 220, 220, 6306, 62, 312, 1058, 965]"
üß† ML Signal: The pattern of calling another method with similar parameters can be used to understand method delegation.,"[8582, 100, 254, 10373, 26484, 25, 383, 3912, 286, 4585, 1194, 2446, 351, 2092, 10007, 460, 307, 973, 284, 1833, 2446, 22635, 13]",0.5,264,ml_signal,66,The pattern of calling another method with similar parameters can be used to understand method delegation.,,252,        experiment_id : str,"[220, 220, 220, 220, 220, 220, 220, 6306, 62, 312, 1058, 965]"
"‚úÖ Best Practice: The method name starts with an underscore, indicating it's intended for internal use.","[26486, 227, 6705, 19939, 25, 383, 2446, 1438, 4940, 351, 281, 44810, 11, 12739, 340, 338, 5292, 329, 5387, 779, 13]",0.5,275,best_practice,74,"The method name starts with an underscore, indicating it's intended for internal use.",,264,        uri : str,"[220, 220, 220, 220, 220, 220, 220, 2956, 72, 1058, 965]"
‚úÖ Best Practice: The docstring provides a reference to another method for documentation.,"[26486, 227, 6705, 19939, 25, 383, 2205, 8841, 3769, 257, 4941, 284, 1194, 2446, 329, 10314, 13]",1.0,285,best_practice,76,The docstring provides a reference to another method for documentation.,,275,        resume : boolean,"[220, 220, 220, 220, 220, 220, 220, 15294, 1058, 25131]"
‚ö†Ô∏è SAST Risk (Low): Raising NotImplementedError without implementation can lead to runtime errors if not handled.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 7567, 1710, 1892, 3546, 1154, 12061, 12331, 1231, 7822, 460, 1085, 284, 19124, 8563, 611, 407, 12118, 13]",0.5,285,sast_risk,78,Raising NotImplementedError without implementation can lead to runtime errors if not handled.,Low,285,,[]
‚úÖ Best Practice: Docstring provides a clear explanation of the method's purpose and parameters,"[26486, 227, 6705, 19939, 25, 14432, 8841, 3769, 257, 1598, 7468, 286, 262, 2446, 338, 4007, 290, 10007]",1.0,285,best_practice,78,Docstring provides a clear explanation of the method's purpose and parameters,,285,,[]
‚úÖ Best Practice: Resets the active experiment URI to ensure no stale references,"[26486, 227, 6705, 19939, 25, 1874, 1039, 262, 4075, 6306, 43975, 284, 4155, 645, 39985, 10288]",0.5,305,best_practice,90,Resets the active experiment URI to ensure no stale references,,285,"            recorder_name=recorder_name,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 38156, 62, 3672, 28, 8344, 2875, 62, 3672, 11]"
"üß† ML Signal: Calls a subclass method, indicating a pattern of using inheritance for extending functionality","[8582, 100, 254, 10373, 26484, 25, 27592, 257, 47611, 2446, 11, 12739, 257, 3912, 286, 1262, 24155, 329, 16610, 11244]",0.5,320,ml_signal,92,"Calls a subclass method, indicating a pattern of using inheritance for extending functionality",,305,"            **kwargs,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 12429, 46265, 22046, 11]"
‚úÖ Best Practice: Use of a private method name to indicate internal use,"[26486, 227, 6705, 19939, 25, 5765, 286, 257, 2839, 2446, 1438, 284, 7603, 5387, 779]",1.0,340,best_practice,90,Use of a private method name to indicate internal use,,320,"            recorder_name=recorder_name,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 38156, 62, 3672, 28, 8344, 2875, 62, 3672, 11]"
"‚ö†Ô∏è SAST Risk (Low): Method raises NotImplementedError, which is expected for abstract methods but should be implemented in subclasses","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 11789, 12073, 1892, 3546, 1154, 12061, 12331, 11, 543, 318, 2938, 329, 12531, 5050, 475, 815, 307, 9177, 287, 850, 37724]",0.5,355,sast_risk,92,"Method raises NotImplementedError, which is expected for abstract methods but should be implemented in subclasses",Low,340,"            **kwargs,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 12429, 46265, 22046, 11]"
‚úÖ Best Practice: Use of type hinting for function parameters improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 9254, 278, 329, 2163, 10007, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,363,best_practice,93,Use of type hinting for function parameters improves code readability and maintainability.,,355,        ),"[220, 220, 220, 220, 220, 220, 220, 1267]"
"‚ö†Ô∏è SAST Risk (Low): The method is not implemented, which could lead to runtime errors if called.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 383, 2446, 318, 407, 9177, 11, 543, 714, 1085, 284, 19124, 8563, 611, 1444, 13]",1.0,375,sast_risk,107,"The method is not implemented, which could lead to runtime errors if called.",Low,363,        experiment_name : str,"[220, 220, 220, 220, 220, 220, 220, 6306, 62, 3672, 1058, 965]"
üß† ML Signal: Method signature with flexible arguments indicates potential for diverse input handling,"[8582, 100, 254, 10373, 26484, 25, 11789, 9877, 351, 12846, 7159, 9217, 2785, 329, 10084, 5128, 9041]",0.5,392,ml_signal,108,Method signature with flexible arguments indicates potential for diverse input handling,,375,            name of the active experiment.,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1438, 286, 262, 4075, 6306, 13]"
"‚ö†Ô∏è SAST Risk (Low): Method not implemented, potential for misuse if not properly overridden","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 11789, 407, 9177, 11, 2785, 329, 29169, 611, 407, 6105, 23170, 4651]",0.5,392,sast_risk,119,"Method not implemented, potential for misuse if not properly overridden",Low,392,,[]
‚úÖ Best Practice: Use of keyword-only arguments improves code readability and prevents errors.,"[26486, 227, 6705, 19939, 25, 5765, 286, 21179, 12, 8807, 7159, 19575, 2438, 1100, 1799, 290, 15174, 8563, 13]",1.0,413,best_practice,120,Use of keyword-only arguments improves code readability and prevents errors.,,392,"    def create_exp(self, experiment_name: Optional[Text] = None):","[220, 220, 220, 825, 2251, 62, 11201, 7, 944, 11, 6306, 62, 3672, 25, 32233, 58, 8206, 60, 796, 6045, 2599]"
‚úÖ Best Practice: Checking for None to handle default behavior when no ID or name is provided.,"[26486, 227, 6705, 19939, 25, 39432, 329, 6045, 284, 5412, 4277, 4069, 618, 645, 4522, 393, 1438, 318, 2810, 13]",1.0,413,best_practice,156,Checking for None to handle default behavior when no ID or name is provided.,,413,,[]
üß† ML Signal: Conditional logic based on the 'create' flag indicates a pattern for resource management.,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9156, 1912, 319, 262, 705, 17953, 6, 6056, 9217, 257, 3912, 329, 8271, 4542, 13]",0.5,413,ml_signal,161,Conditional logic based on the 'create' flag indicates a pattern for resource management.,,413,,[]
üß† ML Signal: Conditional logic based on the 'start' flag indicates a pattern for state management.,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9156, 1912, 319, 262, 705, 9688, 6, 6056, 9217, 257, 3912, 329, 1181, 4542, 13]",0.5,440,ml_signal,166,Conditional logic based on the 'start' flag indicates a pattern for state management.,,413,"                * no id or name specified, return the active experiment.","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1635, 645, 4686, 393, 1438, 7368, 11, 1441, 262, 4075, 6306, 13]"
‚úÖ Best Practice: Use logging to provide information about the application's operation,"[26486, 227, 6705, 19939, 25, 5765, 18931, 284, 2148, 1321, 546, 262, 3586, 338, 4905]",0.5,477,best_practice,179,Use logging to provide information about the application's operation,,440,"                * if id or name is specified, return the specified experiment. If no such exp found, raise Error.","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1635, 611, 4686, 393, 1438, 318, 7368, 11, 1441, 262, 7368, 6306, 13, 1002, 645, 884, 1033, 1043, 11, 5298, 13047, 13]"
üß† ML Signal: Usage of URL parsing to determine the scheme,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 10289, 32096, 284, 5004, 262, 7791]",0.5,497,ml_signal,181,Usage of URL parsing to determine the scheme,,477,            * If `active experiment` not exists:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1635, 1002, 4600, 5275, 6306, 63, 407, 7160, 25]"
‚ö†Ô∏è SAST Risk (Low): Potential race condition if file locking is not handled properly,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 3234, 4006, 611, 2393, 22656, 318, 407, 12118, 6105]",0.5,534,sast_risk,184,Potential race condition if file locking is not handled properly,Low,497,"                * if id or name is specified, return the specified experiment. If no such exp found, raise Error.","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1635, 611, 4686, 393, 1438, 318, 7368, 11, 1441, 262, 7368, 6306, 13, 1002, 645, 884, 1033, 1043, 11, 5298, 13047, 13]"
‚úÖ Best Practice: Use of type hints for return value improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 20269, 329, 1441, 1988, 19575, 2438, 1100, 1799, 290, 5529, 1799]",1.0,544,best_practice,192,Use of type hints for return value improves code readability and maintainability,,534,        create : boolean,"[220, 220, 220, 220, 220, 220, 220, 2251, 1058, 25131]"
"‚ö†Ô∏è SAST Risk (Low): Method is not implemented, which could lead to runtime errors if called","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 11789, 318, 407, 9177, 11, 543, 714, 1085, 284, 19124, 8563, 611, 1444]",1.0,588,sast_risk,209,"Method is not implemented, which could lead to runtime errors if called",Low,544,"            exp, _ = self._get_or_create_exp(experiment_id=experiment_id, experiment_name=experiment_name)","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1033, 11, 4808, 796, 2116, 13557, 1136, 62, 273, 62, 17953, 62, 11201, 7, 23100, 3681, 62, 312, 28, 23100, 3681, 62, 312, 11, 6306, 62, 3672, 28, 23100, 3681, 62, 3672, 8]"
‚úÖ Best Practice: Use of docstring to describe method functionality and parameters,"[26486, 227, 6705, 19939, 25, 5765, 286, 2205, 8841, 284, 6901, 2446, 11244, 290, 10007]",1.0,597,best_practice,210,Use of docstring to describe method functionality and parameters,,588,        else:,"[220, 220, 220, 220, 220, 220, 220, 2073, 25]"
"‚ö†Ô∏è SAST Risk (Low): Method is not implemented, which could lead to runtime errors if called","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 11789, 318, 407, 9177, 11, 543, 714, 1085, 284, 19124, 8563, 611, 1444]",1.0,605,sast_risk,219,"Method is not implemented, which could lead to runtime errors if called",Low,597,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚úÖ Best Practice: Check for the presence of keys before accessing dictionary elements to avoid KeyError.,"[26486, 227, 6705, 19939, 25, 6822, 329, 262, 4931, 286, 8251, 878, 22534, 22155, 4847, 284, 3368, 7383, 12331, 13]",0.5,645,best_practice,225,Check for the presence of keys before accessing dictionary elements to avoid KeyError.,,605,"                self._get_exp(experiment_id=experiment_id, experiment_name=experiment_name),","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13557, 1136, 62, 11201, 7, 23100, 3681, 62, 312, 28, 23100, 3681, 62, 312, 11, 6306, 62, 3672, 28, 23100, 3681, 62, 3672, 828]"
‚ö†Ô∏è SAST Risk (Low): Raising a generic ValueError without additional context may make debugging harder.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 7567, 1710, 257, 14276, 11052, 12331, 1231, 3224, 4732, 743, 787, 28769, 7069, 13]",0.5,657,sast_risk,227,Raising a generic ValueError without additional context may make debugging harder.,Low,645,            ),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1267]"
"üß† ML Signal: Accessing configuration settings, which may indicate a pattern of retrieving system settings.","[8582, 100, 254, 10373, 26484, 25, 8798, 278, 8398, 6460, 11, 543, 743, 7603, 257, 3912, 286, 50122, 1080, 6460, 13]",0.5,675,ml_signal,229,"Accessing configuration settings, which may indicate a pattern of retrieving system settings.",,657,            if experiment_name is None:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 6306, 62, 3672, 318, 6045, 25]"
‚úÖ Best Practice: Method should have a docstring to describe its purpose and usage.,"[26486, 227, 6705, 19939, 25, 11789, 815, 423, 257, 2205, 8841, 284, 6901, 663, 4007, 290, 8748, 13]",0.5,693,best_practice,229,Method should have a docstring to describe its purpose and usage.,,675,            if experiment_name is None:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 6306, 62, 3672, 318, 6045, 25]"
üß† ML Signal: Usage of setdefault to initialize dictionary keys with default values.,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 900, 12286, 284, 41216, 22155, 8251, 351, 4277, 3815, 13]",0.5,719,ml_signal,230,Usage of setdefault to initialize dictionary keys with default values.,,693,                experiment_name = self._default_exp_name,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 6306, 62, 3672, 796, 2116, 13557, 12286, 62, 11201, 62, 3672]"
‚úÖ Best Practice: Use of a clear and concise return statement for conditional logic,"[26486, 227, 6705, 19939, 25, 5765, 286, 257, 1598, 290, 35327, 1441, 2643, 329, 26340, 9156]",0.5,747,best_practice,239,Use of a clear and concise return statement for conditional logic,,719,"            # NOTE: for other schemes like http, we double check to avoid create exp conflicts","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 24550, 25, 329, 584, 16546, 588, 2638, 11, 356, 4274, 2198, 284, 3368, 2251, 1033, 12333]"
‚úÖ Best Practice: Include a docstring to describe the method's purpose and return value.,"[26486, 227, 6705, 19939, 25, 40348, 257, 2205, 8841, 284, 6901, 262, 2446, 338, 4007, 290, 1441, 1988, 13]",1.0,775,best_practice,241,Include a docstring to describe the method's purpose and return value.,,747,"                return self.create_exp(experiment_name), True","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441, 2116, 13, 17953, 62, 11201, 7, 23100, 3681, 62, 3672, 828, 6407]"
‚ö†Ô∏è SAST Risk (Low): Using NotImplementedError without implementation can lead to runtime errors if the method is called.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 1892, 3546, 1154, 12061, 12331, 1231, 7822, 460, 1085, 284, 19124, 8563, 611, 262, 2446, 318, 1444, 13]",1.0,801,sast_risk,248,Using NotImplementedError without implementation can lead to runtime errors if the method is called.,Low,775,"    def _get_exp(self, experiment_id=None, experiment_name=None) -> Experiment:","[220, 220, 220, 825, 4808, 1136, 62, 11201, 7, 944, 11, 6306, 62, 312, 28, 14202, 11, 6306, 62, 3672, 28, 14202, 8, 4613, 29544, 25]"
‚úÖ Best Practice: Use of @property decorator for getter method,"[26486, 227, 6705, 19939, 25, 5765, 286, 2488, 26745, 11705, 1352, 329, 651, 353, 2446]",1.0,810,best_practice,253,Use of @property decorator for getter method,,801,        ----------,"[220, 220, 220, 220, 220, 220, 220, 24200, 438]"
‚úÖ Best Practice: Use of @property.setter decorator for setter method,"[26486, 227, 6705, 19939, 25, 5765, 286, 2488, 26745, 13, 2617, 353, 11705, 1352, 329, 900, 353, 2446]",1.0,825,best_practice,255,Use of @property.setter decorator for setter method,,810,            The id of experiment,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 383, 4686, 286, 6306]"
‚ö†Ô∏è SAST Risk (Low): No validation on the value being set,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 1400, 21201, 319, 262, 1988, 852, 900]",0.5,833,sast_risk,260,No validation on the value being set,Low,825,        -------,"[220, 220, 220, 220, 220, 220, 220, 35656]"
üß† ML Signal: Initialization of experiment manager with experiment name,"[8582, 100, 254, 10373, 26484, 25, 20768, 1634, 286, 6306, 4706, 351, 6306, 1438]",0.5,842,ml_signal,264,Initialization of experiment manager with experiment name,,833,        Raises,"[220, 220, 220, 220, 220, 220, 220, 7567, 2696]"
üß† ML Signal: Tracking of experiment ID,"[8582, 100, 254, 10373, 26484, 25, 37169, 286, 6306, 4522]",0.5,851,ml_signal,266,Tracking of experiment ID,,842,        ValueError,"[220, 220, 220, 220, 220, 220, 220, 11052, 12331]"
"üß† ML Signal: Starting an experiment, common in ML workflows","[8582, 100, 254, 10373, 26484, 25, 17962, 281, 6306, 11, 2219, 287, 10373, 670, 44041]",0.5,873,ml_signal,270,"Starting an experiment, common in ML workflows",,851,"    def delete_exp(self, experiment_id=None, experiment_name=None):","[220, 220, 220, 825, 12233, 62, 11201, 7, 944, 11, 6306, 62, 312, 28, 14202, 11, 6306, 62, 3672, 28, 14202, 2599]"
‚úÖ Best Practice: Importing mlflow inside the function to limit scope,"[26486, 227, 6705, 19939, 25, 17267, 278, 285, 1652, 9319, 2641, 262, 2163, 284, 4179, 8354]",0.5,884,best_practice,272,Importing mlflow inside the function to limit scope,,873,        Delete an experiment.,"[220, 220, 220, 220, 220, 220, 220, 23520, 281, 6306, 13]"
‚ö†Ô∏è SAST Risk (Low): No error handling for mlflow.start_run,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 1400, 4049, 9041, 329, 285, 1652, 9319, 13, 9688, 62, 5143]",0.5,892,sast_risk,274,No error handling for mlflow.start_run,Low,884,        Parameters,"[220, 220, 220, 220, 220, 220, 220, 40117]"
"üß† ML Signal: Logging parameters, common in ML experiment tracking","[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 10007, 11, 2219, 287, 10373, 6306, 9646]",0.5,907,ml_signal,277,"Logging parameters, common in ML experiment tracking",,892,            the experiment id.,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 262, 6306, 4686, 13]"
‚úÖ Best Practice: Importing mlflow inside the function to limit scope,"[26486, 227, 6705, 19939, 25, 17267, 278, 285, 1652, 9319, 2641, 262, 2163, 284, 4179, 8354]",0.5,922,best_practice,279,Importing mlflow inside the function to limit scope,,907,            the experiment name.,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 262, 6306, 1438, 13]"
‚ö†Ô∏è SAST Risk (Low): No validation on key and value types,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 1400, 21201, 319, 1994, 290, 1988, 3858]",0.5,948,sast_risk,281,No validation on key and value types,Low,922,"        raise NotImplementedError(f""Please implement the `delete_exp` method."")","[220, 220, 220, 220, 220, 220, 220, 5298, 1892, 3546, 1154, 12061, 12331, 7, 69, 1, 5492, 3494, 262, 4600, 33678, 62, 11201, 63, 2446, 19570]"
"üß† ML Signal: Logging metrics, common in ML experiment tracking","[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 20731, 11, 2219, 287, 10373, 6306, 9646]",0.5,958,ml_signal,284,"Logging metrics, common in ML experiment tracking",,948,    def default_uri(self):,"[220, 220, 220, 825, 4277, 62, 9900, 7, 944, 2599]"
‚úÖ Best Practice: Importing mlflow inside the function to limit scope,"[26486, 227, 6705, 19939, 25, 17267, 278, 285, 1652, 9319, 2641, 262, 2163, 284, 4179, 8354]",0.5,968,best_practice,284,Importing mlflow inside the function to limit scope,,958,    def default_uri(self):,"[220, 220, 220, 825, 4277, 62, 9900, 7, 944, 2599]"
‚ö†Ô∏è SAST Risk (Low): No validation on key and value types,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 1400, 21201, 319, 1994, 290, 1988, 3858]",0.5,1003,sast_risk,288,No validation on key and value types,Low,968,"        if ""kwargs"" not in C.exp_manager or ""uri"" not in C.exp_manager[""kwargs""]:","[220, 220, 220, 220, 220, 220, 220, 611, 366, 46265, 22046, 1, 407, 287, 327, 13, 11201, 62, 37153, 393, 366, 9900, 1, 407, 287, 327, 13, 11201, 62, 37153, 14692, 46265, 22046, 1, 5974]"
"üß† ML Signal: Ending an experiment, common in ML workflows","[8582, 100, 254, 10373, 26484, 25, 43626, 281, 6306, 11, 2219, 287, 10373, 670, 44041]",0.5,1003,ml_signal,291,"Ending an experiment, common in ML workflows",,1003,,[]
‚úÖ Best Practice: Importing mlflow inside the function to limit scope,"[26486, 227, 6705, 19939, 25, 17267, 278, 285, 1652, 9319, 2641, 262, 2163, 284, 4179, 8354]",0.5,1015,best_practice,293,Importing mlflow inside the function to limit scope,,1003,"    def default_uri(self, value):","[220, 220, 220, 825, 4277, 62, 9900, 7, 944, 11, 1988, 2599]"
‚ö†Ô∏è SAST Risk (Low): No error handling for mlflow.end_run,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 1400, 4049, 9041, 329, 285, 1652, 9319, 13, 437, 62, 5143]",0.5,1015,sast_risk,295,No error handling for mlflow.end_run,Low,1015,,[]
"üß† ML Signal: Method definition in a class, indicating object-oriented design","[8582, 100, 254, 10373, 26484, 25, 11789, 6770, 287, 257, 1398, 11, 12739, 2134, 12, 17107, 1486]",0.5,1024,ml_signal,253,"Method definition in a class, indicating object-oriented design",,1015,        ----------,"[220, 220, 220, 220, 220, 220, 220, 24200, 438]"
"üß† ML Signal: Use of mlflow library, indicating machine learning experiment tracking","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 285, 1652, 9319, 5888, 11, 12739, 4572, 4673, 6306, 9646]",0.5,1039,ml_signal,255,"Use of mlflow library, indicating machine learning experiment tracking",,1024,            The id of experiment,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 383, 4686, 286, 6306]"
‚úÖ Best Practice: Provide a default value for experiment_name if None,"[26486, 227, 6705, 19939, 25, 44290, 257, 4277, 1988, 329, 6306, 62, 3672, 611, 6045]",0.5,1048,best_practice,264,Provide a default value for experiment_name if None,,1039,        Raises,"[220, 220, 220, 220, 220, 220, 220, 7567, 2696]"
üß† ML Signal: Usage of a method to get or create an experiment,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2446, 284, 651, 393, 2251, 281, 6306]",0.5,1056,ml_signal,267,Usage of a method to get or create an experiment,,1048,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
üß† ML Signal: Setting an active experiment,"[8582, 100, 254, 10373, 26484, 25, 25700, 281, 4075, 6306]",0.5,1056,ml_signal,269,Setting an active experiment,,1056,,[]
üß† ML Signal: Starting an experiment with specific parameters,"[8582, 100, 254, 10373, 26484, 25, 17962, 281, 6306, 351, 2176, 10007]",0.5,1064,ml_signal,271,Starting an experiment with specific parameters,,1056,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
üß† ML Signal: Returning the active experiment,"[8582, 100, 254, 10373, 26484, 25, 42882, 262, 4075, 6306]",0.5,1064,ml_signal,273,Returning the active experiment,,1064,,[]
‚úÖ Best Practice: Use of default parameter value for recorder_status,"[26486, 227, 6705, 19939, 25, 5765, 286, 4277, 11507, 1988, 329, 38156, 62, 13376]",0.5,1086,best_practice,270,Use of default parameter value for recorder_status,,1064,"    def delete_exp(self, experiment_id=None, experiment_name=None):","[220, 220, 220, 825, 12233, 62, 11201, 7, 944, 11, 6306, 62, 312, 28, 14202, 11, 6306, 62, 3672, 28, 14202, 2599]"
‚úÖ Best Practice: Check for None before accessing an attribute,"[26486, 227, 6705, 19939, 25, 6822, 329, 6045, 878, 22534, 281, 11688]",0.5,1097,best_practice,272,Check for None before accessing an attribute,,1086,        Delete an experiment.,"[220, 220, 220, 220, 220, 220, 220, 23520, 281, 6306, 13]"
"üß† ML Signal: Method call on an object, indicating object-oriented design","[8582, 100, 254, 10373, 26484, 25, 11789, 869, 319, 281, 2134, 11, 12739, 2134, 12, 17107, 1486]",1.0,1105,ml_signal,274,"Method call on an object, indicating object-oriented design",,1097,        Parameters,"[220, 220, 220, 220, 220, 220, 220, 40117]"
"üß† ML Signal: Setting an attribute to None, indicating resource cleanup","[8582, 100, 254, 10373, 26484, 25, 25700, 281, 11688, 284, 6045, 11, 12739, 8271, 27425]",1.0,1118,ml_signal,276,"Setting an attribute to None, indicating resource cleanup",,1105,        experiment_id  : str,"[220, 220, 220, 220, 220, 220, 220, 6306, 62, 312, 220, 1058, 965]"
‚ö†Ô∏è SAST Risk (Low): Using assert for argument validation can be bypassed if Python is run with optimizations.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 6818, 329, 4578, 21201, 460, 307, 17286, 276, 611, 11361, 318, 1057, 351, 41446, 13]",1.0,1127,sast_risk,275,Using assert for argument validation can be bypassed if Python is run with optimizations.,Low,1118,        ----------,"[220, 220, 220, 220, 220, 220, 220, 24200, 438]"
üß† ML Signal: Usage of a client to create an experiment indicates interaction with an external service or API.,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 5456, 284, 2251, 281, 6306, 9217, 10375, 351, 281, 7097, 2139, 393, 7824, 13]",1.0,1142,ml_signal,277,Usage of a client to create an experiment indicates interaction with an external service or API.,,1127,            the experiment id.,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 262, 6306, 4686, 13]"
üß† ML Signal: Handling specific exceptions can indicate expected failure modes or error handling patterns.,"[8582, 100, 254, 10373, 26484, 25, 49500, 2176, 13269, 460, 7603, 2938, 5287, 12881, 393, 4049, 9041, 7572, 13]",1.0,1168,ml_signal,281,Handling specific exceptions can indicate expected failure modes or error handling patterns.,,1142,"        raise NotImplementedError(f""Please implement the `delete_exp` method."")","[220, 220, 220, 220, 220, 220, 220, 5298, 1892, 3546, 1154, 12061, 12331, 7, 69, 1, 5492, 3494, 262, 4600, 33678, 62, 11201, 63, 2446, 19570]"
‚ö†Ô∏è SAST Risk (Low): Raising a custom exception without additional context may obscure the original error.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 7567, 1710, 257, 2183, 6631, 1231, 3224, 4732, 743, 18611, 262, 2656, 4049, 13]",1.0,1173,sast_risk,283,Raising a custom exception without additional context may obscure the original error.,Low,1168,    @property,"[220, 220, 220, 2488, 26745]"
üß† ML Signal: Returning an object that encapsulates experiment details suggests a pattern of object-oriented design.,"[8582, 100, 254, 10373, 26484, 25, 42882, 281, 2134, 326, 32652, 15968, 6306, 3307, 5644, 257, 3912, 286, 2134, 12, 17107, 1486, 13]",1.0,1183,ml_signal,284,Returning an object that encapsulates experiment details suggests a pattern of object-oriented design.,,1173,    def default_uri(self):,"[220, 220, 220, 825, 4277, 62, 9900, 7, 944, 2599]"
‚ö†Ô∏è SAST Risk (Low): Use of assert for input validation can be bypassed if Python is run with optimizations.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 6818, 329, 5128, 21201, 460, 307, 17286, 276, 611, 11361, 318, 1057, 351, 41446, 13]",1.0,1218,sast_risk,288,Use of assert for input validation can be bypassed if Python is run with optimizations.,Low,1183,"        if ""kwargs"" not in C.exp_manager or ""uri"" not in C.exp_manager[""kwargs""]:","[220, 220, 220, 220, 220, 220, 220, 611, 366, 46265, 22046, 1, 407, 287, 327, 13, 11201, 62, 37153, 393, 366, 9900, 1, 407, 287, 327, 13, 11201, 62, 37153, 14692, 46265, 22046, 1, 5974]"
üß† ML Signal: Pattern of retrieving an experiment by ID,"[8582, 100, 254, 10373, 26484, 25, 23939, 286, 50122, 281, 6306, 416, 4522]",1.0,1244,ml_signal,294,Pattern of retrieving an experiment by ID,,1218,"        C.exp_manager.setdefault(""kwargs"", {})[""uri""] = value","[220, 220, 220, 220, 220, 220, 220, 327, 13, 11201, 62, 37153, 13, 2617, 12286, 7203, 46265, 22046, 1600, 23884, 8, 14692, 9900, 8973, 796, 1988]"
üß† ML Signal: Pattern of creating an MLflowExperiment object,"[8582, 100, 254, 10373, 26484, 25, 23939, 286, 4441, 281, 10373, 11125, 20468, 3681, 2134]",1.0,1253,ml_signal,297,Pattern of creating an MLflowExperiment object,,1244,    def uri(self):,"[220, 220, 220, 825, 2956, 72, 7, 944, 2599]"
‚ö†Ô∏è SAST Risk (Low): Catching broad exceptions can mask other issues.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 327, 19775, 3154, 13269, 460, 9335, 584, 2428, 13]",0.5,1261,sast_risk,302,Catching broad exceptions can mask other issues.,Low,1253,        -------,"[220, 220, 220, 220, 220, 220, 220, 35656]"
üß† ML Signal: Pattern of retrieving an experiment by name,"[8582, 100, 254, 10373, 26484, 25, 23939, 286, 50122, 281, 6306, 416, 1438]",1.0,1269,ml_signal,308,Pattern of retrieving an experiment by name,,1261,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
üß† ML Signal: Pattern of creating an MLflowExperiment object,"[8582, 100, 254, 10373, 26484, 25, 23939, 286, 4441, 281, 10373, 11125, 20468, 3681, 2134]",1.0,1277,ml_signal,312,Pattern of creating an MLflowExperiment object,,1269,        -------,"[220, 220, 220, 220, 220, 220, 220, 35656]"
‚ö†Ô∏è SAST Risk (Low): Catching broad exceptions can mask other issues.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 327, 19775, 3154, 13269, 460, 9335, 584, 2428, 13]",0.5,1277,sast_risk,316,Catching broad exceptions can mask other issues.,Low,1277,,[]
‚úÖ Best Practice: Consider adding type hints for function parameters and return type for better readability and maintainability.,"[26486, 227, 6705, 19939, 25, 12642, 4375, 2099, 20269, 329, 2163, 10007, 290, 1441, 2099, 329, 1365, 1100, 1799, 290, 5529, 1799, 13]",1.0,1298,best_practice,313,Consider adding type hints for function parameters and return type for better readability and maintainability.,,1277,        A dictionary (name -> experiment) of experiments information that being stored.,"[220, 220, 220, 220, 220, 220, 220, 317, 22155, 357, 3672, 4613, 6306, 8, 286, 10256, 1321, 326, 852, 8574, 13]"
‚úÖ Best Practice: Use kwargs.get with a default value to handle missing keys gracefully.,"[26486, 227, 6705, 19939, 25, 5765, 479, 86, 22046, 13, 1136, 351, 257, 4277, 1988, 284, 5412, 4814, 8251, 11542, 2759, 13]",1.0,1325,best_practice,315,Use kwargs.get with a default value to handle missing keys gracefully.,,1298,"        raise NotImplementedError(f""Please implement the `list_experiments` method."")","[220, 220, 220, 220, 220, 220, 220, 5298, 1892, 3546, 1154, 12061, 12331, 7, 69, 1, 5492, 3494, 262, 4600, 4868, 62, 23100, 6800, 63, 2446, 19570]"
‚úÖ Best Practice: Use kwargs.get with a default value to handle missing keys gracefully.,"[26486, 227, 6705, 19939, 25, 5765, 479, 86, 22046, 13, 1136, 351, 257, 4277, 1988, 284, 5412, 4814, 8251, 11542, 2759, 13]",1.0,1325,best_practice,317,Use kwargs.get with a default value to handle missing keys gracefully.,,1325,,[]
‚úÖ Best Practice: Use kwargs.get with a default value to handle missing keys gracefully.,"[26486, 227, 6705, 19939, 25, 5765, 479, 86, 22046, 13, 1136, 351, 257, 4277, 1988, 284, 5412, 4814, 8251, 11542, 2759, 13]",1.0,1329,best_practice,319,Use kwargs.get with a default value to handle missing keys gracefully.,,1325,"    """"""","[220, 220, 220, 37227]"
‚úÖ Best Practice: Use kwargs.get with a default value to handle missing keys gracefully.,"[26486, 227, 6705, 19939, 25, 5765, 479, 86, 22046, 13, 1136, 351, 257, 4277, 1988, 284, 5412, 4814, 8251, 11542, 2759, 13]",1.0,1341,best_practice,320,Use kwargs.get with a default value to handle missing keys gracefully.,,1329,    Use mlflow to implement ExpManager.,"[220, 220, 220, 5765, 285, 1652, 9319, 284, 3494, 5518, 13511, 13]"
üß† ML Signal: The use of a client to search runs suggests interaction with an external system or API.,"[8582, 100, 254, 10373, 26484, 25, 383, 779, 286, 257, 5456, 284, 2989, 4539, 5644, 10375, 351, 281, 7097, 1080, 393, 7824, 13]",0.5,1346,ml_signal,323,The use of a client to search runs suggests interaction with an external system or API.,,1341,    @property,"[220, 220, 220, 2488, 26745]"
‚ö†Ô∏è SAST Risk (Low): Use of assert for input validation can be bypassed if Python is run with optimizations.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 6818, 329, 5128, 21201, 460, 307, 17286, 276, 611, 11361, 318, 1057, 351, 41446, 13]",0.5,1358,sast_risk,320,Use of assert for input validation can be bypassed if Python is run with optimizations.,Low,1346,    Use mlflow to implement ExpManager.,"[220, 220, 220, 5765, 285, 1652, 9319, 284, 3494, 5518, 13511, 13]"
üß† ML Signal: Conditional logic based on input parameters.,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9156, 1912, 319, 5128, 10007, 13]",1.0,1396,ml_signal,325,Conditional logic based on input parameters.,,1358,        # Please refer to `tests/dependency_tests/test_mlflow.py::MLflowTest::test_creating_client`,"[220, 220, 220, 220, 220, 220, 220, 1303, 4222, 3522, 284, 4600, 41989, 14, 45841, 1387, 62, 41989, 14, 9288, 62, 76, 1652, 9319, 13, 9078, 3712, 5805, 11125, 14402, 3712, 9288, 62, 20123, 278, 62, 16366, 63]"
üß† ML Signal: Use of client API to retrieve data by name.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 5456, 7824, 284, 19818, 1366, 416, 1438, 13]",0.5,1405,ml_signal,329,Use of client API to retrieve data by name.,,1396,    def _start_exp(,"[220, 220, 220, 825, 4808, 9688, 62, 11201, 7]"
‚ö†Ô∏è SAST Risk (Low): Potential information disclosure if exception message is exposed to users.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 1321, 13019, 611, 6631, 3275, 318, 7362, 284, 2985, 13]",0.5,1423,sast_risk,332,Potential information disclosure if exception message is exposed to users.,Low,1405,"        experiment_id: Optional[Text] = None,","[220, 220, 220, 220, 220, 220, 220, 6306, 62, 312, 25, 32233, 58, 8206, 60, 796, 6045, 11]"
üß† ML Signal: Use of client API to delete data by ID.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 5456, 7824, 284, 12233, 1366, 416, 4522, 13]",0.5,1441,ml_signal,334,Use of client API to delete data by ID.,,1423,"        recorder_id: Optional[Text] = None,","[220, 220, 220, 220, 220, 220, 220, 38156, 62, 312, 25, 32233, 58, 8206, 60, 796, 6045, 11]"
‚ö†Ô∏è SAST Risk (Low): Catching broad exceptions can mask other issues.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 327, 19775, 3154, 13269, 460, 9335, 584, 2428, 13]",0.5,1445,sast_risk,337,Catching broad exceptions can mask other issues.,Low,1441,    ):,"[220, 220, 220, 15179]"
üß† ML Signal: Version checking for backward compatibility,"[8582, 100, 254, 10373, 26484, 25, 10628, 10627, 329, 19528, 17764]",1.0,1463,ml_signal,335,Version checking for backward compatibility,,1445,"        recorder_name: Optional[Text] = None,","[220, 220, 220, 220, 220, 220, 220, 38156, 62, 3672, 25, 32233, 58, 8206, 60, 796, 6045, 11]"
üß† ML Signal: Conditional logic based on library version,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9156, 1912, 319, 5888, 2196]",1.0,1473,ml_signal,338,Conditional logic based on library version,,1463,        # Create experiment,"[220, 220, 220, 220, 220, 220, 220, 1303, 13610, 6306]"
üß† ML Signal: Conditional logic based on library version,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9156, 1912, 319, 5888, 2196]",1.0,1513,ml_signal,341,Conditional logic based on library version,,1473,"        experiment, _ = self._get_or_create_exp(experiment_id=experiment_id, experiment_name=experiment_name)","[220, 220, 220, 220, 220, 220, 220, 6306, 11, 4808, 796, 2116, 13557, 1136, 62, 273, 62, 17953, 62, 11201, 7, 23100, 3681, 62, 312, 28, 23100, 3681, 62, 312, 11, 6306, 62, 3672, 28, 23100, 3681, 62, 3672, 8]"
‚úÖ Best Practice: Initialize dictionary with a clear name,"[26486, 227, 6705, 19939, 25, 20768, 1096, 22155, 351, 257, 1598, 1438]",0.5,1528,best_practice,343,Initialize dictionary with a clear name,,1513,        self.active_experiment = experiment,"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 5275, 62, 23100, 3681, 796, 6306]"
‚úÖ Best Practice: Use of a class to encapsulate experiment details,"[26486, 227, 6705, 19939, 25, 5765, 286, 257, 1398, 284, 32652, 5039, 6306, 3307]",0.5,1568,best_practice,345,Use of a class to encapsulate experiment details,,1528,"        self.active_experiment.start(recorder_id=recorder_id, recorder_name=recorder_name, resume=resume)","[220, 220, 220, 220, 220, 220, 220, 2116, 13, 5275, 62, 23100, 3681, 13, 9688, 7, 8344, 2875, 62, 312, 28, 8344, 2875, 62, 312, 11, 38156, 62, 3672, 28, 8344, 2875, 62, 3672, 11, 15294, 28, 411, 2454, 8]"
‚úÖ Best Practice: Use of dictionary for quick lookup by experiment name,"[26486, 227, 6705, 19939, 25, 5765, 286, 22155, 329, 2068, 35847, 416, 6306, 1438]",1.0,1608,best_practice,345,Use of dictionary for quick lookup by experiment name,,1568,"        self.active_experiment.start(recorder_id=recorder_id, recorder_name=recorder_name, resume=resume)","[220, 220, 220, 220, 220, 220, 220, 2116, 13, 5275, 62, 23100, 3681, 13, 9688, 7, 8344, 2875, 62, 312, 28, 8344, 2875, 62, 312, 11, 38156, 62, 3672, 28, 8344, 2875, 62, 3672, 11, 15294, 28, 411, 2454, 8]"
