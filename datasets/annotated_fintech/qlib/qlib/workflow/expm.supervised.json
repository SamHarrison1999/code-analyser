[
  {
    "line": 9,
    "text": "import os",
    "annotation": "\u2705 Best Practice: Use of relative imports for better modularity and maintainability",
    "confidence": 0.5,
    "tokens": [
      11748,
      28686
    ],
    "start_token": 0,
    "end_token": 2,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      3585,
      17944,
      329,
      1365,
      26507,
      414,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of relative imports for better modularity and maintainability"
  },
  {
    "line": 11,
    "text": "from pathlib import Path",
    "annotation": "\u2705 Best Practice: Use of relative imports for better modularity and maintainability",
    "confidence": 0.5,
    "tokens": [
      6738,
      3108,
      8019,
      1330,
      10644
    ],
    "start_token": 2,
    "end_token": 7,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      3585,
      17944,
      329,
      1365,
      26507,
      414,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of relative imports for better modularity and maintainability"
  },
  {
    "line": 13,
    "text": "from .exp import MLflowExperiment, Experiment",
    "annotation": "\u2705 Best Practice: Use of relative imports for better modularity and maintainability",
    "confidence": 0.5,
    "tokens": [
      6738,
      764,
      11201,
      1330,
      10373,
      11125,
      20468,
      3681,
      11,
      29544
    ],
    "start_token": 7,
    "end_token": 17,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      3585,
      17944,
      329,
      1365,
      26507,
      414,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of relative imports for better modularity and maintainability"
  },
  {
    "line": 15,
    "text": "from .recorder import Recorder",
    "annotation": "\u2705 Best Practice: Use of relative imports for better modularity and maintainability",
    "confidence": 0.5,
    "tokens": [
      6738,
      764,
      8344,
      2875,
      1330,
      3311,
      2875
    ],
    "start_token": 17,
    "end_token": 24,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      3585,
      17944,
      329,
      1365,
      26507,
      414,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of relative imports for better modularity and maintainability"
  },
  {
    "line": 16,
    "text": "from ..log import get_module_logger",
    "annotation": "\u2705 Best Practice: Use of relative imports for better modularity and maintainability",
    "confidence": 0.5,
    "tokens": [
      6738,
      11485,
      6404,
      1330,
      651,
      62,
      21412,
      62,
      6404,
      1362
    ],
    "start_token": 24,
    "end_token": 34,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      3585,
      17944,
      329,
      1365,
      26507,
      414,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of relative imports for better modularity and maintainability"
  },
  {
    "line": 16,
    "text": "from ..log import get_module_logger",
    "annotation": "\ud83e\udde0 ML Signal: Logging setup indicates potential for tracking and monitoring",
    "confidence": 0.5,
    "tokens": [
      6738,
      11485,
      6404,
      1330,
      651,
      62,
      21412,
      62,
      6404,
      1362
    ],
    "start_token": 34,
    "end_token": 44,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      9058,
      9217,
      2785,
      329,
      9646,
      290,
      9904
    ],
    "label": "ml_signal",
    "reason": "Logging setup indicates potential for tracking and monitoring"
  },
  {
    "line": 23,
    "text": "class ExpManager:",
    "annotation": "\u2705 Best Practice: Type hinting improves code readability and maintainability",
    "confidence": 1.0,
    "tokens": [
      4871,
      5518,
      13511,
      25
    ],
    "start_token": 44,
    "end_token": 48,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting improves code readability and maintainability"
  },
  {
    "line": 25,
    "text": "    This is the `ExpManager` class for managing experiments. The API is designed similar to mlflow.",
    "annotation": "\u2705 Best Practice: Use of type annotations for function parameters improves code readability and maintainability.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      770,
      318,
      262,
      4600,
      16870,
      13511,
      63,
      1398,
      329,
      11149,
      10256,
      13,
      383,
      7824,
      318,
      3562,
      2092,
      284,
      285,
      1652,
      9319,
      13
    ],
    "start_token": 48,
    "end_token": 73,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      2163,
      10007,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Use of type annotations for function parameters improves code readability and maintainability."
  },
  {
    "line": 30,
    "text": "    So we try to align them together.  They share the same variable, which is called **default uri**. Please refer to `ExpManager.default_uri` for details of variable sharing.",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential exposure of sensitive information in logs. Ensure `self.uri` does not contain sensitive data.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1406,
      356,
      1949,
      284,
      10548,
      606,
      1978,
      13,
      220,
      1119,
      2648,
      262,
      976,
      7885,
      11,
      543,
      318,
      1444,
      12429,
      12286,
      2956,
      72,
      1174,
      13,
      4222,
      3522,
      284,
      4600,
      16870,
      13511,
      13,
      12286,
      62,
      9900,
      63,
      329,
      3307,
      286,
      7885,
      7373,
      13
    ],
    "start_token": 73,
    "end_token": 117,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      7111,
      286,
      8564,
      1321,
      287,
      17259,
      13,
      48987,
      4600,
      944,
      13,
      9900,
      63,
      857,
      407,
      3994,
      8564,
      1366,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential exposure of sensitive information in logs. Ensure `self.uri` does not contain sensitive data."
  },
  {
    "line": 30,
    "text": "    So we try to align them together.  They share the same variable, which is called **default uri**. Please refer to `ExpManager.default_uri` for details of variable sharing.",
    "annotation": "\u2705 Best Practice: Use of __repr__ for a clear and unambiguous string representation of the object",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1406,
      356,
      1949,
      284,
      10548,
      606,
      1978,
      13,
      220,
      1119,
      2648,
      262,
      976,
      7885,
      11,
      543,
      318,
      1444,
      12429,
      12286,
      2956,
      72,
      1174,
      13,
      4222,
      3522,
      284,
      4600,
      16870,
      13511,
      13,
      12286,
      62,
      9900,
      63,
      329,
      3307,
      286,
      7885,
      7373,
      13
    ],
    "start_token": 117,
    "end_token": 161,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      260,
      1050,
      834,
      329,
      257,
      1598,
      290,
      42053,
      29709,
      4731,
      10552,
      286,
      262,
      2134
    ],
    "label": "best_practice",
    "reason": "Use of __repr__ for a clear and unambiguous string representation of the object"
  },
  {
    "line": 32,
    "text": "    When the user starts an experiment, the user may want to set the uri to a specific uri (it will override **default uri** during this period), and then unset the **specific uri** and fallback to the **default uri**.    `ExpManager._active_exp_uri` is that **specific uri**.",
    "annotation": "\u2705 Best Practice: Using format method for string formatting improves readability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1649,
      262,
      2836,
      4940,
      281,
      6306,
      11,
      262,
      2836,
      743,
      765,
      284,
      900,
      262,
      2956,
      72,
      284,
      257,
      2176,
      2956,
      72,
      357,
      270,
      481,
      20957,
      12429,
      12286,
      2956,
      72,
      1174,
      1141,
      428,
      2278,
      828,
      290,
      788,
      555,
      2617,
      262,
      12429,
      11423,
      2956,
      72,
      1174,
      290,
      2121,
      1891,
      284,
      262,
      12429,
      12286,
      2956,
      72,
      1174,
      13,
      220,
      220,
      220,
      4600,
      16870,
      13511,
      13557,
      5275,
      62,
      11201,
      62,
      9900,
      63,
      318,
      326,
      12429,
      11423,
      2956,
      72,
      1174,
      13
    ],
    "start_token": 161,
    "end_token": 240,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      5794,
      2446,
      329,
      4731,
      33313,
      19575,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Using format method for string formatting improves readability"
  },
  {
    "line": 43,
    "text": "",
    "annotation": "\u2705 Best Practice: Docstring provides a clear explanation of the method's purpose and parameters.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 240,
    "end_token": 240,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      14432,
      8841,
      3769,
      257,
      1598,
      7468,
      286,
      262,
      2446,
      338,
      4007,
      290,
      10007,
      13
    ],
    "label": "best_practice",
    "reason": "Docstring provides a clear explanation of the method's purpose and parameters."
  },
  {
    "line": 66,
    "text": "        experiment_id : str",
    "annotation": "\ud83e\udde0 ML Signal: Usage of optional parameters and default values can indicate common patterns in function design.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6306,
      62,
      312,
      1058,
      965
    ],
    "start_token": 240,
    "end_token": 252,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      11902,
      10007,
      290,
      4277,
      3815,
      460,
      7603,
      2219,
      7572,
      287,
      2163,
      1486,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of optional parameters and default values can indicate common patterns in function design."
  },
  {
    "line": 66,
    "text": "        experiment_id : str",
    "annotation": "\ud83e\udde0 ML Signal: The pattern of calling another method with similar parameters can be used to understand method delegation.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6306,
      62,
      312,
      1058,
      965
    ],
    "start_token": 252,
    "end_token": 264,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      383,
      3912,
      286,
      4585,
      1194,
      2446,
      351,
      2092,
      10007,
      460,
      307,
      973,
      284,
      1833,
      2446,
      22635,
      13
    ],
    "label": "ml_signal",
    "reason": "The pattern of calling another method with similar parameters can be used to understand method delegation."
  },
  {
    "line": 74,
    "text": "        uri : str",
    "annotation": "\u2705 Best Practice: The method name starts with an underscore, indicating it's intended for internal use.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2956,
      72,
      1058,
      965
    ],
    "start_token": 264,
    "end_token": 275,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      383,
      2446,
      1438,
      4940,
      351,
      281,
      44810,
      11,
      12739,
      340,
      338,
      5292,
      329,
      5387,
      779,
      13
    ],
    "label": "best_practice",
    "reason": "The method name starts with an underscore, indicating it's intended for internal use."
  },
  {
    "line": 76,
    "text": "        resume : boolean",
    "annotation": "\u2705 Best Practice: The docstring provides a reference to another method for documentation.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      15294,
      1058,
      25131
    ],
    "start_token": 275,
    "end_token": 285,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      383,
      2205,
      8841,
      3769,
      257,
      4941,
      284,
      1194,
      2446,
      329,
      10314,
      13
    ],
    "label": "best_practice",
    "reason": "The docstring provides a reference to another method for documentation."
  },
  {
    "line": 78,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Raising NotImplementedError without implementation can lead to runtime errors if not handled.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 285,
    "end_token": 285,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      7567,
      1710,
      1892,
      3546,
      1154,
      12061,
      12331,
      1231,
      7822,
      460,
      1085,
      284,
      19124,
      8563,
      611,
      407,
      12118,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Raising NotImplementedError without implementation can lead to runtime errors if not handled."
  },
  {
    "line": 78,
    "text": "",
    "annotation": "\u2705 Best Practice: Docstring provides a clear explanation of the method's purpose and parameters",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 285,
    "end_token": 285,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      14432,
      8841,
      3769,
      257,
      1598,
      7468,
      286,
      262,
      2446,
      338,
      4007,
      290,
      10007
    ],
    "label": "best_practice",
    "reason": "Docstring provides a clear explanation of the method's purpose and parameters"
  },
  {
    "line": 90,
    "text": "            recorder_name=recorder_name,",
    "annotation": "\u2705 Best Practice: Resets the active experiment URI to ensure no stale references",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      38156,
      62,
      3672,
      28,
      8344,
      2875,
      62,
      3672,
      11
    ],
    "start_token": 285,
    "end_token": 305,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      1874,
      1039,
      262,
      4075,
      6306,
      43975,
      284,
      4155,
      645,
      39985,
      10288
    ],
    "label": "best_practice",
    "reason": "Resets the active experiment URI to ensure no stale references"
  },
  {
    "line": 92,
    "text": "            **kwargs,",
    "annotation": "\ud83e\udde0 ML Signal: Calls a subclass method, indicating a pattern of using inheritance for extending functionality",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      12429,
      46265,
      22046,
      11
    ],
    "start_token": 305,
    "end_token": 320,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      27592,
      257,
      47611,
      2446,
      11,
      12739,
      257,
      3912,
      286,
      1262,
      24155,
      329,
      16610,
      11244
    ],
    "label": "ml_signal",
    "reason": "Calls a subclass method, indicating a pattern of using inheritance for extending functionality"
  },
  {
    "line": 90,
    "text": "            recorder_name=recorder_name,",
    "annotation": "\u2705 Best Practice: Use of a private method name to indicate internal use",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      38156,
      62,
      3672,
      28,
      8344,
      2875,
      62,
      3672,
      11
    ],
    "start_token": 320,
    "end_token": 340,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      257,
      2839,
      2446,
      1438,
      284,
      7603,
      5387,
      779
    ],
    "label": "best_practice",
    "reason": "Use of a private method name to indicate internal use"
  },
  {
    "line": 92,
    "text": "            **kwargs,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Method raises NotImplementedError, which is expected for abstract methods but should be implemented in subclasses",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      12429,
      46265,
      22046,
      11
    ],
    "start_token": 340,
    "end_token": 355,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      11789,
      12073,
      1892,
      3546,
      1154,
      12061,
      12331,
      11,
      543,
      318,
      2938,
      329,
      12531,
      5050,
      475,
      815,
      307,
      9177,
      287,
      850,
      37724
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Method raises NotImplementedError, which is expected for abstract methods but should be implemented in subclasses"
  },
  {
    "line": 93,
    "text": "        )",
    "annotation": "\u2705 Best Practice: Use of type hinting for function parameters improves code readability and maintainability.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 355,
    "end_token": 363,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      9254,
      278,
      329,
      2163,
      10007,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Use of type hinting for function parameters improves code readability and maintainability."
  },
  {
    "line": 107,
    "text": "        experiment_name : str",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): The method is not implemented, which could lead to runtime errors if called.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6306,
      62,
      3672,
      1058,
      965
    ],
    "start_token": 363,
    "end_token": 375,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      383,
      2446,
      318,
      407,
      9177,
      11,
      543,
      714,
      1085,
      284,
      19124,
      8563,
      611,
      1444,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "The method is not implemented, which could lead to runtime errors if called."
  },
  {
    "line": 108,
    "text": "            name of the active experiment.",
    "annotation": "\ud83e\udde0 ML Signal: Method signature with flexible arguments indicates potential for diverse input handling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1438,
      286,
      262,
      4075,
      6306,
      13
    ],
    "start_token": 375,
    "end_token": 392,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      9877,
      351,
      12846,
      7159,
      9217,
      2785,
      329,
      10084,
      5128,
      9041
    ],
    "label": "ml_signal",
    "reason": "Method signature with flexible arguments indicates potential for diverse input handling"
  },
  {
    "line": 119,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Method not implemented, potential for misuse if not properly overridden",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 392,
    "end_token": 392,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      11789,
      407,
      9177,
      11,
      2785,
      329,
      29169,
      611,
      407,
      6105,
      23170,
      4651
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Method not implemented, potential for misuse if not properly overridden"
  },
  {
    "line": 120,
    "text": "    def create_exp(self, experiment_name: Optional[Text] = None):",
    "annotation": "\u2705 Best Practice: Use of keyword-only arguments improves code readability and prevents errors.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      2251,
      62,
      11201,
      7,
      944,
      11,
      6306,
      62,
      3672,
      25,
      32233,
      58,
      8206,
      60,
      796,
      6045,
      2599
    ],
    "start_token": 392,
    "end_token": 413,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      21179,
      12,
      8807,
      7159,
      19575,
      2438,
      1100,
      1799,
      290,
      15174,
      8563,
      13
    ],
    "label": "best_practice",
    "reason": "Use of keyword-only arguments improves code readability and prevents errors."
  },
  {
    "line": 156,
    "text": "",
    "annotation": "\u2705 Best Practice: Checking for None to handle default behavior when no ID or name is provided.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 413,
    "end_token": 413,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      39432,
      329,
      6045,
      284,
      5412,
      4277,
      4069,
      618,
      645,
      4522,
      393,
      1438,
      318,
      2810,
      13
    ],
    "label": "best_practice",
    "reason": "Checking for None to handle default behavior when no ID or name is provided."
  },
  {
    "line": 161,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on the 'create' flag indicates a pattern for resource management.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 413,
    "end_token": 413,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      262,
      705,
      17953,
      6,
      6056,
      9217,
      257,
      3912,
      329,
      8271,
      4542,
      13
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on the 'create' flag indicates a pattern for resource management."
  },
  {
    "line": 166,
    "text": "                * no id or name specified, return the active experiment.",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on the 'start' flag indicates a pattern for state management.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1635,
      645,
      4686,
      393,
      1438,
      7368,
      11,
      1441,
      262,
      4075,
      6306,
      13
    ],
    "start_token": 413,
    "end_token": 440,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      262,
      705,
      9688,
      6,
      6056,
      9217,
      257,
      3912,
      329,
      1181,
      4542,
      13
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on the 'start' flag indicates a pattern for state management."
  },
  {
    "line": 179,
    "text": "                * if id or name is specified, return the specified experiment. If no such exp found, raise Error.",
    "annotation": "\u2705 Best Practice: Use logging to provide information about the application's operation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1635,
      611,
      4686,
      393,
      1438,
      318,
      7368,
      11,
      1441,
      262,
      7368,
      6306,
      13,
      1002,
      645,
      884,
      1033,
      1043,
      11,
      5298,
      13047,
      13
    ],
    "start_token": 440,
    "end_token": 477,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      18931,
      284,
      2148,
      1321,
      546,
      262,
      3586,
      338,
      4905
    ],
    "label": "best_practice",
    "reason": "Use logging to provide information about the application's operation"
  },
  {
    "line": 181,
    "text": "            * If `active experiment` not exists:",
    "annotation": "\ud83e\udde0 ML Signal: Usage of URL parsing to determine the scheme",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1635,
      1002,
      4600,
      5275,
      6306,
      63,
      407,
      7160,
      25
    ],
    "start_token": 477,
    "end_token": 497,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      10289,
      32096,
      284,
      5004,
      262,
      7791
    ],
    "label": "ml_signal",
    "reason": "Usage of URL parsing to determine the scheme"
  },
  {
    "line": 184,
    "text": "                * if id or name is specified, return the specified experiment. If no such exp found, raise Error.",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential race condition if file locking is not handled properly",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1635,
      611,
      4686,
      393,
      1438,
      318,
      7368,
      11,
      1441,
      262,
      7368,
      6306,
      13,
      1002,
      645,
      884,
      1033,
      1043,
      11,
      5298,
      13047,
      13
    ],
    "start_token": 497,
    "end_token": 534,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      3234,
      4006,
      611,
      2393,
      22656,
      318,
      407,
      12118,
      6105
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential race condition if file locking is not handled properly"
  },
  {
    "line": 192,
    "text": "        create : boolean",
    "annotation": "\u2705 Best Practice: Use of type hints for return value improves code readability and maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2251,
      1058,
      25131
    ],
    "start_token": 534,
    "end_token": 544,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      20269,
      329,
      1441,
      1988,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of type hints for return value improves code readability and maintainability"
  },
  {
    "line": 209,
    "text": "            exp, _ = self._get_or_create_exp(experiment_id=experiment_id, experiment_name=experiment_name)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Method is not implemented, which could lead to runtime errors if called",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1033,
      11,
      4808,
      796,
      2116,
      13557,
      1136,
      62,
      273,
      62,
      17953,
      62,
      11201,
      7,
      23100,
      3681,
      62,
      312,
      28,
      23100,
      3681,
      62,
      312,
      11,
      6306,
      62,
      3672,
      28,
      23100,
      3681,
      62,
      3672,
      8
    ],
    "start_token": 544,
    "end_token": 588,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      11789,
      318,
      407,
      9177,
      11,
      543,
      714,
      1085,
      284,
      19124,
      8563,
      611,
      1444
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Method is not implemented, which could lead to runtime errors if called"
  },
  {
    "line": 210,
    "text": "        else:",
    "annotation": "\u2705 Best Practice: Use of docstring to describe method functionality and parameters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 588,
    "end_token": 597,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2205,
      8841,
      284,
      6901,
      2446,
      11244,
      290,
      10007
    ],
    "label": "best_practice",
    "reason": "Use of docstring to describe method functionality and parameters"
  },
  {
    "line": 219,
    "text": "        \"\"\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Method is not implemented, which could lead to runtime errors if called",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 597,
    "end_token": 605,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      11789,
      318,
      407,
      9177,
      11,
      543,
      714,
      1085,
      284,
      19124,
      8563,
      611,
      1444
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Method is not implemented, which could lead to runtime errors if called"
  },
  {
    "line": 225,
    "text": "                self._get_exp(experiment_id=experiment_id, experiment_name=experiment_name),",
    "annotation": "\u2705 Best Practice: Check for the presence of keys before accessing dictionary elements to avoid KeyError.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13557,
      1136,
      62,
      11201,
      7,
      23100,
      3681,
      62,
      312,
      28,
      23100,
      3681,
      62,
      312,
      11,
      6306,
      62,
      3672,
      28,
      23100,
      3681,
      62,
      3672,
      828
    ],
    "start_token": 605,
    "end_token": 645,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      329,
      262,
      4931,
      286,
      8251,
      878,
      22534,
      22155,
      4847,
      284,
      3368,
      7383,
      12331,
      13
    ],
    "label": "best_practice",
    "reason": "Check for the presence of keys before accessing dictionary elements to avoid KeyError."
  },
  {
    "line": 227,
    "text": "            )",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Raising a generic ValueError without additional context may make debugging harder.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 645,
    "end_token": 657,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      7567,
      1710,
      257,
      14276,
      11052,
      12331,
      1231,
      3224,
      4732,
      743,
      787,
      28769,
      7069,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Raising a generic ValueError without additional context may make debugging harder."
  },
  {
    "line": 229,
    "text": "            if experiment_name is None:",
    "annotation": "\ud83e\udde0 ML Signal: Accessing configuration settings, which may indicate a pattern of retrieving system settings.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      6306,
      62,
      3672,
      318,
      6045,
      25
    ],
    "start_token": 657,
    "end_token": 675,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8798,
      278,
      8398,
      6460,
      11,
      543,
      743,
      7603,
      257,
      3912,
      286,
      50122,
      1080,
      6460,
      13
    ],
    "label": "ml_signal",
    "reason": "Accessing configuration settings, which may indicate a pattern of retrieving system settings."
  },
  {
    "line": 229,
    "text": "            if experiment_name is None:",
    "annotation": "\u2705 Best Practice: Method should have a docstring to describe its purpose and usage.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      6306,
      62,
      3672,
      318,
      6045,
      25
    ],
    "start_token": 675,
    "end_token": 693,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11789,
      815,
      423,
      257,
      2205,
      8841,
      284,
      6901,
      663,
      4007,
      290,
      8748,
      13
    ],
    "label": "best_practice",
    "reason": "Method should have a docstring to describe its purpose and usage."
  },
  {
    "line": 230,
    "text": "                experiment_name = self._default_exp_name",
    "annotation": "\ud83e\udde0 ML Signal: Usage of setdefault to initialize dictionary keys with default values.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6306,
      62,
      3672,
      796,
      2116,
      13557,
      12286,
      62,
      11201,
      62,
      3672
    ],
    "start_token": 693,
    "end_token": 719,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      900,
      12286,
      284,
      41216,
      22155,
      8251,
      351,
      4277,
      3815,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of setdefault to initialize dictionary keys with default values."
  },
  {
    "line": 239,
    "text": "            # NOTE: for other schemes like http, we double check to avoid create exp conflicts",
    "annotation": "\u2705 Best Practice: Use of a clear and concise return statement for conditional logic",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      24550,
      25,
      329,
      584,
      16546,
      588,
      2638,
      11,
      356,
      4274,
      2198,
      284,
      3368,
      2251,
      1033,
      12333
    ],
    "start_token": 719,
    "end_token": 747,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      257,
      1598,
      290,
      35327,
      1441,
      2643,
      329,
      26340,
      9156
    ],
    "label": "best_practice",
    "reason": "Use of a clear and concise return statement for conditional logic"
  },
  {
    "line": 241,
    "text": "                return self.create_exp(experiment_name), True",
    "annotation": "\u2705 Best Practice: Include a docstring to describe the method's purpose and return value.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      2116,
      13,
      17953,
      62,
      11201,
      7,
      23100,
      3681,
      62,
      3672,
      828,
      6407
    ],
    "start_token": 747,
    "end_token": 775,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      40348,
      257,
      2205,
      8841,
      284,
      6901,
      262,
      2446,
      338,
      4007,
      290,
      1441,
      1988,
      13
    ],
    "label": "best_practice",
    "reason": "Include a docstring to describe the method's purpose and return value."
  },
  {
    "line": 248,
    "text": "    def _get_exp(self, experiment_id=None, experiment_name=None) -> Experiment:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Using NotImplementedError without implementation can lead to runtime errors if the method is called.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      4808,
      1136,
      62,
      11201,
      7,
      944,
      11,
      6306,
      62,
      312,
      28,
      14202,
      11,
      6306,
      62,
      3672,
      28,
      14202,
      8,
      4613,
      29544,
      25
    ],
    "start_token": 775,
    "end_token": 801,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      8554,
      1892,
      3546,
      1154,
      12061,
      12331,
      1231,
      7822,
      460,
      1085,
      284,
      19124,
      8563,
      611,
      262,
      2446,
      318,
      1444,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Using NotImplementedError without implementation can lead to runtime errors if the method is called."
  },
  {
    "line": 253,
    "text": "        ----------",
    "annotation": "\u2705 Best Practice: Use of @property decorator for getter method",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      24200,
      438
    ],
    "start_token": 801,
    "end_token": 810,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2488,
      26745,
      11705,
      1352,
      329,
      651,
      353,
      2446
    ],
    "label": "best_practice",
    "reason": "Use of @property decorator for getter method"
  },
  {
    "line": 255,
    "text": "            The id of experiment",
    "annotation": "\u2705 Best Practice: Use of @property.setter decorator for setter method",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      383,
      4686,
      286,
      6306
    ],
    "start_token": 810,
    "end_token": 825,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2488,
      26745,
      13,
      2617,
      353,
      11705,
      1352,
      329,
      900,
      353,
      2446
    ],
    "label": "best_practice",
    "reason": "Use of @property.setter decorator for setter method"
  },
  {
    "line": 260,
    "text": "        -------",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): No validation on the value being set",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      35656
    ],
    "start_token": 825,
    "end_token": 833,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1400,
      21201,
      319,
      262,
      1988,
      852,
      900
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "No validation on the value being set"
  },
  {
    "line": 264,
    "text": "        Raises",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of experiment manager with experiment name",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      7567,
      2696
    ],
    "start_token": 833,
    "end_token": 842,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      6306,
      4706,
      351,
      6306,
      1438
    ],
    "label": "ml_signal",
    "reason": "Initialization of experiment manager with experiment name"
  },
  {
    "line": 266,
    "text": "        ValueError",
    "annotation": "\ud83e\udde0 ML Signal: Tracking of experiment ID",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      11052,
      12331
    ],
    "start_token": 842,
    "end_token": 851,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      37169,
      286,
      6306,
      4522
    ],
    "label": "ml_signal",
    "reason": "Tracking of experiment ID"
  },
  {
    "line": 270,
    "text": "    def delete_exp(self, experiment_id=None, experiment_name=None):",
    "annotation": "\ud83e\udde0 ML Signal: Starting an experiment, common in ML workflows",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      12233,
      62,
      11201,
      7,
      944,
      11,
      6306,
      62,
      312,
      28,
      14202,
      11,
      6306,
      62,
      3672,
      28,
      14202,
      2599
    ],
    "start_token": 851,
    "end_token": 873,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17962,
      281,
      6306,
      11,
      2219,
      287,
      10373,
      670,
      44041
    ],
    "label": "ml_signal",
    "reason": "Starting an experiment, common in ML workflows"
  },
  {
    "line": 272,
    "text": "        Delete an experiment.",
    "annotation": "\u2705 Best Practice: Importing mlflow inside the function to limit scope",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      23520,
      281,
      6306,
      13
    ],
    "start_token": 873,
    "end_token": 884,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      17267,
      278,
      285,
      1652,
      9319,
      2641,
      262,
      2163,
      284,
      4179,
      8354
    ],
    "label": "best_practice",
    "reason": "Importing mlflow inside the function to limit scope"
  },
  {
    "line": 274,
    "text": "        Parameters",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): No error handling for mlflow.start_run",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      40117
    ],
    "start_token": 884,
    "end_token": 892,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1400,
      4049,
      9041,
      329,
      285,
      1652,
      9319,
      13,
      9688,
      62,
      5143
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "No error handling for mlflow.start_run"
  },
  {
    "line": 277,
    "text": "            the experiment id.",
    "annotation": "\ud83e\udde0 ML Signal: Logging parameters, common in ML experiment tracking",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      262,
      6306,
      4686,
      13
    ],
    "start_token": 892,
    "end_token": 907,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      10007,
      11,
      2219,
      287,
      10373,
      6306,
      9646
    ],
    "label": "ml_signal",
    "reason": "Logging parameters, common in ML experiment tracking"
  },
  {
    "line": 279,
    "text": "            the experiment name.",
    "annotation": "\u2705 Best Practice: Importing mlflow inside the function to limit scope",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      262,
      6306,
      1438,
      13
    ],
    "start_token": 907,
    "end_token": 922,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      17267,
      278,
      285,
      1652,
      9319,
      2641,
      262,
      2163,
      284,
      4179,
      8354
    ],
    "label": "best_practice",
    "reason": "Importing mlflow inside the function to limit scope"
  },
  {
    "line": 281,
    "text": "        raise NotImplementedError(f\"Please implement the `delete_exp` method.\")",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): No validation on key and value types",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      5298,
      1892,
      3546,
      1154,
      12061,
      12331,
      7,
      69,
      1,
      5492,
      3494,
      262,
      4600,
      33678,
      62,
      11201,
      63,
      2446,
      19570
    ],
    "start_token": 922,
    "end_token": 948,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1400,
      21201,
      319,
      1994,
      290,
      1988,
      3858
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "No validation on key and value types"
  },
  {
    "line": 284,
    "text": "    def default_uri(self):",
    "annotation": "\ud83e\udde0 ML Signal: Logging metrics, common in ML experiment tracking",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      4277,
      62,
      9900,
      7,
      944,
      2599
    ],
    "start_token": 948,
    "end_token": 958,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      20731,
      11,
      2219,
      287,
      10373,
      6306,
      9646
    ],
    "label": "ml_signal",
    "reason": "Logging metrics, common in ML experiment tracking"
  },
  {
    "line": 284,
    "text": "    def default_uri(self):",
    "annotation": "\u2705 Best Practice: Importing mlflow inside the function to limit scope",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      4277,
      62,
      9900,
      7,
      944,
      2599
    ],
    "start_token": 958,
    "end_token": 968,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      17267,
      278,
      285,
      1652,
      9319,
      2641,
      262,
      2163,
      284,
      4179,
      8354
    ],
    "label": "best_practice",
    "reason": "Importing mlflow inside the function to limit scope"
  },
  {
    "line": 288,
    "text": "        if \"kwargs\" not in C.exp_manager or \"uri\" not in C.exp_manager[\"kwargs\"]:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): No validation on key and value types",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      366,
      46265,
      22046,
      1,
      407,
      287,
      327,
      13,
      11201,
      62,
      37153,
      393,
      366,
      9900,
      1,
      407,
      287,
      327,
      13,
      11201,
      62,
      37153,
      14692,
      46265,
      22046,
      1,
      5974
    ],
    "start_token": 968,
    "end_token": 1003,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1400,
      21201,
      319,
      1994,
      290,
      1988,
      3858
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "No validation on key and value types"
  },
  {
    "line": 291,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Ending an experiment, common in ML workflows",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1003,
    "end_token": 1003,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      43626,
      281,
      6306,
      11,
      2219,
      287,
      10373,
      670,
      44041
    ],
    "label": "ml_signal",
    "reason": "Ending an experiment, common in ML workflows"
  },
  {
    "line": 293,
    "text": "    def default_uri(self, value):",
    "annotation": "\u2705 Best Practice: Importing mlflow inside the function to limit scope",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      4277,
      62,
      9900,
      7,
      944,
      11,
      1988,
      2599
    ],
    "start_token": 1003,
    "end_token": 1015,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      17267,
      278,
      285,
      1652,
      9319,
      2641,
      262,
      2163,
      284,
      4179,
      8354
    ],
    "label": "best_practice",
    "reason": "Importing mlflow inside the function to limit scope"
  },
  {
    "line": 295,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): No error handling for mlflow.end_run",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1015,
    "end_token": 1015,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1400,
      4049,
      9041,
      329,
      285,
      1652,
      9319,
      13,
      437,
      62,
      5143
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "No error handling for mlflow.end_run"
  },
  {
    "line": 253,
    "text": "        ----------",
    "annotation": "\ud83e\udde0 ML Signal: Method definition in a class, indicating object-oriented design",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      24200,
      438
    ],
    "start_token": 1015,
    "end_token": 1024,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      6770,
      287,
      257,
      1398,
      11,
      12739,
      2134,
      12,
      17107,
      1486
    ],
    "label": "ml_signal",
    "reason": "Method definition in a class, indicating object-oriented design"
  },
  {
    "line": 255,
    "text": "            The id of experiment",
    "annotation": "\ud83e\udde0 ML Signal: Use of mlflow library, indicating machine learning experiment tracking",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      383,
      4686,
      286,
      6306
    ],
    "start_token": 1024,
    "end_token": 1039,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      285,
      1652,
      9319,
      5888,
      11,
      12739,
      4572,
      4673,
      6306,
      9646
    ],
    "label": "ml_signal",
    "reason": "Use of mlflow library, indicating machine learning experiment tracking"
  },
  {
    "line": 264,
    "text": "        Raises",
    "annotation": "\u2705 Best Practice: Provide a default value for experiment_name if None",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      7567,
      2696
    ],
    "start_token": 1039,
    "end_token": 1048,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      44290,
      257,
      4277,
      1988,
      329,
      6306,
      62,
      3672,
      611,
      6045
    ],
    "label": "best_practice",
    "reason": "Provide a default value for experiment_name if None"
  },
  {
    "line": 267,
    "text": "        \"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a method to get or create an experiment",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 1048,
    "end_token": 1056,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      2446,
      284,
      651,
      393,
      2251,
      281,
      6306
    ],
    "label": "ml_signal",
    "reason": "Usage of a method to get or create an experiment"
  },
  {
    "line": 269,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Setting an active experiment",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1056,
    "end_token": 1056,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      25700,
      281,
      4075,
      6306
    ],
    "label": "ml_signal",
    "reason": "Setting an active experiment"
  },
  {
    "line": 271,
    "text": "        \"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Starting an experiment with specific parameters",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 1056,
    "end_token": 1064,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17962,
      281,
      6306,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Starting an experiment with specific parameters"
  },
  {
    "line": 273,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Returning the active experiment",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1064,
    "end_token": 1064,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      42882,
      262,
      4075,
      6306
    ],
    "label": "ml_signal",
    "reason": "Returning the active experiment"
  },
  {
    "line": 270,
    "text": "    def delete_exp(self, experiment_id=None, experiment_name=None):",
    "annotation": "\u2705 Best Practice: Use of default parameter value for recorder_status",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      12233,
      62,
      11201,
      7,
      944,
      11,
      6306,
      62,
      312,
      28,
      14202,
      11,
      6306,
      62,
      3672,
      28,
      14202,
      2599
    ],
    "start_token": 1064,
    "end_token": 1086,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      4277,
      11507,
      1988,
      329,
      38156,
      62,
      13376
    ],
    "label": "best_practice",
    "reason": "Use of default parameter value for recorder_status"
  },
  {
    "line": 272,
    "text": "        Delete an experiment.",
    "annotation": "\u2705 Best Practice: Check for None before accessing an attribute",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      23520,
      281,
      6306,
      13
    ],
    "start_token": 1086,
    "end_token": 1097,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      329,
      6045,
      878,
      22534,
      281,
      11688
    ],
    "label": "best_practice",
    "reason": "Check for None before accessing an attribute"
  },
  {
    "line": 274,
    "text": "        Parameters",
    "annotation": "\ud83e\udde0 ML Signal: Method call on an object, indicating object-oriented design",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      40117
    ],
    "start_token": 1097,
    "end_token": 1105,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      869,
      319,
      281,
      2134,
      11,
      12739,
      2134,
      12,
      17107,
      1486
    ],
    "label": "ml_signal",
    "reason": "Method call on an object, indicating object-oriented design"
  },
  {
    "line": 276,
    "text": "        experiment_id  : str",
    "annotation": "\ud83e\udde0 ML Signal: Setting an attribute to None, indicating resource cleanup",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6306,
      62,
      312,
      220,
      1058,
      965
    ],
    "start_token": 1105,
    "end_token": 1118,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      25700,
      281,
      11688,
      284,
      6045,
      11,
      12739,
      8271,
      27425
    ],
    "label": "ml_signal",
    "reason": "Setting an attribute to None, indicating resource cleanup"
  },
  {
    "line": 275,
    "text": "        ----------",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Using assert for argument validation can be bypassed if Python is run with optimizations.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      24200,
      438
    ],
    "start_token": 1118,
    "end_token": 1127,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      8554,
      6818,
      329,
      4578,
      21201,
      460,
      307,
      17286,
      276,
      611,
      11361,
      318,
      1057,
      351,
      41446,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Using assert for argument validation can be bypassed if Python is run with optimizations."
  },
  {
    "line": 277,
    "text": "            the experiment id.",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a client to create an experiment indicates interaction with an external service or API.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      262,
      6306,
      4686,
      13
    ],
    "start_token": 1127,
    "end_token": 1142,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      5456,
      284,
      2251,
      281,
      6306,
      9217,
      10375,
      351,
      281,
      7097,
      2139,
      393,
      7824,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of a client to create an experiment indicates interaction with an external service or API."
  },
  {
    "line": 281,
    "text": "        raise NotImplementedError(f\"Please implement the `delete_exp` method.\")",
    "annotation": "\ud83e\udde0 ML Signal: Handling specific exceptions can indicate expected failure modes or error handling patterns.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      5298,
      1892,
      3546,
      1154,
      12061,
      12331,
      7,
      69,
      1,
      5492,
      3494,
      262,
      4600,
      33678,
      62,
      11201,
      63,
      2446,
      19570
    ],
    "start_token": 1142,
    "end_token": 1168,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      49500,
      2176,
      13269,
      460,
      7603,
      2938,
      5287,
      12881,
      393,
      4049,
      9041,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "Handling specific exceptions can indicate expected failure modes or error handling patterns."
  },
  {
    "line": 283,
    "text": "    @property",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Raising a custom exception without additional context may obscure the original error.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      2488,
      26745
    ],
    "start_token": 1168,
    "end_token": 1173,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      7567,
      1710,
      257,
      2183,
      6631,
      1231,
      3224,
      4732,
      743,
      18611,
      262,
      2656,
      4049,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Raising a custom exception without additional context may obscure the original error."
  },
  {
    "line": 284,
    "text": "    def default_uri(self):",
    "annotation": "\ud83e\udde0 ML Signal: Returning an object that encapsulates experiment details suggests a pattern of object-oriented design.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      4277,
      62,
      9900,
      7,
      944,
      2599
    ],
    "start_token": 1173,
    "end_token": 1183,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      42882,
      281,
      2134,
      326,
      32652,
      15968,
      6306,
      3307,
      5644,
      257,
      3912,
      286,
      2134,
      12,
      17107,
      1486,
      13
    ],
    "label": "ml_signal",
    "reason": "Returning an object that encapsulates experiment details suggests a pattern of object-oriented design."
  },
  {
    "line": 288,
    "text": "        if \"kwargs\" not in C.exp_manager or \"uri\" not in C.exp_manager[\"kwargs\"]:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of assert for input validation can be bypassed if Python is run with optimizations.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      366,
      46265,
      22046,
      1,
      407,
      287,
      327,
      13,
      11201,
      62,
      37153,
      393,
      366,
      9900,
      1,
      407,
      287,
      327,
      13,
      11201,
      62,
      37153,
      14692,
      46265,
      22046,
      1,
      5974
    ],
    "start_token": 1183,
    "end_token": 1218,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      6818,
      329,
      5128,
      21201,
      460,
      307,
      17286,
      276,
      611,
      11361,
      318,
      1057,
      351,
      41446,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of assert for input validation can be bypassed if Python is run with optimizations."
  },
  {
    "line": 294,
    "text": "        C.exp_manager.setdefault(\"kwargs\", {})[\"uri\"] = value",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of retrieving an experiment by ID",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      327,
      13,
      11201,
      62,
      37153,
      13,
      2617,
      12286,
      7203,
      46265,
      22046,
      1600,
      23884,
      8,
      14692,
      9900,
      8973,
      796,
      1988
    ],
    "start_token": 1218,
    "end_token": 1244,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      50122,
      281,
      6306,
      416,
      4522
    ],
    "label": "ml_signal",
    "reason": "Pattern of retrieving an experiment by ID"
  },
  {
    "line": 297,
    "text": "    def uri(self):",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of creating an MLflowExperiment object",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      2956,
      72,
      7,
      944,
      2599
    ],
    "start_token": 1244,
    "end_token": 1253,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      4441,
      281,
      10373,
      11125,
      20468,
      3681,
      2134
    ],
    "label": "ml_signal",
    "reason": "Pattern of creating an MLflowExperiment object"
  },
  {
    "line": 302,
    "text": "        -------",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Catching broad exceptions can mask other issues.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      35656
    ],
    "start_token": 1253,
    "end_token": 1261,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      327,
      19775,
      3154,
      13269,
      460,
      9335,
      584,
      2428,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Catching broad exceptions can mask other issues."
  },
  {
    "line": 308,
    "text": "        \"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of retrieving an experiment by name",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 1261,
    "end_token": 1269,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      50122,
      281,
      6306,
      416,
      1438
    ],
    "label": "ml_signal",
    "reason": "Pattern of retrieving an experiment by name"
  },
  {
    "line": 312,
    "text": "        -------",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of creating an MLflowExperiment object",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      35656
    ],
    "start_token": 1269,
    "end_token": 1277,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      4441,
      281,
      10373,
      11125,
      20468,
      3681,
      2134
    ],
    "label": "ml_signal",
    "reason": "Pattern of creating an MLflowExperiment object"
  },
  {
    "line": 316,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Catching broad exceptions can mask other issues.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1277,
    "end_token": 1277,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      327,
      19775,
      3154,
      13269,
      460,
      9335,
      584,
      2428,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Catching broad exceptions can mask other issues."
  },
  {
    "line": 313,
    "text": "        A dictionary (name -> experiment) of experiments information that being stored.",
    "annotation": "\u2705 Best Practice: Consider adding type hints for function parameters and return type for better readability and maintainability.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      317,
      22155,
      357,
      3672,
      4613,
      6306,
      8,
      286,
      10256,
      1321,
      326,
      852,
      8574,
      13
    ],
    "start_token": 1277,
    "end_token": 1298,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      4375,
      2099,
      20269,
      329,
      2163,
      10007,
      290,
      1441,
      2099,
      329,
      1365,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Consider adding type hints for function parameters and return type for better readability and maintainability."
  },
  {
    "line": 315,
    "text": "        raise NotImplementedError(f\"Please implement the `list_experiments` method.\")",
    "annotation": "\u2705 Best Practice: Use kwargs.get with a default value to handle missing keys gracefully.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      5298,
      1892,
      3546,
      1154,
      12061,
      12331,
      7,
      69,
      1,
      5492,
      3494,
      262,
      4600,
      4868,
      62,
      23100,
      6800,
      63,
      2446,
      19570
    ],
    "start_token": 1298,
    "end_token": 1325,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      479,
      86,
      22046,
      13,
      1136,
      351,
      257,
      4277,
      1988,
      284,
      5412,
      4814,
      8251,
      11542,
      2759,
      13
    ],
    "label": "best_practice",
    "reason": "Use kwargs.get with a default value to handle missing keys gracefully."
  },
  {
    "line": 317,
    "text": "",
    "annotation": "\u2705 Best Practice: Use kwargs.get with a default value to handle missing keys gracefully.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 1325,
    "end_token": 1325,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      479,
      86,
      22046,
      13,
      1136,
      351,
      257,
      4277,
      1988,
      284,
      5412,
      4814,
      8251,
      11542,
      2759,
      13
    ],
    "label": "best_practice",
    "reason": "Use kwargs.get with a default value to handle missing keys gracefully."
  },
  {
    "line": 319,
    "text": "    \"\"\"",
    "annotation": "\u2705 Best Practice: Use kwargs.get with a default value to handle missing keys gracefully.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      37227
    ],
    "start_token": 1325,
    "end_token": 1329,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      479,
      86,
      22046,
      13,
      1136,
      351,
      257,
      4277,
      1988,
      284,
      5412,
      4814,
      8251,
      11542,
      2759,
      13
    ],
    "label": "best_practice",
    "reason": "Use kwargs.get with a default value to handle missing keys gracefully."
  },
  {
    "line": 320,
    "text": "    Use mlflow to implement ExpManager.",
    "annotation": "\u2705 Best Practice: Use kwargs.get with a default value to handle missing keys gracefully.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      5765,
      285,
      1652,
      9319,
      284,
      3494,
      5518,
      13511,
      13
    ],
    "start_token": 1329,
    "end_token": 1341,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      479,
      86,
      22046,
      13,
      1136,
      351,
      257,
      4277,
      1988,
      284,
      5412,
      4814,
      8251,
      11542,
      2759,
      13
    ],
    "label": "best_practice",
    "reason": "Use kwargs.get with a default value to handle missing keys gracefully."
  },
  {
    "line": 323,
    "text": "    @property",
    "annotation": "\ud83e\udde0 ML Signal: The use of a client to search runs suggests interaction with an external system or API.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2488,
      26745
    ],
    "start_token": 1341,
    "end_token": 1346,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      383,
      779,
      286,
      257,
      5456,
      284,
      2989,
      4539,
      5644,
      10375,
      351,
      281,
      7097,
      1080,
      393,
      7824,
      13
    ],
    "label": "ml_signal",
    "reason": "The use of a client to search runs suggests interaction with an external system or API."
  },
  {
    "line": 320,
    "text": "    Use mlflow to implement ExpManager.",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of assert for input validation can be bypassed if Python is run with optimizations.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      5765,
      285,
      1652,
      9319,
      284,
      3494,
      5518,
      13511,
      13
    ],
    "start_token": 1346,
    "end_token": 1358,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      6818,
      329,
      5128,
      21201,
      460,
      307,
      17286,
      276,
      611,
      11361,
      318,
      1057,
      351,
      41446,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of assert for input validation can be bypassed if Python is run with optimizations."
  },
  {
    "line": 325,
    "text": "        # Please refer to `tests/dependency_tests/test_mlflow.py::MLflowTest::test_creating_client`",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on input parameters.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      4222,
      3522,
      284,
      4600,
      41989,
      14,
      45841,
      1387,
      62,
      41989,
      14,
      9288,
      62,
      76,
      1652,
      9319,
      13,
      9078,
      3712,
      5805,
      11125,
      14402,
      3712,
      9288,
      62,
      20123,
      278,
      62,
      16366,
      63
    ],
    "start_token": 1358,
    "end_token": 1396,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      5128,
      10007,
      13
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on input parameters."
  },
  {
    "line": 329,
    "text": "    def _start_exp(",
    "annotation": "\ud83e\udde0 ML Signal: Use of client API to retrieve data by name.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      4808,
      9688,
      62,
      11201,
      7
    ],
    "start_token": 1396,
    "end_token": 1405,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      5456,
      7824,
      284,
      19818,
      1366,
      416,
      1438,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of client API to retrieve data by name."
  },
  {
    "line": 332,
    "text": "        experiment_id: Optional[Text] = None,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential information disclosure if exception message is exposed to users.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6306,
      62,
      312,
      25,
      32233,
      58,
      8206,
      60,
      796,
      6045,
      11
    ],
    "start_token": 1405,
    "end_token": 1423,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      1321,
      13019,
      611,
      6631,
      3275,
      318,
      7362,
      284,
      2985,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential information disclosure if exception message is exposed to users."
  },
  {
    "line": 334,
    "text": "        recorder_id: Optional[Text] = None,",
    "annotation": "\ud83e\udde0 ML Signal: Use of client API to delete data by ID.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      38156,
      62,
      312,
      25,
      32233,
      58,
      8206,
      60,
      796,
      6045,
      11
    ],
    "start_token": 1423,
    "end_token": 1441,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      5456,
      7824,
      284,
      12233,
      1366,
      416,
      4522,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of client API to delete data by ID."
  },
  {
    "line": 337,
    "text": "    ):",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Catching broad exceptions can mask other issues.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      15179
    ],
    "start_token": 1441,
    "end_token": 1445,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      327,
      19775,
      3154,
      13269,
      460,
      9335,
      584,
      2428,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Catching broad exceptions can mask other issues."
  },
  {
    "line": 335,
    "text": "        recorder_name: Optional[Text] = None,",
    "annotation": "\ud83e\udde0 ML Signal: Version checking for backward compatibility",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      38156,
      62,
      3672,
      25,
      32233,
      58,
      8206,
      60,
      796,
      6045,
      11
    ],
    "start_token": 1445,
    "end_token": 1463,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      10628,
      10627,
      329,
      19528,
      17764
    ],
    "label": "ml_signal",
    "reason": "Version checking for backward compatibility"
  },
  {
    "line": 338,
    "text": "        # Create experiment",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on library version",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      13610,
      6306
    ],
    "start_token": 1463,
    "end_token": 1473,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      5888,
      2196
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on library version"
  },
  {
    "line": 341,
    "text": "        experiment, _ = self._get_or_create_exp(experiment_id=experiment_id, experiment_name=experiment_name)",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on library version",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6306,
      11,
      4808,
      796,
      2116,
      13557,
      1136,
      62,
      273,
      62,
      17953,
      62,
      11201,
      7,
      23100,
      3681,
      62,
      312,
      28,
      23100,
      3681,
      62,
      312,
      11,
      6306,
      62,
      3672,
      28,
      23100,
      3681,
      62,
      3672,
      8
    ],
    "start_token": 1473,
    "end_token": 1513,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      5888,
      2196
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on library version"
  },
  {
    "line": 343,
    "text": "        self.active_experiment = experiment",
    "annotation": "\u2705 Best Practice: Initialize dictionary with a clear name",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      5275,
      62,
      23100,
      3681,
      796,
      6306
    ],
    "start_token": 1513,
    "end_token": 1528,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      20768,
      1096,
      22155,
      351,
      257,
      1598,
      1438
    ],
    "label": "best_practice",
    "reason": "Initialize dictionary with a clear name"
  },
  {
    "line": 345,
    "text": "        self.active_experiment.start(recorder_id=recorder_id, recorder_name=recorder_name, resume=resume)",
    "annotation": "\u2705 Best Practice: Use of a class to encapsulate experiment details",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      5275,
      62,
      23100,
      3681,
      13,
      9688,
      7,
      8344,
      2875,
      62,
      312,
      28,
      8344,
      2875,
      62,
      312,
      11,
      38156,
      62,
      3672,
      28,
      8344,
      2875,
      62,
      3672,
      11,
      15294,
      28,
      411,
      2454,
      8
    ],
    "start_token": 1528,
    "end_token": 1568,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      257,
      1398,
      284,
      32652,
      5039,
      6306,
      3307
    ],
    "label": "best_practice",
    "reason": "Use of a class to encapsulate experiment details"
  },
  {
    "line": 345,
    "text": "        self.active_experiment.start(recorder_id=recorder_id, recorder_name=recorder_name, resume=resume)",
    "annotation": "\u2705 Best Practice: Use of dictionary for quick lookup by experiment name",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      5275,
      62,
      23100,
      3681,
      13,
      9688,
      7,
      8344,
      2875,
      62,
      312,
      28,
      8344,
      2875,
      62,
      312,
      11,
      38156,
      62,
      3672,
      28,
      8344,
      2875,
      62,
      3672,
      11,
      15294,
      28,
      411,
      2454,
      8
    ],
    "start_token": 1568,
    "end_token": 1608,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      22155,
      329,
      2068,
      35847,
      416,
      6306,
      1438
    ],
    "label": "best_practice",
    "reason": "Use of dictionary for quick lookup by experiment name"
  }
]