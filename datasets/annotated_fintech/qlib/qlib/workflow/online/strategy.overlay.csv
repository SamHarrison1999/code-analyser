annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Class docstring provides a clear description of the class purpose and usage.,"[26486, 227, 6705, 19939, 25, 5016, 2205, 8841, 3769, 257, 1598, 6764, 286, 262, 1398, 4007, 290, 8748, 13]",1.0,17,best_practice,14,Class docstring provides a clear description of the class purpose and usage.,,0,"from qlib.workflow.task.collect import Collector, RecorderCollector","[6738, 10662, 8019, 13, 1818, 11125, 13, 35943, 13, 33327, 1330, 17573, 11, 3311, 2875, 31337, 273]"
üß† ML Signal: Initialization of class with a unique identifier,"[8582, 100, 254, 10373, 26484, 25, 20768, 1634, 286, 1398, 351, 257, 3748, 27421]",1.0,25,ml_signal,25,Initialization of class with a unique identifier,,17,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚úÖ Best Practice: Use of a logger for the class,"[26486, 227, 6705, 19939, 25, 5765, 286, 257, 49706, 329, 262, 1398]",1.0,68,best_practice,27,Use of a logger for the class,,25,        This module **MUST** use `Trainer <../reference/api.html#qlib.model.trainer.Trainer>`_ to finishing model training.,"[220, 220, 220, 220, 220, 220, 220, 770, 8265, 12429, 44, 7759, 1174, 779, 4600, 2898, 10613, 1279, 40720, 35790, 14, 15042, 13, 6494, 2, 80, 8019, 13, 19849, 13, 2213, 10613, 13, 2898, 10613, 29, 63, 62, 284, 12848, 2746, 3047, 13]"
üß† ML Signal: Instantiation of an OnlineTool object,"[8582, 100, 254, 10373, 26484, 25, 24470, 3920, 286, 281, 7467, 25391, 2134]",0.5,78,ml_signal,29,Instantiation of an OnlineTool object,,68,        Args:,"[220, 220, 220, 220, 220, 220, 220, 943, 14542, 25]"
‚úÖ Best Practice: Include a docstring to describe the method's purpose and usage.,"[26486, 227, 6705, 19939, 25, 40348, 257, 2205, 8841, 284, 6901, 262, 2446, 338, 4007, 290, 8748, 13]",1.0,88,best_practice,29,Include a docstring to describe the method's purpose and usage.,,78,        Args:,"[220, 220, 220, 220, 220, 220, 220, 943, 14542, 25]"
"‚ö†Ô∏è SAST Risk (Low): Method is not implemented, which could lead to runtime errors if called.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 11789, 318, 407, 9177, 11, 543, 714, 1085, 284, 19124, 8563, 611, 1444, 13]",1.0,102,sast_risk,35,"Method is not implemented, which could lead to runtime errors if called.",Low,88,        self.tool = OnlineTool(),"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 25981, 796, 7467, 25391, 3419]"
‚úÖ Best Practice: Check for empty input to avoid unnecessary operations.,"[26486, 227, 6705, 19939, 25, 6822, 329, 6565, 5128, 284, 3368, 13114, 4560, 13]",1.0,130,best_practice,52,Check for empty input to avoid unnecessary operations.,,102,"        NOTE: Reset all online models to trained models. If there are no trained models, then do nothing.","[220, 220, 220, 220, 220, 220, 220, 24550, 25, 30027, 477, 2691, 4981, 284, 8776, 4981, 13, 1002, 612, 389, 645, 8776, 4981, 11, 788, 466, 2147, 13]"
üß† ML Signal: Usage of a tool to retrieve online models.,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2891, 284, 19818, 2691, 4981, 13]",0.5,141,ml_signal,54,Usage of a tool to retrieve online models.,,130,        **NOTE**:,"[220, 220, 220, 220, 220, 220, 220, 12429, 16580, 1174, 25]"
"üß† ML Signal: Resetting online tags for models, indicating a model lifecycle management pattern.","[8582, 100, 254, 10373, 26484, 25, 30027, 889, 2691, 15940, 329, 4981, 11, 12739, 257, 2746, 3868, 47510, 4542, 3912, 13]",0.5,155,ml_signal,56,"Resetting online tags for models, indicating a model lifecycle management pattern.",,141,            practical scenarios.,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 8472, 13858, 13]"
"üß† ML Signal: Returning trained models as online models, indicating a deployment pattern.","[8582, 100, 254, 10373, 26484, 25, 42882, 8776, 4981, 355, 2691, 4981, 11, 12739, 257, 14833, 3912, 13]",0.5,188,ml_signal,57,"Returning trained models as online models, indicating a deployment pattern.",,155,            1. Train new models at the day before `test_start` (at time stamp `T`),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 352, 13, 16835, 649, 4981, 379, 262, 1110, 878, 4600, 9288, 62, 9688, 63, 357, 265, 640, 17977, 4600, 51, 63, 8]"
"‚úÖ Best Practice: Method signature includes type hinting for return type, improving readability and maintainability.","[26486, 227, 6705, 19939, 25, 11789, 9877, 3407, 2099, 9254, 278, 329, 1441, 2099, 11, 10068, 1100, 1799, 290, 5529, 1799, 13]",1.0,202,best_practice,56,"Method signature includes type hinting for return type, improving readability and maintainability.",,188,            practical scenarios.,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 8472, 13858, 13]"
‚ö†Ô∏è SAST Risk (Low): Using NotImplementedError without a custom message can be less informative for debugging.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 1892, 3546, 1154, 12061, 12331, 1231, 257, 2183, 3275, 460, 307, 1342, 30304, 329, 28769, 13]",0.5,222,sast_risk,61,Using NotImplementedError without a custom message can be less informative for debugging.,Low,202,            models (list): a list of models.,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4981, 357, 4868, 2599, 257, 1351, 286, 4981, 13]"
‚úÖ Best Practice: Include a docstring to describe the method's purpose and usage.,"[26486, 227, 6705, 19939, 25, 40348, 257, 2205, 8841, 284, 6901, 262, 2446, 338, 4007, 290, 8748, 13]",0.5,254,best_practice,62,Include a docstring to describe the method's purpose and usage.,,222,            cur_time (pd.Dataframe): current time from OnlineManger. None for the latest.,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1090, 62, 2435, 357, 30094, 13, 6601, 14535, 2599, 1459, 640, 422, 7467, 44, 2564, 13, 6045, 329, 262, 3452, 13]"
‚ö†Ô∏è SAST Risk (Low): Using NotImplementedError without implementation can lead to runtime errors if not properly handled.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 1892, 3546, 1154, 12061, 12331, 1231, 7822, 460, 1085, 284, 19124, 8563, 611, 407, 6105, 12118, 13]",1.0,254,sast_risk,71,Using NotImplementedError without implementation can lead to runtime errors if not properly handled.,Low,254,,[]
‚úÖ Best Practice: Class docstring provides a brief description of the class functionality.,"[26486, 227, 6705, 19939, 25, 5016, 2205, 8841, 3769, 257, 4506, 6764, 286, 262, 1398, 11244, 13]",1.0,270,best_practice,72,Class docstring provides a brief description of the class functionality.,,254,    def first_tasks(self) -> List[dict]:,"[220, 220, 220, 825, 717, 62, 83, 6791, 7, 944, 8, 4613, 7343, 58, 11600, 5974]"
‚úÖ Best Practice: Call to super() ensures proper initialization of the base class,"[26486, 227, 6705, 19939, 25, 4889, 284, 2208, 3419, 19047, 1774, 37588, 286, 262, 2779, 1398]",0.5,297,best_practice,89,Call to super() ensures proper initialization of the base class,,270,"        raise NotImplementedError(f""Please implement the `get_collector` method."")","[220, 220, 220, 220, 220, 220, 220, 5298, 1892, 3546, 1154, 12061, 12331, 7, 69, 1, 5492, 3494, 262, 4600, 1136, 62, 33327, 273, 63, 2446, 19570]"
üß† ML Signal: Usage of a unique identifier for experiments,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 3748, 27421, 329, 10256]",0.5,297,ml_signal,91,Usage of a unique identifier for experiments,,297,,[]
"‚úÖ Best Practice: Ensures task_template is always a list, simplifying later processing","[26486, 227, 6705, 19939, 25, 48221, 942, 4876, 62, 28243, 318, 1464, 257, 1351, 11, 7106, 4035, 1568, 7587]",0.5,301,best_practice,93,"Ensures task_template is always a list, simplifying later processing",,297,"    """"""","[220, 220, 220, 37227]"
‚ö†Ô∏è SAST Risk (Low): Use of assert for type checking can be bypassed; consider using isinstance() and raising an exception,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 6818, 329, 2099, 10627, 460, 307, 17286, 276, 26, 2074, 1262, 318, 39098, 3419, 290, 8620, 281, 6631]",0.5,310,sast_risk,98,Use of assert for type checking can be bypassed; consider using isinstance() and raising an exception,Low,301,"        self,","[220, 220, 220, 220, 220, 220, 220, 2116, 11]"
üß† ML Signal: Initialization of an online tool with a specific experiment name,"[8582, 100, 254, 10373, 26484, 25, 20768, 1634, 286, 281, 2691, 2891, 351, 257, 2176, 6306, 1438]",0.5,323,ml_signal,99,Initialization of an online tool with a specific experiment name,,310,"        name_id: str,","[220, 220, 220, 220, 220, 220, 220, 1438, 62, 312, 25, 965, 11]"
üß† ML Signal: Initialization of a time adjustment component,"[8582, 100, 254, 10373, 26484, 25, 20768, 1634, 286, 257, 640, 15068, 7515]",0.5,336,ml_signal,99,Initialization of a time adjustment component,,323,"        name_id: str,","[220, 220, 220, 220, 220, 220, 220, 1438, 62, 312, 25, 965, 11]"
‚ö†Ô∏è SAST Risk (Low): Using mutable default arguments like lists can lead to unexpected behavior if the list is modified.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 4517, 540, 4277, 7159, 588, 8341, 460, 1085, 284, 10059, 4069, 611, 262, 1351, 318, 9518, 13]",1.0,349,sast_risk,99,Using mutable default arguments like lists can lead to unexpected behavior if the list is modified.,Low,336,"        name_id: str,","[220, 220, 220, 220, 220, 220, 220, 1438, 62, 312, 25, 965, 11]"
üß† ML Signal: Loading configuration objects is a common pattern in ML pipelines,"[8582, 100, 254, 10373, 26484, 25, 12320, 8398, 5563, 318, 257, 2219, 3912, 287, 10373, 31108]",1.0,381,ml_signal,109,Loading configuration objects is a common pattern in ML pipelines,,349,            name_id (str): a unique name or id. Will be also the name of the Experiment.,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1438, 62, 312, 357, 2536, 2599, 257, 3748, 1438, 393, 4686, 13, 2561, 307, 635, 262, 1438, 286, 262, 29544, 13]"
üß† ML Signal: Accessing model configuration details,"[8582, 100, 254, 10373, 26484, 25, 8798, 278, 2746, 8398, 3307]",1.0,405,ml_signal,111,Accessing model configuration details,,381,            rolling_gen (RollingGen): an instance of RollingGen,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 10708, 62, 5235, 357, 26869, 278, 13746, 2599, 281, 4554, 286, 21567, 13746]"
üß† ML Signal: Accessing dataset configuration details,"[8582, 100, 254, 10373, 26484, 25, 8798, 278, 27039, 8398, 3307]",1.0,426,ml_signal,113,Accessing dataset configuration details,,405,        super().__init__(name_id=name_id),"[220, 220, 220, 220, 220, 220, 220, 2208, 22446, 834, 15003, 834, 7, 3672, 62, 312, 28, 3672, 62, 312, 8]"
‚úÖ Best Practice: Providing default function implementations,"[26486, 227, 6705, 19939, 25, 7518, 2530, 4277, 2163, 25504]",1.0,444,best_practice,115,Providing default function implementations,,426,"        if not isinstance(task_template, list):","[220, 220, 220, 220, 220, 220, 220, 611, 407, 318, 39098, 7, 35943, 62, 28243, 11, 1351, 2599]"
üß† ML Signal: Use of a collector pattern to manage experiment artifacts,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 22967, 3912, 284, 6687, 6306, 20316]",1.0,444,ml_signal,122,Use of a collector pattern to manage experiment artifacts,,444,,[]
‚úÖ Best Practice: Include type hints for method parameters for better readability and maintainability,"[26486, 227, 6705, 19939, 25, 40348, 2099, 20269, 329, 2446, 10007, 329, 1365, 1100, 1799, 290, 5529, 1799]",1.0,486,best_practice,123,Include type hints for method parameters for better readability and maintainability,,444,"    def get_collector(self, process_list=[RollingGroup()], rec_key_func=None, rec_filter_func=None, artifacts_key=None):","[220, 220, 220, 825, 651, 62, 33327, 273, 7, 944, 11, 1429, 62, 4868, 41888, 26869, 278, 13247, 3419, 4357, 664, 62, 2539, 62, 20786, 28, 14202, 11, 664, 62, 24455, 62, 20786, 28, 14202, 11, 20316, 62, 2539, 28, 14202, 2599]"
üß† ML Signal: Usage of a task generator function indicates a pattern of dynamic task creation,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 4876, 17301, 2163, 9217, 257, 3912, 286, 8925, 4876, 6282]",0.5,486,ml_signal,129,Usage of a task generator function indicates a pattern of dynamic task creation,,486,,[]
üß† ML Signal: Passing a template to a generator function is a common pattern for task generation,"[8582, 100, 254, 10373, 26484, 25, 46389, 257, 11055, 284, 257, 17301, 2163, 318, 257, 2219, 3912, 329, 4876, 5270]",0.5,522,ml_signal,132,Passing a template to a generator function is a common pattern for task generation,,486,"            rec_filter_func (Callable, optional): filter the recorder by return True or False. Defaults to None.","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 664, 62, 24455, 62, 20786, 357, 14134, 540, 11, 11902, 2599, 8106, 262, 38156, 416, 1441, 6407, 393, 10352, 13, 2896, 13185, 284, 6045, 13]"
üß† ML Signal: Use of a generator object suggests a pattern of iterative or lazy evaluation,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 17301, 2134, 5644, 257, 3912, 286, 11629, 876, 393, 16931, 12660]",0.5,530,ml_signal,134,Use of a generator object suggests a pattern of iterative or lazy evaluation,,522,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚úÖ Best Practice: Descriptive variable names improve code readability.,"[26486, 227, 6705, 19939, 25, 2935, 6519, 425, 7885, 3891, 2987, 2438, 1100, 1799, 13]",0.5,549,best_practice,140,Descriptive variable names improve code readability.,,530,"            return model_key, rolling_key","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441, 2746, 62, 2539, 11, 10708, 62, 2539]"
‚ö†Ô∏è SAST Risk (Low): Use of deprecated logger.warn method; should use logger.warning instead.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 39224, 49706, 13, 40539, 2446, 26, 815, 779, 49706, 13, 43917, 2427, 13]",1.0,569,sast_risk,143,Use of deprecated logger.warn method; should use logger.warning instead.,Low,549,            rec_key_func = rec_key,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 664, 62, 2539, 62, 20786, 796, 664, 62, 2539]"
‚úÖ Best Practice: Using a helper function to transform dates improves code modularity.,"[26486, 227, 6705, 19939, 25, 8554, 257, 31904, 2163, 284, 6121, 9667, 19575, 2438, 26507, 414, 13]",0.5,586,best_practice,145,Using a helper function to transform dates improves code modularity.,,569,        artifacts_collector = RecorderCollector(,"[220, 220, 220, 220, 220, 220, 220, 20316, 62, 33327, 273, 796, 3311, 2875, 31337, 273, 7]"
‚úÖ Best Practice: Logging provides useful runtime information for debugging and monitoring.,"[26486, 227, 6705, 19939, 25, 5972, 2667, 3769, 4465, 19124, 1321, 329, 28769, 290, 9904, 13]",0.5,609,best_practice,148,Logging provides useful runtime information for debugging and monitoring.,,586,"            rec_key_func=rec_key_func,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 664, 62, 2539, 62, 20786, 28, 8344, 62, 2539, 62, 20786, 11]"
üß† ML Signal: Loading objects from records could indicate a pattern of dynamic task generation.,"[8582, 100, 254, 10373, 26484, 25, 12320, 5563, 422, 4406, 714, 7603, 257, 3912, 286, 8925, 4876, 5270, 13]",0.5,609,ml_signal,154,Loading objects from records could indicate a pattern of dynamic task generation.,,609,,[]
üß† ML Signal: Generating tasks based on existing records and current time is a common pattern in task scheduling.,"[8582, 100, 254, 10373, 26484, 25, 2980, 803, 8861, 1912, 319, 4683, 4406, 290, 1459, 640, 318, 257, 2219, 3912, 287, 4876, 26925, 13]",0.5,609,ml_signal,154,Generating tasks based on existing records and current time is a common pattern in task scheduling.,,609,,[]
‚úÖ Best Practice: Check for empty list to avoid unnecessary processing,"[26486, 227, 6705, 19939, 25, 6822, 329, 6565, 1351, 284, 3368, 13114, 7587]",1.0,617,best_practice,161,Check for empty list to avoid unnecessary processing,,609,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚ö†Ô∏è SAST Risk (Low): Potential KeyError if expected keys are missing in the dictionary,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 7383, 12331, 611, 2938, 8251, 389, 4814, 287, 262, 22155]",1.0,640,sast_risk,164,Potential KeyError if expected keys are missing in the dictionary,Low,617,"            generators=self.rg,  # generate different date segment","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 27298, 28, 944, 13, 41345, 11, 220, 1303, 7716, 1180, 3128, 10618]"
‚ö†Ô∏è SAST Risk (Low): Potential KeyError if expected keys are missing in the dictionary,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 7383, 12331, 611, 2938, 8251, 389, 4814, 287, 262, 22155]",1.0,648,sast_risk,168,Potential KeyError if expected keys are missing in the dictionary,Low,640,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
"üß† ML Signal: Returns a tuple of filtered list and a timestamp, indicating a pattern of filtering and returning metadata","[8582, 100, 254, 10373, 26484, 25, 16409, 257, 46545, 286, 29083, 1351, 290, 257, 41033, 11, 12739, 257, 3912, 286, 25431, 290, 8024, 20150]",1.0,656,ml_signal,168,"Returns a tuple of filtered list and a timestamp, indicating a pattern of filtering and returning metadata",,648,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
