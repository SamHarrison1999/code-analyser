annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
"‚úÖ Best Practice: Grouping imports by standard library, third-party, and local modules improves readability.","[26486, 227, 6705, 19939, 25, 4912, 278, 17944, 416, 3210, 5888, 11, 2368, 12, 10608, 11, 290, 1957, 13103, 19575, 1100, 1799, 13]",1.0,6,best_practice,6,"Grouping imports by standard library, third-party, and local modules improves readability.",,0,import pandas as pd,"[11748, 19798, 292, 355, 279, 67]"
‚úÖ Best Practice: Class docstring provides a clear description of the class functionality and behavior.,"[26486, 227, 6705, 19939, 25, 5016, 2205, 8841, 3769, 257, 1598, 6764, 286, 262, 1398, 11244, 290, 4069, 13]",1.0,16,best_practice,22,Class docstring provides a clear description of the class functionality and behavior.,,6,class TWAPStrategy(BaseStrategy):,"[4871, 17306, 2969, 13290, 4338, 7, 14881, 13290, 4338, 2599]"
‚úÖ Best Practice: Docstring provides clear documentation of parameters,"[26486, 227, 6705, 19939, 25, 14432, 8841, 3769, 1598, 10314, 286, 10007]",0.5,25,best_practice,23,Docstring provides clear documentation of parameters,,16,"    """"""TWAP Strategy for trading","[220, 220, 220, 37227, 34551, 2969, 20561, 329, 7313]"
‚úÖ Best Practice: Using super() to call the parent class method ensures proper initialization,"[26486, 227, 6705, 19939, 25, 8554, 2208, 3419, 284, 869, 262, 2560, 1398, 2446, 19047, 1774, 37588]",1.0,25,best_practice,29,Using super() to call the parent class method ensures proper initialization,,25,,[]
‚úÖ Best Practice: Initializing trade_amount_remain as an empty dictionary,"[26486, 227, 6705, 19939, 25, 20768, 2890, 3292, 62, 17287, 62, 2787, 391, 355, 281, 6565, 22155]",1.0,33,best_practice,32,Initializing trade_amount_remain as an empty dictionary,,25,        Parameters,"[220, 220, 220, 220, 220, 220, 220, 40117]"
üß† ML Signal: Iterating over decisions to populate trade_amount_remain,"[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 5370, 284, 48040, 3292, 62, 17287, 62, 2787, 391]",0.5,53,ml_signal,34,Iterating over decisions to populate trade_amount_remain,,33,"        outer_trade_decision : BaseTradeDecision, optional","[220, 220, 220, 220, 220, 220, 220, 12076, 62, 25351, 62, 12501, 1166, 1058, 7308, 35965, 10707, 1166, 11, 11902]"
üß† ML Signal: Mapping stock_id to order amount,"[8582, 100, 254, 10373, 26484, 25, 337, 5912, 4283, 62, 312, 284, 1502, 2033]",0.5,53,ml_signal,36,Mapping stock_id to order amount,,53,,[]
‚ö†Ô∏è SAST Risk (Low): Potential KeyError if order.stock_id is not in self.trade_amount_remain,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 7383, 12331, 611, 1502, 13, 13578, 62, 312, 318, 407, 287, 2116, 13, 25351, 62, 17287, 62, 2787, 391]",1.0,67,sast_risk,44,Potential KeyError if order.stock_id is not in self.trade_amount_remain,Low,53,        # NOTE:  corner cases!!!,"[220, 220, 220, 220, 220, 220, 220, 1303, 24550, 25, 220, 5228, 2663, 10185]"
‚ö†Ô∏è SAST Risk (Low): Potential KeyError if order.stock_id is not in self.trade_amount_remain,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 7383, 12331, 611, 1502, 13, 13578, 62, 312, 318, 407, 287, 2116, 13, 25351, 62, 17287, 62, 2787, 391]",1.0,91,sast_risk,54,Potential KeyError if order.stock_id is not in self.trade_amount_remain,Low,67,        trade_step = self.trade_calendar.get_trade_step(),"[220, 220, 220, 220, 220, 220, 220, 3292, 62, 9662, 796, 2116, 13, 25351, 62, 9948, 9239, 13, 1136, 62, 25351, 62, 9662, 3419]"
‚úÖ Best Practice: Use of np.round for rounding ensures consistent behavior across platforms,"[26486, 227, 6705, 19939, 25, 5765, 286, 45941, 13, 744, 329, 38185, 19047, 6414, 4069, 1973, 9554]",1.0,103,best_practice,65,Use of np.round for rounding ensures consistent behavior across platforms,,91,        # update the order amount,"[220, 220, 220, 220, 220, 220, 220, 1303, 4296, 262, 1502, 2033]"
üß† ML Signal: Creation of Order object could be used to train models on order patterns,"[8582, 100, 254, 10373, 26484, 25, 21582, 286, 8284, 2134, 714, 307, 973, 284, 4512, 4981, 319, 1502, 7572]",0.5,139,ml_signal,68,Creation of Order object could be used to train models on order patterns,,103,                self.trade_amount_remain[order.stock_id] -= order.deal_amount,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 25351, 62, 17287, 62, 2787, 391, 58, 2875, 13, 13578, 62, 312, 60, 48185, 1502, 13, 31769, 62, 17287]"
üß† ML Signal: Returning TradeDecisionWO object could be used to train models on decision patterns,"[8582, 100, 254, 10373, 26484, 25, 42882, 9601, 10707, 1166, 54, 46, 2134, 714, 307, 973, 284, 4512, 4981, 319, 2551, 7572]",0.5,139,ml_signal,81,Returning TradeDecisionWO object could be used to train models on decision patterns,,139,,[]
‚úÖ Best Practice: Constants are defined with clear and descriptive names.,"[26486, 227, 6705, 19939, 25, 4757, 1187, 389, 5447, 351, 1598, 290, 35644, 3891, 13]",0.5,139,best_practice,81,Constants are defined with clear and descriptive names.,,139,,[]
‚úÖ Best Practice: Use of super() to call the parent class method ensures proper initialization.,"[26486, 227, 6705, 19939, 25, 5765, 286, 2208, 3419, 284, 869, 262, 2560, 1398, 2446, 19047, 1774, 37588, 13]",1.0,139,best_practice,90,Use of super() to call the parent class method ensures proper initialization.,,139,,[]
‚úÖ Best Practice: Initializing dictionaries to store trade trends and amounts.,"[26486, 227, 6705, 19939, 25, 20768, 2890, 48589, 3166, 284, 3650, 3292, 11257, 290, 6867, 13]",1.0,139,best_practice,93,Initializing dictionaries to store trade trends and amounts.,,139,,[]
üß† ML Signal: Iterating over decisions to update internal state could indicate a pattern for decision processing.,"[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 5370, 284, 4296, 5387, 1181, 714, 7603, 257, 3912, 329, 2551, 7587, 13]",1.0,151,ml_signal,96,Iterating over decisions to update internal state could indicate a pattern for decision processing.,,139,            ),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1267]"
üß† ML Signal: Mapping stock IDs to trends and amounts could be used to learn trading behavior.,"[8582, 100, 254, 10373, 26484, 25, 337, 5912, 4283, 32373, 284, 11257, 290, 6867, 714, 307, 973, 284, 2193, 7313, 4069, 13]",0.5,177,ml_signal,98,Mapping stock IDs to trends and amounts could be used to learn trading behavior.,,151,            # round the amount_delta by trade_unit and clip by remain,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 2835, 262, 2033, 62, 67, 12514, 416, 3292, 62, 20850, 290, 10651, 416, 3520]"
üß† ML Signal: Storing order amounts by stock ID could be used to analyze trading volume patterns.,"[8582, 100, 254, 10373, 26484, 25, 520, 3255, 1502, 6867, 416, 4283, 4522, 714, 307, 973, 284, 16602, 7313, 6115, 7572, 13]",0.5,198,ml_signal,100,Storing order amounts by stock ID could be used to analyze trading volume patterns.,,177,            if _amount_trade_unit is None:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 4808, 17287, 62, 25351, 62, 20850, 318, 6045, 25]"
"‚úÖ Best Practice: Method name starts with an underscore, indicating it's intended for internal use.","[26486, 227, 6705, 19939, 25, 11789, 1438, 4940, 351, 281, 44810, 11, 12739, 340, 338, 5292, 329, 5387, 779, 13]",1.0,198,best_practice,97,"Method name starts with an underscore, indicating it's intended for internal use.",,198,,[]
‚úÖ Best Practice: Raises NotImplementedError to indicate that the method should be overridden in subclasses.,"[26486, 227, 6705, 19939, 25, 7567, 2696, 1892, 3546, 1154, 12061, 12331, 284, 7603, 326, 262, 2446, 815, 307, 23170, 4651, 287, 850, 37724, 13]",0.5,219,best_practice,99,Raises NotImplementedError to indicate that the method should be overridden in subclasses.,,198,            # NOTE: this could be more than expected.,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 24550, 25, 428, 714, 307, 517, 621, 2938, 13]"
üß† ML Signal: Usage of trade calendar to determine trade steps and lengths,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 3292, 11845, 284, 5004, 3292, 4831, 290, 20428]",1.0,240,ml_signal,100,Usage of trade calendar to determine trade steps and lengths,,219,            if _amount_trade_unit is None:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 4808, 17287, 62, 25351, 62, 20850, 318, 6045, 25]"
‚ö†Ô∏è SAST Risk (Low): Potential for negative values if deal_amount exceeds trade_amount,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 4633, 3815, 611, 1730, 62, 17287, 21695, 3292, 62, 17287]",0.5,287,sast_risk,105,Potential for negative values if deal_amount exceeds trade_amount,Low,240,"                    np.round(amount_delta / _amount_trade_unit) * _amount_trade_unit, amount_remain","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 45941, 13, 744, 7, 17287, 62, 67, 12514, 1220, 4808, 17287, 62, 25351, 62, 20850, 8, 1635, 4808, 17287, 62, 25351, 62, 20850, 11, 2033, 62, 2787, 391]"
üß† ML Signal: Usage of trade calendar to get specific time frames,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 3292, 11845, 284, 651, 2176, 640, 13431]",1.0,287,ml_signal,107,Usage of trade calendar to get specific time frames,,287,,[]
üß† ML Signal: Iterating over external trade decisions,"[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 7097, 3292, 5370]",0.5,311,ml_signal,110,Iterating over external trade decisions,,287,            if rel_trade_step == trade_len - 1:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 823, 62, 25351, 62, 9662, 6624, 3292, 62, 11925, 532, 352, 25]"
üß† ML Signal: Predicting price trend based on stock ID and time frame,"[8582, 100, 254, 10373, 26484, 25, 49461, 278, 2756, 5182, 1912, 319, 4283, 4522, 290, 640, 5739]",1.0,335,ml_signal,113,Predicting price trend based on stock ID and time frame,,311,            if amount_delta_target > 1e-5:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 2033, 62, 67, 12514, 62, 16793, 1875, 352, 68, 12, 20, 25]"
‚ö†Ô∏è SAST Risk (Low): Potential logic flaw if stock is not tradable but trend is updated,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 9156, 11804, 611, 4283, 318, 407, 2083, 540, 475, 5182, 318, 6153]",0.5,364,sast_risk,118,Potential logic flaw if stock is not tradable but trend is updated,Low,335,"                    end_time=trade_end_time,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 886, 62, 2435, 28, 25351, 62, 437, 62, 2435, 11]"
üß† ML Signal: Determining trade unit amount based on stock ID and time frame,"[8582, 100, 254, 10373, 26484, 25, 360, 13221, 278, 3292, 4326, 2033, 1912, 319, 4283, 4522, 290, 640, 5739]",1.0,375,ml_signal,125,Determining trade unit amount based on stock ID and time frame,,364,class SBBStrategyBase(BaseStrategy):,"[4871, 311, 15199, 13290, 4338, 14881, 7, 14881, 13290, 4338, 2599]"
‚úÖ Best Practice: Use of a dedicated Order class for order creation,"[26486, 227, 6705, 19939, 25, 5765, 286, 257, 7256, 8284, 1398, 329, 1502, 6282]",1.0,412,best_practice,145,Use of a dedicated Order class for order creation,,375,"        super(SBBStrategyBase, self).reset(outer_trade_decision=outer_trade_decision, **kwargs)","[220, 220, 220, 220, 220, 220, 220, 2208, 7, 50, 15199, 13290, 4338, 14881, 11, 2116, 737, 42503, 7, 39605, 62, 25351, 62, 12501, 1166, 28, 39605, 62, 25351, 62, 12501, 1166, 11, 12429, 46265, 22046, 8]"
‚úÖ Best Practice: Returning a well-defined TradeDecisionWO object,"[26486, 227, 6705, 19939, 25, 42882, 257, 880, 12, 23211, 9601, 10707, 1166, 54, 46, 2134]",1.0,443,best_practice,202,Returning a well-defined TradeDecisionWO object,,412,"                    # calculate the amount of one part, ceil the amount","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 15284, 262, 2033, 286, 530, 636, 11, 2906, 346, 262, 2033]"
üß† ML Signal: Class inheritance pattern could be used to identify strategy types in trading systems,"[8582, 100, 254, 10373, 26484, 25, 5016, 24155, 3912, 714, 307, 973, 284, 5911, 4811, 3858, 287, 7313, 3341]",0.5,474,ml_signal,202,Class inheritance pattern could be used to identify strategy types in trading systems,,443,"                    # calculate the amount of one part, ceil the amount","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 15284, 262, 2033, 286, 530, 636, 11, 2906, 346, 262, 2033]"
‚úÖ Best Practice: Docstring provides clear parameter descriptions and default values,"[26486, 227, 6705, 19939, 25, 14432, 8841, 3769, 1598, 11507, 16969, 290, 4277, 3815]",0.5,514,best_practice,212,Docstring provides clear parameter descriptions and default values,,474,                        _order_amount = self.trade_amount[order.stock_id],"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4808, 2875, 62, 17287, 796, 2116, 13, 25351, 62, 17287, 58, 2875, 13, 13578, 62, 312, 60]"
‚ö†Ô∏è SAST Risk (Low): Use of warnings.warn can be missed if not properly handled,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 14601, 13, 40539, 460, 307, 6825, 611, 407, 6105, 12118]",1.0,534,sast_risk,223,Use of warnings.warn can be missed if not properly handled,Low,514,                    ),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1267]"
üß† ML Signal: Type checking and conversion pattern,"[8582, 100, 254, 10373, 26484, 25, 5994, 10627, 290, 11315, 3912]",0.5,555,ml_signal,227,Type checking and conversion pattern,,534,                _order_amount = None,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4808, 2875, 62, 17287, 796, 6045]"
üß† ML Signal: Type checking and direct assignment pattern,"[8582, 100, 254, 10373, 26484, 25, 5994, 10627, 290, 1277, 16237, 3912]",0.5,580,ml_signal,229,Type checking and direct assignment pattern,,555,                if _amount_trade_unit is None:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 4808, 17287, 62, 25351, 62, 20850, 318, 6045, 25]"
‚úÖ Best Practice: Explicit call to superclass initializer,"[26486, 227, 6705, 19939, 25, 11884, 869, 284, 2208, 4871, 4238, 7509]",1.0,597,best_practice,233,Explicit call to superclass initializer,,580,                else:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2073, 25]"
üß† ML Signal: Usage of EMA (Exponential Moving Average) indicates a pattern for financial time series analysis,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 412, 5673, 357, 16870, 35470, 26768, 13475, 8, 9217, 257, 3912, 329, 3176, 640, 2168, 3781]",1.0,622,ml_signal,234,Usage of EMA (Exponential Moving Average) indicates a pattern for financial time series analysis,,597,                    # cal how many trade unit,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 2386, 703, 867, 3292, 4326]"
‚úÖ Best Practice: Descriptive variable names improve code readability,"[26486, 227, 6705, 19939, 25, 2935, 6519, 425, 7885, 3891, 2987, 2438, 1100, 1799]",1.0,660,best_practice,236,Descriptive variable names improve code readability,,622,"                    # N trade day left, divide the order into N + 1 parts, and trade 2 parts","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 399, 3292, 1110, 1364, 11, 14083, 262, 1502, 656, 399, 1343, 352, 3354, 11, 290, 3292, 362, 3354]"
üß† ML Signal: Fetching features over a time range is a common pattern in time series analysis,"[8582, 100, 254, 10373, 26484, 25, 376, 7569, 278, 3033, 625, 257, 640, 2837, 318, 257, 2219, 3912, 287, 640, 2168, 3781]",1.0,685,ml_signal,240,Fetching features over a time range is a common pattern in time series analysis,,660,                        * 2,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1635, 362]"
‚úÖ Best Practice: Renaming columns for clarity,"[26486, 227, 6705, 19939, 25, 7152, 3723, 15180, 329, 16287]",1.0,710,best_practice,243,Renaming columns for clarity,,685,                if order.direction == order.SELL:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 1502, 13, 37295, 6624, 1502, 13, 5188, 3069, 25]"
üß† ML Signal: Grouping by instrument suggests a pattern for handling multiple time series,"[8582, 100, 254, 10373, 26484, 25, 4912, 278, 416, 8875, 5644, 257, 3912, 329, 9041, 3294, 640, 2168]",1.0,752,ml_signal,246,Grouping by instrument suggests a pattern for handling multiple time series,,710,                        _order_amount < 1e-5 or trade_step == trade_len - 1,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4808, 2875, 62, 17287, 1279, 352, 68, 12, 20, 393, 3292, 62, 9662, 6624, 3292, 62, 11925, 532, 352]"
‚úÖ Best Practice: Dropping unnecessary levels in index for cleaner data structures,"[26486, 227, 6705, 19939, 25, 21045, 2105, 13114, 2974, 287, 6376, 329, 21723, 1366, 8573]",1.0,790,best_practice,250,Dropping unnecessary levels in index for cleaner data structures,,752,"                _order_amount = min(_order_amount, self.trade_amount[order.stock_id])","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4808, 2875, 62, 17287, 796, 949, 28264, 2875, 62, 17287, 11, 2116, 13, 25351, 62, 17287, 58, 2875, 13, 13578, 62, 312, 12962]"
‚úÖ Best Practice: Docstring provides a clear explanation of the method's purpose,"[26486, 227, 6705, 19939, 25, 14432, 8841, 3769, 257, 1598, 7468, 286, 262, 2446, 338, 4007]",1.0,832,best_practice,246,Docstring provides a clear explanation of the method's purpose,,790,                        _order_amount < 1e-5 or trade_step == trade_len - 1,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4808, 2875, 62, 17287, 1279, 352, 68, 12, 20, 393, 3292, 62, 9662, 6624, 3292, 62, 11925, 532, 352]"
üß† ML Signal: Use of inheritance and method overriding,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 24155, 290, 2446, 44987]",1.0,832,ml_signal,251,Use of inheritance and method overriding,,832,,[]
üß† ML Signal: Method call pattern for resetting internal state,"[8582, 100, 254, 10373, 26484, 25, 11789, 869, 3912, 329, 13259, 889, 5387, 1181]",0.5,860,ml_signal,253,Method call pattern for resetting internal state,,832,                    if trade_step % 2 == 0:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 3292, 62, 9662, 4064, 362, 6624, 657, 25]"
üß† ML Signal: Function for predicting price trends based on historical signals,"[8582, 100, 254, 10373, 26484, 25, 15553, 329, 25539, 2756, 11257, 1912, 319, 6754, 10425]",1.0,888,ml_signal,253,Function for predicting price trends based on historical signals,,860,                    if trade_step % 2 == 0:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 3292, 62, 9662, 4064, 362, 6624, 657, 25]"
‚úÖ Best Practice: Use of a helper function to resample time series data,"[26486, 227, 6705, 19939, 25, 5765, 286, 257, 31904, 2163, 284, 581, 1403, 640, 2168, 1366]",1.0,923,best_practice,256,Use of a helper function to resample time series data,,888,"                        # if look long on the price, buy the stock more","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 611, 804, 890, 319, 262, 2756, 11, 2822, 262, 4283, 517]"
‚ö†Ô∏è SAST Risk (Low): Potential issue if resam_ts_data returns unexpected types,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2071, 611, 581, 321, 62, 912, 62, 7890, 5860, 10059, 3858]",1.0,964,sast_risk,264,Potential issue if resam_ts_data returns unexpected types,Low,923,"                                stock_id=order.stock_id,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4283, 62, 312, 28, 2875, 13, 13578, 62, 312, 11]"
‚úÖ Best Practice: Class should have a docstring explaining its purpose and usage,"[26486, 227, 6705, 19939, 25, 5016, 815, 423, 257, 2205, 8841, 11170, 663, 4007, 290, 8748]",0.5,1006,best_practice,268,Class should have a docstring explaining its purpose and usage,,964,"                                direction=order.direction,  # 1 for buy","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4571, 28, 2875, 13, 37295, 11, 220, 1303, 352, 329, 2822]"
üß† ML Signal: Use of default parameter values,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4277, 11507, 3815]",0.5,1040,ml_signal,291,Use of default parameter values,,1006,"                # in the first one of two adjacent bars, store the trend for the second one to use","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 287, 262, 717, 530, 286, 734, 15909, 9210, 11, 3650, 262, 5182, 329, 262, 1218, 530, 284, 779]"
üß† ML Signal: Use of default parameter values,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4277, 11507, 3815]",0.5,1040,ml_signal,293,Use of default parameter values,,1040,,[]
üß† ML Signal: Use of default parameter values,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4277, 11507, 3815]",0.5,1040,ml_signal,295,Use of default parameter values,,1040,,[]
‚ö†Ô∏è SAST Risk (Low): Potential issue if `instruments` is None and not handled,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2071, 611, 4600, 259, 2536, 2886, 63, 318, 6045, 290, 407, 12118]",0.5,1053,sast_risk,297,Potential issue if `instruments` is None and not handled,Low,1040,class SBBStrategyEMA(SBBStrategyBase):,"[4871, 311, 15199, 13290, 4338, 27630, 7, 50, 15199, 13290, 4338, 14881, 2599]"
‚ö†Ô∏è SAST Risk (Low): Use of warnings instead of exceptions for critical issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 14601, 2427, 286, 13269, 329, 4688, 2428]",0.5,1085,sast_risk,299,Use of warnings instead of exceptions for critical issues,Low,1053,    (S)elect the (B)etter one among every two adjacent trading (B)ars to sell or buy with (EMA) signal.,"[220, 220, 220, 357, 50, 8, 9509, 262, 357, 33, 8, 40088, 530, 1871, 790, 734, 15909, 7313, 357, 33, 8, 945, 284, 3677, 393, 2822, 351, 357, 27630, 8, 6737, 13]"
‚úÖ Best Practice: Check type before processing,"[26486, 227, 6705, 19939, 25, 6822, 2099, 878, 7587]",0.5,1103,best_practice,303,Check type before processing,,1085,    # 1. Supporting leverage the get_range_limit result from the decision,"[220, 220, 220, 1303, 352, 13, 44188, 16094, 262, 651, 62, 9521, 62, 32374, 1255, 422, 262, 2551]"
üß† ML Signal: Use of default parameter values,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4277, 11507, 3815]",0.5,1116,ml_signal,305,Use of default parameter values,,1103,    # 3. Supporting checking the availability of trade decision,"[220, 220, 220, 1303, 513, 13, 44188, 10627, 262, 11500, 286, 3292, 2551]"
‚úÖ Best Practice: Explicit call to superclass constructor,"[26486, 227, 6705, 19939, 25, 11884, 869, 284, 2208, 4871, 23772]",0.5,1125,best_practice,308,Explicit call to superclass constructor,,1116,"        self,","[220, 220, 220, 220, 220, 220, 220, 2116, 11]"
üß† ML Signal: Usage of mathematical operations on financial data for feature extraction,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 18069, 4560, 319, 3176, 1366, 329, 3895, 22236]",1.0,1138,ml_signal,305,Usage of mathematical operations on financial data for feature extraction,,1125,    # 3. Supporting checking the availability of trade decision,"[220, 220, 220, 1303, 513, 13, 44188, 10627, 262, 11500, 286, 3292, 2551]"
üß† ML Signal: Use of trade calendar to determine time range for data extraction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 3292, 11845, 284, 5004, 640, 2837, 329, 1366, 22236]",1.0,1159,ml_signal,309,Use of trade calendar to determine time range for data extraction,,1138,"        outer_trade_decision: BaseTradeDecision = None,","[220, 220, 220, 220, 220, 220, 220, 12076, 62, 25351, 62, 12501, 1166, 25, 7308, 35965, 10707, 1166, 796, 6045, 11]"
üß† ML Signal: Extraction of features over a specified time range,"[8582, 100, 254, 10373, 26484, 25, 5683, 7861, 286, 3033, 625, 257, 7368, 640, 2837]",0.5,1177,ml_signal,313,Extraction of features over a specified time range,,1159,"        level_infra: LevelInfrastructure = None,","[220, 220, 220, 220, 220, 220, 220, 1241, 62, 10745, 430, 25, 5684, 18943, 6410, 796, 6045, 11]"
‚úÖ Best Practice: Renaming columns for clarity and consistency,"[26486, 227, 6705, 19939, 25, 7152, 3723, 15180, 329, 16287, 290, 15794]",1.0,1181,best_practice,316,Renaming columns for clarity and consistency,,1177,    ):,"[220, 220, 220, 15179]"
üß† ML Signal: Grouping data by instrument for individual analysis,"[8582, 100, 254, 10373, 26484, 25, 4912, 278, 1366, 416, 8875, 329, 1981, 3781]",1.0,1190,ml_signal,319,Grouping data by instrument for individual analysis,,1181,        ----------,"[220, 220, 220, 220, 220, 220, 220, 24200, 438]"
‚úÖ Best Practice: Dropping unnecessary index levels for cleaner data structure,"[26486, 227, 6705, 19939, 25, 21045, 2105, 13114, 6376, 2974, 329, 21723, 1366, 4645]",1.0,1213,best_practice,323,Dropping unnecessary index levels for cleaner data structure,,1190,"            freq of EMA signal, by default ""day""","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2030, 80, 286, 412, 5673, 6737, 11, 416, 4277, 366, 820, 1]"
‚úÖ Best Practice: Use of super() to call a method from the parent class,"[26486, 227, 6705, 19939, 25, 5765, 286, 2208, 3419, 284, 869, 257, 2446, 422, 262, 2560, 1398]",0.5,1236,best_practice,323,Use of super() to call a method from the parent class,,1213,"            freq of EMA signal, by default ""day""","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2030, 80, 286, 412, 5673, 6737, 11, 416, 4277, 366, 820, 1]"
"üß† ML Signal: Method that resets or changes internal state, which could be relevant for ML models tracking state changes","[8582, 100, 254, 10373, 26484, 25, 11789, 326, 581, 1039, 393, 2458, 5387, 1181, 11, 543, 714, 307, 5981, 329, 10373, 4981, 9646, 1181, 2458]",0.5,1244,ml_signal,325,"Method that resets or changes internal state, which could be relevant for ML models tracking state changes",,1236,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚úÖ Best Practice: Use of super() to call the parent class method ensures proper initialization,"[26486, 227, 6705, 19939, 25, 5765, 286, 2208, 3419, 284, 869, 262, 2560, 1398, 2446, 19047, 1774, 37588]",1.0,1262,best_practice,331,Use of super() to call the parent class method ensures proper initialization,,1244,"        elif isinstance(instruments, List):","[220, 220, 220, 220, 220, 220, 220, 1288, 361, 318, 39098, 7, 259, 2536, 2886, 11, 7343, 2599]"
‚úÖ Best Practice: Initializing trade_amount as an empty dictionary,"[26486, 227, 6705, 19939, 25, 20768, 2890, 3292, 62, 17287, 355, 281, 6565, 22155]",1.0,1283,best_practice,334,Initializing trade_amount as an empty dictionary,,1262,"        super(SBBStrategyEMA, self).__init__(","[220, 220, 220, 220, 220, 220, 220, 2208, 7, 50, 15199, 13290, 4338, 27630, 11, 2116, 737, 834, 15003, 834, 7]"
üß† ML Signal: Iterating over decisions to populate trade_amount,"[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 5370, 284, 48040, 3292, 62, 17287]",1.0,1291,ml_signal,336,Iterating over decisions to populate trade_amount,,1283,        ),"[220, 220, 220, 220, 220, 220, 220, 1267]"
üß† ML Signal: Mapping stock_id to amount in trade_amount,"[8582, 100, 254, 10373, 26484, 25, 337, 5912, 4283, 62, 312, 284, 2033, 287, 3292, 62, 17287]",1.0,1303,ml_signal,338,Mapping stock_id to amount in trade_amount,,1291,    def _reset_signal(self):,"[220, 220, 220, 825, 4808, 42503, 62, 12683, 282, 7, 944, 2599]"
üß† ML Signal: Usage of trade calendar to get trade step and length,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 3292, 11845, 284, 651, 3292, 2239, 290, 4129]",0.5,1303,ml_signal,337,Usage of trade calendar to get trade step and length,,1303,,[]
‚ö†Ô∏è SAST Risk (Low): Potential for negative trade amounts if not properly validated,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 4633, 3292, 6867, 611, 407, 6105, 31031]",1.0,1345,sast_risk,342,Potential for negative trade amounts if not properly validated,Low,1303,"        _, signal_end_time = self.trade_calendar.get_step_time(trade_step=trade_len - 1, shift=1)","[220, 220, 220, 220, 220, 220, 220, 4808, 11, 6737, 62, 437, 62, 2435, 796, 2116, 13, 25351, 62, 9948, 9239, 13, 1136, 62, 9662, 62, 2435, 7, 25351, 62, 9662, 28, 25351, 62, 11925, 532, 352, 11, 6482, 28, 16, 8]"
üß† ML Signal: Usage of trade calendar to get step time,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 3292, 11845, 284, 651, 2239, 640]",0.5,1393,ml_signal,344,Usage of trade calendar to get step time,,1345,"            self.instruments, fields, start_time=signal_start_time, end_time=signal_end_time, freq=self.freq","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 259, 2536, 2886, 11, 7032, 11, 923, 62, 2435, 28, 12683, 282, 62, 9688, 62, 2435, 11, 886, 62, 2435, 28, 12683, 282, 62, 437, 62, 2435, 11, 2030, 80, 28, 944, 13, 19503, 80]"
üß† ML Signal: Checking if stock is tradable within a time range,"[8582, 100, 254, 10373, 26484, 25, 39432, 611, 4283, 318, 2083, 540, 1626, 257, 640, 2837]",0.5,1408,ml_signal,349,Checking if stock is tradable within a time range,,1393,        if not signal_df.empty:,"[220, 220, 220, 220, 220, 220, 220, 611, 407, 6737, 62, 7568, 13, 28920, 25]"
üß† ML Signal: Resampling time series data for signal processing,"[8582, 100, 254, 10373, 26484, 25, 1874, 321, 11347, 640, 2168, 1366, 329, 6737, 7587]",0.5,1427,ml_signal,356,Resampling time series data for signal processing,,1408,"        - After reset the trade calendar, the signal will be changed","[220, 220, 220, 220, 220, 220, 220, 532, 2293, 13259, 262, 3292, 11845, 11, 262, 6737, 481, 307, 3421]"
üß† ML Signal: Handling missing or NaN signal samples,"[8582, 100, 254, 10373, 26484, 25, 49500, 4814, 393, 11013, 45, 6737, 8405]",0.5,1461,ml_signal,361,Handling missing or NaN signal samples,,1427,"    def _pred_price_trend(self, stock_id, pred_start_time=None, pred_end_time=None):","[220, 220, 220, 825, 4808, 28764, 62, 20888, 62, 83, 10920, 7, 944, 11, 4283, 62, 312, 11, 2747, 62, 9688, 62, 2435, 28, 14202, 11, 2747, 62, 437, 62, 2435, 28, 14202, 2599]"
üß† ML Signal: Calculating kappa for trade amount adjustment,"[8582, 100, 254, 10373, 26484, 25, 27131, 803, 479, 20975, 329, 3292, 2033, 15068]",0.5,1484,ml_signal,374,Calculating kappa for trade amount adjustment,,1461,                return self.TREND_MID,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441, 2116, 13, 5446, 10619, 62, 44, 2389]"
‚úÖ Best Practice: Rounding order amount by trade unit for consistency,"[26486, 227, 6705, 19939, 25, 371, 9969, 1502, 2033, 416, 3292, 4326, 329, 15794]",0.5,1484,best_practice,381,Rounding order amount by trade unit for consistency,,1484,,[]
‚ö†Ô∏è SAST Risk (Low): Potential for incorrect order amounts if not properly validated,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 11491, 1502, 6867, 611, 407, 6105, 31031]",1.0,1484,sast_risk,382,Potential for incorrect order amounts if not properly validated,Low,1484,,[]
‚úÖ Best Practice: Creating order object for each valid trade decision,"[26486, 227, 6705, 19939, 25, 30481, 1502, 2134, 329, 1123, 4938, 3292, 2551]",0.5,1503,best_practice,391,Creating order object for each valid trade decision,,1484,"        eta: float = 2.5e-6,","[220, 220, 220, 220, 220, 220, 220, 2123, 64, 25, 12178, 796, 362, 13, 20, 68, 12, 21, 11]"
‚úÖ Best Practice: Returning a TradeDecisionWO object for encapsulation,"[26486, 227, 6705, 19939, 25, 42882, 257, 9601, 10707, 1166, 54, 46, 2134, 329, 32652, 1741]",0.5,1511,best_practice,401,Returning a TradeDecisionWO object for encapsulation,,1503,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚úÖ Best Practice: Class should inherit from a base class to ensure consistent interface and behavior,"[26486, 227, 6705, 19939, 25, 5016, 815, 16955, 422, 257, 2779, 1398, 284, 4155, 6414, 7071, 290, 4069]",0.5,1526,best_practice,392,Class should inherit from a base class to ensure consistent interface and behavior,,1511,"        window_size: int = 20,","[220, 220, 220, 220, 220, 220, 220, 4324, 62, 7857, 25, 493, 796, 1160, 11]"
‚úÖ Best Practice: Call to super() ensures proper initialization of the base class,"[26486, 227, 6705, 19939, 25, 4889, 284, 2208, 3419, 19047, 1774, 37588, 286, 262, 2779, 1398]",0.5,1543,best_practice,416,Call to super() ensures proper initialization of the base class,,1526,"        if isinstance(instruments, str):","[220, 220, 220, 220, 220, 220, 220, 611, 318, 39098, 7, 259, 2536, 2886, 11, 965, 2599]"
üß† ML Signal: Usage of parameters to set instance variables,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 10007, 284, 900, 4554, 9633]",0.5,1557,ml_signal,418,Usage of parameters to set instance variables,,1543,        self.freq = freq,"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 19503, 80, 796, 2030, 80]"
üß† ML Signal: Usage of parameters to set instance variables,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 10007, 284, 900, 4554, 9633]",0.5,1598,ml_signal,420,Usage of parameters to set instance variables,,1557,"            outer_trade_decision, level_infra, common_infra, trade_exchange=trade_exchange, **kwargs","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 12076, 62, 25351, 62, 12501, 1166, 11, 1241, 62, 10745, 430, 11, 2219, 62, 10745, 430, 11, 3292, 62, 1069, 3803, 28, 25351, 62, 1069, 3803, 11, 12429, 46265, 22046]"
üß† ML Signal: Usage of parameters to set instance variables,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 10007, 284, 900, 4554, 9633]",0.5,1598,ml_signal,422,Usage of parameters to set instance variables,,1598,,[]
üß† ML Signal: Usage of parameters to set instance variables,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 10007, 284, 900, 4554, 9633]",0.5,1608,ml_signal,425,Usage of parameters to set instance variables,,1598,        fields = [,"[220, 220, 220, 220, 220, 220, 220, 7032, 796, 685]"
‚ö†Ô∏è SAST Risk (Low): Potential risk if `self.common_infra` is not properly initialized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 4600, 944, 13, 11321, 62, 10745, 430, 63, 318, 407, 6105, 23224]",1.0,1703,sast_risk,426,Potential risk if `self.common_infra` is not properly initialized,Low,1608,"            f""Power(Sum(Power(Log($close/Ref($close, 1)), 2), {self.window_size})/{self.window_size - 1}-Power(Sum(Log($close/Ref($close, 1)), {self.window_size}), 2)/({self.window_size}*{self.window_size - 1}), 0.5)""","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 277, 1, 13434, 7, 13065, 7, 13434, 7, 11187, 16763, 19836, 14, 8134, 16763, 19836, 11, 352, 36911, 362, 828, 1391, 944, 13, 17497, 62, 7857, 92, 20679, 90, 944, 13, 17497, 62, 7857, 532, 352, 92, 12, 13434, 7, 13065, 7, 11187, 16763, 19836, 14, 8134, 16763, 19836, 11, 352, 36911, 1391, 944, 13, 17497, 62, 7857, 92, 828, 362, 20679, 15090, 944, 13, 17497, 62, 7857, 92, 9, 90, 944, 13, 17497, 62, 7857, 532, 352, 92, 828, 657, 13, 20, 16725]"
üß† ML Signal: Use of external data source for feature extraction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 7097, 1366, 2723, 329, 3895, 22236]",1.0,1741,ml_signal,428,Use of external data source for feature extraction,,1703,"        signal_start_time, _ = self.trade_calendar.get_step_time(trade_step=0, shift=1)","[220, 220, 220, 220, 220, 220, 220, 6737, 62, 9688, 62, 2435, 11, 4808, 796, 2116, 13, 25351, 62, 9948, 9239, 13, 1136, 62, 9662, 62, 2435, 7, 25351, 62, 9662, 28, 15, 11, 6482, 28, 16, 8]"
üß† ML Signal: Data transformation and reshaping,"[8582, 100, 254, 10373, 26484, 25, 6060, 13389, 290, 27179, 9269]",1.0,1749,ml_signal,432,Data transformation and reshaping,,1741,        ),"[220, 220, 220, 220, 220, 220, 220, 1267]"
üß† ML Signal: Usage of parameters to set instance variables,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 10007, 284, 900, 4554, 9633]",0.5,1767,ml_signal,433,Usage of parameters to set instance variables,,1749,"        signal_df.columns = [""volatility""]","[220, 220, 220, 220, 220, 220, 220, 6737, 62, 7568, 13, 28665, 82, 796, 14631, 10396, 18486, 8973]"
üß† ML Signal: Usage of time-based trading steps can indicate temporal patterns in trading behavior.,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 640, 12, 3106, 7313, 4831, 460, 7603, 21964, 7572, 287, 7313, 4069, 13]",0.5,1809,ml_signal,429,Usage of time-based trading steps can indicate temporal patterns in trading behavior.,,1767,"        _, signal_end_time = self.trade_calendar.get_step_time(trade_step=trade_len - 1, shift=1)","[220, 220, 220, 220, 220, 220, 220, 4808, 11, 6737, 62, 437, 62, 2435, 796, 2116, 13, 25351, 62, 9948, 9239, 13, 1136, 62, 9662, 62, 2435, 7, 25351, 62, 9662, 28, 25351, 62, 11925, 532, 352, 11, 6482, 28, 16, 8]"
üß† ML Signal: Conditional logic based on time can be used to infer trading strategies.,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9156, 1912, 319, 640, 460, 307, 973, 284, 13249, 7313, 10064, 13]",0.5,1817,ml_signal,432,Conditional logic based on time can be used to infer trading strategies.,,1809,        ),"[220, 220, 220, 220, 220, 220, 220, 1267]"
üß† ML Signal: Iterating over stock volumes can indicate trading volume patterns.,"[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 4283, 15343, 460, 7603, 7313, 6115, 7572, 13]",0.5,1835,ml_signal,433,Iterating over stock volumes can indicate trading volume patterns.,,1817,"        signal_df.columns = [""volatility""]","[220, 220, 220, 220, 220, 220, 220, 6737, 62, 7568, 13, 28665, 82, 796, 14631, 10396, 18486, 8973]"
‚ö†Ô∏è SAST Risk (Low): Potential risk if `self.common_infra` or its methods are not properly validated.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 4600, 944, 13, 11321, 62, 10745, 430, 63, 393, 663, 5050, 389, 407, 6105, 31031, 13]",0.5,1853,sast_risk,433,Potential risk if `self.common_infra` or its methods are not properly validated.,Low,1835,"        signal_df.columns = [""volatility""]","[220, 220, 220, 220, 220, 220, 220, 6737, 62, 7568, 13, 28665, 82, 796, 14631, 10396, 18486, 8973]"
‚úÖ Best Practice: Returning a well-defined object improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 42882, 257, 880, 12, 23211, 2134, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",0.5,1861,best_practice,444,Returning a well-defined object improves code readability and maintainability.,,1853,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
"‚ö†Ô∏è SAST Risk (Low): Potential risk if `file` is user-controlled and not validated, leading to file inclusion vulnerabilities.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 4600, 7753, 63, 318, 2836, 12, 14401, 290, 407, 31031, 11, 3756, 284, 2393, 14900, 23805, 13]",0.5,1901,sast_risk,473,"Potential risk if `file` is user-controlled and not validated, leading to file inclusion vulnerabilities.",Low,1861,"        pred_start_time, pred_end_time = self.trade_calendar.get_step_time(trade_step, shift=1)","[220, 220, 220, 220, 220, 220, 220, 2747, 62, 9688, 62, 2435, 11, 2747, 62, 437, 62, 2435, 796, 2116, 13, 25351, 62, 9948, 9239, 13, 1136, 62, 9662, 62, 2435, 7, 25351, 62, 9662, 11, 6482, 28, 16, 8]"
‚ö†Ô∏è SAST Risk (Low): Using `get_io_object` without validation can lead to file handling vulnerabilities.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 4600, 1136, 62, 952, 62, 15252, 63, 1231, 21201, 460, 1085, 284, 2393, 9041, 23805, 13]",0.5,1929,sast_risk,477,Using `get_io_object` without validation can lead to file handling vulnerabilities.,Low,1901,            if not self.trade_exchange.is_stock_tradable(,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 407, 2116, 13, 25351, 62, 1069, 3803, 13, 271, 62, 13578, 62, 2213, 324, 540, 7]"
‚ö†Ô∏è SAST Risk (Low): Reading CSV files without specifying `engine` can lead to security issues if the file is malformed.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 11725, 44189, 3696, 1231, 31577, 4600, 18392, 63, 460, 1085, 284, 2324, 2428, 611, 262, 2393, 318, 6428, 12214, 13]",0.5,1941,sast_risk,479,Reading CSV files without specifying `engine` can lead to security issues if the file is malformed.,Low,1929,            ):,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 15179]"
‚úÖ Best Practice: Converting strings to Timestamps ensures consistent datetime operations.,"[26486, 227, 6705, 19939, 25, 35602, 889, 13042, 284, 5045, 395, 9430, 19047, 6414, 4818, 8079, 4560, 13]",0.5,1958,best_practice,481,Converting strings to Timestamps ensures consistent datetime operations.,,1941,            _order_amount = None,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4808, 2875, 62, 17287, 796, 6045]"
‚úÖ Best Practice: Setting a multi-level index improves data manipulation and querying efficiency.,"[26486, 227, 6705, 19939, 25, 25700, 257, 5021, 12, 5715, 6376, 19575, 1366, 17512, 290, 42517, 1112, 9332, 13]",0.5,1958,best_practice,483,Setting a multi-level index improves data manipulation and querying efficiency.,,1958,,[]
‚úÖ Best Practice: Sorting the index can improve performance for subsequent operations that rely on index order.,"[26486, 227, 6705, 19939, 25, 311, 24707, 262, 6376, 460, 2987, 2854, 329, 8840, 4560, 326, 8814, 319, 6376, 1502, 13]",0.5,1958,best_practice,483,Sorting the index can improve performance for subsequent operations that rely on index order.,,1958,,[]
üß† ML Signal: Storing `trade_range` indicates a pattern of using time ranges for trading strategies.,"[8582, 100, 254, 10373, 26484, 25, 520, 3255, 4600, 25351, 62, 9521, 63, 9217, 257, 3912, 286, 1262, 640, 16069, 329, 7313, 10064, 13]",0.5,1958,ml_signal,489,Storing `trade_range` indicates a pattern of using time ranges for trading strategies.,,1958,,[]
üß† ML Signal: Usage of a helper class to manage orders,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 31904, 1398, 284, 6687, 6266]",1.0,1958,ml_signal,489,Usage of a helper class to manage orders,,1958,,[]
üß† ML Signal: Accessing a trade calendar to get the current step time,"[8582, 100, 254, 10373, 26484, 25, 8798, 278, 257, 3292, 11845, 284, 651, 262, 1459, 2239, 640]",1.0,1979,ml_signal,491,Accessing a trade calendar to get the current step time,,1958,"                # no signal, TWAP","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 645, 6737, 11, 17306, 2969]"
üß† ML Signal: Accessing a DataFrame using a specific index,"[8582, 100, 254, 10373, 26484, 25, 8798, 278, 257, 6060, 19778, 1262, 257, 2176, 6376]",1.0,1995,ml_signal,494,Accessing a DataFrame using a specific index,,1979,                ),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1267]"
‚ö†Ô∏è SAST Risk (Low): Handling of KeyError without logging or additional context,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 49500, 286, 7383, 12331, 1231, 18931, 393, 3224, 4732]",1.0,2041,sast_risk,497,Handling of KeyError without logging or additional context,Low,1995,                    _order_amount = self.trade_amount[order.stock_id] / (trade_len - trade_step),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4808, 2875, 62, 17287, 796, 2116, 13, 25351, 62, 17287, 58, 2875, 13, 13578, 62, 312, 60, 1220, 357, 25351, 62, 11925, 532, 3292, 62, 9662, 8]"
üß† ML Signal: Iterating over DataFrame rows to create orders,"[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 6060, 19778, 15274, 284, 2251, 6266]",1.0,2058,ml_signal,498,Iterating over DataFrame rows to create orders,,2041,                else:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2073, 25]"
üß† ML Signal: Creating an order with specific parameters,"[8582, 100, 254, 10373, 26484, 25, 30481, 281, 1502, 351, 2176, 10007]",1.0,2116,ml_signal,505,Creating an order with specific parameters,,2058,                        (trade_unit_cnt + trade_len - trade_step - 1) // (trade_len - trade_step) * _amount_trade_unit,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 357, 25351, 62, 20850, 62, 66, 429, 1343, 3292, 62, 11925, 532, 3292, 62, 9662, 532, 352, 8, 3373, 357, 25351, 62, 11925, 532, 3292, 62, 9662, 8, 1635, 4808, 17287, 62, 25351, 62, 20850]"
‚úÖ Best Practice: Using a class method to parse direction ensures consistency,"[26486, 227, 6705, 19939, 25, 8554, 257, 1398, 2446, 284, 21136, 4571, 19047, 15794]",0.5,2174,best_practice,505,Using a class method to parse direction ensures consistency,,2116,                        (trade_unit_cnt + trade_len - trade_step - 1) // (trade_len - trade_step) * _amount_trade_unit,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 357, 25351, 62, 20850, 62, 66, 429, 1343, 3292, 62, 11925, 532, 3292, 62, 9662, 532, 352, 8, 3373, 357, 25351, 62, 11925, 532, 3292, 62, 9662, 8, 1635, 4808, 17287, 62, 25351, 62, 20850]"
üß† ML Signal: Returning a trade decision object with a list of orders,"[8582, 100, 254, 10373, 26484, 25, 42882, 257, 3292, 2551, 2134, 351, 257, 1351, 286, 6266]",0.5,2232,ml_signal,505,Returning a trade decision object with a list of orders,,2174,                        (trade_unit_cnt + trade_len - trade_step - 1) // (trade_len - trade_step) * _amount_trade_unit,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 357, 25351, 62, 20850, 62, 66, 429, 1343, 3292, 62, 11925, 532, 3292, 62, 9662, 532, 352, 8, 3373, 357, 25351, 62, 11925, 532, 3292, 62, 9662, 8, 1635, 4808, 17287, 62, 25351, 62, 20850]"
