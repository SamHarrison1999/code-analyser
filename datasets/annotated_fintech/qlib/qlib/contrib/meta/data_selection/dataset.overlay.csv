annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Use of typing module for type hinting improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5765, 286, 19720, 8265, 329, 2099, 9254, 278, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,5,best_practice,5,Use of typing module for type hinting improves code readability and maintainability.,,0,from copy import deepcopy,"[6738, 4866, 1330, 2769, 30073]"
üß† ML Signal: Logging is often used in ML pipelines for tracking experiments and debugging.,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 318, 1690, 973, 287, 10373, 31108, 329, 9646, 10256, 290, 28769, 13]",0.5,16,ml_signal,13,Logging is often used in ML pipelines for tracking experiments and debugging.,,5,from qlib.model.trainer import TrainerR,"[6738, 10662, 8019, 13, 19849, 13, 2213, 10613, 1330, 31924, 49]"
‚úÖ Best Practice: Use of utility functions can improve code reusability and reduce redundancy.,"[26486, 227, 6705, 19939, 25, 5765, 286, 10361, 5499, 460, 2987, 2438, 302, 385, 1799, 290, 4646, 49052, 13]",0.5,44,best_practice,15,Use of utility functions can improve code reusability and reduce redundancy.,,16,"from qlib.utils import auto_filter_kwargs, get_date_by_shift, init_instance_by_config","[6738, 10662, 8019, 13, 26791, 1330, 8295, 62, 24455, 62, 46265, 22046, 11, 651, 62, 4475, 62, 1525, 62, 30846, 11, 2315, 62, 39098, 62, 1525, 62, 11250]"
üß† ML Signal: Use of tqdm for progress tracking is common in data processing and ML model training.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 256, 80, 36020, 329, 4371, 9646, 318, 2219, 287, 1366, 7587, 290, 10373, 2746, 3047, 13]",0.5,44,ml_signal,21,Use of tqdm for progress tracking is common in data processing and ML model training.,,44,,[]
‚úÖ Best Practice: Use of type annotations for function parameters improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 2163, 10007, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,44,best_practice,21,Use of type annotations for function parameters improves code readability and maintainability.,,44,,[]
‚úÖ Best Practice: Use of docstring to explain the function's purpose and provide examples.,"[26486, 227, 6705, 19939, 25, 5765, 286, 2205, 8841, 284, 4727, 262, 2163, 338, 4007, 290, 2148, 6096, 13]",1.0,62,best_practice,25,Use of docstring to explain the function's purpose and provide examples.,,44,        self.task_tpl = task_tpl,"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 35943, 62, 83, 489, 796, 4876, 62, 83, 489]"
‚úÖ Best Practice: Default mutable arguments should be avoided to prevent unexpected behavior.,"[26486, 227, 6705, 19939, 25, 15161, 4517, 540, 7159, 815, 307, 13941, 284, 2948, 10059, 4069, 13]",0.5,80,best_practice,25,Default mutable arguments should be avoided to prevent unexpected behavior.,,62,        self.task_tpl = task_tpl,"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 35943, 62, 83, 489, 796, 4876, 62, 83, 489]"
‚úÖ Best Practice: Use of deepcopy to avoid modifying the original task_tpl.,"[26486, 227, 6705, 19939, 25, 5765, 286, 2769, 30073, 284, 3368, 30620, 262, 2656, 4876, 62, 83, 489, 13]",1.0,150,best_practice,44,Use of deepcopy to avoid modifying the original task_tpl.,,80,            2018-01-05   0.030320  -0.037209  -0.044536  -0.047267  -0.081888   0.045648   0.059947   0.047652  ...,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2864, 12, 486, 12, 2713, 220, 220, 657, 13, 39101, 19504, 220, 532, 15, 13, 15, 2718, 22567, 220, 532, 15, 13, 3023, 2231, 2623, 220, 532, 15, 13, 48000, 25674, 220, 532, 15, 13, 2919, 1507, 3459, 220, 220, 657, 13, 40350, 34287, 220, 220, 657, 13, 2713, 2079, 2857, 220, 220, 657, 13, 48000, 43193, 220, 2644]"
üß† ML Signal: Use of auto_filter_kwargs suggests dynamic function argument handling.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 8295, 62, 24455, 62, 46265, 22046, 5644, 8925, 2163, 4578, 9041, 13]",1.0,235,ml_signal,46,Use of auto_filter_kwargs suggests dynamic function argument handling.,,150,            ...               ...        ...        ...        ...        ...        ...        ...        ...  ...,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2644, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2644, 220, 220, 220, 220, 220, 220, 220, 2644, 220, 220, 220, 220, 220, 220, 220, 2644, 220, 220, 220, 220, 220, 220, 220, 2644, 220, 220, 220, 220, 220, 220, 220, 2644, 220, 220, 220, 220, 220, 220, 220, 2644, 220, 220, 220, 220, 220, 220, 220, 2644, 220, 220, 220, 220, 220, 220, 220, 2644, 220, 2644]"
‚ö†Ô∏è SAST Risk (Low): Use of assert for runtime checks can be disabled with optimization flags.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 6818, 329, 19124, 8794, 460, 307, 10058, 351, 23989, 9701, 13]",0.5,272,sast_risk,55,Use of assert for runtime checks can be disabled with optimization flags.,Low,235,"        trainer = auto_filter_kwargs(trainer)(experiment_name=self.exp_name, **trainer_kwargs)","[220, 220, 220, 220, 220, 220, 220, 21997, 796, 8295, 62, 24455, 62, 46265, 22046, 7, 2213, 10613, 5769, 23100, 3681, 62, 3672, 28, 944, 13, 11201, 62, 3672, 11, 12429, 2213, 10613, 62, 46265, 22046, 8]"
üß† ML Signal: RollingGen usage indicates a pattern for time-series data processing.,"[8582, 100, 254, 10373, 26484, 25, 21567, 13746, 8748, 9217, 257, 3912, 329, 640, 12, 25076, 1366, 7587, 13]",0.5,281,ml_signal,61,RollingGen usage indicates a pattern for time-series data processing.,,272,        else:,"[220, 220, 220, 220, 220, 220, 220, 2073, 25]"
‚ö†Ô∏è SAST Risk (Low): Use of assert for runtime checks can be disabled with optimization flags.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 6818, 329, 19124, 8794, 460, 307, 10058, 351, 23989, 9701, 13]",0.5,311,sast_risk,68,Use of assert for runtime checks can be disabled with optimization flags.,Low,281,"        perf_task_tpl[""dataset""][""kwargs""][""segments""] = {","[220, 220, 220, 220, 220, 220, 220, 23035, 62, 35943, 62, 83, 489, 14692, 19608, 292, 316, 1, 7131, 1, 46265, 22046, 1, 7131, 1, 325, 11726, 8973, 796, 1391]"
üß† ML Signal: Use of tqdm indicates progress tracking for potentially long-running operations.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 256, 80, 36020, 9217, 4371, 9646, 329, 6196, 890, 12, 20270, 4560, 13]",0.5,330,ml_signal,75,Use of tqdm indicates progress tracking for potentially long-running operations.,,311,        # treat the training segments as test to create the rolling tasks,"[220, 220, 220, 220, 220, 220, 220, 1303, 2190, 262, 3047, 17894, 355, 1332, 284, 2251, 262, 10708, 8861]"
‚ö†Ô∏è SAST Risk (Low): Loading objects from pickle files can introduce security risks if the source is untrusted.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 12320, 5563, 422, 2298, 293, 3696, 460, 10400, 2324, 7476, 611, 262, 2723, 318, 1418, 81, 8459, 13]",0.5,357,sast_risk,77,Loading objects from pickle files can introduce security risks if the source is untrusted.,Low,330,"        gen_task = task_generator(perf_task_tpl, [rg])","[220, 220, 220, 220, 220, 220, 220, 2429, 62, 35943, 796, 4876, 62, 8612, 1352, 7, 525, 69, 62, 35943, 62, 83, 489, 11, 685, 41345, 12962]"
‚ö†Ô∏è SAST Risk (Low): Loading objects from pickle files can introduce security risks if the source is untrusted.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 12320, 5563, 422, 2298, 293, 3696, 460, 10400, 2324, 7476, 611, 262, 2723, 318, 1418, 81, 8459, 13]",0.5,385,sast_risk,79,Loading objects from pickle files can introduce security risks if the source is untrusted.,Low,357,        recorders = R.list_recorders(experiment_name=self.exp_name),"[220, 220, 220, 220, 220, 220, 220, 1700, 364, 796, 371, 13, 4868, 62, 8344, 6361, 7, 23100, 3681, 62, 3672, 28, 944, 13, 11201, 62, 3672, 8]"
üß† ML Signal: Use of Parallel with n_jobs=-1 indicates parallel processing for performance optimization.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 42945, 351, 299, 62, 43863, 10779, 16, 9217, 10730, 7587, 329, 2854, 23989, 13]",0.5,417,ml_signal,84,Use of Parallel with n_jobs=-1 indicates parallel processing for performance optimization.,,385,"            assert 0 == len(recorders), ""An empty experiment is required for setup `InternalData`""","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 6818, 657, 6624, 18896, 7, 8344, 6361, 828, 366, 2025, 6565, 6306, 318, 2672, 329, 9058, 4600, 37693, 6601, 63, 1]"
‚úÖ Best Practice: Deleting self.dh to free up resources and avoid potential memory leaks.,"[26486, 227, 6705, 19939, 25, 42226, 889, 2116, 13, 34985, 284, 1479, 510, 4133, 290, 3368, 2785, 4088, 17316, 13]",0.5,431,best_practice,87,Deleting self.dh to free up resources and avoid potential memory leaks.,,417,        # 2) extract the similarity matrix,"[220, 220, 220, 220, 220, 220, 220, 1303, 362, 8, 7925, 262, 26789, 17593]"
‚úÖ Best Practice: Consider adding type hints for function parameters and return type,"[26486, 227, 6705, 19939, 25, 12642, 4375, 2099, 20269, 329, 2163, 10007, 290, 1441, 2099]",1.0,458,best_practice,77,Consider adding type hints for function parameters and return type,,431,"        gen_task = task_generator(perf_task_tpl, [rg])","[220, 220, 220, 220, 220, 220, 220, 2429, 62, 35943, 796, 4876, 62, 8612, 1352, 7, 525, 69, 62, 35943, 62, 83, 489, 11, 685, 41345, 12962]"
üß† ML Signal: Use of pandas DataFrame for data manipulation,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 19798, 292, 6060, 19778, 329, 1366, 17512]",0.5,486,ml_signal,79,Use of pandas DataFrame for data manipulation,,458,        recorders = R.list_recorders(experiment_name=self.exp_name),"[220, 220, 220, 220, 220, 220, 220, 1700, 364, 796, 371, 13, 4868, 62, 8344, 6361, 7, 23100, 3681, 62, 3672, 28, 944, 13, 11201, 62, 3672, 8]"
"‚ö†Ô∏è SAST Risk (Low): Assumes 'datetime' column exists in the data, which may lead to KeyError","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 705, 19608, 8079, 6, 5721, 7160, 287, 262, 1366, 11, 543, 743, 1085, 284, 7383, 12331]",0.5,515,sast_risk,81,"Assumes 'datetime' column exists in the data, which may lead to KeyError",Low,486,"            get_module_logger(""Internal Data"").info(""the data has been initialized"")","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 651, 62, 21412, 62, 6404, 1362, 7203, 37693, 6060, 11074, 10951, 7203, 1169, 1366, 468, 587, 23224, 4943]"
üß† ML Signal: Calculation of correlation using Spearman method,"[8582, 100, 254, 10373, 26484, 25, 2199, 14902, 286, 16096, 1262, 27836, 805, 2446]",0.5,530,ml_signal,83,Calculation of correlation using Spearman method,,515,            # train new models,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 4512, 649, 4981]"
‚úÖ Best Practice: Consider handling potential exceptions when accessing DataFrame elements,"[26486, 227, 6705, 19939, 25, 12642, 9041, 2785, 13269, 618, 22534, 6060, 19778, 4847]",0.5,549,best_practice,85,Consider handling potential exceptions when accessing DataFrame elements,,530,            trainer.train(gen_task),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 21997, 13, 27432, 7, 5235, 62, 35943, 8]"
‚úÖ Best Practice: Consider adding a docstring to describe the method's parameters and return value,"[26486, 227, 6705, 19939, 25, 12642, 4375, 257, 2205, 8841, 284, 6901, 262, 2446, 338, 10007, 290, 1441, 1988]",1.0,581,best_practice,84,Consider adding a docstring to describe the method's parameters and return value,,549,"            assert 0 == len(recorders), ""An empty experiment is required for setup `InternalData`""","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 6818, 657, 6624, 18896, 7, 8344, 6361, 828, 366, 2025, 6565, 6306, 318, 2672, 329, 9058, 4600, 37693, 6601, 63, 1]"
‚úÖ Best Practice: Class docstring provides a brief description of the class purpose,"[26486, 227, 6705, 19939, 25, 5016, 2205, 8841, 3769, 257, 4506, 6764, 286, 262, 1398, 4007]",0.5,581,best_practice,86,Class docstring provides a brief description of the class purpose,,581,,[]
‚úÖ Best Practice: Docstring provides a clear description of the method and its parameters.,"[26486, 227, 6705, 19939, 25, 14432, 8841, 3769, 257, 1598, 6764, 286, 262, 2446, 290, 663, 10007, 13]",1.0,595,best_practice,87,Docstring provides a clear description of the method and its parameters.,,581,        # 2) extract the similarity matrix,"[220, 220, 220, 220, 220, 220, 220, 1303, 362, 8, 7925, 262, 26789, 17593]"
"üß† ML Signal: Usage of a method to process meta information, indicating a data transformation step.","[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2446, 284, 1429, 13634, 1321, 11, 12739, 257, 1366, 13389, 2239, 13]",1.0,595,ml_signal,106,"Usage of a method to process meta information, indicating a data transformation step.",,595,,[]
"üß† ML Signal: Conditional logic based on mode, indicating different processing paths.","[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9156, 1912, 319, 4235, 11, 12739, 1180, 7587, 13532, 13]",1.0,634,ml_signal,110,"Conditional logic based on mode, indicating different processing paths.",,595,"        corr = df.loc(axis=0)[:, ""pred""][""label""].droplevel(axis=0, level=-1)","[220, 220, 220, 220, 220, 220, 220, 1162, 81, 796, 47764, 13, 17946, 7, 22704, 28, 15, 38381, 45299, 366, 28764, 1, 7131, 1, 18242, 1, 4083, 22285, 1154, 626, 7, 22704, 28, 15, 11, 1241, 10779, 16, 8]"
"üß† ML Signal: Preparing datasets for training and testing, common in ML workflows.","[8582, 100, 254, 10373, 26484, 25, 19141, 1723, 40522, 329, 3047, 290, 4856, 11, 2219, 287, 10373, 670, 44041, 13]",0.5,634,ml_signal,112,"Preparing datasets for training and testing, common in ML workflows.",,634,,[]
‚ö†Ô∏è SAST Risk (Low): Dropping NaN values without handling could lead to data loss.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 21045, 2105, 11013, 45, 3815, 1231, 9041, 714, 1085, 284, 1366, 2994, 13]",0.5,645,sast_risk,115,Dropping NaN values without handling could lead to data loss.,Low,634,        # TODO:,"[220, 220, 220, 220, 220, 220, 220, 1303, 16926, 46, 25]"
‚ö†Ô∏è SAST Risk (Low): Raising a ValueError without logging or handling could disrupt program flow.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 7567, 1710, 257, 11052, 12331, 1231, 18931, 393, 9041, 714, 10114, 1430, 5202, 13]",0.5,645,sast_risk,119,Raising a ValueError without logging or handling could disrupt program flow.,Low,645,,[]
‚ö†Ô∏è SAST Risk (Low): Assertion without exception handling could cause abrupt termination.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 861, 295, 1231, 6631, 9041, 714, 2728, 19363, 19883, 13]",0.5,653,sast_risk,121,Assertion without exception handling could cause abrupt termination.,Low,645,class MetaTaskDS(MetaTask):,"[4871, 30277, 25714, 5258, 7, 48526, 25714, 2599]"
"üß† ML Signal: Creating a zero matrix for sample-time relationship, indicating data preparation.","[8582, 100, 254, 10373, 26484, 25, 30481, 257, 6632, 17593, 329, 6291, 12, 2435, 2776, 11, 12739, 1366, 11824, 13]",1.0,653,ml_signal,123,"Creating a zero matrix for sample-time relationship, indicating data preparation.",,653,,[]
"üß† ML Signal: Iterating over columns to assign values, common in data processing.","[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 15180, 284, 8333, 3815, 11, 2219, 287, 1366, 7587, 13]",0.5,653,ml_signal,123,"Iterating over columns to assign values, common in data processing.",,653,,[]
"üß† ML Signal: Updating processed input with training and testing data, a key ML step.","[8582, 100, 254, 10373, 26484, 25, 3205, 38734, 13686, 5128, 351, 3047, 290, 4856, 1366, 11, 257, 1994, 10373, 2239, 13]",0.5,687,ml_signal,133,"Updating processed input with training and testing data, a key ML step.",,653,"                   [1., 0., 0., ..., 0., 0., 0.],","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 685, 16, 1539, 657, 1539, 657, 1539, 2644, 11, 657, 1539, 657, 1539, 657, 13, 4357]"
"üß† ML Signal: Converting data to tensor, indicating preparation for ML model input.","[8582, 100, 254, 10373, 26484, 25, 35602, 889, 1366, 284, 11192, 273, 11, 12739, 11824, 329, 10373, 2746, 5128, 13]",1.0,715,ml_signal,143,"Converting data to tensor, indicating preparation for ML model input.",,687,            please refer to the docs of _prepare_meta_ipt for detailed explanation.,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 3387, 3522, 284, 262, 34165, 286, 4808, 46012, 533, 62, 28961, 62, 10257, 329, 6496, 7468, 13]"
üß† ML Signal: Method for normalizing and filling missing data,"[8582, 100, 254, 10373, 26484, 25, 11789, 329, 3487, 2890, 290, 12591, 4814, 1366]",0.5,735,ml_signal,135,Method for normalizing and filling missing data,,715,"                   ...,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2644, 11]"
üß† ML Signal: Conditional logic based on fill_method,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9156, 1912, 319, 6070, 62, 24396]",0.5,769,ml_signal,138,Conditional logic based on fill_method,,735,"                   [0., 0., 0., ..., 0., 0., 1.]])","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 685, 15, 1539, 657, 1539, 657, 1539, 2644, 11, 657, 1539, 657, 1539, 352, 8183, 12962]"
üß† ML Signal: Handling missing data with column-wise operations,"[8582, 100, 254, 10373, 26484, 25, 49500, 4814, 1366, 351, 5721, 12, 3083, 4560]",1.0,797,ml_signal,143,Handling missing data with column-wise operations,,769,            please refer to the docs of _prepare_meta_ipt for detailed explanation.,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 3387, 3522, 284, 262, 34165, 286, 4808, 46012, 533, 62, 28961, 62, 10257, 329, 6496, 7468, 13]"
‚ö†Ô∏è SAST Risk (Low): Potential logging of sensitive information,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 18931, 286, 8564, 1321]",1.0,824,sast_risk,149,Potential logging of sensitive information,Low,797,"        self.processed_meta_input = {""time_perf"": time_perf}","[220, 220, 220, 220, 220, 220, 220, 2116, 13, 14681, 276, 62, 28961, 62, 15414, 796, 19779, 2435, 62, 525, 69, 1298, 640, 62, 525, 69, 92]"
‚ö†Ô∏è SAST Risk (Low): Use of NotImplementedError for unsupported operations,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 1892, 3546, 1154, 12061, 12331, 329, 24222, 4560]",1.0,850,sast_risk,158,Use of NotImplementedError for unsupported operations,Low,824,            d_train = d_train.dropna(axis=0),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 288, 62, 27432, 796, 288, 62, 27432, 13, 14781, 2616, 7, 22704, 28, 15, 8]"
‚úÖ Best Practice: Ensure all NaN values are filled before returning,"[26486, 227, 6705, 19939, 25, 48987, 477, 11013, 45, 3815, 389, 5901, 878, 8024]",0.5,885,best_practice,160,Ensure all NaN values are filled before returning,,850,            if prev_size == 0 or d_test.shape[0] / prev_size <= 0.1:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 8654, 62, 7857, 6624, 657, 393, 288, 62, 9288, 13, 43358, 58, 15, 60, 1220, 8654, 62, 7857, 19841, 657, 13, 16, 25]"
‚úÖ Best Practice: Method should have a docstring explaining its purpose,"[26486, 227, 6705, 19939, 25, 11789, 815, 423, 257, 2205, 8841, 11170, 663, 4007]",1.0,908,best_practice,157,Method should have a docstring explaining its purpose,,885,            prev_size = d_test.shape[0],"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 8654, 62, 7857, 796, 288, 62, 9288, 13, 43358, 58, 15, 60]"
‚úÖ Best Practice: Consider adding error handling if processed_meta_input might not be set,"[26486, 227, 6705, 19939, 25, 12642, 4375, 4049, 9041, 611, 13686, 62, 28961, 62, 15414, 1244, 407, 307, 900]",1.0,934,best_practice,159,Consider adding error handling if processed_meta_input might not be set,,908,            d_test = d_test.dropna(axis=0),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 288, 62, 9288, 796, 288, 62, 9288, 13, 14781, 2616, 7, 22704, 28, 15, 8]"
"üß† ML Signal: Inheritance from a class, indicating use of object-oriented programming","[8582, 100, 254, 10373, 26484, 25, 47025, 42942, 422, 257, 1398, 11, 12739, 779, 286, 2134, 12, 17107, 8300]",0.5,960,ml_signal,159,"Inheritance from a class, indicating use of object-oriented programming",,934,            d_test = d_test.dropna(axis=0),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 288, 62, 9288, 796, 288, 62, 9288, 13, 14781, 2616, 7, 22704, 28, 15, 8]"
"üß† ML Signal: Usage of tqdm for progress tracking, which can be a signal for user interaction patterns.","[8582, 100, 254, 10373, 26484, 25, 29566, 286, 256, 80, 36020, 329, 4371, 9646, 11, 543, 460, 307, 257, 6737, 329, 2836, 10375, 7572, 13]",1.0,973,ml_signal,237,"Usage of tqdm for progress tracking, which can be a signal for user interaction patterns.",,960,class MetaDatasetDS(MetaTaskDataset):,"[4871, 30277, 27354, 292, 316, 5258, 7, 48526, 25714, 27354, 292, 316, 2599]"
"üß† ML Signal: Accessing internal data for processing, indicating a pattern of data manipulation","[8582, 100, 254, 10373, 26484, 25, 8798, 278, 5387, 1366, 329, 7587, 11, 12739, 257, 3912, 286, 1366, 17512]",1.0,1001,ml_signal,267,"Accessing internal data for processing, indicating a pattern of data manipulation",,973,            the total length of test periods will be `step + rolling_ext_days`,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 262, 2472, 4129, 286, 1332, 9574, 481, 307, 4600, 9662, 1343, 10708, 62, 2302, 62, 12545, 63]"
"üß† ML Signal: Extracting specific segments from a task, indicating a pattern of task-based data processing","[8582, 100, 254, 10373, 26484, 25, 29677, 278, 2176, 17894, 422, 257, 4876, 11, 12739, 257, 3912, 286, 4876, 12, 3106, 1366, 7587]",1.0,1019,ml_signal,269,"Extracting specific segments from a task, indicating a pattern of task-based data processing",,1001,"        exp_name : Union[str, InternalData]","[220, 220, 220, 220, 220, 220, 220, 1033, 62, 3672, 1058, 4479, 58, 2536, 11, 18628, 6601, 60]"
‚úÖ Best Practice: Using a generator expression with max for efficient computation,"[26486, 227, 6705, 19939, 25, 8554, 257, 17301, 5408, 351, 3509, 329, 6942, 29964]",1.0,1044,best_practice,271,Using a generator expression with max for efficient computation,,1019,            - str: the name of the experiment to store the performance of data,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 532, 965, 25, 262, 1438, 286, 262, 6306, 284, 3650, 262, 2854, 286, 1366]"
"üß† ML Signal: Slicing data based on computed indices, indicating a pattern of data preparation","[8582, 100, 254, 10373, 26484, 25, 311, 677, 278, 1366, 1912, 319, 29231, 36525, 11, 12739, 257, 3912, 286, 1366, 11824]",1.0,1063,ml_signal,272,"Slicing data based on computed indices, indicating a pattern of data preparation",,1044,            - InternalData: a prepared internal data,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 532, 18628, 6601, 25, 257, 5597, 5387, 1366]"
‚ö†Ô∏è SAST Risk (Low): Potential misuse of get_date_by_shift if not properly validated,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 29169, 286, 651, 62, 4475, 62, 1525, 62, 30846, 611, 407, 6105, 31031]",1.0,1087,sast_risk,278,Potential misuse of get_date_by_shift if not properly validated,Low,1063,                the float represents the percentage of data for training,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 262, 12178, 6870, 262, 5873, 286, 1366, 329, 3047]"
üß† ML Signal: Usage of mask function to filter data based on conditions,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 9335, 2163, 284, 8106, 1366, 1912, 319, 3403]",0.5,1127,ml_signal,280,Usage of mask function to filter data based on conditions,,1087,                it will try its best to put its data in training and ensure that the date `segments` is in the test set,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 340, 481, 1949, 663, 1266, 284, 1234, 663, 1366, 287, 3047, 290, 4155, 326, 262, 3128, 4600, 325, 11726, 63, 318, 287, 262, 1332, 900]"
üß† ML Signal: Application of a function across a DataFrame,"[8582, 100, 254, 10373, 26484, 25, 15678, 286, 257, 2163, 1973, 257, 6060, 19778]",0.5,1148,ml_signal,282,Application of a function across a DataFrame,,1127,            length of historical steps for the meta infomation,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4129, 286, 6754, 4831, 329, 262, 13634, 1167, 296, 341]"
üß† ML Signal: Calculation of total length based on step and hist_step_n,"[8582, 100, 254, 10373, 26484, 25, 2199, 14902, 286, 2472, 4129, 1912, 319, 2239, 290, 1554, 62, 9662, 62, 77]",0.5,1167,ml_signal,283,Calculation of total length based on step and hist_step_n,,1148,            Number of steps of the data similarity information,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 7913, 286, 4831, 286, 262, 1366, 26789, 1321]"
‚úÖ Best Practice: Check if DataFrame has enough rows before slicing,"[26486, 227, 6705, 19939, 25, 6822, 611, 6060, 19778, 468, 1576, 15274, 878, 49289]",1.0,1175,best_practice,286,Check if DataFrame has enough rows before slicing,,1167,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚ö†Ô∏è SAST Risk (Low): Raising a generic ValueError without additional context,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 7567, 1710, 257, 14276, 11052, 12331, 1231, 3224, 4732]",1.0,1184,sast_risk,290,Raising a generic ValueError without additional context,Low,1175,        else:,"[220, 220, 220, 220, 220, 220, 220, 2073, 25]"
üß† ML Signal: Use of isinstance to handle different data types,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 318, 39098, 284, 5412, 1180, 1366, 3858]",1.0,1203,ml_signal,287,Use of isinstance to handle different data types,,1184,        super().__init__(segments=segments),"[220, 220, 220, 220, 220, 220, 220, 2208, 22446, 834, 15003, 834, 7, 325, 11726, 28, 325, 11726, 8]"
üß† ML Signal: Dynamic calculation of training task count based on a proportion,"[8582, 100, 254, 10373, 26484, 25, 26977, 17952, 286, 3047, 4876, 954, 1912, 319, 257, 9823]",1.0,1223,ml_signal,289,Dynamic calculation of training task count based on a proportion,,1203,            self.internal_data = exp_name,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 32538, 62, 7890, 796, 1033, 62, 3672]"
‚úÖ Best Practice: Logging the first train meta task for traceability,"[26486, 227, 6705, 19939, 25, 5972, 2667, 262, 717, 4512, 13634, 4876, 329, 12854, 1799]",0.5,1266,best_practice,293,Logging the first train meta task for traceability,,1223,"        self.task_tpl = deepcopy(task_tpl)  # FIXME: if the handler is shared, how to avoid the explosion of the memroy.","[220, 220, 220, 220, 220, 220, 220, 2116, 13, 35943, 62, 83, 489, 796, 2769, 30073, 7, 35943, 62, 83, 489, 8, 220, 1303, 44855, 11682, 25, 611, 262, 21360, 318, 4888, 11, 703, 284, 3368, 262, 11278, 286, 262, 1066, 3287, 13]"
‚úÖ Best Practice: Logging the first test meta task for traceability,"[26486, 227, 6705, 19939, 25, 5972, 2667, 262, 717, 1332, 13634, 4876, 329, 12854, 1799]",0.5,1284,best_practice,298,Logging the first test meta task for traceability,,1266,"        if isinstance(task_tpl, dict):","[220, 220, 220, 220, 220, 220, 220, 611, 318, 39098, 7, 35943, 62, 83, 489, 11, 8633, 2599]"
‚ö†Ô∏è SAST Risk (Low): Use of NotImplementedError for unsupported segment types,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 1892, 3546, 1154, 12061, 12331, 329, 24222, 10618, 3858]",0.5,1306,sast_risk,302,Use of NotImplementedError for unsupported segment types,Low,1284,            task_iter = rg(task_tpl),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4876, 62, 2676, 796, 48670, 7, 35943, 62, 83, 489, 8]"
üß† ML Signal: Use of isinstance to handle different data types,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 318, 39098, 284, 5412, 1180, 1366, 3858]",1.0,1333,ml_signal,304,Use of isinstance to handle different data types,,1306,                self.ta = TimeAdjuster(future=True),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 8326, 796, 3862, 39668, 263, 7, 37443, 28, 17821, 8]"
üß† ML Signal: Conditional logic based on timestamp comparison,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9156, 1912, 319, 41033, 7208]",1.0,1360,ml_signal,309,Conditional logic based on timestamp comparison,,1333,            if task_mode == MetaTask.PROC_MODE_FULL:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 4876, 62, 14171, 6624, 30277, 25714, 13, 4805, 4503, 62, 49058, 62, 37, 9994, 25]"
‚úÖ Best Practice: Logging the first train meta task for traceability,"[26486, 227, 6705, 19939, 25, 5972, 2667, 262, 717, 4512, 13634, 4876, 329, 12854, 1799]",0.5,1382,best_practice,314,Logging the first train meta task for traceability,,1360,"            assert isinstance(task_tpl, list)","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 6818, 318, 39098, 7, 35943, 62, 83, 489, 11, 1351, 8]"
‚úÖ Best Practice: Logging the first test meta task for traceability,"[26486, 227, 6705, 19939, 25, 5972, 2667, 262, 717, 1332, 13634, 4876, 329, 12854, 1799]",0.5,1382,best_practice,316,Logging the first test meta task for traceability,,1382,,[]
‚ö†Ô∏è SAST Risk (Low): Use of NotImplementedError for unsupported segment types,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 1892, 3546, 1154, 12061, 12331, 329, 24222, 10618, 3858]",0.5,1382,sast_risk,316,Use of NotImplementedError for unsupported segment types,Low,1382,,[]
‚ö†Ô∏è SAST Risk (Low): Use of NotImplementedError for unsupported segment types,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 1892, 3546, 1154, 12061, 12331, 329, 24222, 10618, 3858]",0.5,1382,sast_risk,316,Use of NotImplementedError for unsupported segment types,Low,1382,,[]
