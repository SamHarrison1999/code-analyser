[
  {
    "line": 5,
    "text": "from copy import deepcopy",
    "annotation": "\u2705 Best Practice: Use of typing module for type hinting improves code readability and maintainability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      4866,
      1330,
      2769,
      30073
    ],
    "start_token": 0,
    "end_token": 5,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      19720,
      8265,
      329,
      2099,
      9254,
      278,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Use of typing module for type hinting improves code readability and maintainability."
  },
  {
    "line": 13,
    "text": "from qlib.model.trainer import TrainerR",
    "annotation": "\ud83e\udde0 ML Signal: Logging is often used in ML pipelines for tracking experiments and debugging.",
    "confidence": 0.5,
    "tokens": [
      6738,
      10662,
      8019,
      13,
      19849,
      13,
      2213,
      10613,
      1330,
      31924,
      49
    ],
    "start_token": 5,
    "end_token": 16,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      318,
      1690,
      973,
      287,
      10373,
      31108,
      329,
      9646,
      10256,
      290,
      28769,
      13
    ],
    "label": "ml_signal",
    "reason": "Logging is often used in ML pipelines for tracking experiments and debugging."
  },
  {
    "line": 15,
    "text": "from qlib.utils import auto_filter_kwargs, get_date_by_shift, init_instance_by_config",
    "annotation": "\u2705 Best Practice: Use of utility functions can improve code reusability and reduce redundancy.",
    "confidence": 0.5,
    "tokens": [
      6738,
      10662,
      8019,
      13,
      26791,
      1330,
      8295,
      62,
      24455,
      62,
      46265,
      22046,
      11,
      651,
      62,
      4475,
      62,
      1525,
      62,
      30846,
      11,
      2315,
      62,
      39098,
      62,
      1525,
      62,
      11250
    ],
    "start_token": 16,
    "end_token": 44,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      10361,
      5499,
      460,
      2987,
      2438,
      302,
      385,
      1799,
      290,
      4646,
      49052,
      13
    ],
    "label": "best_practice",
    "reason": "Use of utility functions can improve code reusability and reduce redundancy."
  },
  {
    "line": 21,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of tqdm for progress tracking is common in data processing and ML model training.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 44,
    "end_token": 44,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      256,
      80,
      36020,
      329,
      4371,
      9646,
      318,
      2219,
      287,
      1366,
      7587,
      290,
      10373,
      2746,
      3047,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of tqdm for progress tracking is common in data processing and ML model training."
  },
  {
    "line": 21,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of type annotations for function parameters improves code readability and maintainability.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 44,
    "end_token": 44,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      2163,
      10007,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Use of type annotations for function parameters improves code readability and maintainability."
  },
  {
    "line": 25,
    "text": "        self.task_tpl = task_tpl",
    "annotation": "\u2705 Best Practice: Use of docstring to explain the function's purpose and provide examples.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      35943,
      62,
      83,
      489,
      796,
      4876,
      62,
      83,
      489
    ],
    "start_token": 44,
    "end_token": 62,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2205,
      8841,
      284,
      4727,
      262,
      2163,
      338,
      4007,
      290,
      2148,
      6096,
      13
    ],
    "label": "best_practice",
    "reason": "Use of docstring to explain the function's purpose and provide examples."
  },
  {
    "line": 25,
    "text": "        self.task_tpl = task_tpl",
    "annotation": "\u2705 Best Practice: Default mutable arguments should be avoided to prevent unexpected behavior.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      35943,
      62,
      83,
      489,
      796,
      4876,
      62,
      83,
      489
    ],
    "start_token": 62,
    "end_token": 80,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      15161,
      4517,
      540,
      7159,
      815,
      307,
      13941,
      284,
      2948,
      10059,
      4069,
      13
    ],
    "label": "best_practice",
    "reason": "Default mutable arguments should be avoided to prevent unexpected behavior."
  },
  {
    "line": 44,
    "text": "            2018-01-05   0.030320  -0.037209  -0.044536  -0.047267  -0.081888   0.045648   0.059947   0.047652  ...",
    "annotation": "\u2705 Best Practice: Use of deepcopy to avoid modifying the original task_tpl.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2864,
      12,
      486,
      12,
      2713,
      220,
      220,
      657,
      13,
      39101,
      19504,
      220,
      532,
      15,
      13,
      15,
      2718,
      22567,
      220,
      532,
      15,
      13,
      3023,
      2231,
      2623,
      220,
      532,
      15,
      13,
      48000,
      25674,
      220,
      532,
      15,
      13,
      2919,
      1507,
      3459,
      220,
      220,
      657,
      13,
      40350,
      34287,
      220,
      220,
      657,
      13,
      2713,
      2079,
      2857,
      220,
      220,
      657,
      13,
      48000,
      43193,
      220,
      2644
    ],
    "start_token": 80,
    "end_token": 150,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2769,
      30073,
      284,
      3368,
      30620,
      262,
      2656,
      4876,
      62,
      83,
      489,
      13
    ],
    "label": "best_practice",
    "reason": "Use of deepcopy to avoid modifying the original task_tpl."
  },
  {
    "line": 46,
    "text": "            ...               ...        ...        ...        ...        ...        ...        ...        ...  ...",
    "annotation": "\ud83e\udde0 ML Signal: Use of auto_filter_kwargs suggests dynamic function argument handling.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2644,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2644,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2644,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2644,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2644,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2644,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2644,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2644,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2644,
      220,
      2644
    ],
    "start_token": 150,
    "end_token": 235,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      8295,
      62,
      24455,
      62,
      46265,
      22046,
      5644,
      8925,
      2163,
      4578,
      9041,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of auto_filter_kwargs suggests dynamic function argument handling."
  },
  {
    "line": 55,
    "text": "        trainer = auto_filter_kwargs(trainer)(experiment_name=self.exp_name, **trainer_kwargs)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of assert for runtime checks can be disabled with optimization flags.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      21997,
      796,
      8295,
      62,
      24455,
      62,
      46265,
      22046,
      7,
      2213,
      10613,
      5769,
      23100,
      3681,
      62,
      3672,
      28,
      944,
      13,
      11201,
      62,
      3672,
      11,
      12429,
      2213,
      10613,
      62,
      46265,
      22046,
      8
    ],
    "start_token": 235,
    "end_token": 272,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      6818,
      329,
      19124,
      8794,
      460,
      307,
      10058,
      351,
      23989,
      9701,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of assert for runtime checks can be disabled with optimization flags."
  },
  {
    "line": 61,
    "text": "        else:",
    "annotation": "\ud83e\udde0 ML Signal: RollingGen usage indicates a pattern for time-series data processing.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 272,
    "end_token": 281,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      21567,
      13746,
      8748,
      9217,
      257,
      3912,
      329,
      640,
      12,
      25076,
      1366,
      7587,
      13
    ],
    "label": "ml_signal",
    "reason": "RollingGen usage indicates a pattern for time-series data processing."
  },
  {
    "line": 68,
    "text": "        perf_task_tpl[\"dataset\"][\"kwargs\"][\"segments\"] = {",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of assert for runtime checks can be disabled with optimization flags.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      23035,
      62,
      35943,
      62,
      83,
      489,
      14692,
      19608,
      292,
      316,
      1,
      7131,
      1,
      46265,
      22046,
      1,
      7131,
      1,
      325,
      11726,
      8973,
      796,
      1391
    ],
    "start_token": 281,
    "end_token": 311,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      6818,
      329,
      19124,
      8794,
      460,
      307,
      10058,
      351,
      23989,
      9701,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of assert for runtime checks can be disabled with optimization flags."
  },
  {
    "line": 75,
    "text": "        # treat the training segments as test to create the rolling tasks",
    "annotation": "\ud83e\udde0 ML Signal: Use of tqdm indicates progress tracking for potentially long-running operations.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      2190,
      262,
      3047,
      17894,
      355,
      1332,
      284,
      2251,
      262,
      10708,
      8861
    ],
    "start_token": 311,
    "end_token": 330,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      256,
      80,
      36020,
      9217,
      4371,
      9646,
      329,
      6196,
      890,
      12,
      20270,
      4560,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of tqdm indicates progress tracking for potentially long-running operations."
  },
  {
    "line": 77,
    "text": "        gen_task = task_generator(perf_task_tpl, [rg])",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Loading objects from pickle files can introduce security risks if the source is untrusted.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2429,
      62,
      35943,
      796,
      4876,
      62,
      8612,
      1352,
      7,
      525,
      69,
      62,
      35943,
      62,
      83,
      489,
      11,
      685,
      41345,
      12962
    ],
    "start_token": 330,
    "end_token": 357,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      12320,
      5563,
      422,
      2298,
      293,
      3696,
      460,
      10400,
      2324,
      7476,
      611,
      262,
      2723,
      318,
      1418,
      81,
      8459,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Loading objects from pickle files can introduce security risks if the source is untrusted."
  },
  {
    "line": 79,
    "text": "        recorders = R.list_recorders(experiment_name=self.exp_name)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Loading objects from pickle files can introduce security risks if the source is untrusted.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1700,
      364,
      796,
      371,
      13,
      4868,
      62,
      8344,
      6361,
      7,
      23100,
      3681,
      62,
      3672,
      28,
      944,
      13,
      11201,
      62,
      3672,
      8
    ],
    "start_token": 357,
    "end_token": 385,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      12320,
      5563,
      422,
      2298,
      293,
      3696,
      460,
      10400,
      2324,
      7476,
      611,
      262,
      2723,
      318,
      1418,
      81,
      8459,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Loading objects from pickle files can introduce security risks if the source is untrusted."
  },
  {
    "line": 84,
    "text": "            assert 0 == len(recorders), \"An empty experiment is required for setup `InternalData`\"",
    "annotation": "\ud83e\udde0 ML Signal: Use of Parallel with n_jobs=-1 indicates parallel processing for performance optimization.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6818,
      657,
      6624,
      18896,
      7,
      8344,
      6361,
      828,
      366,
      2025,
      6565,
      6306,
      318,
      2672,
      329,
      9058,
      4600,
      37693,
      6601,
      63,
      1
    ],
    "start_token": 385,
    "end_token": 417,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      42945,
      351,
      299,
      62,
      43863,
      10779,
      16,
      9217,
      10730,
      7587,
      329,
      2854,
      23989,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of Parallel with n_jobs=-1 indicates parallel processing for performance optimization."
  },
  {
    "line": 87,
    "text": "        # 2) extract the similarity matrix",
    "annotation": "\u2705 Best Practice: Deleting self.dh to free up resources and avoid potential memory leaks.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      362,
      8,
      7925,
      262,
      26789,
      17593
    ],
    "start_token": 417,
    "end_token": 431,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      42226,
      889,
      2116,
      13,
      34985,
      284,
      1479,
      510,
      4133,
      290,
      3368,
      2785,
      4088,
      17316,
      13
    ],
    "label": "best_practice",
    "reason": "Deleting self.dh to free up resources and avoid potential memory leaks."
  },
  {
    "line": 77,
    "text": "        gen_task = task_generator(perf_task_tpl, [rg])",
    "annotation": "\u2705 Best Practice: Consider adding type hints for function parameters and return type",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2429,
      62,
      35943,
      796,
      4876,
      62,
      8612,
      1352,
      7,
      525,
      69,
      62,
      35943,
      62,
      83,
      489,
      11,
      685,
      41345,
      12962
    ],
    "start_token": 431,
    "end_token": 458,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      4375,
      2099,
      20269,
      329,
      2163,
      10007,
      290,
      1441,
      2099
    ],
    "label": "best_practice",
    "reason": "Consider adding type hints for function parameters and return type"
  },
  {
    "line": 79,
    "text": "        recorders = R.list_recorders(experiment_name=self.exp_name)",
    "annotation": "\ud83e\udde0 ML Signal: Use of pandas DataFrame for data manipulation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1700,
      364,
      796,
      371,
      13,
      4868,
      62,
      8344,
      6361,
      7,
      23100,
      3681,
      62,
      3672,
      28,
      944,
      13,
      11201,
      62,
      3672,
      8
    ],
    "start_token": 458,
    "end_token": 486,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      19798,
      292,
      6060,
      19778,
      329,
      1366,
      17512
    ],
    "label": "ml_signal",
    "reason": "Use of pandas DataFrame for data manipulation"
  },
  {
    "line": 81,
    "text": "            get_module_logger(\"Internal Data\").info(\"the data has been initialized\")",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Assumes 'datetime' column exists in the data, which may lead to KeyError",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      651,
      62,
      21412,
      62,
      6404,
      1362,
      7203,
      37693,
      6060,
      11074,
      10951,
      7203,
      1169,
      1366,
      468,
      587,
      23224,
      4943
    ],
    "start_token": 486,
    "end_token": 515,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      2195,
      8139,
      705,
      19608,
      8079,
      6,
      5721,
      7160,
      287,
      262,
      1366,
      11,
      543,
      743,
      1085,
      284,
      7383,
      12331
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Assumes 'datetime' column exists in the data, which may lead to KeyError"
  },
  {
    "line": 83,
    "text": "            # train new models",
    "annotation": "\ud83e\udde0 ML Signal: Calculation of correlation using Spearman method",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      4512,
      649,
      4981
    ],
    "start_token": 515,
    "end_token": 530,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2199,
      14902,
      286,
      16096,
      1262,
      27836,
      805,
      2446
    ],
    "label": "ml_signal",
    "reason": "Calculation of correlation using Spearman method"
  },
  {
    "line": 85,
    "text": "            trainer.train(gen_task)",
    "annotation": "\u2705 Best Practice: Consider handling potential exceptions when accessing DataFrame elements",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      21997,
      13,
      27432,
      7,
      5235,
      62,
      35943,
      8
    ],
    "start_token": 530,
    "end_token": 549,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      9041,
      2785,
      13269,
      618,
      22534,
      6060,
      19778,
      4847
    ],
    "label": "best_practice",
    "reason": "Consider handling potential exceptions when accessing DataFrame elements"
  },
  {
    "line": 84,
    "text": "            assert 0 == len(recorders), \"An empty experiment is required for setup `InternalData`\"",
    "annotation": "\u2705 Best Practice: Consider adding a docstring to describe the method's parameters and return value",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6818,
      657,
      6624,
      18896,
      7,
      8344,
      6361,
      828,
      366,
      2025,
      6565,
      6306,
      318,
      2672,
      329,
      9058,
      4600,
      37693,
      6601,
      63,
      1
    ],
    "start_token": 549,
    "end_token": 581,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      4375,
      257,
      2205,
      8841,
      284,
      6901,
      262,
      2446,
      338,
      10007,
      290,
      1441,
      1988
    ],
    "label": "best_practice",
    "reason": "Consider adding a docstring to describe the method's parameters and return value"
  },
  {
    "line": 86,
    "text": "",
    "annotation": "\u2705 Best Practice: Class docstring provides a brief description of the class purpose",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 581,
    "end_token": 581,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      2205,
      8841,
      3769,
      257,
      4506,
      6764,
      286,
      262,
      1398,
      4007
    ],
    "label": "best_practice",
    "reason": "Class docstring provides a brief description of the class purpose"
  },
  {
    "line": 87,
    "text": "        # 2) extract the similarity matrix",
    "annotation": "\u2705 Best Practice: Docstring provides a clear description of the method and its parameters.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      362,
      8,
      7925,
      262,
      26789,
      17593
    ],
    "start_token": 581,
    "end_token": 595,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      14432,
      8841,
      3769,
      257,
      1598,
      6764,
      286,
      262,
      2446,
      290,
      663,
      10007,
      13
    ],
    "label": "best_practice",
    "reason": "Docstring provides a clear description of the method and its parameters."
  },
  {
    "line": 106,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a method to process meta information, indicating a data transformation step.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 595,
    "end_token": 595,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      2446,
      284,
      1429,
      13634,
      1321,
      11,
      12739,
      257,
      1366,
      13389,
      2239,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of a method to process meta information, indicating a data transformation step."
  },
  {
    "line": 110,
    "text": "        corr = df.loc(axis=0)[:, \"pred\"][\"label\"].droplevel(axis=0, level=-1)",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on mode, indicating different processing paths.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1162,
      81,
      796,
      47764,
      13,
      17946,
      7,
      22704,
      28,
      15,
      38381,
      45299,
      366,
      28764,
      1,
      7131,
      1,
      18242,
      1,
      4083,
      22285,
      1154,
      626,
      7,
      22704,
      28,
      15,
      11,
      1241,
      10779,
      16,
      8
    ],
    "start_token": 595,
    "end_token": 634,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      4235,
      11,
      12739,
      1180,
      7587,
      13532,
      13
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on mode, indicating different processing paths."
  },
  {
    "line": 112,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Preparing datasets for training and testing, common in ML workflows.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 634,
    "end_token": 634,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      19141,
      1723,
      40522,
      329,
      3047,
      290,
      4856,
      11,
      2219,
      287,
      10373,
      670,
      44041,
      13
    ],
    "label": "ml_signal",
    "reason": "Preparing datasets for training and testing, common in ML workflows."
  },
  {
    "line": 115,
    "text": "        # TODO:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Dropping NaN values without handling could lead to data loss.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      16926,
      46,
      25
    ],
    "start_token": 634,
    "end_token": 645,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      21045,
      2105,
      11013,
      45,
      3815,
      1231,
      9041,
      714,
      1085,
      284,
      1366,
      2994,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Dropping NaN values without handling could lead to data loss."
  },
  {
    "line": 119,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Raising a ValueError without logging or handling could disrupt program flow.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 645,
    "end_token": 645,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      7567,
      1710,
      257,
      11052,
      12331,
      1231,
      18931,
      393,
      9041,
      714,
      10114,
      1430,
      5202,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Raising a ValueError without logging or handling could disrupt program flow."
  },
  {
    "line": 121,
    "text": "class MetaTaskDS(MetaTask):",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Assertion without exception handling could cause abrupt termination.",
    "confidence": 0.5,
    "tokens": [
      4871,
      30277,
      25714,
      5258,
      7,
      48526,
      25714,
      2599
    ],
    "start_token": 645,
    "end_token": 653,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      2195,
      861,
      295,
      1231,
      6631,
      9041,
      714,
      2728,
      19363,
      19883,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Assertion without exception handling could cause abrupt termination."
  },
  {
    "line": 123,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Creating a zero matrix for sample-time relationship, indicating data preparation.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 653,
    "end_token": 653,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      30481,
      257,
      6632,
      17593,
      329,
      6291,
      12,
      2435,
      2776,
      11,
      12739,
      1366,
      11824,
      13
    ],
    "label": "ml_signal",
    "reason": "Creating a zero matrix for sample-time relationship, indicating data preparation."
  },
  {
    "line": 123,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over columns to assign values, common in data processing.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 653,
    "end_token": 653,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      15180,
      284,
      8333,
      3815,
      11,
      2219,
      287,
      1366,
      7587,
      13
    ],
    "label": "ml_signal",
    "reason": "Iterating over columns to assign values, common in data processing."
  },
  {
    "line": 133,
    "text": "                   [1., 0., 0., ..., 0., 0., 0.],",
    "annotation": "\ud83e\udde0 ML Signal: Updating processed input with training and testing data, a key ML step.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      685,
      16,
      1539,
      657,
      1539,
      657,
      1539,
      2644,
      11,
      657,
      1539,
      657,
      1539,
      657,
      13,
      4357
    ],
    "start_token": 653,
    "end_token": 687,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3205,
      38734,
      13686,
      5128,
      351,
      3047,
      290,
      4856,
      1366,
      11,
      257,
      1994,
      10373,
      2239,
      13
    ],
    "label": "ml_signal",
    "reason": "Updating processed input with training and testing data, a key ML step."
  },
  {
    "line": 143,
    "text": "            please refer to the docs of _prepare_meta_ipt for detailed explanation.",
    "annotation": "\ud83e\udde0 ML Signal: Converting data to tensor, indicating preparation for ML model input.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3387,
      3522,
      284,
      262,
      34165,
      286,
      4808,
      46012,
      533,
      62,
      28961,
      62,
      10257,
      329,
      6496,
      7468,
      13
    ],
    "start_token": 687,
    "end_token": 715,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      35602,
      889,
      1366,
      284,
      11192,
      273,
      11,
      12739,
      11824,
      329,
      10373,
      2746,
      5128,
      13
    ],
    "label": "ml_signal",
    "reason": "Converting data to tensor, indicating preparation for ML model input."
  },
  {
    "line": 135,
    "text": "                   ...,",
    "annotation": "\ud83e\udde0 ML Signal: Method for normalizing and filling missing data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2644,
      11
    ],
    "start_token": 715,
    "end_token": 735,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      329,
      3487,
      2890,
      290,
      12591,
      4814,
      1366
    ],
    "label": "ml_signal",
    "reason": "Method for normalizing and filling missing data"
  },
  {
    "line": 138,
    "text": "                   [0., 0., 0., ..., 0., 0., 1.]])",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on fill_method",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      685,
      15,
      1539,
      657,
      1539,
      657,
      1539,
      2644,
      11,
      657,
      1539,
      657,
      1539,
      352,
      8183,
      12962
    ],
    "start_token": 735,
    "end_token": 769,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      6070,
      62,
      24396
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on fill_method"
  },
  {
    "line": 143,
    "text": "            please refer to the docs of _prepare_meta_ipt for detailed explanation.",
    "annotation": "\ud83e\udde0 ML Signal: Handling missing data with column-wise operations",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3387,
      3522,
      284,
      262,
      34165,
      286,
      4808,
      46012,
      533,
      62,
      28961,
      62,
      10257,
      329,
      6496,
      7468,
      13
    ],
    "start_token": 769,
    "end_token": 797,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      49500,
      4814,
      1366,
      351,
      5721,
      12,
      3083,
      4560
    ],
    "label": "ml_signal",
    "reason": "Handling missing data with column-wise operations"
  },
  {
    "line": 149,
    "text": "        self.processed_meta_input = {\"time_perf\": time_perf}",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential logging of sensitive information",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      14681,
      276,
      62,
      28961,
      62,
      15414,
      796,
      19779,
      2435,
      62,
      525,
      69,
      1298,
      640,
      62,
      525,
      69,
      92
    ],
    "start_token": 797,
    "end_token": 824,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      18931,
      286,
      8564,
      1321
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential logging of sensitive information"
  },
  {
    "line": 158,
    "text": "            d_train = d_train.dropna(axis=0)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of NotImplementedError for unsupported operations",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      288,
      62,
      27432,
      796,
      288,
      62,
      27432,
      13,
      14781,
      2616,
      7,
      22704,
      28,
      15,
      8
    ],
    "start_token": 824,
    "end_token": 850,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      1892,
      3546,
      1154,
      12061,
      12331,
      329,
      24222,
      4560
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of NotImplementedError for unsupported operations"
  },
  {
    "line": 160,
    "text": "            if prev_size == 0 or d_test.shape[0] / prev_size <= 0.1:",
    "annotation": "\u2705 Best Practice: Ensure all NaN values are filled before returning",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      8654,
      62,
      7857,
      6624,
      657,
      393,
      288,
      62,
      9288,
      13,
      43358,
      58,
      15,
      60,
      1220,
      8654,
      62,
      7857,
      19841,
      657,
      13,
      16,
      25
    ],
    "start_token": 850,
    "end_token": 885,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      48987,
      477,
      11013,
      45,
      3815,
      389,
      5901,
      878,
      8024
    ],
    "label": "best_practice",
    "reason": "Ensure all NaN values are filled before returning"
  },
  {
    "line": 157,
    "text": "            prev_size = d_test.shape[0]",
    "annotation": "\u2705 Best Practice: Method should have a docstring explaining its purpose",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      8654,
      62,
      7857,
      796,
      288,
      62,
      9288,
      13,
      43358,
      58,
      15,
      60
    ],
    "start_token": 885,
    "end_token": 908,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11789,
      815,
      423,
      257,
      2205,
      8841,
      11170,
      663,
      4007
    ],
    "label": "best_practice",
    "reason": "Method should have a docstring explaining its purpose"
  },
  {
    "line": 159,
    "text": "            d_test = d_test.dropna(axis=0)",
    "annotation": "\u2705 Best Practice: Consider adding error handling if processed_meta_input might not be set",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      288,
      62,
      9288,
      796,
      288,
      62,
      9288,
      13,
      14781,
      2616,
      7,
      22704,
      28,
      15,
      8
    ],
    "start_token": 908,
    "end_token": 934,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      4375,
      4049,
      9041,
      611,
      13686,
      62,
      28961,
      62,
      15414,
      1244,
      407,
      307,
      900
    ],
    "label": "best_practice",
    "reason": "Consider adding error handling if processed_meta_input might not be set"
  },
  {
    "line": 159,
    "text": "            d_test = d_test.dropna(axis=0)",
    "annotation": "\ud83e\udde0 ML Signal: Inheritance from a class, indicating use of object-oriented programming",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      288,
      62,
      9288,
      796,
      288,
      62,
      9288,
      13,
      14781,
      2616,
      7,
      22704,
      28,
      15,
      8
    ],
    "start_token": 934,
    "end_token": 960,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47025,
      42942,
      422,
      257,
      1398,
      11,
      12739,
      779,
      286,
      2134,
      12,
      17107,
      8300
    ],
    "label": "ml_signal",
    "reason": "Inheritance from a class, indicating use of object-oriented programming"
  },
  {
    "line": 237,
    "text": "class MetaDatasetDS(MetaTaskDataset):",
    "annotation": "\ud83e\udde0 ML Signal: Usage of tqdm for progress tracking, which can be a signal for user interaction patterns.",
    "confidence": 1.0,
    "tokens": [
      4871,
      30277,
      27354,
      292,
      316,
      5258,
      7,
      48526,
      25714,
      27354,
      292,
      316,
      2599
    ],
    "start_token": 960,
    "end_token": 973,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      256,
      80,
      36020,
      329,
      4371,
      9646,
      11,
      543,
      460,
      307,
      257,
      6737,
      329,
      2836,
      10375,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of tqdm for progress tracking, which can be a signal for user interaction patterns."
  },
  {
    "line": 267,
    "text": "            the total length of test periods will be `step + rolling_ext_days`",
    "annotation": "\ud83e\udde0 ML Signal: Accessing internal data for processing, indicating a pattern of data manipulation",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      262,
      2472,
      4129,
      286,
      1332,
      9574,
      481,
      307,
      4600,
      9662,
      1343,
      10708,
      62,
      2302,
      62,
      12545,
      63
    ],
    "start_token": 973,
    "end_token": 1001,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8798,
      278,
      5387,
      1366,
      329,
      7587,
      11,
      12739,
      257,
      3912,
      286,
      1366,
      17512
    ],
    "label": "ml_signal",
    "reason": "Accessing internal data for processing, indicating a pattern of data manipulation"
  },
  {
    "line": 269,
    "text": "        exp_name : Union[str, InternalData]",
    "annotation": "\ud83e\udde0 ML Signal: Extracting specific segments from a task, indicating a pattern of task-based data processing",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1033,
      62,
      3672,
      1058,
      4479,
      58,
      2536,
      11,
      18628,
      6601,
      60
    ],
    "start_token": 1001,
    "end_token": 1019,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29677,
      278,
      2176,
      17894,
      422,
      257,
      4876,
      11,
      12739,
      257,
      3912,
      286,
      4876,
      12,
      3106,
      1366,
      7587
    ],
    "label": "ml_signal",
    "reason": "Extracting specific segments from a task, indicating a pattern of task-based data processing"
  },
  {
    "line": 271,
    "text": "            - str: the name of the experiment to store the performance of data",
    "annotation": "\u2705 Best Practice: Using a generator expression with max for efficient computation",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      532,
      965,
      25,
      262,
      1438,
      286,
      262,
      6306,
      284,
      3650,
      262,
      2854,
      286,
      1366
    ],
    "start_token": 1019,
    "end_token": 1044,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      257,
      17301,
      5408,
      351,
      3509,
      329,
      6942,
      29964
    ],
    "label": "best_practice",
    "reason": "Using a generator expression with max for efficient computation"
  },
  {
    "line": 272,
    "text": "            - InternalData: a prepared internal data",
    "annotation": "\ud83e\udde0 ML Signal: Slicing data based on computed indices, indicating a pattern of data preparation",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      532,
      18628,
      6601,
      25,
      257,
      5597,
      5387,
      1366
    ],
    "start_token": 1044,
    "end_token": 1063,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      311,
      677,
      278,
      1366,
      1912,
      319,
      29231,
      36525,
      11,
      12739,
      257,
      3912,
      286,
      1366,
      11824
    ],
    "label": "ml_signal",
    "reason": "Slicing data based on computed indices, indicating a pattern of data preparation"
  },
  {
    "line": 278,
    "text": "                the float represents the percentage of data for training",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential misuse of get_date_by_shift if not properly validated",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      262,
      12178,
      6870,
      262,
      5873,
      286,
      1366,
      329,
      3047
    ],
    "start_token": 1063,
    "end_token": 1087,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      29169,
      286,
      651,
      62,
      4475,
      62,
      1525,
      62,
      30846,
      611,
      407,
      6105,
      31031
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential misuse of get_date_by_shift if not properly validated"
  },
  {
    "line": 280,
    "text": "                it will try its best to put its data in training and ensure that the date `segments` is in the test set",
    "annotation": "\ud83e\udde0 ML Signal: Usage of mask function to filter data based on conditions",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      340,
      481,
      1949,
      663,
      1266,
      284,
      1234,
      663,
      1366,
      287,
      3047,
      290,
      4155,
      326,
      262,
      3128,
      4600,
      325,
      11726,
      63,
      318,
      287,
      262,
      1332,
      900
    ],
    "start_token": 1087,
    "end_token": 1127,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      9335,
      2163,
      284,
      8106,
      1366,
      1912,
      319,
      3403
    ],
    "label": "ml_signal",
    "reason": "Usage of mask function to filter data based on conditions"
  },
  {
    "line": 282,
    "text": "            length of historical steps for the meta infomation",
    "annotation": "\ud83e\udde0 ML Signal: Application of a function across a DataFrame",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4129,
      286,
      6754,
      4831,
      329,
      262,
      13634,
      1167,
      296,
      341
    ],
    "start_token": 1127,
    "end_token": 1148,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15678,
      286,
      257,
      2163,
      1973,
      257,
      6060,
      19778
    ],
    "label": "ml_signal",
    "reason": "Application of a function across a DataFrame"
  },
  {
    "line": 283,
    "text": "            Number of steps of the data similarity information",
    "annotation": "\ud83e\udde0 ML Signal: Calculation of total length based on step and hist_step_n",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      7913,
      286,
      4831,
      286,
      262,
      1366,
      26789,
      1321
    ],
    "start_token": 1148,
    "end_token": 1167,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2199,
      14902,
      286,
      2472,
      4129,
      1912,
      319,
      2239,
      290,
      1554,
      62,
      9662,
      62,
      77
    ],
    "label": "ml_signal",
    "reason": "Calculation of total length based on step and hist_step_n"
  },
  {
    "line": 286,
    "text": "        \"\"\"",
    "annotation": "\u2705 Best Practice: Check if DataFrame has enough rows before slicing",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 1167,
    "end_token": 1175,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      611,
      6060,
      19778,
      468,
      1576,
      15274,
      878,
      49289
    ],
    "label": "best_practice",
    "reason": "Check if DataFrame has enough rows before slicing"
  },
  {
    "line": 290,
    "text": "        else:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Raising a generic ValueError without additional context",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 1175,
    "end_token": 1184,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      7567,
      1710,
      257,
      14276,
      11052,
      12331,
      1231,
      3224,
      4732
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Raising a generic ValueError without additional context"
  },
  {
    "line": 287,
    "text": "        super().__init__(segments=segments)",
    "annotation": "\ud83e\udde0 ML Signal: Use of isinstance to handle different data types",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2208,
      22446,
      834,
      15003,
      834,
      7,
      325,
      11726,
      28,
      325,
      11726,
      8
    ],
    "start_token": 1184,
    "end_token": 1203,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      318,
      39098,
      284,
      5412,
      1180,
      1366,
      3858
    ],
    "label": "ml_signal",
    "reason": "Use of isinstance to handle different data types"
  },
  {
    "line": 289,
    "text": "            self.internal_data = exp_name",
    "annotation": "\ud83e\udde0 ML Signal: Dynamic calculation of training task count based on a proportion",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      32538,
      62,
      7890,
      796,
      1033,
      62,
      3672
    ],
    "start_token": 1203,
    "end_token": 1223,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      26977,
      17952,
      286,
      3047,
      4876,
      954,
      1912,
      319,
      257,
      9823
    ],
    "label": "ml_signal",
    "reason": "Dynamic calculation of training task count based on a proportion"
  },
  {
    "line": 293,
    "text": "        self.task_tpl = deepcopy(task_tpl)  # FIXME: if the handler is shared, how to avoid the explosion of the memroy.",
    "annotation": "\u2705 Best Practice: Logging the first train meta task for traceability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      35943,
      62,
      83,
      489,
      796,
      2769,
      30073,
      7,
      35943,
      62,
      83,
      489,
      8,
      220,
      1303,
      44855,
      11682,
      25,
      611,
      262,
      21360,
      318,
      4888,
      11,
      703,
      284,
      3368,
      262,
      11278,
      286,
      262,
      1066,
      3287,
      13
    ],
    "start_token": 1223,
    "end_token": 1266,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5972,
      2667,
      262,
      717,
      4512,
      13634,
      4876,
      329,
      12854,
      1799
    ],
    "label": "best_practice",
    "reason": "Logging the first train meta task for traceability"
  },
  {
    "line": 298,
    "text": "        if isinstance(task_tpl, dict):",
    "annotation": "\u2705 Best Practice: Logging the first test meta task for traceability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      318,
      39098,
      7,
      35943,
      62,
      83,
      489,
      11,
      8633,
      2599
    ],
    "start_token": 1266,
    "end_token": 1284,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5972,
      2667,
      262,
      717,
      1332,
      13634,
      4876,
      329,
      12854,
      1799
    ],
    "label": "best_practice",
    "reason": "Logging the first test meta task for traceability"
  },
  {
    "line": 302,
    "text": "            task_iter = rg(task_tpl)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of NotImplementedError for unsupported segment types",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4876,
      62,
      2676,
      796,
      48670,
      7,
      35943,
      62,
      83,
      489,
      8
    ],
    "start_token": 1284,
    "end_token": 1306,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      1892,
      3546,
      1154,
      12061,
      12331,
      329,
      24222,
      10618,
      3858
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of NotImplementedError for unsupported segment types"
  },
  {
    "line": 304,
    "text": "                self.ta = TimeAdjuster(future=True)",
    "annotation": "\ud83e\udde0 ML Signal: Use of isinstance to handle different data types",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      8326,
      796,
      3862,
      39668,
      263,
      7,
      37443,
      28,
      17821,
      8
    ],
    "start_token": 1306,
    "end_token": 1333,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      318,
      39098,
      284,
      5412,
      1180,
      1366,
      3858
    ],
    "label": "ml_signal",
    "reason": "Use of isinstance to handle different data types"
  },
  {
    "line": 309,
    "text": "            if task_mode == MetaTask.PROC_MODE_FULL:",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on timestamp comparison",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      4876,
      62,
      14171,
      6624,
      30277,
      25714,
      13,
      4805,
      4503,
      62,
      49058,
      62,
      37,
      9994,
      25
    ],
    "start_token": 1333,
    "end_token": 1360,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      41033,
      7208
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on timestamp comparison"
  },
  {
    "line": 314,
    "text": "            assert isinstance(task_tpl, list)",
    "annotation": "\u2705 Best Practice: Logging the first train meta task for traceability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6818,
      318,
      39098,
      7,
      35943,
      62,
      83,
      489,
      11,
      1351,
      8
    ],
    "start_token": 1360,
    "end_token": 1382,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5972,
      2667,
      262,
      717,
      4512,
      13634,
      4876,
      329,
      12854,
      1799
    ],
    "label": "best_practice",
    "reason": "Logging the first train meta task for traceability"
  },
  {
    "line": 316,
    "text": "",
    "annotation": "\u2705 Best Practice: Logging the first test meta task for traceability",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1382,
    "end_token": 1382,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5972,
      2667,
      262,
      717,
      1332,
      13634,
      4876,
      329,
      12854,
      1799
    ],
    "label": "best_practice",
    "reason": "Logging the first test meta task for traceability"
  },
  {
    "line": 316,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of NotImplementedError for unsupported segment types",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1382,
    "end_token": 1382,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      1892,
      3546,
      1154,
      12061,
      12331,
      329,
      24222,
      10618,
      3858
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of NotImplementedError for unsupported segment types"
  },
  {
    "line": 316,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of NotImplementedError for unsupported segment types",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1382,
    "end_token": 1382,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      1892,
      3546,
      1154,
      12061,
      12331,
      329,
      24222,
      10618,
      3858
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of NotImplementedError for unsupported segment types"
  }
]