[
  {
    "line": 3,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Importing specific libraries can indicate the type of operations or data handling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 0,
    "end_token": 0,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      2176,
      12782,
      460,
      7603,
      262,
      2099,
      286,
      4560,
      393,
      1366,
      9041
    ],
    "label": "ml_signal",
    "reason": "Importing specific libraries can indicate the type of operations or data handling"
  },
  {
    "line": 6,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential for path traversal if config_path is user-controlled",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 0,
    "end_token": 0,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      329,
      3108,
      33038,
      282,
      611,
      4566,
      62,
      6978,
      318,
      2836,
      12,
      14401
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential for path traversal if config_path is user-controlled"
  },
  {
    "line": 8,
    "text": "import os",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Raises a generic exception, consider using a more specific exception type",
    "confidence": 0.5,
    "tokens": [
      11748,
      28686
    ],
    "start_token": 0,
    "end_token": 2,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      7567,
      2696,
      257,
      14276,
      6631,
      11,
      2074,
      1262,
      257,
      517,
      2176,
      6631,
      2099
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Raises a generic exception, consider using a more specific exception type"
  },
  {
    "line": 11,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Opening a file without exception handling can lead to unhandled exceptions",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 2,
    "end_token": 2,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      25522,
      257,
      2393,
      1231,
      6631,
      9041,
      460,
      1085,
      284,
      555,
      38788,
      13269
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Opening a file without exception handling can lead to unhandled exceptions"
  },
  {
    "line": 13,
    "text": "    def __init__(self, config_path):",
    "annotation": "\ud83e\udde0 ML Signal: Usage of YAML library for configuration loading",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      11593,
      15003,
      834,
      7,
      944,
      11,
      4566,
      62,
      6978,
      2599
    ],
    "start_token": 2,
    "end_token": 16,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      575,
      2390,
      43,
      5888,
      329,
      8398,
      11046
    ],
    "label": "ml_signal",
    "reason": "Usage of YAML library for configuration loading"
  },
  {
    "line": 15,
    "text": "            raise ValueError(\"Config path is invalid.\")",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Loading YAML without validation can lead to code execution if the file is malicious",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      5298,
      11052,
      12331,
      7203,
      16934,
      3108,
      318,
      12515,
      19570
    ],
    "start_token": 16,
    "end_token": 36,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      12320,
      575,
      2390,
      43,
      1231,
      21201,
      460,
      1085,
      284,
      2438,
      9706,
      611,
      262,
      2393,
      318,
      17412
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Loading YAML without validation can lead to code execution if the file is malicious"
  },
  {
    "line": 17,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of deepcopy to avoid unintended mutations of the config object",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 36,
    "end_token": 36,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2769,
      30073,
      284,
      3368,
      30261,
      23005,
      286,
      262,
      4566,
      2134
    ],
    "label": "best_practice",
    "reason": "Use of deepcopy to avoid unintended mutations of the config object"
  },
  {
    "line": 19,
    "text": "            yaml = YAML(typ=\"safe\", pure=True)",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of a configuration object for experiments",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      331,
      43695,
      796,
      575,
      2390,
      43,
      7,
      28004,
      2625,
      21230,
      1600,
      5899,
      28,
      17821,
      8
    ],
    "start_token": 36,
    "end_token": 62,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      257,
      8398,
      2134,
      329,
      10256
    ],
    "label": "ml_signal",
    "reason": "Instantiation of a configuration object for experiments"
  },
  {
    "line": 21,
    "text": "        self.config = copy.deepcopy(config)",
    "annotation": "\ud83e\udde0 ML Signal: Accessing specific configuration sections for pipeline setup",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      11250,
      796,
      4866,
      13,
      22089,
      30073,
      7,
      11250,
      8
    ],
    "start_token": 62,
    "end_token": 80,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8798,
      278,
      2176,
      8398,
      9004,
      329,
      11523,
      9058
    ],
    "label": "ml_signal",
    "reason": "Accessing specific configuration sections for pipeline setup"
  },
  {
    "line": 22,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of a configuration object for optimization",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 80,
    "end_token": 80,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      257,
      8398,
      2134,
      329,
      23989
    ],
    "label": "ml_signal",
    "reason": "Instantiation of a configuration object for optimization"
  },
  {
    "line": 26,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Accessing specific configuration sections for time settings",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 80,
    "end_token": 80,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8798,
      278,
      2176,
      8398,
      9004,
      329,
      640,
      6460
    ],
    "label": "ml_signal",
    "reason": "Accessing specific configuration sections for time settings"
  },
  {
    "line": 27,
    "text": "        self.time_config = config.get(\"time_period\", dict())",
    "annotation": "\ud83e\udde0 ML Signal: Accessing specific configuration sections for data settings",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      2435,
      62,
      11250,
      796,
      4566,
      13,
      1136,
      7203,
      2435,
      62,
      41007,
      1600,
      8633,
      28955
    ],
    "start_token": 80,
    "end_token": 103,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8798,
      278,
      2176,
      8398,
      9004,
      329,
      1366,
      6460
    ],
    "label": "ml_signal",
    "reason": "Accessing specific configuration sections for data settings"
  },
  {
    "line": 29,
    "text": "        self.backtest_config = config.get(\"backtest\", dict())",
    "annotation": "\ud83e\udde0 ML Signal: Accessing specific configuration sections for backtesting",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      1891,
      9288,
      62,
      11250,
      796,
      4566,
      13,
      1136,
      7203,
      1891,
      9288,
      1600,
      8633,
      28955
    ],
    "start_token": 103,
    "end_token": 126,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8798,
      278,
      2176,
      8398,
      9004,
      329,
      736,
      33407
    ],
    "label": "ml_signal",
    "reason": "Accessing specific configuration sections for backtesting"
  },
  {
    "line": 31,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Accessing specific configuration sections for client settings",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 126,
    "end_token": 126,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8798,
      278,
      2176,
      8398,
      9004,
      329,
      5456,
      6460
    ],
    "label": "ml_signal",
    "reason": "Accessing specific configuration sections for client settings"
  },
  {
    "line": 26,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of configuration management pattern",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 126,
    "end_token": 126,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      8398,
      4542,
      3912
    ],
    "label": "ml_signal",
    "reason": "Usage of configuration management pattern"
  },
  {
    "line": 28,
    "text": "        self.data_config = config.get(\"data\", dict())",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential directory traversal if 'dir' is user-controlled",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      7890,
      62,
      11250,
      796,
      4566,
      13,
      1136,
      7203,
      7890,
      1600,
      8633,
      28955
    ],
    "start_token": 126,
    "end_token": 147,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      8619,
      33038,
      282,
      611,
      705,
      15908,
      6,
      318,
      2836,
      12,
      14401
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential directory traversal if 'dir' is user-controlled"
  },
  {
    "line": 30,
    "text": "        self.qlib_client_config = config.get(\"qlib_client\", dict())",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential directory traversal if 'tuner_ex_dir' is user-controlled",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      80,
      8019,
      62,
      16366,
      62,
      11250,
      796,
      4566,
      13,
      1136,
      7203,
      80,
      8019,
      62,
      16366,
      1600,
      8633,
      28955
    ],
    "start_token": 147,
    "end_token": 174,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      8619,
      33038,
      282,
      611,
      705,
      28286,
      263,
      62,
      1069,
      62,
      15908,
      6,
      318,
      2836,
      12,
      14401
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential directory traversal if 'tuner_ex_dir' is user-controlled"
  },
  {
    "line": 32,
    "text": "",
    "annotation": "\u2705 Best Practice: Ensure directory existence before use",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 174,
    "end_token": 174,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      48987,
      8619,
      6224,
      878,
      779
    ],
    "label": "best_practice",
    "reason": "Ensure directory existence before use"
  },
  {
    "line": 34,
    "text": "    def __init__(self, config, TUNER_CONFIG_MANAGER):",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Race condition if directory is created by another process",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      11593,
      15003,
      834,
      7,
      944,
      11,
      4566,
      11,
      309,
      4944,
      1137,
      62,
      10943,
      16254,
      62,
      10725,
      4760,
      1137,
      2599
    ],
    "start_token": 174,
    "end_token": 197,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      12588,
      4006,
      611,
      8619,
      318,
      2727,
      416,
      1194,
      1429
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Race condition if directory is created by another process"
  },
  {
    "line": 36,
    "text": "        :param config:  The config dict for tuner experiment",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential directory traversal if 'estimator_ex_dir' is user-controlled",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1058,
      17143,
      4566,
      25,
      220,
      383,
      4566,
      8633,
      329,
      6278,
      263,
      6306
    ],
    "start_token": 197,
    "end_token": 216,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      8619,
      33038,
      282,
      611,
      705,
      395,
      320,
      1352,
      62,
      1069,
      62,
      15908,
      6,
      318,
      2836,
      12,
      14401
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential directory traversal if 'estimator_ex_dir' is user-controlled"
  },
  {
    "line": 38,
    "text": "        \"\"\"",
    "annotation": "\u2705 Best Practice: Ensure directory existence before use",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 216,
    "end_token": 224,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      48987,
      8619,
      6224,
      878,
      779
    ],
    "label": "best_practice",
    "reason": "Ensure directory existence before use"
  },
  {
    "line": 40,
    "text": "        # The dir of the config",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Race condition if directory is created by another process",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      383,
      26672,
      286,
      262,
      4566
    ],
    "start_token": 224,
    "end_token": 237,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      12588,
      4006,
      611,
      8619,
      318,
      2727,
      416,
      1194,
      1429
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Race condition if directory is created by another process"
  },
  {
    "line": 42,
    "text": "        # The dir of the result of tuner experiment",
    "annotation": "\ud83e\udde0 ML Signal: Dynamic module and class loading pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      383,
      26672,
      286,
      262,
      1255,
      286,
      6278,
      263,
      6306
    ],
    "start_token": 237,
    "end_token": 254,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      26977,
      8265,
      290,
      1398,
      11046,
      3912
    ],
    "label": "ml_signal",
    "reason": "Dynamic module and class loading pattern"
  },
  {
    "line": 42,
    "text": "        # The dir of the result of tuner experiment",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential file path manipulation if 'tuner_ex_dir' is user-controlled",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      383,
      26672,
      286,
      262,
      1255,
      286,
      6278,
      263,
      6306
    ],
    "start_token": 254,
    "end_token": 271,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2393,
      3108,
      17512,
      611,
      705,
      28286,
      263,
      62,
      1069,
      62,
      15908,
      6,
      318,
      2836,
      12,
      14401
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential file path manipulation if 'tuner_ex_dir' is user-controlled"
  },
  {
    "line": 50,
    "text": "        # Get the tuner type",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Overwrites existing file without warning",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      3497,
      262,
      6278,
      263,
      2099
    ],
    "start_token": 271,
    "end_token": 284,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      3827,
      8933,
      274,
      4683,
      2393,
      1231,
      6509
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Overwrites existing file without warning"
  },
  {
    "line": 50,
    "text": "        # Get the tuner type",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): YAML serialization can be unsafe if not properly handled",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      3497,
      262,
      6278,
      263,
      2099
    ],
    "start_token": 284,
    "end_token": 297,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      575,
      2390,
      43,
      11389,
      1634,
      460,
      307,
      21596,
      611,
      407,
      6105,
      12118
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "YAML serialization can be unsafe if not properly handled"
  },
  {
    "line": 41,
    "text": "        self.global_dir = config.get(\"dir\", os.path.dirname(TUNER_CONFIG_MANAGER.config_path))",
    "annotation": "\ud83e\udde0 ML Signal: Use of configuration dictionary to set object properties",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      20541,
      62,
      15908,
      796,
      4566,
      13,
      1136,
      7203,
      15908,
      1600,
      28686,
      13,
      6978,
      13,
      15908,
      3672,
      7,
      51,
      4944,
      1137,
      62,
      10943,
      16254,
      62,
      10725,
      4760,
      1137,
      13,
      11250,
      62,
      6978,
      4008
    ],
    "start_token": 297,
    "end_token": 338,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      8398,
      22155,
      284,
      900,
      2134,
      6608
    ],
    "label": "ml_signal",
    "reason": "Use of configuration dictionary to set object properties"
  },
  {
    "line": 42,
    "text": "        # The dir of the result of tuner experiment",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for incorrect report_type values if not validated",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      383,
      26672,
      286,
      262,
      1255,
      286,
      6278,
      263,
      6306
    ],
    "start_token": 338,
    "end_token": 355,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      11491,
      989,
      62,
      4906,
      3815,
      611,
      407,
      31031
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for incorrect report_type values if not validated"
  },
  {
    "line": 53,
    "text": "        # Save the tuner experiment for further view",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Error message could expose internal logic",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      12793,
      262,
      6278,
      263,
      6306,
      329,
      2252,
      1570
    ],
    "start_token": 355,
    "end_token": 371,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      13047,
      3275,
      714,
      15651,
      5387,
      9156
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Error message could expose internal logic"
  },
  {
    "line": 54,
    "text": "        tuner_ex_config_path = os.path.join(self.tuner_ex_dir, \"tuner_config.yaml\")",
    "annotation": "\ud83e\udde0 ML Signal: Use of configuration dictionary to set object properties",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6278,
      263,
      62,
      1069,
      62,
      11250,
      62,
      6978,
      796,
      28686,
      13,
      6978,
      13,
      22179,
      7,
      944,
      13,
      28286,
      263,
      62,
      1069,
      62,
      15908,
      11,
      366,
      28286,
      263,
      62,
      11250,
      13,
      88,
      43695,
      4943
    ],
    "start_token": 371,
    "end_token": 411,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      8398,
      22155,
      284,
      900,
      2134,
      6608
    ],
    "label": "ml_signal",
    "reason": "Use of configuration dictionary to set object properties"
  },
  {
    "line": 54,
    "text": "        tuner_ex_config_path = os.path.join(self.tuner_ex_dir, \"tuner_config.yaml\")",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for incorrect report_factor values if not validated",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6278,
      263,
      62,
      1069,
      62,
      11250,
      62,
      6978,
      796,
      28686,
      13,
      6978,
      13,
      22179,
      7,
      944,
      13,
      28286,
      263,
      62,
      1069,
      62,
      15908,
      11,
      366,
      28286,
      263,
      62,
      11250,
      13,
      88,
      43695,
      4943
    ],
    "start_token": 411,
    "end_token": 451,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      11491,
      989,
      62,
      31412,
      3815,
      611,
      407,
      31031
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for incorrect report_factor values if not validated"
  },
  {
    "line": 68,
    "text": "            \"model\",",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Error message could expose internal logic",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      19849,
      1600
    ],
    "start_token": 451,
    "end_token": 465,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      13047,
      3275,
      714,
      15651,
      5387,
      9156
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Error message could expose internal logic"
  },
  {
    "line": 68,
    "text": "            \"model\",",
    "annotation": "\ud83e\udde0 ML Signal: Use of configuration dictionary to set object properties",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      19849,
      1600
    ],
    "start_token": 465,
    "end_token": 479,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      8398,
      22155,
      284,
      900,
      2134,
      6608
    ],
    "label": "ml_signal",
    "reason": "Use of configuration dictionary to set object properties"
  },
  {
    "line": 68,
    "text": "            \"model\",",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for incorrect optim_type values if not validated",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      19849,
      1600
    ],
    "start_token": 479,
    "end_token": 493,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      11491,
      6436,
      62,
      4906,
      3815,
      611,
      407,
      31031
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for incorrect optim_type values if not validated"
  },
  {
    "line": 68,
    "text": "            \"model\",",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Error message could expose internal logic",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      19849,
      1600
    ],
    "start_token": 493,
    "end_token": 507,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      13047,
      3275,
      714,
      15651,
      5387,
      9156
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Error message could expose internal logic"
  }
]