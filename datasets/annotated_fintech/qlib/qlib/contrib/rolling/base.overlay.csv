annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
üß† ML Signal: Logging is often used in ML pipelines for tracking experiments and debugging,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 318, 1690, 973, 287, 10373, 31108, 329, 9646, 10256, 290, 28769]",1.0,2,ml_signal,8,Logging is often used in ML pipelines for tracking experiments and debugging,,0,import fire,"[11748, 2046]"
‚úÖ Best Practice: Use of a logger is preferred over print statements for better control over logging levels and outputs,"[26486, 227, 6705, 19939, 25, 5765, 286, 257, 49706, 318, 9871, 625, 3601, 6299, 329, 1365, 1630, 625, 18931, 2974, 290, 23862]",1.0,8,best_practice,9,Use of a logger is preferred over print statements for better control over logging levels and outputs,,2,import pandas as pd,"[11748, 19798, 292, 355, 279, 67]"
üß† ML Signal: Utility functions like get_cls_kwargs and init_instance_by_config are often used in ML for dynamic configuration,"[8582, 100, 254, 10373, 26484, 25, 34030, 5499, 588, 651, 62, 565, 82, 62, 46265, 22046, 290, 2315, 62, 39098, 62, 1525, 62, 11250, 389, 1690, 973, 287, 10373, 329, 8925, 8398]",0.5,22,ml_signal,13,Utility functions like get_cls_kwargs and init_instance_by_config are often used in ML for dynamic configuration,,8,from qlib.model.ens.ensemble import RollingEnsemble,"[6738, 10662, 8019, 13, 19849, 13, 641, 13, 1072, 11306, 1330, 21567, 4834, 15140]"
"‚ö†Ô∏è SAST Risk (Low): Using shell commands like `rm -r` can be risky if not handled properly, as it can lead to accidental data loss.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 7582, 9729, 588, 4600, 26224, 532, 81, 63, 460, 307, 17564, 611, 407, 12118, 6105, 11, 355, 340, 460, 1085, 284, 23221, 1366, 2994, 13]",1.0,39,sast_risk,38,"Using shell commands like `rm -r` can be risky if not handled properly, as it can lead to accidental data loss.",Low,22,"    But it is for different purpose, so other parts are not shared.","[220, 220, 220, 887, 340, 318, 329, 1180, 4007, 11, 523, 584, 3354, 389, 407, 4888, 13]"
üß† ML Signal: Logging initialization indicates tracking of events or errors,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 37588, 9217, 9646, 286, 2995, 393, 8563]",0.5,73,ml_signal,76,Logging initialization indicates tracking of events or errors,,39,            It is other data source that is dumped as a handler. It will override the data handler section in the config.,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 632, 318, 584, 1366, 2723, 326, 318, 24105, 355, 257, 21360, 13, 632, 481, 20957, 262, 1366, 21360, 2665, 287, 262, 4566, 13]"
‚úÖ Best Practice: Convert conf_path to Path object for consistent path operations,"[26486, 227, 6705, 19939, 25, 38240, 1013, 62, 6978, 284, 10644, 2134, 329, 6414, 3108, 4560]",1.0,88,best_practice,78,Convert conf_path to Path object for consistent path operations,,73,        test_end : Optional[str],"[220, 220, 220, 220, 220, 220, 220, 1332, 62, 437, 1058, 32233, 58, 2536, 60]"
‚ö†Ô∏è SAST Risk (Medium): Assertion without exception handling can cause program termination,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 2195, 861, 295, 1231, 6631, 9041, 460, 2728, 1430, 19883]",0.5,116,sast_risk,83,Assertion without exception handling can cause program termination,Medium,88,            You can do the same thing with task_ext_conf in a more complicated way,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 921, 460, 466, 262, 976, 1517, 351, 4876, 62, 2302, 62, 10414, 287, 257, 517, 8253, 835]"
üß† ML Signal: Use of current timestamp for unique experiment naming,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1459, 41033, 329, 3748, 6306, 19264]",0.5,135,ml_signal,87,Use of current timestamp for unique experiment naming,,116,            The name for the experiments for rolling.,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 383, 1438, 329, 262, 10256, 329, 10708, 13]"
üß† ML Signal: Warning log indicates potential issue with user-defined names,"[8582, 100, 254, 10373, 26484, 25, 15932, 2604, 9217, 2785, 2071, 351, 2836, 12, 23211, 3891]",0.5,151,ml_signal,93,Warning log indicates potential issue with user-defined names,,135,        self.exp_name = exp_name,"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 11201, 62, 3672, 796, 1033, 62, 3672]"
‚úÖ Best Practice: Use of context manager to ensure file is properly closed,"[26486, 227, 6705, 19939, 25, 5765, 286, 4732, 4706, 284, 4155, 2393, 318, 6105, 4838]",1.0,164,best_practice,98,Use of context manager to ensure file is properly closed,,151,        self.horizon = horizon,"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 17899, 8637, 796, 17810]"
‚úÖ Best Practice: Use of safe loading to prevent execution of arbitrary code,"[26486, 227, 6705, 19939, 25, 5765, 286, 3338, 11046, 284, 2948, 9706, 286, 14977, 2438]",0.5,205,best_practice,100,Use of safe loading to prevent execution of arbitrary code,,164,"            datetime_suffix = pd.Timestamp.now().strftime(""%Y%m%d%H%M%S"")","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4818, 8079, 62, 37333, 844, 796, 279, 67, 13, 14967, 27823, 13, 2197, 22446, 2536, 31387, 7203, 4, 56, 4, 76, 4, 67, 4, 39, 4, 44, 4, 50, 4943]"
üß† ML Signal: Loading configuration files is a common pattern in applications,"[8582, 100, 254, 10373, 26484, 25, 12320, 8398, 3696, 318, 257, 2219, 3912, 287, 5479]",0.5,214,ml_signal,102,Loading configuration files is a common pattern in applications,,205,        else:,"[220, 220, 220, 220, 220, 220, 220, 2073, 25]"
‚úÖ Best Practice: Check if self.h_path is not None before using it,"[26486, 227, 6705, 19939, 25, 6822, 611, 2116, 13, 71, 62, 6978, 318, 407, 6045, 878, 1262, 340]",1.0,249,best_practice,106,Check if self.h_path is not None before using it,,214,"                ""Please manually remove your experiment for rolling model with command like `rm -r mlruns`.""","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 366, 5492, 14500, 4781, 534, 6306, 329, 10708, 2746, 351, 3141, 588, 4600, 26224, 532, 81, 25962, 48381, 63, 526]"
‚úÖ Best Practice: Use Path from pathlib for path manipulations,"[26486, 227, 6705, 19939, 25, 5765, 10644, 422, 3108, 8019, 329, 3108, 7704, 5768]",1.0,261,best_practice,108,Use Path from pathlib for path manipulations,,249,            ),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1267]"
üß† ML Signal: Modifying task dictionary to change dataset handler,"[8582, 100, 254, 10373, 26484, 25, 3401, 4035, 4876, 22155, 284, 1487, 27039, 21360]",1.0,277,ml_signal,110,Modifying task dictionary to change dataset handler,,261,        self.test_end = test_end,"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 9288, 62, 437, 796, 1332, 62, 437]"
üß† ML Signal: Using a function to replace task handler with cache,"[8582, 100, 254, 10373, 26484, 25, 8554, 257, 2163, 284, 6330, 4876, 21360, 351, 12940]",1.0,277,ml_signal,113,Using a function to replace task handler with cache,,277,,[]
üß† ML Signal: Returning modified task dictionary,"[8582, 100, 254, 10373, 26484, 25, 42882, 9518, 4876, 22155]",1.0,298,ml_signal,115,Returning modified task dictionary,,277,        # - the qlib_init section will be ignored by me.,"[220, 220, 220, 220, 220, 220, 220, 1303, 532, 262, 10662, 8019, 62, 15003, 2665, 481, 307, 9514, 416, 502, 13]"
‚úÖ Best Practice: Check if 'train_start' is not None before using it,"[26486, 227, 6705, 19939, 25, 6822, 611, 705, 27432, 62, 9688, 6, 318, 407, 6045, 878, 1262, 340]",1.0,298,best_practice,113,Check if 'train_start' is not None before using it,,298,,[]
üß† ML Signal: Accessing nested dictionary keys to update task configuration,"[8582, 100, 254, 10373, 26484, 25, 8798, 278, 28376, 22155, 8251, 284, 4296, 4876, 8398]",1.0,319,ml_signal,115,Accessing nested dictionary keys to update task configuration,,298,        # - the qlib_init section will be ignored by me.,"[220, 220, 220, 220, 220, 220, 220, 1303, 532, 262, 10662, 8019, 62, 15003, 2665, 481, 307, 9514, 416, 502, 13]"
üß† ML Signal: Updating task configuration with new start time,"[8582, 100, 254, 10373, 26484, 25, 3205, 38734, 4876, 8398, 351, 649, 923, 640]",0.5,319,ml_signal,117,Updating task configuration with new start time,,319,,[]
‚úÖ Best Practice: Check if 'test_end' is not None before using it,"[26486, 227, 6705, 19939, 25, 6822, 611, 705, 9288, 62, 437, 6, 318, 407, 6045, 878, 1262, 340]",1.0,340,best_practice,119,Check if 'test_end' is not None before using it,,319,"        with self.conf_path.open(""r"") as f:","[220, 220, 220, 220, 220, 220, 220, 351, 2116, 13, 10414, 62, 6978, 13, 9654, 7203, 81, 4943, 355, 277, 25]"
üß† ML Signal: Accessing nested dictionary keys to update task configuration,"[8582, 100, 254, 10373, 26484, 25, 8798, 278, 28376, 22155, 8251, 284, 4296, 4876, 8398]",1.0,359,ml_signal,121,Accessing nested dictionary keys to update task configuration,,340,            return yaml.load(f),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441, 331, 43695, 13, 2220, 7, 69, 8]"
üß† ML Signal: Updating task configuration with new end time,"[8582, 100, 254, 10373, 26484, 25, 3205, 38734, 4876, 8398, 351, 649, 886, 640]",0.5,378,ml_signal,121,Updating task configuration with new end time,,359,            return yaml.load(f),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441, 331, 43695, 13, 2220, 7, 69, 8]"
‚úÖ Best Practice: Return the modified task for further use,"[26486, 227, 6705, 19939, 25, 8229, 262, 9518, 4876, 329, 2252, 779]",1.0,392,best_practice,126,Return the modified task for further use,,378,        This class tries to add more feature,"[220, 220, 220, 220, 220, 220, 220, 770, 1398, 8404, 284, 751, 517, 3895]"
‚úÖ Best Practice: Docstring provides a clear explanation of the method's purpose and behavior,"[26486, 227, 6705, 19939, 25, 14432, 8841, 3769, 257, 1598, 7468, 286, 262, 2446, 338, 4007, 290, 4069]",0.5,411,best_practice,121,Docstring provides a clear explanation of the method's purpose and behavior,,392,            return yaml.load(f),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441, 331, 43695, 13, 2220, 7, 69, 8]"
üß† ML Signal: Use of a dictionary to store task configuration,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 22155, 284, 3650, 4876, 8398]",1.0,419,ml_signal,127,Use of a dictionary to store task configuration,,411,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚úÖ Best Practice: Use of deepcopy to avoid modifying the original configuration,"[26486, 227, 6705, 19939, 25, 5765, 286, 2769, 30073, 284, 3368, 30620, 262, 2656, 8398]",1.0,442,best_practice,129,Use of deepcopy to avoid modifying the original configuration,,419,            h_path = Path(self.h_path),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 289, 62, 6978, 796, 10644, 7, 944, 13, 71, 62, 6978, 8]"
‚ö†Ô∏è SAST Risk (Low): Raising a generic NotImplementedError without specific context,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 7567, 1710, 257, 14276, 1892, 3546, 1154, 12061, 12331, 1231, 2176, 4732]",0.5,475,sast_risk,132,Raising a generic NotImplementedError without specific context,Low,442,"            task = replace_task_handler_with_cache(task, self.conf_path.parent)","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4876, 796, 6330, 62, 35943, 62, 30281, 62, 4480, 62, 23870, 7, 35943, 11, 2116, 13, 10414, 62, 6978, 13, 8000, 8]"
üß† ML Signal: Logging information about cache usage,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 1321, 546, 12940, 8748]",1.0,492,ml_signal,136,Logging information about cache usage,,475,        if self.train_start is not None:,"[220, 220, 220, 220, 220, 220, 220, 611, 2116, 13, 27432, 62, 9688, 318, 407, 6045, 25]"
üß† ML Signal: Logging information about prediction horizon override,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 1321, 546, 17724, 17810, 20957]",1.0,509,ml_signal,140,Logging information about prediction horizon override,,492,        if self.test_end is not None:,"[220, 220, 220, 220, 220, 220, 220, 611, 2116, 13, 9288, 62, 437, 318, 407, 6045, 25]"
üß† ML Signal: Dynamic modification of task configuration based on conditions,"[8582, 100, 254, 10373, 26484, 25, 26977, 17613, 286, 4876, 8398, 1912, 319, 3403]",1.0,558,ml_signal,142,Dynamic modification of task configuration based on conditions,,509,"            task[""dataset""][""kwargs""][""segments""][""test""] = seg[0], pd.Timestamp(self.test_end)","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4876, 14692, 19608, 292, 316, 1, 7131, 1, 46265, 22046, 1, 7131, 1, 325, 11726, 1, 7131, 1, 9288, 8973, 796, 384, 70, 58, 15, 4357, 279, 67, 13, 14967, 27823, 7, 944, 13, 9288, 62, 437, 8]"
üß† ML Signal: Logging a warning when automatic configuration fails,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 257, 6509, 618, 11353, 8398, 10143]",1.0,589,ml_signal,147,Logging a warning when automatic configuration fails,,558,        The basic task may not be the exactly same as the config from `conf_path` from __init__ due to,"[220, 220, 220, 220, 220, 220, 220, 383, 4096, 4876, 743, 407, 307, 262, 3446, 976, 355, 262, 4566, 422, 4600, 10414, 62, 6978, 63, 422, 11593, 15003, 834, 2233, 284]"
üß† ML Signal: Conditional replacement of handler with cache,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9014, 286, 21360, 351, 12940]",1.0,609,ml_signal,149,Conditional replacement of handler with cache,,589,        - user could implementing sublcass to change it for higher performance,"[220, 220, 220, 220, 220, 220, 220, 532, 2836, 714, 15427, 850, 44601, 562, 284, 1487, 340, 329, 2440, 2854]"
üß† ML Signal: Updating task configuration with start and end time,"[8582, 100, 254, 10373, 26484, 25, 3205, 38734, 4876, 8398, 351, 923, 290, 886, 640]",1.0,609,ml_signal,153,Updating task configuration with start and end time,,609,,[]
üß† ML Signal: Updating task configuration with external configuration,"[8582, 100, 254, 10373, 26484, 25, 3205, 38734, 4876, 8398, 351, 7097, 8398]",1.0,619,ml_signal,155,Updating task configuration with external configuration,,609,        # NOTE:,"[220, 220, 220, 220, 220, 220, 220, 1303, 24550, 25]"
üß† ML Signal: Logging the final task configuration,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 262, 2457, 4876, 8398]",1.0,652,ml_signal,157,Logging the final task configuration,,619,        # But is not always a valid. It is only valid in the predefined dataset `Alpha158` & `Alpha360`,"[220, 220, 220, 220, 220, 220, 220, 1303, 887, 318, 407, 1464, 257, 4938, 13, 632, 318, 691, 4938, 287, 262, 2747, 18156, 27039, 4600, 38077, 21273, 63, 1222, 4600, 38077, 15277, 63]"
üß† ML Signal: Usage of a basic task function for model tuning,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 4096, 4876, 2163, 329, 2746, 24549]",1.0,652,ml_signal,153,Usage of a basic task function for model tuning,,652,,[]
‚úÖ Best Practice: Consider using logging instead of print for better control over output,"[26486, 227, 6705, 19939, 25, 12642, 1262, 18931, 2427, 286, 3601, 329, 1365, 1630, 625, 5072]",1.0,662,best_practice,155,Consider using logging instead of print for better control over output,,652,        # NOTE:,"[220, 220, 220, 220, 220, 220, 220, 1303, 24550, 25]"
üß† ML Signal: Instantiation of a TrainerR object with an experiment name,"[8582, 100, 254, 10373, 26484, 25, 24470, 3920, 286, 257, 31924, 49, 2134, 351, 281, 6306, 1438]",1.0,695,ml_signal,157,Instantiation of a TrainerR object with an experiment name,,662,        # But is not always a valid. It is only valid in the predefined dataset `Alpha158` & `Alpha360`,"[220, 220, 220, 220, 220, 220, 220, 1303, 887, 318, 407, 1464, 257, 4938, 13, 632, 318, 691, 4938, 287, 262, 2747, 18156, 27039, 4600, 38077, 21273, 63, 1222, 4600, 38077, 15277, 63]"
üß† ML Signal: Passing a task to a trainer for execution,"[8582, 100, 254, 10373, 26484, 25, 46389, 257, 4876, 284, 257, 21997, 329, 9706]",1.0,710,ml_signal,159,Passing a task to a trainer for execution,,695,            # TODO:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 16926, 46, 25]"
‚úÖ Best Practice: Include type hints for better code readability and maintainability,"[26486, 227, 6705, 19939, 25, 40348, 2099, 20269, 329, 1365, 2438, 1100, 1799, 290, 5529, 1799]",1.0,743,best_practice,157,Include type hints for better code readability and maintainability,,710,        # But is not always a valid. It is only valid in the predefined dataset `Alpha158` & `Alpha360`,"[220, 220, 220, 220, 220, 220, 220, 1303, 887, 318, 407, 1464, 257, 4938, 13, 632, 318, 691, 4938, 287, 262, 2747, 18156, 27039, 4600, 38077, 21273, 63, 1222, 4600, 38077, 15277, 63]"
üß† ML Signal: Usage of a method that generates a basic task,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2446, 326, 18616, 257, 4096, 4876]",1.0,763,ml_signal,160,Usage of a method that generates a basic task,,743,            # - get horizon automatically from the expression!!!!,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 532, 651, 17810, 6338, 422, 262, 5408, 13896]"
üß† ML Signal: Usage of a task generator with specific parameters,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 4876, 17301, 351, 2176, 10007]",1.0,790,ml_signal,163,Usage of a task generator with specific parameters,,763,            if enable_handler_cache and self.h_path is not None:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 7139, 62, 30281, 62, 23870, 290, 2116, 13, 71, 62, 6978, 318, 407, 6045, 25]"
üß† ML Signal: Iterating over a list of tasks to modify each task,"[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 257, 1351, 286, 8861, 284, 13096, 1123, 4876]",1.0,819,ml_signal,166,Iterating over a list of tasks to modify each task,,790,"                self.logger.info(""The prediction horizon is overrided"")","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 6404, 1362, 13, 10951, 7203, 464, 17724, 17810, 318, 23170, 1384, 4943]"
üß† ML Signal: Modifying task dictionary to include a specific record,"[8582, 100, 254, 10373, 26484, 25, 3401, 4035, 4876, 22155, 284, 2291, 257, 2176, 1700]",1.0,864,ml_signal,168,Modifying task dictionary to include a specific record,,819,"                    task[""dataset""][""kwargs""][""handler""][""kwargs""][""label""] = [","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4876, 14692, 19608, 292, 316, 1, 7131, 1, 46265, 22046, 1, 7131, 1, 30281, 1, 7131, 1, 46265, 22046, 1, 7131, 1, 18242, 8973, 796, 685]"
üß† ML Signal: Returning a list of tasks,"[8582, 100, 254, 10373, 26484, 25, 42882, 257, 1351, 286, 8861]",1.0,884,ml_signal,170,Returning a list of tasks,,864,                    ],"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2361]"
üß† ML Signal: Method name suggests a pattern of training tasks in a rolling manner,"[8582, 100, 254, 10373, 26484, 25, 11789, 1438, 5644, 257, 3912, 286, 3047, 8861, 287, 257, 10708, 5642]",0.5,920,ml_signal,167,Method name suggests a pattern of training tasks in a rolling manner,,884,"                if isinstance(task[""dataset""][""kwargs""][""handler""], dict):","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 318, 39098, 7, 35943, 14692, 19608, 292, 316, 1, 7131, 1, 46265, 22046, 1, 7131, 1, 30281, 33116, 8633, 2599]"
‚úÖ Best Practice: Log actions to provide traceability and debugging information,"[26486, 227, 6705, 19939, 25, 5972, 4028, 284, 2148, 12854, 1799, 290, 28769, 1321]",0.5,971,best_practice,169,Log actions to provide traceability and debugging information,,920,"                        ""Ref($close, -{}) / Ref($close, -1) - 1"".format(self.horizon + 1)","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 366, 8134, 16763, 19836, 11, 532, 90, 30072, 1220, 6524, 16763, 19836, 11, 532, 16, 8, 532, 352, 1911, 18982, 7, 944, 13, 17899, 8637, 1343, 352, 8]"
‚ö†Ô∏è SAST Risk (Low): Potential risk if R.delete_exp does not handle exceptions properly,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 371, 13, 33678, 62, 11201, 857, 407, 5412, 13269, 6105]",0.5,1008,sast_risk,172,Potential risk if R.delete_exp does not handle exceptions properly,Low,971,"                    self.logger.warning(""Try to automatically configure the lablel but failed."")","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 6404, 1362, 13, 43917, 7203, 23433, 284, 6338, 17425, 262, 300, 540, 75, 475, 4054, 19570]"
‚úÖ Best Practice: Specific exception handling provides clarity on expected errors,"[26486, 227, 6705, 19939, 25, 17377, 6631, 9041, 3769, 16287, 319, 2938, 8563]",0.5,1033,best_practice,175,Specific exception handling provides clarity on expected errors,,1008,            # if we already have provided data source or we want to create one,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 611, 356, 1541, 423, 2810, 1366, 2723, 393, 356, 765, 284, 2251, 530]"
üß† ML Signal: Usage of a trainer object indicates a training process pattern,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 21997, 2134, 9217, 257, 3047, 1429, 3912]",0.5,1058,ml_signal,176,Usage of a trainer object indicates a training process pattern,,1033,            task = self._replace_handler_with_cache(task),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4876, 796, 2116, 13557, 33491, 62, 30281, 62, 4480, 62, 23870, 7, 35943, 8]"
üß† ML Signal: Passing a task list to a trainer suggests a batch processing pattern,"[8582, 100, 254, 10373, 26484, 25, 46389, 257, 4876, 1351, 284, 257, 21997, 5644, 257, 15458, 7587, 3912]",0.5,1083,ml_signal,176,Passing a task list to a trainer suggests a batch processing pattern,,1058,            task = self._replace_handler_with_cache(task),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4876, 796, 2116, 13557, 33491, 62, 30281, 62, 4480, 62, 23870, 7, 35943, 8]"
‚úÖ Best Practice: Consider adding a docstring to describe the purpose and functionality of the method.,"[26486, 227, 6705, 19939, 25, 12642, 4375, 257, 2205, 8841, 284, 6901, 262, 4007, 290, 11244, 286, 262, 2446, 13]",1.0,1108,best_practice,176,Consider adding a docstring to describe the purpose and functionality of the method.,,1083,            task = self._replace_handler_with_cache(task),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4876, 796, 2116, 13557, 33491, 62, 30281, 62, 4480, 62, 23870, 7, 35943, 8]"
"üß† ML Signal: Use of a custom RecorderCollector class, indicating a pattern for collecting and processing experiment data.","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 2183, 3311, 2875, 31337, 273, 1398, 11, 12739, 257, 3912, 329, 13157, 290, 7587, 6306, 1366, 13]",1.0,1108,ml_signal,183,"Use of a custom RecorderCollector class, indicating a pattern for collecting and processing experiment data.",,1108,,[]
"üß† ML Signal: Invocation of a callable object, suggesting a pattern of executing a process or computation.","[8582, 100, 254, 10373, 26484, 25, 10001, 5040, 286, 257, 869, 540, 2134, 11, 9524, 257, 3912, 286, 23710, 257, 1429, 393, 29964, 13]",0.5,1116,ml_signal,185,"Invocation of a callable object, suggesting a pattern of executing a process or computation.",,1108,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
"üß† ML Signal: Use of a context manager for experiment tracking, indicating a pattern for managing experiment lifecycle.","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 4732, 4706, 329, 6306, 9646, 11, 12739, 257, 3912, 329, 11149, 6306, 3868, 47510, 13]",0.5,1133,ml_signal,187,"Use of a context manager for experiment tracking, indicating a pattern for managing experiment lifecycle.",,1116,        This is for fast testing for model tunning.,"[220, 220, 220, 220, 220, 220, 220, 770, 318, 329, 3049, 4856, 329, 2746, 6278, 768, 13]"
"üß† ML Signal: Logging parameters, a common pattern in experiment tracking and ML workflows.","[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 10007, 11, 257, 2219, 3912, 287, 6306, 9646, 290, 10373, 670, 44041, 13]",0.5,1141,ml_signal,188,"Logging parameters, a common pattern in experiment tracking and ML workflows.",,1133,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚ö†Ô∏è SAST Risk (Low): Potential risk if 'res' contains sensitive data that should not be saved.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 705, 411, 6, 4909, 8564, 1366, 326, 815, 407, 307, 7448, 13]",0.5,1164,sast_risk,191,Potential risk if 'res' contains sensitive data that should not be saved.,Low,1141,        trainer = TrainerR(experiment_name=self.exp_name),"[220, 220, 220, 220, 220, 220, 220, 21997, 796, 31924, 49, 7, 23100, 3681, 62, 3672, 28, 944, 13, 11201, 62, 3672, 8]"
"üß† ML Signal: Saving objects, indicating a pattern for persisting experiment results.","[8582, 100, 254, 10373, 26484, 25, 34689, 5563, 11, 12739, 257, 3912, 329, 2774, 9665, 6306, 2482, 13]",0.5,1175,ml_signal,192,"Saving objects, indicating a pattern for persisting experiment results.",,1164,        trainer([task]),"[220, 220, 220, 220, 220, 220, 220, 21997, 26933, 35943, 12962]"
"üß† ML Signal: Storing a recorder ID, suggesting a pattern for tracking or referencing experiment sessions.","[8582, 100, 254, 10373, 26484, 25, 520, 3255, 257, 38156, 4522, 11, 9524, 257, 3912, 329, 9646, 393, 32578, 6306, 10991, 13]",1.0,1192,ml_signal,194,"Storing a recorder ID, suggesting a pattern for tracking or referencing experiment sessions.",,1175,    def get_task_list(self) -> List[dict]:,"[220, 220, 220, 825, 651, 62, 35943, 62, 4868, 7, 944, 8, 4613, 7343, 58, 11600, 5974]"
üß† ML Signal: Use of a recorder to track experiment results,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 38156, 284, 2610, 6306, 2482]",1.0,1215,ml_signal,191,Use of a recorder to track experiment results,,1192,        trainer = TrainerR(experiment_name=self.exp_name),"[220, 220, 220, 220, 220, 220, 220, 21997, 796, 31924, 49, 7, 23100, 3681, 62, 3672, 28, 944, 13, 11201, 62, 3672, 8]"
üß† ML Signal: Accessing configuration for task records,"[8582, 100, 254, 10373, 26484, 25, 8798, 278, 8398, 329, 4876, 4406]",1.0,1215,ml_signal,193,Accessing configuration for task records,,1215,,[]
‚úÖ Best Practice: Ensures records is always a list for consistent processing,"[26486, 227, 6705, 19939, 25, 48221, 942, 4406, 318, 1464, 257, 1351, 329, 6414, 7587]",1.0,1232,best_practice,195,Ensures records is always a list for consistent processing,,1215,"        """"""return a batch of tasks for rolling.""""""","[220, 220, 220, 220, 220, 220, 220, 37227, 7783, 257, 15458, 286, 8861, 329, 10708, 526, 15931]"
üß† ML Signal: Checking if a record is a subclass of SignalRecord,"[8582, 100, 254, 10373, 26484, 25, 39432, 611, 257, 1700, 318, 257, 47611, 286, 26484, 23739]",1.0,1265,ml_signal,198,Checking if a record is a subclass of SignalRecord,,1232,"            task, RollingGen(step=self.step, trunc_days=self.horizon + 1)","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4876, 11, 21567, 13746, 7, 9662, 28, 944, 13, 9662, 11, 40122, 62, 12545, 28, 944, 13, 17899, 8637, 1343, 352, 8]"
üß† ML Signal: Dynamic instance creation based on configuration,"[8582, 100, 254, 10373, 26484, 25, 26977, 4554, 6282, 1912, 319, 8398]",1.0,1296,ml_signal,203,Dynamic instance creation based on configuration,,1265,"            t[""record""] = [""qlib.workflow.record_temp.SignalRecord""]","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 256, 14692, 22105, 8973, 796, 14631, 80, 8019, 13, 1818, 11125, 13, 22105, 62, 29510, 13, 11712, 282, 23739, 8973]"
üß† ML Signal: Generating results for the record,"[8582, 100, 254, 10373, 26484, 25, 2980, 803, 2482, 329, 262, 1700]",1.0,1317,ml_signal,208,Generating results for the record,,1296,"        self.logger.info(""Deleting previous Rolling results"")","[220, 220, 220, 220, 220, 220, 220, 2116, 13, 6404, 1362, 13, 10951, 7203, 5005, 293, 889, 2180, 21567, 2482, 4943]"
‚úÖ Best Practice: Provides user feedback on where to find evaluation results,"[26486, 227, 6705, 19939, 25, 47081, 2836, 7538, 319, 810, 284, 1064, 12660, 2482]",1.0,1341,best_practice,210,Provides user feedback on where to find evaluation results,,1317,            # TODO: mlflow does not support permanently delete experiment,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 16926, 46, 25, 285, 1652, 9319, 857, 407, 1104, 15043, 12233, 6306]"
üß† ML Signal: Method likely part of a class with machine learning tasks,"[8582, 100, 254, 10373, 26484, 25, 11789, 1884, 636, 286, 257, 1398, 351, 4572, 4673, 8861]",0.5,1355,ml_signal,206,Method likely part of a class with machine learning tasks,,1341,    def _train_rolling_tasks(self):,"[220, 220, 220, 825, 4808, 27432, 62, 18886, 62, 83, 6791, 7, 944, 2599]"
"üß† ML Signal: Indicates a training process, relevant for ML model training","[8582, 100, 254, 10373, 26484, 25, 1423, 16856, 257, 3047, 1429, 11, 5981, 329, 10373, 2746, 3047]",0.5,1376,ml_signal,208,"Indicates a training process, relevant for ML model training",,1355,"        self.logger.info(""Deleting previous Rolling results"")","[220, 220, 220, 220, 220, 220, 220, 2116, 13, 6404, 1362, 13, 10951, 7203, 5005, 293, 889, 2180, 21567, 2482, 4943]"
"üß† ML Signal: Suggests ensemble methods, common in ML workflows","[8582, 100, 254, 10373, 26484, 25, 35042, 82, 34549, 5050, 11, 2219, 287, 10373, 670, 44041]",0.5,1400,ml_signal,210,"Suggests ensemble methods, common in ML workflows",,1376,            # TODO: mlflow does not support permanently delete experiment,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 16926, 46, 25, 285, 1652, 9319, 857, 407, 1104, 15043, 12233, 6306]"
"üß† ML Signal: Implies updating records, possibly for ML model state or results","[8582, 100, 254, 10373, 26484, 25, 34347, 444, 19698, 4406, 11, 5457, 329, 10373, 2746, 1181, 393, 2482]",1.0,1430,ml_signal,211,"Implies updating records, possibly for ML model state or results",,1400,            # it will  be moved to .trash and prevents creating the experiments with the same name,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 340, 481, 220, 307, 3888, 284, 764, 2213, 1077, 290, 15174, 4441, 262, 10256, 351, 262, 976, 1438]"
‚úÖ Best Practice: Ensures that the script runs only when executed directly,"[26486, 227, 6705, 19939, 25, 48221, 942, 326, 262, 4226, 4539, 691, 618, 10945, 3264]",1.0,1460,best_practice,211,Ensures that the script runs only when executed directly,,1430,            # it will  be moved to .trash and prevents creating the experiments with the same name,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 340, 481, 220, 307, 3888, 284, 764, 2213, 1077, 290, 15174, 4441, 262, 10256, 351, 262, 976, 1438]"
‚ö†Ô∏è SAST Risk (Low): Ensure auto_init() is safe and does not execute harmful operations,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 8295, 62, 15003, 3419, 318, 3338, 290, 857, 407, 12260, 13568, 4560]",1.0,1490,sast_risk,211,Ensure auto_init() is safe and does not execute harmful operations,Low,1460,            # it will  be moved to .trash and prevents creating the experiments with the same name,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 340, 481, 220, 307, 3888, 284, 764, 2213, 1077, 290, 15174, 4441, 262, 10256, 351, 262, 976, 1438]"
‚ö†Ô∏è SAST Risk (Low): fire.Fire can execute arbitrary code; ensure input is controlled,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2046, 13, 13543, 460, 12260, 14977, 2438, 26, 4155, 5128, 318, 6856]",1.0,1520,sast_risk,211,fire.Fire can execute arbitrary code; ensure input is controlled,Low,1490,            # it will  be moved to .trash and prevents creating the experiments with the same name,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 340, 481, 220, 307, 3888, 284, 764, 2213, 1077, 290, 15174, 4441, 262, 10256, 351, 262, 976, 1438]"
"üß† ML Signal: fire.Fire is often used for command-line interfaces, useful for ML scripts","[8582, 100, 254, 10373, 26484, 25, 2046, 13, 13543, 318, 1690, 973, 329, 3141, 12, 1370, 20314, 11, 4465, 329, 10373, 14750]",1.0,1550,ml_signal,211,"fire.Fire is often used for command-line interfaces, useful for ML scripts",,1520,            # it will  be moved to .trash and prevents creating the experiments with the same name,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 340, 481, 220, 307, 3888, 284, 764, 2213, 1077, 290, 15174, 4441, 262, 10256, 351, 262, 976, 1438]"
