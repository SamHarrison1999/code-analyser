[
  {
    "line": 11,
    "text": "from ...data.dataset import DatasetH",
    "annotation": "\u2705 Best Practice: Class docstring provides a brief description of the class purpose",
    "confidence": 1.0,
    "tokens": [
      6738,
      2644,
      7890,
      13,
      19608,
      292,
      316,
      1330,
      16092,
      292,
      316,
      39
    ],
    "start_token": 0,
    "end_token": 12,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      2205,
      8841,
      3769,
      257,
      4506,
      6764,
      286,
      262,
      1398,
      4007
    ],
    "label": "best_practice",
    "reason": "Class docstring provides a brief description of the class purpose"
  },
  {
    "line": 14,
    "text": "from ...data.dataset.weight import Reweighter",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameter values",
    "confidence": 1.0,
    "tokens": [
      6738,
      2644,
      7890,
      13,
      19608,
      292,
      316,
      13,
      6551,
      1330,
      16140,
      68,
      4799
    ],
    "start_token": 12,
    "end_token": 25,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      11507,
      3815
    ],
    "label": "ml_signal",
    "reason": "Use of default parameter values"
  },
  {
    "line": 16,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of NotImplementedError without a message",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 25,
    "end_token": 25,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      1892,
      3546,
      1154,
      12061,
      12331,
      1231,
      257,
      3275
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of NotImplementedError without a message"
  },
  {
    "line": 18,
    "text": "    \"\"\"CatBoost Model\"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Use of dictionary to store model parameters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      37227,
      21979,
      45686,
      9104,
      37811
    ],
    "start_token": 25,
    "end_token": 33,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      22155,
      284,
      3650,
      2746,
      10007
    ],
    "label": "ml_signal",
    "reason": "Use of dictionary to store model parameters"
  },
  {
    "line": 19,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of **kwargs to allow flexible parameter input",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 33,
    "end_token": 33,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      12429,
      46265,
      22046,
      284,
      1249,
      12846,
      11507,
      5128
    ],
    "label": "ml_signal",
    "reason": "Use of **kwargs to allow flexible parameter input"
  },
  {
    "line": 19,
    "text": "",
    "annotation": "\u2705 Best Practice: Initialize instance variables in the constructor",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 33,
    "end_token": 33,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      20768,
      1096,
      4554,
      9633,
      287,
      262,
      23772
    ],
    "label": "best_practice",
    "reason": "Initialize instance variables in the constructor"
  },
  {
    "line": 29,
    "text": "        self,",
    "annotation": "\u2705 Best Practice: Consider using a more explicit method to check for empty dataframes.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      11
    ],
    "start_token": 33,
    "end_token": 42,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      257,
      517,
      7952,
      2446,
      284,
      2198,
      329,
      6565,
      1366,
      37805,
      13
    ],
    "label": "best_practice",
    "reason": "Consider using a more explicit method to check for empty dataframes."
  },
  {
    "line": 53,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of GPU/CPU selection based on availability.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 42,
    "end_token": 42,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      11362,
      14,
      36037,
      6356,
      1912,
      319,
      11500,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of GPU/CPU selection based on availability."
  },
  {
    "line": 58,
    "text": "            w_train = reweighter.reweight(df_train).values",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of a CatBoost model with parameters.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      266,
      62,
      27432,
      796,
      302,
      732,
      4799,
      13,
      260,
      6551,
      7,
      7568,
      62,
      27432,
      737,
      27160
    ],
    "start_token": 42,
    "end_token": 69,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      257,
      5181,
      45686,
      2746,
      351,
      10007,
      13
    ],
    "label": "ml_signal",
    "reason": "Instantiation of a CatBoost model with parameters."
  },
  {
    "line": 60,
    "text": "        else:",
    "annotation": "\ud83e\udde0 ML Signal: Fitting a model with training and validation data.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 69,
    "end_token": 78,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      376,
      2535,
      257,
      2746,
      351,
      3047,
      290,
      21201,
      1366,
      13
    ],
    "label": "ml_signal",
    "reason": "Fitting a model with training and validation data."
  },
  {
    "line": 62,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Overwriting the evals_result parameter, which is mutable.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 78,
    "end_token": 78,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      3827,
      16502,
      262,
      819,
      874,
      62,
      20274,
      11507,
      11,
      543,
      318,
      4517,
      540,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Overwriting the evals_result parameter, which is mutable."
  },
  {
    "line": 62,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): No check if 'dataset' is None or of the correct type",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 78,
    "end_token": 78,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1400,
      2198,
      611,
      705,
      19608,
      292,
      316,
      6,
      318,
      6045,
      393,
      286,
      262,
      3376,
      2099
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "No check if 'dataset' is None or of the correct type"
  },
  {
    "line": 64,
    "text": "        valid_pool = Pool(data=x_valid, label=y_valid_1d, weight=w_valid)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Raises a generic exception, could be more specific",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4938,
      62,
      7742,
      796,
      19850,
      7,
      7890,
      28,
      87,
      62,
      12102,
      11,
      6167,
      28,
      88,
      62,
      12102,
      62,
      16,
      67,
      11,
      3463,
      28,
      86,
      62,
      12102,
      8
    ],
    "start_token": 78,
    "end_token": 112,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      7567,
      2696,
      257,
      14276,
      6631,
      11,
      714,
      307,
      517,
      2176
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Raises a generic exception, could be more specific"
  },
  {
    "line": 66,
    "text": "        # Initialize the catboost model",
    "annotation": "\ud83e\udde0 ML Signal: Usage of 'prepare' method on dataset, indicating data preprocessing",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      20768,
      1096,
      262,
      3797,
      39521,
      2746
    ],
    "start_token": 112,
    "end_token": 126,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      705,
      46012,
      533,
      6,
      2446,
      319,
      27039,
      11,
      12739,
      1366,
      662,
      36948
    ],
    "label": "ml_signal",
    "reason": "Usage of 'prepare' method on dataset, indicating data preprocessing"
  },
  {
    "line": 67,
    "text": "        self._params[\"iterations\"] = num_boost_round",
    "annotation": "\ud83e\udde0 ML Signal: Model prediction pattern on prepared data",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13557,
      37266,
      14692,
      2676,
      602,
      8973,
      796,
      997,
      62,
      39521,
      62,
      744
    ],
    "start_token": 126,
    "end_token": 146,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9104,
      17724,
      3912,
      319,
      5597,
      1366
    ],
    "label": "ml_signal",
    "reason": "Model prediction pattern on prepared data"
  },
  {
    "line": 67,
    "text": "        self._params[\"iterations\"] = num_boost_round",
    "annotation": "\u2705 Best Practice: Using pd.Series to maintain index alignment with input data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13557,
      37266,
      14692,
      2676,
      602,
      8973,
      796,
      997,
      62,
      39521,
      62,
      744
    ],
    "start_token": 146,
    "end_token": 166,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      279,
      67,
      13,
      27996,
      284,
      5529,
      6376,
      19114,
      351,
      5128,
      1366
    ],
    "label": "best_practice",
    "reason": "Using pd.Series to maintain index alignment with input data"
  },
  {
    "line": 73,
    "text": "        # train the model",
    "annotation": "\ud83e\udde0 ML Signal: Usage of model's feature importance method, indicating model interpretability practices",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      4512,
      262,
      2746
    ],
    "start_token": 166,
    "end_token": 177,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2746,
      338,
      3895,
      6817,
      2446,
      11,
      12739,
      2746,
      6179,
      1799,
      6593
    ],
    "label": "ml_signal",
    "reason": "Usage of model's feature importance method, indicating model interpretability practices"
  },
  {
    "line": 73,
    "text": "        # train the model",
    "annotation": "\u2705 Best Practice: Using pd.Series for structured data representation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      4512,
      262,
      2746
    ],
    "start_token": 177,
    "end_token": 188,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      279,
      67,
      13,
      27996,
      329,
      20793,
      1366,
      10552
    ],
    "label": "best_practice",
    "reason": "Using pd.Series for structured data representation"
  },
  {
    "line": 76,
    "text": "        evals_result = self.model.get_evals_result()",
    "annotation": "\ud83e\udde0 ML Signal: Dynamic feature importance retrieval using model's method",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      819,
      874,
      62,
      20274,
      796,
      2116,
      13,
      19849,
      13,
      1136,
      62,
      1990,
      874,
      62,
      20274,
      3419
    ],
    "start_token": 188,
    "end_token": 211,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      26977,
      3895,
      6817,
      45069,
      1262,
      2746,
      338,
      2446
    ],
    "label": "ml_signal",
    "reason": "Dynamic feature importance retrieval using model's method"
  },
  {
    "line": 77,
    "text": "        evals_result[\"train\"] = list(evals_result[\"learn\"].values())[0]",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential misuse of *args and **kwargs if not properly validated",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      819,
      874,
      62,
      20274,
      14692,
      27432,
      8973,
      796,
      1351,
      7,
      1990,
      874,
      62,
      20274,
      14692,
      35720,
      1,
      4083,
      27160,
      28955,
      58,
      15,
      60
    ],
    "start_token": 211,
    "end_token": 241,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      29169,
      286,
      1635,
      22046,
      290,
      12429,
      46265,
      22046,
      611,
      407,
      6105,
      31031
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential misuse of *args and **kwargs if not properly validated"
  },
  {
    "line": 77,
    "text": "        evals_result[\"train\"] = list(evals_result[\"learn\"].values())[0]",
    "annotation": "\u2705 Best Practice: Sorting feature importance for better interpretability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      819,
      874,
      62,
      20274,
      14692,
      27432,
      8973,
      796,
      1351,
      7,
      1990,
      874,
      62,
      20274,
      14692,
      35720,
      1,
      4083,
      27160,
      28955,
      58,
      15,
      60
    ],
    "start_token": 241,
    "end_token": 271,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      311,
      24707,
      3895,
      6817,
      329,
      1365,
      6179,
      1799
    ],
    "label": "best_practice",
    "reason": "Sorting feature importance for better interpretability"
  },
  {
    "line": 77,
    "text": "        evals_result[\"train\"] = list(evals_result[\"learn\"].values())[0]",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of a model class, indicating model usage",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      819,
      874,
      62,
      20274,
      14692,
      27432,
      8973,
      796,
      1351,
      7,
      1990,
      874,
      62,
      20274,
      14692,
      35720,
      1,
      4083,
      27160,
      28955,
      58,
      15,
      60
    ],
    "start_token": 271,
    "end_token": 301,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      257,
      2746,
      1398,
      11,
      12739,
      2746,
      8748
    ],
    "label": "ml_signal",
    "reason": "Instantiation of a model class, indicating model usage"
  },
  {
    "line": 77,
    "text": "        evals_result[\"train\"] = list(evals_result[\"learn\"].values())[0]",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential risk if CatBoostModel is not defined or imported",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      819,
      874,
      62,
      20274,
      14692,
      27432,
      8973,
      796,
      1351,
      7,
      1990,
      874,
      62,
      20274,
      14692,
      35720,
      1,
      4083,
      27160,
      28955,
      58,
      15,
      60
    ],
    "start_token": 301,
    "end_token": 331,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2526,
      611,
      5181,
      45686,
      17633,
      318,
      407,
      5447,
      393,
      17392
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential risk if CatBoostModel is not defined or imported"
  }
]