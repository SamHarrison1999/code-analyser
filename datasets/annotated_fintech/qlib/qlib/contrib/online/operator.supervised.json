[
  {
    "line": 6,
    "text": "",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 0,
    "end_token": 0,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 8,
    "text": "import pandas as pd",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      11748,
      19798,
      292,
      355,
      279,
      67
    ],
    "start_token": 0,
    "end_token": 6,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 10,
    "text": "import qlib",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      11748,
      10662,
      8019
    ],
    "start_token": 6,
    "end_token": 9,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 12,
    "text": "",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 9,
    "end_token": 9,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 14,
    "text": "from ...log import get_module_logger",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      2644,
      6404,
      1330,
      651,
      62,
      21412,
      62,
      6404,
      1362
    ],
    "start_token": 9,
    "end_token": 19,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 16,
    "text": "from ..evaluate import risk_analysis",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      11485,
      49786,
      1330,
      2526,
      62,
      20930
    ],
    "start_token": 19,
    "end_token": 26,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 18,
    "text": "",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 26,
    "end_token": 26,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 19,
    "text": "from .manager import UserManager",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      764,
      37153,
      1330,
      11787,
      13511
    ],
    "start_token": 26,
    "end_token": 32,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 19,
    "text": "from .manager import UserManager",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      764,
      37153,
      1330,
      11787,
      13511
    ],
    "start_token": 32,
    "end_token": 38,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 25,
    "text": "",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 38,
    "end_token": 38,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 26,
    "text": "",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 38,
    "end_token": 38,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 25,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of a logger for logging information is a good practice for debugging and monitoring.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 38,
    "end_token": 38,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      257,
      49706,
      329,
      18931,
      1321,
      318,
      257,
      922,
      3357,
      329,
      28769,
      290,
      9904,
      13
    ],
    "label": "best_practice",
    "reason": "Use of a logger for logging information is a good practice for debugging and monitoring."
  },
  {
    "line": 26,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Storing client configuration, which could be used to understand user behavior or preferences.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 38,
    "end_token": 38,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      520,
      3255,
      5456,
      8398,
      11,
      543,
      714,
      307,
      973,
      284,
      1833,
      2836,
      4069,
      393,
      15387,
      13
    ],
    "label": "ml_signal",
    "reason": "Storing client configuration, which could be used to understand user behavior or preferences."
  },
  {
    "line": 44,
    "text": "                The qlib client config file(.yaml)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): No validation on 'client' input, could lead to incorrect file access",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      383,
      10662,
      8019,
      5456,
      4566,
      2393,
      7,
      13,
      88,
      43695,
      8
    ],
    "start_token": 38,
    "end_token": 64,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1400,
      21201,
      319,
      705,
      16366,
      6,
      5128,
      11,
      714,
      1085,
      284,
      11491,
      2393,
      1895
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "No validation on 'client' input, could lead to incorrect file access"
  },
  {
    "line": 46,
    "text": "                Path to save user account.",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): No validation on 'path' input, could lead to incorrect file access",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      10644,
      284,
      3613,
      2836,
      1848,
      13
    ],
    "start_token": 64,
    "end_token": 85,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1400,
      21201,
      319,
      705,
      6978,
      6,
      5128,
      11,
      714,
      1085,
      284,
      11491,
      2393,
      1895
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "No validation on 'path' input, could lead to incorrect file access"
  },
  {
    "line": 48,
    "text": "                Trade date, when the generated order list will be traded.",
    "annotation": "\ud83e\udde0 ML Signal: Loading user data, indicative of user management operations",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9601,
      3128,
      11,
      618,
      262,
      7560,
      1502,
      1351,
      481,
      307,
      14018,
      13
    ],
    "start_token": 85,
    "end_token": 112,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      12320,
      2836,
      1366,
      11,
      29105,
      286,
      2836,
      4542,
      4560
    ],
    "label": "ml_signal",
    "reason": "Loading user data, indicative of user management operations"
  },
  {
    "line": 53,
    "text": "            trade_date: pd.Timestamp",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): No validation on 'date' format, could lead to runtime errors",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3292,
      62,
      4475,
      25,
      279,
      67,
      13,
      14967,
      27823
    ],
    "start_token": 112,
    "end_token": 132,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1400,
      21201,
      319,
      705,
      4475,
      6,
      5794,
      11,
      714,
      1085,
      284,
      19124,
      8563
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "No validation on 'date' format, could lead to runtime errors"
  },
  {
    "line": 55,
    "text": "        qlib.init_from_yaml_conf(client)",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential for incorrect date handling if 'is_tradable_date' logic is flawed",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      10662,
      8019,
      13,
      15003,
      62,
      6738,
      62,
      88,
      43695,
      62,
      10414,
      7,
      16366,
      8
    ],
    "start_token": 132,
    "end_token": 153,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      329,
      11491,
      3128,
      9041,
      611,
      705,
      271,
      62,
      2213,
      324,
      540,
      62,
      4475,
      6,
      9156,
      318,
      19556
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential for incorrect date handling if 'is_tradable_date' logic is flawed"
  },
  {
    "line": 56,
    "text": "        um = UserManager(user_data_path=pathlib.Path(path))",
    "annotation": "\u2705 Best Practice: Use f-string for better readability and performance",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      23781,
      796,
      11787,
      13511,
      7,
      7220,
      62,
      7890,
      62,
      6978,
      28,
      6978,
      8019,
      13,
      15235,
      7,
      6978,
      4008
    ],
    "start_token": 153,
    "end_token": 178,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      277,
      12,
      8841,
      329,
      1365,
      1100,
      1799,
      290,
      2854
    ],
    "label": "best_practice",
    "reason": "Use f-string for better readability and performance"
  },
  {
    "line": 56,
    "text": "        um = UserManager(user_data_path=pathlib.Path(path))",
    "annotation": "\ud83e\udde0 ML Signal: Predicting previous trading date, indicative of financial operations",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      23781,
      796,
      11787,
      13511,
      7,
      7220,
      62,
      7890,
      62,
      6978,
      28,
      6978,
      8019,
      13,
      15235,
      7,
      6978,
      4008
    ],
    "start_token": 178,
    "end_token": 203,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      49461,
      278,
      2180,
      7313,
      3128,
      11,
      29105,
      286,
      3176,
      4560
    ],
    "label": "ml_signal",
    "reason": "Predicting previous trading date, indicative of financial operations"
  },
  {
    "line": 68,
    "text": "        \"\"\"Add a new user into the a folder to run 'online' module.",
    "annotation": "\u2705 Best Practice: Ensure the path exists or handle exceptions if it doesn't",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227,
      4550,
      257,
      649,
      2836,
      656,
      262,
      257,
      9483,
      284,
      1057,
      705,
      25119,
      6,
      8265,
      13
    ],
    "start_token": 203,
    "end_token": 226,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      48987,
      262,
      3108,
      7160,
      393,
      5412,
      13269,
      611,
      340,
      1595,
      470
    ],
    "label": "best_practice",
    "reason": "Ensure the path exists or handle exceptions if it doesn't"
  },
  {
    "line": 70,
    "text": "        Parameters",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Ensure the YAML file is trusted to prevent code execution vulnerabilities",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      40117
    ],
    "start_token": 226,
    "end_token": 234,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      48987,
      262,
      575,
      2390,
      43,
      2393,
      318,
      13467,
      284,
      2948,
      2438,
      9706,
      23805
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Ensure the YAML file is trusted to prevent code execution vulnerabilities"
  },
  {
    "line": 72,
    "text": "        id : str",
    "annotation": "\ud83e\udde0 ML Signal: Usage of UserManager class could indicate user management operations",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4686,
      1058,
      965
    ],
    "start_token": 234,
    "end_token": 244,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      11787,
      13511,
      1398,
      714,
      7603,
      2836,
      4542,
      4560
    ],
    "label": "ml_signal",
    "reason": "Usage of UserManager class could indicate user management operations"
  },
  {
    "line": 74,
    "text": "        config : str",
    "annotation": "\ud83e\udde0 ML Signal: Usage of date manipulation and validation",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4566,
      1058,
      965
    ],
    "start_token": 244,
    "end_token": 254,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      3128,
      17512,
      290,
      21201
    ],
    "label": "ml_signal",
    "reason": "Usage of date manipulation and validation"
  },
  {
    "line": 76,
    "text": "        path : str",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Ensure the date validation logic is correct to prevent logical errors",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3108,
      1058,
      965
    ],
    "start_token": 254,
    "end_token": 264,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      48987,
      262,
      3128,
      21201,
      9156,
      318,
      3376,
      284,
      2948,
      12219,
      8563
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Ensure the date validation logic is correct to prevent logical errors"
  },
  {
    "line": 76,
    "text": "        path : str",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for format string vulnerability if add_date is not sanitized",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3108,
      1058,
      965
    ],
    "start_token": 264,
    "end_token": 274,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      5794,
      4731,
      15131,
      611,
      751,
      62,
      4475,
      318,
      407,
      5336,
      36951
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for format string vulnerability if add_date is not sanitized"
  },
  {
    "line": 76,
    "text": "        path : str",
    "annotation": "\ud83e\udde0 ML Signal: Adding a user with specific configurations",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3108,
      1058,
      965
    ],
    "start_token": 274,
    "end_token": 284,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      18247,
      257,
      2836,
      351,
      2176,
      25412
    ],
    "label": "ml_signal",
    "reason": "Adding a user with specific configurations"
  },
  {
    "line": 76,
    "text": "        path : str",
    "annotation": "\u2705 Best Practice: Include a docstring to describe the function's purpose and parameters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3108,
      1058,
      965
    ],
    "start_token": 284,
    "end_token": 294,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      40348,
      257,
      2205,
      8841,
      284,
      6901,
      262,
      2163,
      338,
      4007,
      290,
      10007
    ],
    "label": "best_practice",
    "reason": "Include a docstring to describe the function's purpose and parameters"
  },
  {
    "line": 85,
    "text": "        if not is_tradable_date(add_date):",
    "annotation": "\ud83e\udde0 ML Signal: Usage of UserManager class to manage user data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      407,
      318,
      62,
      2213,
      324,
      540,
      62,
      4475,
      7,
      2860,
      62,
      4475,
      2599
    ],
    "start_token": 294,
    "end_token": 315,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      11787,
      13511,
      1398,
      284,
      6687,
      2836,
      1366
    ],
    "label": "ml_signal",
    "reason": "Usage of UserManager class to manage user data"
  },
  {
    "line": 87,
    "text": "        um.add_user(user_id=id, config_file=config, add_date=add_date)",
    "annotation": "\ud83e\udde0 ML Signal: Method call to remove a user by id",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      23781,
      13,
      2860,
      62,
      7220,
      7,
      7220,
      62,
      312,
      28,
      312,
      11,
      4566,
      62,
      7753,
      28,
      11250,
      11,
      751,
      62,
      4475,
      28,
      2860,
      62,
      4475,
      8
    ],
    "start_token": 315,
    "end_token": 348,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      869,
      284,
      4781,
      257,
      2836,
      416,
      4686
    ],
    "label": "ml_signal",
    "reason": "Method call to remove a user by id"
  },
  {
    "line": 95,
    "text": "            User id, should be unique.",
    "annotation": "\u2705 Best Practice: Descriptive variable names improve code readability.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      11787,
      4686,
      11,
      815,
      307,
      3748,
      13
    ],
    "start_token": 348,
    "end_token": 366,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2935,
      6519,
      425,
      7885,
      3891,
      2987,
      2438,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Descriptive variable names improve code readability."
  },
  {
    "line": 98,
    "text": "        \"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over users to generate predictions is a common pattern in ML applications.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 366,
    "end_token": 374,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      2985,
      284,
      7716,
      16277,
      318,
      257,
      2219,
      3912,
      287,
      10373,
      5479,
      13
    ],
    "label": "ml_signal",
    "reason": "Iterating over users to generate predictions is a common pattern in ML applications."
  },
  {
    "line": 100,
    "text": "        um.remove_user(user_id=id)",
    "annotation": "\ud83e\udde0 ML Signal: Accessing model data with a specific date is a common pattern in time-series ML models.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      23781,
      13,
      28956,
      62,
      7220,
      7,
      7220,
      62,
      312,
      28,
      312,
      8
    ],
    "start_token": 374,
    "end_token": 393,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8798,
      278,
      2746,
      1366,
      351,
      257,
      2176,
      3128,
      318,
      257,
      2219,
      3912,
      287,
      640,
      12,
      25076,
      10373,
      4981,
      13
    ],
    "label": "ml_signal",
    "reason": "Accessing model data with a specific date is a common pattern in time-series ML models."
  },
  {
    "line": 102,
    "text": "    def generate(self, date, path):",
    "annotation": "\ud83e\udde0 ML Signal: Predicting using a model is a core ML operation.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      7716,
      7,
      944,
      11,
      3128,
      11,
      3108,
      2599
    ],
    "start_token": 393,
    "end_token": 405,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      49461,
      278,
      1262,
      257,
      2746,
      318,
      257,
      4755,
      10373,
      4905,
      13
    ],
    "label": "ml_signal",
    "reason": "Predicting using a model is a core ML operation."
  },
  {
    "line": 102,
    "text": "    def generate(self, date, path):",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Ensure the path is validated to prevent path traversal vulnerabilities.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      7716,
      7,
      944,
      11,
      3128,
      11,
      3108,
      2599
    ],
    "start_token": 405,
    "end_token": 417,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      48987,
      262,
      3108,
      318,
      31031,
      284,
      2948,
      3108,
      33038,
      282,
      23805,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Ensure the path is validated to prevent path traversal vulnerabilities."
  },
  {
    "line": 108,
    "text": "            Trade date, when the generated order list will be traded.",
    "annotation": "\ud83e\udde0 ML Signal: Updating strategy based on model predictions is a common pattern in algorithmic trading.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9601,
      3128,
      11,
      618,
      262,
      7560,
      1502,
      1351,
      481,
      307,
      14018,
      13
    ],
    "start_token": 417,
    "end_token": 440,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3205,
      38734,
      4811,
      1912,
      319,
      2746,
      16277,
      318,
      257,
      2219,
      3912,
      287,
      8385,
      9383,
      7313,
      13
    ],
    "label": "ml_signal",
    "reason": "Updating strategy based on model predictions is a common pattern in algorithmic trading."
  },
  {
    "line": 108,
    "text": "            Trade date, when the generated order list will be traded.",
    "annotation": "\ud83e\udde0 ML Signal: Generating trade decisions based on predictions is a key step in trading algorithms.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9601,
      3128,
      11,
      618,
      262,
      7560,
      1502,
      1351,
      481,
      307,
      14018,
      13
    ],
    "start_token": 440,
    "end_token": 463,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2980,
      803,
      3292,
      5370,
      1912,
      319,
      16277,
      318,
      257,
      1994,
      2239,
      287,
      7313,
      16113,
      13
    ],
    "label": "ml_signal",
    "reason": "Generating trade decisions based on predictions is a key step in trading algorithms."
  },
  {
    "line": 115,
    "text": "            # get and save the score at predict date",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Ensure the path is validated to prevent path traversal vulnerabilities.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      651,
      290,
      3613,
      262,
      4776,
      379,
      4331,
      3128
    ],
    "start_token": 463,
    "end_token": 483,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      48987,
      262,
      3108,
      318,
      31031,
      284,
      2948,
      3108,
      33038,
      282,
      23805,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Ensure the path is validated to prevent path traversal vulnerabilities."
  },
  {
    "line": 116,
    "text": "            input_data = user.model.get_data_with_date(pred_date)",
    "annotation": "\u2705 Best Practice: Logging important actions helps in monitoring and debugging.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      5128,
      62,
      7890,
      796,
      2836,
      13,
      19849,
      13,
      1136,
      62,
      7890,
      62,
      4480,
      62,
      4475,
      7,
      28764,
      62,
      4475,
      8
    ],
    "start_token": 483,
    "end_token": 514,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5972,
      2667,
      1593,
      4028,
      5419,
      287,
      9904,
      290,
      28769,
      13
    ],
    "label": "best_practice",
    "reason": "Logging important actions helps in monitoring and debugging."
  },
  {
    "line": 126,
    "text": "                current=user.account.current_position,",
    "annotation": "\ud83e\udde0 ML Signal: Saving user data after processing is a common pattern in user-centric applications.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1459,
      28,
      7220,
      13,
      23317,
      13,
      14421,
      62,
      9150,
      11
    ],
    "start_token": 514,
    "end_token": 539,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      34689,
      2836,
      1366,
      706,
      7587,
      318,
      257,
      2219,
      3912,
      287,
      2836,
      12,
      28577,
      5479,
      13
    ],
    "label": "ml_signal",
    "reason": "Saving user data after processing is a common pattern in user-centric applications."
  },
  {
    "line": 126,
    "text": "                current=user.account.current_position,",
    "annotation": "\u2705 Best Practice: Consider adding type hints for the method parameters for better readability and maintainability.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1459,
      28,
      7220,
      13,
      23317,
      13,
      14421,
      62,
      9150,
      11
    ],
    "start_token": 539,
    "end_token": 564,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      4375,
      2099,
      20269,
      329,
      262,
      2446,
      10007,
      329,
      1365,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Consider adding type hints for the method parameters for better readability and maintainability."
  },
  {
    "line": 129,
    "text": "            )",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over user data could indicate a pattern of user-specific operations.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 564,
    "end_token": 576,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      2836,
      1366,
      714,
      7603,
      257,
      3912,
      286,
      2836,
      12,
      11423,
      4560,
      13
    ],
    "label": "ml_signal",
    "reason": "Iterating over user data could indicate a pattern of user-specific operations."
  },
  {
    "line": 131,
    "text": "                order_list=order_list,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for ValueError to be raised; ensure this is handled where the method is called.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1502,
      62,
      4868,
      28,
      2875,
      62,
      4868,
      11
    ],
    "start_token": 576,
    "end_token": 599,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      11052,
      12331,
      284,
      307,
      4376,
      26,
      4155,
      428,
      318,
      12118,
      810,
      262,
      2446,
      318,
      1444,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for ValueError to be raised; ensure this is handled where the method is called."
  },
  {
    "line": 138,
    "text": "    def execute(self, date, exchange_config, path):",
    "annotation": "\ud83e\udde0 ML Signal: Loading order lists for users could be a pattern for user-specific trading behavior.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      12260,
      7,
      944,
      11,
      3128,
      11,
      5163,
      62,
      11250,
      11,
      3108,
      2599
    ],
    "start_token": 599,
    "end_token": 615,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      12320,
      1502,
      8341,
      329,
      2985,
      714,
      307,
      257,
      3912,
      329,
      2836,
      12,
      11423,
      7313,
      4069,
      13
    ],
    "label": "ml_signal",
    "reason": "Loading order lists for users could be a pattern for user-specific trading behavior."
  },
  {
    "line": 143,
    "text": "           date : str (YYYY-MM-DD)",
    "annotation": "\ud83e\udde0 ML Signal: Executing trades for users could indicate a pattern of user-specific trading actions.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3128,
      1058,
      965,
      357,
      26314,
      26314,
      12,
      12038,
      12,
      16458,
      8
    ],
    "start_token": 615,
    "end_token": 636,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8393,
      15129,
      17674,
      329,
      2985,
      714,
      7603,
      257,
      3912,
      286,
      2836,
      12,
      11423,
      7313,
      4028,
      13
    ],
    "label": "ml_signal",
    "reason": "Executing trades for users could indicate a pattern of user-specific trading actions."
  },
  {
    "line": 145,
    "text": "           exchange_config: str",
    "annotation": "\ud83e\udde0 ML Signal: Logging user-specific actions could be used to track user behavior patterns.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      5163,
      62,
      11250,
      25,
      965
    ],
    "start_token": 636,
    "end_token": 651,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      2836,
      12,
      11423,
      4028,
      714,
      307,
      973,
      284,
      2610,
      2836,
      4069,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "Logging user-specific actions could be used to track user behavior patterns."
  },
  {
    "line": 156,
    "text": "                    \"The account data is not newest! last trading date {}, today {}\".format(",
    "annotation": "\u2705 Best Practice: Use a more descriptive variable name than 'type' to avoid shadowing built-in names.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      464,
      1848,
      1366,
      318,
      407,
      15530,
      0,
      938,
      7313,
      3128,
      1391,
      5512,
      1909,
      23884,
      1911,
      18982,
      7
    ],
    "start_token": 651,
    "end_token": 688,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      257,
      517,
      35644,
      7885,
      1438,
      621,
      705,
      4906,
      6,
      284,
      3368,
      9082,
      278,
      3170,
      12,
      259,
      3891,
      13
    ],
    "label": "best_practice",
    "reason": "Use a more descriptive variable name than 'type' to avoid shadowing built-in names."
  },
  {
    "line": 158,
    "text": "                    )",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for format string vulnerability if 'type' is user-controlled.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 688,
    "end_token": 708,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      5794,
      4731,
      15131,
      611,
      705,
      4906,
      6,
      318,
      2836,
      12,
      14401,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for format string vulnerability if 'type' is user-controlled."
  },
  {
    "line": 160,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a method named 'init' suggests initialization pattern.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 708,
    "end_token": 708,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      2446,
      3706,
      705,
      15003,
      6,
      5644,
      37588,
      3912,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of a method named 'init' suggests initialization pattern."
  },
  {
    "line": 162,
    "text": "            # will not modify the trade_account after executing",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over users suggests a pattern of processing multiple entities.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      481,
      407,
      13096,
      262,
      3292,
      62,
      23317,
      706,
      23710
    ],
    "start_token": 708,
    "end_token": 729,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      2985,
      5644,
      257,
      3912,
      286,
      7587,
      3294,
      12066,
      13
    ],
    "label": "ml_signal",
    "reason": "Iterating over users suggests a pattern of processing multiple entities."
  },
  {
    "line": 166,
    "text": "                trade_info=trade_info,",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on 'type' indicates a decision-making pattern.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3292,
      62,
      10951,
      28,
      25351,
      62,
      10951,
      11
    ],
    "start_token": 729,
    "end_token": 752,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      705,
      4906,
      6,
      9217,
      257,
      2551,
      12,
      8601,
      3912,
      13
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on 'type' indicates a decision-making pattern."
  },
  {
    "line": 171,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for logic error if date comparison is incorrect.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 752,
    "end_token": 752,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      9156,
      4049,
      611,
      3128,
      7208,
      318,
      11491,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for logic error if date comparison is incorrect."
  },
  {
    "line": 177,
    "text": "        date : str (YYYY-MM-DD)",
    "annotation": "\ud83e\udde0 ML Signal: Loading trade information suggests a data retrieval pattern.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3128,
      1058,
      965,
      357,
      26314,
      26314,
      12,
      12038,
      12,
      16458,
      8
    ],
    "start_token": 752,
    "end_token": 770,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      12320,
      3292,
      1321,
      5644,
      257,
      1366,
      45069,
      3912,
      13
    ],
    "label": "ml_signal",
    "reason": "Loading trade information suggests a data retrieval pattern."
  },
  {
    "line": 181,
    "text": "        type : str",
    "annotation": "\ud83e\udde0 ML Signal: Loading score series indicates a pattern of data processing.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2099,
      1058,
      965
    ],
    "start_token": 770,
    "end_token": 780,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      12320,
      4776,
      2168,
      9217,
      257,
      3912,
      286,
      1366,
      7587,
      13
    ],
    "label": "ml_signal",
    "reason": "Loading score series indicates a pattern of data processing."
  },
  {
    "line": 181,
    "text": "        type : str",
    "annotation": "\ud83e\udde0 ML Signal: Updating account suggests a pattern of state modification.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2099,
      1058,
      965
    ],
    "start_token": 780,
    "end_token": 790,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3205,
      38734,
      1848,
      5644,
      257,
      3912,
      286,
      1181,
      17613,
      13
    ],
    "label": "ml_signal",
    "reason": "Updating account suggests a pattern of state modification."
  },
  {
    "line": 181,
    "text": "        type : str",
    "annotation": "\ud83e\udde0 ML Signal: Generating portfolio metrics indicates a pattern of data analysis.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2099,
      1058,
      965
    ],
    "start_token": 790,
    "end_token": 800,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2980,
      803,
      15320,
      20731,
      9217,
      257,
      3912,
      286,
      1366,
      3781,
      13
    ],
    "label": "ml_signal",
    "reason": "Generating portfolio metrics indicates a pattern of data analysis."
  },
  {
    "line": 181,
    "text": "        type : str",
    "annotation": "\ud83e\udde0 ML Signal: Logging information suggests a pattern of monitoring or debugging.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2099,
      1058,
      965
    ],
    "start_token": 800,
    "end_token": 810,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      1321,
      5644,
      257,
      3912,
      286,
      9904,
      393,
      28769,
      13
    ],
    "label": "ml_signal",
    "reason": "Logging information suggests a pattern of monitoring or debugging."
  },
  {
    "line": 181,
    "text": "        type : str",
    "annotation": "\ud83e\udde0 ML Signal: Saving user data suggests a pattern of persistence.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2099,
      1058,
      965
    ],
    "start_token": 810,
    "end_token": 820,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      34689,
      2836,
      1366,
      5644,
      257,
      3912,
      286,
      30802,
      13
    ],
    "label": "ml_signal",
    "reason": "Saving user data suggests a pattern of persistence."
  },
  {
    "line": 181,
    "text": "        type : str",
    "annotation": "\ud83e\udde0 ML Signal: Logging update information indicates a pattern of status reporting.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2099,
      1058,
      965
    ],
    "start_token": 820,
    "end_token": 830,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      4296,
      1321,
      9217,
      257,
      3912,
      286,
      3722,
      6447,
      13
    ],
    "label": "ml_signal",
    "reason": "Logging update information indicates a pattern of status reporting."
  },
  {
    "line": 201,
    "text": "            # load trade info and update account",
    "annotation": "\u2705 Best Practice: Ensure the user folder is created before proceeding with the simulation.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      3440,
      3292,
      7508,
      290,
      4296,
      1848
    ],
    "start_token": 830,
    "end_token": 848,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      48987,
      262,
      2836,
      9483,
      318,
      2727,
      878,
      18788,
      351,
      262,
      18640,
      13
    ],
    "label": "best_practice",
    "reason": "Ensure the user folder is created before proceeding with the simulation."
  },
  {
    "line": 203,
    "text": "                user_path=(pathlib.Path(path) / user_id), trade_date=trade_date",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of user management and account setup.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2836,
      62,
      6978,
      16193,
      6978,
      8019,
      13,
      15235,
      7,
      6978,
      8,
      1220,
      2836,
      62,
      312,
      828,
      3292,
      62,
      4475,
      28,
      25351,
      62,
      4475
    ],
    "start_token": 848,
    "end_token": 886,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      2836,
      4542,
      290,
      1848,
      9058,
      13
    ],
    "label": "ml_signal",
    "reason": "Initialization of user management and account setup."
  },
  {
    "line": 205,
    "text": "            score_series = load_score_series((pathlib.Path(path) / user_id), trade_date)",
    "annotation": "\u2705 Best Practice: Convert start and end dates to Timestamp for consistency in date operations.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4776,
      62,
      25076,
      796,
      3440,
      62,
      26675,
      62,
      25076,
      19510,
      6978,
      8019,
      13,
      15235,
      7,
      6978,
      8,
      1220,
      2836,
      62,
      312,
      828,
      3292,
      62,
      4475,
      8
    ],
    "start_token": 886,
    "end_token": 923,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      38240,
      923,
      290,
      886,
      9667,
      284,
      5045,
      27823,
      329,
      15794,
      287,
      3128,
      4560,
      13
    ],
    "label": "best_practice",
    "reason": "Convert start and end dates to Timestamp for consistency in date operations."
  },
  {
    "line": 208,
    "text": "            portfolio_metrics = user.account.portfolio_metrics.generate_portfolio_metrics_dataframe()",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Catching BaseException is too broad; consider catching specific exceptions.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      15320,
      62,
      4164,
      10466,
      796,
      2836,
      13,
      23317,
      13,
      634,
      13652,
      62,
      4164,
      10466,
      13,
      8612,
      378,
      62,
      634,
      13652,
      62,
      4164,
      10466,
      62,
      7890,
      14535,
      3419
    ],
    "start_token": 923,
    "end_token": 961,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      327,
      19775,
      7308,
      16922,
      318,
      1165,
      3154,
      26,
      2074,
      16508,
      2176,
      13269,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Catching BaseException is too broad; consider catching specific exceptions."
  },
  {
    "line": 212,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Adding a user with specific configuration and start date.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 961,
    "end_token": 961,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      18247,
      257,
      2836,
      351,
      2176,
      8398,
      290,
      923,
      3128,
      13
    ],
    "label": "ml_signal",
    "reason": "Adding a user with specific configuration and start date."
  },
  {
    "line": 214,
    "text": "        \"\"\"Run the ( generate_trade_decision -> execute_order_list -> update_account) process everyday",
    "annotation": "\ud83e\udde0 ML Signal: Loading user data, which might include historical trading data.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227,
      10987,
      262,
      357,
      7716,
      62,
      25351,
      62,
      12501,
      1166,
      4613,
      12260,
      62,
      2875,
      62,
      4868,
      4613,
      4296,
      62,
      23317,
      8,
      1429,
      10908
    ],
    "start_token": 961,
    "end_token": 991,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      12320,
      2836,
      1366,
      11,
      543,
      1244,
      2291,
      6754,
      7313,
      1366,
      13
    ],
    "label": "ml_signal",
    "reason": "Loading user data, which might include historical trading data."
  },
  {
    "line": 216,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Accessing user-specific data for simulation.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 991,
    "end_token": 991,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8798,
      278,
      2836,
      12,
      11423,
      1366,
      329,
      18640,
      13
    ],
    "label": "ml_signal",
    "reason": "Accessing user-specific data for simulation."
  },
  {
    "line": 218,
    "text": "        ----------",
    "annotation": "\ud83e\udde0 ML Signal: Preparing trading dates and exchange configuration for simulation.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      24200,
      438
    ],
    "start_token": 991,
    "end_token": 1000,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      19141,
      1723,
      7313,
      9667,
      290,
      5163,
      8398,
      329,
      18640,
      13
    ],
    "label": "ml_signal",
    "reason": "Preparing trading dates and exchange configuration for simulation."
  },
  {
    "line": 219,
    "text": "        id : str",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of the trading executor for simulating trades.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4686,
      1058,
      965
    ],
    "start_token": 1000,
    "end_token": 1010,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      262,
      7313,
      3121,
      273,
      329,
      985,
      8306,
      17674,
      13
    ],
    "label": "ml_signal",
    "reason": "Initialization of the trading executor for simulating trades."
  },
  {
    "line": 225,
    "text": "        start : str \"YYYY-MM-DD\"",
    "annotation": "\u2705 Best Practice: Use pathlib for path operations for better cross-platform compatibility.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      923,
      1058,
      965,
      366,
      26314,
      26314,
      12,
      12038,
      12,
      16458,
      1
    ],
    "start_token": 1010,
    "end_token": 1028,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      3108,
      8019,
      329,
      3108,
      4560,
      329,
      1365,
      3272,
      12,
      24254,
      17764,
      13
    ],
    "label": "best_practice",
    "reason": "Use pathlib for path operations for better cross-platform compatibility."
  },
  {
    "line": 225,
    "text": "        start : str \"YYYY-MM-DD\"",
    "annotation": "\ud83e\udde0 ML Signal: Fetching input data for prediction based on a specific date.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      923,
      1058,
      965,
      366,
      26314,
      26314,
      12,
      12038,
      12,
      16458,
      1
    ],
    "start_token": 1028,
    "end_token": 1046,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      376,
      7569,
      278,
      5128,
      1366,
      329,
      17724,
      1912,
      319,
      257,
      2176,
      3128,
      13
    ],
    "label": "ml_signal",
    "reason": "Fetching input data for prediction based on a specific date."
  },
  {
    "line": 227,
    "text": "        end : str \"YYYY-MM-DD\"",
    "annotation": "\ud83e\udde0 ML Signal: Generating predictions using the model.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      886,
      1058,
      965,
      366,
      26314,
      26314,
      12,
      12038,
      12,
      16458,
      1
    ],
    "start_token": 1046,
    "end_token": 1064,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2980,
      803,
      16277,
      1262,
      262,
      2746,
      13
    ],
    "label": "ml_signal",
    "reason": "Generating predictions using the model."
  },
  {
    "line": 228,
    "text": "            The end date to run the online simulate",
    "annotation": "\u2705 Best Practice: Save prediction scores for future reference or debugging.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      383,
      886,
      3128,
      284,
      1057,
      262,
      2691,
      29308
    ],
    "start_token": 1064,
    "end_token": 1083,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12793,
      17724,
      8198,
      329,
      2003,
      4941,
      393,
      28769,
      13
    ],
    "label": "best_practice",
    "reason": "Save prediction scores for future reference or debugging."
  },
  {
    "line": 231,
    "text": "        bench : str",
    "annotation": "\ud83e\udde0 ML Signal: Updating strategy based on prediction scores and trading dates.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      7624,
      1058,
      965
    ],
    "start_token": 1083,
    "end_token": 1093,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3205,
      38734,
      4811,
      1912,
      319,
      17724,
      8198,
      290,
      7313,
      9667,
      13
    ],
    "label": "ml_signal",
    "reason": "Updating strategy based on prediction scores and trading dates."
  },
  {
    "line": 233,
    "text": "            'SH000905' for csi500, 'SH000300' for csi300",
    "annotation": "\ud83e\udde0 ML Signal: Generating trade decisions based on strategy and current positions.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      705,
      9693,
      830,
      44928,
      6,
      329,
      269,
      13396,
      4059,
      11,
      705,
      9693,
      830,
      6200,
      6,
      329,
      269,
      13396,
      6200
    ],
    "start_token": 1093,
    "end_token": 1123,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2980,
      803,
      3292,
      5370,
      1912,
      319,
      4811,
      290,
      1459,
      6116,
      13
    ],
    "label": "ml_signal",
    "reason": "Generating trade decisions based on strategy and current positions."
  },
  {
    "line": 238,
    "text": "        start_date, end_date = pd.Timestamp(start), pd.Timestamp(end)",
    "annotation": "\u2705 Best Practice: Save order list for record-keeping and potential audits.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      923,
      62,
      4475,
      11,
      886,
      62,
      4475,
      796,
      279,
      67,
      13,
      14967,
      27823,
      7,
      9688,
      828,
      279,
      67,
      13,
      14967,
      27823,
      7,
      437,
      8
    ],
    "start_token": 1123,
    "end_token": 1154,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12793,
      1502,
      1351,
      329,
      1700,
      12,
      19934,
      290,
      2785,
      41973,
      13
    ],
    "label": "best_practice",
    "reason": "Save order list for record-keeping and potential audits."
  },
  {
    "line": 238,
    "text": "        start_date, end_date = pd.Timestamp(start), pd.Timestamp(end)",
    "annotation": "\ud83e\udde0 ML Signal: Loading order list for execution, ensuring consistency in trade actions.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      923,
      62,
      4475,
      11,
      886,
      62,
      4475,
      796,
      279,
      67,
      13,
      14967,
      27823,
      7,
      9688,
      828,
      279,
      67,
      13,
      14967,
      27823,
      7,
      437,
      8
    ],
    "start_token": 1154,
    "end_token": 1185,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      12320,
      1502,
      1351,
      329,
      9706,
      11,
      13359,
      15794,
      287,
      3292,
      4028,
      13
    ],
    "label": "ml_signal",
    "reason": "Loading order list for execution, ensuring consistency in trade actions."
  },
  {
    "line": 249,
    "text": "        executor = SimulatorExecutor(trade_exchange=trade_exchange)",
    "annotation": "\ud83e\udde0 ML Signal: Executing trades and capturing trade information.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3121,
      273,
      796,
      13942,
      23002,
      38409,
      7,
      25351,
      62,
      1069,
      3803,
      28,
      25351,
      62,
      1069,
      3803,
      8
    ],
    "start_token": 1185,
    "end_token": 1209,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8393,
      15129,
      17674,
      290,
      21430,
      3292,
      1321,
      13
    ],
    "label": "ml_signal",
    "reason": "Executing trades and capturing trade information."
  },
  {
    "line": 249,
    "text": "        executor = SimulatorExecutor(trade_exchange=trade_exchange)",
    "annotation": "\u2705 Best Practice: Save executed trade information for transparency and tracking.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3121,
      273,
      796,
      13942,
      23002,
      38409,
      7,
      25351,
      62,
      1069,
      3803,
      28,
      25351,
      62,
      1069,
      3803,
      8
    ],
    "start_token": 1209,
    "end_token": 1233,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12793,
      10945,
      3292,
      1321,
      329,
      13902,
      290,
      9646,
      13
    ],
    "label": "best_practice",
    "reason": "Save executed trade information for transparency and tracking."
  },
  {
    "line": 250,
    "text": "        for pred_date, trade_date in zip(dates[:-2], dates[1:-1]):",
    "annotation": "\ud83e\udde0 ML Signal: Loading trade information for account updates.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      329,
      2747,
      62,
      4475,
      11,
      3292,
      62,
      4475,
      287,
      19974,
      7,
      19581,
      58,
      21912,
      17,
      4357,
      9667,
      58,
      16,
      21912,
      16,
      60,
      2599
    ],
    "start_token": 1233,
    "end_token": 1263,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      12320,
      3292,
      1321,
      329,
      1848,
      5992,
      13
    ],
    "label": "ml_signal",
    "reason": "Loading trade information for account updates."
  },
  {
    "line": 252,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Updating user account based on executed trades and market conditions.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1263,
    "end_token": 1263,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3205,
      38734,
      2836,
      1848,
      1912,
      319,
      10945,
      17674,
      290,
      1910,
      3403,
      13
    ],
    "label": "ml_signal",
    "reason": "Updating user account based on executed trades and market conditions."
  },
  {
    "line": 254,
    "text": "            input_data = user.model.get_data_with_date(pred_date)",
    "annotation": "\ud83e\udde0 ML Signal: Generating portfolio metrics to evaluate performance.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      5128,
      62,
      7890,
      796,
      2836,
      13,
      19849,
      13,
      1136,
      62,
      7890,
      62,
      4480,
      62,
      4475,
      7,
      28764,
      62,
      4475,
      8
    ],
    "start_token": 1263,
    "end_token": 1294,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2980,
      803,
      15320,
      20731,
      284,
      13446,
      2854,
      13
    ],
    "label": "ml_signal",
    "reason": "Generating portfolio metrics to evaluate performance."
  },
  {
    "line": 256,
    "text": "            save_score_series(score_series, (pathlib.Path(path) / id), trade_date)",
    "annotation": "\u2705 Best Practice: Log portfolio metrics for analysis and reporting.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3613,
      62,
      26675,
      62,
      25076,
      7,
      26675,
      62,
      25076,
      11,
      357,
      6978,
      8019,
      13,
      15235,
      7,
      6978,
      8,
      1220,
      4686,
      828,
      3292,
      62,
      4475,
      8
    ],
    "start_token": 1294,
    "end_token": 1330,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5972,
      15320,
      20731,
      329,
      3781,
      290,
      6447,
      13
    ],
    "label": "best_practice",
    "reason": "Log portfolio metrics for analysis and reporting."
  },
  {
    "line": 258,
    "text": "            # 2. update strategy (and model)",
    "annotation": "\ud83e\udde0 ML Signal: Saving user data post-simulation, which may include updated account states.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      362,
      13,
      4296,
      4811,
      357,
      392,
      2746,
      8
    ],
    "start_token": 1330,
    "end_token": 1350,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      34689,
      2836,
      1366,
      1281,
      12,
      14323,
      1741,
      11,
      543,
      743,
      2291,
      6153,
      1848,
      2585,
      13
    ],
    "label": "ml_signal",
    "reason": "Saving user data post-simulation, which may include updated account states."
  },
  {
    "line": 260,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Displaying results, potentially for user feedback or further analysis.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1350,
    "end_token": 1350,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      16531,
      278,
      2482,
      11,
      6196,
      329,
      2836,
      7538,
      393,
      2252,
      3781,
      13
    ],
    "label": "ml_signal",
    "reason": "Displaying results, potentially for user feedback or further analysis."
  },
  {
    "line": 249,
    "text": "        executor = SimulatorExecutor(trade_exchange=trade_exchange)",
    "annotation": "\ud83e\udde0 ML Signal: Method initialization with parameters, useful for understanding function usage patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3121,
      273,
      796,
      13942,
      23002,
      38409,
      7,
      25351,
      62,
      1069,
      3803,
      28,
      25351,
      62,
      1069,
      3803,
      8
    ],
    "start_token": 1350,
    "end_token": 1374,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      37588,
      351,
      10007,
      11,
      4465,
      329,
      4547,
      2163,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Method initialization with parameters, useful for understanding function usage patterns"
  },
  {
    "line": 251,
    "text": "            user_path = pathlib.Path(path) / id",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential KeyError if 'users' is not a valid attribute or key",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2836,
      62,
      6978,
      796,
      3108,
      8019,
      13,
      15235,
      7,
      6978,
      8,
      1220,
      4686
    ],
    "start_token": 1374,
    "end_token": 1398,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      7383,
      12331,
      611,
      705,
      18417,
      6,
      318,
      407,
      257,
      4938,
      11688,
      393,
      1994
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential KeyError if 'users' is not a valid attribute or key"
  },
  {
    "line": 253,
    "text": "            # 1. load and save score_series",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): ValueError message does not include the 'id' variable",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      352,
      13,
      3440,
      290,
      3613,
      4776,
      62,
      25076
    ],
    "start_token": 1398,
    "end_token": 1418,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      11052,
      12331,
      3275,
      857,
      407,
      2291,
      262,
      705,
      312,
      6,
      7885
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "ValueError message does not include the 'id' variable"
  },
  {
    "line": 255,
    "text": "            score_series = user.model.predict(input_data)",
    "annotation": "\ud83e\udde0 ML Signal: Usage of external data source 'D.features', indicating data dependency",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4776,
      62,
      25076,
      796,
      2836,
      13,
      19849,
      13,
      79,
      17407,
      7,
      15414,
      62,
      7890,
      8
    ],
    "start_token": 1418,
    "end_token": 1444,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      7097,
      1366,
      2723,
      705,
      35,
      13,
      40890,
      3256,
      12739,
      1366,
      20203
    ],
    "label": "ml_signal",
    "reason": "Usage of external data source 'D.features', indicating data dependency"
  },
  {
    "line": 257,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Accessing nested attributes, indicating object structure and usage",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1444,
    "end_token": 1444,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8798,
      278,
      28376,
      12608,
      11,
      12739,
      2134,
      4645,
      290,
      8748
    ],
    "label": "ml_signal",
    "reason": "Accessing nested attributes, indicating object structure and usage"
  },
  {
    "line": 261,
    "text": "            # 3. generate and save order list",
    "annotation": "\ud83e\udde0 ML Signal: Calculation of excess return, indicating financial analysis pattern",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      513,
      13,
      7716,
      290,
      3613,
      1502,
      1351
    ],
    "start_token": 1444,
    "end_token": 1463,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2199,
      14902,
      286,
      6992,
      1441,
      11,
      12739,
      3176,
      3781,
      3912
    ],
    "label": "ml_signal",
    "reason": "Calculation of excess return, indicating financial analysis pattern"
  },
  {
    "line": 263,
    "text": "                score_series=score_series,",
    "annotation": "\ud83e\udde0 ML Signal: Risk analysis function call, indicating financial risk assessment",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4776,
      62,
      25076,
      28,
      26675,
      62,
      25076,
      11
    ],
    "start_token": 1463,
    "end_token": 1486,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      19602,
      3781,
      2163,
      869,
      11,
      12739,
      3176,
      2526,
      8922
    ],
    "label": "ml_signal",
    "reason": "Risk analysis function call, indicating financial risk assessment"
  },
  {
    "line": 267,
    "text": "            )",
    "annotation": "\u2705 Best Practice: Use of print statements for output, consider using logging for better control",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 1486,
    "end_token": 1498,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      3601,
      6299,
      329,
      5072,
      11,
      2074,
      1262,
      18931,
      329,
      1365,
      1630
    ],
    "label": "best_practice",
    "reason": "Use of print statements for output, consider using logging for better control"
  },
  {
    "line": 265,
    "text": "                trade_exchange=trade_exchange,",
    "annotation": "\ud83e\udde0 ML Signal: Function definition pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3292,
      62,
      1069,
      3803,
      28,
      25351,
      62,
      1069,
      3803,
      11
    ],
    "start_token": 1498,
    "end_token": 1523,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      3912
    ],
    "label": "ml_signal",
    "reason": "Function definition pattern"
  },
  {
    "line": 267,
    "text": "            )",
    "annotation": "\ud83e\udde0 ML Signal: Usage of fire.Fire for command-line interface",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 1523,
    "end_token": 1535,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2046,
      13,
      13543,
      329,
      3141,
      12,
      1370,
      7071
    ],
    "label": "ml_signal",
    "reason": "Usage of fire.Fire for command-line interface"
  },
  {
    "line": 268,
    "text": "            save_order_list(order_list=order_list, user_path=user_path, trade_date=trade_date)",
    "annotation": "\ud83e\udde0 ML Signal: Common Python entry point pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3613,
      62,
      2875,
      62,
      4868,
      7,
      2875,
      62,
      4868,
      28,
      2875,
      62,
      4868,
      11,
      2836,
      62,
      6978,
      28,
      7220,
      62,
      6978,
      11,
      3292,
      62,
      4475,
      28,
      25351,
      62,
      4475,
      8
    ],
    "start_token": 1535,
    "end_token": 1576,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8070,
      11361,
      5726,
      966,
      3912
    ],
    "label": "ml_signal",
    "reason": "Common Python entry point pattern"
  },
  {
    "line": 268,
    "text": "            save_order_list(order_list=order_list, user_path=user_path, trade_date=trade_date)",
    "annotation": "\u2705 Best Practice: Encapsulation of script execution logic in a function",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3613,
      62,
      2875,
      62,
      4868,
      7,
      2875,
      62,
      4868,
      28,
      2875,
      62,
      4868,
      11,
      2836,
      62,
      6978,
      28,
      7220,
      62,
      6978,
      11,
      3292,
      62,
      4475,
      28,
      25351,
      62,
      4475,
      8
    ],
    "start_token": 1576,
    "end_token": 1617,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      14711,
      1686,
      1741,
      286,
      4226,
      9706,
      9156,
      287,
      257,
      2163
    ],
    "label": "best_practice",
    "reason": "Encapsulation of script execution logic in a function"
  }
]