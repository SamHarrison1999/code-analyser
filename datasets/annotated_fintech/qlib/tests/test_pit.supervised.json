[
  {
    "line": 10,
    "text": "import pandas as pd",
    "annotation": "\ud83e\udde0 ML Signal: Modifying sys.path to include specific directories for module imports",
    "confidence": 1.0,
    "tokens": [
      11748,
      19798,
      292,
      355,
      279,
      67
    ],
    "start_token": 0,
    "end_token": 6,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3401,
      4035,
      25064,
      13,
      6978,
      284,
      2291,
      2176,
      29196,
      329,
      8265,
      17944
    ],
    "label": "ml_signal",
    "reason": "Modifying sys.path to include specific directories for module imports"
  },
  {
    "line": 13,
    "text": "from qlib.data import D",
    "annotation": "\ud83e\udde0 ML Signal: Modifying sys.path to include specific directories for module imports",
    "confidence": 1.0,
    "tokens": [
      6738,
      10662,
      8019,
      13,
      7890,
      1330,
      360
    ],
    "start_token": 6,
    "end_token": 13,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3401,
      4035,
      25064,
      13,
      6978,
      284,
      2291,
      2176,
      29196,
      329,
      8265,
      17944
    ],
    "label": "ml_signal",
    "reason": "Modifying sys.path to include specific directories for module imports"
  },
  {
    "line": 16,
    "text": "sys.path.append(str(Path(__file__).resolve().parent.parent.joinpath(\"scripts\")))",
    "annotation": "\u2705 Best Practice: Setting display options for pandas to improve readability of DataFrame outputs",
    "confidence": 1.0,
    "tokens": [
      17597,
      13,
      6978,
      13,
      33295,
      7,
      2536,
      7,
      15235,
      7,
      834,
      7753,
      834,
      737,
      411,
      6442,
      22446,
      8000,
      13,
      8000,
      13,
      22179,
      6978,
      7203,
      46521,
      1,
      22305
    ],
    "start_token": 13,
    "end_token": 40,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      25700,
      3359,
      3689,
      329,
      19798,
      292,
      284,
      2987,
      1100,
      1799,
      286,
      6060,
      19778,
      23862
    ],
    "label": "best_practice",
    "reason": "Setting display options for pandas to improve readability of DataFrame outputs"
  },
  {
    "line": 18,
    "text": "",
    "annotation": "\u2705 Best Practice: Setting display options for pandas to improve readability of DataFrame outputs",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 40,
    "end_token": 40,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      25700,
      3359,
      3689,
      329,
      19798,
      292,
      284,
      2987,
      1100,
      1799,
      286,
      6060,
      19778,
      23862
    ],
    "label": "best_practice",
    "reason": "Setting display options for pandas to improve readability of DataFrame outputs"
  },
  {
    "line": 20,
    "text": "from collector import Run",
    "annotation": "\ud83e\udde0 ML Signal: Using Path to manage file system paths",
    "confidence": 0.5,
    "tokens": [
      6738,
      22967,
      1330,
      5660
    ],
    "start_token": 40,
    "end_token": 44,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8554,
      10644,
      284,
      6687,
      2393,
      1080,
      13532
    ],
    "label": "ml_signal",
    "reason": "Using Path to manage file system paths"
  },
  {
    "line": 21,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Using Path to manage file system paths",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 44,
    "end_token": 44,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8554,
      10644,
      284,
      6687,
      2393,
      1080,
      13532
    ],
    "label": "ml_signal",
    "reason": "Using Path to manage file system paths"
  },
  {
    "line": 24,
    "text": "pd.set_option(\"display.max_columns\", None)",
    "annotation": "\u2705 Best Practice: Using mkdir with exist_ok=True to avoid errors if the directory already exists",
    "confidence": 1.0,
    "tokens": [
      30094,
      13,
      2617,
      62,
      18076,
      7203,
      13812,
      13,
      9806,
      62,
      28665,
      82,
      1600,
      6045,
      8
    ],
    "start_token": 44,
    "end_token": 59,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      33480,
      15908,
      351,
      2152,
      62,
      482,
      28,
      17821,
      284,
      3368,
      8563,
      611,
      262,
      8619,
      1541,
      7160
    ],
    "label": "best_practice",
    "reason": "Using mkdir with exist_ok=True to avoid errors if the directory already exists"
  },
  {
    "line": 26,
    "text": "DATA_DIR = Path(__file__).parent.joinpath(\"test_pit_data\")",
    "annotation": "\ud83e\udde0 ML Signal: Using Path to manage file system paths",
    "confidence": 0.5,
    "tokens": [
      26947,
      62,
      34720,
      796,
      10644,
      7,
      834,
      7753,
      834,
      737,
      8000,
      13,
      22179,
      6978,
      7203,
      9288,
      62,
      15544,
      62,
      7890,
      4943
    ],
    "start_token": 59,
    "end_token": 80,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8554,
      10644,
      284,
      6687,
      2393,
      1080,
      13532
    ],
    "label": "ml_signal",
    "reason": "Using Path to manage file system paths"
  },
  {
    "line": 28,
    "text": "SOURCE_DIR.mkdir(exist_ok=True, parents=True)",
    "annotation": "\u2705 Best Practice: Using mkdir with exist_ok=True to avoid errors if the directory already exists",
    "confidence": 1.0,
    "tokens": [
      47690,
      62,
      34720,
      13,
      28015,
      15908,
      7,
      38476,
      62,
      482,
      28,
      17821,
      11,
      3397,
      28,
      17821,
      8
    ],
    "start_token": 80,
    "end_token": 97,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      33480,
      15908,
      351,
      2152,
      62,
      482,
      28,
      17821,
      284,
      3368,
      8563,
      611,
      262,
      8619,
      1541,
      7160
    ],
    "label": "best_practice",
    "reason": "Using mkdir with exist_ok=True to avoid errors if the directory already exists"
  },
  {
    "line": 21,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of @classmethod for setup that applies to all test methods",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 97,
    "end_token": 97,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2488,
      4871,
      24396,
      329,
      9058,
      326,
      8991,
      284,
      477,
      1332,
      5050
    ],
    "label": "best_practice",
    "reason": "Use of @classmethod for setup that applies to all test methods"
  },
  {
    "line": 24,
    "text": "pd.set_option(\"display.max_columns\", None)",
    "annotation": "\u26a0\ufe0f SAST Risk (High): Deleting directories without validation can lead to data loss or security issues.",
    "confidence": 1.0,
    "tokens": [
      30094,
      13,
      2617,
      62,
      18076,
      7203,
      13812,
      13,
      9806,
      62,
      28665,
      82,
      1600,
      6045,
      8
    ],
    "start_token": 97,
    "end_token": 112,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      11922,
      2599,
      42226,
      889,
      29196,
      1231,
      21201,
      460,
      1085,
      284,
      1366,
      2994,
      393,
      2324,
      2428,
      13
    ],
    "label": "sast_risk",
    "severity": "High",
    "reason": "Deleting directories without validation can lead to data loss or security issues."
  },
  {
    "line": 27,
    "text": "SOURCE_DIR = DATA_DIR.joinpath(\"stock_data/source\")",
    "annotation": "\u2705 Best Practice: Convert path to string after resolving to ensure the path is absolute and in a consistent format.",
    "confidence": 0.5,
    "tokens": [
      47690,
      62,
      34720,
      796,
      42865,
      62,
      34720,
      13,
      22179,
      6978,
      7203,
      13578,
      62,
      7890,
      14,
      10459,
      4943
    ],
    "start_token": 112,
    "end_token": 129,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      38240,
      3108,
      284,
      4731,
      706,
      31038,
      284,
      4155,
      262,
      3108,
      318,
      4112,
      290,
      287,
      257,
      6414,
      5794,
      13
    ],
    "label": "best_practice",
    "reason": "Convert path to string after resolving to ensure the path is absolute and in a consistent format."
  },
  {
    "line": 29,
    "text": "QLIB_DIR = DATA_DIR.joinpath(\"qlib_data\")",
    "annotation": "\u2705 Best Practice: Convert path to string after resolving to ensure the path is absolute and in a consistent format.",
    "confidence": 0.5,
    "tokens": [
      9711,
      9865,
      62,
      34720,
      796,
      42865,
      62,
      34720,
      13,
      22179,
      6978,
      7203,
      80,
      8019,
      62,
      7890,
      4943
    ],
    "start_token": 129,
    "end_token": 146,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      38240,
      3108,
      284,
      4731,
      706,
      31038,
      284,
      4155,
      262,
      3108,
      318,
      4112,
      290,
      287,
      257,
      6414,
      5794,
      13
    ],
    "label": "best_practice",
    "reason": "Convert path to string after resolving to ensure the path is absolute and in a consistent format."
  },
  {
    "line": 30,
    "text": "QLIB_DIR.mkdir(exist_ok=True, parents=True)",
    "annotation": "\u2705 Best Practice: Convert path to string after resolving to ensure the path is absolute and in a consistent format.",
    "confidence": 0.5,
    "tokens": [
      9711,
      9865,
      62,
      34720,
      13,
      28015,
      15908,
      7,
      38476,
      62,
      482,
      28,
      17821,
      11,
      3397,
      28,
      17821,
      8
    ],
    "start_token": 146,
    "end_token": 164,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      38240,
      3108,
      284,
      4731,
      706,
      31038,
      284,
      4155,
      262,
      3108,
      318,
      4112,
      290,
      287,
      257,
      6414,
      5794,
      13
    ],
    "label": "best_practice",
    "reason": "Convert path to string after resolving to ensure the path is absolute and in a consistent format."
  },
  {
    "line": 33,
    "text": "class TestPIT(unittest.TestCase):",
    "annotation": "\ud83e\udde0 ML Signal: Usage of data fetching with specific parameters, indicating a pattern for data preparation.",
    "confidence": 0.5,
    "tokens": [
      4871,
      6208,
      47,
      2043,
      7,
      403,
      715,
      395,
      13,
      14402,
      20448,
      2599
    ],
    "start_token": 164,
    "end_token": 176,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      1366,
      21207,
      278,
      351,
      2176,
      10007,
      11,
      12739,
      257,
      3912,
      329,
      1366,
      11824,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of data fetching with specific parameters, indicating a pattern for data preparation."
  },
  {
    "line": 39,
    "text": "    def setUpClass(cls) -> None:",
    "annotation": "\ud83e\udde0 ML Signal: Usage of data fetching with specific parameters, indicating a pattern for data preparation.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      900,
      4933,
      9487,
      7,
      565,
      82,
      8,
      4613,
      6045,
      25
    ],
    "start_token": 176,
    "end_token": 190,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      1366,
      21207,
      278,
      351,
      2176,
      10007,
      11,
      12739,
      257,
      3912,
      329,
      1366,
      11824,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of data fetching with specific parameters, indicating a pattern for data preparation."
  },
  {
    "line": 39,
    "text": "    def setUpClass(cls) -> None:",
    "annotation": "\ud83e\udde0 ML Signal: Normalizing data with specific parameters, indicating a pattern for data processing.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      900,
      4933,
      9487,
      7,
      565,
      82,
      8,
      4613,
      6045,
      25
    ],
    "start_token": 190,
    "end_token": 204,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      14435,
      2890,
      1366,
      351,
      2176,
      10007,
      11,
      12739,
      257,
      3912,
      329,
      1366,
      7587,
      13
    ],
    "label": "ml_signal",
    "reason": "Normalizing data with specific parameters, indicating a pattern for data processing."
  },
  {
    "line": 45,
    "text": "        )",
    "annotation": "\ud83e\udde0 ML Signal: Dumping data with specific parameters, indicating a pattern for data output.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 204,
    "end_token": 212,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      360,
      25218,
      1366,
      351,
      2176,
      10007,
      11,
      12739,
      257,
      3912,
      329,
      1366,
      5072,
      13
    ],
    "label": "ml_signal",
    "reason": "Dumping data with specific parameters, indicating a pattern for data output."
  },
  {
    "line": 43,
    "text": "        GetData().qlib_data(",
    "annotation": "\u2705 Best Practice: Method name 'setUp' follows the naming convention for setup methods in test cases",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3497,
      6601,
      22446,
      80,
      8019,
      62,
      7890,
      7
    ],
    "start_token": 212,
    "end_token": 227,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11789,
      1438,
      705,
      2617,
      4933,
      6,
      5679,
      262,
      19264,
      9831,
      329,
      9058,
      5050,
      287,
      1332,
      2663
    ],
    "label": "best_practice",
    "reason": "Method name 'setUp' follows the naming convention for setup methods in test cases"
  },
  {
    "line": 45,
    "text": "        )",
    "annotation": "\ud83e\udde0 ML Signal: Usage of pathlib for path operations",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 227,
    "end_token": 235,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      3108,
      8019,
      329,
      3108,
      4560
    ],
    "label": "ml_signal",
    "reason": "Usage of pathlib for path operations"
  },
  {
    "line": 47,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of a library with a specific provider URI",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 235,
    "end_token": 235,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      257,
      5888,
      351,
      257,
      2176,
      10131,
      43975
    ],
    "label": "ml_signal",
    "reason": "Initialization of a library with a specific provider URI"
  },
  {
    "line": 46,
    "text": "        GetData().qlib_data(name=\"qlib_data\", target_dir=pit_dir, region=\"pit\", delete_old=False, exists_skip=True)",
    "annotation": "\u2705 Best Practice: Method name 'to_str' suggests conversion to string, which aligns with the method's functionality.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3497,
      6601,
      22446,
      80,
      8019,
      62,
      7890,
      7,
      3672,
      2625,
      80,
      8019,
      62,
      7890,
      1600,
      2496,
      62,
      15908,
      28,
      15544,
      62,
      15908,
      11,
      3814,
      2625,
      15544,
      1600,
      12233,
      62,
      727,
      28,
      25101,
      11,
      7160,
      62,
      48267,
      28,
      17821,
      8
    ],
    "start_token": 235,
    "end_token": 281,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11789,
      1438,
      705,
      1462,
      62,
      2536,
      6,
      5644,
      11315,
      284,
      4731,
      11,
      543,
      10548,
      82,
      351,
      262,
      2446,
      338,
      11244,
      13
    ],
    "label": "best_practice",
    "reason": "Method name 'to_str' suggests conversion to string, which aligns with the method's functionality."
  },
  {
    "line": 48,
    "text": "        # NOTE: This code does the same thing as line 43, but since baostock is not stable in downloading data, we have chosen to download offline data.",
    "annotation": "\ud83e\udde0 ML Signal: Usage of str() indicates conversion of an object to a string.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      24550,
      25,
      770,
      2438,
      857,
      262,
      976,
      1517,
      355,
      1627,
      5946,
      11,
      475,
      1201,
      26605,
      455,
      735,
      318,
      407,
      8245,
      287,
      22023,
      1366,
      11,
      356,
      423,
      7147,
      284,
      4321,
      18043,
      1366,
      13
    ],
    "start_token": 281,
    "end_token": 321,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      965,
      3419,
      9217,
      11315,
      286,
      281,
      2134,
      284,
      257,
      4731,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of str() indicates conversion of an object to a string."
  },
  {
    "line": 49,
    "text": "        # bs.login()",
    "annotation": "\u2705 Best Practice: Using str() ensures that the object is converted to a string representation.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      275,
      82,
      13,
      38235,
      3419
    ],
    "start_token": 321,
    "end_token": 334,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      965,
      3419,
      19047,
      326,
      262,
      2134,
      318,
      11513,
      284,
      257,
      4731,
      10552,
      13
    ],
    "label": "best_practice",
    "reason": "Using str() ensures that the object is converted to a string representation."
  },
  {
    "line": 50,
    "text": "        # Run(",
    "annotation": "\u2705 Best Practice: \"\".join() is an efficient way to remove all whitespace from a string.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      5660,
      7
    ],
    "start_token": 334,
    "end_token": 344,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      366,
      1911,
      22179,
      3419,
      318,
      281,
      6942,
      835,
      284,
      4781,
      477,
      13216,
      10223,
      422,
      257,
      4731,
      13
    ],
    "label": "best_practice",
    "reason": "\"\".join() is an efficient way to remove all whitespace from a string."
  },
  {
    "line": 48,
    "text": "        # NOTE: This code does the same thing as line 43, but since baostock is not stable in downloading data, we have chosen to download offline data.",
    "annotation": "\u2705 Best Practice: Method name should be more descriptive to indicate its purpose",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      24550,
      25,
      770,
      2438,
      857,
      262,
      976,
      1517,
      355,
      1627,
      5946,
      11,
      475,
      1201,
      26605,
      455,
      735,
      318,
      407,
      8245,
      287,
      22023,
      1366,
      11,
      356,
      423,
      7147,
      284,
      4321,
      18043,
      1366,
      13
    ],
    "start_token": 344,
    "end_token": 384,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11789,
      1438,
      815,
      307,
      517,
      35644,
      284,
      7603,
      663,
      4007
    ],
    "label": "best_practice",
    "reason": "Method name should be more descriptive to indicate its purpose"
  },
  {
    "line": 50,
    "text": "        # Run(",
    "annotation": "\u2705 Best Practice: Use of assertEqual for testing equality is a good practice",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      5660,
      7
    ],
    "start_token": 384,
    "end_token": 394,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      6818,
      36,
      13255,
      329,
      4856,
      10537,
      318,
      257,
      922,
      3357
    ],
    "label": "best_practice",
    "reason": "Use of assertEqual for testing equality is a good practice"
  },
  {
    "line": 51,
    "text": "        #     source_dir=pit_dir,",
    "annotation": "\ud83e\udde0 ML Signal: Use of assertEqual indicates a testing pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      220,
      220,
      220,
      220,
      2723,
      62,
      15908,
      28,
      15544,
      62,
      15908,
      11
    ],
    "start_token": 394,
    "end_token": 414,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      6818,
      36,
      13255,
      9217,
      257,
      4856,
      3912
    ],
    "label": "ml_signal",
    "reason": "Use of assertEqual indicates a testing pattern"
  },
  {
    "line": 53,
    "text": "        # ).download_data(start=\"2000-01-01\", end=\"2020-01-01\", symbol_regex=\"^(600519|000725).*\")",
    "annotation": "\ud83e\udde0 ML Signal: Usage of specific financial fields for querying data",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      6739,
      15002,
      62,
      7890,
      7,
      9688,
      2625,
      11024,
      12,
      486,
      12,
      486,
      1600,
      886,
      2625,
      42334,
      12,
      486,
      12,
      486,
      1600,
      6194,
      62,
      260,
      25636,
      2625,
      61,
      7,
      8054,
      47785,
      91,
      830,
      45151,
      737,
      9,
      4943
    ],
    "start_token": 414,
    "end_token": 458,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2176,
      3176,
      7032,
      329,
      42517,
      1112,
      1366
    ],
    "label": "ml_signal",
    "reason": "Usage of specific financial fields for querying data"
  },
  {
    "line": 54,
    "text": "        # bs.logout()",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoded financial field names could lead to inflexibility",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      275,
      82,
      13,
      6404,
      448,
      3419
    ],
    "start_token": 458,
    "end_token": 472,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      40976,
      3176,
      2214,
      3891,
      714,
      1085,
      284,
      1167,
      2588,
      2247
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoded financial field names could lead to inflexibility"
  },
  {
    "line": 66,
    "text": "    def setUp(self):",
    "annotation": "\ud83e\udde0 ML Signal: Validation of data using statistical description",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      900,
      4933,
      7,
      944,
      2599
    ],
    "start_token": 472,
    "end_token": 481,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3254,
      24765,
      286,
      1366,
      1262,
      13905,
      6764
    ],
    "label": "ml_signal",
    "reason": "Validation of data using statistical description"
  },
  {
    "line": 78,
    "text": "        instruments = [\"sh600519\"]",
    "annotation": "\ud83e\udde0 ML Signal: Validation of data using recent data points",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      12834,
      796,
      14631,
      1477,
      8054,
      47785,
      8973
    ],
    "start_token": 481,
    "end_token": 495,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3254,
      24765,
      286,
      1366,
      1262,
      2274,
      1366,
      2173
    ],
    "label": "ml_signal",
    "reason": "Validation of data using recent data points"
  },
  {
    "line": 78,
    "text": "        instruments = [\"sh600519\"]",
    "annotation": "\ud83e\udde0 ML Signal: Usage of specific financial fields for data retrieval",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      12834,
      796,
      14631,
      1477,
      8054,
      47785,
      8973
    ],
    "start_token": 495,
    "end_token": 509,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2176,
      3176,
      7032,
      329,
      1366,
      45069
    ],
    "label": "ml_signal",
    "reason": "Usage of specific financial fields for data retrieval"
  },
  {
    "line": 80,
    "text": "        # Mao Tai published 2019Q2 report at 2019-07-13 & 2019-07-18",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Overwriting data column with a constant value",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      22828,
      11144,
      3199,
      13130,
      48,
      17,
      989,
      379,
      13130,
      12,
      2998,
      12,
      1485,
      1222,
      13130,
      12,
      2998,
      12,
      1507
    ],
    "start_token": 509,
    "end_token": 536,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      3827,
      16502,
      1366,
      5721,
      351,
      257,
      6937,
      1988
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Overwriting data column with a constant value"
  },
  {
    "line": 98,
    "text": "        instrument datetime",
    "annotation": "\ud83e\udde0 ML Signal: Validation of data against expected output",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      8875,
      4818,
      8079
    ],
    "start_token": 536,
    "end_token": 546,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3254,
      24765,
      286,
      1366,
      1028,
      2938,
      5072
    ],
    "label": "ml_signal",
    "reason": "Validation of data against expected output"
  },
  {
    "line": 99,
    "text": "        sh600519   2019-07-15      0.000000      0.305041",
    "annotation": "\u2705 Best Practice: Use of pytest marker to categorize slow tests",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      427,
      8054,
      47785,
      220,
      220,
      13130,
      12,
      2998,
      12,
      1314,
      220,
      220,
      220,
      220,
      220,
      657,
      13,
      10535,
      220,
      220,
      220,
      220,
      220,
      657,
      13,
      1270,
      1120,
      3901
    ],
    "start_token": 546,
    "end_token": 581,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      12972,
      9288,
      18364,
      284,
      17851,
      1096,
      3105,
      5254
    ],
    "label": "best_practice",
    "reason": "Use of pytest marker to categorize slow tests"
  },
  {
    "line": 106,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of specific financial expressions in fields",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 581,
    "end_token": 581,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2176,
      3176,
      14700,
      287,
      7032
    ],
    "label": "ml_signal",
    "reason": "Usage of specific financial expressions in fields"
  },
  {
    "line": 108,
    "text": "        fields = [\"P($$roewa_q)\", \"P($$yoyni_q)\", \"$close\"]",
    "annotation": "\ud83e\udde0 ML Signal: Usage of specific instrument identifiers",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      7032,
      796,
      14631,
      47,
      7,
      13702,
      305,
      413,
      64,
      62,
      80,
      42501,
      366,
      47,
      7,
      13702,
      88,
      726,
      8461,
      62,
      80,
      42501,
      17971,
      19836,
      8973
    ],
    "start_token": 581,
    "end_token": 613,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2176,
      8875,
      42814
    ],
    "label": "ml_signal",
    "reason": "Usage of specific instrument identifiers"
  },
  {
    "line": 108,
    "text": "        fields = [\"P($$roewa_q)\", \"P($$yoyni_q)\", \"$close\"]",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential risk if D.features is not properly validated",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      7032,
      796,
      14631,
      47,
      7,
      13702,
      305,
      413,
      64,
      62,
      80,
      42501,
      366,
      47,
      7,
      13702,
      88,
      726,
      8461,
      62,
      80,
      42501,
      17971,
      19836,
      8973
    ],
    "start_token": 613,
    "end_token": 645,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2526,
      611,
      360,
      13,
      40890,
      318,
      407,
      6105,
      31031
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential risk if D.features is not properly validated"
  },
  {
    "line": 108,
    "text": "        fields = [\"P($$roewa_q)\", \"P($$yoyni_q)\", \"$close\"]",
    "annotation": "\ud83e\udde0 ML Signal: Usage of date ranges and frequency in data retrieval",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      7032,
      796,
      14631,
      47,
      7,
      13702,
      305,
      413,
      64,
      62,
      80,
      42501,
      366,
      47,
      7,
      13702,
      88,
      726,
      8461,
      62,
      80,
      42501,
      17971,
      19836,
      8973
    ],
    "start_token": 645,
    "end_token": 677,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      3128,
      16069,
      290,
      8373,
      287,
      1366,
      45069
    ],
    "label": "ml_signal",
    "reason": "Usage of date ranges and frequency in data retrieval"
  },
  {
    "line": 131,
    "text": "    def test_expr(self):",
    "annotation": "\ud83e\udde0 ML Signal: Comparison of actual data with expected results",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      31937,
      7,
      944,
      2599
    ],
    "start_token": 677,
    "end_token": 687,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      34420,
      286,
      4036,
      1366,
      351,
      2938,
      2482
    ],
    "label": "ml_signal",
    "reason": "Comparison of actual data with expected results"
  },
  {
    "line": 133,
    "text": "            \"P(Mean($$roewa_q, 1))\",",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential risk if check_same does not handle data safely",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      47,
      7,
      5308,
      272,
      7,
      13702,
      305,
      413,
      64,
      62,
      80,
      11,
      352,
      4008,
      1600
    ],
    "start_token": 687,
    "end_token": 714,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2526,
      611,
      2198,
      62,
      31642,
      857,
      407,
      5412,
      1366,
      11512
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential risk if check_same does not handle data safely"
  },
  {
    "line": 129,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of specific fields and instruments for data retrieval",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 714,
    "end_token": 714,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2176,
      7032,
      290,
      12834,
      329,
      1366,
      45069
    ],
    "label": "ml_signal",
    "reason": "Use of specific fields and instruments for data retrieval"
  },
  {
    "line": 131,
    "text": "    def test_expr(self):",
    "annotation": "\ud83e\udde0 ML Signal: Use of specific instruments for data retrieval",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      31937,
      7,
      944,
      2599
    ],
    "start_token": 714,
    "end_token": 724,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2176,
      12834,
      329,
      1366,
      45069
    ],
    "label": "ml_signal",
    "reason": "Use of specific instruments for data retrieval"
  },
  {
    "line": 133,
    "text": "            \"P(Mean($$roewa_q, 1))\",",
    "annotation": "\ud83e\udde0 ML Signal: Use of a specific method to retrieve features",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      47,
      7,
      5308,
      272,
      7,
      13702,
      305,
      413,
      64,
      62,
      80,
      11,
      352,
      4008,
      1600
    ],
    "start_token": 724,
    "end_token": 751,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      2176,
      2446,
      284,
      19818,
      3033
    ],
    "label": "ml_signal",
    "reason": "Use of a specific method to retrieve features"
  },
  {
    "line": 134,
    "text": "            \"P($$roewa_q)\",",
    "annotation": "\ud83e\udde0 ML Signal: Use of a specific method to retrieve features with a defined end_time",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      47,
      7,
      13702,
      305,
      413,
      64,
      62,
      80,
      42501
    ],
    "start_token": 751,
    "end_token": 772,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      2176,
      2446,
      284,
      19818,
      3033,
      351,
      257,
      5447,
      886,
      62,
      2435
    ],
    "label": "ml_signal",
    "reason": "Use of a specific method to retrieve features with a defined end_time"
  },
  {
    "line": 134,
    "text": "            \"P($$roewa_q)\",",
    "annotation": "\ud83e\udde0 ML Signal: Accessing a specific column from the data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      47,
      7,
      13702,
      305,
      413,
      64,
      62,
      80,
      42501
    ],
    "start_token": 772,
    "end_token": 793,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8798,
      278,
      257,
      2176,
      5721,
      422,
      262,
      1366
    ],
    "label": "ml_signal",
    "reason": "Accessing a specific column from the data"
  },
  {
    "line": 134,
    "text": "            \"P($$roewa_q)\",",
    "annotation": "\ud83e\udde0 ML Signal: Multiline string used for expected data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      47,
      7,
      13702,
      305,
      413,
      64,
      62,
      80,
      42501
    ],
    "start_token": 793,
    "end_token": 814,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7854,
      346,
      500,
      4731,
      973,
      329,
      2938,
      1366
    ],
    "label": "ml_signal",
    "reason": "Multiline string used for expected data"
  },
  {
    "line": 198,
    "text": "                    2013-03-29    0.450047",
    "annotation": "\ud83e\udde0 ML Signal: Use of a method to check for duplicates and compare with expected data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2211,
      12,
      3070,
      12,
      1959,
      220,
      220,
      220,
      657,
      13,
      2231,
      405,
      2857
    ],
    "start_token": 814,
    "end_token": 846,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      2446,
      284,
      2198,
      329,
      14184,
      16856,
      290,
      8996,
      351,
      2938,
      1366
    ],
    "label": "ml_signal",
    "reason": "Use of a method to check for duplicates and compare with expected data"
  },
  {
    "line": 199,
    "text": "                    2013-04-18    0.099958",
    "annotation": "\u2705 Best Practice: Use of ~s.duplicated().values to filter out duplicates",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2211,
      12,
      3023,
      12,
      1507,
      220,
      220,
      220,
      657,
      13,
      15,
      17032,
      3365
    ],
    "start_token": 846,
    "end_token": 878,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      5299,
      82,
      13,
      646,
      489,
      3474,
      22446,
      27160,
      284,
      8106,
      503,
      14184,
      16856
    ],
    "label": "best_practice",
    "reason": "Use of ~s.duplicated().values to filter out duplicates"
  },
  {
    "line": 194,
    "text": "                    2012-04-11    0.403925",
    "annotation": "\ud83e\udde0 ML Signal: Use of financial instruments and fields for feature extraction",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2321,
      12,
      3023,
      12,
      1157,
      220,
      220,
      220,
      657,
      13,
      1821,
      2670,
      1495
    ],
    "start_token": 878,
    "end_token": 910,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      3176,
      12834,
      290,
      7032,
      329,
      3895,
      22236
    ],
    "label": "ml_signal",
    "reason": "Use of financial instruments and fields for feature extraction"
  },
  {
    "line": 196,
    "text": "                    2012-08-10    0.264847",
    "annotation": "\ud83e\udde0 ML Signal: Use of specific financial metrics for analysis",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2321,
      12,
      2919,
      12,
      940,
      220,
      220,
      220,
      657,
      13,
      2075,
      2780,
      2857
    ],
    "start_token": 910,
    "end_token": 942,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2176,
      3176,
      20731,
      329,
      3781
    ],
    "label": "ml_signal",
    "reason": "Use of specific financial metrics for analysis"
  },
  {
    "line": 198,
    "text": "                    2013-03-29    0.450047",
    "annotation": "\u2705 Best Practice: Use of list concatenation for adding more fields",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2211,
      12,
      3070,
      12,
      1959,
      220,
      220,
      220,
      657,
      13,
      2231,
      405,
      2857
    ],
    "start_token": 942,
    "end_token": 974,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      1351,
      1673,
      36686,
      341,
      329,
      4375,
      517,
      7032
    ],
    "label": "best_practice",
    "reason": "Use of list concatenation for adding more fields"
  },
  {
    "line": 200,
    "text": "                    2013-09-02    0.210442",
    "annotation": "\ud83e\udde0 ML Signal: Inclusion of stock price in the analysis",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2211,
      12,
      2931,
      12,
      2999,
      220,
      220,
      220,
      657,
      13,
      21536,
      39506
    ],
    "start_token": 974,
    "end_token": 1005,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      554,
      4717,
      286,
      4283,
      2756,
      287,
      262,
      3781
    ],
    "label": "ml_signal",
    "reason": "Inclusion of stock price in the analysis"
  },
  {
    "line": 200,
    "text": "                    2013-09-02    0.210442",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential risk if D.features is not properly validated or sanitized",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2211,
      12,
      2931,
      12,
      2999,
      220,
      220,
      220,
      657,
      13,
      21536,
      39506
    ],
    "start_token": 1005,
    "end_token": 1036,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2526,
      611,
      360,
      13,
      40890,
      318,
      407,
      6105,
      31031,
      393,
      5336,
      36951
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential risk if D.features is not properly validated or sanitized"
  },
  {
    "line": 219,
    "text": "                    2018-08-02    0.170563",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential risk if check_same does not handle exceptions or errors properly",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2864,
      12,
      2919,
      12,
      2999,
      220,
      220,
      220,
      657,
      13,
      1558,
      2713,
      5066
    ],
    "start_token": 1036,
    "end_token": 1068,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2526,
      611,
      2198,
      62,
      31642,
      857,
      407,
      5412,
      13269,
      393,
      8563,
      6105
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential risk if check_same does not handle exceptions or errors properly"
  },
  {
    "line": 219,
    "text": "                    2018-08-02    0.170563",
    "annotation": "\ud83e\udde0 ML Signal: Usage of financial instrument identifiers",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2864,
      12,
      2919,
      12,
      2999,
      220,
      220,
      220,
      657,
      13,
      1558,
      2713,
      5066
    ],
    "start_token": 1068,
    "end_token": 1100,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      3176,
      8875,
      42814
    ],
    "label": "ml_signal",
    "reason": "Usage of financial instrument identifiers"
  },
  {
    "line": 219,
    "text": "                    2018-08-02    0.170563",
    "annotation": "\ud83e\udde0 ML Signal: Usage of financial metrics and time references",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2864,
      12,
      2919,
      12,
      2999,
      220,
      220,
      220,
      657,
      13,
      1558,
      2713,
      5066
    ],
    "start_token": 1100,
    "end_token": 1132,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      3176,
      20731,
      290,
      640,
      10288
    ],
    "label": "ml_signal",
    "reason": "Usage of financial metrics and time references"
  },
  {
    "line": 226,
    "text": "        Name: P($$roewa_q), dtype: float32",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a data retrieval function with specific parameters",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6530,
      25,
      350,
      7,
      13702,
      305,
      413,
      64,
      62,
      80,
      828,
      288,
      4906,
      25,
      12178,
      2624
    ],
    "start_token": 1132,
    "end_token": 1155,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      1366,
      45069,
      2163,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Usage of a data retrieval function with specific parameters"
  },
  {
    "line": 244,
    "text": "                   2019-01-08      0.255220      0.243892                                           1.484224                           1.661578   64.212196              16.388237",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a custom check function for data validation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      13130,
      12,
      486,
      12,
      2919,
      220,
      220,
      220,
      220,
      220,
      657,
      13,
      1495,
      4309,
      1238,
      220,
      220,
      220,
      220,
      220,
      657,
      13,
      1731,
      2548,
      5892,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      352,
      13,
      2780,
      3682,
      1731,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      352,
      13,
      2791,
      1314,
      3695,
      220,
      220,
      5598,
      13,
      21777,
      25272,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1467,
      13,
      30460,
      24693
    ],
    "start_token": 1155,
    "end_token": 1299,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      2183,
      2198,
      2163,
      329,
      1366,
      21201
    ],
    "label": "ml_signal",
    "reason": "Usage of a custom check function for data validation"
  },
  {
    "line": 244,
    "text": "                   2019-01-08      0.255220      0.243892                                           1.484224                           1.661578   64.212196              16.388237",
    "annotation": "\u2705 Best Practice: Use of a main guard to allow or prevent parts of code from being run when the modules are imported",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      13130,
      12,
      486,
      12,
      2919,
      220,
      220,
      220,
      220,
      220,
      657,
      13,
      1495,
      4309,
      1238,
      220,
      220,
      220,
      220,
      220,
      657,
      13,
      1731,
      2548,
      5892,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      352,
      13,
      2780,
      3682,
      1731,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      352,
      13,
      2791,
      1314,
      3695,
      220,
      220,
      5598,
      13,
      21777,
      25272,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1467,
      13,
      30460,
      24693
    ],
    "start_token": 1299,
    "end_token": 1443,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      257,
      1388,
      4860,
      284,
      1249,
      393,
      2948,
      3354,
      286,
      2438,
      422,
      852,
      1057,
      618,
      262,
      13103,
      389,
      17392
    ],
    "label": "best_practice",
    "reason": "Use of a main guard to allow or prevent parts of code from being run when the modules are imported"
  },
  {
    "line": 244,
    "text": "                   2019-01-08      0.255220      0.243892                                           1.484224                           1.661578   64.212196              16.388237",
    "annotation": "\ud83e\udde0 ML Signal: Usage of unittest framework for test execution",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      13130,
      12,
      486,
      12,
      2919,
      220,
      220,
      220,
      220,
      220,
      657,
      13,
      1495,
      4309,
      1238,
      220,
      220,
      220,
      220,
      220,
      657,
      13,
      1731,
      2548,
      5892,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      352,
      13,
      2780,
      3682,
      1731,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      352,
      13,
      2791,
      1314,
      3695,
      220,
      220,
      5598,
      13,
      21777,
      25272,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1467,
      13,
      30460,
      24693
    ],
    "start_token": 1443,
    "end_token": 1587,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      555,
      715,
      395,
      9355,
      329,
      1332,
      9706
    ],
    "label": "ml_signal",
    "reason": "Usage of unittest framework for test execution"
  }
]