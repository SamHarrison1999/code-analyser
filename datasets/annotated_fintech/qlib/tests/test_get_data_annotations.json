[
  {
    "line": 8,
    "text": "import qlib",
    "annotation": "\ud83e\udde0 ML Signal: Use of Path for file and directory operations, indicating a pattern for file management",
    "confidence": 0.5,
    "tokens": [
      11748,
      10662,
      8019
    ],
    "start_token": 0,
    "end_token": 3,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      10644,
      329,
      2393,
      290,
      8619,
      4560,
      11,
      12739,
      257,
      3912,
      329,
      2393,
      4542
    ],
    "label": "ml_signal",
    "reason": "Use of Path for file and directory operations, indicating a pattern for file management"
  },
  {
    "line": 10,
    "text": "from qlib.tests.data import GetData",
    "annotation": "\ud83e\udde0 ML Signal: Use of Path for file and directory operations, indicating a pattern for file management",
    "confidence": 0.5,
    "tokens": [
      6738,
      10662,
      8019,
      13,
      41989,
      13,
      7890,
      1330,
      3497,
      6601
    ],
    "start_token": 3,
    "end_token": 13,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      10644,
      329,
      2393,
      290,
      8619,
      4560,
      11,
      12739,
      257,
      3912,
      329,
      2393,
      4542
    ],
    "label": "ml_signal",
    "reason": "Use of Path for file and directory operations, indicating a pattern for file management"
  },
  {
    "line": 12,
    "text": "DATA_DIR = Path(__file__).parent.joinpath(\"test_get_data\")",
    "annotation": "\u2705 Best Practice: Use of mkdir with exist_ok=True to avoid exceptions if the directory already exists",
    "confidence": 1.0,
    "tokens": [
      26947,
      62,
      34720,
      796,
      10644,
      7,
      834,
      7753,
      834,
      737,
      8000,
      13,
      22179,
      6978,
      7203,
      9288,
      62,
      1136,
      62,
      7890,
      4943
    ],
    "start_token": 13,
    "end_token": 34,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      33480,
      15908,
      351,
      2152,
      62,
      482,
      28,
      17821,
      284,
      3368,
      13269,
      611,
      262,
      8619,
      1541,
      7160
    ],
    "label": "best_practice",
    "reason": "Use of mkdir with exist_ok=True to avoid exceptions if the directory already exists"
  },
  {
    "line": 13,
    "text": "SOURCE_DIR = DATA_DIR.joinpath(\"source\")",
    "annotation": "\ud83e\udde0 ML Signal: Use of Path for file and directory operations, indicating a pattern for file management",
    "confidence": 0.5,
    "tokens": [
      47690,
      62,
      34720,
      796,
      42865,
      62,
      34720,
      13,
      22179,
      6978,
      7203,
      10459,
      4943
    ],
    "start_token": 34,
    "end_token": 47,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      10644,
      329,
      2393,
      290,
      8619,
      4560,
      11,
      12739,
      257,
      3912,
      329,
      2393,
      4542
    ],
    "label": "ml_signal",
    "reason": "Use of Path for file and directory operations, indicating a pattern for file management"
  },
  {
    "line": 16,
    "text": "QLIB_DIR.mkdir(exist_ok=True, parents=True)",
    "annotation": "\u2705 Best Practice: Use of mkdir with exist_ok=True to avoid exceptions if the directory already exists",
    "confidence": 1.0,
    "tokens": [
      9711,
      9865,
      62,
      34720,
      13,
      28015,
      15908,
      7,
      38476,
      62,
      482,
      28,
      17821,
      11,
      3397,
      28,
      17821,
      8
    ],
    "start_token": 47,
    "end_token": 65,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      33480,
      15908,
      351,
      2152,
      62,
      482,
      28,
      17821,
      284,
      3368,
      13269,
      611,
      262,
      8619,
      1541,
      7160
    ],
    "label": "best_practice",
    "reason": "Use of mkdir with exist_ok=True to avoid exceptions if the directory already exists"
  },
  {
    "line": 12,
    "text": "DATA_DIR = Path(__file__).parent.joinpath(\"test_get_data\")",
    "annotation": "\u2705 Best Practice: Use of @classmethod for methods that operate on the class itself rather than instances",
    "confidence": 0.5,
    "tokens": [
      26947,
      62,
      34720,
      796,
      10644,
      7,
      834,
      7753,
      834,
      737,
      8000,
      13,
      22179,
      6978,
      7203,
      9288,
      62,
      1136,
      62,
      7890,
      4943
    ],
    "start_token": 65,
    "end_token": 86,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2488,
      4871,
      24396,
      329,
      5050,
      326,
      8076,
      319,
      262,
      1398,
      2346,
      2138,
      621,
      10245
    ],
    "label": "best_practice",
    "reason": "Use of @classmethod for methods that operate on the class itself rather than instances"
  },
  {
    "line": 23,
    "text": "    def setUpClass(cls) -> None:",
    "annotation": "\ud83e\udde0 ML Signal: URL construction pattern for API requests",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      900,
      4933,
      9487,
      7,
      565,
      82,
      8,
      4613,
      6045,
      25
    ],
    "start_token": 86,
    "end_token": 100,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      10289,
      5103,
      3912,
      329,
      7824,
      7007
    ],
    "label": "ml_signal",
    "reason": "URL construction pattern for API requests"
  },
  {
    "line": 24,
    "text": "        provider_uri = str(QLIB_DIR.resolve())",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): No error handling for network request failures",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      10131,
      62,
      9900,
      796,
      965,
      7,
      9711,
      9865,
      62,
      34720,
      13,
      411,
      6442,
      28955
    ],
    "start_token": 100,
    "end_token": 121,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1400,
      4049,
      9041,
      329,
      3127,
      2581,
      15536
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "No error handling for network request failures"
  },
  {
    "line": 26,
    "text": "            provider_uri=provider_uri,",
    "annotation": "\ud83e\udde0 ML Signal: Common pattern for checking HTTP response status",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      10131,
      62,
      9900,
      28,
      15234,
      1304,
      62,
      9900,
      11
    ],
    "start_token": 121,
    "end_token": 141,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8070,
      3912,
      329,
      10627,
      14626,
      2882,
      3722
    ],
    "label": "ml_signal",
    "reason": "Common pattern for checking HTTP response status"
  },
  {
    "line": 29,
    "text": "        )",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): No validation of JSON response structure",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 141,
    "end_token": 149,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1400,
      21201,
      286,
      19449,
      2882,
      4645
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "No validation of JSON response structure"
  },
  {
    "line": 30,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Pattern for checking presence of key in JSON response",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 149,
    "end_token": 149,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      329,
      10627,
      4931,
      286,
      1994,
      287,
      19449,
      2882
    ],
    "label": "ml_signal",
    "reason": "Pattern for checking presence of key in JSON response"
  },
  {
    "line": 32,
    "text": "    def tearDownClass(cls) -> None:",
    "annotation": "\ud83e\udde0 ML Signal: Pattern for type checking JSON response content",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      11626,
      8048,
      9487,
      7,
      565,
      82,
      8,
      4613,
      6045,
      25
    ],
    "start_token": 149,
    "end_token": 163,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      329,
      2099,
      10627,
      19449,
      2882,
      2695
    ],
    "label": "ml_signal",
    "reason": "Pattern for type checking JSON response content"
  },
  {
    "line": 35,
    "text": "    def test_0_qlib_data(self):",
    "annotation": "\ud83e\udde0 ML Signal: Iteration pattern for validating presence of multiple fields in data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      15,
      62,
      80,
      8019,
      62,
      7890,
      7,
      944,
      2599
    ],
    "start_token": 163,
    "end_token": 178,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      341,
      3912,
      329,
      4938,
      803,
      4931,
      286,
      3294,
      7032,
      287,
      1366
    ],
    "label": "ml_signal",
    "reason": "Iteration pattern for validating presence of multiple fields in data"
  },
  {
    "line": 16,
    "text": "QLIB_DIR.mkdir(exist_ok=True, parents=True)",
    "annotation": "\u2705 Best Practice: Convert path to string for consistent usage",
    "confidence": 0.5,
    "tokens": [
      9711,
      9865,
      62,
      34720,
      13,
      28015,
      15908,
      7,
      38476,
      62,
      482,
      28,
      17821,
      11,
      3397,
      28,
      17821,
      8
    ],
    "start_token": 178,
    "end_token": 196,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      38240,
      3108,
      284,
      4731,
      329,
      6414,
      8748
    ],
    "label": "best_practice",
    "reason": "Convert path to string for consistent usage"
  },
  {
    "line": 17,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of a library with specific configurations",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 196,
    "end_token": 196,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      257,
      5888,
      351,
      2176,
      25412
    ],
    "label": "ml_signal",
    "reason": "Initialization of a library with specific configurations"
  },
  {
    "line": 23,
    "text": "    def setUpClass(cls) -> None:",
    "annotation": "\u26a0\ufe0f SAST Risk (High): Deleting directories without validation can lead to data loss or security issues.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      900,
      4933,
      9487,
      7,
      565,
      82,
      8,
      4613,
      6045,
      25
    ],
    "start_token": 196,
    "end_token": 210,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      11922,
      2599,
      42226,
      889,
      29196,
      1231,
      21201,
      460,
      1085,
      284,
      1366,
      2994,
      393,
      2324,
      2428,
      13
    ],
    "label": "sast_risk",
    "severity": "High",
    "reason": "Deleting directories without validation can lead to data loss or security issues."
  },
  {
    "line": 25,
    "text": "        qlib.init(",
    "annotation": "\u26a0\ufe0f SAST Risk (High): Removing directories without checking can lead to accidental deletion of important data.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      10662,
      8019,
      13,
      15003,
      7
    ],
    "start_token": 210,
    "end_token": 222,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      11922,
      2599,
      3982,
      5165,
      29196,
      1231,
      10627,
      460,
      1085,
      284,
      23221,
      39948,
      286,
      1593,
      1366,
      13
    ],
    "label": "sast_risk",
    "severity": "High",
    "reason": "Removing directories without checking can lead to accidental deletion of important data."
  },
  {
    "line": 25,
    "text": "        qlib.init(",
    "annotation": "\ud83e\udde0 ML Signal: Method name suggests this is a test function, useful for identifying test patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      10662,
      8019,
      13,
      15003,
      7
    ],
    "start_token": 222,
    "end_token": 234,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      1438,
      5644,
      428,
      318,
      257,
      1332,
      2163,
      11,
      4465,
      329,
      13720,
      1332,
      7572
    ],
    "label": "ml_signal",
    "reason": "Method name suggests this is a test function, useful for identifying test patterns"
  },
  {
    "line": 26,
    "text": "            provider_uri=provider_uri,",
    "annotation": "\ud83e\udde0 ML Signal: Usage of GetData().qlib_data() indicates interaction with a data retrieval API",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      10131,
      62,
      9900,
      28,
      15234,
      1304,
      62,
      9900,
      11
    ],
    "start_token": 234,
    "end_token": 254,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      3497,
      6601,
      22446,
      80,
      8019,
      62,
      7890,
      3419,
      9217,
      10375,
      351,
      257,
      1366,
      45069,
      7824
    ],
    "label": "ml_signal",
    "reason": "Usage of GetData().qlib_data() indicates interaction with a data retrieval API"
  },
  {
    "line": 29,
    "text": "        )",
    "annotation": "\u2705 Best Practice: Use of named arguments improves readability and maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 254,
    "end_token": 262,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      3706,
      7159,
      19575,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of named arguments improves readability and maintainability"
  },
  {
    "line": 32,
    "text": "    def tearDownClass(cls) -> None:",
    "annotation": "\ud83e\udde0 ML Signal: D.features() usage indicates feature extraction, relevant for ML model training",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      11626,
      8048,
      9487,
      7,
      565,
      82,
      8,
      4613,
      6045,
      25
    ],
    "start_token": 262,
    "end_token": 276,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      360,
      13,
      40890,
      3419,
      8748,
      9217,
      3895,
      22236,
      11,
      5981,
      329,
      10373,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "D.features() usage indicates feature extraction, relevant for ML model training"
  },
  {
    "line": 34,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Asserting list equality is a common pattern in test functions",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 276,
    "end_token": 276,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      278,
      1351,
      10537,
      318,
      257,
      2219,
      3912,
      287,
      1332,
      5499
    ],
    "label": "ml_signal",
    "reason": "Asserting list equality is a common pattern in test functions"
  },
  {
    "line": 36,
    "text": "        GetData().qlib_data(",
    "annotation": "\ud83e\udde0 ML Signal: Checking for non-empty DataFrame is a common validation step in data processing",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3497,
      6601,
      22446,
      80,
      8019,
      62,
      7890,
      7
    ],
    "start_token": 276,
    "end_token": 291,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      1729,
      12,
      28920,
      6060,
      19778,
      318,
      257,
      2219,
      21201,
      2239,
      287,
      1366,
      7587
    ],
    "label": "ml_signal",
    "reason": "Checking for non-empty DataFrame is a common validation step in data processing"
  },
  {
    "line": 33,
    "text": "        shutil.rmtree(str(DATA_DIR.resolve()))",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a method to download data, indicating a pattern of data retrieval",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4423,
      346,
      13,
      81,
      16762,
      631,
      7,
      2536,
      7,
      26947,
      62,
      34720,
      13,
      411,
      6442,
      3419,
      4008
    ],
    "start_token": 291,
    "end_token": 315,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      2446,
      284,
      4321,
      1366,
      11,
      12739,
      257,
      3912,
      286,
      1366,
      45069
    ],
    "label": "ml_signal",
    "reason": "Usage of a method to download data, indicating a pattern of data retrieval"
  },
  {
    "line": 35,
    "text": "    def test_0_qlib_data(self):",
    "annotation": "\ud83e\udde0 ML Signal: Use of lambda and map functions to process file names",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      15,
      62,
      80,
      8019,
      62,
      7890,
      7,
      944,
      2599
    ],
    "start_token": 315,
    "end_token": 330,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      37456,
      290,
      3975,
      5499,
      284,
      1429,
      2393,
      3891
    ],
    "label": "ml_signal",
    "reason": "Use of lambda and map functions to process file names"
  },
  {
    "line": 37,
    "text": "            name=\"qlib_data_simple\", target_dir=QLIB_DIR, region=\"cn\", interval=\"1d\", delete_old=False, exists_skip=True",
    "annotation": "\u2705 Best Practice: Use of assertEqual for testing expected outcomes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1438,
      2625,
      80,
      8019,
      62,
      7890,
      62,
      36439,
      1600,
      2496,
      62,
      15908,
      28,
      9711,
      9865,
      62,
      34720,
      11,
      3814,
      2625,
      31522,
      1600,
      16654,
      2625,
      16,
      67,
      1600,
      12233,
      62,
      727,
      28,
      25101,
      11,
      7160,
      62,
      48267,
      28,
      17821
    ],
    "start_token": 330,
    "end_token": 379,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      6818,
      36,
      13255,
      329,
      4856,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Use of assertEqual for testing expected outcomes"
  },
  {
    "line": 37,
    "text": "            name=\"qlib_data_simple\", target_dir=QLIB_DIR, region=\"cn\", interval=\"1d\", delete_old=False, exists_skip=True",
    "annotation": "\u2705 Best Practice: Standard boilerplate for running tests",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1438,
      2625,
      80,
      8019,
      62,
      7890,
      62,
      36439,
      1600,
      2496,
      62,
      15908,
      28,
      9711,
      9865,
      62,
      34720,
      11,
      3814,
      2625,
      31522,
      1600,
      16654,
      2625,
      16,
      67,
      1600,
      12233,
      62,
      727,
      28,
      25101,
      11,
      7160,
      62,
      48267,
      28,
      17821
    ],
    "start_token": 379,
    "end_token": 428,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8997,
      36741,
      6816,
      329,
      2491,
      5254
    ],
    "label": "best_practice",
    "reason": "Standard boilerplate for running tests"
  }
]