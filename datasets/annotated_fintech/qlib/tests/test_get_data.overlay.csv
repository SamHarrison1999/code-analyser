annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
"🧠 ML Signal: Use of Path for file and directory operations, indicating a pattern for file management","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 10644, 329, 2393, 290, 8619, 4560, 11, 12739, 257, 3912, 329, 2393, 4542]",0.5,3,ml_signal,8,"Use of Path for file and directory operations, indicating a pattern for file management",,0,import qlib,"[11748, 10662, 8019]"
"🧠 ML Signal: Use of Path for file and directory operations, indicating a pattern for file management","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 10644, 329, 2393, 290, 8619, 4560, 11, 12739, 257, 3912, 329, 2393, 4542]",0.5,13,ml_signal,10,"Use of Path for file and directory operations, indicating a pattern for file management",,3,from qlib.tests.data import GetData,"[6738, 10662, 8019, 13, 41989, 13, 7890, 1330, 3497, 6601]"
✅ Best Practice: Use of mkdir with exist_ok=True to avoid exceptions if the directory already exists,"[26486, 227, 6705, 19939, 25, 5765, 286, 33480, 15908, 351, 2152, 62, 482, 28, 17821, 284, 3368, 13269, 611, 262, 8619, 1541, 7160]",1.0,34,best_practice,12,Use of mkdir with exist_ok=True to avoid exceptions if the directory already exists,,13,"DATA_DIR = Path(__file__).parent.joinpath(""test_get_data"")","[26947, 62, 34720, 796, 10644, 7, 834, 7753, 834, 737, 8000, 13, 22179, 6978, 7203, 9288, 62, 1136, 62, 7890, 4943]"
"🧠 ML Signal: Use of Path for file and directory operations, indicating a pattern for file management","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 10644, 329, 2393, 290, 8619, 4560, 11, 12739, 257, 3912, 329, 2393, 4542]",0.5,47,ml_signal,13,"Use of Path for file and directory operations, indicating a pattern for file management",,34,"SOURCE_DIR = DATA_DIR.joinpath(""source"")","[47690, 62, 34720, 796, 42865, 62, 34720, 13, 22179, 6978, 7203, 10459, 4943]"
✅ Best Practice: Use of mkdir with exist_ok=True to avoid exceptions if the directory already exists,"[26486, 227, 6705, 19939, 25, 5765, 286, 33480, 15908, 351, 2152, 62, 482, 28, 17821, 284, 3368, 13269, 611, 262, 8619, 1541, 7160]",1.0,65,best_practice,16,Use of mkdir with exist_ok=True to avoid exceptions if the directory already exists,,47,"QLIB_DIR.mkdir(exist_ok=True, parents=True)","[9711, 9865, 62, 34720, 13, 28015, 15908, 7, 38476, 62, 482, 28, 17821, 11, 3397, 28, 17821, 8]"
✅ Best Practice: Use of @classmethod for methods that operate on the class itself rather than instances,"[26486, 227, 6705, 19939, 25, 5765, 286, 2488, 4871, 24396, 329, 5050, 326, 8076, 319, 262, 1398, 2346, 2138, 621, 10245]",0.5,86,best_practice,12,Use of @classmethod for methods that operate on the class itself rather than instances,,65,"DATA_DIR = Path(__file__).parent.joinpath(""test_get_data"")","[26947, 62, 34720, 796, 10644, 7, 834, 7753, 834, 737, 8000, 13, 22179, 6978, 7203, 9288, 62, 1136, 62, 7890, 4943]"
🧠 ML Signal: URL construction pattern for API requests,"[8582, 100, 254, 10373, 26484, 25, 10289, 5103, 3912, 329, 7824, 7007]",0.5,100,ml_signal,23,URL construction pattern for API requests,,86,    def setUpClass(cls) -> None:,"[220, 220, 220, 825, 900, 4933, 9487, 7, 565, 82, 8, 4613, 6045, 25]"
⚠️ SAST Risk (Low): No error handling for network request failures,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 1400, 4049, 9041, 329, 3127, 2581, 15536]",0.5,121,sast_risk,24,No error handling for network request failures,Low,100,        provider_uri = str(QLIB_DIR.resolve()),"[220, 220, 220, 220, 220, 220, 220, 10131, 62, 9900, 796, 965, 7, 9711, 9865, 62, 34720, 13, 411, 6442, 28955]"
🧠 ML Signal: Common pattern for checking HTTP response status,"[8582, 100, 254, 10373, 26484, 25, 8070, 3912, 329, 10627, 14626, 2882, 3722]",0.5,141,ml_signal,26,Common pattern for checking HTTP response status,,121,"            provider_uri=provider_uri,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 10131, 62, 9900, 28, 15234, 1304, 62, 9900, 11]"
⚠️ SAST Risk (Low): No validation of JSON response structure,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 1400, 21201, 286, 19449, 2882, 4645]",0.5,149,sast_risk,29,No validation of JSON response structure,Low,141,        ),"[220, 220, 220, 220, 220, 220, 220, 1267]"
🧠 ML Signal: Pattern for checking presence of key in JSON response,"[8582, 100, 254, 10373, 26484, 25, 23939, 329, 10627, 4931, 286, 1994, 287, 19449, 2882]",0.5,149,ml_signal,30,Pattern for checking presence of key in JSON response,,149,,[]
🧠 ML Signal: Pattern for type checking JSON response content,"[8582, 100, 254, 10373, 26484, 25, 23939, 329, 2099, 10627, 19449, 2882, 2695]",0.5,163,ml_signal,32,Pattern for type checking JSON response content,,149,    def tearDownClass(cls) -> None:,"[220, 220, 220, 825, 11626, 8048, 9487, 7, 565, 82, 8, 4613, 6045, 25]"
🧠 ML Signal: Iteration pattern for validating presence of multiple fields in data,"[8582, 100, 254, 10373, 26484, 25, 40806, 341, 3912, 329, 4938, 803, 4931, 286, 3294, 7032, 287, 1366]",0.5,178,ml_signal,35,Iteration pattern for validating presence of multiple fields in data,,163,    def test_0_qlib_data(self):,"[220, 220, 220, 825, 1332, 62, 15, 62, 80, 8019, 62, 7890, 7, 944, 2599]"
✅ Best Practice: Convert path to string for consistent usage,"[26486, 227, 6705, 19939, 25, 38240, 3108, 284, 4731, 329, 6414, 8748]",0.5,196,best_practice,16,Convert path to string for consistent usage,,178,"QLIB_DIR.mkdir(exist_ok=True, parents=True)","[9711, 9865, 62, 34720, 13, 28015, 15908, 7, 38476, 62, 482, 28, 17821, 11, 3397, 28, 17821, 8]"
🧠 ML Signal: Initialization of a library with specific configurations,"[8582, 100, 254, 10373, 26484, 25, 20768, 1634, 286, 257, 5888, 351, 2176, 25412]",0.5,196,ml_signal,17,Initialization of a library with specific configurations,,196,,[]
⚠️ SAST Risk (High): Deleting directories without validation can lead to data loss or security issues.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 11922, 2599, 42226, 889, 29196, 1231, 21201, 460, 1085, 284, 1366, 2994, 393, 2324, 2428, 13]",0.5,210,sast_risk,23,Deleting directories without validation can lead to data loss or security issues.,High,196,    def setUpClass(cls) -> None:,"[220, 220, 220, 825, 900, 4933, 9487, 7, 565, 82, 8, 4613, 6045, 25]"
⚠️ SAST Risk (High): Removing directories without checking can lead to accidental deletion of important data.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 11922, 2599, 3982, 5165, 29196, 1231, 10627, 460, 1085, 284, 23221, 39948, 286, 1593, 1366, 13]",0.5,222,sast_risk,25,Removing directories without checking can lead to accidental deletion of important data.,High,210,        qlib.init(,"[220, 220, 220, 220, 220, 220, 220, 10662, 8019, 13, 15003, 7]"
"🧠 ML Signal: Method name suggests this is a test function, useful for identifying test patterns","[8582, 100, 254, 10373, 26484, 25, 11789, 1438, 5644, 428, 318, 257, 1332, 2163, 11, 4465, 329, 13720, 1332, 7572]",0.5,234,ml_signal,25,"Method name suggests this is a test function, useful for identifying test patterns",,222,        qlib.init(,"[220, 220, 220, 220, 220, 220, 220, 10662, 8019, 13, 15003, 7]"
🧠 ML Signal: Usage of GetData().qlib_data() indicates interaction with a data retrieval API,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 3497, 6601, 22446, 80, 8019, 62, 7890, 3419, 9217, 10375, 351, 257, 1366, 45069, 7824]",0.5,254,ml_signal,26,Usage of GetData().qlib_data() indicates interaction with a data retrieval API,,234,"            provider_uri=provider_uri,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 10131, 62, 9900, 28, 15234, 1304, 62, 9900, 11]"
✅ Best Practice: Use of named arguments improves readability and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 3706, 7159, 19575, 1100, 1799, 290, 5529, 1799]",1.0,262,best_practice,29,Use of named arguments improves readability and maintainability,,254,        ),"[220, 220, 220, 220, 220, 220, 220, 1267]"
"🧠 ML Signal: D.features() usage indicates feature extraction, relevant for ML model training","[8582, 100, 254, 10373, 26484, 25, 360, 13, 40890, 3419, 8748, 9217, 3895, 22236, 11, 5981, 329, 10373, 2746, 3047]",0.5,276,ml_signal,32,"D.features() usage indicates feature extraction, relevant for ML model training",,262,    def tearDownClass(cls) -> None:,"[220, 220, 220, 825, 11626, 8048, 9487, 7, 565, 82, 8, 4613, 6045, 25]"
🧠 ML Signal: Asserting list equality is a common pattern in test functions,"[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 1351, 10537, 318, 257, 2219, 3912, 287, 1332, 5499]",0.5,276,ml_signal,34,Asserting list equality is a common pattern in test functions,,276,,[]
🧠 ML Signal: Checking for non-empty DataFrame is a common validation step in data processing,"[8582, 100, 254, 10373, 26484, 25, 39432, 329, 1729, 12, 28920, 6060, 19778, 318, 257, 2219, 21201, 2239, 287, 1366, 7587]",0.5,291,ml_signal,36,Checking for non-empty DataFrame is a common validation step in data processing,,276,        GetData().qlib_data(,"[220, 220, 220, 220, 220, 220, 220, 3497, 6601, 22446, 80, 8019, 62, 7890, 7]"
"🧠 ML Signal: Usage of a method to download data, indicating a pattern of data retrieval","[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2446, 284, 4321, 1366, 11, 12739, 257, 3912, 286, 1366, 45069]",1.0,315,ml_signal,33,"Usage of a method to download data, indicating a pattern of data retrieval",,291,        shutil.rmtree(str(DATA_DIR.resolve())),"[220, 220, 220, 220, 220, 220, 220, 4423, 346, 13, 81, 16762, 631, 7, 2536, 7, 26947, 62, 34720, 13, 411, 6442, 3419, 4008]"
🧠 ML Signal: Use of lambda and map functions to process file names,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 37456, 290, 3975, 5499, 284, 1429, 2393, 3891]",0.5,330,ml_signal,35,Use of lambda and map functions to process file names,,315,    def test_0_qlib_data(self):,"[220, 220, 220, 825, 1332, 62, 15, 62, 80, 8019, 62, 7890, 7, 944, 2599]"
✅ Best Practice: Use of assertEqual for testing expected outcomes,"[26486, 227, 6705, 19939, 25, 5765, 286, 6818, 36, 13255, 329, 4856, 2938, 10906]",1.0,379,best_practice,37,Use of assertEqual for testing expected outcomes,,330,"            name=""qlib_data_simple"", target_dir=QLIB_DIR, region=""cn"", interval=""1d"", delete_old=False, exists_skip=True","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1438, 2625, 80, 8019, 62, 7890, 62, 36439, 1600, 2496, 62, 15908, 28, 9711, 9865, 62, 34720, 11, 3814, 2625, 31522, 1600, 16654, 2625, 16, 67, 1600, 12233, 62, 727, 28, 25101, 11, 7160, 62, 48267, 28, 17821]"
✅ Best Practice: Standard boilerplate for running tests,"[26486, 227, 6705, 19939, 25, 8997, 36741, 6816, 329, 2491, 5254]",1.0,428,best_practice,37,Standard boilerplate for running tests,,379,"            name=""qlib_data_simple"", target_dir=QLIB_DIR, region=""cn"", interval=""1d"", delete_old=False, exists_skip=True","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1438, 2625, 80, 8019, 62, 7890, 62, 36439, 1600, 2496, 62, 15908, 28, 9711, 9865, 62, 34720, 11, 3814, 2625, 31522, 1600, 16654, 2625, 16, 67, 1600, 12233, 62, 727, 28, 25101, 11, 7160, 62, 48267, 28, 17821]"
