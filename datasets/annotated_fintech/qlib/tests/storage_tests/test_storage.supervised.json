[
  {
    "line": 11,
    "text": "from qlib.data.storage.file_storage import (",
    "annotation": "\ud83e\udde0 ML Signal: Usage of Path to manipulate file paths, which is common in data processing tasks",
    "confidence": 0.5,
    "tokens": [
      6738,
      10662,
      8019,
      13,
      7890,
      13,
      35350,
      13,
      7753,
      62,
      35350,
      1330,
      357
    ],
    "start_token": 0,
    "end_token": 13,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      10644,
      284,
      18510,
      2393,
      13532,
      11,
      543,
      318,
      2219,
      287,
      1366,
      7587,
      8861
    ],
    "label": "ml_signal",
    "reason": "Usage of Path to manipulate file paths, which is common in data processing tasks"
  },
  {
    "line": 13,
    "text": "    FileInstrumentStorage as InstrumentStorage,",
    "annotation": "\ud83e\udde0 ML Signal: Usage of Path to create directories, which is common in data storage tasks",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      9220,
      818,
      43872,
      31425,
      355,
      42410,
      31425,
      11
    ],
    "start_token": 13,
    "end_token": 24,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      10644,
      284,
      2251,
      29196,
      11,
      543,
      318,
      2219,
      287,
      1366,
      6143,
      8861
    ],
    "label": "ml_signal",
    "reason": "Usage of Path to create directories, which is common in data storage tasks"
  },
  {
    "line": 15,
    "text": ")",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential directory traversal if __file__ is manipulated",
    "confidence": 0.5,
    "tokens": [
      8
    ],
    "start_token": 24,
    "end_token": 25,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      8619,
      33038,
      282,
      611,
      11593,
      7753,
      834,
      318,
      25036
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential directory traversal if __file__ is manipulated"
  },
  {
    "line": 16,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of mkdir with exist_ok=True to avoid exceptions if the directory already exists",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 25,
    "end_token": 25,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      33480,
      15908,
      351,
      2152,
      62,
      482,
      28,
      17821,
      284,
      3368,
      13269,
      611,
      262,
      8619,
      1541,
      7160
    ],
    "label": "best_practice",
    "reason": "Use of mkdir with exist_ok=True to avoid exceptions if the directory already exists"
  },
  {
    "line": 15,
    "text": ")",
    "annotation": "\u2705 Best Practice: Class definition should follow PEP 8 naming conventions, which is followed here.",
    "confidence": 0.5,
    "tokens": [
      8
    ],
    "start_token": 25,
    "end_token": 26,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      6770,
      815,
      1061,
      350,
      8905,
      807,
      19264,
      21396,
      11,
      543,
      318,
      3940,
      994,
      13
    ],
    "label": "best_practice",
    "reason": "Class definition should follow PEP 8 naming conventions, which is followed here."
  },
  {
    "line": 16,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Testing object creation with specific parameters",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 26,
    "end_token": 26,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23983,
      2134,
      6282,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Testing object creation with specific parameters"
  },
  {
    "line": 18,
    "text": "DATA_DIR = Path(__file__).parent.joinpath(f\"{_file_name}_data\")",
    "annotation": "\ud83e\udde0 ML Signal: Checking if the object supports slicing and is iterable",
    "confidence": 1.0,
    "tokens": [
      26947,
      62,
      34720,
      796,
      10644,
      7,
      834,
      7753,
      834,
      737,
      8000,
      13,
      22179,
      6978,
      7,
      69,
      1,
      90,
      62,
      7753,
      62,
      3672,
      92,
      62,
      7890,
      4943
    ],
    "start_token": 26,
    "end_token": 52,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      611,
      262,
      2134,
      6971,
      49289,
      290,
      318,
      11629,
      540
    ],
    "label": "ml_signal",
    "reason": "Checking if the object supports slicing and is iterable"
  },
  {
    "line": 20,
    "text": "QLIB_DIR.mkdir(exist_ok=True, parents=True)",
    "annotation": "\ud83e\udde0 ML Signal: Checking if the data attribute is iterable",
    "confidence": 1.0,
    "tokens": [
      9711,
      9865,
      62,
      34720,
      13,
      28015,
      15908,
      7,
      38476,
      62,
      482,
      28,
      17821,
      11,
      3397,
      28,
      17821,
      8
    ],
    "start_token": 52,
    "end_token": 70,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      611,
      262,
      1366,
      11688,
      318,
      11629,
      540
    ],
    "label": "ml_signal",
    "reason": "Checking if the data attribute is iterable"
  },
  {
    "line": 22,
    "text": "",
    "annotation": "\u2705 Best Practice: Using print statements for debugging and output verification",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 70,
    "end_token": 70,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      3601,
      6299,
      329,
      28769,
      290,
      5072,
      19637
    ],
    "label": "best_practice",
    "reason": "Using print statements for debugging and output verification"
  },
  {
    "line": 24,
    "text": "    def test_calendar_storage(self):",
    "annotation": "\u2705 Best Practice: Using print statements for debugging and output verification",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      1332,
      62,
      9948,
      9239,
      62,
      35350,
      7,
      944,
      2599
    ],
    "start_token": 70,
    "end_token": 83,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      3601,
      6299,
      329,
      28769,
      290,
      5072,
      19637
    ],
    "label": "best_practice",
    "reason": "Using print statements for debugging and output verification"
  },
  {
    "line": 26,
    "text": "        assert isinstance(calendar[:], Iterable), f\"{calendar.__class__.__name__}.__getitem__(s: slice) is not Iterable\"",
    "annotation": "\u2705 Best Practice: Using print statements for debugging and output verification",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6818,
      318,
      39098,
      7,
      9948,
      9239,
      58,
      25,
      4357,
      40806,
      540,
      828,
      277,
      1,
      90,
      9948,
      9239,
      13,
      834,
      4871,
      834,
      13,
      834,
      3672,
      834,
      27422,
      834,
      1136,
      9186,
      834,
      7,
      82,
      25,
      16416,
      8,
      318,
      407,
      40806,
      540,
      1
    ],
    "start_token": 83,
    "end_token": 130,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      3601,
      6299,
      329,
      28769,
      290,
      5072,
      19637
    ],
    "label": "best_practice",
    "reason": "Using print statements for debugging and output verification"
  },
  {
    "line": 28,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Testing object creation with different parameters",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 130,
    "end_token": 130,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23983,
      2134,
      6282,
      351,
      1180,
      10007
    ],
    "label": "ml_signal",
    "reason": "Testing object creation with different parameters"
  },
  {
    "line": 30,
    "text": "        print(f\"calendar[0]: {calendar[0]}\")",
    "annotation": "\ud83e\udde0 ML Signal: Testing exception handling for invalid data access",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      69,
      1,
      9948,
      9239,
      58,
      15,
      5974,
      1391,
      9948,
      9239,
      58,
      15,
      48999,
      4943
    ],
    "start_token": 130,
    "end_token": 153,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23983,
      6631,
      9041,
      329,
      12515,
      1366,
      1895
    ],
    "label": "ml_signal",
    "reason": "Testing exception handling for invalid data access"
  },
  {
    "line": 30,
    "text": "        print(f\"calendar[0]: {calendar[0]}\")",
    "annotation": "\ud83e\udde0 ML Signal: Testing exception handling for invalid slicing",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      69,
      1,
      9948,
      9239,
      58,
      15,
      5974,
      1391,
      9948,
      9239,
      58,
      15,
      48999,
      4943
    ],
    "start_token": 153,
    "end_token": 176,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23983,
      6631,
      9041,
      329,
      12515,
      49289
    ],
    "label": "ml_signal",
    "reason": "Testing exception handling for invalid slicing"
  },
  {
    "line": 30,
    "text": "        print(f\"calendar[0]: {calendar[0]}\")",
    "annotation": "\ud83e\udde0 ML Signal: Testing exception handling for invalid index access",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      69,
      1,
      9948,
      9239,
      58,
      15,
      5974,
      1391,
      9948,
      9239,
      58,
      15,
      48999,
      4943
    ],
    "start_token": 176,
    "end_token": 199,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23983,
      6631,
      9041,
      329,
      12515,
      6376,
      1895
    ],
    "label": "ml_signal",
    "reason": "Testing exception handling for invalid index access"
  },
  {
    "line": 29,
    "text": "        print(f\"calendar[1: 5]: {calendar[1:5]}\")",
    "annotation": "\ud83e\udde0 ML Signal: Testing function for instrument storage behavior",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      69,
      1,
      9948,
      9239,
      58,
      16,
      25,
      642,
      5974,
      1391,
      9948,
      9239,
      58,
      16,
      25,
      20,
      48999,
      4943
    ],
    "start_token": 199,
    "end_token": 226,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23983,
      2163,
      329,
      8875,
      6143,
      4069
    ],
    "label": "ml_signal",
    "reason": "Testing function for instrument storage behavior"
  },
  {
    "line": 30,
    "text": "        print(f\"calendar[0]: {calendar[0]}\")",
    "annotation": "\u2705 Best Practice: Docstring provides detailed explanation of the test case",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      69,
      1,
      9948,
      9239,
      58,
      15,
      5974,
      1391,
      9948,
      9239,
      58,
      15,
      48999,
      4943
    ],
    "start_token": 226,
    "end_token": 249,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      14432,
      8841,
      3769,
      6496,
      7468,
      286,
      262,
      1332,
      1339
    ],
    "label": "best_practice",
    "reason": "Docstring provides detailed explanation of the test case"
  },
  {
    "line": 30,
    "text": "        print(f\"calendar[0]: {calendar[0]}\")",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over instrument data to validate structure",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      69,
      1,
      9948,
      9239,
      58,
      15,
      5974,
      1391,
      9948,
      9239,
      58,
      15,
      48999,
      4943
    ],
    "start_token": 249,
    "end_token": 272,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      8875,
      1366,
      284,
      26571,
      4645
    ],
    "label": "ml_signal",
    "reason": "Iterating over instrument data to validate structure"
  },
  {
    "line": 30,
    "text": "        print(f\"calendar[0]: {calendar[0]}\")",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Type checking with assert, could be disabled in optimized mode",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      69,
      1,
      9948,
      9239,
      58,
      15,
      5974,
      1391,
      9948,
      9239,
      58,
      15,
      48999,
      4943
    ],
    "start_token": 272,
    "end_token": 295,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5994,
      10627,
      351,
      6818,
      11,
      714,
      307,
      10058,
      287,
      23392,
      4235
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Type checking with assert, could be disabled in optimized mode"
  },
  {
    "line": 30,
    "text": "        print(f\"calendar[0]: {calendar[0]}\")",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Type checking with assert, could be disabled in optimized mode",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      69,
      1,
      9948,
      9239,
      58,
      15,
      5974,
      1391,
      9948,
      9239,
      58,
      15,
      48999,
      4943
    ],
    "start_token": 295,
    "end_token": 318,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5994,
      10627,
      351,
      6818,
      11,
      714,
      307,
      10058,
      287,
      23392,
      4235
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Type checking with assert, could be disabled in optimized mode"
  },
  {
    "line": 30,
    "text": "        print(f\"calendar[0]: {calendar[0]}\")",
    "annotation": "\ud83e\udde0 ML Signal: Accessing specific instrument data for validation",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      69,
      1,
      9948,
      9239,
      58,
      15,
      5974,
      1391,
      9948,
      9239,
      58,
      15,
      48999,
      4943
    ],
    "start_token": 318,
    "end_token": 341,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8798,
      278,
      2176,
      8875,
      1366,
      329,
      21201
    ],
    "label": "ml_signal",
    "reason": "Accessing specific instrument data for validation"
  },
  {
    "line": 56,
    "text": "            Calendar:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoded provider_uri, potential for misuse",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      26506,
      25
    ],
    "start_token": 341,
    "end_token": 354,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      40976,
      10131,
      62,
      9900,
      11,
      2785,
      329,
      29169
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoded provider_uri, potential for misuse"
  },
  {
    "line": 56,
    "text": "            Calendar:",
    "annotation": "\ud83e\udde0 ML Signal: Testing error handling with invalid provider_uri",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      26506,
      25
    ],
    "start_token": 354,
    "end_token": 367,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23983,
      4049,
      9041,
      351,
      12515,
      10131,
      62,
      9900
    ],
    "label": "ml_signal",
    "reason": "Testing error handling with invalid provider_uri"
  },
  {
    "line": 56,
    "text": "            Calendar:",
    "annotation": "\ud83e\udde0 ML Signal: Testing error handling with invalid instrument key",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      26506,
      25
    ],
    "start_token": 367,
    "end_token": 380,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23983,
      4049,
      9041,
      351,
      12515,
      8875,
      1994
    ],
    "label": "ml_signal",
    "reason": "Testing error handling with invalid instrument key"
  },
  {
    "line": 111,
    "text": "            Stock data(close):",
    "annotation": "\ud83e\udde0 ML Signal: Testing for specific exceptions can indicate expected failure modes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      10500,
      1366,
      7,
      19836,
      2599
    ],
    "start_token": 380,
    "end_token": 396,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23983,
      329,
      2176,
      13269,
      460,
      7603,
      2938,
      5287,
      12881
    ],
    "label": "ml_signal",
    "reason": "Testing for specific exceptions can indicate expected failure modes"
  },
  {
    "line": 113,
    "text": "                SH600000     1          ...      3         ...      4           5               6",
    "annotation": "\ud83e\udde0 ML Signal: Use of assertRaises indicates testing for exception handling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6006,
      8054,
      830,
      220,
      220,
      220,
      220,
      352,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2644,
      220,
      220,
      220,
      220,
      220,
      513,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2644,
      220,
      220,
      220,
      220,
      220,
      604,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      642,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      718
    ],
    "start_token": 396,
    "end_token": 476,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      6818,
      21762,
      2696,
      9217,
      4856,
      329,
      6631,
      9041
    ],
    "label": "ml_signal",
    "reason": "Use of assertRaises indicates testing for exception handling"
  },
  {
    "line": 117,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of isinstance to check types can indicate expected data types",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 476,
    "end_token": 476,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      318,
      39098,
      284,
      2198,
      3858,
      460,
      7603,
      2938,
      1366,
      3858
    ],
    "label": "ml_signal",
    "reason": "Use of isinstance to check types can indicate expected data types"
  },
  {
    "line": 120,
    "text": "                [",
    "annotation": "\ud83e\udde0 ML Signal: Use of assert to check conditions can indicate expected behavior",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      685
    ],
    "start_token": 476,
    "end_token": 492,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      6818,
      284,
      2198,
      3403,
      460,
      7603,
      2938,
      4069
    ],
    "label": "ml_signal",
    "reason": "Use of assert to check conditions can indicate expected behavior"
  },
  {
    "line": 122,
    "text": "                    ...,",
    "annotation": "\u2705 Best Practice: Using f-strings for formatted output is more readable",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2644,
      11
    ],
    "start_token": 492,
    "end_token": 513,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      277,
      12,
      37336,
      329,
      39559,
      5072,
      318,
      517,
      31744
    ],
    "label": "best_practice",
    "reason": "Using f-strings for formatted output is more readable"
  },
  {
    "line": 124,
    "text": "                ]",
    "annotation": "\u2705 Best Practice: Using f-strings for formatted output is more readable",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2361
    ],
    "start_token": 513,
    "end_token": 529,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      277,
      12,
      37336,
      329,
      39559,
      5072,
      318,
      517,
      31744
    ],
    "label": "best_practice",
    "reason": "Using f-strings for formatted output is more readable"
  },
  {
    "line": 126,
    "text": "                ====> [(0, 1), ..., (59, 6)]",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoding provider_uri as \"not_fount\" may lead to misconfigurations",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      24844,
      14804,
      47527,
      15,
      11,
      352,
      828,
      2644,
      11,
      357,
      3270,
      11,
      718,
      15437
    ],
    "start_token": 529,
    "end_token": 558,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      66,
      7656,
      10131,
      62,
      9900,
      355,
      366,
      1662,
      62,
      69,
      608,
      1,
      743,
      1085,
      284,
      2984,
      11250,
      20074
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoding provider_uri as \"not_fount\" may lead to misconfigurations"
  },
  {
    "line": 126,
    "text": "                ====> [(0, 1), ..., (59, 6)]",
    "annotation": "\ud83e\udde0 ML Signal: Use of assertRaises indicates testing for exception handling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      24844,
      14804,
      47527,
      15,
      11,
      352,
      828,
      2644,
      11,
      357,
      3270,
      11,
      718,
      15437
    ],
    "start_token": 558,
    "end_token": 587,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      6818,
      21762,
      2696,
      9217,
      4856,
      329,
      6631,
      9041
    ],
    "label": "ml_signal",
    "reason": "Use of assertRaises indicates testing for exception handling"
  },
  {
    "line": 126,
    "text": "                ====> [(0, 1), ..., (59, 6)]",
    "annotation": "\ud83e\udde0 ML Signal: Use of assertRaises indicates testing for exception handling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      24844,
      14804,
      47527,
      15,
      11,
      352,
      828,
      2644,
      11,
      357,
      3270,
      11,
      718,
      15437
    ],
    "start_token": 587,
    "end_token": 616,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      6818,
      21762,
      2696,
      9217,
      4856,
      329,
      6631,
      9041
    ],
    "label": "ml_signal",
    "reason": "Use of assertRaises indicates testing for exception handling"
  },
  {
    "line": 126,
    "text": "                ====> [(0, 1), ..., (59, 6)]",
    "annotation": "\ud83e\udde0 ML Signal: Use of assertRaises indicates testing for exception handling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      24844,
      14804,
      47527,
      15,
      11,
      352,
      828,
      2644,
      11,
      357,
      3270,
      11,
      718,
      15437
    ],
    "start_token": 616,
    "end_token": 645,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      6818,
      21762,
      2696,
      9217,
      4856,
      329,
      6631,
      9041
    ],
    "label": "ml_signal",
    "reason": "Use of assertRaises indicates testing for exception handling"
  }
]