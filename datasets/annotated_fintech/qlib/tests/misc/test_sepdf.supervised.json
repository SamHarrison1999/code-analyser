[
  {
    "line": 5,
    "text": "import pandas as pd",
    "annotation": "\u2705 Best Practice: Grouping imports into standard library, third-party, and local can improve readability.",
    "confidence": 0.5,
    "tokens": [
      11748,
      19798,
      292,
      355,
      279,
      67
    ],
    "start_token": 0,
    "end_token": 6,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      656,
      3210,
      5888,
      11,
      2368,
      12,
      10608,
      11,
      290,
      1957,
      460,
      2987,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports into standard library, third-party, and local can improve readability."
  },
  {
    "line": 5,
    "text": "import pandas as pd",
    "annotation": "\u2705 Best Practice: Inheriting from unittest.TestCase to create a test case class",
    "confidence": 0.5,
    "tokens": [
      11748,
      19798,
      292,
      355,
      279,
      67
    ],
    "start_token": 6,
    "end_token": 12,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      47025,
      1780,
      422,
      555,
      715,
      395,
      13,
      14402,
      20448,
      284,
      2251,
      257,
      1332,
      1339,
      1398
    ],
    "label": "best_practice",
    "reason": "Inheriting from unittest.TestCase to create a test case class"
  },
  {
    "line": 6,
    "text": "from qlib.contrib.data.utils.sepdf import SepDataFrame",
    "annotation": "\u2705 Best Practice: Method name 'to_str' suggests conversion to string, which aligns with the function's purpose.",
    "confidence": 0.5,
    "tokens": [
      6738,
      10662,
      8019,
      13,
      3642,
      822,
      13,
      7890,
      13,
      26791,
      13,
      325,
      12315,
      1330,
      8621,
      6601,
      19778
    ],
    "start_token": 12,
    "end_token": 29,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11789,
      1438,
      705,
      1462,
      62,
      2536,
      6,
      5644,
      11315,
      284,
      4731,
      11,
      543,
      10548,
      82,
      351,
      262,
      2163,
      338,
      4007,
      13
    ],
    "label": "best_practice",
    "reason": "Method name 'to_str' suggests conversion to string, which aligns with the function's purpose."
  },
  {
    "line": 8,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of str() indicates conversion of an object to a string, a common pattern.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 29,
    "end_token": 29,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      965,
      3419,
      9217,
      11315,
      286,
      281,
      2134,
      284,
      257,
      4731,
      11,
      257,
      2219,
      3912,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of str() indicates conversion of an object to a string, a common pattern."
  },
  {
    "line": 9,
    "text": "class SepDF(unittest.TestCase):",
    "annotation": "\u2705 Best Practice: Using str() ensures that the object is converted to a string, which is necessary for the join operation.",
    "confidence": 1.0,
    "tokens": [
      4871,
      8621,
      8068,
      7,
      403,
      715,
      395,
      13,
      14402,
      20448,
      2599
    ],
    "start_token": 29,
    "end_token": 40,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      965,
      3419,
      19047,
      326,
      262,
      2134,
      318,
      11513,
      284,
      257,
      4731,
      11,
      543,
      318,
      3306,
      329,
      262,
      4654,
      4905,
      13
    ],
    "label": "best_practice",
    "reason": "Using str() ensures that the object is converted to a string, which is necessary for the join operation."
  },
  {
    "line": 10,
    "text": "    def to_str(self, obj):",
    "annotation": "\ud83e\udde0 ML Signal: Use of numpy arrays for index creation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      284,
      62,
      2536,
      7,
      944,
      11,
      26181,
      2599
    ],
    "start_token": 40,
    "end_token": 52,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      299,
      32152,
      26515,
      329,
      6376,
      6282
    ],
    "label": "ml_signal",
    "reason": "Use of numpy arrays for index creation"
  },
  {
    "line": 14,
    "text": "        np.random.seed(42)",
    "annotation": "\ud83e\udde0 ML Signal: Use of numpy repeat and arange for column creation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      45941,
      13,
      25120,
      13,
      28826,
      7,
      3682,
      8
    ],
    "start_token": 52,
    "end_token": 67,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      299,
      32152,
      9585,
      290,
      610,
      858,
      329,
      5721,
      6282
    ],
    "label": "ml_signal",
    "reason": "Use of numpy repeat and arange for column creation"
  },
  {
    "line": 20,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of pandas DataFrame with random data",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 67,
    "end_token": 67,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      19798,
      292,
      6060,
      19778,
      351,
      4738,
      1366
    ],
    "label": "ml_signal",
    "reason": "Use of pandas DataFrame with random data"
  },
  {
    "line": 22,
    "text": "            np.repeat(np.array([\"g1\", \"g2\"]), 2),",
    "annotation": "\ud83e\udde0 ML Signal: Custom DataFrame-like object usage",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      45941,
      13,
      44754,
      7,
      37659,
      13,
      18747,
      7,
      14692,
      70,
      16,
      1600,
      366,
      70,
      17,
      8973,
      828,
      362,
      828
    ],
    "start_token": 67,
    "end_token": 97,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8562,
      6060,
      19778,
      12,
      2339,
      2134,
      8748
    ],
    "label": "ml_signal",
    "reason": "Custom DataFrame-like object usage"
  },
  {
    "line": 22,
    "text": "            np.repeat(np.array([\"g1\", \"g2\"]), 2),",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Direct assignment to a DataFrame-like object",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      45941,
      13,
      44754,
      7,
      37659,
      13,
      18747,
      7,
      14692,
      70,
      16,
      1600,
      366,
      70,
      17,
      8973,
      828,
      362,
      828
    ],
    "start_token": 97,
    "end_token": 127,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      4128,
      16237,
      284,
      257,
      6060,
      19778,
      12,
      2339,
      2134
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Direct assignment to a DataFrame-like object"
  },
  {
    "line": 22,
    "text": "            np.repeat(np.array([\"g1\", \"g2\"]), 2),",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Direct assignment to a DataFrame-like object",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      45941,
      13,
      44754,
      7,
      37659,
      13,
      18747,
      7,
      14692,
      70,
      16,
      1600,
      366,
      70,
      17,
      8973,
      828,
      362,
      828
    ],
    "start_token": 127,
    "end_token": 157,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      4128,
      16237,
      284,
      257,
      6060,
      19778,
      12,
      2339,
      2134
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Direct assignment to a DataFrame-like object"
  },
  {
    "line": 47,
    "text": "        \"\"\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of assertEqual for string comparison",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 157,
    "end_token": 165,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      6818,
      36,
      13255,
      329,
      4731,
      7208
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of assertEqual for string comparison"
  },
  {
    "line": 47,
    "text": "        \"\"\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Deleting DataFrame columns directly",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 165,
    "end_token": 173,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      42226,
      889,
      6060,
      19778,
      15180,
      3264
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Deleting DataFrame columns directly"
  },
  {
    "line": 47,
    "text": "        \"\"\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Deleting DataFrame columns directly",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 173,
    "end_token": 181,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      42226,
      889,
      6060,
      19778,
      15180,
      3264
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Deleting DataFrame columns directly"
  },
  {
    "line": 47,
    "text": "        \"\"\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Deleting custom DataFrame-like object keys",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 181,
    "end_token": 189,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      42226,
      889,
      2183,
      6060,
      19778,
      12,
      2339,
      2134,
      8251
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Deleting custom DataFrame-like object keys"
  },
  {
    "line": 47,
    "text": "        \"\"\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Deleting custom DataFrame-like object keys",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 189,
    "end_token": 197,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      42226,
      889,
      2183,
      6060,
      19778,
      12,
      2339,
      2134,
      8251
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Deleting custom DataFrame-like object keys"
  },
  {
    "line": 47,
    "text": "        \"\"\"",
    "annotation": "\u2705 Best Practice: Use of unittest main for test execution",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 197,
    "end_token": 205,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      555,
      715,
      395,
      1388,
      329,
      1332,
      9706
    ],
    "label": "best_practice",
    "reason": "Use of unittest main for test execution"
  }
]