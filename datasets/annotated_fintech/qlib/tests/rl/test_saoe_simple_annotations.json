[
  {
    "line": 19,
    "text": "from qlib.rl.data.pickle_styled import PickleProcessedDataProvider",
    "annotation": "\ud83e\udde0 ML Signal: Conditional test skipping based on Python version",
    "confidence": 1.0,
    "tokens": [
      6738,
      10662,
      8019,
      13,
      45895,
      13,
      7890,
      13,
      27729,
      293,
      62,
      34365,
      992,
      1330,
      12346,
      293,
      18709,
      276,
      6601,
      29495
    ],
    "start_token": 0,
    "end_token": 20,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      1332,
      31017,
      1912,
      319,
      11361,
      2196
    ],
    "label": "ml_signal",
    "reason": "Conditional test skipping based on Python version"
  },
  {
    "line": 22,
    "text": "from qlib.rl.utils import ConsoleWriter, CsvWriter, EnvWrapperStatus",
    "annotation": "\u2705 Best Practice: Use of Path for file system paths improves cross-platform compatibility",
    "confidence": 1.0,
    "tokens": [
      6738,
      10662,
      8019,
      13,
      45895,
      13,
      26791,
      1330,
      24371,
      34379,
      11,
      327,
      21370,
      34379,
      11,
      2039,
      85,
      36918,
      2848,
      19580
    ],
    "start_token": 20,
    "end_token": 40,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      10644,
      329,
      2393,
      1080,
      13532,
      19575,
      3272,
      12,
      24254,
      17764
    ],
    "label": "best_practice",
    "reason": "Use of Path for file system paths improves cross-platform compatibility"
  },
  {
    "line": 24,
    "text": "pytestmark = pytest.mark.skipif(sys.version_info < (3, 8), reason=\"Pickle styled data only supports Python >= 3.8\")",
    "annotation": "\u2705 Best Practice: Use of Path for file system paths improves cross-platform compatibility",
    "confidence": 1.0,
    "tokens": [
      9078,
      9288,
      4102,
      796,
      12972,
      9288,
      13,
      4102,
      13,
      48267,
      361,
      7,
      17597,
      13,
      9641,
      62,
      10951,
      1279,
      357,
      18,
      11,
      807,
      828,
      1738,
      2625,
      31686,
      293,
      45552,
      1366,
      691,
      6971,
      11361,
      18189,
      513,
      13,
      23,
      4943
    ],
    "start_token": 40,
    "end_token": 77,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      10644,
      329,
      2393,
      1080,
      13532,
      19575,
      3272,
      12,
      24254,
      17764
    ],
    "label": "best_practice",
    "reason": "Use of Path for file system paths improves cross-platform compatibility"
  },
  {
    "line": 26,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of Path for file system paths improves cross-platform compatibility",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 77,
    "end_token": 77,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      10644,
      329,
      2393,
      1080,
      13532,
      19575,
      3272,
      12,
      24254,
      17764
    ],
    "label": "best_practice",
    "reason": "Use of Path for file system paths improves cross-platform compatibility"
  },
  {
    "line": 28,
    "text": "DATA_DIR = DATA_ROOT_DIR / \"us\"",
    "annotation": "\u2705 Best Practice: Use of Path for file system paths improves cross-platform compatibility",
    "confidence": 1.0,
    "tokens": [
      26947,
      62,
      34720,
      796,
      42865,
      62,
      13252,
      2394,
      62,
      34720,
      1220,
      366,
      385,
      1
    ],
    "start_token": 77,
    "end_token": 91,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      10644,
      329,
      2393,
      1080,
      13532,
      19575,
      3272,
      12,
      24254,
      17764
    ],
    "label": "best_practice",
    "reason": "Use of Path for file system paths improves cross-platform compatibility"
  },
  {
    "line": 30,
    "text": "FEATURE_DATA_DIR = DATA_DIR / \"processed\"",
    "annotation": "\u2705 Best Practice: Use of Path for file system paths improves cross-platform compatibility",
    "confidence": 1.0,
    "tokens": [
      15112,
      40086,
      62,
      26947,
      62,
      34720,
      796,
      42865,
      62,
      34720,
      1220,
      366,
      14681,
      276,
      1
    ],
    "start_token": 91,
    "end_token": 106,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      10644,
      329,
      2393,
      1080,
      13532,
      19575,
      3272,
      12,
      24254,
      17764
    ],
    "label": "best_practice",
    "reason": "Use of Path for file system paths improves cross-platform compatibility"
  },
  {
    "line": 32,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of Path for file system paths improves cross-platform compatibility",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 106,
    "end_token": 106,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      10644,
      329,
      2393,
      1080,
      13532,
      19575,
      3272,
      12,
      24254,
      17764
    ],
    "label": "best_practice",
    "reason": "Use of Path for file system paths improves cross-platform compatibility"
  },
  {
    "line": 34,
    "text": "CN_FEATURE_DATA_DIR = CN_DATA_DIR / \"processed\"",
    "annotation": "\u2705 Best Practice: Use of Path for file system paths improves cross-platform compatibility",
    "confidence": 1.0,
    "tokens": [
      44175,
      62,
      15112,
      40086,
      62,
      26947,
      62,
      34720,
      796,
      31171,
      62,
      26947,
      62,
      34720,
      1220,
      366,
      14681,
      276,
      1
    ],
    "start_token": 106,
    "end_token": 125,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      10644,
      329,
      2393,
      1080,
      13532,
      19575,
      3272,
      12,
      24254,
      17764
    ],
    "label": "best_practice",
    "reason": "Use of Path for file system paths improves cross-platform compatibility"
  },
  {
    "line": 36,
    "text": "CN_POLICY_WEIGHTS_DIR = CN_DATA_DIR / \"weights\"",
    "annotation": "\u2705 Best Practice: Use of Path for file system paths improves cross-platform compatibility",
    "confidence": 1.0,
    "tokens": [
      44175,
      62,
      45472,
      2149,
      56,
      62,
      8845,
      34874,
      62,
      34720,
      796,
      31171,
      62,
      26947,
      62,
      34720,
      1220,
      366,
      43775,
      1
    ],
    "start_token": 125,
    "end_token": 145,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      10644,
      329,
      2393,
      1080,
      13532,
      19575,
      3272,
      12,
      24254,
      17764
    ],
    "label": "best_practice",
    "reason": "Use of Path for file system paths improves cross-platform compatibility"
  },
  {
    "line": 38,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of Path for file system paths improves cross-platform compatibility",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 145,
    "end_token": 145,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      10644,
      329,
      2393,
      1080,
      13532,
      19575,
      3272,
      12,
      24254,
      17764
    ],
    "label": "best_practice",
    "reason": "Use of Path for file system paths improves cross-platform compatibility"
  },
  {
    "line": 28,
    "text": "DATA_DIR = DATA_ROOT_DIR / \"us\"",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with a specific name pattern indicating a test function",
    "confidence": 1.0,
    "tokens": [
      26947,
      62,
      34720,
      796,
      42865,
      62,
      13252,
      2394,
      62,
      34720,
      1220,
      366,
      385,
      1
    ],
    "start_token": 145,
    "end_token": 159,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      257,
      2176,
      1438,
      3912,
      12739,
      257,
      1332,
      2163
    ],
    "label": "ml_signal",
    "reason": "Function definition with a specific name pattern indicating a test function"
  },
  {
    "line": 30,
    "text": "FEATURE_DATA_DIR = DATA_DIR / \"processed\"",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a custom function to load data",
    "confidence": 1.0,
    "tokens": [
      15112,
      40086,
      62,
      26947,
      62,
      34720,
      796,
      42865,
      62,
      34720,
      1220,
      366,
      14681,
      276,
      1
    ],
    "start_token": 159,
    "end_token": 174,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      2183,
      2163,
      284,
      3440,
      1366
    ],
    "label": "ml_signal",
    "reason": "Usage of a custom function to load data"
  },
  {
    "line": 32,
    "text": "",
    "annotation": "\u2705 Best Practice: Asserting expected length of data for validation",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 174,
    "end_token": 174,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2195,
      861,
      278,
      2938,
      4129,
      286,
      1366,
      329,
      21201
    ],
    "label": "best_practice",
    "reason": "Asserting expected length of data for validation"
  },
  {
    "line": 34,
    "text": "CN_FEATURE_DATA_DIR = CN_DATA_DIR / \"processed\"",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of a custom data provider class",
    "confidence": 1.0,
    "tokens": [
      44175,
      62,
      15112,
      40086,
      62,
      26947,
      62,
      34720,
      796,
      31171,
      62,
      26947,
      62,
      34720,
      1220,
      366,
      14681,
      276,
      1
    ],
    "start_token": 174,
    "end_token": 193,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      257,
      2183,
      1366,
      10131,
      1398
    ],
    "label": "ml_signal",
    "reason": "Instantiation of a custom data provider class"
  },
  {
    "line": 36,
    "text": "CN_POLICY_WEIGHTS_DIR = CN_DATA_DIR / \"weights\"",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a method to retrieve data with specific parameters",
    "confidence": 1.0,
    "tokens": [
      44175,
      62,
      45472,
      2149,
      56,
      62,
      8845,
      34874,
      62,
      34720,
      796,
      31171,
      62,
      26947,
      62,
      34720,
      1220,
      366,
      43775,
      1
    ],
    "start_token": 193,
    "end_token": 213,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      2446,
      284,
      19818,
      1366,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Usage of a method to retrieve data with specific parameters"
  },
  {
    "line": 38,
    "text": "",
    "annotation": "\u2705 Best Practice: Asserting expected length of data for validation",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 213,
    "end_token": 213,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2195,
      861,
      278,
      2938,
      4129,
      286,
      1366,
      329,
      21201
    ],
    "label": "best_practice",
    "reason": "Asserting expected length of data for validation"
  },
  {
    "line": 34,
    "text": "CN_FEATURE_DATA_DIR = CN_DATA_DIR / \"processed\"",
    "annotation": "\ud83e\udde0 ML Signal: Function name indicates a test case, useful for identifying test functions",
    "confidence": 1.0,
    "tokens": [
      44175,
      62,
      15112,
      40086,
      62,
      26947,
      62,
      34720,
      796,
      31171,
      62,
      26947,
      62,
      34720,
      1220,
      366,
      14681,
      276,
      1
    ],
    "start_token": 213,
    "end_token": 232,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      1438,
      9217,
      257,
      1332,
      1339,
      11,
      4465,
      329,
      13720,
      1332,
      5499
    ],
    "label": "ml_signal",
    "reason": "Function name indicates a test case, useful for identifying test functions"
  },
  {
    "line": 36,
    "text": "CN_POLICY_WEIGHTS_DIR = CN_DATA_DIR / \"weights\"",
    "annotation": "\ud83e\udde0 ML Signal: Order creation with specific parameters, useful for learning order patterns",
    "confidence": 1.0,
    "tokens": [
      44175,
      62,
      45472,
      2149,
      56,
      62,
      8845,
      34874,
      62,
      34720,
      796,
      31171,
      62,
      26947,
      62,
      34720,
      1220,
      366,
      43775,
      1
    ],
    "start_token": 232,
    "end_token": 252,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8284,
      6282,
      351,
      2176,
      10007,
      11,
      4465,
      329,
      4673,
      1502,
      7572
    ],
    "label": "ml_signal",
    "reason": "Order creation with specific parameters, useful for learning order patterns"
  },
  {
    "line": 38,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Simulator initialization with order and data directory, useful for learning initialization patterns",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 252,
    "end_token": 252,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      13942,
      37588,
      351,
      1502,
      290,
      1366,
      8619,
      11,
      4465,
      329,
      4673,
      37588,
      7572
    ],
    "label": "ml_signal",
    "reason": "Simulator initialization with order and data directory, useful for learning initialization patterns"
  },
  {
    "line": 40,
    "text": "    data = pickle_styled.load_simple_intraday_backtest_data(BACKTEST_DATA_DIR, \"AAL\", \"2013-12-11\", \"close\", 0)",
    "annotation": "\ud83e\udde0 ML Signal: Retrieving state from simulator, useful for learning state management",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1366,
      796,
      2298,
      293,
      62,
      34365,
      992,
      13,
      2220,
      62,
      36439,
      62,
      600,
      6335,
      323,
      62,
      1891,
      9288,
      62,
      7890,
      7,
      31098,
      51,
      6465,
      62,
      26947,
      62,
      34720,
      11,
      366,
      32,
      1847,
      1600,
      366,
      6390,
      12,
      1065,
      12,
      1157,
      1600,
      366,
      19836,
      1600,
      657,
      8
    ],
    "start_token": 252,
    "end_token": 300,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      4990,
      37418,
      1181,
      422,
      35375,
      11,
      4465,
      329,
      4673,
      1181,
      4542
    ],
    "label": "ml_signal",
    "reason": "Retrieving state from simulator, useful for learning state management"
  },
  {
    "line": 42,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Assertion to check initial state time, useful for learning expected state transitions",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 300,
    "end_token": 300,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      284,
      2198,
      4238,
      1181,
      640,
      11,
      4465,
      329,
      4673,
      2938,
      1181,
      27188
    ],
    "label": "ml_signal",
    "reason": "Assertion to check initial state time, useful for learning expected state transitions"
  },
  {
    "line": 44,
    "text": "    data = provider.get_data(\"AAL\", \"2013-12-11\", 5, data.get_time_index())",
    "annotation": "\ud83e\udde0 ML Signal: Assertion to check initial position, useful for learning expected state transitions",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1366,
      796,
      10131,
      13,
      1136,
      62,
      7890,
      7203,
      32,
      1847,
      1600,
      366,
      6390,
      12,
      1065,
      12,
      1157,
      1600,
      642,
      11,
      1366,
      13,
      1136,
      62,
      2435,
      62,
      9630,
      28955
    ],
    "start_token": 300,
    "end_token": 331,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      284,
      2198,
      4238,
      2292,
      11,
      4465,
      329,
      4673,
      2938,
      1181,
      27188
    ],
    "label": "ml_signal",
    "reason": "Assertion to check initial position, useful for learning expected state transitions"
  },
  {
    "line": 46,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Simulator step function call, useful for learning step execution patterns",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 331,
    "end_token": 331,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      13942,
      2239,
      2163,
      869,
      11,
      4465,
      329,
      4673,
      2239,
      9706,
      7572
    ],
    "label": "ml_signal",
    "reason": "Simulator step function call, useful for learning step execution patterns"
  },
  {
    "line": 48,
    "text": "def test_simulator_first_step():",
    "annotation": "\ud83e\udde0 ML Signal: Retrieving state after step, useful for learning state management",
    "confidence": 1.0,
    "tokens": [
      4299,
      1332,
      62,
      14323,
      8927,
      62,
      11085,
      62,
      9662,
      33529
    ],
    "start_token": 331,
    "end_token": 341,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      4990,
      37418,
      1181,
      706,
      2239,
      11,
      4465,
      329,
      4673,
      1181,
      4542
    ],
    "label": "ml_signal",
    "reason": "Retrieving state after step, useful for learning state management"
  },
  {
    "line": 50,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Assertion to check history execution length, useful for learning expected state transitions",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 341,
    "end_token": 341,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      284,
      2198,
      2106,
      9706,
      4129,
      11,
      4465,
      329,
      4673,
      2938,
      1181,
      27188
    ],
    "label": "ml_signal",
    "reason": "Assertion to check history execution length, useful for learning expected state transitions"
  },
  {
    "line": 52,
    "text": "    state = simulator.get_state()",
    "annotation": "\ud83e\udde0 ML Signal: Assertion to check first index of history execution, useful for learning expected state transitions",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1181,
      796,
      35375,
      13,
      1136,
      62,
      5219,
      3419
    ],
    "start_token": 341,
    "end_token": 352,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      284,
      2198,
      717,
      6376,
      286,
      2106,
      9706,
      11,
      4465,
      329,
      4673,
      2938,
      1181,
      27188
    ],
    "label": "ml_signal",
    "reason": "Assertion to check first index of history execution, useful for learning expected state transitions"
  },
  {
    "line": 54,
    "text": "    assert state.position == 30.0",
    "annotation": "\ud83e\udde0 ML Signal: Assertion to check market volume, useful for learning expected state transitions",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      1181,
      13,
      9150,
      6624,
      1542,
      13,
      15
    ],
    "start_token": 352,
    "end_token": 363,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      284,
      2198,
      1910,
      6115,
      11,
      4465,
      329,
      4673,
      2938,
      1181,
      27188
    ],
    "label": "ml_signal",
    "reason": "Assertion to check market volume, useful for learning expected state transitions"
  },
  {
    "line": 56,
    "text": "    simulator.step(15.0)",
    "annotation": "\ud83e\udde0 ML Signal: Assertion to check market price with tolerance, useful for learning expected state transitions",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      35375,
      13,
      9662,
      7,
      1314,
      13,
      15,
      8
    ],
    "start_token": 363,
    "end_token": 374,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      284,
      2198,
      1910,
      2756,
      351,
      15621,
      11,
      4465,
      329,
      4673,
      2938,
      1181,
      27188
    ],
    "label": "ml_signal",
    "reason": "Assertion to check market price with tolerance, useful for learning expected state transitions"
  },
  {
    "line": 56,
    "text": "    simulator.step(15.0)",
    "annotation": "\ud83e\udde0 ML Signal: Assertion to check amount consistency, useful for learning expected state transitions",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      35375,
      13,
      9662,
      7,
      1314,
      13,
      15,
      8
    ],
    "start_token": 374,
    "end_token": 385,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      284,
      2198,
      2033,
      15794,
      11,
      4465,
      329,
      4673,
      2938,
      1181,
      27188
    ],
    "label": "ml_signal",
    "reason": "Assertion to check amount consistency, useful for learning expected state transitions"
  },
  {
    "line": 60,
    "text": "    assert state.history_exec[\"market_volume\"].iloc[0] == 450072.0",
    "annotation": "\ud83e\udde0 ML Signal: Assertion to check deal amount consistency, useful for learning expected state transitions",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      1181,
      13,
      23569,
      62,
      18558,
      14692,
      10728,
      62,
      29048,
      1,
      4083,
      346,
      420,
      58,
      15,
      60,
      6624,
      604,
      4059,
      4761,
      13,
      15
    ],
    "start_token": 385,
    "end_token": 411,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      284,
      2198,
      1730,
      2033,
      15794,
      11,
      4465,
      329,
      4673,
      2938,
      1181,
      27188
    ],
    "label": "ml_signal",
    "reason": "Assertion to check deal amount consistency, useful for learning expected state transitions"
  },
  {
    "line": 62,
    "text": "    assert (state.history_exec[\"amount\"] == 0.5).all()",
    "annotation": "\ud83e\udde0 ML Signal: Assertion to check trade price with tolerance, useful for learning expected state transitions",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      357,
      5219,
      13,
      23569,
      62,
      18558,
      14692,
      17287,
      8973,
      6624,
      657,
      13,
      20,
      737,
      439,
      3419
    ],
    "start_token": 411,
    "end_token": 431,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      284,
      2198,
      3292,
      2756,
      351,
      15621,
      11,
      4465,
      329,
      4673,
      2938,
      1181,
      27188
    ],
    "label": "ml_signal",
    "reason": "Assertion to check trade price with tolerance, useful for learning expected state transitions"
  },
  {
    "line": 64,
    "text": "    assert abs(state.history_exec[\"trade_price\"].iloc[0] - 25.370001) < 1e-4",
    "annotation": "\ud83e\udde0 ML Signal: Assertion to check trade value with tolerance, useful for learning expected state transitions",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      2352,
      7,
      5219,
      13,
      23569,
      62,
      18558,
      14692,
      25351,
      62,
      20888,
      1,
      4083,
      346,
      420,
      58,
      15,
      60,
      532,
      1679,
      13,
      2718,
      18005,
      8,
      1279,
      352,
      68,
      12,
      19
    ],
    "start_token": 431,
    "end_token": 464,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      284,
      2198,
      3292,
      1988,
      351,
      15621,
      11,
      4465,
      329,
      4673,
      2938,
      1181,
      27188
    ],
    "label": "ml_signal",
    "reason": "Assertion to check trade value with tolerance, useful for learning expected state transitions"
  },
  {
    "line": 66,
    "text": "    assert state.history_exec[\"position\"].iloc[0] == 29.5",
    "annotation": "\ud83e\udde0 ML Signal: Assertion to check position after execution, useful for learning expected state transitions",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      1181,
      13,
      23569,
      62,
      18558,
      14692,
      9150,
      1,
      4083,
      346,
      420,
      58,
      15,
      60,
      6624,
      2808,
      13,
      20
    ],
    "start_token": 464,
    "end_token": 486,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      284,
      2198,
      2292,
      706,
      9706,
      11,
      4465,
      329,
      4673,
      2938,
      1181,
      27188
    ],
    "label": "ml_signal",
    "reason": "Assertion to check position after execution, useful for learning expected state transitions"
  },
  {
    "line": 68,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Assertion to check fill factor rate, useful for learning expected state transitions",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 486,
    "end_token": 486,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      284,
      2198,
      6070,
      5766,
      2494,
      11,
      4465,
      329,
      4673,
      2938,
      1181,
      27188
    ],
    "label": "ml_signal",
    "reason": "Assertion to check fill factor rate, useful for learning expected state transitions"
  },
  {
    "line": 70,
    "text": "    assert state.history_steps[\"amount\"].iloc[0] == 15.0",
    "annotation": "\ud83e\udde0 ML Signal: Assertion to check market volume in steps, useful for learning expected state transitions",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      1181,
      13,
      23569,
      62,
      20214,
      14692,
      17287,
      1,
      4083,
      346,
      420,
      58,
      15,
      60,
      6624,
      1315,
      13,
      15
    ],
    "start_token": 486,
    "end_token": 508,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      284,
      2198,
      1910,
      6115,
      287,
      4831,
      11,
      4465,
      329,
      4673,
      2938,
      1181,
      27188
    ],
    "label": "ml_signal",
    "reason": "Assertion to check market volume in steps, useful for learning expected state transitions"
  },
  {
    "line": 72,
    "text": "    assert state.history_steps[\"ffr\"].iloc[0] == 0.5",
    "annotation": "\ud83e\udde0 ML Signal: Assertion to check amount in steps, useful for learning expected state transitions",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      1181,
      13,
      23569,
      62,
      20214,
      14692,
      487,
      81,
      1,
      4083,
      346,
      420,
      58,
      15,
      60,
      6624,
      657,
      13,
      20
    ],
    "start_token": 508,
    "end_token": 531,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      284,
      2198,
      2033,
      287,
      4831,
      11,
      4465,
      329,
      4673,
      2938,
      1181,
      27188
    ],
    "label": "ml_signal",
    "reason": "Assertion to check amount in steps, useful for learning expected state transitions"
  },
  {
    "line": 74,
    "text": "        state.history_steps[\"pa\"].iloc[0]",
    "annotation": "\ud83e\udde0 ML Signal: Assertion to check deal amount in steps, useful for learning expected state transitions",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1181,
      13,
      23569,
      62,
      20214,
      14692,
      8957,
      1,
      4083,
      346,
      420,
      58,
      15,
      60
    ],
    "start_token": 531,
    "end_token": 552,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      284,
      2198,
      1730,
      2033,
      287,
      4831,
      11,
      4465,
      329,
      4673,
      2938,
      1181,
      27188
    ],
    "label": "ml_signal",
    "reason": "Assertion to check deal amount in steps, useful for learning expected state transitions"
  },
  {
    "line": 76,
    "text": "    )",
    "annotation": "\ud83e\udde0 ML Signal: Assertion to check fill factor rate in steps, useful for learning expected state transitions",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1267
    ],
    "start_token": 552,
    "end_token": 556,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      284,
      2198,
      6070,
      5766,
      2494,
      287,
      4831,
      11,
      4465,
      329,
      4673,
      2938,
      1181,
      27188
    ],
    "label": "ml_signal",
    "reason": "Assertion to check fill factor rate in steps, useful for learning expected state transitions"
  },
  {
    "line": 78,
    "text": "    assert state.position == 15.0",
    "annotation": "\ud83e\udde0 ML Signal: Assertion to check price adjustment calculation, useful for learning expected state transitions",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      1181,
      13,
      9150,
      6624,
      1315,
      13,
      15
    ],
    "start_token": 556,
    "end_token": 567,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      284,
      2198,
      2756,
      15068,
      17952,
      11,
      4465,
      329,
      4673,
      2938,
      1181,
      27188
    ],
    "label": "ml_signal",
    "reason": "Assertion to check price adjustment calculation, useful for learning expected state transitions"
  },
  {
    "line": 83,
    "text": "    order = Order(\"AAL\", 13.0, 0, pd.Timestamp(\"2013-12-11 00:00:00\"), pd.Timestamp(\"2013-12-11 23:59:59\"))",
    "annotation": "\ud83e\udde0 ML Signal: Assertion to check position after step, useful for learning expected state transitions",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1502,
      796,
      8284,
      7203,
      32,
      1847,
      1600,
      1511,
      13,
      15,
      11,
      657,
      11,
      279,
      67,
      13,
      14967,
      27823,
      7203,
      6390,
      12,
      1065,
      12,
      1157,
      3571,
      25,
      405,
      25,
      405,
      12340,
      279,
      67,
      13,
      14967,
      27823,
      7203,
      6390,
      12,
      1065,
      12,
      1157,
      2242,
      25,
      3270,
      25,
      3270,
      48774
    ],
    "start_token": 567,
    "end_token": 617,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      284,
      2198,
      2292,
      706,
      2239,
      11,
      4465,
      329,
      4673,
      2938,
      1181,
      27188
    ],
    "label": "ml_signal",
    "reason": "Assertion to check position after step, useful for learning expected state transitions"
  },
  {
    "line": 85,
    "text": "    simulator = SingleAssetOrderExecutionSimple(order, DATA_DIR)",
    "annotation": "\ud83e\udde0 ML Signal: Assertion to check current time after step, useful for learning expected state transitions",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      35375,
      796,
      14206,
      45869,
      18743,
      23002,
      1009,
      26437,
      7,
      2875,
      11,
      42865,
      62,
      34720,
      8
    ],
    "start_token": 617,
    "end_token": 635,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      284,
      2198,
      1459,
      640,
      706,
      2239,
      11,
      4465,
      329,
      4673,
      2938,
      1181,
      27188
    ],
    "label": "ml_signal",
    "reason": "Assertion to check current time after step, useful for learning expected state transitions"
  },
  {
    "line": 62,
    "text": "    assert (state.history_exec[\"amount\"] == 0.5).all()",
    "annotation": "\ud83e\udde0 ML Signal: Function name indicates a test case, useful for identifying test patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      357,
      5219,
      13,
      23569,
      62,
      18558,
      14692,
      17287,
      8973,
      6624,
      657,
      13,
      20,
      737,
      439,
      3419
    ],
    "start_token": 635,
    "end_token": 655,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      1438,
      9217,
      257,
      1332,
      1339,
      11,
      4465,
      329,
      13720,
      1332,
      7572
    ],
    "label": "ml_signal",
    "reason": "Function name indicates a test case, useful for identifying test patterns"
  },
  {
    "line": 64,
    "text": "    assert abs(state.history_exec[\"trade_price\"].iloc[0] - 25.370001) < 1e-4",
    "annotation": "\ud83e\udde0 ML Signal: Order creation pattern, useful for understanding object initialization",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      2352,
      7,
      5219,
      13,
      23569,
      62,
      18558,
      14692,
      25351,
      62,
      20888,
      1,
      4083,
      346,
      420,
      58,
      15,
      60,
      532,
      1679,
      13,
      2718,
      18005,
      8,
      1279,
      352,
      68,
      12,
      19
    ],
    "start_token": 655,
    "end_token": 688,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8284,
      6282,
      3912,
      11,
      4465,
      329,
      4547,
      2134,
      37588
    ],
    "label": "ml_signal",
    "reason": "Order creation pattern, useful for understanding object initialization"
  },
  {
    "line": 66,
    "text": "    assert state.history_exec[\"position\"].iloc[0] == 29.5",
    "annotation": "\ud83e\udde0 ML Signal: Simulator initialization pattern, useful for understanding object initialization",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      1181,
      13,
      23569,
      62,
      18558,
      14692,
      9150,
      1,
      4083,
      346,
      420,
      58,
      15,
      60,
      6624,
      2808,
      13,
      20
    ],
    "start_token": 688,
    "end_token": 710,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      13942,
      37588,
      3912,
      11,
      4465,
      329,
      4547,
      2134,
      37588
    ],
    "label": "ml_signal",
    "reason": "Simulator initialization pattern, useful for understanding object initialization"
  },
  {
    "line": 68,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Loop pattern, useful for understanding iteration over a fixed range",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 710,
    "end_token": 710,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      26304,
      3912,
      11,
      4465,
      329,
      4547,
      24415,
      625,
      257,
      5969,
      2837
    ],
    "label": "ml_signal",
    "reason": "Loop pattern, useful for understanding iteration over a fixed range"
  },
  {
    "line": 70,
    "text": "    assert state.history_steps[\"amount\"].iloc[0] == 15.0",
    "annotation": "\ud83e\udde0 ML Signal: Method call pattern, useful for understanding object behavior",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      1181,
      13,
      23569,
      62,
      20214,
      14692,
      17287,
      1,
      4083,
      346,
      420,
      58,
      15,
      60,
      6624,
      1315,
      13,
      15
    ],
    "start_token": 710,
    "end_token": 732,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      869,
      3912,
      11,
      4465,
      329,
      4547,
      2134,
      4069
    ],
    "label": "ml_signal",
    "reason": "Method call pattern, useful for understanding object behavior"
  },
  {
    "line": 72,
    "text": "    assert state.history_steps[\"ffr\"].iloc[0] == 0.5",
    "annotation": "\ud83e\udde0 ML Signal: Method call pattern, useful for understanding object behavior",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      1181,
      13,
      23569,
      62,
      20214,
      14692,
      487,
      81,
      1,
      4083,
      346,
      420,
      58,
      15,
      60,
      6624,
      657,
      13,
      20
    ],
    "start_token": 732,
    "end_token": 755,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      869,
      3912,
      11,
      4465,
      329,
      4547,
      2134,
      4069
    ],
    "label": "ml_signal",
    "reason": "Method call pattern, useful for understanding object behavior"
  },
  {
    "line": 74,
    "text": "        state.history_steps[\"pa\"].iloc[0]",
    "annotation": "\ud83e\udde0 ML Signal: Assertion pattern, useful for understanding expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1181,
      13,
      23569,
      62,
      20214,
      14692,
      8957,
      1,
      4083,
      346,
      420,
      58,
      15,
      60
    ],
    "start_token": 755,
    "end_token": 776,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      3912,
      11,
      4465,
      329,
      4547,
      2938,
      10906
    ],
    "label": "ml_signal",
    "reason": "Assertion pattern, useful for understanding expected outcomes"
  },
  {
    "line": 76,
    "text": "    )",
    "annotation": "\ud83e\udde0 ML Signal: Assertion pattern, useful for understanding expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1267
    ],
    "start_token": 776,
    "end_token": 780,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      3912,
      11,
      4465,
      329,
      4547,
      2938,
      10906
    ],
    "label": "ml_signal",
    "reason": "Assertion pattern, useful for understanding expected outcomes"
  },
  {
    "line": 78,
    "text": "    assert state.position == 15.0",
    "annotation": "\ud83e\udde0 ML Signal: Assertion pattern, useful for understanding expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      1181,
      13,
      9150,
      6624,
      1315,
      13,
      15
    ],
    "start_token": 780,
    "end_token": 791,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      3912,
      11,
      4465,
      329,
      4547,
      2938,
      10906
    ],
    "label": "ml_signal",
    "reason": "Assertion pattern, useful for understanding expected outcomes"
  },
  {
    "line": 80,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Assertion pattern, useful for understanding expected outcomes",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 791,
    "end_token": 791,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      3912,
      11,
      4465,
      329,
      4547,
      2938,
      10906
    ],
    "label": "ml_signal",
    "reason": "Assertion pattern, useful for understanding expected outcomes"
  },
  {
    "line": 82,
    "text": "def test_simulator_stop_twap():",
    "annotation": "\ud83e\udde0 ML Signal: Assertion pattern, useful for understanding expected outcomes",
    "confidence": 0.5,
    "tokens": [
      4299,
      1332,
      62,
      14323,
      8927,
      62,
      11338,
      62,
      4246,
      499,
      33529
    ],
    "start_token": 791,
    "end_token": 802,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      3912,
      11,
      4465,
      329,
      4547,
      2938,
      10906
    ],
    "label": "ml_signal",
    "reason": "Assertion pattern, useful for understanding expected outcomes"
  },
  {
    "line": 84,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Assertion pattern, useful for understanding expected outcomes",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 802,
    "end_token": 802,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      3912,
      11,
      4465,
      329,
      4547,
      2938,
      10906
    ],
    "label": "ml_signal",
    "reason": "Assertion pattern, useful for understanding expected outcomes"
  },
  {
    "line": 86,
    "text": "    for _ in range(13):",
    "annotation": "\ud83e\udde0 ML Signal: Assertion pattern, useful for understanding expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      329,
      4808,
      287,
      2837,
      7,
      1485,
      2599
    ],
    "start_token": 802,
    "end_token": 812,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      3912,
      11,
      4465,
      329,
      4547,
      2938,
      10906
    ],
    "label": "ml_signal",
    "reason": "Assertion pattern, useful for understanding expected outcomes"
  },
  {
    "line": 88,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Assertion pattern, useful for understanding expected outcomes",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 812,
    "end_token": 812,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      3912,
      11,
      4465,
      329,
      4547,
      2938,
      10906
    ],
    "label": "ml_signal",
    "reason": "Assertion pattern, useful for understanding expected outcomes"
  },
  {
    "line": 90,
    "text": "    assert len(state.history_exec) == 390",
    "annotation": "\ud83e\udde0 ML Signal: Assertion pattern, useful for understanding expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      18896,
      7,
      5219,
      13,
      23569,
      62,
      18558,
      8,
      6624,
      33882
    ],
    "start_token": 812,
    "end_token": 826,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      3912,
      11,
      4465,
      329,
      4547,
      2938,
      10906
    ],
    "label": "ml_signal",
    "reason": "Assertion pattern, useful for understanding expected outcomes"
  },
  {
    "line": 92,
    "text": "    assert state.history_steps[\"position\"].iloc[0] == 12 and state.history_steps[\"position\"].iloc[-1] == 0",
    "annotation": "\ud83e\udde0 ML Signal: Method call pattern, useful for understanding object behavior",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      1181,
      13,
      23569,
      62,
      20214,
      14692,
      9150,
      1,
      4083,
      346,
      420,
      58,
      15,
      60,
      6624,
      1105,
      290,
      1181,
      13,
      23569,
      62,
      20214,
      14692,
      9150,
      1,
      4083,
      346,
      420,
      58,
      12,
      16,
      60,
      6624,
      657
    ],
    "start_token": 826,
    "end_token": 864,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      869,
      3912,
      11,
      4465,
      329,
      4547,
      2134,
      4069
    ],
    "label": "ml_signal",
    "reason": "Method call pattern, useful for understanding object behavior"
  },
  {
    "line": 78,
    "text": "    assert state.position == 15.0",
    "annotation": "\ud83e\udde0 ML Signal: Function name indicates a test, useful for identifying test patterns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      1181,
      13,
      9150,
      6624,
      1315,
      13,
      15
    ],
    "start_token": 864,
    "end_token": 875,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      1438,
      9217,
      257,
      1332,
      11,
      4465,
      329,
      13720,
      1332,
      7572
    ],
    "label": "ml_signal",
    "reason": "Function name indicates a test, useful for identifying test patterns"
  },
  {
    "line": 80,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of Order class with specific parameters, useful for learning object initialization patterns",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 875,
    "end_token": 875,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      8284,
      1398,
      351,
      2176,
      10007,
      11,
      4465,
      329,
      4673,
      2134,
      37588,
      7572
    ],
    "label": "ml_signal",
    "reason": "Usage of Order class with specific parameters, useful for learning object initialization patterns"
  },
  {
    "line": 82,
    "text": "def test_simulator_stop_twap():",
    "annotation": "\ud83e\udde0 ML Signal: Use of pytest.raises to test for exceptions, useful for learning testing patterns",
    "confidence": 1.0,
    "tokens": [
      4299,
      1332,
      62,
      14323,
      8927,
      62,
      11338,
      62,
      4246,
      499,
      33529
    ],
    "start_token": 875,
    "end_token": 886,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      12972,
      9288,
      13,
      430,
      2696,
      284,
      1332,
      329,
      13269,
      11,
      4465,
      329,
      4673,
      4856,
      7572
    ],
    "label": "ml_signal",
    "reason": "Use of pytest.raises to test for exceptions, useful for learning testing patterns"
  },
  {
    "line": 84,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of SingleAssetOrderExecutionSimple, useful for learning object creation patterns",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 886,
    "end_token": 886,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      14206,
      45869,
      18743,
      23002,
      1009,
      26437,
      11,
      4465,
      329,
      4673,
      2134,
      6282,
      7572
    ],
    "label": "ml_signal",
    "reason": "Instantiation of SingleAssetOrderExecutionSimple, useful for learning object creation patterns"
  },
  {
    "line": 86,
    "text": "    for _ in range(13):",
    "annotation": "\ud83e\udde0 ML Signal: Method call with specific argument, useful for learning method usage patterns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      329,
      4808,
      287,
      2837,
      7,
      1485,
      2599
    ],
    "start_token": 886,
    "end_token": 896,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      869,
      351,
      2176,
      4578,
      11,
      4465,
      329,
      4673,
      2446,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Method call with specific argument, useful for learning method usage patterns"
  },
  {
    "line": 88,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Re-instantiation of the simulator, useful for learning object lifecycle patterns",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 896,
    "end_token": 896,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      797,
      12,
      8625,
      415,
      3920,
      286,
      262,
      35375,
      11,
      4465,
      329,
      4673,
      2134,
      3868,
      47510,
      7572
    ],
    "label": "ml_signal",
    "reason": "Re-instantiation of the simulator, useful for learning object lifecycle patterns"
  },
  {
    "line": 90,
    "text": "    assert len(state.history_exec) == 390",
    "annotation": "\ud83e\udde0 ML Signal: Method call with specific argument, useful for learning method usage patterns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      18896,
      7,
      5219,
      13,
      23569,
      62,
      18558,
      8,
      6624,
      33882
    ],
    "start_token": 896,
    "end_token": 910,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      869,
      351,
      2176,
      4578,
      11,
      4465,
      329,
      4673,
      2446,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Method call with specific argument, useful for learning method usage patterns"
  },
  {
    "line": 92,
    "text": "    assert state.history_steps[\"position\"].iloc[0] == 12 and state.history_steps[\"position\"].iloc[-1] == 0",
    "annotation": "\ud83e\udde0 ML Signal: Use of pytest.raises to test for exceptions, useful for learning testing patterns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      1181,
      13,
      23569,
      62,
      20214,
      14692,
      9150,
      1,
      4083,
      346,
      420,
      58,
      15,
      60,
      6624,
      1105,
      290,
      1181,
      13,
      23569,
      62,
      20214,
      14692,
      9150,
      1,
      4083,
      346,
      420,
      58,
      12,
      16,
      60,
      6624,
      657
    ],
    "start_token": 910,
    "end_token": 948,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      12972,
      9288,
      13,
      430,
      2696,
      284,
      1332,
      329,
      13269,
      11,
      4465,
      329,
      4673,
      4856,
      7572
    ],
    "label": "ml_signal",
    "reason": "Use of pytest.raises to test for exceptions, useful for learning testing patterns"
  },
  {
    "line": 94,
    "text": "    assert (state.metrics[\"ffr\"] - 1) < 1e-3",
    "annotation": "\ud83e\udde0 ML Signal: Method call with specific argument, useful for learning method usage patterns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      357,
      5219,
      13,
      4164,
      10466,
      14692,
      487,
      81,
      8973,
      532,
      352,
      8,
      1279,
      352,
      68,
      12,
      18
    ],
    "start_token": 948,
    "end_token": 969,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      869,
      351,
      2176,
      4578,
      11,
      4465,
      329,
      4673,
      2446,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Method call with specific argument, useful for learning method usage patterns"
  },
  {
    "line": 87,
    "text": "        simulator.step(1.0)",
    "annotation": "\ud83e\udde0 ML Signal: Usage of assert statements to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      35375,
      13,
      9662,
      7,
      16,
      13,
      15,
      8
    ],
    "start_token": 969,
    "end_token": 984,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      6818,
      6299,
      284,
      26571,
      2938,
      10906
    ],
    "label": "ml_signal",
    "reason": "Usage of assert statements to validate expected outcomes"
  },
  {
    "line": 90,
    "text": "    assert len(state.history_exec) == 390",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of a simulator object with specific parameters",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      18896,
      7,
      5219,
      13,
      23569,
      62,
      18558,
      8,
      6624,
      33882
    ],
    "start_token": 984,
    "end_token": 998,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      257,
      35375,
      2134,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Instantiation of a simulator object with specific parameters"
  },
  {
    "line": 92,
    "text": "    assert state.history_steps[\"position\"].iloc[0] == 12 and state.history_steps[\"position\"].iloc[-1] == 0",
    "annotation": "\ud83e\udde0 ML Signal: Validation of simulator's initial state",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      1181,
      13,
      23569,
      62,
      20214,
      14692,
      9150,
      1,
      4083,
      346,
      420,
      58,
      15,
      60,
      6624,
      1105,
      290,
      1181,
      13,
      23569,
      62,
      20214,
      14692,
      9150,
      1,
      4083,
      346,
      420,
      58,
      12,
      16,
      60,
      6624,
      657
    ],
    "start_token": 998,
    "end_token": 1036,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3254,
      24765,
      286,
      35375,
      338,
      4238,
      1181
    ],
    "label": "ml_signal",
    "reason": "Validation of simulator's initial state"
  },
  {
    "line": 94,
    "text": "    assert (state.metrics[\"ffr\"] - 1) < 1e-3",
    "annotation": "\ud83e\udde0 ML Signal: Validation of simulator's initial time",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      357,
      5219,
      13,
      4164,
      10466,
      14692,
      487,
      81,
      8973,
      532,
      352,
      8,
      1279,
      352,
      68,
      12,
      18
    ],
    "start_token": 1036,
    "end_token": 1057,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3254,
      24765,
      286,
      35375,
      338,
      4238,
      640
    ],
    "label": "ml_signal",
    "reason": "Validation of simulator's initial time"
  },
  {
    "line": 96,
    "text": "    assert np.isclose(state.metrics[\"market_volume\"], state.backtest_data.get_volume().sum())",
    "annotation": "\ud83e\udde0 ML Signal: Simulator step function usage with a parameter",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      45941,
      13,
      271,
      19836,
      7,
      5219,
      13,
      4164,
      10466,
      14692,
      10728,
      62,
      29048,
      33116,
      1181,
      13,
      1891,
      9288,
      62,
      7890,
      13,
      1136,
      62,
      29048,
      22446,
      16345,
      28955
    ],
    "start_token": 1057,
    "end_token": 1088,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      13942,
      2239,
      2163,
      8748,
      351,
      257,
      11507
    ],
    "label": "ml_signal",
    "reason": "Simulator step function usage with a parameter"
  },
  {
    "line": 98,
    "text": "    assert abs(state.metrics[\"trade_price\"] - state.metrics[\"market_price\"]) < 1e-4",
    "annotation": "\ud83e\udde0 ML Signal: Validation of simulator's time after stepping",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      2352,
      7,
      5219,
      13,
      4164,
      10466,
      14692,
      25351,
      62,
      20888,
      8973,
      532,
      1181,
      13,
      4164,
      10466,
      14692,
      10728,
      62,
      20888,
      8973,
      8,
      1279,
      352,
      68,
      12,
      19
    ],
    "start_token": 1088,
    "end_token": 1119,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3254,
      24765,
      286,
      35375,
      338,
      640,
      706,
      17413
    ],
    "label": "ml_signal",
    "reason": "Validation of simulator's time after stepping"
  },
  {
    "line": 101,
    "text": "    assert simulator.done()",
    "annotation": "\ud83e\udde0 ML Signal: Repeated simulator step function usage",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      35375,
      13,
      28060,
      3419
    ],
    "start_token": 1119,
    "end_token": 1127,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      30558,
      515,
      35375,
      2239,
      2163,
      8748
    ],
    "label": "ml_signal",
    "reason": "Repeated simulator step function usage"
  },
  {
    "line": 104,
    "text": "def test_simulator_stop_early():",
    "annotation": "\ud83e\udde0 ML Signal: Validation of simulator's execution history length",
    "confidence": 0.5,
    "tokens": [
      4299,
      1332,
      62,
      14323,
      8927,
      62,
      11338,
      62,
      11458,
      33529
    ],
    "start_token": 1127,
    "end_token": 1137,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3254,
      24765,
      286,
      35375,
      338,
      9706,
      2106,
      4129
    ],
    "label": "ml_signal",
    "reason": "Validation of simulator's execution history length"
  },
  {
    "line": 106,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Validation of simulator's completion state",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1137,
    "end_token": 1137,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3254,
      24765,
      286,
      35375,
      338,
      11939,
      1181
    ],
    "label": "ml_signal",
    "reason": "Validation of simulator's completion state"
  },
  {
    "line": 108,
    "text": "        simulator = SingleAssetOrderExecutionSimple(order, DATA_DIR)",
    "annotation": "\ud83e\udde0 ML Signal: Validation of simulator's execution history amount",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      35375,
      796,
      14206,
      45869,
      18743,
      23002,
      1009,
      26437,
      7,
      2875,
      11,
      42865,
      62,
      34720,
      8
    ],
    "start_token": 1137,
    "end_token": 1159,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3254,
      24765,
      286,
      35375,
      338,
      9706,
      2106,
      2033
    ],
    "label": "ml_signal",
    "reason": "Validation of simulator's execution history amount"
  },
  {
    "line": 110,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Validation of simulator's metrics",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1159,
    "end_token": 1159,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3254,
      24765,
      286,
      35375,
      338,
      20731
    ],
    "label": "ml_signal",
    "reason": "Validation of simulator's metrics"
  },
  {
    "line": 101,
    "text": "    assert simulator.done()",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with a specific name pattern indicating a test function",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      35375,
      13,
      28060,
      3419
    ],
    "start_token": 1159,
    "end_token": 1167,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      257,
      2176,
      1438,
      3912,
      12739,
      257,
      1332,
      2163
    ],
    "label": "ml_signal",
    "reason": "Function definition with a specific name pattern indicating a test function"
  },
  {
    "line": 103,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of an Order object with specific parameters",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 1167,
    "end_token": 1167,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      281,
      8284,
      2134,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Instantiation of an Order object with specific parameters"
  },
  {
    "line": 105,
    "text": "    order = Order(\"AAL\", 1.0, 1, pd.Timestamp(\"2013-12-11 00:00:00\"), pd.Timestamp(\"2013-12-11 23:59:59\"))",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of a simulator object with specific parameters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1502,
      796,
      8284,
      7203,
      32,
      1847,
      1600,
      352,
      13,
      15,
      11,
      352,
      11,
      279,
      67,
      13,
      14967,
      27823,
      7203,
      6390,
      12,
      1065,
      12,
      1157,
      3571,
      25,
      405,
      25,
      405,
      12340,
      279,
      67,
      13,
      14967,
      27823,
      7203,
      6390,
      12,
      1065,
      12,
      1157,
      2242,
      25,
      3270,
      25,
      3270,
      48774
    ],
    "start_token": 1167,
    "end_token": 1217,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      257,
      35375,
      2134,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Instantiation of a simulator object with specific parameters"
  },
  {
    "line": 107,
    "text": "    with pytest.raises(ValueError):",
    "annotation": "\u2705 Best Practice: Use of assert statements for testing expected outcomes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      351,
      12972,
      9288,
      13,
      430,
      2696,
      7,
      11395,
      12331,
      2599
    ],
    "start_token": 1217,
    "end_token": 1230,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      6818,
      6299,
      329,
      4856,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Use of assert statements for testing expected outcomes"
  },
  {
    "line": 109,
    "text": "        simulator.step(2.0)",
    "annotation": "\u2705 Best Practice: Use of assert statements for testing expected outcomes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      35375,
      13,
      9662,
      7,
      17,
      13,
      15,
      8
    ],
    "start_token": 1230,
    "end_token": 1245,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      6818,
      6299,
      329,
      4856,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Use of assert statements for testing expected outcomes"
  },
  {
    "line": 108,
    "text": "        simulator = SingleAssetOrderExecutionSimple(order, DATA_DIR)",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a specific interpreter with parameters, indicating a pattern for model training",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      35375,
      796,
      14206,
      45869,
      18743,
      23002,
      1009,
      26437,
      7,
      2875,
      11,
      42865,
      62,
      34720,
      8
    ],
    "start_token": 1245,
    "end_token": 1267,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      2176,
      28846,
      351,
      10007,
      11,
      12739,
      257,
      3912,
      329,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Usage of a specific interpreter with parameters, indicating a pattern for model training"
  },
  {
    "line": 110,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a specific interpreter with parameters, indicating a pattern for model training",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1267,
    "end_token": 1267,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      2176,
      28846,
      351,
      10007,
      11,
      12739,
      257,
      3912,
      329,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Usage of a specific interpreter with parameters, indicating a pattern for model training"
  },
  {
    "line": 112,
    "text": "    simulator.step(1.0)",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a specific interpreter with parameters, indicating a pattern for model training",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      35375,
      13,
      9662,
      7,
      16,
      13,
      15,
      8
    ],
    "start_token": 1267,
    "end_token": 1278,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      2176,
      28846,
      351,
      10007,
      11,
      12739,
      257,
      3912,
      329,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Usage of a specific interpreter with parameters, indicating a pattern for model training"
  },
  {
    "line": 114,
    "text": "    with pytest.raises(AssertionError):",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a specific interpreter, indicating a pattern for model training",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      351,
      12972,
      9288,
      13,
      430,
      2696,
      7,
      8021,
      861,
      295,
      12331,
      2599
    ],
    "start_token": 1278,
    "end_token": 1293,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      2176,
      28846,
      11,
      12739,
      257,
      3912,
      329,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Usage of a specific interpreter, indicating a pattern for model training"
  },
  {
    "line": 116,
    "text": "",
    "annotation": "\u2705 Best Practice: Using a dictionary for keyword arguments improves readability and maintainability",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 1293,
    "end_token": 1293,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      257,
      22155,
      329,
      21179,
      7159,
      19575,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Using a dictionary for keyword arguments improves readability and maintainability"
  },
  {
    "line": 118,
    "text": "def test_simulator_start_middle():",
    "annotation": "\ud83e\udde0 ML Signal: Setting up environment wrapper with specific status, indicating a pattern for model training",
    "confidence": 0.5,
    "tokens": [
      4299,
      1332,
      62,
      14323,
      8927,
      62,
      9688,
      62,
      27171,
      33529
    ],
    "start_token": 1293,
    "end_token": 1303,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      25700,
      510,
      2858,
      29908,
      351,
      2176,
      3722,
      11,
      12739,
      257,
      3912,
      329,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Setting up environment wrapper with specific status, indicating a pattern for model training"
  },
  {
    "line": 120,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Observing the state of the simulator, indicating a pattern for model training",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1303,
    "end_token": 1303,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11086,
      14344,
      262,
      1181,
      286,
      262,
      35375,
      11,
      12739,
      257,
      3912,
      329,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Observing the state of the simulator, indicating a pattern for model training"
  },
  {
    "line": 122,
    "text": "    assert len(simulator.ticks_for_order) == 330",
    "annotation": "\u2705 Best Practice: Using assertions to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      18896,
      7,
      14323,
      8927,
      13,
      83,
      3378,
      62,
      1640,
      62,
      2875,
      8,
      6624,
      25508
    ],
    "start_token": 1303,
    "end_token": 1321,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      29965,
      284,
      26571,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Using assertions to validate expected outcomes"
  },
  {
    "line": 124,
    "text": "    simulator.step(2.0)",
    "annotation": "\u2705 Best Practice: Using assertions to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      35375,
      13,
      9662,
      7,
      17,
      13,
      15,
      8
    ],
    "start_token": 1321,
    "end_token": 1332,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      29965,
      284,
      26571,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Using assertions to validate expected outcomes"
  },
  {
    "line": 126,
    "text": "",
    "annotation": "\u2705 Best Practice: Using assertions to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1332,
    "end_token": 1332,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      29965,
      284,
      26571,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Using assertions to validate expected outcomes"
  },
  {
    "line": 128,
    "text": "        simulator.step(1.0)",
    "annotation": "\u2705 Best Practice: Using assertions to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      35375,
      13,
      9662,
      7,
      16,
      13,
      15,
      8
    ],
    "start_token": 1332,
    "end_token": 1347,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      29965,
      284,
      26571,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Using assertions to validate expected outcomes"
  },
  {
    "line": 130,
    "text": "    simulator.step(2.0)",
    "annotation": "\u2705 Best Practice: Using assertions to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      35375,
      13,
      9662,
      7,
      17,
      13,
      15,
      8
    ],
    "start_token": 1347,
    "end_token": 1358,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      29965,
      284,
      26571,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Using assertions to validate expected outcomes"
  },
  {
    "line": 132,
    "text": "    assert simulator.done()",
    "annotation": "\u2705 Best Practice: Using assertions to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      35375,
      13,
      28060,
      3419
    ],
    "start_token": 1358,
    "end_token": 1366,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      29965,
      284,
      26571,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Using assertions to validate expected outcomes"
  },
  {
    "line": 134,
    "text": "    assert abs(simulator.metrics[\"ffr\"] - 1) < 1e-4",
    "annotation": "\u2705 Best Practice: Using assertions to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      2352,
      7,
      14323,
      8927,
      13,
      4164,
      10466,
      14692,
      487,
      81,
      8973,
      532,
      352,
      8,
      1279,
      352,
      68,
      12,
      19
    ],
    "start_token": 1366,
    "end_token": 1389,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      29965,
      284,
      26571,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Using assertions to validate expected outcomes"
  },
  {
    "line": 136,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Setting up environment wrapper with specific status, indicating a pattern for model training",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1389,
    "end_token": 1389,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      25700,
      510,
      2858,
      29908,
      351,
      2176,
      3722,
      11,
      12739,
      257,
      3912,
      329,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Setting up environment wrapper with specific status, indicating a pattern for model training"
  },
  {
    "line": 137,
    "text": "def test_interpreter():",
    "annotation": "\ud83e\udde0 ML Signal: Observing the state of the simulator, indicating a pattern for model training",
    "confidence": 0.5,
    "tokens": [
      4299,
      1332,
      62,
      3849,
      3866,
      353,
      33529
    ],
    "start_token": 1389,
    "end_token": 1396,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11086,
      14344,
      262,
      1181,
      286,
      262,
      35375,
      11,
      12739,
      257,
      3912,
      329,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Observing the state of the simulator, indicating a pattern for model training"
  },
  {
    "line": 140,
    "text": "    simulator = SingleAssetOrderExecutionSimple(order, DATA_DIR)",
    "annotation": "\u2705 Best Practice: Using assertions to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      35375,
      796,
      14206,
      45869,
      18743,
      23002,
      1009,
      26437,
      7,
      2875,
      11,
      42865,
      62,
      34720,
      8
    ],
    "start_token": 1396,
    "end_token": 1414,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      29965,
      284,
      26571,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Using assertions to validate expected outcomes"
  },
  {
    "line": 142,
    "text": "    assert simulator.cur_time == pd.Timestamp(\"2013-12-11 10:15:00\")",
    "annotation": "\u2705 Best Practice: Using assertions to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      35375,
      13,
      22019,
      62,
      2435,
      6624,
      279,
      67,
      13,
      14967,
      27823,
      7203,
      6390,
      12,
      1065,
      12,
      1157,
      838,
      25,
      1314,
      25,
      405,
      4943
    ],
    "start_token": 1414,
    "end_token": 1441,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      29965,
      284,
      26571,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Using assertions to validate expected outcomes"
  },
  {
    "line": 144,
    "text": "    # emulate a env status",
    "annotation": "\ud83e\udde0 ML Signal: Stepping the simulator, indicating a pattern for model training",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      33836,
      257,
      17365,
      3722
    ],
    "start_token": 1441,
    "end_token": 1449,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2441,
      2105,
      262,
      35375,
      11,
      12739,
      257,
      3912,
      329,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Stepping the simulator, indicating a pattern for model training"
  },
  {
    "line": 145,
    "text": "    class EmulateEnvWrapper(NamedTuple):",
    "annotation": "\ud83e\udde0 ML Signal: Setting up environment wrapper with specific status, indicating a pattern for model training",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1398,
      2295,
      5039,
      4834,
      85,
      36918,
      2848,
      7,
      45,
      2434,
      51,
      29291,
      2599
    ],
    "start_token": 1449,
    "end_token": 1465,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      25700,
      510,
      2858,
      29908,
      351,
      2176,
      3722,
      11,
      12739,
      257,
      3912,
      329,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Setting up environment wrapper with specific status, indicating a pattern for model training"
  },
  {
    "line": 148,
    "text": "    interpreter = FullHistoryStateInterpreter(13, 390, 5, PickleProcessedDataProvider(FEATURE_DATA_DIR))",
    "annotation": "\ud83e\udde0 ML Signal: Observing the state of the simulator, indicating a pattern for model training",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      28846,
      796,
      6462,
      18122,
      9012,
      9492,
      3866,
      353,
      7,
      1485,
      11,
      33882,
      11,
      642,
      11,
      12346,
      293,
      18709,
      276,
      6601,
      29495,
      7,
      15112,
      40086,
      62,
      26947,
      62,
      34720,
      4008
    ],
    "start_token": 1465,
    "end_token": 1497,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11086,
      14344,
      262,
      1181,
      286,
      262,
      35375,
      11,
      12739,
      257,
      3912,
      329,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Observing the state of the simulator, indicating a pattern for model training"
  },
  {
    "line": 150,
    "text": "    interpreter_action = CategoricalActionInterpreter(20)",
    "annotation": "\u2705 Best Practice: Using assertions to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      28846,
      62,
      2673,
      796,
      327,
      2397,
      12409,
      12502,
      9492,
      3866,
      353,
      7,
      1238,
      8
    ],
    "start_token": 1497,
    "end_token": 1514,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      29965,
      284,
      26571,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Using assertions to validate expected outcomes"
  },
  {
    "line": 152,
    "text": "",
    "annotation": "\u2705 Best Practice: Using assertions to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1514,
    "end_token": 1514,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      29965,
      284,
      26571,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Using assertions to validate expected outcomes"
  },
  {
    "line": 154,
    "text": "",
    "annotation": "\u2705 Best Practice: Using assertions to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1514,
    "end_token": 1514,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      29965,
      284,
      26571,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Using assertions to validate expected outcomes"
  },
  {
    "line": 156,
    "text": "    interpreter.env = EmulateEnvWrapper(status=EnvWrapperStatus(cur_step=0, done=False, **wrapper_status_kwargs))",
    "annotation": "\u2705 Best Practice: Using assertions to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      28846,
      13,
      24330,
      796,
      2295,
      5039,
      4834,
      85,
      36918,
      2848,
      7,
      13376,
      28,
      4834,
      85,
      36918,
      2848,
      19580,
      7,
      22019,
      62,
      9662,
      28,
      15,
      11,
      1760,
      28,
      25101,
      11,
      12429,
      48553,
      62,
      13376,
      62,
      46265,
      22046,
      4008
    ],
    "start_token": 1514,
    "end_token": 1554,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      29965,
      284,
      26571,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Using assertions to validate expected outcomes"
  },
  {
    "line": 158,
    "text": "    obs = interpreter(simulator.get_state())",
    "annotation": "\u2705 Best Practice: Using assertions to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      10201,
      796,
      28846,
      7,
      14323,
      8927,
      13,
      1136,
      62,
      5219,
      28955
    ],
    "start_token": 1554,
    "end_token": 1568,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      29965,
      284,
      26571,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Using assertions to validate expected outcomes"
  },
  {
    "line": 160,
    "text": "    assert obs[\"cur_step\"] == 0",
    "annotation": "\u2705 Best Practice: Using assertions to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      10201,
      14692,
      22019,
      62,
      9662,
      8973,
      6624,
      657
    ],
    "start_token": 1568,
    "end_token": 1580,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      29965,
      284,
      26571,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Using assertions to validate expected outcomes"
  },
  {
    "line": 162,
    "text": "    assert obs[\"position_history\"][0] == 15.0",
    "annotation": "\ud83e\udde0 ML Signal: Interpreting action from the simulator state, indicating a pattern for model training",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      10201,
      14692,
      9150,
      62,
      23569,
      1,
      7131,
      15,
      60,
      6624,
      1315,
      13,
      15
    ],
    "start_token": 1580,
    "end_token": 1597,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      4225,
      3866,
      889,
      2223,
      422,
      262,
      35375,
      1181,
      11,
      12739,
      257,
      3912,
      329,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Interpreting action from the simulator state, indicating a pattern for model training"
  },
  {
    "line": 164,
    "text": "    assert np.sum(obs[\"data_processed\"][45:]) == 0",
    "annotation": "\u2705 Best Practice: Using assertions to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      45941,
      13,
      16345,
      7,
      8158,
      14692,
      7890,
      62,
      14681,
      276,
      1,
      7131,
      2231,
      25,
      12962,
      6624,
      657
    ],
    "start_token": 1597,
    "end_token": 1618,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      29965,
      284,
      26571,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Using assertions to validate expected outcomes"
  },
  {
    "line": 166,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Setting up environment wrapper with specific status, indicating a pattern for model training",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1618,
    "end_token": 1618,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      25700,
      510,
      2858,
      29908,
      351,
      2176,
      3722,
      11,
      12739,
      257,
      3912,
      329,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Setting up environment wrapper with specific status, indicating a pattern for model training"
  },
  {
    "line": 170,
    "text": "    obs = interpreter_step(simulator.get_state())",
    "annotation": "\ud83e\udde0 ML Signal: Interpreting action from the simulator state, indicating a pattern for model training",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      10201,
      796,
      28846,
      62,
      9662,
      7,
      14323,
      8927,
      13,
      1136,
      62,
      5219,
      28955
    ],
    "start_token": 1618,
    "end_token": 1634,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      4225,
      3866,
      889,
      2223,
      422,
      262,
      35375,
      1181,
      11,
      12739,
      257,
      3912,
      329,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Interpreting action from the simulator state, indicating a pattern for model training"
  },
  {
    "line": 172,
    "text": "    assert obs[\"position\"] == 15.0",
    "annotation": "\u2705 Best Practice: Using assertions to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      10201,
      14692,
      9150,
      8973,
      6624,
      1315,
      13,
      15
    ],
    "start_token": 1634,
    "end_token": 1646,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      29965,
      284,
      26571,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Using assertions to validate expected outcomes"
  },
  {
    "line": 174,
    "text": "    # second step",
    "annotation": "\ud83e\udde0 ML Signal: Stepping the simulator multiple times, indicating a pattern for model training",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      1218,
      2239
    ],
    "start_token": 1646,
    "end_token": 1652,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2441,
      2105,
      262,
      35375,
      3294,
      1661,
      11,
      12739,
      257,
      3912,
      329,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Stepping the simulator multiple times, indicating a pattern for model training"
  },
  {
    "line": 177,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Stepping the simulator, indicating a pattern for model training",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1652,
    "end_token": 1652,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2441,
      2105,
      262,
      35375,
      11,
      12739,
      257,
      3912,
      329,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Stepping the simulator, indicating a pattern for model training"
  },
  {
    "line": 178,
    "text": "    obs = interpreter(simulator.get_state())",
    "annotation": "\ud83e\udde0 ML Signal: Setting up environment wrapper with specific status, indicating a pattern for model training",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      10201,
      796,
      28846,
      7,
      14323,
      8927,
      13,
      1136,
      62,
      5219,
      28955
    ],
    "start_token": 1652,
    "end_token": 1666,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      25700,
      510,
      2858,
      29908,
      351,
      2176,
      3722,
      11,
      12739,
      257,
      3912,
      329,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Setting up environment wrapper with specific status, indicating a pattern for model training"
  },
  {
    "line": 183,
    "text": "    assert all(np.sum(obs[\"data_processed\"][i]) != 0 for i in range(60))",
    "annotation": "\u2705 Best Practice: Using assertions to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      477,
      7,
      37659,
      13,
      16345,
      7,
      8158,
      14692,
      7890,
      62,
      14681,
      276,
      1,
      7131,
      72,
      12962,
      14512,
      657,
      329,
      1312,
      287,
      2837,
      7,
      1899,
      4008
    ],
    "start_token": 1666,
    "end_token": 1695,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      29965,
      284,
      26571,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Using assertions to validate expected outcomes"
  },
  {
    "line": 185,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Observing the state of the simulator, indicating a pattern for model training",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1695,
    "end_token": 1695,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11086,
      14344,
      262,
      1181,
      286,
      262,
      35375,
      11,
      12739,
      257,
      3912,
      329,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Observing the state of the simulator, indicating a pattern for model training"
  },
  {
    "line": 187,
    "text": "    action = interpreter_action(simulator.get_state(), 1)",
    "annotation": "\u2705 Best Practice: Using assertions to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2223,
      796,
      28846,
      62,
      2673,
      7,
      14323,
      8927,
      13,
      1136,
      62,
      5219,
      22784,
      352,
      8
    ],
    "start_token": 1695,
    "end_token": 1713,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      29965,
      284,
      26571,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Using assertions to validate expected outcomes"
  },
  {
    "line": 188,
    "text": "    assert action == 15 / 20",
    "annotation": "\u2705 Best Practice: Using assertions to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      2223,
      6624,
      1315,
      1220,
      1160
    ],
    "start_token": 1713,
    "end_token": 1722,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      29965,
      284,
      26571,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Using assertions to validate expected outcomes"
  },
  {
    "line": 188,
    "text": "    assert action == 15 / 20",
    "annotation": "\u2705 Best Practice: Using assertions to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      2223,
      6624,
      1315,
      1220,
      1160
    ],
    "start_token": 1722,
    "end_token": 1731,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      29965,
      284,
      26571,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Using assertions to validate expected outcomes"
  },
  {
    "line": 188,
    "text": "    assert action == 15 / 20",
    "annotation": "\u2705 Best Practice: Using assertions to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      2223,
      6624,
      1315,
      1220,
      1160
    ],
    "start_token": 1731,
    "end_token": 1740,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      29965,
      284,
      26571,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Using assertions to validate expected outcomes"
  },
  {
    "line": 198,
    "text": "        simulator.step(0.0)",
    "annotation": "\u2705 Best Practice: Using assertions to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      35375,
      13,
      9662,
      7,
      15,
      13,
      15,
      8
    ],
    "start_token": 1740,
    "end_token": 1755,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      29965,
      284,
      26571,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Using assertions to validate expected outcomes"
  },
  {
    "line": 198,
    "text": "        simulator.step(0.0)",
    "annotation": "\u2705 Best Practice: Using assertions to validate expected outcomes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      35375,
      13,
      9662,
      7,
      15,
      13,
      15,
      8
    ],
    "start_token": 1755,
    "end_token": 1770,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      29965,
      284,
      26571,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Using assertions to validate expected outcomes"
  },
  {
    "line": 156,
    "text": "    interpreter.env = EmulateEnvWrapper(status=EnvWrapperStatus(cur_step=0, done=False, **wrapper_status_kwargs))",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with a specific name pattern indicating a test function",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      28846,
      13,
      24330,
      796,
      2295,
      5039,
      4834,
      85,
      36918,
      2848,
      7,
      13376,
      28,
      4834,
      85,
      36918,
      2848,
      19580,
      7,
      22019,
      62,
      9662,
      28,
      15,
      11,
      1760,
      28,
      25101,
      11,
      12429,
      48553,
      62,
      13376,
      62,
      46265,
      22046,
      4008
    ],
    "start_token": 1770,
    "end_token": 1810,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      257,
      2176,
      1438,
      3912,
      12739,
      257,
      1332,
      2163
    ],
    "label": "ml_signal",
    "reason": "Function definition with a specific name pattern indicating a test function"
  },
  {
    "line": 158,
    "text": "    obs = interpreter(simulator.get_state())",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of an Order object with specific parameters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      10201,
      796,
      28846,
      7,
      14323,
      8927,
      13,
      1136,
      62,
      5219,
      28955
    ],
    "start_token": 1810,
    "end_token": 1824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      281,
      8284,
      2134,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Instantiation of an Order object with specific parameters"
  },
  {
    "line": 160,
    "text": "    assert obs[\"cur_step\"] == 0",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of a simulator object with specific parameters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      10201,
      14692,
      22019,
      62,
      9662,
      8973,
      6624,
      657
    ],
    "start_token": 1824,
    "end_token": 1836,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      257,
      35375,
      2134,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Instantiation of a simulator object with specific parameters"
  },
  {
    "line": 162,
    "text": "    assert obs[\"position_history\"][0] == 15.0",
    "annotation": "\u2705 Best Practice: Use of assert statement for testing expected outcomes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      10201,
      14692,
      9150,
      62,
      23569,
      1,
      7131,
      15,
      60,
      6624,
      1315,
      13,
      15
    ],
    "start_token": 1836,
    "end_token": 1853,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      6818,
      2643,
      329,
      4856,
      2938,
      10906
    ],
    "label": "best_practice",
    "reason": "Use of assert statement for testing expected outcomes"
  },
  {
    "line": 163,
    "text": "    assert all(np.sum(obs[\"data_processed\"][i]) != 0 for i in range(45))",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a specific action interpreter for categorical actions",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      477,
      7,
      37659,
      13,
      16345,
      7,
      8158,
      14692,
      7890,
      62,
      14681,
      276,
      1,
      7131,
      72,
      12962,
      14512,
      657,
      329,
      1312,
      287,
      2837,
      7,
      2231,
      4008
    ],
    "start_token": 1853,
    "end_token": 1882,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      2176,
      2223,
      28846,
      329,
      4253,
      12409,
      4028
    ],
    "label": "ml_signal",
    "reason": "Usage of a specific action interpreter for categorical actions"
  },
  {
    "line": 165,
    "text": "    assert obs[\"data_processed_prev\"].shape == (390, 5)",
    "annotation": "\ud83e\udde0 ML Signal: Use of a dictionary to store initial state and history information",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      10201,
      14692,
      7890,
      62,
      14681,
      276,
      62,
      47050,
      1,
      4083,
      43358,
      6624,
      357,
      25964,
      11,
      642,
      8
    ],
    "start_token": 1882,
    "end_token": 1903,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      22155,
      284,
      3650,
      4238,
      1181,
      290,
      2106,
      1321
    ],
    "label": "ml_signal",
    "reason": "Use of a dictionary to store initial state and history information"
  },
  {
    "line": 167,
    "text": "    # first step: second interpreter",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of a recurrent network with a specific observation space",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      717,
      2239,
      25,
      1218,
      28846
    ],
    "start_token": 1903,
    "end_token": 1912,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      257,
      42465,
      3127,
      351,
      257,
      2176,
      13432,
      2272
    ],
    "label": "ml_signal",
    "reason": "Initialization of a recurrent network with a specific observation space"
  },
  {
    "line": 169,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of PPO algorithm with specific network and action space",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1912,
    "end_token": 1912,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      350,
      16402,
      11862,
      351,
      2176,
      3127,
      290,
      2223,
      2272
    ],
    "label": "ml_signal",
    "reason": "Use of PPO algorithm with specific network and action space"
  },
  {
    "line": 172,
    "text": "    assert obs[\"position\"] == 15.0",
    "annotation": "\ud83e\udde0 ML Signal: Iterative environment emulation with step tracking",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      10201,
      14692,
      9150,
      8973,
      6624,
      1315,
      13,
      15
    ],
    "start_token": 1912,
    "end_token": 1924,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      876,
      2858,
      47065,
      351,
      2239,
      9646
    ],
    "label": "ml_signal",
    "reason": "Iterative environment emulation with step tracking"
  },
  {
    "line": 174,
    "text": "    # second step",
    "annotation": "\ud83e\udde0 ML Signal: Creation of a batch with observations for policy input",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      1218,
      2239
    ],
    "start_token": 1924,
    "end_token": 1930,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      21582,
      286,
      257,
      15458,
      351,
      13050,
      329,
      2450,
      5128
    ],
    "label": "ml_signal",
    "reason": "Creation of a batch with observations for policy input"
  },
  {
    "line": 178,
    "text": "    obs = interpreter(simulator.get_state())",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential risk if output[\"act\"] is not within expected range",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      10201,
      796,
      28846,
      7,
      14323,
      8927,
      13,
      1136,
      62,
      5219,
      28955
    ],
    "start_token": 1930,
    "end_token": 1944,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2526,
      611,
      5072,
      14692,
      529,
      8973,
      318,
      407,
      1626,
      2938,
      2837
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential risk if output[\"act\"] is not within expected range"
  },
  {
    "line": 183,
    "text": "    assert all(np.sum(obs[\"data_processed\"][i]) != 0 for i in range(60))",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Assertions without exception handling could lead to unhandled exceptions",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      477,
      7,
      37659,
      13,
      16345,
      7,
      8158,
      14692,
      7890,
      62,
      14681,
      276,
      1,
      7131,
      72,
      12962,
      14512,
      657,
      329,
      1312,
      287,
      2837,
      7,
      1899,
      4008
    ],
    "start_token": 1944,
    "end_token": 1973,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      2195,
      861,
      507,
      1231,
      6631,
      9041,
      714,
      1085,
      284,
      555,
      38788,
      13269
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Assertions without exception handling could lead to unhandled exceptions"
  },
  {
    "line": 187,
    "text": "    action = interpreter_action(simulator.get_state(), 1)",
    "annotation": "\u2705 Best Practice: Use of parameterized tests to cover multiple scenarios",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2223,
      796,
      28846,
      62,
      2673,
      7,
      14323,
      8927,
      13,
      1136,
      62,
      5219,
      22784,
      352,
      8
    ],
    "start_token": 1973,
    "end_token": 1991,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11507,
      1143,
      5254,
      284,
      3002,
      3294,
      13858
    ],
    "label": "best_practice",
    "reason": "Use of parameterized tests to cover multiple scenarios"
  },
  {
    "line": 180,
    "text": "    assert obs[\"cur_step\"] == 1",
    "annotation": "\ud83e\udde0 ML Signal: Function definition for testing a trading strategy",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      10201,
      14692,
      22019,
      62,
      9662,
      8973,
      6624,
      352
    ],
    "start_token": 1991,
    "end_token": 2003,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      329,
      4856,
      257,
      7313,
      4811
    ],
    "label": "ml_signal",
    "reason": "Function definition for testing a trading strategy"
  },
  {
    "line": 182,
    "text": "    assert obs[\"position_history\"][:2].tolist() == [15.0, 10.0]",
    "annotation": "\ud83e\udde0 ML Signal: Logging configuration setup",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      10201,
      14692,
      9150,
      62,
      23569,
      1,
      7131,
      25,
      17,
      4083,
      83,
      349,
      396,
      3419,
      6624,
      685,
      1314,
      13,
      15,
      11,
      838,
      13,
      15,
      60
    ],
    "start_token": 2003,
    "end_token": 2031,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      8398,
      9058
    ],
    "label": "ml_signal",
    "reason": "Logging configuration setup"
  },
  {
    "line": 184,
    "text": "    assert np.sum(obs[\"data_processed\"][60:]) == 0",
    "annotation": "\ud83e\udde0 ML Signal: Loading orders from a specific directory",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      45941,
      13,
      16345,
      7,
      8158,
      14692,
      7890,
      62,
      14681,
      276,
      1,
      7131,
      1899,
      25,
      12962,
      6624,
      657
    ],
    "start_token": 2031,
    "end_token": 2052,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      12320,
      6266,
      422,
      257,
      2176,
      8619
    ],
    "label": "ml_signal",
    "reason": "Loading orders from a specific directory"
  },
  {
    "line": 186,
    "text": "    # second step: action",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Assertion without error message",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      1218,
      2239,
      25,
      2223
    ],
    "start_token": 2052,
    "end_token": 2060,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      2195,
      861,
      295,
      1231,
      4049,
      3275
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Assertion without error message"
  },
  {
    "line": 188,
    "text": "    assert action == 15 / 20",
    "annotation": "\ud83e\udde0 ML Signal: State interpreter initialization with specific parameters",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      2223,
      6624,
      1315,
      1220,
      1160
    ],
    "start_token": 2060,
    "end_token": 2069,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      1812,
      28846,
      37588,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "State interpreter initialization with specific parameters"
  },
  {
    "line": 188,
    "text": "    assert action == 15 / 20",
    "annotation": "\ud83e\udde0 ML Signal: Action interpreter initialization",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      2223,
      6624,
      1315,
      1220,
      1160
    ],
    "start_token": 2069,
    "end_token": 2078,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7561,
      28846,
      37588
    ],
    "label": "ml_signal",
    "reason": "Action interpreter initialization"
  },
  {
    "line": 188,
    "text": "    assert action == 15 / 20",
    "annotation": "\ud83e\udde0 ML Signal: Policy initialization with state and action spaces",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      2223,
      6624,
      1315,
      1220,
      1160
    ],
    "start_token": 2078,
    "end_token": 2087,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7820,
      37588,
      351,
      1181,
      290,
      2223,
      9029
    ],
    "label": "ml_signal",
    "reason": "Policy initialization with state and action spaces"
  },
  {
    "line": 198,
    "text": "        simulator.step(0.0)",
    "annotation": "\ud83e\udde0 ML Signal: CSV writer setup for output",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      35375,
      13,
      9662,
      7,
      15,
      13,
      15,
      8
    ],
    "start_token": 2087,
    "end_token": 2102,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      44189,
      6260,
      9058,
      329,
      5072
    ],
    "label": "ml_signal",
    "reason": "CSV writer setup for output"
  },
  {
    "line": 198,
    "text": "        simulator.step(0.0)",
    "annotation": "\ud83e\udde0 ML Signal: Backtesting function call with specific parameters",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      35375,
      13,
      9662,
      7,
      15,
      13,
      15,
      8
    ],
    "start_token": 2102,
    "end_token": 2117,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5157,
      33407,
      2163,
      869,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Backtesting function call with specific parameters"
  },
  {
    "line": 207,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Reading metrics from CSV output",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 2117,
    "end_token": 2117,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11725,
      20731,
      422,
      44189,
      5072
    ],
    "label": "ml_signal",
    "reason": "Reading metrics from CSV output"
  },
  {
    "line": 209,
    "text": "    assert obs[\"cur_tick\"] == 375",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Assertion without error message",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      10201,
      14692,
      22019,
      62,
      42298,
      8973,
      6624,
      29414
    ],
    "start_token": 2117,
    "end_token": 2129,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      2195,
      861,
      295,
      1231,
      4049,
      3275
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Assertion without error message"
  },
  {
    "line": 211,
    "text": "    assert obs[\"position\"] == 0.0",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Assertion without error message",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      10201,
      14692,
      9150,
      8973,
      6624,
      657,
      13,
      15
    ],
    "start_token": 2129,
    "end_token": 2141,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      2195,
      861,
      295,
      1231,
      4049,
      3275
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Assertion without error message"
  },
  {
    "line": 213,
    "text": "    assert all(np.sum(obs[\"data_processed\"][i]) != 0 for i in range(375))",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Assertion without error message",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      477,
      7,
      37659,
      13,
      16345,
      7,
      8158,
      14692,
      7890,
      62,
      14681,
      276,
      1,
      7131,
      72,
      12962,
      14512,
      657,
      329,
      1312,
      287,
      2837,
      7,
      22318,
      4008
    ],
    "start_token": 2141,
    "end_token": 2170,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      2195,
      861,
      295,
      1231,
      4049,
      3275
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Assertion without error message"
  },
  {
    "line": 213,
    "text": "    assert all(np.sum(obs[\"data_processed\"][i]) != 0 for i in range(375))",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Assertion without error message",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      477,
      7,
      37659,
      13,
      16345,
      7,
      8158,
      14692,
      7890,
      62,
      14681,
      276,
      1,
      7131,
      72,
      12962,
      14512,
      657,
      329,
      1312,
      287,
      2837,
      7,
      22318,
      4008
    ],
    "start_token": 2170,
    "end_token": 2199,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      2195,
      861,
      295,
      1231,
      4049,
      3275
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Assertion without error message"
  },
  {
    "line": 203,
    "text": "        status=EnvWrapperStatus(cur_step=12, done=simulator.done(), **wrapper_status_kwargs)",
    "annotation": "\ud83e\udde0 ML Signal: Function definition for testing a specific strategy",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3722,
      28,
      4834,
      85,
      36918,
      2848,
      19580,
      7,
      22019,
      62,
      9662,
      28,
      1065,
      11,
      1760,
      28,
      14323,
      8927,
      13,
      28060,
      22784,
      12429,
      48553,
      62,
      13376,
      62,
      46265,
      22046,
      8
    ],
    "start_token": 2199,
    "end_token": 2235,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      329,
      4856,
      257,
      2176,
      4811
    ],
    "label": "ml_signal",
    "reason": "Function definition for testing a specific strategy"
  },
  {
    "line": 205,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Setting logging configuration",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 2235,
    "end_token": 2235,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      25700,
      18931,
      8398
    ],
    "label": "ml_signal",
    "reason": "Setting logging configuration"
  },
  {
    "line": 207,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Loading orders from a potentially untrusted source",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 2235,
    "end_token": 2235,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      12320,
      6266,
      422,
      257,
      6196,
      1418,
      81,
      8459,
      2723
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Loading orders from a potentially untrusted source"
  },
  {
    "line": 209,
    "text": "    assert obs[\"cur_tick\"] == 375",
    "annotation": "\ud83e\udde0 ML Signal: Asserting the number of orders loaded",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      10201,
      14692,
      22019,
      62,
      42298,
      8973,
      6624,
      29414
    ],
    "start_token": 2235,
    "end_token": 2247,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      278,
      262,
      1271,
      286,
      6266,
      9639
    ],
    "label": "ml_signal",
    "reason": "Asserting the number of orders loaded"
  },
  {
    "line": 211,
    "text": "    assert obs[\"position\"] == 0.0",
    "annotation": "\ud83e\udde0 ML Signal: Initializing state interpreter with specific parameters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      10201,
      14692,
      9150,
      8973,
      6624,
      657,
      13,
      15
    ],
    "start_token": 2247,
    "end_token": 2259,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      2890,
      1181,
      28846,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Initializing state interpreter with specific parameters"
  },
  {
    "line": 213,
    "text": "    assert all(np.sum(obs[\"data_processed\"][i]) != 0 for i in range(375))",
    "annotation": "\ud83e\udde0 ML Signal: Initializing action interpreter with specific parameters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      477,
      7,
      37659,
      13,
      16345,
      7,
      8158,
      14692,
      7890,
      62,
      14681,
      276,
      1,
      7131,
      72,
      12962,
      14512,
      657,
      329,
      1312,
      287,
      2837,
      7,
      22318,
      4008
    ],
    "start_token": 2259,
    "end_token": 2288,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      2890,
      2223,
      28846,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Initializing action interpreter with specific parameters"
  },
  {
    "line": 213,
    "text": "    assert all(np.sum(obs[\"data_processed\"][i]) != 0 for i in range(375))",
    "annotation": "\ud83e\udde0 ML Signal: Creating a recurrent network with a specific observation space",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      477,
      7,
      37659,
      13,
      16345,
      7,
      8158,
      14692,
      7890,
      62,
      14681,
      276,
      1,
      7131,
      72,
      12962,
      14512,
      657,
      329,
      1312,
      287,
      2837,
      7,
      22318,
      4008
    ],
    "start_token": 2288,
    "end_token": 2317,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      30481,
      257,
      42465,
      3127,
      351,
      257,
      2176,
      13432,
      2272
    ],
    "label": "ml_signal",
    "reason": "Creating a recurrent network with a specific observation space"
  },
  {
    "line": 213,
    "text": "    assert all(np.sum(obs[\"data_processed\"][i]) != 0 for i in range(375))",
    "annotation": "\ud83e\udde0 ML Signal: Initializing PPO policy with specific parameters",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      477,
      7,
      37659,
      13,
      16345,
      7,
      8158,
      14692,
      7890,
      62,
      14681,
      276,
      1,
      7131,
      72,
      12962,
      14512,
      657,
      329,
      1312,
      287,
      2837,
      7,
      22318,
      4008
    ],
    "start_token": 2317,
    "end_token": 2346,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      2890,
      350,
      16402,
      2450,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Initializing PPO policy with specific parameters"
  },
  {
    "line": 222,
    "text": "    assert len(simulator.ticks_for_order) == 390",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Loading model state from a file, potential for model tampering",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      18896,
      7,
      14323,
      8927,
      13,
      83,
      3378,
      62,
      1640,
      62,
      2875,
      8,
      6624,
      33882
    ],
    "start_token": 2346,
    "end_token": 2364,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      12320,
      2746,
      1181,
      422,
      257,
      2393,
      11,
      2785,
      329,
      2746,
      42471
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Loading model state from a file, potential for model tampering"
  },
  {
    "line": 222,
    "text": "    assert len(simulator.ticks_for_order) == 390",
    "annotation": "\u2705 Best Practice: Using a CSV writer to log output",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6818,
      18896,
      7,
      14323,
      8927,
      13,
      83,
      3378,
      62,
      1640,
      62,
      2875,
      8,
      6624,
      33882
    ],
    "start_token": 2364,
    "end_token": 2382,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      257,
      44189,
      6260,
      284,
      2604,
      5072
    ],
    "label": "best_practice",
    "reason": "Using a CSV writer to log output"
  },
  {
    "line": 223,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Running a backtest with specific parameters and concurrency",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 2382,
    "end_token": 2382,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      18162,
      257,
      736,
      9288,
      351,
      2176,
      10007,
      290,
      1673,
      13382
    ],
    "label": "ml_signal",
    "reason": "Running a backtest with specific parameters and concurrency"
  },
  {
    "line": 233,
    "text": "    policy = PPO(network, interpreter.observation_space, action_interp.action_space, 1e-3)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Reading metrics from a file, potential for data integrity issues",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2450,
      796,
      350,
      16402,
      7,
      27349,
      11,
      28846,
      13,
      672,
      3168,
      341,
      62,
      13200,
      11,
      2223,
      62,
      3849,
      79,
      13,
      2673,
      62,
      13200,
      11,
      352,
      68,
      12,
      18,
      8
    ],
    "start_token": 2382,
    "end_token": 2414,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      11725,
      20731,
      422,
      257,
      2393,
      11,
      2785,
      329,
      1366,
      11540,
      2428
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Reading metrics from a file, potential for data integrity issues"
  },
  {
    "line": 235,
    "text": "    for i in range(14):",
    "annotation": "\ud83e\udde0 ML Signal: Asserting the length of metrics matches the number of orders",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      329,
      1312,
      287,
      2837,
      7,
      1415,
      2599
    ],
    "start_token": 2414,
    "end_token": 2424,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      278,
      262,
      4129,
      286,
      20731,
      7466,
      262,
      1271,
      286,
      6266
    ],
    "label": "ml_signal",
    "reason": "Asserting the length of metrics matches the number of orders"
  },
  {
    "line": 236,
    "text": "        interpreter.env = EmulateEnvWrapper(status=EnvWrapperStatus(cur_step=i, done=False, **wrapper_status_kwargs))",
    "annotation": "\ud83e\udde0 ML Signal: Asserting specific statistical properties of the metrics",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      28846,
      13,
      24330,
      796,
      2295,
      5039,
      4834,
      85,
      36918,
      2848,
      7,
      13376,
      28,
      4834,
      85,
      36918,
      2848,
      19580,
      7,
      22019,
      62,
      9662,
      28,
      72,
      11,
      1760,
      28,
      25101,
      11,
      12429,
      48553,
      62,
      13376,
      62,
      46265,
      22046,
      4008
    ],
    "start_token": 2424,
    "end_token": 2468,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      278,
      2176,
      13905,
      6608,
      286,
      262,
      20731
    ],
    "label": "ml_signal",
    "reason": "Asserting specific statistical properties of the metrics"
  },
  {
    "line": 228,
    "text": "    action_interp = CategoricalActionInterpreter(13)",
    "annotation": "\ud83e\udde0 ML Signal: Function definition for testing a PPO training process",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2223,
      62,
      3849,
      79,
      796,
      327,
      2397,
      12409,
      12502,
      9492,
      3866,
      353,
      7,
      1485,
      8
    ],
    "start_token": 2468,
    "end_token": 2486,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      329,
      4856,
      257,
      350,
      16402,
      3047,
      1429
    ],
    "label": "ml_signal",
    "reason": "Function definition for testing a PPO training process"
  },
  {
    "line": 230,
    "text": "    wrapper_status_kwargs = dict(initial_state=order, obs_history=[], action_history=[], reward_history=[])",
    "annotation": "\ud83e\udde0 ML Signal: Setting logging configuration, indicating logging is important for this process",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      29908,
      62,
      13376,
      62,
      46265,
      22046,
      796,
      8633,
      7,
      36733,
      62,
      5219,
      28,
      2875,
      11,
      10201,
      62,
      23569,
      41888,
      4357,
      2223,
      62,
      23569,
      41888,
      4357,
      6721,
      62,
      23569,
      41888,
      12962
    ],
    "start_token": 2486,
    "end_token": 2519,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      25700,
      18931,
      8398,
      11,
      12739,
      18931,
      318,
      1593,
      329,
      428,
      1429
    ],
    "label": "ml_signal",
    "reason": "Setting logging configuration, indicating logging is important for this process"
  },
  {
    "line": 232,
    "text": "    network = Recurrent(interpreter.observation_space)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential deserialization of untrusted data with pickle",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      3127,
      796,
      3311,
      6657,
      7,
      3849,
      3866,
      353,
      13,
      672,
      3168,
      341,
      62,
      13200,
      8
    ],
    "start_token": 2519,
    "end_token": 2537,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      748,
      48499,
      1634,
      286,
      1418,
      81,
      8459,
      1366,
      351,
      2298,
      293
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential deserialization of untrusted data with pickle"
  },
  {
    "line": 234,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Asserting the number of orders, indicating expected data size",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 2537,
    "end_token": 2537,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      278,
      262,
      1271,
      286,
      6266,
      11,
      12739,
      2938,
      1366,
      2546
    ],
    "label": "ml_signal",
    "reason": "Asserting the number of orders, indicating expected data size"
  },
  {
    "line": 236,
    "text": "        interpreter.env = EmulateEnvWrapper(status=EnvWrapperStatus(cur_step=i, done=False, **wrapper_status_kwargs))",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of state interpreter with specific parameters",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      28846,
      13,
      24330,
      796,
      2295,
      5039,
      4834,
      85,
      36918,
      2848,
      7,
      13376,
      28,
      4834,
      85,
      36918,
      2848,
      19580,
      7,
      22019,
      62,
      9662,
      28,
      72,
      11,
      1760,
      28,
      25101,
      11,
      12429,
      48553,
      62,
      13376,
      62,
      46265,
      22046,
      4008
    ],
    "start_token": 2537,
    "end_token": 2581,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      1181,
      28846,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Initialization of state interpreter with specific parameters"
  },
  {
    "line": 236,
    "text": "        interpreter.env = EmulateEnvWrapper(status=EnvWrapperStatus(cur_step=i, done=False, **wrapper_status_kwargs))",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of action interpreter with specific parameters",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      28846,
      13,
      24330,
      796,
      2295,
      5039,
      4834,
      85,
      36918,
      2848,
      7,
      13376,
      28,
      4834,
      85,
      36918,
      2848,
      19580,
      7,
      22019,
      62,
      9662,
      28,
      72,
      11,
      1760,
      28,
      25101,
      11,
      12429,
      48553,
      62,
      13376,
      62,
      46265,
      22046,
      4008
    ],
    "start_token": 2581,
    "end_token": 2625,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      2223,
      28846,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Initialization of action interpreter with specific parameters"
  },
  {
    "line": 236,
    "text": "        interpreter.env = EmulateEnvWrapper(status=EnvWrapperStatus(cur_step=i, done=False, **wrapper_status_kwargs))",
    "annotation": "\ud83e\udde0 ML Signal: Network initialization with observation space",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      28846,
      13,
      24330,
      796,
      2295,
      5039,
      4834,
      85,
      36918,
      2848,
      7,
      13376,
      28,
      4834,
      85,
      36918,
      2848,
      19580,
      7,
      22019,
      62,
      9662,
      28,
      72,
      11,
      1760,
      28,
      25101,
      11,
      12429,
      48553,
      62,
      13376,
      62,
      46265,
      22046,
      4008
    ],
    "start_token": 2625,
    "end_token": 2669,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7311,
      37588,
      351,
      13432,
      2272
    ],
    "label": "ml_signal",
    "reason": "Network initialization with observation space"
  },
  {
    "line": 236,
    "text": "        interpreter.env = EmulateEnvWrapper(status=EnvWrapperStatus(cur_step=i, done=False, **wrapper_status_kwargs))",
    "annotation": "\ud83e\udde0 ML Signal: PPO policy initialization with network and spaces",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      28846,
      13,
      24330,
      796,
      2295,
      5039,
      4834,
      85,
      36918,
      2848,
      7,
      13376,
      28,
      4834,
      85,
      36918,
      2848,
      19580,
      7,
      22019,
      62,
      9662,
      28,
      72,
      11,
      1760,
      28,
      25101,
      11,
      12429,
      48553,
      62,
      13376,
      62,
      46265,
      22046,
      4008
    ],
    "start_token": 2669,
    "end_token": 2713,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      350,
      16402,
      2450,
      37588,
      351,
      3127,
      290,
      9029
    ],
    "label": "ml_signal",
    "reason": "PPO policy initialization with network and spaces"
  },
  {
    "line": 236,
    "text": "        interpreter.env = EmulateEnvWrapper(status=EnvWrapperStatus(cur_step=i, done=False, **wrapper_status_kwargs))",
    "annotation": "\ud83e\udde0 ML Signal: Training function call with multiple parameters and configurations",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      28846,
      13,
      24330,
      796,
      2295,
      5039,
      4834,
      85,
      36918,
      2848,
      7,
      13376,
      28,
      4834,
      85,
      36918,
      2848,
      19580,
      7,
      22019,
      62,
      9662,
      28,
      72,
      11,
      1760,
      28,
      25101,
      11,
      12429,
      48553,
      62,
      13376,
      62,
      46265,
      22046,
      4008
    ],
    "start_token": 2713,
    "end_token": 2757,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      13614,
      2163,
      869,
      351,
      3294,
      10007,
      290,
      25412
    ],
    "label": "ml_signal",
    "reason": "Training function call with multiple parameters and configurations"
  },
  {
    "line": 236,
    "text": "        interpreter.env = EmulateEnvWrapper(status=EnvWrapperStatus(cur_step=i, done=False, **wrapper_status_kwargs))",
    "annotation": "\ud83e\udde0 ML Signal: Partial function application for environment setup",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      28846,
      13,
      24330,
      796,
      2295,
      5039,
      4834,
      85,
      36918,
      2848,
      7,
      13376,
      28,
      4834,
      85,
      36918,
      2848,
      19580,
      7,
      22019,
      62,
      9662,
      28,
      72,
      11,
      1760,
      28,
      25101,
      11,
      12429,
      48553,
      62,
      13376,
      62,
      46265,
      22046,
      4008
    ],
    "start_token": 2757,
    "end_token": 2801,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      43689,
      2163,
      3586,
      329,
      2858,
      9058
    ],
    "label": "ml_signal",
    "reason": "Partial function application for environment setup"
  },
  {
    "line": 236,
    "text": "        interpreter.env = EmulateEnvWrapper(status=EnvWrapperStatus(cur_step=i, done=False, **wrapper_status_kwargs))",
    "annotation": "\ud83e\udde0 ML Signal: Reward function specification",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      28846,
      13,
      24330,
      796,
      2295,
      5039,
      4834,
      85,
      36918,
      2848,
      7,
      13376,
      28,
      4834,
      85,
      36918,
      2848,
      19580,
      7,
      22019,
      62,
      9662,
      28,
      72,
      11,
      1760,
      28,
      25101,
      11,
      12429,
      48553,
      62,
      13376,
      62,
      46265,
      22046,
      4008
    ],
    "start_token": 2801,
    "end_token": 2845,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      32307,
      2163,
      20855
    ],
    "label": "ml_signal",
    "reason": "Reward function specification"
  },
  {
    "line": 236,
    "text": "        interpreter.env = EmulateEnvWrapper(status=EnvWrapperStatus(cur_step=i, done=False, **wrapper_status_kwargs))",
    "annotation": "\ud83e\udde0 ML Signal: Vessel configuration for training episodes and updates",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      28846,
      13,
      24330,
      796,
      2295,
      5039,
      4834,
      85,
      36918,
      2848,
      7,
      13376,
      28,
      4834,
      85,
      36918,
      2848,
      19580,
      7,
      22019,
      62,
      9662,
      28,
      72,
      11,
      1760,
      28,
      25101,
      11,
      12429,
      48553,
      62,
      13376,
      62,
      46265,
      22046,
      4008
    ],
    "start_token": 2845,
    "end_token": 2889,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      44734,
      8398,
      329,
      3047,
      8640,
      290,
      5992
    ],
    "label": "ml_signal",
    "reason": "Vessel configuration for training episodes and updates"
  },
  {
    "line": 236,
    "text": "        interpreter.env = EmulateEnvWrapper(status=EnvWrapperStatus(cur_step=i, done=False, **wrapper_status_kwargs))",
    "annotation": "\ud83e\udde0 ML Signal: Trainer configuration for iterations and logging",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      28846,
      13,
      24330,
      796,
      2295,
      5039,
      4834,
      85,
      36918,
      2848,
      7,
      13376,
      28,
      4834,
      85,
      36918,
      2848,
      19580,
      7,
      22019,
      62,
      9662,
      28,
      72,
      11,
      1760,
      28,
      25101,
      11,
      12429,
      48553,
      62,
      13376,
      62,
      46265,
      22046,
      4008
    ],
    "start_token": 2889,
    "end_token": 2933,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      31924,
      8398,
      329,
      34820,
      290,
      18931
    ],
    "label": "ml_signal",
    "reason": "Trainer configuration for iterations and logging"
  }
]