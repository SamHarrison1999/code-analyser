annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
üß† ML Signal: Importing specific modules from a package indicates usage patterns,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 13103, 422, 257, 5301, 9217, 8748, 7572]",0.5,9,ml_signal,5,Importing specific modules from a package indicates usage patterns,,0,from qlib.tests import TestAutoData,"[6738, 10662, 8019, 13, 41989, 1330, 6208, 27722, 6601]"
üß† ML Signal: Importing specific modules from a package indicates usage patterns,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 13103, 422, 257, 5301, 9217, 8748, 7572]",0.5,24,ml_signal,7,Importing specific modules from a package indicates usage patterns,,9,from qlib.data.dataset.handler import DataHandlerLP,"[6738, 10662, 8019, 13, 7890, 13, 19608, 292, 316, 13, 30281, 1330, 6060, 25060, 19930]"
üß† ML Signal: Importing specific modules from a package indicates usage patterns,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 13103, 422, 257, 5301, 9217, 8748, 7572]",0.5,24,ml_signal,9,Importing specific modules from a package indicates usage patterns,,24,,[]
"üß† ML Signal: Class definition for test cases, useful for identifying test patterns","[8582, 100, 254, 10373, 26484, 25, 5016, 6770, 329, 1332, 2663, 11, 4465, 329, 13720, 1332, 7572]",0.5,24,ml_signal,9,"Class definition for test cases, useful for identifying test patterns",,24,,[]
"‚úÖ Best Practice: Inherits from a base test class, promoting code reuse and consistency","[26486, 227, 6705, 19939, 25, 47025, 896, 422, 257, 2779, 1332, 1398, 11, 11560, 2438, 32349, 290, 15794]",0.5,33,best_practice,10,"Inherits from a base test class, promoting code reuse and consistency",,24,class HandlerTests(TestAutoData):,"[4871, 32412, 51, 3558, 7, 14402, 27722, 6601, 2599]"
‚úÖ Best Practice: Method should have a docstring explaining its purpose and parameters,"[26486, 227, 6705, 19939, 25, 11789, 815, 423, 257, 2205, 8841, 11170, 663, 4007, 290, 10007]",0.5,33,best_practice,9,Method should have a docstring explaining its purpose and parameters,,33,,[]
üß† ML Signal: Conversion of objects to strings is a common pattern,"[8582, 100, 254, 10373, 26484, 25, 44101, 286, 5563, 284, 13042, 318, 257, 2219, 3912]",0.5,45,ml_signal,11,Conversion of objects to strings is a common pattern,,33,"    def to_str(self, obj):","[220, 220, 220, 825, 284, 62, 2536, 7, 944, 11, 26181, 2599]"
‚úÖ Best Practice: Use of str() ensures that the object is converted to a string,"[26486, 227, 6705, 19939, 25, 5765, 286, 965, 3419, 19047, 326, 262, 2134, 318, 11513, 284, 257, 4731]",1.0,63,best_practice,12,Use of str() ensures that the object is converted to a string,,45,"        return """".join(str(obj).split())","[220, 220, 220, 220, 220, 220, 220, 1441, 366, 1911, 22179, 7, 2536, 7, 26801, 737, 35312, 28955]"
"‚úÖ Best Practice: """".join() is an efficient way to remove whitespace from strings","[26486, 227, 6705, 19939, 25, 366, 1911, 22179, 3419, 318, 281, 6942, 835, 284, 4781, 13216, 10223, 422, 13042]",1.0,63,best_practice,13,""""".join() is an efficient way to remove whitespace from strings",,63,,[]
üß† ML Signal: Usage of a specific feature extraction method with parameters,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2176, 3895, 22236, 2446, 351, 10007]",0.5,63,ml_signal,13,Usage of a specific feature extraction method with parameters,,63,,[]
üß† ML Signal: Conversion of DataFrame to a custom data handler,"[8582, 100, 254, 10373, 26484, 25, 44101, 286, 6060, 19778, 284, 257, 2183, 1366, 21360]",1.0,104,ml_signal,15,Conversion of DataFrame to a custom data handler,,63,"        df = D.features([""sh600519""], start_time=""20190101"", end_time=""20190201"", fields=[""$close""])","[220, 220, 220, 220, 220, 220, 220, 47764, 796, 360, 13, 40890, 7, 14692, 1477, 8054, 47785, 33116, 923, 62, 2435, 2625, 23344, 486, 486, 1600, 886, 62, 2435, 2625, 1264, 3829, 1264, 1600, 7032, 28, 14692, 3, 19836, 8973, 8]"
‚ö†Ô∏è SAST Risk (Low): Use of print statements in test code,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 3601, 6299, 287, 1332, 2438]",0.5,118,sast_risk,17,Use of print statements in test code,Low,104,        print(dh.fetch()),"[220, 220, 220, 220, 220, 220, 220, 3601, 7, 34985, 13, 69, 7569, 28955]"
‚úÖ Best Practice: Use assert methods for testing equality,"[26486, 227, 6705, 19939, 25, 5765, 6818, 5050, 329, 4856, 10537]",0.5,139,best_practice,19,Use assert methods for testing equality,,118,        self.assertTrue(dh._infer is dh._data),"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 30493, 17821, 7, 34985, 13557, 259, 2232, 318, 34590, 13557, 7890, 8]"
‚úÖ Best Practice: Use assert methods for testing object identity,"[26486, 227, 6705, 19939, 25, 5765, 6818, 5050, 329, 4856, 2134, 5369]",0.5,163,best_practice,21,Use assert methods for testing object identity,,139,        self.assertTrue(dh.data_loader._data is dh._data),"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 30493, 17821, 7, 34985, 13, 7890, 62, 29356, 13557, 7890, 318, 34590, 13557, 7890, 8]"
‚úÖ Best Practice: Use assert methods for testing object identity,"[26486, 227, 6705, 19939, 25, 5765, 6818, 5050, 329, 4856, 2134, 5369]",0.5,186,best_practice,23,Use assert methods for testing object identity,,163,"        dh.to_pickle(fname, dump_all=True)","[220, 220, 220, 220, 220, 220, 220, 34590, 13, 1462, 62, 27729, 293, 7, 69, 3672, 11, 10285, 62, 439, 28, 17821, 8]"
‚úÖ Best Practice: Use assert methods for testing object identity,"[26486, 227, 6705, 19939, 25, 5765, 6818, 5050, 329, 4856, 2134, 5369]",0.5,205,best_practice,25,Use assert methods for testing object identity,,186,"        with open(fname, ""rb"") as f:","[220, 220, 220, 220, 220, 220, 220, 351, 1280, 7, 69, 3672, 11, 366, 26145, 4943, 355, 277, 25]"
‚ö†Ô∏è SAST Risk (Medium): Potential risk of overwriting existing files,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 32480, 2526, 286, 6993, 799, 278, 4683, 3696]",1.0,228,sast_risk,28,Potential risk of overwriting existing files,Medium,205,        self.assertTrue(dh_d._data.equals(df)),"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 30493, 17821, 7, 34985, 62, 67, 13557, 7890, 13, 4853, 874, 7, 7568, 4008]"
‚ö†Ô∏è SAST Risk (Medium): Deserialization of potentially untrusted data,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 2935, 48499, 1634, 286, 6196, 1418, 81, 8459, 1366]",0.5,253,sast_risk,29,Deserialization of potentially untrusted data,Medium,228,        self.assertTrue(dh_d._infer is dh_d._data),"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 30493, 17821, 7, 34985, 62, 67, 13557, 259, 2232, 318, 34590, 62, 67, 13557, 7890, 8]"
‚úÖ Best Practice: Use assert methods for testing equality,"[26486, 227, 6705, 19939, 25, 5765, 6818, 5050, 329, 4856, 10537]",0.5,278,best_practice,29,Use assert methods for testing equality,,253,        self.assertTrue(dh_d._infer is dh_d._data),"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 30493, 17821, 7, 34985, 62, 67, 13557, 259, 2232, 318, 34590, 62, 67, 13557, 7890, 8]"
‚úÖ Best Practice: Use assert methods for testing object identity,"[26486, 227, 6705, 19939, 25, 5765, 6818, 5050, 329, 4856, 2134, 5369]",0.5,303,best_practice,29,Use assert methods for testing object identity,,278,        self.assertTrue(dh_d._infer is dh_d._data),"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 30493, 17821, 7, 34985, 62, 67, 13557, 259, 2232, 318, 34590, 62, 67, 13557, 7890, 8]"
‚úÖ Best Practice: Use assert methods for testing object identity,"[26486, 227, 6705, 19939, 25, 5765, 6818, 5050, 329, 4856, 2134, 5369]",0.5,328,best_practice,29,Use assert methods for testing object identity,,303,        self.assertTrue(dh_d._infer is dh_d._data),"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 30493, 17821, 7, 34985, 62, 67, 13557, 259, 2232, 318, 34590, 62, 67, 13557, 7890, 8]"
‚úÖ Best Practice: Use assert methods for testing dictionary keys,"[26486, 227, 6705, 19939, 25, 5765, 6818, 5050, 329, 4856, 22155, 8251]",0.5,353,best_practice,29,Use assert methods for testing dictionary keys,,328,        self.assertTrue(dh_d._infer is dh_d._data),"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 30493, 17821, 7, 34985, 62, 67, 13557, 259, 2232, 318, 34590, 62, 67, 13557, 7890, 8]"
‚ö†Ô∏è SAST Risk (Low): Potential risk if file does not exist,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 2393, 857, 407, 2152]",0.5,378,sast_risk,29,Potential risk if file does not exist,Low,353,        self.assertTrue(dh_d._infer is dh_d._data),"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 30493, 17821, 7, 34985, 62, 67, 13557, 259, 2232, 318, 34590, 62, 67, 13557, 7890, 8]"
üß† ML Signal: Execution of test cases using unittest framework,"[8582, 100, 254, 10373, 26484, 25, 37497, 286, 1332, 2663, 1262, 555, 715, 395, 9355]",0.5,403,ml_signal,29,Execution of test cases using unittest framework,,378,        self.assertTrue(dh_d._infer is dh_d._data),"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 30493, 17821, 7, 34985, 62, 67, 13557, 259, 2232, 318, 34590, 62, 67, 13557, 7890, 8]"
