[
  {
    "line": 5,
    "text": "from qlib.tests import TestAutoData",
    "annotation": "\ud83e\udde0 ML Signal: Importing specific modules from a package indicates usage patterns",
    "confidence": 0.5,
    "tokens": [
      6738,
      10662,
      8019,
      13,
      41989,
      1330,
      6208,
      27722,
      6601
    ],
    "start_token": 0,
    "end_token": 9,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      2176,
      13103,
      422,
      257,
      5301,
      9217,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Importing specific modules from a package indicates usage patterns"
  },
  {
    "line": 7,
    "text": "from qlib.data.dataset.handler import DataHandlerLP",
    "annotation": "\ud83e\udde0 ML Signal: Importing specific modules from a package indicates usage patterns",
    "confidence": 0.5,
    "tokens": [
      6738,
      10662,
      8019,
      13,
      7890,
      13,
      19608,
      292,
      316,
      13,
      30281,
      1330,
      6060,
      25060,
      19930
    ],
    "start_token": 9,
    "end_token": 24,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      2176,
      13103,
      422,
      257,
      5301,
      9217,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Importing specific modules from a package indicates usage patterns"
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Importing specific modules from a package indicates usage patterns",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 24,
    "end_token": 24,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      2176,
      13103,
      422,
      257,
      5301,
      9217,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Importing specific modules from a package indicates usage patterns"
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Class definition for test cases, useful for identifying test patterns",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 24,
    "end_token": 24,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      6770,
      329,
      1332,
      2663,
      11,
      4465,
      329,
      13720,
      1332,
      7572
    ],
    "label": "ml_signal",
    "reason": "Class definition for test cases, useful for identifying test patterns"
  },
  {
    "line": 10,
    "text": "class HandlerTests(TestAutoData):",
    "annotation": "\u2705 Best Practice: Inherits from a base test class, promoting code reuse and consistency",
    "confidence": 0.5,
    "tokens": [
      4871,
      32412,
      51,
      3558,
      7,
      14402,
      27722,
      6601,
      2599
    ],
    "start_token": 24,
    "end_token": 33,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      47025,
      896,
      422,
      257,
      2779,
      1332,
      1398,
      11,
      11560,
      2438,
      32349,
      290,
      15794
    ],
    "label": "best_practice",
    "reason": "Inherits from a base test class, promoting code reuse and consistency"
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\u2705 Best Practice: Method should have a docstring explaining its purpose and parameters",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 33,
    "end_token": 33,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11789,
      815,
      423,
      257,
      2205,
      8841,
      11170,
      663,
      4007,
      290,
      10007
    ],
    "label": "best_practice",
    "reason": "Method should have a docstring explaining its purpose and parameters"
  },
  {
    "line": 11,
    "text": "    def to_str(self, obj):",
    "annotation": "\ud83e\udde0 ML Signal: Conversion of objects to strings is a common pattern",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      284,
      62,
      2536,
      7,
      944,
      11,
      26181,
      2599
    ],
    "start_token": 33,
    "end_token": 45,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      44101,
      286,
      5563,
      284,
      13042,
      318,
      257,
      2219,
      3912
    ],
    "label": "ml_signal",
    "reason": "Conversion of objects to strings is a common pattern"
  },
  {
    "line": 12,
    "text": "        return \"\".join(str(obj).split())",
    "annotation": "\u2705 Best Practice: Use of str() ensures that the object is converted to a string",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      366,
      1911,
      22179,
      7,
      2536,
      7,
      26801,
      737,
      35312,
      28955
    ],
    "start_token": 45,
    "end_token": 63,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      965,
      3419,
      19047,
      326,
      262,
      2134,
      318,
      11513,
      284,
      257,
      4731
    ],
    "label": "best_practice",
    "reason": "Use of str() ensures that the object is converted to a string"
  },
  {
    "line": 13,
    "text": "",
    "annotation": "\u2705 Best Practice: \"\".join() is an efficient way to remove whitespace from strings",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 63,
    "end_token": 63,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      366,
      1911,
      22179,
      3419,
      318,
      281,
      6942,
      835,
      284,
      4781,
      13216,
      10223,
      422,
      13042
    ],
    "label": "best_practice",
    "reason": "\"\".join() is an efficient way to remove whitespace from strings"
  },
  {
    "line": 13,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a specific feature extraction method with parameters",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 63,
    "end_token": 63,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      2176,
      3895,
      22236,
      2446,
      351,
      10007
    ],
    "label": "ml_signal",
    "reason": "Usage of a specific feature extraction method with parameters"
  },
  {
    "line": 15,
    "text": "        df = D.features([\"sh600519\"], start_time=\"20190101\", end_time=\"20190201\", fields=[\"$close\"])",
    "annotation": "\ud83e\udde0 ML Signal: Conversion of DataFrame to a custom data handler",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      796,
      360,
      13,
      40890,
      7,
      14692,
      1477,
      8054,
      47785,
      33116,
      923,
      62,
      2435,
      2625,
      23344,
      486,
      486,
      1600,
      886,
      62,
      2435,
      2625,
      1264,
      3829,
      1264,
      1600,
      7032,
      28,
      14692,
      3,
      19836,
      8973,
      8
    ],
    "start_token": 63,
    "end_token": 104,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      44101,
      286,
      6060,
      19778,
      284,
      257,
      2183,
      1366,
      21360
    ],
    "label": "ml_signal",
    "reason": "Conversion of DataFrame to a custom data handler"
  },
  {
    "line": 17,
    "text": "        print(dh.fetch())",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of print statements in test code",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      34985,
      13,
      69,
      7569,
      28955
    ],
    "start_token": 104,
    "end_token": 118,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      3601,
      6299,
      287,
      1332,
      2438
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of print statements in test code"
  },
  {
    "line": 19,
    "text": "        self.assertTrue(dh._infer is dh._data)",
    "annotation": "\u2705 Best Practice: Use assert methods for testing equality",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      30493,
      17821,
      7,
      34985,
      13557,
      259,
      2232,
      318,
      34590,
      13557,
      7890,
      8
    ],
    "start_token": 118,
    "end_token": 139,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      6818,
      5050,
      329,
      4856,
      10537
    ],
    "label": "best_practice",
    "reason": "Use assert methods for testing equality"
  },
  {
    "line": 21,
    "text": "        self.assertTrue(dh.data_loader._data is dh._data)",
    "annotation": "\u2705 Best Practice: Use assert methods for testing object identity",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      30493,
      17821,
      7,
      34985,
      13,
      7890,
      62,
      29356,
      13557,
      7890,
      318,
      34590,
      13557,
      7890,
      8
    ],
    "start_token": 139,
    "end_token": 163,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      6818,
      5050,
      329,
      4856,
      2134,
      5369
    ],
    "label": "best_practice",
    "reason": "Use assert methods for testing object identity"
  },
  {
    "line": 23,
    "text": "        dh.to_pickle(fname, dump_all=True)",
    "annotation": "\u2705 Best Practice: Use assert methods for testing object identity",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      34590,
      13,
      1462,
      62,
      27729,
      293,
      7,
      69,
      3672,
      11,
      10285,
      62,
      439,
      28,
      17821,
      8
    ],
    "start_token": 163,
    "end_token": 186,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      6818,
      5050,
      329,
      4856,
      2134,
      5369
    ],
    "label": "best_practice",
    "reason": "Use assert methods for testing object identity"
  },
  {
    "line": 25,
    "text": "        with open(fname, \"rb\") as f:",
    "annotation": "\u2705 Best Practice: Use assert methods for testing object identity",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      351,
      1280,
      7,
      69,
      3672,
      11,
      366,
      26145,
      4943,
      355,
      277,
      25
    ],
    "start_token": 186,
    "end_token": 205,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      6818,
      5050,
      329,
      4856,
      2134,
      5369
    ],
    "label": "best_practice",
    "reason": "Use assert methods for testing object identity"
  },
  {
    "line": 28,
    "text": "        self.assertTrue(dh_d._data.equals(df))",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential risk of overwriting existing files",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      30493,
      17821,
      7,
      34985,
      62,
      67,
      13557,
      7890,
      13,
      4853,
      874,
      7,
      7568,
      4008
    ],
    "start_token": 205,
    "end_token": 228,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      2526,
      286,
      6993,
      799,
      278,
      4683,
      3696
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential risk of overwriting existing files"
  },
  {
    "line": 29,
    "text": "        self.assertTrue(dh_d._infer is dh_d._data)",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Deserialization of potentially untrusted data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      30493,
      17821,
      7,
      34985,
      62,
      67,
      13557,
      259,
      2232,
      318,
      34590,
      62,
      67,
      13557,
      7890,
      8
    ],
    "start_token": 228,
    "end_token": 253,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      2935,
      48499,
      1634,
      286,
      6196,
      1418,
      81,
      8459,
      1366
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Deserialization of potentially untrusted data"
  },
  {
    "line": 29,
    "text": "        self.assertTrue(dh_d._infer is dh_d._data)",
    "annotation": "\u2705 Best Practice: Use assert methods for testing equality",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      30493,
      17821,
      7,
      34985,
      62,
      67,
      13557,
      259,
      2232,
      318,
      34590,
      62,
      67,
      13557,
      7890,
      8
    ],
    "start_token": 253,
    "end_token": 278,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      6818,
      5050,
      329,
      4856,
      10537
    ],
    "label": "best_practice",
    "reason": "Use assert methods for testing equality"
  },
  {
    "line": 29,
    "text": "        self.assertTrue(dh_d._infer is dh_d._data)",
    "annotation": "\u2705 Best Practice: Use assert methods for testing object identity",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      30493,
      17821,
      7,
      34985,
      62,
      67,
      13557,
      259,
      2232,
      318,
      34590,
      62,
      67,
      13557,
      7890,
      8
    ],
    "start_token": 278,
    "end_token": 303,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      6818,
      5050,
      329,
      4856,
      2134,
      5369
    ],
    "label": "best_practice",
    "reason": "Use assert methods for testing object identity"
  },
  {
    "line": 29,
    "text": "        self.assertTrue(dh_d._infer is dh_d._data)",
    "annotation": "\u2705 Best Practice: Use assert methods for testing object identity",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      30493,
      17821,
      7,
      34985,
      62,
      67,
      13557,
      259,
      2232,
      318,
      34590,
      62,
      67,
      13557,
      7890,
      8
    ],
    "start_token": 303,
    "end_token": 328,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      6818,
      5050,
      329,
      4856,
      2134,
      5369
    ],
    "label": "best_practice",
    "reason": "Use assert methods for testing object identity"
  },
  {
    "line": 29,
    "text": "        self.assertTrue(dh_d._infer is dh_d._data)",
    "annotation": "\u2705 Best Practice: Use assert methods for testing dictionary keys",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      30493,
      17821,
      7,
      34985,
      62,
      67,
      13557,
      259,
      2232,
      318,
      34590,
      62,
      67,
      13557,
      7890,
      8
    ],
    "start_token": 328,
    "end_token": 353,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      6818,
      5050,
      329,
      4856,
      22155,
      8251
    ],
    "label": "best_practice",
    "reason": "Use assert methods for testing dictionary keys"
  },
  {
    "line": 29,
    "text": "        self.assertTrue(dh_d._infer is dh_d._data)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential risk if file does not exist",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      30493,
      17821,
      7,
      34985,
      62,
      67,
      13557,
      259,
      2232,
      318,
      34590,
      62,
      67,
      13557,
      7890,
      8
    ],
    "start_token": 353,
    "end_token": 378,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2526,
      611,
      2393,
      857,
      407,
      2152
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential risk if file does not exist"
  },
  {
    "line": 29,
    "text": "        self.assertTrue(dh_d._infer is dh_d._data)",
    "annotation": "\ud83e\udde0 ML Signal: Execution of test cases using unittest framework",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      30493,
      17821,
      7,
      34985,
      62,
      67,
      13557,
      259,
      2232,
      318,
      34590,
      62,
      67,
      13557,
      7890,
      8
    ],
    "start_token": 378,
    "end_token": 403,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      37497,
      286,
      1332,
      2663,
      1262,
      555,
      715,
      395,
      9355
    ],
    "label": "ml_signal",
    "reason": "Execution of test cases using unittest framework"
  }
]