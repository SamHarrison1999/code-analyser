[
  {
    "line": 21,
    "text": "        fit_end_time=None,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Mutable default arguments like lists can lead to unexpected behavior",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4197,
      62,
      437,
      62,
      2435,
      28,
      14202,
      11
    ],
    "start_token": 0,
    "end_token": 15,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      13859,
      540,
      4277,
      7159,
      588,
      8341,
      460,
      1085,
      284,
      10059,
      4069
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Mutable default arguments like lists can lead to unexpected behavior"
  },
  {
    "line": 23,
    "text": "    ):",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Mutable default arguments like lists can lead to unexpected behavior",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      15179
    ],
    "start_token": 15,
    "end_token": 19,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      13859,
      540,
      4277,
      7159,
      588,
      8341,
      460,
      1085,
      284,
      10059,
      4069
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Mutable default arguments like lists can lead to unexpected behavior"
  },
  {
    "line": 31,
    "text": "                \"config\": self.get_feature_config(),",
    "annotation": "\ud83e\udde0 ML Signal: Use of a data loader pattern, common in ML pipelines",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      11250,
      1298,
      2116,
      13,
      1136,
      62,
      30053,
      62,
      11250,
      22784
    ],
    "start_token": 19,
    "end_token": 45,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      1366,
      40213,
      3912,
      11,
      2219,
      287,
      10373,
      31108
    ],
    "label": "ml_signal",
    "reason": "Use of a data loader pattern, common in ML pipelines"
  },
  {
    "line": 40,
    "text": "            data_loader=data_loader,",
    "annotation": "\ud83e\udde0 ML Signal: Function returns a tuple of fields and names, indicating a pattern for feature configuration",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1366,
      62,
      29356,
      28,
      7890,
      62,
      29356,
      11
    ],
    "start_token": 45,
    "end_token": 64,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      5860,
      257,
      46545,
      286,
      7032,
      290,
      3891,
      11,
      12739,
      257,
      3912,
      329,
      3895,
      8398
    ],
    "label": "ml_signal",
    "reason": "Function returns a tuple of fields and names, indicating a pattern for feature configuration"
  },
  {
    "line": 42,
    "text": "            learn_processors=learn_processors,",
    "annotation": "\ud83e\udde0 ML Signal: Use of financial indicators in field names suggests a pattern for financial data processing",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2193,
      62,
      14681,
      669,
      28,
      35720,
      62,
      14681,
      669,
      11
    ],
    "start_token": 64,
    "end_token": 85,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      3176,
      21337,
      287,
      2214,
      3891,
      5644,
      257,
      3912,
      329,
      3176,
      1366,
      7587
    ],
    "label": "ml_signal",
    "reason": "Use of financial indicators in field names suggests a pattern for financial data processing"
  },
  {
    "line": 44,
    "text": "        )",
    "annotation": "\ud83e\udde0 ML Signal: Naming convention for features indicates a pattern for feature engineering",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 85,
    "end_token": 93,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      399,
      3723,
      9831,
      329,
      3033,
      9217,
      257,
      3912,
      329,
      3895,
      8705
    ],
    "label": "ml_signal",
    "reason": "Naming convention for features indicates a pattern for feature engineering"
  },
  {
    "line": 46,
    "text": "    def get_feature_config(self):",
    "annotation": "\u2705 Best Practice: Returning multiple values as a tuple is a common and clear pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      651,
      62,
      30053,
      62,
      11250,
      7,
      944,
      2599
    ],
    "start_token": 93,
    "end_token": 105,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      42882,
      3294,
      3815,
      355,
      257,
      46545,
      318,
      257,
      2219,
      290,
      1598,
      3912
    ],
    "label": "best_practice",
    "reason": "Returning multiple values as a tuple is a common and clear pattern"
  },
  {
    "line": 45,
    "text": "",
    "annotation": "\u2705 Best Practice: Class variables are used for configuration, improving readability and maintainability.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 105,
    "end_token": 105,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      9633,
      389,
      973,
      329,
      8398,
      11,
      10068,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Class variables are used for configuration, improving readability and maintainability."
  },
  {
    "line": 47,
    "text": "        fields = [\"Ref($open, 1)\", \"Ref($close, 1)\", \"Ref($volume, 1)\", \"$open\", \"$close\", \"$volume\"]",
    "annotation": "\u2705 Best Practice: Using ISO 8601 date format for clarity and consistency.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      7032,
      796,
      14631,
      8134,
      16763,
      9654,
      11,
      352,
      42501,
      366,
      8134,
      16763,
      19836,
      11,
      352,
      42501,
      366,
      8134,
      16763,
      29048,
      11,
      352,
      42501,
      17971,
      9654,
      1600,
      17971,
      19836,
      1600,
      17971,
      29048,
      8973
    ],
    "start_token": 105,
    "end_token": 144,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      19694,
      9849,
      486,
      3128,
      5794,
      329,
      16287,
      290,
      15794,
      13
    ],
    "label": "best_practice",
    "reason": "Using ISO 8601 date format for clarity and consistency."
  },
  {
    "line": 49,
    "text": "        return fields, names",
    "annotation": "\u2705 Best Practice: Using ISO 8601 date format for clarity and consistency.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      7032,
      11,
      3891
    ],
    "start_token": 144,
    "end_token": 155,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      19694,
      9849,
      486,
      3128,
      5794,
      329,
      16287,
      290,
      15794,
      13
    ],
    "label": "best_practice",
    "reason": "Using ISO 8601 date format for clarity and consistency."
  },
  {
    "line": 50,
    "text": "",
    "annotation": "\u2705 Best Practice: Using ISO 8601 date format for clarity and consistency.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 155,
    "end_token": 155,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      19694,
      9849,
      486,
      3128,
      5794,
      329,
      16287,
      290,
      15794,
      13
    ],
    "label": "best_practice",
    "reason": "Using ISO 8601 date format for clarity and consistency."
  },
  {
    "line": 50,
    "text": "",
    "annotation": "\u2705 Best Practice: Using ISO 8601 date format for clarity and consistency.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 155,
    "end_token": 155,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      19694,
      9849,
      486,
      3128,
      5794,
      329,
      16287,
      290,
      15794,
      13
    ],
    "label": "best_practice",
    "reason": "Using ISO 8601 date format for clarity and consistency."
  },
  {
    "line": 57,
    "text": "    train_end_time = \"2015-12-31\"",
    "annotation": "\u2705 Best Practice: Using a dictionary for keyword arguments improves code readability and flexibility.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      4512,
      62,
      437,
      62,
      2435,
      796,
      366,
      4626,
      12,
      1065,
      12,
      3132,
      1
    ],
    "start_token": 155,
    "end_token": 171,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      257,
      22155,
      329,
      21179,
      7159,
      19575,
      2438,
      1100,
      1799,
      290,
      13688,
      13
    ],
    "label": "best_practice",
    "reason": "Using a dictionary for keyword arguments improves code readability and flexibility."
  },
  {
    "line": 57,
    "text": "    train_end_time = \"2015-12-31\"",
    "annotation": "\ud83e\udde0 ML Signal: Consistent use of start and end times for data handling.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      4512,
      62,
      437,
      62,
      2435,
      796,
      366,
      4626,
      12,
      1065,
      12,
      3132,
      1
    ],
    "start_token": 171,
    "end_token": 187,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3515,
      7609,
      779,
      286,
      923,
      290,
      886,
      1661,
      329,
      1366,
      9041,
      13
    ],
    "label": "ml_signal",
    "reason": "Consistent use of start and end times for data handling."
  },
  {
    "line": 59,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Consistent use of start and end times for data handling.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 187,
    "end_token": 187,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3515,
      7609,
      779,
      286,
      923,
      290,
      886,
      1661,
      329,
      1366,
      9041,
      13
    ],
    "label": "ml_signal",
    "reason": "Consistent use of start and end times for data handling."
  },
  {
    "line": 61,
    "text": "        \"start_time\": start_time,",
    "annotation": "\ud83e\udde0 ML Signal: Consistent use of start and end times for data handling.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      9688,
      62,
      2435,
      1298,
      923,
      62,
      2435,
      11
    ],
    "start_token": 187,
    "end_token": 203,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3515,
      7609,
      779,
      286,
      923,
      290,
      886,
      1661,
      329,
      1366,
      9041,
      13
    ],
    "label": "ml_signal",
    "reason": "Consistent use of start and end times for data handling."
  },
  {
    "line": 63,
    "text": "        \"fit_start_time\": start_time,",
    "annotation": "\ud83e\udde0 ML Signal: Consistent use of start and end times for data handling.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      11147,
      62,
      9688,
      62,
      2435,
      1298,
      923,
      62,
      2435,
      11
    ],
    "start_token": 203,
    "end_token": 221,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3515,
      7609,
      779,
      286,
      923,
      290,
      886,
      1661,
      329,
      1366,
      9041,
      13
    ],
    "label": "ml_signal",
    "reason": "Consistent use of start and end times for data handling."
  },
  {
    "line": 66,
    "text": "    }",
    "annotation": "\ud83e\udde0 ML Signal: Use of market variable to specify instruments, indicating a pattern for data selection.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1782
    ],
    "start_token": 221,
    "end_token": 225,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1910,
      7885,
      284,
      11986,
      12834,
      11,
      12739,
      257,
      3912,
      329,
      1366,
      6356,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of market variable to specify instruments, indicating a pattern for data selection."
  },
  {
    "line": 59,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of keyword arguments to initialize an object",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 225,
    "end_token": 225,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      21179,
      7159,
      284,
      41216,
      281,
      2134
    ],
    "label": "ml_signal",
    "reason": "Usage of keyword arguments to initialize an object"
  },
  {
    "line": 63,
    "text": "        \"fit_start_time\": start_time,",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a method to retrieve instruments based on market",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      11147,
      62,
      9688,
      62,
      2435,
      1298,
      923,
      62,
      2435,
      11
    ],
    "start_token": 225,
    "end_token": 243,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      2446,
      284,
      19818,
      12834,
      1912,
      319,
      1910
    ],
    "label": "ml_signal",
    "reason": "Usage of a method to retrieve instruments based on market"
  },
  {
    "line": 66,
    "text": "    }",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a method to list instruments with specific time range",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1782
    ],
    "start_token": 243,
    "end_token": 247,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      2446,
      284,
      1351,
      12834,
      351,
      2176,
      640,
      2837
    ],
    "label": "ml_signal",
    "reason": "Usage of a method to list instruments with specific time range"
  },
  {
    "line": 69,
    "text": "        # init data handler",
    "annotation": "\u2705 Best Practice: Use of context manager for timing operations",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      2315,
      1366,
      21360
    ],
    "start_token": 247,
    "end_token": 258,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      4732,
      4706,
      329,
      10576,
      4560
    ],
    "label": "best_practice",
    "reason": "Use of context manager for timing operations"
  },
  {
    "line": 72,
    "text": "        # init data handler with hasing storage",
    "annotation": "\ud83e\udde0 ML Signal: Random selection of an index from a list",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      2315,
      1366,
      21360,
      351,
      468,
      278,
      6143
    ],
    "start_token": 258,
    "end_token": 273,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      14534,
      6356,
      286,
      281,
      6376,
      422,
      257,
      1351
    ],
    "label": "ml_signal",
    "reason": "Random selection of an index from a list"
  },
  {
    "line": 75,
    "text": "        fetch_start_time = \"2019-01-01\"",
    "annotation": "\ud83e\udde0 ML Signal: Fetching data using a selector pattern",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      21207,
      62,
      9688,
      62,
      2435,
      796,
      366,
      23344,
      12,
      486,
      12,
      486,
      1
    ],
    "start_token": 273,
    "end_token": 293,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      376,
      7569,
      278,
      1366,
      1262,
      257,
      31870,
      3912
    ],
    "label": "ml_signal",
    "reason": "Fetching data using a selector pattern"
  },
  {
    "line": 78,
    "text": "        instruments = D.list_instruments(",
    "annotation": "\ud83e\udde0 ML Signal: Random selection of multiple indices from a list",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      12834,
      796,
      360,
      13,
      4868,
      62,
      259,
      2536,
      2886,
      7
    ],
    "start_token": 293,
    "end_token": 310,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      14534,
      6356,
      286,
      3294,
      36525,
      422,
      257,
      1351
    ],
    "label": "ml_signal",
    "reason": "Random selection of multiple indices from a list"
  },
  {
    "line": 85,
    "text": "                random_index = np.random.randint(len(instruments), size=1)[0]",
    "annotation": "\u2705 Best Practice: Use of unittest framework for test execution",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4738,
      62,
      9630,
      796,
      45941,
      13,
      25120,
      13,
      25192,
      600,
      7,
      11925,
      7,
      259,
      2536,
      2886,
      828,
      2546,
      28,
      16,
      38381,
      15,
      60
    ],
    "start_token": 310,
    "end_token": 348,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      555,
      715,
      395,
      9355,
      329,
      1332,
      9706
    ],
    "label": "best_practice",
    "reason": "Use of unittest framework for test execution"
  }
]