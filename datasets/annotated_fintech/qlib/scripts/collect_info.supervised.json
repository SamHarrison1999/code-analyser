[
  {
    "line": 8,
    "text": "QLIB_PATH = Path(__file__).absolute().resolve().parent.parent",
    "annotation": "\u2705 Best Practice: Use of Path from pathlib for file path operations improves readability and cross-platform compatibility.",
    "confidence": 1.0,
    "tokens": [
      9711,
      9865,
      62,
      34219,
      796,
      10644,
      7,
      834,
      7753,
      834,
      737,
      48546,
      22446,
      411,
      6442,
      22446,
      8000,
      13,
      8000
    ],
    "start_token": 0,
    "end_token": 19,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      10644,
      422,
      3108,
      8019,
      329,
      2393,
      3108,
      4560,
      19575,
      1100,
      1799,
      290,
      3272,
      12,
      24254,
      17764,
      13
    ],
    "label": "best_practice",
    "reason": "Use of Path from pathlib for file path operations improves readability and cross-platform compatibility."
  },
  {
    "line": 14,
    "text": "    `cd scripts && python collect_info.py all`",
    "annotation": "\u2705 Best Practice: Consider adding a docstring to describe the purpose and usage of the class.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      4600,
      10210,
      14750,
      11405,
      21015,
      2824,
      62,
      10951,
      13,
      9078,
      477,
      63
    ],
    "start_token": 19,
    "end_token": 34,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      4375,
      257,
      2205,
      8841,
      284,
      6901,
      262,
      4007,
      290,
      8748,
      286,
      262,
      1398,
      13
    ],
    "label": "best_practice",
    "reason": "Consider adding a docstring to describe the purpose and usage of the class."
  },
  {
    "line": 16,
    "text": "    \"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over a list of method names to dynamically call them",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      37227
    ],
    "start_token": 34,
    "end_token": 38,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      257,
      1351,
      286,
      2446,
      3891,
      284,
      32366,
      869,
      606
    ],
    "label": "ml_signal",
    "reason": "Iterating over a list of method names to dynamically call them"
  },
  {
    "line": 18,
    "text": "    def sys(self):",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Using getattr without validation can lead to calling unintended methods",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      25064,
      7,
      944,
      2599
    ],
    "start_token": 38,
    "end_token": 46,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      8554,
      651,
      35226,
      1231,
      21201,
      460,
      1085,
      284,
      4585,
      30261,
      5050
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Using getattr without validation can lead to calling unintended methods"
  },
  {
    "line": 18,
    "text": "    def sys(self):",
    "annotation": "\u2705 Best Practice: Method docstring provides a brief description of the method's purpose",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      25064,
      7,
      944,
      2599
    ],
    "start_token": 46,
    "end_token": 54,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11789,
      2205,
      8841,
      3769,
      257,
      4506,
      6764,
      286,
      262,
      2446,
      338,
      4007
    ],
    "label": "best_practice",
    "reason": "Method docstring provides a brief description of the method's purpose"
  },
  {
    "line": 21,
    "text": "            print(getattr(platform, method)())",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): sys module is used without being imported, which will cause a NameError",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      1136,
      35226,
      7,
      24254,
      11,
      2446,
      8,
      28955
    ],
    "start_token": 54,
    "end_token": 75,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      25064,
      8265,
      318,
      973,
      1231,
      852,
      17392,
      11,
      543,
      481,
      2728,
      257,
      6530,
      12331
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "sys module is used without being imported, which will cause a NameError"
  },
  {
    "line": 22,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of sys.version to obtain Python version information",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 75,
    "end_token": 75,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      25064,
      13,
      9641,
      284,
      7330,
      11361,
      2196,
      1321
    ],
    "label": "ml_signal",
    "reason": "Use of sys.version to obtain Python version information"
  },
  {
    "line": 23,
    "text": "    def py(self):",
    "annotation": "\u2705 Best Practice: Consider using logging instead of print for better control over output levels and destinations",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      12972,
      7,
      944,
      2599
    ],
    "start_token": 75,
    "end_token": 83,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      18931,
      2427,
      286,
      3601,
      329,
      1365,
      1630,
      625,
      5072,
      2974,
      290,
      23982
    ],
    "label": "best_practice",
    "reason": "Consider using logging instead of print for better control over output levels and destinations"
  },
  {
    "line": 53,
    "text": "            \"tornado\",",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over a list of package names to check their versions",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      45910,
      4533,
      1600
    ],
    "start_token": 83,
    "end_token": 98,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      257,
      1351,
      286,
      5301,
      3891,
      284,
      2198,
      511,
      6300
    ],
    "label": "ml_signal",
    "reason": "Iterating over a list of package names to check their versions"
  },
  {
    "line": 55,
    "text": "            \"fire\",",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): pkg_resources.get_distribution can raise DistributionNotFound exception if the package is not installed",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      6495,
      1600
    ],
    "start_token": 98,
    "end_token": 112,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      279,
      10025,
      62,
      37540,
      13,
      1136,
      62,
      17080,
      3890,
      460,
      5298,
      27484,
      3673,
      21077,
      6631,
      611,
      262,
      5301,
      318,
      407,
      6589
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "pkg_resources.get_distribution can raise DistributionNotFound exception if the package is not installed"
  },
  {
    "line": 57,
    "text": "        ]",
    "annotation": "\u2705 Best Practice: Consider using logging instead of print for better control over output levels and destinations",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2361
    ],
    "start_token": 112,
    "end_token": 120,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      18931,
      2427,
      286,
      3601,
      329,
      1365,
      1630,
      625,
      5072,
      2974,
      290,
      23982
    ],
    "label": "best_practice",
    "reason": "Consider using logging instead of print for better control over output levels and destinations"
  },
  {
    "line": 57,
    "text": "        ]",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over a list of method names to dynamically call them",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2361
    ],
    "start_token": 120,
    "end_token": 128,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      257,
      1351,
      286,
      2446,
      3891,
      284,
      32366,
      869,
      606
    ],
    "label": "ml_signal",
    "reason": "Iterating over a list of method names to dynamically call them"
  },
  {
    "line": 59,
    "text": "        for package in REQUIRED:",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Use of getattr with user-controlled input can lead to security risks if not properly validated",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      329,
      5301,
      287,
      4526,
      10917,
      37819,
      25
    ],
    "start_token": 128,
    "end_token": 142,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      5765,
      286,
      651,
      35226,
      351,
      2836,
      12,
      14401,
      5128,
      460,
      1085,
      284,
      2324,
      7476,
      611,
      407,
      6105,
      31031
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Use of getattr with user-controlled input can lead to security risks if not properly validated"
  },
  {
    "line": 61,
    "text": "            print(f\"{package}=={version}\")",
    "annotation": "\u2705 Best Practice: Adding a print statement for separation or debugging purposes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      69,
      1,
      90,
      26495,
      92,
      855,
      90,
      9641,
      92,
      4943
    ],
    "start_token": 142,
    "end_token": 165,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      18247,
      257,
      3601,
      2643,
      329,
      14139,
      393,
      28769,
      4959
    ],
    "label": "best_practice",
    "reason": "Adding a print statement for separation or debugging purposes"
  },
  {
    "line": 61,
    "text": "            print(f\"{package}=={version}\")",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Using fire.Fire can execute arbitrary code if not properly controlled",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      69,
      1,
      90,
      26495,
      92,
      855,
      90,
      9641,
      92,
      4943
    ],
    "start_token": 165,
    "end_token": 188,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      8554,
      2046,
      13,
      13543,
      460,
      12260,
      14977,
      2438,
      611,
      407,
      6105,
      6856
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Using fire.Fire can execute arbitrary code if not properly controlled"
  },
  {
    "line": 61,
    "text": "            print(f\"{package}=={version}\")",
    "annotation": "\ud83e\udde0 ML Signal: Use of fire.Fire to create a command-line interface",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      69,
      1,
      90,
      26495,
      92,
      855,
      90,
      9641,
      92,
      4943
    ],
    "start_token": 188,
    "end_token": 211,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2046,
      13,
      13543,
      284,
      2251,
      257,
      3141,
      12,
      1370,
      7071
    ],
    "label": "ml_signal",
    "reason": "Use of fire.Fire to create a command-line interface"
  }
]