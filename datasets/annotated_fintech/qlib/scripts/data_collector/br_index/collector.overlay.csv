annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Use of Path from pathlib for file path operations improves code readability and cross-platform compatibility.,"[26486, 227, 6705, 19939, 25, 5765, 286, 10644, 422, 3108, 8019, 329, 2393, 3108, 4560, 19575, 2438, 1100, 1799, 290, 3272, 12, 24254, 17764, 13]",0.5,8,best_practice,10,Use of Path from pathlib for file path operations improves code readability and cross-platform compatibility.,,0,from tqdm import tqdm,"[6738, 256, 80, 36020, 1330, 256, 80, 36020]"
‚úÖ Best Practice: Appending to sys.path to include parent directories for module imports.,"[26486, 227, 6705, 19939, 25, 2034, 1571, 284, 25064, 13, 6978, 284, 2291, 2560, 29196, 329, 8265, 17944, 13]",0.5,23,best_practice,13,Appending to sys.path to include parent directories for module imports.,,8,CUR_DIR = Path(__file__).resolve().parent,"[34, 4261, 62, 34720, 796, 10644, 7, 834, 7753, 834, 737, 411, 6442, 22446, 8000]"
‚úÖ Best Practice: Grouping related imports together improves code readability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 3519, 17944, 1978, 19575, 2438, 1100, 1799, 13]",0.5,33,best_practice,16,Grouping related imports together improves code readability.,,23,from data_collector.index import IndexBase,"[6738, 1366, 62, 33327, 273, 13, 9630, 1330, 12901, 14881]"
üß† ML Signal: Use of a dictionary to map quarters to date ranges could be a feature in ML models.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 22155, 284, 3975, 13620, 284, 3128, 16069, 714, 307, 257, 3895, 287, 10373, 4981, 13]",0.5,46,ml_signal,17,Use of a dictionary to map quarters to date ranges could be a feature in ML models.,,33,from data_collector.utils import get_instruments,"[6738, 1366, 62, 33327, 273, 13, 26791, 1330, 651, 62, 259, 2536, 2886]"
üß† ML Signal: Use of a class variable to store a URL pattern for data retrieval,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 1398, 7885, 284, 3650, 257, 10289, 3912, 329, 1366, 45069]",0.5,46,ml_signal,15,Use of a class variable to store a URL pattern for data retrieval,,46,,[]
"üß† ML Signal: Use of a class variable to store a list, indicating potential shared state or configuration","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 1398, 7885, 284, 3650, 257, 1351, 11, 12739, 2785, 4888, 1181, 393, 8398]",0.5,59,ml_signal,17,"Use of a class variable to store a list, indicating potential shared state or configuration",,46,from data_collector.utils import get_instruments,"[6738, 1366, 62, 33327, 273, 13, 26791, 1330, 651, 62, 259, 2536, 2886]"
‚úÖ Best Practice: Use of super() to call the parent class constructor,"[26486, 227, 6705, 19939, 25, 5765, 286, 2208, 3419, 284, 869, 262, 2560, 1398, 23772]",0.5,59,best_practice,25,Use of super() to call the parent class constructor,,59,,[]
üß† ML Signal: Use of current date to initialize an object,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1459, 3128, 284, 41216, 281, 2134]",0.5,79,ml_signal,29,Use of current date to initialize an object,,59,"        qlib_dir: [str, Path] = None,","[220, 220, 220, 220, 220, 220, 220, 10662, 8019, 62, 15908, 25, 685, 2536, 11, 10644, 60, 796, 6045, 11]"
üß† ML Signal: Use of a method to calculate a period based on the current month,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 2446, 284, 15284, 257, 2278, 1912, 319, 262, 1459, 1227]",0.5,95,ml_signal,31,Use of a method to calculate a period based on the current month,,79,"        request_retry: int = 5,","[220, 220, 220, 220, 220, 220, 220, 2581, 62, 1186, 563, 25, 493, 796, 642, 11]"
üß† ML Signal: Conversion of a date attribute to a string,"[8582, 100, 254, 10373, 26484, 25, 44101, 286, 257, 3128, 11688, 284, 257, 4731]",0.5,99,ml_signal,33,Conversion of a date attribute to a string,,95,    ):,"[220, 220, 220, 15179]"
üß† ML Signal: Use of a method to get a period configuration,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 2446, 284, 651, 257, 2278, 8398]",0.5,119,ml_signal,34,Use of a method to get a period configuration,,99,"        super(IBOVIndex, self).__init__(","[220, 220, 220, 220, 220, 220, 220, 2208, 7, 40, 8202, 53, 15732, 11, 2116, 737, 834, 15003, 834, 7]"
‚úÖ Best Practice: Include type hints for better readability and maintainability,"[26486, 227, 6705, 19939, 25, 40348, 2099, 20269, 329, 1365, 1100, 1799, 290, 5529, 1799]",1.0,123,best_practice,33,Include type hints for better readability and maintainability,,119,    ):,"[220, 220, 220, 15179]"
üß† ML Signal: Hardcoded date values can indicate fixed historical or benchmark points,"[8582, 100, 254, 10373, 26484, 25, 6912, 40976, 3128, 3815, 460, 7603, 5969, 6754, 393, 18335, 2173]",0.5,123,ml_signal,42,Hardcoded date values can indicate fixed historical or benchmark points,,123,,[]
‚úÖ Best Practice: Use of clear and concise conditional statements for readability,"[26486, 227, 6705, 19939, 25, 5765, 286, 1598, 290, 35327, 26340, 6299, 329, 1100, 1799]",0.5,134,best_practice,64,Use of clear and concise conditional statements for readability,,123,"        In other words,","[220, 220, 220, 220, 220, 220, 220, 554, 584, 2456, 11]"
‚úÖ Best Practice: Use of clear and concise conditional statements for readability,"[26486, 227, 6705, 19939, 25, 5765, 286, 1598, 290, 35327, 26340, 6299, 329, 1100, 1799]",0.5,151,best_practice,67,Use of clear and concise conditional statements for readability,,134,"        May, Jun, Jul, Aug: 2Q","[220, 220, 220, 220, 220, 220, 220, 1737, 11, 7653, 11, 5979, 11, 2447, 25, 362, 48]"
‚úÖ Best Practice: Use of clear and concise conditional statements for readability,"[26486, 227, 6705, 19939, 25, 5765, 286, 1598, 290, 35327, 26340, 6299, 329, 1100, 1799]",0.5,151,best_practice,69,Use of clear and concise conditional statements for readability,,151,,[]
‚ö†Ô∏è SAST Risk (Low): Returning -1 for invalid input without raising an exception or error,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 42882, 532, 16, 329, 12515, 5128, 1231, 8620, 281, 6631, 393, 4049]",1.0,171,sast_risk,73,Returning -1 for invalid input without raising an exception or error,Low,151,            Current month (1 <= month <= 12),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 9236, 1227, 357, 16, 19841, 1227, 19841, 1105, 8]"
‚úÖ Best Practice: Use a list to store constant values for better readability and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 257, 1351, 284, 3650, 6937, 3815, 329, 1365, 1100, 1799, 290, 5529, 1799]",1.0,196,best_practice,78,Use a list to store constant values for better readability and maintainability,,171,            Current Four Month Period (1Q or 2Q or 3Q),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 9236, 6675, 16061, 18581, 357, 16, 48, 393, 362, 48, 393, 513, 48, 8]"
‚ö†Ô∏è SAST Risk (Low): Use of current date and time can lead to non-deterministic behavior in tests,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 1459, 3128, 290, 640, 460, 1085, 284, 1729, 12, 67, 2357, 49228, 4069, 287, 5254]",1.0,212,sast_risk,81,Use of current date and time can lead to non-deterministic behavior in tests,Low,196,"            return ""1Q""","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441, 366, 16, 48, 1]"
üß† ML Signal: Iterating over a range of years could indicate a pattern of historical data processing,"[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 257, 2837, 286, 812, 714, 7603, 257, 3912, 286, 6754, 1366, 7587]",0.5,228,ml_signal,85,Iterating over a range of years could indicate a pattern of historical data processing,,212,"            return ""3Q""","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441, 366, 18, 48, 1]"
‚úÖ Best Practice: Use string formatting for better readability,"[26486, 227, 6705, 19939, 25, 5765, 4731, 33313, 329, 1365, 1100, 1799]",0.5,228,best_practice,88,Use string formatting for better readability,,228,,[]
üß† ML Signal: Determining the current period based on the current month,"[8582, 100, 254, 10373, 26484, 25, 360, 13221, 278, 262, 1459, 2278, 1912, 319, 262, 1459, 1227]",0.5,236,ml_signal,90,Determining the current period based on the current month,,228,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚úÖ Best Practice: Use string formatting for better readability,"[26486, 227, 6705, 19939, 25, 5765, 4731, 33313, 329, 1365, 1100, 1799]",0.5,254,best_practice,91,Use string formatting for better readability,,236,        The ibovespa index is updated every four months.,"[220, 220, 220, 220, 220, 220, 220, 383, 24283, 5241, 8957, 6376, 318, 6153, 790, 1440, 1933, 13]"
üß† ML Signal: Logging usage pattern for monitoring or debugging,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 8748, 3912, 329, 9904, 393, 28769]",1.0,291,ml_signal,100,Logging usage pattern for monitoring or debugging,,254,"        for year in [item for item in range(init_year, current_year)]:  # pylint: disable=R1721","[220, 220, 220, 220, 220, 220, 220, 329, 614, 287, 685, 9186, 329, 2378, 287, 2837, 7, 15003, 62, 1941, 11, 1459, 62, 1941, 8, 5974, 220, 1303, 279, 2645, 600, 25, 15560, 28, 49, 1558, 2481]"
‚úÖ Best Practice: Use of lambda for concise function definition,"[26486, 227, 6705, 19939, 25, 5765, 286, 37456, 329, 35327, 2163, 6770]",1.0,329,best_practice,102,Use of lambda for concise function definition,,291,"                self.years_4_month_periods.append(str(year) + ""_"" + el)","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 19002, 62, 19, 62, 8424, 62, 41007, 82, 13, 33295, 7, 2536, 7, 1941, 8, 1343, 45434, 1, 1343, 1288, 8]"
‚úÖ Best Practice: Use of lambda for concise function definition,"[26486, 227, 6705, 19939, 25, 5765, 286, 37456, 329, 35327, 2163, 6770]",1.0,357,best_practice,109,Use of lambda for concise function definition,,329,"    def format_datetime(self, inst_df: pd.DataFrame) -> pd.DataFrame:","[220, 220, 220, 825, 5794, 62, 19608, 8079, 7, 944, 11, 916, 62, 7568, 25, 279, 67, 13, 6601, 19778, 8, 4613, 279, 67, 13, 6601, 19778, 25]"
‚úÖ Best Practice: Use of lambda for concise function definition,"[26486, 227, 6705, 19939, 25, 5765, 286, 37456, 329, 35327, 2163, 6770]",1.0,365,best_practice,112,Use of lambda for concise function definition,,357,        Parameters,"[220, 220, 220, 220, 220, 220, 220, 40117]"
‚úÖ Best Practice: Use descriptive variable names for better readability,"[26486, 227, 6705, 19939, 25, 5765, 35644, 7885, 3891, 329, 1365, 1100, 1799]",1.0,405,best_practice,124,Use descriptive variable names for better readability,,365,            inst_df[self.END_DATE_FIELD] = inst_df[self.END_DATE_FIELD].apply(,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 916, 62, 7568, 58, 944, 13, 10619, 62, 35, 6158, 62, 44603, 60, 796, 916, 62, 7568, 58, 944, 13, 10619, 62, 35, 6158, 62, 44603, 4083, 39014, 7]"
‚ö†Ô∏è SAST Risk (Medium): Potential KeyError if cell_split[1] is not in quarter_dict,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 32480, 7383, 12331, 611, 2685, 62, 35312, 58, 16, 60, 318, 407, 287, 3860, 62, 11600]",1.0,417,sast_risk,126,Potential KeyError if cell_split[1] is not in quarter_dict,Medium,405,            ),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1267]"
üß† ML Signal: Logging usage pattern for tracking execution flow,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 8748, 3912, 329, 9646, 9706, 5202]",0.5,437,ml_signal,155,Logging usage pattern for tracking execution flow,,417,        by quarter and year by year in order to generate a file that,"[220, 220, 220, 220, 220, 220, 220, 416, 3860, 290, 614, 416, 614, 287, 1502, 284, 7716, 257, 2393, 326]"
üß† ML Signal: Usage of tqdm for progress tracking,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 256, 80, 36020, 329, 4371, 9646]",1.0,454,ml_signal,159,Usage of tqdm for progress tracking,,437,        The Dataframe used as reference will provided the index,"[220, 220, 220, 220, 220, 220, 220, 383, 6060, 14535, 973, 355, 4941, 481, 2810, 262, 6376]"
‚ö†Ô∏è SAST Risk (Low): Potential CSV injection if input is not sanitized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 44189, 16954, 611, 5128, 318, 407, 5336, 36951]",1.0,466,sast_risk,162,Potential CSV injection if input is not sanitized,Low,454,            symbol,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 6194]"
‚ö†Ô∏è SAST Risk (Low): Potential CSV injection if input is not sanitized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 44189, 16954, 611, 5128, 318, 407, 5336, 36951]",1.0,478,sast_risk,165,Potential CSV injection if input is not sanitized,Low,466,            .,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 764]"
‚úÖ Best Practice: Use of pd.concat for combining DataFrames,"[26486, 227, 6705, 19939, 25, 5765, 286, 279, 67, 13, 1102, 9246, 329, 19771, 6060, 35439]",1.0,530,best_practice,190,Use of pd.concat for combining DataFrames,,478,"                    self.ibov_index_composition.format(self.years_4_month_periods[i]), on_bad_lines=""skip""","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 571, 709, 62, 9630, 62, 785, 9150, 13, 18982, 7, 944, 13, 19002, 62, 19, 62, 8424, 62, 41007, 82, 58, 72, 46570, 319, 62, 14774, 62, 6615, 2625, 48267, 1]"
‚úÖ Best Practice: Explicit type conversion for clarity,"[26486, 227, 6705, 19939, 25, 11884, 2099, 11315, 329, 16287]",1.0,550,best_practice,194,Explicit type conversion for clarity,,530,"                )[""symbol""]","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1267, 14692, 1837, 23650, 8973]"
üß† ML Signal: Logging errors for debugging and monitoring,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 8563, 329, 28769, 290, 9904]",0.5,570,ml_signal,194,Logging errors for debugging and monitoring,,550,"                )[""symbol""]","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1267, 14692, 1837, 23650, 8973]"
üß† ML Signal: Logging usage pattern,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 8748, 3912]",1.0,592,ml_signal,214,Logging usage pattern,,570,"                    + ""-""","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1343, 366, 21215]"
‚ö†Ô∏è SAST Risk (Low): Potential CSV injection if the CSV content is not sanitized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 44189, 16954, 611, 262, 44189, 2695, 318, 407, 5336, 36951]",1.0,608,sast_risk,216,Potential CSV injection if the CSV content is not sanitized,Low,592,                ),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1267]"
‚ö†Ô∏è SAST Risk (Low): Potential CSV injection if the CSV content is not sanitized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 44189, 16954, 611, 262, 44189, 2695, 318, 407, 5336, 36951]",1.0,663,sast_risk,219,Potential CSV injection if the CSV content is not sanitized,Low,608,"                    {""date"": len(list_add) * [add_date], ""type"": len(list_add) * [""add""], ""symbol"": list_add}","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 19779, 4475, 1298, 18896, 7, 4868, 62, 2860, 8, 1635, 685, 2860, 62, 4475, 4357, 366, 4906, 1298, 18896, 7, 4868, 62, 2860, 8, 1635, 14631, 2860, 33116, 366, 1837, 23650, 1298, 1351, 62, 2860, 92]"
‚úÖ Best Practice: Use of merge to combine DataFrames,"[26486, 227, 6705, 19939, 25, 5765, 286, 20121, 284, 12082, 6060, 35439]",1.0,676,best_practice,226,Use of merge to combine DataFrames,,663,            return df,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441, 47764]"
‚úÖ Best Practice: Use of map for transformation,"[26486, 227, 6705, 19939, 25, 5765, 286, 3975, 329, 13389]",1.0,688,best_practice,228,Use of map for transformation,,676,        except Exception as E:,"[220, 220, 220, 220, 220, 220, 220, 2845, 35528, 355, 412, 25]"
‚úÖ Best Practice: Explicit type conversion,"[26486, 227, 6705, 19939, 25, 11884, 2099, 11315]",0.5,696,best_practice,232,Explicit type conversion,,688,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
üß† ML Signal: Error logging pattern,"[8582, 100, 254, 10373, 26484, 25, 13047, 18931, 3912]",1.0,714,ml_signal,235,Error logging pattern,,696,        to get the latest index composition from B3 website using,"[220, 220, 220, 220, 220, 220, 220, 284, 651, 262, 3452, 6376, 11742, 422, 347, 18, 3052, 1262]"
‚úÖ Best Practice: Check if the column exists before accessing it to avoid KeyError.,"[26486, 227, 6705, 19939, 25, 6822, 611, 262, 5721, 7160, 878, 22534, 340, 284, 3368, 7383, 12331, 13]",1.0,722,best_practice,232,Check if the column exists before accessing it to avoid KeyError.,,714,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚úÖ Best Practice: Use .copy() to avoid modifying the original DataFrame.,"[26486, 227, 6705, 19939, 25, 5765, 764, 30073, 3419, 284, 3368, 30620, 262, 2656, 6060, 19778, 13]",1.0,739,best_practice,234,Use .copy() to avoid modifying the original DataFrame.,,722,        The repo indicated on README has implemented a script,"[220, 220, 220, 220, 220, 220, 220, 383, 29924, 8203, 319, 20832, 11682, 468, 9177, 257, 4226]"
üß† ML Signal: Usage of fire.Fire indicates a command-line interface pattern.,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 2046, 13, 13543, 9217, 257, 3141, 12, 1370, 7071, 3912, 13]",1.0,757,ml_signal,235,Usage of fire.Fire indicates a command-line interface pattern.,,739,        to get the latest index composition from B3 website using,"[220, 220, 220, 220, 220, 220, 220, 284, 651, 262, 3452, 6376, 11742, 422, 347, 18, 3052, 1262]"
‚úÖ Best Practice: Use of partial to pre-fill function arguments for cleaner code.,"[26486, 227, 6705, 19939, 25, 5765, 286, 13027, 284, 662, 12, 20797, 2163, 7159, 329, 21723, 2438, 13]",0.5,775,best_practice,235,Use of partial to pre-fill function arguments for cleaner code.,,757,        to get the latest index composition from B3 website using,"[220, 220, 220, 220, 220, 220, 220, 284, 651, 262, 3452, 6376, 11742, 422, 347, 18, 3052, 1262]"
