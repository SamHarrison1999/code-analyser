annotation,annotation_tokens,confidence,end_token,label,line,reason,start_token,text,tokens
✅ Best Practice: Group related imports together for better readability.,"[26486, 227, 6705, 19939, 25, 4912, 3519, 17944, 1978, 329, 1365, 1100, 1799, 13]",1.0,12,best_practice,3,Group related imports together for better readability.,0,from sqlalchemy.orm import declarative_base,"[6738, 44161, 282, 26599, 13, 579, 1330, 2377, 283, 876, 62, 8692]"
✅ Best Practice: Use a consistent naming convention for base classes.,"[26486, 227, 6705, 19939, 25, 5765, 257, 6414, 19264, 9831, 329, 2779, 6097, 13]",1.0,24,best_practice,6,Use a consistent naming convention for base classes.,12,from zvt.contract.register import register_schema,"[6738, 1976, 36540, 13, 28484, 13, 30238, 1330, 7881, 62, 15952, 2611]"
🧠 ML Signal: Use of SQLAlchemy ORM for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 10375]",0.5,34,ml_signal,8,Use of SQLAlchemy ORM for database interaction,24,EmotionBase = declarative_base(),"[10161, 9650, 14881, 796, 2377, 283, 876, 62, 8692, 3419]"
🧠 ML Signal: Use of SQLAlchemy ORM for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 10375]",0.5,34,ml_signal,10,Use of SQLAlchemy ORM for database interaction,34,,[]
🧠 ML Signal: Use of SQLAlchemy ORM for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 10375]",0.5,50,ml_signal,12,Use of SQLAlchemy ORM for database interaction,34,"    __tablename__ = ""limit_up_info""","[220, 220, 220, 11593, 8658, 11925, 480, 834, 796, 366, 32374, 62, 929, 62, 10951, 1]"
🧠 ML Signal: Use of SQLAlchemy ORM for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 10375]",0.5,63,ml_signal,14,Use of SQLAlchemy ORM for database interaction,50,    code = Column(String(length=32)),"[220, 220, 220, 2438, 796, 29201, 7, 10100, 7, 13664, 28, 2624, 4008]"
🧠 ML Signal: Use of SQLAlchemy ORM for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 10375]",0.5,78,ml_signal,16,Use of SQLAlchemy ORM for database interaction,63,    #: 是否新股,"[220, 220, 220, 1303, 25, 10545, 246, 107, 28938, 99, 23877, 108, 164, 224, 94]"
🧠 ML Signal: Use of SQLAlchemy ORM for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 10375]",0.5,114,ml_signal,18,Use of SQLAlchemy ORM for database interaction,78,    #: 是否回封，是就是打开过，否相反,"[220, 220, 220, 1303, 25, 10545, 246, 107, 28938, 99, 32368, 252, 22887, 223, 171, 120, 234, 42468, 22887, 109, 42468, 33699, 241, 28156, 222, 32573, 229, 171, 120, 234, 28938, 99, 33566, 116, 20998, 235]"
🧠 ML Signal: Use of SQLAlchemy ORM for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 10375]",0.5,152,ml_signal,20,Use of SQLAlchemy ORM for database interaction,114,"    #: 涨停打开次数,0代表封住就没开板","[220, 220, 220, 1303, 25, 10545, 114, 101, 161, 223, 250, 33699, 241, 28156, 222, 162, 105, 94, 46763, 108, 11, 15, 47987, 26193, 101, 22887, 223, 19526, 237, 22887, 109, 162, 110, 94, 28156, 222, 30266, 123]"
🧠 ML Signal: Use of SQLAlchemy ORM for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 10375]",0.5,171,ml_signal,22,Use of SQLAlchemy ORM for database interaction,152,    #: 首次封板时间,"[220, 220, 220, 1303, 25, 16268, 99, 244, 162, 105, 94, 22887, 223, 30266, 123, 33768, 114, 29785, 112]"
🧠 ML Signal: Use of SQLAlchemy ORM for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 10375]",0.5,188,ml_signal,24,Use of SQLAlchemy ORM for database interaction,171,    #: 最后封板时间,"[220, 220, 220, 1303, 25, 42164, 222, 28938, 236, 22887, 223, 30266, 123, 33768, 114, 29785, 112]"
🧠 ML Signal: Use of SQLAlchemy ORM for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 10375]",0.5,221,ml_signal,26,Use of SQLAlchemy ORM for database interaction,188,    #: 涨停类型:换手板，一字板,"[220, 220, 220, 1303, 25, 10545, 114, 101, 161, 223, 250, 163, 109, 119, 161, 252, 233, 25, 162, 235, 95, 33699, 233, 30266, 123, 171, 120, 234, 31660, 27764, 245, 30266, 123]"
🧠 ML Signal: Use of SQLAlchemy ORM for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 10375]",0.5,236,ml_signal,28,Use of SQLAlchemy ORM for database interaction,221,    #: 封单金额,"[220, 220, 220, 1303, 25, 10263, 108, 223, 39355, 243, 34932, 239, 165, 95, 251]"
🧠 ML Signal: Use of SQLAlchemy ORM for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 10375]",0.5,259,ml_signal,30,Use of SQLAlchemy ORM for database interaction,236,    #: 最近一年封板成功率,"[220, 220, 220, 1303, 25, 42164, 222, 32573, 239, 31660, 33176, 112, 22887, 223, 30266, 123, 22755, 238, 27950, 253, 163, 236, 229]"
🧠 ML Signal: Use of SQLAlchemy ORM for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 10375]",0.5,274,ml_signal,32,Use of SQLAlchemy ORM for database interaction,259,    #: 流通市值,"[220, 220, 220, 1303, 25, 10545, 113, 223, 34460, 248, 30585, 224, 161, 222, 120]"
🧠 ML Signal: Use of SQLAlchemy ORM for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 10375]",0.5,284,ml_signal,34,Use of SQLAlchemy ORM for database interaction,274,    #: 涨幅,"[220, 220, 220, 1303, 25, 10545, 114, 101, 33176, 227]"
🧠 ML Signal: Use of SQLAlchemy ORM for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 10375]",0.5,297,ml_signal,36,Use of SQLAlchemy ORM for database interaction,284,    #: 换手率,"[220, 220, 220, 1303, 25, 10545, 235, 95, 33699, 233, 163, 236, 229]"
🧠 ML Signal: Use of SQLAlchemy ORM for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 10375]",0.5,312,ml_signal,38,Use of SQLAlchemy ORM for database interaction,297,    #: 涨停原因,"[220, 220, 220, 1303, 25, 10545, 114, 101, 161, 223, 250, 43889, 253, 32368, 254]"
✅ Best Practice: Use of __tablename__ for ORM table naming,"[26486, 227, 6705, 19939, 25, 5765, 286, 11593, 8658, 11925, 480, 834, 329, 6375, 44, 3084, 19264]",0.5,328,best_practice,25,Use of __tablename__ for ORM table naming,312,    last_limit_up_time = Column(DateTime),"[220, 220, 220, 938, 62, 32374, 62, 929, 62, 2435, 796, 29201, 7, 10430, 7575, 8]"
🧠 ML Signal: Use of Column with specific data types for ORM mapping,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 29201, 351, 2176, 1366, 3858, 329, 6375, 44, 16855]",0.5,341,ml_signal,27,Use of Column with specific data types for ORM mapping,328,    limit_up_type = Column(String),"[220, 220, 220, 4179, 62, 929, 62, 4906, 796, 29201, 7, 10100, 8]"
🧠 ML Signal: Use of Column with specific data types for ORM mapping,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 29201, 351, 2176, 1366, 3858, 329, 6375, 44, 16855]",0.5,352,ml_signal,29,Use of Column with specific data types for ORM mapping,341,    order_amount = Column(String),"[220, 220, 220, 1502, 62, 17287, 796, 29201, 7, 10100, 8]"
🧠 ML Signal: Use of Boolean type for binary attributes,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 41146, 2099, 329, 13934, 12608]",0.5,363,ml_signal,31,Use of Boolean type for binary attributes,352,    success_rate = Column(Float),"[220, 220, 220, 1943, 62, 4873, 796, 29201, 7, 43879, 8]"
🧠 ML Signal: Use of Boolean type for binary attributes,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 41146, 2099, 329, 13934, 12608]",0.5,374,ml_signal,33,Use of Boolean type for binary attributes,363,    currency_value = Column(Float),"[220, 220, 220, 7395, 62, 8367, 796, 29201, 7, 43879, 8]"
🧠 ML Signal: Use of Float type for numerical attributes,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 48436, 2099, 329, 29052, 12608]",0.5,386,ml_signal,35,Use of Float type for numerical attributes,374,    change_pct = Column(Float),"[220, 220, 220, 1487, 62, 79, 310, 796, 29201, 7, 43879, 8]"
🧠 ML Signal: Use of Float type for numerical attributes,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 48436, 2099, 329, 29052, 12608]",0.5,397,ml_signal,37,Use of Float type for numerical attributes,386,    turnover_rate = Column(Float),"[220, 220, 220, 25079, 62, 4873, 796, 29201, 7, 43879, 8]"
🧠 ML Signal: Use of Float type for numerical attributes,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 48436, 2099, 329, 29052, 12608]",0.5,406,ml_signal,39,Use of Float type for numerical attributes,397,    reason = Column(String),"[220, 220, 220, 1738, 796, 29201, 7, 10100, 8]"
🧠 ML Signal: Usage of SQLAlchemy ORM for database modeling,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 21128]",0.5,418,ml_signal,35,Usage of SQLAlchemy ORM for database modeling,406,    change_pct = Column(Float),"[220, 220, 220, 1487, 62, 79, 310, 796, 29201, 7, 43879, 8]"
🧠 ML Signal: Usage of SQLAlchemy ORM for database modeling,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 21128]",0.5,429,ml_signal,37,Usage of SQLAlchemy ORM for database modeling,418,    turnover_rate = Column(Float),"[220, 220, 220, 25079, 62, 4873, 796, 29201, 7, 43879, 8]"
🧠 ML Signal: Usage of SQLAlchemy ORM for database modeling,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 21128]",0.5,438,ml_signal,39,Usage of SQLAlchemy ORM for database modeling,429,    reason = Column(String),"[220, 220, 220, 1738, 796, 29201, 7, 10100, 8]"
🧠 ML Signal: Usage of SQLAlchemy ORM for database modeling,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 21128]",0.5,449,ml_signal,41,Usage of SQLAlchemy ORM for database modeling,438,    high_days = Column(String),"[220, 220, 220, 1029, 62, 12545, 796, 29201, 7, 10100, 8]"
🧠 ML Signal: Usage of SQLAlchemy ORM for database modeling,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 21128]",0.5,462,ml_signal,43,Usage of SQLAlchemy ORM for database modeling,449,    high_days_count = Column(Integer),"[220, 220, 220, 1029, 62, 12545, 62, 9127, 796, 29201, 7, 46541, 8]"
🧠 ML Signal: Usage of SQLAlchemy ORM for database modeling,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 21128]",0.5,462,ml_signal,44,Usage of SQLAlchemy ORM for database modeling,462,,[]
🧠 ML Signal: Usage of SQLAlchemy ORM for database modeling,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 21128]",0.5,462,ml_signal,44,Usage of SQLAlchemy ORM for database modeling,462,,[]
🧠 ML Signal: Usage of SQLAlchemy ORM for database modeling,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 21128]",0.5,462,ml_signal,44,Usage of SQLAlchemy ORM for database modeling,462,,[]
🧠 ML Signal: Registration of schema with specific providers and database name,"[8582, 100, 254, 10373, 26484, 25, 24610, 286, 32815, 351, 2176, 9549, 290, 6831, 1438]",0.5,462,ml_signal,44,Registration of schema with specific providers and database name,462,,[]
✅ Best Practice: Use of __all__ to define public API of the module,"[26486, 227, 6705, 19939, 25, 5765, 286, 11593, 439, 834, 284, 8160, 1171, 7824, 286, 262, 8265]",1.0,462,best_practice,44,Use of __all__ to define public API of the module,462,,[]
