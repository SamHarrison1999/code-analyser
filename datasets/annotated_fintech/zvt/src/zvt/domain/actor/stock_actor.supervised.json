[
  {
    "line": 3,
    "text": "from sqlalchemy.orm import declarative_base",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 0.5,
    "tokens": [
      6738,
      44161,
      282,
      26599,
      13,
      579,
      1330,
      2377,
      283,
      876,
      62,
      8692
    ],
    "start_token": 0,
    "end_token": 12,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 6,
    "text": "from zvt.contract.schema import TradableMeetActor",
    "annotation": "\u2705 Best Practice: Using declarative_base() to create a base class for declarative class definitions is a standard practice in SQLAlchemy.",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      28484,
      13,
      15952,
      2611,
      1330,
      11974,
      29318,
      40277
    ],
    "start_token": 12,
    "end_token": 24,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      2377,
      283,
      876,
      62,
      8692,
      3419,
      284,
      2251,
      257,
      2779,
      1398,
      329,
      2377,
      283,
      876,
      1398,
      17336,
      318,
      257,
      3210,
      3357,
      287,
      16363,
      2348,
      26599,
      13
    ],
    "label": "best_practice",
    "reason": "Using declarative_base() to create a base class for declarative class definitions is a standard practice in SQLAlchemy."
  },
  {
    "line": 7,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of class variable for table name ensures consistency and easy maintenance",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 24,
    "end_token": 24,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      1398,
      7885,
      329,
      3084,
      1438,
      19047,
      15794,
      290,
      2562,
      9262
    ],
    "label": "best_practice",
    "reason": "Use of class variable for table name ensures consistency and easy maintenance"
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of specific column types improves readability and enforces data integrity",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 24,
    "end_token": 24,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2176,
      5721,
      3858,
      19575,
      1100,
      1799,
      290,
      551,
      27087,
      1366,
      11540
    ],
    "label": "best_practice",
    "reason": "Use of specific column types improves readability and enforces data integrity"
  },
  {
    "line": 11,
    "text": "class StockTopTenFreeHolder(StockActorBase, TradableMeetActor):",
    "annotation": "\u2705 Best Practice: Use of DateTime for report_date ensures proper handling of date and time data",
    "confidence": 0.5,
    "tokens": [
      4871,
      10500,
      9126,
      24893,
      11146,
      39,
      19892,
      7,
      26207,
      40277,
      14881,
      11,
      11974,
      29318,
      40277,
      2599
    ],
    "start_token": 24,
    "end_token": 40,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      7536,
      7575,
      329,
      989,
      62,
      4475,
      19047,
      1774,
      9041,
      286,
      3128,
      290,
      640,
      1366
    ],
    "label": "best_practice",
    "reason": "Use of DateTime for report_date ensures proper handling of date and time data"
  },
  {
    "line": 13,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of Float for holding_numbers allows for precise representation of numerical data",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 40,
    "end_token": 40,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      48436,
      329,
      4769,
      62,
      77,
      17024,
      3578,
      329,
      7141,
      10552,
      286,
      29052,
      1366
    ],
    "label": "best_practice",
    "reason": "Use of Float for holding_numbers allows for precise representation of numerical data"
  },
  {
    "line": 15,
    "text": "    report_date = Column(DateTime)",
    "annotation": "\u2705 Best Practice: Use of Float for holding_ratio allows for precise representation of numerical data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      989,
      62,
      4475,
      796,
      29201,
      7,
      10430,
      7575,
      8
    ],
    "start_token": 40,
    "end_token": 52,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      48436,
      329,
      4769,
      62,
      10366,
      952,
      3578,
      329,
      7141,
      10552,
      286,
      29052,
      1366
    ],
    "label": "best_practice",
    "reason": "Use of Float for holding_ratio allows for precise representation of numerical data"
  },
  {
    "line": 17,
    "text": "    #: \u6301\u80a1\u6570",
    "annotation": "\u2705 Best Practice: Use of Float for holding_values allows for precise representation of numerical data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10545,
      234,
      223,
      164,
      224,
      94,
      46763,
      108
    ],
    "start_token": 52,
    "end_token": 65,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      48436,
      329,
      4769,
      62,
      27160,
      3578,
      329,
      7141,
      10552,
      286,
      29052,
      1366
    ],
    "label": "best_practice",
    "reason": "Use of Float for holding_values allows for precise representation of numerical data"
  },
  {
    "line": 14,
    "text": "    report_period = Column(String(length=32))",
    "annotation": "\u2705 Best Practice: Define a table name for ORM mapping",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      989,
      62,
      41007,
      796,
      29201,
      7,
      10100,
      7,
      13664,
      28,
      2624,
      4008
    ],
    "start_token": 65,
    "end_token": 80,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      500,
      257,
      3084,
      1438,
      329,
      6375,
      44,
      16855
    ],
    "label": "best_practice",
    "reason": "Define a table name for ORM mapping"
  },
  {
    "line": 16,
    "text": "",
    "annotation": "\u2705 Best Practice: Use descriptive column names for clarity",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 80,
    "end_token": 80,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      35644,
      5721,
      3891,
      329,
      16287
    ],
    "label": "best_practice",
    "reason": "Use descriptive column names for clarity"
  },
  {
    "line": 18,
    "text": "    holding_numbers = Column(Float)",
    "annotation": "\u2705 Best Practice: Use DateTime for date-related fields for consistency",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      4769,
      62,
      77,
      17024,
      796,
      29201,
      7,
      43879,
      8
    ],
    "start_token": 80,
    "end_token": 92,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      7536,
      7575,
      329,
      3128,
      12,
      5363,
      7032,
      329,
      15794
    ],
    "label": "best_practice",
    "reason": "Use DateTime for date-related fields for consistency"
  },
  {
    "line": 20,
    "text": "    holding_ratio = Column(Float)",
    "annotation": "\u2705 Best Practice: Use Float for numerical fields that may have decimal values",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      4769,
      62,
      10366,
      952,
      796,
      29201,
      7,
      43879,
      8
    ],
    "start_token": 92,
    "end_token": 104,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      48436,
      329,
      29052,
      7032,
      326,
      743,
      423,
      32465,
      3815
    ],
    "label": "best_practice",
    "reason": "Use Float for numerical fields that may have decimal values"
  },
  {
    "line": 22,
    "text": "    holding_values = Column(Float)",
    "annotation": "\u2705 Best Practice: Use Float for numerical fields that may have decimal values",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      4769,
      62,
      27160,
      796,
      29201,
      7,
      43879,
      8
    ],
    "start_token": 104,
    "end_token": 115,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      48436,
      329,
      29052,
      7032,
      326,
      743,
      423,
      32465,
      3815
    ],
    "label": "best_practice",
    "reason": "Use Float for numerical fields that may have decimal values"
  },
  {
    "line": 24,
    "text": "",
    "annotation": "\u2705 Best Practice: Use Float for numerical fields that may have decimal values",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 115,
    "end_token": 115,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      48436,
      329,
      29052,
      7032,
      326,
      743,
      423,
      32465,
      3815
    ],
    "label": "best_practice",
    "reason": "Use Float for numerical fields that may have decimal values"
  },
  {
    "line": 21,
    "text": "    #: \u6301\u80a1\u5e02\u503c",
    "annotation": "\ud83e\udde0 ML Signal: Inheritance from multiple base classes indicates a design pattern that could be learned.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10545,
      234,
      223,
      164,
      224,
      94,
      30585,
      224,
      161,
      222,
      120
    ],
    "start_token": 115,
    "end_token": 131,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47025,
      42942,
      422,
      3294,
      2779,
      6097,
      9217,
      257,
      1486,
      3912,
      326,
      714,
      307,
      4499,
      13
    ],
    "label": "ml_signal",
    "reason": "Inheritance from multiple base classes indicates a design pattern that could be learned."
  },
  {
    "line": 23,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of SQLAlchemy ORM for database interaction is a common pattern.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 131,
    "end_token": 131,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      10375,
      318,
      257,
      2219,
      3912,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of SQLAlchemy ORM for database interaction is a common pattern."
  },
  {
    "line": 25,
    "text": "class StockTopTenHolder(StockActorBase, TradableMeetActor):",
    "annotation": "\u2705 Best Practice: Specifying length for String type improves database schema design.",
    "confidence": 0.5,
    "tokens": [
      4871,
      10500,
      9126,
      24893,
      39,
      19892,
      7,
      26207,
      40277,
      14881,
      11,
      11974,
      29318,
      40277,
      2599
    ],
    "start_token": 131,
    "end_token": 146,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      18291,
      4035,
      4129,
      329,
      10903,
      2099,
      19575,
      6831,
      32815,
      1486,
      13
    ],
    "label": "best_practice",
    "reason": "Specifying length for String type improves database schema design."
  },
  {
    "line": 27,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Ensure that DateTime is timezone-aware to prevent timezone-related issues.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 146,
    "end_token": 146,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      48987,
      326,
      7536,
      7575,
      318,
      640,
      11340,
      12,
      9685,
      284,
      2948,
      640,
      11340,
      12,
      5363,
      2428,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Ensure that DateTime is timezone-aware to prevent timezone-related issues."
  },
  {
    "line": 29,
    "text": "    report_date = Column(DateTime)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Floating point numbers can introduce precision issues; consider using Decimal for financial data.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      989,
      62,
      4475,
      796,
      29201,
      7,
      10430,
      7575,
      8
    ],
    "start_token": 146,
    "end_token": 158,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      49768,
      966,
      3146,
      460,
      10400,
      15440,
      2428,
      26,
      2074,
      1262,
      4280,
      4402,
      329,
      3176,
      1366,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Floating point numbers can introduce precision issues; consider using Decimal for financial data."
  },
  {
    "line": 31,
    "text": "    #: \u6301\u80a1\u6570",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Floating point numbers can introduce precision issues; consider using Decimal for financial data.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10545,
      234,
      223,
      164,
      224,
      94,
      46763,
      108
    ],
    "start_token": 158,
    "end_token": 171,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      49768,
      966,
      3146,
      460,
      10400,
      15440,
      2428,
      26,
      2074,
      1262,
      4280,
      4402,
      329,
      3176,
      1366,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Floating point numbers can introduce precision issues; consider using Decimal for financial data."
  },
  {
    "line": 33,
    "text": "    #: \u6301\u80a1\u6bd4\u4f8b",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Floating point numbers can introduce precision issues; consider using Decimal for financial data.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10545,
      234,
      223,
      164,
      224,
      94,
      162,
      107,
      242,
      160,
      122,
      233
    ],
    "start_token": 171,
    "end_token": 188,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      49768,
      966,
      3146,
      460,
      10400,
      15440,
      2428,
      26,
      2074,
      1262,
      4280,
      4402,
      329,
      3176,
      1366,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Floating point numbers can introduce precision issues; consider using Decimal for financial data."
  },
  {
    "line": 29,
    "text": "    report_date = Column(DateTime)",
    "annotation": "\u2705 Best Practice: Define column types with explicit lengths for better database schema management",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      989,
      62,
      4475,
      796,
      29201,
      7,
      10430,
      7575,
      8
    ],
    "start_token": 188,
    "end_token": 200,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      500,
      5721,
      3858,
      351,
      7952,
      20428,
      329,
      1365,
      6831,
      32815,
      4542
    ],
    "label": "best_practice",
    "reason": "Define column types with explicit lengths for better database schema management"
  },
  {
    "line": 31,
    "text": "    #: \u6301\u80a1\u6570",
    "annotation": "\u2705 Best Practice: Define column types with explicit lengths for better database schema management",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10545,
      234,
      223,
      164,
      224,
      94,
      46763,
      108
    ],
    "start_token": 200,
    "end_token": 213,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      500,
      5721,
      3858,
      351,
      7952,
      20428,
      329,
      1365,
      6831,
      32815,
      4542
    ],
    "label": "best_practice",
    "reason": "Define column types with explicit lengths for better database schema management"
  },
  {
    "line": 33,
    "text": "    #: \u6301\u80a1\u6bd4\u4f8b",
    "annotation": "\u2705 Best Practice: Define column types with explicit lengths for better database schema management",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10545,
      234,
      223,
      164,
      224,
      94,
      162,
      107,
      242,
      160,
      122,
      233
    ],
    "start_token": 213,
    "end_token": 230,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      500,
      5721,
      3858,
      351,
      7952,
      20428,
      329,
      1365,
      6831,
      32815,
      4542
    ],
    "label": "best_practice",
    "reason": "Define column types with explicit lengths for better database schema management"
  },
  {
    "line": 41,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of register_schema function indicates a pattern for schema registration",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 230,
    "end_token": 230,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      7881,
      62,
      15952,
      2611,
      2163,
      9217,
      257,
      3912,
      329,
      32815,
      9352
    ],
    "label": "ml_signal",
    "reason": "Usage of register_schema function indicates a pattern for schema registration"
  },
  {
    "line": 41,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of __all__ to define public API of the module",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 230,
    "end_token": 230,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265
    ],
    "label": "ml_signal",
    "reason": "Use of __all__ to define public API of the module"
  }
]