annotation,annotation_tokens,confidence,end_token,label,line,reason,start_token,text,tokens
"ðŸ§  ML Signal: Usage of SQLAlchemy for ORM, indicating a pattern of database interaction","[8582, 100, 254, 10373, 26484, 25, 29566, 286, 16363, 2348, 26599, 329, 6375, 44, 11, 12739, 257, 3912, 286, 6831, 10375]",0.5,0,ml_signal,2,"Usage of SQLAlchemy for ORM, indicating a pattern of database interaction",0,,[]
"ðŸ§  ML Signal: Importing a specific class from a module, indicating a pattern of modular code usage","[8582, 100, 254, 10373, 26484, 25, 17267, 278, 257, 2176, 1398, 422, 257, 8265, 11, 12739, 257, 3912, 286, 26507, 2438, 8748]",0.5,0,ml_signal,4,"Importing a specific class from a module, indicating a pattern of modular code usage",0,,[]
"ðŸ§  ML Signal: Importing specific functions for registration, indicating a pattern of dynamic schema/entity registration","[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 5499, 329, 9352, 11, 12739, 257, 3912, 286, 8925, 32815, 14, 26858, 9352]",0.5,16,ml_signal,6,"Importing specific functions for registration, indicating a pattern of dynamic schema/entity registration",0,"from zvt.contract.register import register_schema, register_entity","[6738, 1976, 36540, 13, 28484, 13, 30238, 1330, 7881, 62, 15952, 2611, 11, 7881, 62, 26858]"
"ðŸ§  ML Signal: Creation of a base class for ORM models, indicating a pattern of database schema definition","[8582, 100, 254, 10373, 26484, 25, 21582, 286, 257, 2779, 1398, 329, 6375, 44, 4981, 11, 12739, 257, 3912, 286, 6831, 32815, 6770]",0.5,26,ml_signal,8,"Creation of a base class for ORM models, indicating a pattern of database schema definition",16,CBondBase = declarative_base(),"[23199, 623, 14881, 796, 2377, 283, 876, 62, 8692, 3419]"
âœ… Best Practice: Naming convention for base class follows common Python and SQLAlchemy practices,"[26486, 227, 6705, 19939, 25, 399, 3723, 9831, 329, 2779, 1398, 5679, 2219, 11361, 290, 16363, 2348, 26599, 6593]",0.5,26,best_practice,9,Naming convention for base class follows common Python and SQLAlchemy practices,26,,[]
"ðŸ§  ML Signal: Usage of a decorator for entity registration, indicating a pattern of metadata or behavior extension","[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 11705, 1352, 329, 9312, 9352, 11, 12739, 257, 3912, 286, 20150, 393, 4069, 7552]",0.5,26,ml_signal,9,"Usage of a decorator for entity registration, indicating a pattern of metadata or behavior extension",26,,[]
âœ… Best Practice: Use of class inheritance to promote code reuse and organization,"[26486, 227, 6705, 19939, 25, 5765, 286, 1398, 24155, 284, 7719, 2438, 32349, 290, 4009]",0.5,26,best_practice,7,Use of class inheritance to promote code reuse and organization,26,,[]
ðŸ§  ML Signal: Use of class-level attributes to define database table names,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1398, 12, 5715, 12608, 284, 8160, 6831, 3084, 3891]",0.5,26,ml_signal,9,Use of class-level attributes to define database table names,26,,[]
ðŸ§  ML Signal: Registration of schema with specific providers and database name,"[8582, 100, 254, 10373, 26484, 25, 24610, 286, 32815, 351, 2176, 9549, 290, 6831, 1438]",0.5,26,ml_signal,9,Registration of schema with specific providers and database name,26,,[]
âœ… Best Practice: Use of __all__ to define public interface of the module,"[26486, 227, 6705, 19939, 25, 5765, 286, 11593, 439, 834, 284, 8160, 1171, 7071, 286, 262, 8265]",0.5,26,best_practice,9,Use of __all__ to define public interface of the module,26,,[]
