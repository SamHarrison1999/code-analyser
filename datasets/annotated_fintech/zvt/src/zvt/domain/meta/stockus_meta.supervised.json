[
  {
    "line": 2,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Importing a base class for ORM models, indicating use of SQLAlchemy for database interactions",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 0,
    "end_token": 0,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      257,
      2779,
      1398,
      329,
      6375,
      44,
      4981,
      11,
      12739,
      779,
      286,
      16363,
      2348,
      26599,
      329,
      6831,
      12213
    ],
    "label": "ml_signal",
    "reason": "Importing a base class for ORM models, indicating use of SQLAlchemy for database interactions"
  },
  {
    "line": 4,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Importing a specific class from a module, indicating a dependency on the zvt library",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 0,
    "end_token": 0,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      257,
      2176,
      1398,
      422,
      257,
      8265,
      11,
      12739,
      257,
      20203,
      319,
      262,
      1976,
      36540,
      5888
    ],
    "label": "ml_signal",
    "reason": "Importing a specific class from a module, indicating a dependency on the zvt library"
  },
  {
    "line": 6,
    "text": "from zvt.contract.register import register_schema, register_entity",
    "annotation": "\ud83e\udde0 ML Signal: Importing functions for registration, indicating dynamic schema/entity registration",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      28484,
      13,
      30238,
      1330,
      7881,
      62,
      15952,
      2611,
      11,
      7881,
      62,
      26858
    ],
    "start_token": 0,
    "end_token": 16,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      5499,
      329,
      9352,
      11,
      12739,
      8925,
      32815,
      14,
      26858,
      9352
    ],
    "label": "ml_signal",
    "reason": "Importing functions for registration, indicating dynamic schema/entity registration"
  },
  {
    "line": 8,
    "text": "StockusMetaBase = declarative_base()",
    "annotation": "\ud83e\udde0 ML Signal: Creating a base class for ORM models, indicating a pattern of using SQLAlchemy for ORM",
    "confidence": 0.5,
    "tokens": [
      26207,
      385,
      48526,
      14881,
      796,
      2377,
      283,
      876,
      62,
      8692,
      3419
    ],
    "start_token": 16,
    "end_token": 27,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      30481,
      257,
      2779,
      1398,
      329,
      6375,
      44,
      4981,
      11,
      12739,
      257,
      3912,
      286,
      1262,
      16363,
      2348,
      26599,
      329,
      6375,
      44
    ],
    "label": "ml_signal",
    "reason": "Creating a base class for ORM models, indicating a pattern of using SQLAlchemy for ORM"
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\u2705 Best Practice: Naming convention for base classes in SQLAlchemy is clear and descriptive",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 27,
    "end_token": 27,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      399,
      3723,
      9831,
      329,
      2779,
      6097,
      287,
      16363,
      2348,
      26599,
      318,
      1598,
      290,
      35644
    ],
    "label": "best_practice",
    "reason": "Naming convention for base classes in SQLAlchemy is clear and descriptive"
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Using a decorator for entity registration, indicating a pattern of dynamic entity management",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 27,
    "end_token": 27,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8554,
      257,
      11705,
      1352,
      329,
      9312,
      9352,
      11,
      12739,
      257,
      3912,
      286,
      8925,
      9312,
      4542
    ],
    "label": "ml_signal",
    "reason": "Using a decorator for entity registration, indicating a pattern of dynamic entity management"
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of decorators for registration improves code readability and organization",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 27,
    "end_token": 27,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11705,
      2024,
      329,
      9352,
      19575,
      2438,
      1100,
      1799,
      290,
      4009
    ],
    "label": "best_practice",
    "reason": "Use of decorators for registration improves code readability and organization"
  },
  {
    "line": 7,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Inheritance from multiple classes indicates a design pattern that could be learned.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 27,
    "end_token": 27,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47025,
      42942,
      422,
      3294,
      6097,
      9217,
      257,
      1486,
      3912,
      326,
      714,
      307,
      4499,
      13
    ],
    "label": "ml_signal",
    "reason": "Inheritance from multiple classes indicates a design pattern that could be learned."
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of class attribute for table name suggests ORM usage pattern.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 27,
    "end_token": 27,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1398,
      11688,
      329,
      3084,
      1438,
      5644,
      6375,
      44,
      8748,
      3912,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of class attribute for table name suggests ORM usage pattern."
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function call with specific parameters indicates a pattern for schema registration.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 27,
    "end_token": 27,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      351,
      2176,
      10007,
      9217,
      257,
      3912,
      329,
      32815,
      9352,
      13
    ],
    "label": "ml_signal",
    "reason": "Function call with specific parameters indicates a pattern for schema registration."
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\u2705 Best Practice: Consider adding a docstring to describe the purpose and usage of the register_schema call.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 27,
    "end_token": 27,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      4375,
      257,
      2205,
      8841,
      284,
      6901,
      262,
      4007,
      290,
      8748,
      286,
      262,
      7881,
      62,
      15952,
      2611,
      869,
      13
    ],
    "label": "best_practice",
    "reason": "Consider adding a docstring to describe the purpose and usage of the register_schema call."
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of __all__ to define public API of the module.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 27,
    "end_token": 27,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265,
      13
    ],
    "label": "best_practice",
    "reason": "Use of __all__ to define public API of the module."
  }
]