[
  {
    "line": 3,
    "text": "from sqlalchemy import Column, String",
    "annotation": "\ud83e\udde0 ML Signal: Usage of custom imports from a specific package",
    "confidence": 0.5,
    "tokens": [
      6738,
      44161,
      282,
      26599,
      1330,
      29201,
      11,
      10903
    ],
    "start_token": 0,
    "end_token": 8,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2183,
      17944,
      422,
      257,
      2176,
      5301
    ],
    "label": "ml_signal",
    "reason": "Usage of custom imports from a specific package"
  },
  {
    "line": 5,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of custom imports from a specific package",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 8,
    "end_token": 8,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2183,
      17944,
      422,
      257,
      2176,
      5301
    ],
    "label": "ml_signal",
    "reason": "Usage of custom imports from a specific package"
  },
  {
    "line": 6,
    "text": "from zvt.contract import Portfolio, PortfolioStockHistory",
    "annotation": "\ud83e\udde0 ML Signal: Usage of custom imports from a specific package",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      28484,
      1330,
      4347,
      13652,
      11,
      4347,
      13652,
      26207,
      18122
    ],
    "start_token": 8,
    "end_token": 21,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2183,
      17944,
      422,
      257,
      2176,
      5301
    ],
    "label": "ml_signal",
    "reason": "Usage of custom imports from a specific package"
  },
  {
    "line": 10,
    "text": "EtfMetaBase = declarative_base()",
    "annotation": "\u2705 Best Practice: Naming convention for base class",
    "confidence": 0.5,
    "tokens": [
      36,
      27110,
      48526,
      14881,
      796,
      2377,
      283,
      876,
      62,
      8692,
      3419
    ],
    "start_token": 21,
    "end_token": 32,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      399,
      3723,
      9831,
      329,
      2779,
      1398
    ],
    "label": "best_practice",
    "reason": "Naming convention for base class"
  },
  {
    "line": 13,
    "text": "#: etf",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a decorator for entity registration",
    "confidence": 0.5,
    "tokens": [
      2,
      25,
      2123,
      69
    ],
    "start_token": 32,
    "end_token": 36,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      11705,
      1352,
      329,
      9312,
      9352
    ],
    "label": "ml_signal",
    "reason": "Usage of a decorator for entity registration"
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Inheritance from multiple classes, indicating a complex class structure",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 36,
    "end_token": 36,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47025,
      42942,
      422,
      3294,
      6097,
      11,
      12739,
      257,
      3716,
      1398,
      4645
    ],
    "label": "ml_signal",
    "reason": "Inheritance from multiple classes, indicating a complex class structure"
  },
  {
    "line": 10,
    "text": "EtfMetaBase = declarative_base()",
    "annotation": "\ud83e\udde0 ML Signal: Use of SQLAlchemy ORM for database interaction",
    "confidence": 0.5,
    "tokens": [
      36,
      27110,
      48526,
      14881,
      796,
      2377,
      283,
      876,
      62,
      8692,
      3419
    ],
    "start_token": 36,
    "end_token": 47,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      10375
    ],
    "label": "ml_signal",
    "reason": "Use of SQLAlchemy ORM for database interaction"
  },
  {
    "line": 13,
    "text": "#: etf",
    "annotation": "\ud83e\udde0 ML Signal: Definition of a database column with a specific data type and length",
    "confidence": 0.5,
    "tokens": [
      2,
      25,
      2123,
      69
    ],
    "start_token": 47,
    "end_token": 51,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      30396,
      286,
      257,
      6831,
      5721,
      351,
      257,
      2176,
      1366,
      2099,
      290,
      4129
    ],
    "label": "ml_signal",
    "reason": "Definition of a database column with a specific data type and length"
  },
  {
    "line": 15,
    "text": "class Etf(EtfMetaBase, Portfolio):",
    "annotation": "\ud83e\udde0 ML Signal: Use of class method decorator indicating a method that operates on the class itself",
    "confidence": 0.5,
    "tokens": [
      4871,
      17906,
      69,
      7,
      36,
      27110,
      48526,
      14881,
      11,
      4347,
      13652,
      2599
    ],
    "start_token": 51,
    "end_token": 63,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1398,
      2446,
      11705,
      1352,
      12739,
      257,
      2446,
      326,
      14051,
      319,
      262,
      1398,
      2346
    ],
    "label": "ml_signal",
    "reason": "Use of class method decorator indicating a method that operates on the class itself"
  },
  {
    "line": 12,
    "text": "",
    "annotation": "\u2705 Best Practice: Consider adding type hints for better code readability and maintainability",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 63,
    "end_token": 63,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      4375,
      2099,
      20269,
      329,
      1365,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Consider adding type hints for better code readability and maintainability"
  },
  {
    "line": 14,
    "text": "@register_entity(entity_type=\"etf\")",
    "annotation": "\u2705 Best Practice: Import statements should be at the top of the file",
    "confidence": 0.5,
    "tokens": [
      31,
      30238,
      62,
      26858,
      7,
      26858,
      62,
      4906,
      2625,
      316,
      69,
      4943
    ],
    "start_token": 63,
    "end_token": 75,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      17267,
      6299,
      815,
      307,
      379,
      262,
      1353,
      286,
      262,
      2393
    ],
    "label": "best_practice",
    "reason": "Import statements should be at the top of the file"
  },
  {
    "line": 16,
    "text": "    __tablename__ = \"etf\"",
    "annotation": "\ud83e\udde0 ML Signal: Function call with multiple parameters, useful for learning API usage patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      11593,
      8658,
      11925,
      480,
      834,
      796,
      366,
      316,
      69,
      1
    ],
    "start_token": 75,
    "end_token": 88,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      351,
      3294,
      10007,
      11,
      4465,
      329,
      4673,
      7824,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Function call with multiple parameters, useful for learning API usage patterns"
  },
  {
    "line": 16,
    "text": "    __tablename__ = \"etf\"",
    "annotation": "\u2705 Best Practice: Define a class-level attribute for the table name to improve maintainability and readability.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      11593,
      8658,
      11925,
      480,
      834,
      796,
      366,
      316,
      69,
      1
    ],
    "start_token": 88,
    "end_token": 101,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      500,
      257,
      1398,
      12,
      5715,
      11688,
      329,
      262,
      3084,
      1438,
      284,
      2987,
      5529,
      1799,
      290,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Define a class-level attribute for the table name to improve maintainability and readability."
  },
  {
    "line": 18,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Registering schema with specific providers and database names indicates usage patterns for database interactions.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 101,
    "end_token": 101,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17296,
      278,
      32815,
      351,
      2176,
      9549,
      290,
      6831,
      3891,
      9217,
      8748,
      7572,
      329,
      6831,
      12213,
      13
    ],
    "label": "ml_signal",
    "reason": "Registering schema with specific providers and database names indicates usage patterns for database interactions."
  },
  {
    "line": 18,
    "text": "",
    "annotation": "\u2705 Best Practice: Use __all__ to explicitly declare the public API of the module, improving code readability and maintainability.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 101,
    "end_token": 101,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      11593,
      439,
      834,
      284,
      11777,
      13627,
      262,
      1171,
      7824,
      286,
      262,
      8265,
      11,
      10068,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Use __all__ to explicitly declare the public API of the module, improving code readability and maintainability."
  }
]