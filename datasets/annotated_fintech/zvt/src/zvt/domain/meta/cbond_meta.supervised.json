[
  {
    "line": 2,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy for ORM, indicating a pattern of database interaction",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 0,
    "end_token": 0,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      329,
      6375,
      44,
      11,
      12739,
      257,
      3912,
      286,
      6831,
      10375
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy for ORM, indicating a pattern of database interaction"
  },
  {
    "line": 4,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Importing a specific class from a module, indicating a pattern of modular code usage",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 0,
    "end_token": 0,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      257,
      2176,
      1398,
      422,
      257,
      8265,
      11,
      12739,
      257,
      3912,
      286,
      26507,
      2438,
      8748
    ],
    "label": "ml_signal",
    "reason": "Importing a specific class from a module, indicating a pattern of modular code usage"
  },
  {
    "line": 6,
    "text": "from zvt.contract.register import register_schema, register_entity",
    "annotation": "\ud83e\udde0 ML Signal: Importing specific functions for registration, indicating a pattern of dynamic schema/entity registration",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      28484,
      13,
      30238,
      1330,
      7881,
      62,
      15952,
      2611,
      11,
      7881,
      62,
      26858
    ],
    "start_token": 0,
    "end_token": 16,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      2176,
      5499,
      329,
      9352,
      11,
      12739,
      257,
      3912,
      286,
      8925,
      32815,
      14,
      26858,
      9352
    ],
    "label": "ml_signal",
    "reason": "Importing specific functions for registration, indicating a pattern of dynamic schema/entity registration"
  },
  {
    "line": 8,
    "text": "CBondBase = declarative_base()",
    "annotation": "\ud83e\udde0 ML Signal: Creation of a base class for ORM models, indicating a pattern of database schema definition",
    "confidence": 0.5,
    "tokens": [
      23199,
      623,
      14881,
      796,
      2377,
      283,
      876,
      62,
      8692,
      3419
    ],
    "start_token": 16,
    "end_token": 26,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      21582,
      286,
      257,
      2779,
      1398,
      329,
      6375,
      44,
      4981,
      11,
      12739,
      257,
      3912,
      286,
      6831,
      32815,
      6770
    ],
    "label": "ml_signal",
    "reason": "Creation of a base class for ORM models, indicating a pattern of database schema definition"
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\u2705 Best Practice: Naming convention for base class follows common Python and SQLAlchemy practices",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 26,
    "end_token": 26,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      399,
      3723,
      9831,
      329,
      2779,
      1398,
      5679,
      2219,
      11361,
      290,
      16363,
      2348,
      26599,
      6593
    ],
    "label": "best_practice",
    "reason": "Naming convention for base class follows common Python and SQLAlchemy practices"
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a decorator for entity registration, indicating a pattern of metadata or behavior extension",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 26,
    "end_token": 26,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      11705,
      1352,
      329,
      9312,
      9352,
      11,
      12739,
      257,
      3912,
      286,
      20150,
      393,
      4069,
      7552
    ],
    "label": "ml_signal",
    "reason": "Usage of a decorator for entity registration, indicating a pattern of metadata or behavior extension"
  },
  {
    "line": 7,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of class inheritance to promote code reuse and organization",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 26,
    "end_token": 26,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      1398,
      24155,
      284,
      7719,
      2438,
      32349,
      290,
      4009
    ],
    "label": "best_practice",
    "reason": "Use of class inheritance to promote code reuse and organization"
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of class-level attributes to define database table names",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 26,
    "end_token": 26,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1398,
      12,
      5715,
      12608,
      284,
      8160,
      6831,
      3084,
      3891
    ],
    "label": "ml_signal",
    "reason": "Use of class-level attributes to define database table names"
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Registration of schema with specific providers and database name",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 26,
    "end_token": 26,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24610,
      286,
      32815,
      351,
      2176,
      9549,
      290,
      6831,
      1438
    ],
    "label": "ml_signal",
    "reason": "Registration of schema with specific providers and database name"
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of __all__ to define public interface of the module",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 26,
    "end_token": 26,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7071,
      286,
      262,
      8265
    ],
    "label": "best_practice",
    "reason": "Use of __all__ to define public interface of the module"
  }
]