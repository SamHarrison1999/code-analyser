annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Grouping related imports together improves readability and maintainability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 3519, 17944, 1978, 19575, 1100, 1799, 290, 5529, 1799, 13]",1.0,12,best_practice,3,Grouping related imports together improves readability and maintainability.,,0,from sqlalchemy.orm import declarative_base,"[6738, 44161, 282, 26599, 13, 579, 1330, 2377, 283, 876, 62, 8692]"
‚úÖ Best Practice: Naming the base class as OverallBase provides clarity on its purpose.,"[26486, 227, 6705, 19939, 25, 399, 3723, 262, 2779, 1398, 355, 14674, 14881, 3769, 16287, 319, 663, 4007, 13]",0.5,24,best_practice,6,Naming the base class as OverallBase provides clarity on its purpose.,,12,from zvt.contract.register import register_schema,"[6738, 1976, 36540, 13, 28484, 13, 30238, 1330, 7881, 62, 15952, 2611]"
üß† ML Signal: Inheritance from OverallBase and Mixin suggests a pattern for class design,"[8582, 100, 254, 10373, 26484, 25, 47025, 42942, 422, 14674, 14881, 290, 15561, 259, 5644, 257, 3912, 329, 1398, 1486]",0.5,24,ml_signal,7,Inheritance from OverallBase and Mixin suggests a pattern for class design,,24,,[]
üß† ML Signal: Use of SQLAlchemy ORM for database table mapping,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 3084, 16855]",0.5,24,ml_signal,9,Use of SQLAlchemy ORM for database table mapping,,24,,[]
‚úÖ Best Practice: Specify length for String columns to optimize database storage,"[26486, 227, 6705, 19939, 25, 18291, 1958, 4129, 329, 10903, 15180, 284, 27183, 6831, 6143]",0.5,40,best_practice,11,Specify length for String columns to optimize database storage,,24,#: Â∏ÇÂú∫Êï¥‰Ωì‰º∞ÂÄº,"[2, 25, 10263, 116, 224, 28839, 118, 46763, 112, 19526, 241, 27670, 108, 161, 222, 120]"
‚úÖ Best Practice: Specify length for String columns to optimize database storage,"[26486, 227, 6705, 19939, 25, 18291, 1958, 4129, 329, 10903, 15180, 284, 27183, 6831, 6143]",0.5,40,best_practice,13,Specify length for String columns to optimize database storage,,40,,[]
‚úÖ Best Practice: Specify length for String columns to optimize database storage,"[26486, 227, 6705, 19939, 25, 18291, 1958, 4129, 329, 10903, 15180, 284, 27183, 6831, 6143]",0.5,54,best_practice,15,Specify length for String columns to optimize database storage,,40,"    __tablename__ = ""stock_summary""","[220, 220, 220, 11593, 8658, 11925, 480, 834, 796, 366, 13578, 62, 49736, 1]"
‚úÖ Best Practice: Use of Float for numerical data to handle large and small numbers,"[26486, 227, 6705, 19939, 25, 5765, 286, 48436, 329, 29052, 1366, 284, 5412, 1588, 290, 1402, 3146]",0.5,67,best_practice,17,Use of Float for numerical data to handle large and small numbers,,54,    provider = Column(String(length=32)),"[220, 220, 220, 10131, 796, 29201, 7, 10100, 7, 13664, 28, 2624, 4008]"
"‚ö†Ô∏è SAST Risk (Low): Potential typo in 'total_tradable_vaule', should be 'total_tradable_value'","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 46517, 287, 705, 23350, 62, 2213, 324, 540, 62, 85, 559, 293, 3256, 815, 307, 705, 23350, 62, 2213, 324, 540, 62, 8367, 6]",1.0,80,sast_risk,19,"Potential typo in 'total_tradable_vaule', should be 'total_tradable_value'",Low,67,    name = Column(String(length=32)),"[220, 220, 220, 1438, 796, 29201, 7, 10100, 7, 13664, 28, 2624, 4008]"
‚úÖ Best Practice: Use of Float for numerical data to handle large and small numbers,"[26486, 227, 6705, 19939, 25, 5765, 286, 48436, 329, 29052, 1366, 284, 5412, 1588, 290, 1402, 3146]",0.5,91,best_practice,21,Use of Float for numerical data to handle large and small numbers,,80,    total_value = Column(Float),"[220, 220, 220, 2472, 62, 8367, 796, 29201, 7, 43879, 8]"
‚úÖ Best Practice: Use of Float for numerical data to handle large and small numbers,"[26486, 227, 6705, 19939, 25, 5765, 286, 48436, 329, 29052, 1366, 284, 5412, 1588, 290, 1402, 3146]",0.5,100,best_practice,23,Use of Float for numerical data to handle large and small numbers,,91,    pe = Column(Float),"[220, 220, 220, 613, 796, 29201, 7, 43879, 8]"
‚úÖ Best Practice: Use of Float for numerical data to handle large and small numbers,"[26486, 227, 6705, 19939, 25, 5765, 286, 48436, 329, 29052, 1366, 284, 5412, 1588, 290, 1402, 3146]",0.5,109,best_practice,25,Use of Float for numerical data to handle large and small numbers,,100,    volume = Column(Float),"[220, 220, 220, 6115, 796, 29201, 7, 43879, 8]"
‚úÖ Best Practice: Use of Float for numerical data to handle large and small numbers,"[26486, 227, 6705, 19939, 25, 5765, 286, 48436, 329, 29052, 1366, 284, 5412, 1588, 290, 1402, 3146]",0.5,120,best_practice,27,Use of Float for numerical data to handle large and small numbers,,109,    turnover_rate = Column(Float),"[220, 220, 220, 25079, 62, 4873, 796, 29201, 7, 43879, 8]"
‚úÖ Best Practice: Use of Float for numerical data to handle large and small numbers,"[26486, 227, 6705, 19939, 25, 5765, 286, 48436, 329, 29052, 1366, 284, 5412, 1588, 290, 1402, 3146]",0.5,120,best_practice,29,Use of Float for numerical data to handle large and small numbers,,120,,[]
‚úÖ Best Practice: Define column types and constraints for database schema,"[26486, 227, 6705, 19939, 25, 2896, 500, 5721, 3858, 290, 17778, 329, 6831, 32815]",0.5,120,best_practice,20,Define column types and constraints for database schema,,120,,[]
‚úÖ Best Practice: Define column types and constraints for database schema,"[26486, 227, 6705, 19939, 25, 2896, 500, 5721, 3858, 290, 17778, 329, 6831, 32815]",0.5,137,best_practice,22,Define column types and constraints for database schema,,120,    total_tradable_vaule = Column(Float),"[220, 220, 220, 2472, 62, 2213, 324, 540, 62, 85, 559, 293, 796, 29201, 7, 43879, 8]"
‚úÖ Best Practice: Define column types and constraints for database schema,"[26486, 227, 6705, 19939, 25, 2896, 500, 5721, 3858, 290, 17778, 329, 6831, 32815]",0.5,147,best_practice,24,Define column types and constraints for database schema,,137,    pb = Column(Float),"[220, 220, 220, 279, 65, 796, 29201, 7, 43879, 8]"
‚úÖ Best Practice: Define column types and constraints for database schema,"[26486, 227, 6705, 19939, 25, 2896, 500, 5721, 3858, 290, 17778, 329, 6831, 32815]",0.5,156,best_practice,26,Define column types and constraints for database schema,,147,    turnover = Column(Float),"[220, 220, 220, 25079, 796, 29201, 7, 43879, 8]"
‚úÖ Best Practice: Define column types and constraints for database schema,"[26486, 227, 6705, 19939, 25, 2896, 500, 5721, 3858, 290, 17778, 329, 6831, 32815]",0.5,156,best_practice,28,Define column types and constraints for database schema,,156,,[]
‚úÖ Best Practice: Define column types and constraints for database schema,"[26486, 227, 6705, 19939, 25, 2896, 500, 5721, 3858, 290, 17778, 329, 6831, 32815]",0.5,174,best_practice,30,Define column types and constraints for database schema,,156,#: ËûçËµÑËûçÂà∏Ê¶ÇÂÜµ,"[2, 25, 5525, 252, 235, 164, 113, 226, 164, 252, 235, 26344, 116, 162, 99, 224, 37863, 113]"
‚úÖ Best Practice: Define column types and constraints for database schema,"[26486, 227, 6705, 19939, 25, 2896, 500, 5721, 3858, 290, 17778, 329, 6831, 32815]",0.5,174,best_practice,32,Define column types and constraints for database schema,,174,,[]
‚úÖ Best Practice: Define column types and constraints for database schema,"[26486, 227, 6705, 19939, 25, 2896, 500, 5721, 3858, 290, 17778, 329, 6831, 32815]",0.5,191,best_practice,34,Define column types and constraints for database schema,,174,"    __tablename__ = ""margin_trading_summary""","[220, 220, 220, 11593, 8658, 11925, 480, 834, 796, 366, 36153, 62, 2213, 4980, 62, 49736, 1]"
üß† ML Signal: Use of SQLAlchemy ORM for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 10375]",1.0,209,ml_signal,30,Use of SQLAlchemy ORM for database interaction,,191,#: ËûçËµÑËûçÂà∏Ê¶ÇÂÜµ,"[2, 25, 5525, 252, 235, 164, 113, 226, 164, 252, 235, 26344, 116, 162, 99, 224, 37863, 113]"
üß† ML Signal: Use of SQLAlchemy ORM for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 10375]",1.0,209,ml_signal,32,Use of SQLAlchemy ORM for database interaction,,209,,[]
üß† ML Signal: Use of SQLAlchemy ORM for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 10375]",1.0,226,ml_signal,34,Use of SQLAlchemy ORM for database interaction,,209,"    __tablename__ = ""margin_trading_summary""","[220, 220, 220, 11593, 8658, 11925, 480, 834, 796, 366, 36153, 62, 2213, 4980, 62, 49736, 1]"
üß† ML Signal: Use of SQLAlchemy ORM for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 10375]",1.0,239,ml_signal,36,Use of SQLAlchemy ORM for database interaction,,226,    code = Column(String(length=32)),"[220, 220, 220, 2438, 796, 29201, 7, 10100, 7, 13664, 28, 2624, 4008]"
üß† ML Signal: Use of SQLAlchemy ORM for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 10375]",1.0,239,ml_signal,38,Use of SQLAlchemy ORM for database interaction,,239,,[]
üß† ML Signal: Use of SQLAlchemy ORM for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 10375]",1.0,250,ml_signal,40,Use of SQLAlchemy ORM for database interaction,,239,    margin_value = Column(Float),"[220, 220, 220, 10330, 62, 8367, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Use of SQLAlchemy ORM for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 10375]",1.0,261,ml_signal,40,Use of SQLAlchemy ORM for database interaction,,250,    margin_value = Column(Float),"[220, 220, 220, 10330, 62, 8367, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Use of SQLAlchemy ORM for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 10375]",1.0,272,ml_signal,40,Use of SQLAlchemy ORM for database interaction,,261,    margin_value = Column(Float),"[220, 220, 220, 10330, 62, 8367, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Use of SQLAlchemy ORM for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 329, 6831, 10375]",1.0,283,ml_signal,40,Use of SQLAlchemy ORM for database interaction,,272,    margin_value = Column(Float),"[220, 220, 220, 10330, 62, 8367, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Registration of schema with specific providers and database,"[8582, 100, 254, 10373, 26484, 25, 24610, 286, 32815, 351, 2176, 9549, 290, 6831]",1.0,294,ml_signal,40,Registration of schema with specific providers and database,,283,    margin_value = Column(Float),"[220, 220, 220, 10330, 62, 8367, 796, 29201, 7, 43879, 8]"
‚úÖ Best Practice: Use of __all__ to define public API of the module,"[26486, 227, 6705, 19939, 25, 5765, 286, 11593, 439, 834, 284, 8160, 1171, 7824, 286, 262, 8265]",1.0,305,best_practice,40,Use of __all__ to define public API of the module,,294,    margin_value = Column(Float),"[220, 220, 220, 10330, 62, 8367, 796, 29201, 7, 43879, 8]"
