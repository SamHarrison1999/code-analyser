[
  {
    "line": 3,
    "text": "from sqlalchemy.orm import declarative_base",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      44161,
      282,
      26599,
      13,
      579,
      1330,
      2377,
      283,
      876,
      62,
      8692
    ],
    "start_token": 0,
    "end_token": 12,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 7,
    "text": "",
    "annotation": "\u2705 Best Practice: Naming convention for classes should follow CamelCase.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 12,
    "end_token": 12,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      399,
      3723,
      9831,
      329,
      6097,
      815,
      1061,
      43281,
      20448,
      13
    ],
    "label": "best_practice",
    "reason": "Naming convention for classes should follow CamelCase."
  },
  {
    "line": 7,
    "text": "",
    "annotation": "\u2705 Best Practice: Define a class-level attribute for the table name to ensure consistency and easy maintenance.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 12,
    "end_token": 12,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      500,
      257,
      1398,
      12,
      5715,
      11688,
      329,
      262,
      3084,
      1438,
      284,
      4155,
      15794,
      290,
      2562,
      9262,
      13
    ],
    "label": "best_practice",
    "reason": "Define a class-level attribute for the table name to ensure consistency and easy maintenance."
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy's Column and String types indicates ORM pattern for database interaction.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 12,
    "end_token": 12,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      338,
      29201,
      290,
      10903,
      3858,
      9217,
      6375,
      44,
      3912,
      329,
      6831,
      10375,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy's Column and String types indicates ORM pattern for database interaction."
  },
  {
    "line": 11,
    "text": "class ManagerTrading(TradingBase, Mixin):",
    "annotation": "\ud83e\udde0 ML Signal: Consistent use of String type with specified length for text fields.",
    "confidence": 0.5,
    "tokens": [
      4871,
      9142,
      2898,
      4980,
      7,
      2898,
      4980,
      14881,
      11,
      15561,
      259,
      2599
    ],
    "start_token": 12,
    "end_token": 24,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3515,
      7609,
      779,
      286,
      10903,
      2099,
      351,
      7368,
      4129,
      329,
      2420,
      7032,
      13
    ],
    "label": "ml_signal",
    "reason": "Consistent use of String type with specified length for text fields."
  },
  {
    "line": 13,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Consistent naming pattern for attributes related to trading.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 24,
    "end_token": 24,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3515,
      7609,
      19264,
      3912,
      329,
      12608,
      3519,
      284,
      7313,
      13
    ],
    "label": "ml_signal",
    "reason": "Consistent naming pattern for attributes related to trading."
  },
  {
    "line": 15,
    "text": "    code = Column(String(length=32))",
    "annotation": "\ud83e\udde0 ML Signal: Use of Float type for numerical fields indicates handling of decimal values.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2438,
      796,
      29201,
      7,
      10100,
      7,
      13664,
      28,
      2624,
      4008
    ],
    "start_token": 24,
    "end_token": 37,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      48436,
      2099,
      329,
      29052,
      7032,
      9217,
      9041,
      286,
      32465,
      3815,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of Float type for numerical fields indicates handling of decimal values."
  },
  {
    "line": 17,
    "text": "    #: 2017-08-11 \u97e6\u6625 200 9.16 -- \u7ade\u4ef7\u4ea4\u6613 \u5218\u97ec \u9ad8\u7ba1 \u5144\u5f1f\u59d0\u59b9",
    "annotation": "\ud83e\udde0 ML Signal: Consistent use of Float type for financial data.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      2177,
      12,
      2919,
      12,
      1157,
      16268,
      253,
      99,
      23626,
      98,
      939,
      860,
      13,
      1433,
      1377,
      13328,
      104,
      252,
      20015,
      115,
      12859,
      97,
      23626,
      241,
      10263,
      230,
      246,
      165,
      253,
      105,
      16268,
      45865,
      163,
      106,
      94,
      10263,
      227,
      226,
      28156,
      253,
      34650,
      238,
      36685,
      117
    ],
    "start_token": 37,
    "end_token": 86,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3515,
      7609,
      779,
      286,
      48436,
      2099,
      329,
      3176,
      1366,
      13
    ],
    "label": "ml_signal",
    "reason": "Consistent use of Float type for financial data."
  },
  {
    "line": 19,
    "text": "    #: \u53d8\u52a8\u4eba",
    "annotation": "\ud83e\udde0 ML Signal: Attribute naming suggests this field tracks the amount of holdings.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10263,
      237,
      246,
      27950,
      101,
      21689
    ],
    "start_token": 86,
    "end_token": 97,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3460,
      4163,
      19264,
      5644,
      428,
      2214,
      8339,
      262,
      2033,
      286,
      27572,
      13
    ],
    "label": "ml_signal",
    "reason": "Attribute naming suggests this field tracks the amount of holdings."
  },
  {
    "line": 21,
    "text": "    #: \u53d8\u52a8\u6570\u91cf",
    "annotation": "\ud83e\udde0 ML Signal: Use of String type for categorical data.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10263,
      237,
      246,
      27950,
      101,
      46763,
      108,
      34932,
      237
    ],
    "start_token": 97,
    "end_token": 111,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      10903,
      2099,
      329,
      4253,
      12409,
      1366,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of String type for categorical data."
  },
  {
    "line": 23,
    "text": "    #: \u4ea4\u6613\u5747\u4ef7",
    "annotation": "\ud83e\udde0 ML Signal: Attribute naming suggests this field tracks manager information.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      220,
      12859,
      97,
      23626,
      241,
      161,
      251,
      229,
      20015,
      115
    ],
    "start_token": 111,
    "end_token": 126,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3460,
      4163,
      19264,
      5644,
      428,
      2214,
      8339,
      4706,
      1321,
      13
    ],
    "label": "ml_signal",
    "reason": "Attribute naming suggests this field tracks manager information."
  },
  {
    "line": 25,
    "text": "    #: \u7ed3\u5b58\u80a1\u7968",
    "annotation": "\ud83e\udde0 ML Signal: Consistent naming pattern for attributes related to manager details.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      13328,
      119,
      241,
      27764,
      246,
      164,
      224,
      94,
      163,
      98,
      101
    ],
    "start_token": 126,
    "end_token": 142,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3515,
      7609,
      19264,
      3912,
      329,
      12608,
      3519,
      284,
      4706,
      3307,
      13
    ],
    "label": "ml_signal",
    "reason": "Consistent naming pattern for attributes related to manager details."
  },
  {
    "line": 27,
    "text": "    #: \u4ea4\u6613\u65b9\u5f0f",
    "annotation": "\ud83e\udde0 ML Signal: Attribute naming suggests this field tracks relationships, which could be sensitive information.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      220,
      12859,
      97,
      23626,
      241,
      43095,
      28156,
      237
    ],
    "start_token": 142,
    "end_token": 155,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3460,
      4163,
      19264,
      5644,
      428,
      2214,
      8339,
      6958,
      11,
      543,
      714,
      307,
      8564,
      1321,
      13
    ],
    "label": "ml_signal",
    "reason": "Attribute naming suggests this field tracks relationships, which could be sensitive information."
  },
  {
    "line": 19,
    "text": "    #: \u53d8\u52a8\u4eba",
    "annotation": "\ud83e\udde0 ML Signal: Inheritance from multiple classes indicates a pattern of using mixins or base classes for shared functionality.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10263,
      237,
      246,
      27950,
      101,
      21689
    ],
    "start_token": 155,
    "end_token": 166,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47025,
      42942,
      422,
      3294,
      6097,
      9217,
      257,
      3912,
      286,
      1262,
      5022,
      1040,
      393,
      2779,
      6097,
      329,
      4888,
      11244,
      13
    ],
    "label": "ml_signal",
    "reason": "Inheritance from multiple classes indicates a pattern of using mixins or base classes for shared functionality."
  },
  {
    "line": 21,
    "text": "    #: \u53d8\u52a8\u6570\u91cf",
    "annotation": "\ud83e\udde0 ML Signal: Use of SQLAlchemy ORM pattern for database table representation.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10263,
      237,
      246,
      27950,
      101,
      46763,
      108,
      34932,
      237
    ],
    "start_token": 166,
    "end_token": 180,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      3912,
      329,
      6831,
      3084,
      10552,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of SQLAlchemy ORM pattern for database table representation."
  },
  {
    "line": 23,
    "text": "    #: \u4ea4\u6613\u5747\u4ef7",
    "annotation": "\ud83e\udde0 ML Signal: Use of fixed-length strings for database columns, indicating a pattern of data size constraints.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      220,
      12859,
      97,
      23626,
      241,
      161,
      251,
      229,
      20015,
      115
    ],
    "start_token": 180,
    "end_token": 195,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      5969,
      12,
      13664,
      13042,
      329,
      6831,
      15180,
      11,
      12739,
      257,
      3912,
      286,
      1366,
      2546,
      17778,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of fixed-length strings for database columns, indicating a pattern of data size constraints."
  },
  {
    "line": 25,
    "text": "    #: \u7ed3\u5b58\u80a1\u7968",
    "annotation": "\ud83e\udde0 ML Signal: Use of fixed-length strings for database columns, indicating a pattern of data size constraints.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      13328,
      119,
      241,
      27764,
      246,
      164,
      224,
      94,
      163,
      98,
      101
    ],
    "start_token": 195,
    "end_token": 211,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      5969,
      12,
      13664,
      13042,
      329,
      6831,
      15180,
      11,
      12739,
      257,
      3912,
      286,
      1366,
      2546,
      17778,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of fixed-length strings for database columns, indicating a pattern of data size constraints."
  },
  {
    "line": 27,
    "text": "    #: \u4ea4\u6613\u65b9\u5f0f",
    "annotation": "\ud83e\udde0 ML Signal: Use of fixed-length strings for database columns, indicating a pattern of data size constraints.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      220,
      12859,
      97,
      23626,
      241,
      43095,
      28156,
      237
    ],
    "start_token": 211,
    "end_token": 224,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      5969,
      12,
      13664,
      13042,
      329,
      6831,
      15180,
      11,
      12739,
      257,
      3912,
      286,
      1366,
      2546,
      17778,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of fixed-length strings for database columns, indicating a pattern of data size constraints."
  },
  {
    "line": 29,
    "text": "    #: \u8463\u76d1\u9ad8\u7ba1",
    "annotation": "\ud83e\udde0 ML Signal: Use of Float type for numerical data, indicating a pattern of handling decimal values.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      5525,
      239,
      96,
      33566,
      239,
      165,
      45865,
      163,
      106,
      94
    ],
    "start_token": 224,
    "end_token": 239,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      48436,
      2099,
      329,
      29052,
      1366,
      11,
      12739,
      257,
      3912,
      286,
      9041,
      32465,
      3815,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of Float type for numerical data, indicating a pattern of handling decimal values."
  },
  {
    "line": 31,
    "text": "    #: \u9ad8\u7ba1\u804c\u4f4d",
    "annotation": "\ud83e\udde0 ML Signal: Use of Float type for numerical data, indicating a pattern of handling decimal values.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      16268,
      45865,
      163,
      106,
      94,
      164,
      223,
      234,
      19526,
      235
    ],
    "start_token": 239,
    "end_token": 254,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      48436,
      2099,
      329,
      29052,
      1366,
      11,
      12739,
      257,
      3912,
      286,
      9041,
      32465,
      3815,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of Float type for numerical data, indicating a pattern of handling decimal values."
  },
  {
    "line": 33,
    "text": "    #: \u4e0e\u9ad8\u7ba1\u5173\u7cfb",
    "annotation": "\ud83e\udde0 ML Signal: Use of Float type for numerical data, indicating a pattern of handling decimal values.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      220,
      10310,
      236,
      165,
      45865,
      163,
      106,
      94,
      17739,
      111,
      163,
      111,
      119
    ],
    "start_token": 254,
    "end_token": 272,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      48436,
      2099,
      329,
      29052,
      1366,
      11,
      12739,
      257,
      3912,
      286,
      9041,
      32465,
      3815,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of Float type for numerical data, indicating a pattern of handling decimal values."
  },
  {
    "line": 27,
    "text": "    #: \u4ea4\u6613\u65b9\u5f0f",
    "annotation": "\u2705 Best Practice: Use of class variable for table name ensures consistency and easy maintenance",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      220,
      12859,
      97,
      23626,
      241,
      43095,
      28156,
      237
    ],
    "start_token": 272,
    "end_token": 285,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      1398,
      7885,
      329,
      3084,
      1438,
      19047,
      15794,
      290,
      2562,
      9262
    ],
    "label": "best_practice",
    "reason": "Use of class variable for table name ensures consistency and easy maintenance"
  },
  {
    "line": 29,
    "text": "    #: \u8463\u76d1\u9ad8\u7ba1",
    "annotation": "\u2705 Best Practice: Specifying column types and lengths improves database schema clarity",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      5525,
      239,
      96,
      33566,
      239,
      165,
      45865,
      163,
      106,
      94
    ],
    "start_token": 285,
    "end_token": 300,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      18291,
      4035,
      5721,
      3858,
      290,
      20428,
      19575,
      6831,
      32815,
      16287
    ],
    "label": "best_practice",
    "reason": "Specifying column types and lengths improves database schema clarity"
  },
  {
    "line": 31,
    "text": "    #: \u9ad8\u7ba1\u804c\u4f4d",
    "annotation": "\u2705 Best Practice: Specifying column types and lengths improves database schema clarity",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      16268,
      45865,
      163,
      106,
      94,
      164,
      223,
      234,
      19526,
      235
    ],
    "start_token": 300,
    "end_token": 315,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      18291,
      4035,
      5721,
      3858,
      290,
      20428,
      19575,
      6831,
      32815,
      16287
    ],
    "label": "best_practice",
    "reason": "Specifying column types and lengths improves database schema clarity"
  },
  {
    "line": 33,
    "text": "    #: \u4e0e\u9ad8\u7ba1\u5173\u7cfb",
    "annotation": "\u2705 Best Practice: Specifying column types improves database schema clarity",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      220,
      10310,
      236,
      165,
      45865,
      163,
      106,
      94,
      17739,
      111,
      163,
      111,
      119
    ],
    "start_token": 315,
    "end_token": 333,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      18291,
      4035,
      5721,
      3858,
      19575,
      6831,
      32815,
      16287
    ],
    "label": "best_practice",
    "reason": "Specifying column types improves database schema clarity"
  },
  {
    "line": 35,
    "text": "",
    "annotation": "\u2705 Best Practice: Specifying column types improves database schema clarity",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 333,
    "end_token": 333,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      18291,
      4035,
      5721,
      3858,
      19575,
      6831,
      32815,
      16287
    ],
    "label": "best_practice",
    "reason": "Specifying column types improves database schema clarity"
  },
  {
    "line": 37,
    "text": "class HolderTrading(TradingBase, Mixin):",
    "annotation": "\u2705 Best Practice: Specifying column types and lengths improves database schema clarity",
    "confidence": 0.5,
    "tokens": [
      4871,
      24210,
      2898,
      4980,
      7,
      2898,
      4980,
      14881,
      11,
      15561,
      259,
      2599
    ],
    "start_token": 333,
    "end_token": 345,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      18291,
      4035,
      5721,
      3858,
      290,
      20428,
      19575,
      6831,
      32815,
      16287
    ],
    "label": "best_practice",
    "reason": "Specifying column types and lengths improves database schema clarity"
  },
  {
    "line": 39,
    "text": "",
    "annotation": "\u2705 Best Practice: Specifying column types and lengths improves database schema clarity",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 345,
    "end_token": 345,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      18291,
      4035,
      5721,
      3858,
      290,
      20428,
      19575,
      6831,
      32815,
      16287
    ],
    "label": "best_practice",
    "reason": "Specifying column types and lengths improves database schema clarity"
  },
  {
    "line": 41,
    "text": "    code = Column(String(length=32))",
    "annotation": "\u2705 Best Practice: Specifying column types improves database schema clarity",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2438,
      796,
      29201,
      7,
      10100,
      7,
      13664,
      28,
      2624,
      4008
    ],
    "start_token": 345,
    "end_token": 358,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      18291,
      4035,
      5721,
      3858,
      19575,
      6831,
      32815,
      16287
    ],
    "label": "best_practice",
    "reason": "Specifying column types improves database schema clarity"
  },
  {
    "line": 35,
    "text": "",
    "annotation": "\u2705 Best Practice: Class name should be descriptive and follow CamelCase naming convention",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 358,
    "end_token": 358,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      1438,
      815,
      307,
      35644,
      290,
      1061,
      43281,
      20448,
      19264,
      9831
    ],
    "label": "best_practice",
    "reason": "Class name should be descriptive and follow CamelCase naming convention"
  },
  {
    "line": 37,
    "text": "class HolderTrading(TradingBase, Mixin):",
    "annotation": "\u2705 Best Practice: Use a class variable to define the table name for ORM mapping",
    "confidence": 0.5,
    "tokens": [
      4871,
      24210,
      2898,
      4980,
      7,
      2898,
      4980,
      14881,
      11,
      15561,
      259,
      2599
    ],
    "start_token": 358,
    "end_token": 370,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      257,
      1398,
      7885,
      284,
      8160,
      262,
      3084,
      1438,
      329,
      6375,
      44,
      16855
    ],
    "label": "best_practice",
    "reason": "Use a class variable to define the table name for ORM mapping"
  },
  {
    "line": 39,
    "text": "",
    "annotation": "\u2705 Best Practice: Use descriptive column names and specify data types for ORM mapping",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 370,
    "end_token": 370,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      35644,
      5721,
      3891,
      290,
      11986,
      1366,
      3858,
      329,
      6375,
      44,
      16855
    ],
    "label": "best_practice",
    "reason": "Use descriptive column names and specify data types for ORM mapping"
  },
  {
    "line": 41,
    "text": "    code = Column(String(length=32))",
    "annotation": "\u2705 Best Practice: Use descriptive column names and specify data types for ORM mapping",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2438,
      796,
      29201,
      7,
      10100,
      7,
      13664,
      28,
      2624,
      4008
    ],
    "start_token": 370,
    "end_token": 383,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      35644,
      5721,
      3891,
      290,
      11986,
      1366,
      3858,
      329,
      6375,
      44,
      16855
    ],
    "label": "best_practice",
    "reason": "Use descriptive column names and specify data types for ORM mapping"
  },
  {
    "line": 43,
    "text": "    #: \u80a1\u4e1c\u540d\u79f0",
    "annotation": "\u2705 Best Practice: Use descriptive column names and specify data types for ORM mapping",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      5525,
      224,
      94,
      10310,
      250,
      28938,
      235,
      163,
      100,
      108
    ],
    "start_token": 383,
    "end_token": 398,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      35644,
      5721,
      3891,
      290,
      11986,
      1366,
      3858,
      329,
      6375,
      44,
      16855
    ],
    "label": "best_practice",
    "reason": "Use descriptive column names and specify data types for ORM mapping"
  },
  {
    "line": 45,
    "text": "    #: \u53d8\u52a8\u6570\u91cf",
    "annotation": "\u2705 Best Practice: Use descriptive column names and specify data types for ORM mapping",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10263,
      237,
      246,
      27950,
      101,
      46763,
      108,
      34932,
      237
    ],
    "start_token": 398,
    "end_token": 412,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      35644,
      5721,
      3891,
      290,
      11986,
      1366,
      3858,
      329,
      6375,
      44,
      16855
    ],
    "label": "best_practice",
    "reason": "Use descriptive column names and specify data types for ORM mapping"
  },
  {
    "line": 47,
    "text": "    #: \u53d8\u52a8\u6bd4\u4f8b",
    "annotation": "\u2705 Best Practice: Use descriptive column names and specify data types for ORM mapping",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10263,
      237,
      246,
      27950,
      101,
      162,
      107,
      242,
      160,
      122,
      233
    ],
    "start_token": 412,
    "end_token": 428,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      35644,
      5721,
      3891,
      290,
      11986,
      1366,
      3858,
      329,
      6375,
      44,
      16855
    ],
    "label": "best_practice",
    "reason": "Use descriptive column names and specify data types for ORM mapping"
  },
  {
    "line": 49,
    "text": "    #: \u53d8\u52a8\u540e\u6301\u80a1\u6bd4\u4f8b",
    "annotation": "\u2705 Best Practice: Use descriptive column names and specify data types for ORM mapping",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10263,
      237,
      246,
      27950,
      101,
      28938,
      236,
      162,
      234,
      223,
      164,
      224,
      94,
      162,
      107,
      242,
      160,
      122,
      233
    ],
    "start_token": 428,
    "end_token": 452,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      35644,
      5721,
      3891,
      290,
      11986,
      1366,
      3858,
      329,
      6375,
      44,
      16855
    ],
    "label": "best_practice",
    "reason": "Use descriptive column names and specify data types for ORM mapping"
  },
  {
    "line": 51,
    "text": "",
    "annotation": "\u2705 Best Practice: Use descriptive column names and specify data types for ORM mapping",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 452,
    "end_token": 452,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      35644,
      5721,
      3891,
      290,
      11986,
      1366,
      3858,
      329,
      6375,
      44,
      16855
    ],
    "label": "best_practice",
    "reason": "Use descriptive column names and specify data types for ORM mapping"
  },
  {
    "line": 53,
    "text": "class BigDealTrading(TradingBase, Mixin):",
    "annotation": "\u2705 Best Practice: Use descriptive column names and specify data types for ORM mapping",
    "confidence": 0.5,
    "tokens": [
      4871,
      4403,
      45776,
      2898,
      4980,
      7,
      2898,
      4980,
      14881,
      11,
      15561,
      259,
      2599
    ],
    "start_token": 452,
    "end_token": 465,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      35644,
      5721,
      3891,
      290,
      11986,
      1366,
      3858,
      329,
      6375,
      44,
      16855
    ],
    "label": "best_practice",
    "reason": "Use descriptive column names and specify data types for ORM mapping"
  },
  {
    "line": 47,
    "text": "    #: \u53d8\u52a8\u6bd4\u4f8b",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10263,
      237,
      246,
      27950,
      101,
      162,
      107,
      242,
      160,
      122,
      233
    ],
    "start_token": 465,
    "end_token": 481,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 49,
    "text": "    #: \u53d8\u52a8\u540e\u6301\u80a1\u6bd4\u4f8b",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10263,
      237,
      246,
      27950,
      101,
      28938,
      236,
      162,
      234,
      223,
      164,
      224,
      94,
      162,
      107,
      242,
      160,
      122,
      233
    ],
    "start_token": 481,
    "end_token": 505,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 51,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 505,
    "end_token": 505,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 53,
    "text": "class BigDealTrading(TradingBase, Mixin):",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [
      4871,
      4403,
      45776,
      2898,
      4980,
      7,
      2898,
      4980,
      14881,
      11,
      15561,
      259,
      2599
    ],
    "start_token": 505,
    "end_token": 518,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 55,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 518,
    "end_token": 518,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 57,
    "text": "    code = Column(String(length=32))",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2438,
      796,
      29201,
      7,
      10100,
      7,
      13664,
      28,
      2624,
      4008
    ],
    "start_token": 518,
    "end_token": 531,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 59,
    "text": "    #: \u6210\u4ea4\u989d",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10545,
      230,
      238,
      12859,
      97,
      165,
      95,
      251
    ],
    "start_token": 531,
    "end_token": 544,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 61,
    "text": "    #: \u6210\u4ea4\u4ef7",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10545,
      230,
      238,
      12859,
      97,
      20015,
      115
    ],
    "start_token": 544,
    "end_token": 556,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 63,
    "text": "    #: \u5356\u51fa\u8425\u4e1a\u90e8",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10263,
      235,
      244,
      49035,
      118,
      164,
      238,
      98,
      10310,
      21253,
      225,
      101
    ],
    "start_token": 556,
    "end_token": 573,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 65,
    "text": "    #: \u4e70\u5165\u8425\u4e1a\u90e8",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      220,
      20046,
      108,
      17739,
      98,
      164,
      238,
      98,
      10310,
      21253,
      225,
      101
    ],
    "start_token": 573,
    "end_token": 590,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 67,
    "text": "    #: \u6298/\u6ea2\u4ef7\u7387",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10545,
      232,
      246,
      14,
      162,
      118,
      95,
      20015,
      115,
      163,
      236,
      229
    ],
    "start_token": 590,
    "end_token": 607,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 69,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 607,
    "end_token": 607,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 71,
    "text": "class MarginTrading(TradingBase, Mixin):",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [
      4871,
      11899,
      259,
      2898,
      4980,
      7,
      2898,
      4980,
      14881,
      11,
      15561,
      259,
      2599
    ],
    "start_token": 607,
    "end_token": 620,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 73,
    "text": "    code = Column(String(length=32))",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2438,
      796,
      29201,
      7,
      10100,
      7,
      13664,
      28,
      2624,
      4008
    ],
    "start_token": 620,
    "end_token": 633,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 75,
    "text": "    #: \u878d\u8d44\u4f59\u989d(\u5143\uff09",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      5525,
      252,
      235,
      164,
      113,
      226,
      19526,
      247,
      165,
      95,
      251,
      7,
      17739,
      225,
      171,
      120,
      231
    ],
    "start_token": 633,
    "end_token": 655,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 77,
    "text": "    #: \u878d\u8d44\u4e70\u5165\u989d\uff08\u5143\uff09",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      5525,
      252,
      235,
      164,
      113,
      226,
      20046,
      108,
      17739,
      98,
      165,
      95,
      251,
      171,
      120,
      230,
      17739,
      225,
      171,
      120,
      231
    ],
    "start_token": 655,
    "end_token": 681,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 79,
    "text": "    #: \u878d\u8d44\u507f\u8fd8\u989d\uff08\u5143\uff09",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      5525,
      252,
      235,
      164,
      113,
      226,
      161,
      223,
      123,
      32573,
      246,
      165,
      95,
      251,
      171,
      120,
      230,
      17739,
      225,
      171,
      120,
      231
    ],
    "start_token": 681,
    "end_token": 708,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 81,
    "text": "    #: \u878d\u5238\u4f59\u91cf\uff08\u80a1\uff09",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      5525,
      252,
      235,
      26344,
      116,
      19526,
      247,
      34932,
      237,
      171,
      120,
      230,
      164,
      224,
      94,
      171,
      120,
      231
    ],
    "start_token": 708,
    "end_token": 731,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 83,
    "text": "    #: \u878d\u5238\u5356\u51fa\u91cf\uff08\u80a1\uff09",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      5525,
      252,
      235,
      26344,
      116,
      39355,
      244,
      49035,
      118,
      34932,
      237,
      171,
      120,
      230,
      164,
      224,
      94,
      171,
      120,
      231
    ],
    "start_token": 731,
    "end_token": 756,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 85,
    "text": "    #: \u878d\u5238\u507f\u8fd8\u91cf\uff08\u80a1\uff09",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      5525,
      252,
      235,
      26344,
      116,
      161,
      223,
      123,
      32573,
      246,
      34932,
      237,
      171,
      120,
      230,
      164,
      224,
      94,
      171,
      120,
      231
    ],
    "start_token": 756,
    "end_token": 782,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 87,
    "text": "    #: \u878d\u8d44\u878d\u5238\u4f59\u989d\uff08\u5143\uff09",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      5525,
      252,
      235,
      164,
      113,
      226,
      164,
      252,
      235,
      26344,
      116,
      19526,
      247,
      165,
      95,
      251,
      171,
      120,
      230,
      17739,
      225,
      171,
      120,
      231
    ],
    "start_token": 782,
    "end_token": 811,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 89,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 811,
    "end_token": 811,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 91,
    "text": "class DragonAndTiger(TradingBase, Mixin):",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [
      4871,
      2851,
      1870,
      51,
      8254,
      7,
      2898,
      4980,
      14881,
      11,
      15561,
      259,
      2599
    ],
    "start_token": 811,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 93,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 824,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 824,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 824,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 824,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 824,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 824,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 824,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 824,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 824,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 824,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 824,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 824,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 824,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 824,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 824,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 824,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 824,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 824,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 824,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 824,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 824,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 824,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy ORM for database modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 824,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      21128
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy ORM for database modeling"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Registration of schema with specific providers and database details",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 824,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24610,
      286,
      32815,
      351,
      2176,
      9549,
      290,
      6831,
      3307
    ],
    "label": "ml_signal",
    "reason": "Registration of schema with specific providers and database details"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Definition of module exports",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 824,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      30396,
      286,
      8265,
      15319
    ],
    "label": "ml_signal",
    "reason": "Definition of module exports"
  }
]