annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
✅ Best Practice: Explicitly importing specific modules helps in understanding dependencies and maintaining code.,"[26486, 227, 6705, 19939, 25, 11884, 306, 33332, 2176, 13103, 5419, 287, 4547, 20086, 290, 10941, 2438, 13]",1.0,0,best_practice,2,Explicitly importing specific modules helps in understanding dependencies and maintaining code.,,0,,[]
⚠️ SAST Risk (Low): Using wildcard imports can lead to namespace pollution and make it unclear which names are present.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 12231, 290, 787, 340, 10061, 543, 3891, 389, 1944, 13]",1.0,7,sast_risk,4,Using wildcard imports can lead to namespace pollution and make it unclear which names are present.,Low,0,# the __all__ is generated,"[2, 262, 11593, 439, 834, 318, 7560]"
✅ Best Practice: Aggregating __all__ from submodules helps in maintaining a clear public API.,"[26486, 227, 6705, 19939, 25, 19015, 2301, 803, 11593, 439, 834, 422, 850, 18170, 5419, 287, 10941, 257, 1598, 1171, 7824, 13]",1.0,15,best_practice,7,Aggregating __all__ from submodules helps in maintaining a clear public API.,,7,# __init__.py structure:,"[2, 11593, 15003, 834, 13, 9078, 4645, 25]"
⚠️ SAST Risk (Low): Using wildcard imports can lead to namespace pollution and make it unclear which names are present.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 12231, 290, 787, 340, 10061, 543, 3891, 389, 1944, 13]",1.0,31,sast_risk,9,Using wildcard imports can lead to namespace pollution and make it unclear which names are present.,Low,15,# export interface in __all__ which contains __all__ of its sub modules,"[2, 10784, 7071, 287, 11593, 439, 834, 543, 4909, 11593, 439, 834, 286, 663, 850, 13103]"
⚠️ SAST Risk (Low): Using wildcard imports can lead to namespace pollution and make it unclear which names are present.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 12231, 290, 787, 340, 10061, 543, 3891, 389, 1944, 13]",1.0,53,sast_risk,13,Using wildcard imports can lead to namespace pollution and make it unclear which names are present.,Low,31,from .dividend_financing import __all__ as _dividend_financing_all,"[6738, 764, 67, 1699, 437, 62, 15643, 5077, 1330, 11593, 439, 834, 355, 4808, 67, 1699, 437, 62, 15643, 5077, 62, 439]"
⚠️ SAST Risk (Low): Using wildcard imports can lead to namespace pollution and make it unclear which names are present.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 12231, 290, 787, 340, 10061, 543, 3891, 389, 1944, 13]",1.0,75,sast_risk,13,Using wildcard imports can lead to namespace pollution and make it unclear which names are present.,Low,53,from .dividend_financing import __all__ as _dividend_financing_all,"[6738, 764, 67, 1699, 437, 62, 15643, 5077, 1330, 11593, 439, 834, 355, 4808, 67, 1699, 437, 62, 15643, 5077, 62, 439]"
