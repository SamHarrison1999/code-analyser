# -*- coding: utf-8 -*-
# âœ… Best Practice: Grouping imports from the same module together improves readability.
# this file is generated by gen_kdata_schema function, dont't change it
from sqlalchemy.orm import declarative_base

# ðŸ§  ML Signal: Usage of SQLAlchemy's declarative_base indicates ORM pattern.
from zvt.contract.register import register_schema
# âœ… Best Practice: Define a class-level attribute for the table name to improve maintainability and readability.
from zvt.domain.quotes import BlockKdataCommon

# âœ… Best Practice: Use of __all__ to define public symbols of the module, improving code readability and maintainability.
# ðŸ§  ML Signal: Usage of a function to register schema with specific parameters can indicate patterns in database schema management.
KdataBase = declarative_base()


class Block1wkKdata(KdataBase, BlockKdataCommon):
    __tablename__ = "block_1wk_kdata"


register_schema(providers=["em"], db_name="block_1wk_kdata", schema_base=KdataBase, entity_type="block")


# the __all__ is generated
__all__ = ["Block1wkKdata"]