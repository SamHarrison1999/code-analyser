# -*- coding: utf-8 -*-
# ðŸ§  ML Signal: Importing custom modules indicates a specific application context
# this file is generated by gen_kdata_schema function, dont't change it
from sqlalchemy.orm import declarative_base

# ðŸ§  ML Signal: Importing custom modules indicates a specific application context

from zvt.contract.register import register_schema

# ðŸ§  ML Signal: Usage of declarative_base indicates ORM pattern
from zvt.domain.quotes import BlockKdataCommon

# ðŸ§  ML Signal: Use of class inheritance to extend functionality from base classes

# âœ… Best Practice: Explicitly specifying parameters in function calls improves readability and maintainability
# âœ… Best Practice: Use of __all__ to define public interface of the module
# ðŸ§  ML Signal: Registration pattern for schemas, indicating a plugin or modular architecture
KdataBase = declarative_base()


class Block1dKdata(KdataBase, BlockKdataCommon):
    __tablename__ = "block_1d_kdata"


register_schema(
    providers=["em"],
    db_name="block_1d_kdata",
    schema_base=KdataBase,
    entity_type="block",
)


# the __all__ is generated
__all__ = ["Block1dKdata"]
