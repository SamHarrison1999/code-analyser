# -*- coding: utf-8 -*-
# ðŸ§  ML Signal: Importing custom modules indicates usage patterns and dependencies
# this file is generated by gen_kdata_schema function, dont't change it
from sqlalchemy.orm import declarative_base
# ðŸ§  ML Signal: Importing specific classes from a module indicates usage patterns

from zvt.contract.register import register_schema
# ðŸ§  ML Signal: Usage of declarative_base indicates ORM pattern
# âœ… Best Practice: Define class-level attributes or methods if needed for clarity and maintainability
from zvt.domain.quotes import BlockKdataCommon

# âœ… Best Practice: Use of __all__ to define public API of the module
# âœ… Best Practice: Ensure consistent naming conventions for database tables
# ðŸ§  ML Signal: Usage of a function to register schema with specific parameters
KdataBase = declarative_base()


class Block1monKdata(KdataBase, BlockKdataCommon):
    __tablename__ = "block_1mon_kdata"


register_schema(providers=["em"], db_name="block_1mon_kdata", schema_base=KdataBase, entity_type="block")


# the __all__ is generated
__all__ = ["Block1monKdata"]