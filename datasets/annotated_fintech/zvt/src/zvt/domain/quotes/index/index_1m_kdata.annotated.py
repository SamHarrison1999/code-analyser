# -*- coding: utf-8 -*-
# 🧠 ML Signal: Importing custom modules indicates specific domain usage patterns
# this file is generated by gen_kdata_schema function, dont't change it
from sqlalchemy.orm import declarative_base
# 🧠 ML Signal: Importing custom modules indicates specific domain usage patterns

from zvt.contract import TradableEntity
# 🧠 ML Signal: Importing custom modules indicates specific domain usage patterns
from zvt.contract.register import register_schema
# ✅ Best Practice: Define class-level attributes or methods to improve code organization and readability.
from zvt.domain.quotes import IndexKdataCommon
# 🧠 ML Signal: Usage of SQLAlchemy's declarative_base indicates ORM pattern

# 🧠 ML Signal: Usage of a decorator function to register schema, indicating a pattern for schema registration.
# ✅ Best Practice: Use of __all__ to define public API of the module, improving code maintainability.
# ⚠️ SAST Risk (Low): Ensure that the register_schema function properly sanitizes inputs to prevent injection attacks.
KdataBase = declarative_base()


class Index1mKdata(KdataBase, IndexKdataCommon, TradableEntity):
    __tablename__ = "index_1m_kdata"


register_schema(providers=["em", "sina", "qmt"], db_name="index_1m_kdata", schema_base=KdataBase, entity_type="index")


# the __all__ is generated
__all__ = ["Index1mKdata"]