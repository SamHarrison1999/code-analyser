annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Explicitly importing specific items from a module can improve code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 11884, 306, 33332, 2176, 3709, 422, 257, 8265, 460, 2987, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,19,best_practice,2,Explicitly importing specific items from a module can improve code readability and maintainability.,,0,"# this file is generated by gen_kdata_schema function, dont't change it","[2, 428, 2393, 318, 7560, 416, 2429, 62, 74, 7890, 62, 15952, 2611, 2163, 11, 17666, 470, 1487, 340]"
‚ö†Ô∏è SAST Risk (Medium): Using wildcard imports can lead to namespace collisions and make it unclear which names are present in the namespace.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 31998, 290, 787, 340, 10061, 543, 3891, 389, 1944, 287, 262, 25745, 13]",1.0,19,sast_risk,4,Using wildcard imports can lead to namespace collisions and make it unclear which names are present in the namespace.,Medium,19,,[]
üß† ML Signal: Pattern of aggregating __all__ lists from multiple modules.,"[8582, 100, 254, 10373, 26484, 25, 23939, 286, 13262, 803, 11593, 439, 834, 8341, 422, 3294, 13103, 13]",1.0,24,ml_signal,6,Pattern of aggregating __all__ lists from multiple modules.,,19,__all__ = [],"[834, 439, 834, 796, 17635]"
‚úÖ Best Practice: Explicitly importing specific items from a module can improve code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 11884, 306, 33332, 2176, 3709, 422, 257, 8265, 460, 2987, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,32,best_practice,8,Explicitly importing specific items from a module can improve code readability and maintainability.,,24,# __init__.py structure:,"[2, 11593, 15003, 834, 13, 9078, 4645, 25]"
‚ö†Ô∏è SAST Risk (Medium): Using wildcard imports can lead to namespace collisions and make it unclear which names are present in the namespace.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 31998, 290, 787, 340, 10061, 543, 3891, 389, 1944, 287, 262, 25745, 13]",1.0,48,sast_risk,10,Using wildcard imports can lead to namespace collisions and make it unclear which names are present in the namespace.,Medium,32,# export interface in __all__ which contains __all__ of its sub modules,"[2, 10784, 7071, 287, 11593, 439, 834, 543, 4909, 11593, 439, 834, 286, 663, 850, 13103]"
üß† ML Signal: Pattern of aggregating __all__ lists from multiple modules.,"[8582, 100, 254, 10373, 26484, 25, 23939, 286, 13262, 803, 11593, 439, 834, 8341, 422, 3294, 13103, 13]",1.0,64,ml_signal,10,Pattern of aggregating __all__ lists from multiple modules.,,48,# export interface in __all__ which contains __all__ of its sub modules,"[2, 10784, 7071, 287, 11593, 439, 834, 543, 4909, 11593, 439, 834, 286, 663, 850, 13103]"
‚úÖ Best Practice: Explicitly importing specific items from a module can improve code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 11884, 306, 33332, 2176, 3709, 422, 257, 8265, 460, 2987, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,80,best_practice,10,Explicitly importing specific items from a module can improve code readability and maintainability.,,64,# export interface in __all__ which contains __all__ of its sub modules,"[2, 10784, 7071, 287, 11593, 439, 834, 543, 4909, 11593, 439, 834, 286, 663, 850, 13103]"
‚ö†Ô∏è SAST Risk (Medium): Using wildcard imports can lead to namespace collisions and make it unclear which names are present in the namespace.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 31998, 290, 787, 340, 10061, 543, 3891, 389, 1944, 287, 262, 25745, 13]",1.0,96,sast_risk,10,Using wildcard imports can lead to namespace collisions and make it unclear which names are present in the namespace.,Medium,80,# export interface in __all__ which contains __all__ of its sub modules,"[2, 10784, 7071, 287, 11593, 439, 834, 543, 4909, 11593, 439, 834, 286, 663, 850, 13103]"
üß† ML Signal: Pattern of aggregating __all__ lists from multiple modules.,"[8582, 100, 254, 10373, 26484, 25, 23939, 286, 13262, 803, 11593, 439, 834, 8341, 422, 3294, 13103, 13]",1.0,112,ml_signal,10,Pattern of aggregating __all__ lists from multiple modules.,,96,# export interface in __all__ which contains __all__ of its sub modules,"[2, 10784, 7071, 287, 11593, 439, 834, 543, 4909, 11593, 439, 834, 286, 663, 850, 13103]"
