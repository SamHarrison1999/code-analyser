[
  {
    "line": 2,
    "text": "# this file is generated by gen_kdata_schema function, dont't change it",
    "annotation": "\ud83e\udde0 ML Signal: Importing custom modules indicates specific domain usage patterns",
    "confidence": 1.0,
    "tokens": [
      2,
      428,
      2393,
      318,
      7560,
      416,
      2429,
      62,
      74,
      7890,
      62,
      15952,
      2611,
      2163,
      11,
      17666,
      470,
      1487,
      340
    ],
    "start_token": 0,
    "end_token": 19,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      2183,
      13103,
      9217,
      2176,
      7386,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Importing custom modules indicates specific domain usage patterns"
  },
  {
    "line": 4,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Importing custom modules indicates specific domain usage patterns",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 19,
    "end_token": 19,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      2183,
      13103,
      9217,
      2176,
      7386,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Importing custom modules indicates specific domain usage patterns"
  },
  {
    "line": 6,
    "text": "from zvt.contract.register import register_schema",
    "annotation": "\ud83e\udde0 ML Signal: Importing custom modules indicates specific domain usage patterns",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      28484,
      13,
      30238,
      1330,
      7881,
      62,
      15952,
      2611
    ],
    "start_token": 19,
    "end_token": 31,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      2183,
      13103,
      9217,
      2176,
      7386,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Importing custom modules indicates specific domain usage patterns"
  },
  {
    "line": 8,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy's declarative_base indicates ORM pattern",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 31,
    "end_token": 31,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      338,
      2377,
      283,
      876,
      62,
      8692,
      9217,
      6375,
      44,
      3912
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy's declarative_base indicates ORM pattern"
  },
  {
    "line": 7,
    "text": "from zvt.domain.quotes import IndexKdataCommon",
    "annotation": "\u2705 Best Practice: Define class-level attributes or methods to improve code organization and readability.",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      27830,
      13,
      421,
      6421,
      1330,
      12901,
      42,
      7890,
      17227
    ],
    "start_token": 31,
    "end_token": 44,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      500,
      1398,
      12,
      5715,
      12608,
      393,
      5050,
      284,
      2987,
      2438,
      4009,
      290,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Define class-level attributes or methods to improve code organization and readability."
  },
  {
    "line": 9,
    "text": "KdataBase = declarative_base()",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a decorator function to register schema, indicating a pattern for schema registration.",
    "confidence": 1.0,
    "tokens": [
      42,
      7890,
      14881,
      796,
      2377,
      283,
      876,
      62,
      8692,
      3419
    ],
    "start_token": 44,
    "end_token": 54,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      11705,
      1352,
      2163,
      284,
      7881,
      32815,
      11,
      12739,
      257,
      3912,
      329,
      32815,
      9352,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of a decorator function to register schema, indicating a pattern for schema registration."
  },
  {
    "line": 9,
    "text": "KdataBase = declarative_base()",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Ensure that the register_schema function properly sanitizes inputs to prevent injection attacks.",
    "confidence": 0.5,
    "tokens": [
      42,
      7890,
      14881,
      796,
      2377,
      283,
      876,
      62,
      8692,
      3419
    ],
    "start_token": 54,
    "end_token": 64,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      48987,
      326,
      262,
      7881,
      62,
      15952,
      2611,
      2163,
      6105,
      5336,
      3029,
      274,
      17311,
      284,
      2948,
      16954,
      3434,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Ensure that the register_schema function properly sanitizes inputs to prevent injection attacks."
  },
  {
    "line": 9,
    "text": "KdataBase = declarative_base()",
    "annotation": "\u2705 Best Practice: Use of __all__ to define public API of the module, improving code maintainability.",
    "confidence": 1.0,
    "tokens": [
      42,
      7890,
      14881,
      796,
      2377,
      283,
      876,
      62,
      8692,
      3419
    ],
    "start_token": 64,
    "end_token": 74,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265,
      11,
      10068,
      2438,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Use of __all__ to define public API of the module, improving code maintainability."
  }
]