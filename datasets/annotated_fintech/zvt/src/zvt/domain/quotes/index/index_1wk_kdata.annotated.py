# -*- coding: utf-8 -*-
# ðŸ§  ML Signal: Importing from a specific module indicates usage of a particular ORM framework
# this file is generated by gen_kdata_schema function, dont't change it
from sqlalchemy.orm import declarative_base

# ðŸ§  ML Signal: Importing from a specific module indicates usage of a particular domain model

from zvt.contract.register import register_schema

# ðŸ§  ML Signal: Usage of declarative_base indicates a pattern for defining ORM models
# âœ… Best Practice: Define a class-level attribute for the table name to improve maintainability and readability.
from zvt.domain.quotes import IndexKdataCommon

# ðŸ§  ML Signal: Usage of a function to register schema with specific providers and database name.
# âœ… Best Practice: Assigning the result of declarative_base() to a variable is a common pattern for defining a base class for ORM models
# âœ… Best Practice: Use of __all__ to define public interface of the module, improving code readability and maintainability.
KdataBase = declarative_base()


class Index1wkKdata(KdataBase, IndexKdataCommon):
    __tablename__ = "index_1wk_kdata"


register_schema(
    providers=["em", "sina"],
    db_name="index_1wk_kdata",
    schema_base=KdataBase,
    entity_type="index",
)


# the __all__ is generated
__all__ = ["Index1wkKdata"]
