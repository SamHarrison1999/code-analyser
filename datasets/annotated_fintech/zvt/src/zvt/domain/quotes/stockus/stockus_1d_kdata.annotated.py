# -*- coding: utf-8 -*-
# âœ… Best Practice: Grouping imports from the same module together improves readability.
# this file is generated by gen_kdata_schema function, dont't change it
from sqlalchemy.orm import declarative_base

from zvt.contract.register import register_schema
# âœ… Best Practice: Naming convention for classes should follow CamelCase.
from zvt.domain.quotes import StockusKdataCommon
# ðŸ§  ML Signal: Use of class inheritance to extend functionality

# âœ… Best Practice: Define class attributes for ORM mapping
# ðŸ§  ML Signal: Function call with specific parameters for schema registration
# âœ… Best Practice: Use of a function to register schema for database operations
# âœ… Best Practice: Use of __all__ to define public API of the module
KdataBase = declarative_base()


class Stockus1dKdata(KdataBase, StockusKdataCommon):
    __tablename__ = "stockus_1d_kdata"


register_schema(providers=["em"], db_name="stockus_1d_kdata", schema_base=KdataBase, entity_type="stockus")


# the __all__ is generated
__all__ = ["Stockus1dKdata"]