annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Grouping imports from the same module together improves readability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 17944, 422, 262, 976, 8265, 1978, 19575, 1100, 1799, 13]",1.0,14,best_practice,2,Grouping imports from the same module together improves readability.,,0,"from sqlalchemy import String, Column, Float, Integer, JSON","[6738, 44161, 282, 26599, 1330, 10903, 11, 29201, 11, 48436, 11, 34142, 11, 19449]"
üß† ML Signal: Use of SQLAlchemy's Column to define database schema,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 338, 29201, 284, 8160, 6831, 32815]",0.5,22,ml_signal,4,Use of SQLAlchemy's Column to define database schema,,14,from zvt.contract import Mixin,"[6738, 1976, 36540, 13, 28484, 1330, 15561, 259]"
üß† ML Signal: Use of SQLAlchemy's Column to define database schema,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 338, 29201, 284, 8160, 6831, 32815]",0.5,22,ml_signal,6,Use of SQLAlchemy's Column to define database schema,,22,,[]
üß† ML Signal: Use of SQLAlchemy's Column to define database schema,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 338, 29201, 284, 8160, 6831, 32815]",0.5,35,ml_signal,8,Use of SQLAlchemy's Column to define database schema,,22,    provider = Column(String(length=32)),"[220, 220, 220, 10131, 796, 29201, 7, 10100, 7, 13664, 28, 2624, 4008]"
üß† ML Signal: Use of SQLAlchemy's Column to define database schema,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 338, 29201, 284, 8160, 6831, 32815]",0.5,48,ml_signal,10,Use of SQLAlchemy's Column to define database schema,,35,    name = Column(String(length=32)),"[220, 220, 220, 1438, 796, 29201, 7, 10100, 7, 13664, 28, 2624, 4008]"
üß† ML Signal: Use of SQLAlchemy's Column to define database schema,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 338, 29201, 284, 8160, 6831, 32815]",0.5,72,ml_signal,12,Use of SQLAlchemy's Column to define database schema,,48,"    # level = Column(Enum(IntervalLevel, values_callable=enum_value))","[220, 220, 220, 1303, 1241, 796, 29201, 7, 4834, 388, 7, 9492, 2100, 4971, 11, 3815, 62, 13345, 540, 28, 44709, 62, 8367, 4008]"
üß† ML Signal: Use of SQLAlchemy's Column to define database schema,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 338, 29201, 284, 8160, 6831, 32815]",0.5,72,ml_signal,14,Use of SQLAlchemy's Column to define database schema,,72,,[]
üß† ML Signal: Use of SQLAlchemy's Column to define database schema,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 338, 29201, 284, 8160, 6831, 32815]",0.5,81,ml_signal,16,Use of SQLAlchemy's Column to define database schema,,72,    open = Column(Float),"[220, 220, 220, 1280, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Use of SQLAlchemy's Column to define database schema,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 338, 29201, 284, 8160, 6831, 32815]",0.5,90,ml_signal,18,Use of SQLAlchemy's Column to define database schema,,81,    close = Column(Float),"[220, 220, 220, 1969, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Use of SQLAlchemy's Column to define database schema,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 338, 29201, 284, 8160, 6831, 32815]",0.5,99,ml_signal,20,Use of SQLAlchemy's Column to define database schema,,90,    high = Column(Float),"[220, 220, 220, 1029, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Use of SQLAlchemy's Column to define database schema,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 338, 29201, 284, 8160, 6831, 32815]",0.5,108,ml_signal,22,Use of SQLAlchemy's Column to define database schema,,99,    low = Column(Float),"[220, 220, 220, 1877, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Use of SQLAlchemy's Column to define database schema,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 338, 29201, 284, 8160, 6831, 32815]",0.5,117,ml_signal,24,Use of SQLAlchemy's Column to define database schema,,108,    volume = Column(Float),"[220, 220, 220, 6115, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Use of SQLAlchemy's Column to define database schema,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 338, 29201, 284, 8160, 6831, 32815]",0.5,126,ml_signal,26,Use of SQLAlchemy's Column to define database schema,,117,    turnover = Column(Float),"[220, 220, 220, 25079, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Class definition with multiple attributes indicates a data model pattern,"[8582, 100, 254, 10373, 26484, 25, 5016, 6770, 351, 3294, 12608, 9217, 257, 1366, 2746, 3912]",0.5,135,ml_signal,16,Class definition with multiple attributes indicates a data model pattern,,126,    open = Column(Float),"[220, 220, 220, 1280, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Use of SQLAlchemy Column for ORM mapping,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 29201, 329, 6375, 44, 16855]",1.0,144,ml_signal,18,Use of SQLAlchemy Column for ORM mapping,,135,    close = Column(Float),"[220, 220, 220, 1969, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Use of SQLAlchemy Column for ORM mapping,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 29201, 329, 6375, 44, 16855]",1.0,153,ml_signal,20,Use of SQLAlchemy Column for ORM mapping,,144,    high = Column(Float),"[220, 220, 220, 1029, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Use of SQLAlchemy Column for ORM mapping,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 29201, 329, 6375, 44, 16855]",1.0,162,ml_signal,22,Use of SQLAlchemy Column for ORM mapping,,153,    low = Column(Float),"[220, 220, 220, 1877, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Use of SQLAlchemy Column for ORM mapping,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 29201, 329, 6375, 44, 16855]",1.0,171,ml_signal,24,Use of SQLAlchemy Column for ORM mapping,,162,    volume = Column(Float),"[220, 220, 220, 6115, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Use of SQLAlchemy Column for ORM mapping,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 29201, 329, 6375, 44, 16855]",1.0,180,ml_signal,26,Use of SQLAlchemy Column for ORM mapping,,171,    turnover = Column(Float),"[220, 220, 220, 25079, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Use of SQLAlchemy Column for ORM mapping,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 29201, 329, 6375, 44, 16855]",1.0,192,ml_signal,28,Use of SQLAlchemy Column for ORM mapping,,180,    change_pct = Column(Float),"[220, 220, 220, 1487, 62, 79, 310, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Use of SQLAlchemy Column for ORM mapping,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 29201, 329, 6375, 44, 16855]",1.0,203,ml_signal,30,Use of SQLAlchemy Column for ORM mapping,,192,    turnover_rate = Column(Float),"[220, 220, 220, 25079, 62, 4873, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Use of SQLAlchemy Column for ORM mapping,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 29201, 329, 6375, 44, 16855]",1.0,203,ml_signal,32,Use of SQLAlchemy Column for ORM mapping,,203,,[]
üß† ML Signal: Use of SQLAlchemy Column for ORM mapping,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 29201, 329, 6375, 44, 16855]",1.0,216,ml_signal,34,Use of SQLAlchemy Column for ORM mapping,,203,    #: UNIXÊó∂Èó¥Êà≥,"[220, 220, 220, 1303, 25, 4725, 10426, 33768, 114, 29785, 112, 22755, 111]"
üß† ML Signal: Use of SQLAlchemy Column for ORM mapping,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 29201, 329, 6375, 44, 16855]",1.0,228,ml_signal,36,Use of SQLAlchemy Column for ORM mapping,,216,    #: ÂºÄÁõò‰ª∑,"[220, 220, 220, 1303, 25, 10263, 120, 222, 33566, 246, 20015, 115]"
üß† ML Signal: Use of SQLAlchemy Column for ORM mapping,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 29201, 329, 6375, 44, 16855]",1.0,249,ml_signal,38,Use of SQLAlchemy Column for ORM mapping,,228,    #: Êî∂Áõò‰ª∑/ÂΩìÂâç‰ª∑Ê†º,"[220, 220, 220, 1303, 25, 10545, 242, 114, 33566, 246, 20015, 115, 14, 37605, 241, 30298, 235, 20015, 115, 43718, 120]"
üß† ML Signal: Use of SQLAlchemy Column for ORM mapping,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 29201, 329, 6375, 44, 16855]",1.0,260,ml_signal,40,Use of SQLAlchemy Column for ORM mapping,,249,    #: ÊúÄÈ´ò‰ª∑,"[220, 220, 220, 1303, 25, 42164, 222, 165, 45865, 20015, 115]"
‚úÖ Best Practice: Use of inheritance to extend functionality from a base class,"[26486, 227, 6705, 19939, 25, 5765, 286, 24155, 284, 9117, 11244, 422, 257, 2779, 1398]",1.0,272,best_practice,29,Use of inheritance to extend functionality from a base class,,260,    # Êç¢ÊâãÁéá,"[220, 220, 220, 1303, 10545, 235, 95, 33699, 233, 163, 236, 229]"
‚úÖ Best Practice: Use of 'pass' to indicate an intentionally empty class definition,"[26486, 227, 6705, 19939, 25, 5765, 286, 705, 6603, 6, 284, 7603, 281, 16464, 6565, 1398, 6770]",1.0,272,best_practice,31,Use of 'pass' to indicate an intentionally empty class definition,,272,,[]
‚úÖ Best Practice: Use of inheritance to extend functionality from a base class,"[26486, 227, 6705, 19939, 25, 5765, 286, 24155, 284, 9117, 11244, 422, 257, 2779, 1398]",1.0,272,best_practice,31,Use of inheritance to extend functionality from a base class,,272,,[]
‚úÖ Best Practice: Use of 'pass' to indicate an intentionally empty class,"[26486, 227, 6705, 19939, 25, 5765, 286, 705, 6603, 6, 284, 7603, 281, 16464, 6565, 1398]",0.5,279,best_practice,33,Use of 'pass' to indicate an intentionally empty class,,272,class TickCommon(Mixin):,"[4871, 46093, 17227, 7, 35608, 259, 2599]"
‚úÖ Best Practice: Use of inheritance to extend functionality from a base class,"[26486, 227, 6705, 19939, 25, 5765, 286, 24155, 284, 9117, 11244, 422, 257, 2779, 1398]",1.0,286,best_practice,33,Use of inheritance to extend functionality from a base class,,279,class TickCommon(Mixin):,"[4871, 46093, 17227, 7, 35608, 259, 2599]"
‚úÖ Best Practice: Use of 'pass' to indicate an intentionally empty class definition,"[26486, 227, 6705, 19939, 25, 5765, 286, 705, 6603, 6, 284, 7603, 281, 16464, 6565, 1398, 6770]",0.5,295,best_practice,35,Use of 'pass' to indicate an intentionally empty class definition,,286,    time = Column(Integer),"[220, 220, 220, 640, 796, 29201, 7, 46541, 8]"
‚úÖ Best Practice: Class should have a docstring to describe its purpose and usage,"[26486, 227, 6705, 19939, 25, 5016, 815, 423, 257, 2205, 8841, 284, 6901, 663, 4007, 290, 8748]",1.0,304,best_practice,35,Class should have a docstring to describe its purpose and usage,,295,    time = Column(Integer),"[220, 220, 220, 640, 796, 29201, 7, 46541, 8]"
‚úÖ Best Practice: Class attributes should have comments or docstrings explaining their purpose,"[26486, 227, 6705, 19939, 25, 5016, 12608, 815, 423, 3651, 393, 2205, 37336, 11170, 511, 4007]",1.0,313,best_practice,37,Class attributes should have comments or docstrings explaining their purpose,,304,    open = Column(Float),"[220, 220, 220, 1280, 796, 29201, 7, 43879, 8]"
‚úÖ Best Practice: Class attributes should have comments or docstrings explaining their purpose,"[26486, 227, 6705, 19939, 25, 5016, 12608, 815, 423, 3651, 393, 2205, 37336, 11170, 511, 4007]",1.0,322,best_practice,39,Class attributes should have comments or docstrings explaining their purpose,,313,    close = Column(Float),"[220, 220, 220, 1969, 796, 29201, 7, 43879, 8]"
‚úÖ Best Practice: Use of inheritance to extend functionality from a base class,"[26486, 227, 6705, 19939, 25, 5765, 286, 24155, 284, 9117, 11244, 422, 257, 2779, 1398]",1.0,343,best_practice,38,Use of inheritance to extend functionality from a base class,,322,    #: Êî∂Áõò‰ª∑/ÂΩìÂâç‰ª∑Ê†º,"[220, 220, 220, 1303, 25, 10545, 242, 114, 33566, 246, 20015, 115, 14, 37605, 241, 30298, 235, 20015, 115, 43718, 120]"
‚úÖ Best Practice: Use of inheritance to extend functionality from a base class,"[26486, 227, 6705, 19939, 25, 5765, 286, 24155, 284, 9117, 11244, 422, 257, 2779, 1398]",1.0,354,best_practice,40,Use of inheritance to extend functionality from a base class,,343,    #: ÊúÄÈ´ò‰ª∑,"[220, 220, 220, 1303, 25, 42164, 222, 165, 45865, 20015, 115]"
‚úÖ Best Practice: Use of inheritance to extend functionality from a base class,"[26486, 227, 6705, 19939, 25, 5765, 286, 24155, 284, 9117, 11244, 422, 257, 2779, 1398]",1.0,365,best_practice,42,Use of inheritance to extend functionality from a base class,,354,    #: ÊúÄ‰Ωé‰ª∑,"[220, 220, 220, 1303, 25, 42164, 222, 19526, 236, 20015, 115]"
‚úÖ Best Practice: Class should inherit from a base class to promote code reuse and maintainability,"[26486, 227, 6705, 19939, 25, 5016, 815, 16955, 422, 257, 2779, 1398, 284, 7719, 2438, 32349, 290, 5529, 1799]",0.5,377,best_practice,44,Class should inherit from a base class to promote code reuse and maintainability,,365,    #: Êàê‰∫§Èáè,"[220, 220, 220, 1303, 25, 10545, 230, 238, 12859, 97, 34932, 237]"
"‚úÖ Best Practice: Class attributes are defined using SQLAlchemy's Column, which is a common pattern for ORM models","[26486, 227, 6705, 19939, 25, 5016, 12608, 389, 5447, 1262, 16363, 2348, 26599, 338, 29201, 11, 543, 318, 257, 2219, 3912, 329, 6375, 44, 4981]",0.5,392,best_practice,46,"Class attributes are defined using SQLAlchemy's Column, which is a common pattern for ORM models",,377,    #: Êàê‰∫§ÈáëÈ¢ù,"[220, 220, 220, 1303, 25, 10545, 230, 238, 12859, 97, 34932, 239, 165, 95, 251]"
"‚úÖ Best Practice: Class attributes are defined using SQLAlchemy's Column, which is a common pattern for ORM models","[26486, 227, 6705, 19939, 25, 5016, 12608, 389, 5447, 1262, 16363, 2348, 26599, 338, 29201, 11, 543, 318, 257, 2219, 3912, 329, 6375, 44, 4981]",0.5,404,best_practice,48,"Class attributes are defined using SQLAlchemy's Column, which is a common pattern for ORM models",,392,    #: ÂßîÂçñ‰ª∑,"[220, 220, 220, 1303, 25, 10263, 100, 242, 39355, 244, 20015, 115]"
"‚úÖ Best Practice: Class attributes are defined using SQLAlchemy's Column, which is a common pattern for ORM models","[26486, 227, 6705, 19939, 25, 5016, 12608, 389, 5447, 1262, 16363, 2348, 26599, 338, 29201, 11, 543, 318, 257, 2219, 3912, 329, 6375, 44, 4981]",0.5,416,best_practice,50,"Class attributes are defined using SQLAlchemy's Column, which is a common pattern for ORM models",,404,    #: Âßî‰π∞‰ª∑,"[220, 220, 220, 1303, 25, 10263, 100, 242, 20046, 108, 20015, 115]"
üß† ML Signal: Use of __all__ to define public API of the module,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 11593, 439, 834, 284, 8160, 1171, 7824, 286, 262, 8265]",1.0,428,ml_signal,52,Use of __all__ to define public API of the module,,416,    #: ÂßîÂçñÈáè,"[220, 220, 220, 1303, 25, 10263, 100, 242, 39355, 244, 34932, 237]"
‚ö†Ô∏è SAST Risk (Low): Using wildcard imports can lead to namespace pollution,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 12231]",1.0,428,sast_risk,66,Using wildcard imports can lead to namespace pollution,Low,428,,[]
üß† ML Signal: Use of __all__ to manage namespace exports,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 11593, 439, 834, 284, 6687, 25745, 15319]",0.5,439,ml_signal,68,Use of __all__ to manage namespace exports,,428,class IndexusKdataCommon(KdataCommon):,"[4871, 12901, 385, 42, 7890, 17227, 7, 42, 7890, 17227, 2599]"
üß† ML Signal: Extending __all__ with imported module's __all__,"[8582, 100, 254, 10373, 26484, 25, 5683, 1571, 11593, 439, 834, 351, 17392, 8265, 338, 11593, 439, 834]",0.5,439,ml_signal,70,Extending __all__ with imported module's __all__,,439,,[]
‚ö†Ô∏è SAST Risk (Low): Using wildcard imports can lead to namespace pollution,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 12231]",1.0,450,sast_risk,72,Using wildcard imports can lead to namespace pollution,Low,439,class EtfKdataCommon(KdataCommon):,"[4871, 17906, 69, 42, 7890, 17227, 7, 42, 7890, 17227, 2599]"
üß† ML Signal: Use of __all__ to manage namespace exports,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 11593, 439, 834, 284, 6687, 25745, 15319]",0.5,450,ml_signal,74,Use of __all__ to manage namespace exports,,450,,[]
üß† ML Signal: Extending __all__ with imported module's __all__,"[8582, 100, 254, 10373, 26484, 25, 5683, 1571, 11593, 439, 834, 351, 17392, 8265, 338, 11593, 439, 834]",0.5,463,ml_signal,76,Extending __all__ with imported module's __all__,,450,    cumulative_net_value = Column(Float),"[220, 220, 220, 23818, 62, 3262, 62, 8367, 796, 29201, 7, 43879, 8]"
‚ö†Ô∏è SAST Risk (Low): Using wildcard imports can lead to namespace pollution,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 12231]",1.0,463,sast_risk,78,Using wildcard imports can lead to namespace pollution,Low,463,,[]
üß† ML Signal: Use of __all__ to manage namespace exports,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 11593, 439, 834, 284, 6687, 25745, 15319]",0.5,467,ml_signal,80,Use of __all__ to manage namespace exports,,463,    pass,"[220, 220, 220, 1208]"
üß† ML Signal: Extending __all__ with imported module's __all__,"[8582, 100, 254, 10373, 26484, 25, 5683, 1571, 11593, 439, 834, 351, 17392, 8265, 338, 11593, 439, 834]",0.5,467,ml_signal,82,Extending __all__ with imported module's __all__,,467,,[]
‚ö†Ô∏è SAST Risk (Low): Using wildcard imports can lead to namespace pollution,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 12231]",1.0,471,sast_risk,84,Using wildcard imports can lead to namespace pollution,Low,467,    pass,"[220, 220, 220, 1208]"
üß† ML Signal: Use of __all__ to manage namespace exports,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 11593, 439, 834, 284, 6687, 25745, 15319]",0.5,471,ml_signal,86,Use of __all__ to manage namespace exports,,471,,[]
üß† ML Signal: Extending __all__ with imported module's __all__,"[8582, 100, 254, 10373, 26484, 25, 5683, 1571, 11593, 439, 834, 351, 17392, 8265, 338, 11593, 439, 834]",0.5,475,ml_signal,88,Extending __all__ with imported module's __all__,,471,    pass,"[220, 220, 220, 1208]"
‚ö†Ô∏è SAST Risk (Low): Using wildcard imports can lead to namespace pollution,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 12231]",1.0,475,sast_risk,90,Using wildcard imports can lead to namespace pollution,Low,475,,[]
üß† ML Signal: Use of __all__ to manage namespace exports,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 11593, 439, 834, 284, 6687, 25745, 15319]",0.5,485,ml_signal,92,Use of __all__ to manage namespace exports,,475,class FutureKdataCommon(KdataCommon):,"[4871, 10898, 42, 7890, 17227, 7, 42, 7890, 17227, 2599]"
üß† ML Signal: Extending __all__ with imported module's __all__,"[8582, 100, 254, 10373, 26484, 25, 5683, 1571, 11593, 439, 834, 351, 17392, 8265, 338, 11593, 439, 834]",0.5,494,ml_signal,94,Extending __all__ with imported module's __all__,,485,    interest = Column(Float),"[220, 220, 220, 1393, 796, 29201, 7, 43879, 8]"
‚ö†Ô∏è SAST Risk (Low): Using wildcard imports can lead to namespace pollution,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 12231]",1.0,503,sast_risk,94,Using wildcard imports can lead to namespace pollution,Low,494,    interest = Column(Float),"[220, 220, 220, 1393, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Use of __all__ to manage namespace exports,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 11593, 439, 834, 284, 6687, 25745, 15319]",0.5,512,ml_signal,94,Use of __all__ to manage namespace exports,,503,    interest = Column(Float),"[220, 220, 220, 1393, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Extending __all__ with imported module's __all__,"[8582, 100, 254, 10373, 26484, 25, 5683, 1571, 11593, 439, 834, 351, 17392, 8265, 338, 11593, 439, 834]",0.5,521,ml_signal,94,Extending __all__ with imported module's __all__,,512,    interest = Column(Float),"[220, 220, 220, 1393, 796, 29201, 7, 43879, 8]"
‚ö†Ô∏è SAST Risk (Low): Using wildcard imports can lead to namespace pollution,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 12231]",1.0,530,sast_risk,94,Using wildcard imports can lead to namespace pollution,Low,521,    interest = Column(Float),"[220, 220, 220, 1393, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Use of __all__ to manage namespace exports,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 11593, 439, 834, 284, 6687, 25745, 15319]",0.5,539,ml_signal,94,Use of __all__ to manage namespace exports,,530,    interest = Column(Float),"[220, 220, 220, 1393, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Extending __all__ with imported module's __all__,"[8582, 100, 254, 10373, 26484, 25, 5683, 1571, 11593, 439, 834, 351, 17392, 8265, 338, 11593, 439, 834]",0.5,548,ml_signal,94,Extending __all__ with imported module's __all__,,539,    interest = Column(Float),"[220, 220, 220, 1393, 796, 29201, 7, 43879, 8]"
‚ö†Ô∏è SAST Risk (Low): Using wildcard imports can lead to namespace pollution,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 12231]",1.0,557,sast_risk,94,Using wildcard imports can lead to namespace pollution,Low,548,    interest = Column(Float),"[220, 220, 220, 1393, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Use of __all__ to manage namespace exports,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 11593, 439, 834, 284, 6687, 25745, 15319]",0.5,566,ml_signal,94,Use of __all__ to manage namespace exports,,557,    interest = Column(Float),"[220, 220, 220, 1393, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Extending __all__ with imported module's __all__,"[8582, 100, 254, 10373, 26484, 25, 5683, 1571, 11593, 439, 834, 351, 17392, 8265, 338, 11593, 439, 834]",0.5,575,ml_signal,94,Extending __all__ with imported module's __all__,,566,    interest = Column(Float),"[220, 220, 220, 1393, 796, 29201, 7, 43879, 8]"
‚ö†Ô∏è SAST Risk (Low): Using wildcard imports can lead to namespace pollution,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 12231]",1.0,584,sast_risk,94,Using wildcard imports can lead to namespace pollution,Low,575,    interest = Column(Float),"[220, 220, 220, 1393, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Use of __all__ to manage namespace exports,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 11593, 439, 834, 284, 6687, 25745, 15319]",0.5,593,ml_signal,94,Use of __all__ to manage namespace exports,,584,    interest = Column(Float),"[220, 220, 220, 1393, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Extending __all__ with imported module's __all__,"[8582, 100, 254, 10373, 26484, 25, 5683, 1571, 11593, 439, 834, 351, 17392, 8265, 338, 11593, 439, 834]",0.5,602,ml_signal,94,Extending __all__ with imported module's __all__,,593,    interest = Column(Float),"[220, 220, 220, 1393, 796, 29201, 7, 43879, 8]"
‚ö†Ô∏è SAST Risk (Low): Using wildcard imports can lead to namespace pollution,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 12231]",1.0,611,sast_risk,94,Using wildcard imports can lead to namespace pollution,Low,602,    interest = Column(Float),"[220, 220, 220, 1393, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Use of __all__ to manage namespace exports,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 11593, 439, 834, 284, 6687, 25745, 15319]",0.5,620,ml_signal,94,Use of __all__ to manage namespace exports,,611,    interest = Column(Float),"[220, 220, 220, 1393, 796, 29201, 7, 43879, 8]"
üß† ML Signal: Extending __all__ with imported module's __all__,"[8582, 100, 254, 10373, 26484, 25, 5683, 1571, 11593, 439, 834, 351, 17392, 8265, 338, 11593, 439, 834]",0.5,629,ml_signal,94,Extending __all__ with imported module's __all__,,620,    interest = Column(Float),"[220, 220, 220, 1393, 796, 29201, 7, 43879, 8]"
