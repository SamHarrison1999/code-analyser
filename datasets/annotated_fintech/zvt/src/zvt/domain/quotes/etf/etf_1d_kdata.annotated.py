# -*- coding: utf-8 -*-
# âœ… Best Practice: Grouping imports from the same module together improves readability.
# this file is generated by gen_kdata_schema function, dont't change it
from sqlalchemy.orm import declarative_base

# âœ… Best Practice: Naming convention for classes should follow CamelCase.
from zvt.contract.register import register_schema
from zvt.domain.quotes import EtfKdataCommon

# ðŸ§  ML Signal: Class definition with inheritance, useful for understanding class hierarchies and relationships

# ðŸ§  ML Signal: Function call with specific parameters, useful for understanding API usage patterns
# âœ… Best Practice: Registering schema immediately after class definition for clarity
# âœ… Best Practice: Using __all__ to define public API of the module
KdataBase = declarative_base()


class Etf1dKdata(KdataBase, EtfKdataCommon):
    __tablename__ = "etf_1d_kdata"


register_schema(
    providers=["sina"], db_name="etf_1d_kdata", schema_base=KdataBase, entity_type="etf"
)


# the __all__ is generated
__all__ = ["Etf1dKdata"]
