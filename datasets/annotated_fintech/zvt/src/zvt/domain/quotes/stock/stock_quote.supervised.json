[
  {
    "line": 3,
    "text": "from sqlalchemy.orm import declarative_base",
    "annotation": "\u2705 Best Practice: Grouping related imports together improves readability and maintainability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      44161,
      282,
      26599,
      13,
      579,
      1330,
      2377,
      283,
      876,
      62,
      8692
    ],
    "start_token": 0,
    "end_token": 12,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      3519,
      17944,
      1978,
      19575,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping related imports together improves readability and maintainability."
  },
  {
    "line": 7,
    "text": "from zvt.domain.quotes import StockKdataCommon",
    "annotation": "\u2705 Best Practice: Naming convention for base classes should be consistent and descriptive.",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      27830,
      13,
      421,
      6421,
      1330,
      10500,
      42,
      7890,
      17227
    ],
    "start_token": 12,
    "end_token": 25,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      399,
      3723,
      9831,
      329,
      2779,
      6097,
      815,
      307,
      6414,
      290,
      35644,
      13
    ],
    "label": "best_practice",
    "reason": "Naming convention for base classes should be consistent and descriptive."
  },
  {
    "line": 9,
    "text": "StockQuoteBase = declarative_base()",
    "annotation": "\ud83e\udde0 ML Signal: Use of a string column for 'code' indicates categorical data that could be used for classification tasks.",
    "confidence": 0.5,
    "tokens": [
      26207,
      25178,
      14881,
      796,
      2377,
      283,
      876,
      62,
      8692,
      3419
    ],
    "start_token": 25,
    "end_token": 35,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      4731,
      5721,
      329,
      705,
      8189,
      6,
      9217,
      4253,
      12409,
      1366,
      326,
      714,
      307,
      973,
      329,
      17923,
      8861,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of a string column for 'code' indicates categorical data that could be used for classification tasks."
  },
  {
    "line": 11,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: 'time' as an integer suggests a timestamp, which is often used in time series analysis.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 35,
    "end_token": 35,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      705,
      2435,
      6,
      355,
      281,
      18253,
      5644,
      257,
      41033,
      11,
      543,
      318,
      1690,
      973,
      287,
      640,
      2168,
      3781,
      13
    ],
    "label": "ml_signal",
    "reason": "'time' as an integer suggests a timestamp, which is often used in time series analysis."
  },
  {
    "line": 13,
    "text": "    __tablename__ = \"stock_tick\"",
    "annotation": "\ud83e\udde0 ML Signal: 'lastPrice' as a float is a continuous variable, useful for regression models.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      11593,
      8658,
      11925,
      480,
      834,
      796,
      366,
      13578,
      62,
      42298,
      1
    ],
    "start_token": 35,
    "end_token": 49,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      705,
      12957,
      18124,
      6,
      355,
      257,
      12178,
      318,
      257,
      12948,
      7885,
      11,
      4465,
      329,
      20683,
      4981,
      13
    ],
    "label": "ml_signal",
    "reason": "'lastPrice' as a float is a continuous variable, useful for regression models."
  },
  {
    "line": 15,
    "text": "    code = Column(String(length=32))",
    "annotation": "\ud83e\udde0 ML Signal: 'open', 'high', 'low', 'lastClose', 'amount', 'volume', 'pvolume' are continuous variables, useful for regression models.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2438,
      796,
      29201,
      7,
      10100,
      7,
      13664,
      28,
      2624,
      4008
    ],
    "start_token": 49,
    "end_token": 62,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      705,
      9654,
      3256,
      705,
      8929,
      3256,
      705,
      9319,
      3256,
      705,
      12957,
      26125,
      3256,
      705,
      17287,
      3256,
      705,
      29048,
      3256,
      705,
      79,
      29048,
      6,
      389,
      12948,
      9633,
      11,
      4465,
      329,
      20683,
      4981,
      13
    ],
    "label": "ml_signal",
    "reason": "'open', 'high', 'low', 'lastClose', 'amount', 'volume', 'pvolume' are continuous variables, useful for regression models."
  },
  {
    "line": 23,
    "text": "    open = Column(Float)",
    "annotation": "\ud83e\udde0 ML Signal: Use of JSON columns for 'askPrice', 'askVol', 'bidPrice', 'bidVol' indicates complex data structures, useful for feature extraction.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1280,
      796,
      29201,
      7,
      43879,
      8
    ],
    "start_token": 62,
    "end_token": 71,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      19449,
      15180,
      329,
      705,
      2093,
      18124,
      3256,
      705,
      2093,
      16598,
      3256,
      705,
      14065,
      18124,
      3256,
      705,
      14065,
      16598,
      6,
      9217,
      3716,
      1366,
      8573,
      11,
      4465,
      329,
      3895,
      22236,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of JSON columns for 'askPrice', 'askVol', 'bidPrice', 'bidVol' indicates complex data structures, useful for feature extraction."
  },
  {
    "line": 25,
    "text": "    high = Column(Float)",
    "annotation": "\ud83e\udde0 ML Signal: Use of SQLAlchemy ORM for database interaction",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1029,
      796,
      29201,
      7,
      43879,
      8
    ],
    "start_token": 71,
    "end_token": 80,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      329,
      6831,
      10375
    ],
    "label": "ml_signal",
    "reason": "Use of SQLAlchemy ORM for database interaction"
  },
  {
    "line": 27,
    "text": "    low = Column(Float)",
    "annotation": "\ud83e\udde0 ML Signal: Storing price as a float, indicating financial data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1877,
      796,
      29201,
      7,
      43879,
      8
    ],
    "start_token": 80,
    "end_token": 89,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      520,
      3255,
      2756,
      355,
      257,
      12178,
      11,
      12739,
      3176,
      1366
    ],
    "label": "ml_signal",
    "reason": "Storing price as a float, indicating financial data"
  },
  {
    "line": 29,
    "text": "    lastClose = Column(Float)",
    "annotation": "\ud83e\udde0 ML Signal: Boolean flags for stock limit status",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      938,
      26125,
      796,
      29201,
      7,
      43879,
      8
    ],
    "start_token": 89,
    "end_token": 99,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      41146,
      9701,
      329,
      4283,
      4179,
      3722
    ],
    "label": "ml_signal",
    "reason": "Boolean flags for stock limit status"
  },
  {
    "line": 31,
    "text": "    amount = Column(Float)",
    "annotation": "\ud83e\udde0 ML Signal: Financial threshold values for stock limits",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2033,
      796,
      29201,
      7,
      43879,
      8
    ],
    "start_token": 99,
    "end_token": 108,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11302,
      11387,
      3815,
      329,
      4283,
      7095
    ],
    "label": "ml_signal",
    "reason": "Financial threshold values for stock limits"
  },
  {
    "line": 33,
    "text": "    pvolume = Column(Float)",
    "annotation": "\ud83e\udde0 ML Signal: Boolean flags for stock limit status",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      279,
      29048,
      796,
      29201,
      7,
      43879,
      8
    ],
    "start_token": 108,
    "end_token": 118,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      41146,
      9701,
      329,
      4283,
      4179,
      3722
    ],
    "label": "ml_signal",
    "reason": "Boolean flags for stock limit status"
  },
  {
    "line": 35,
    "text": "    askPrice = Column(JSON)",
    "annotation": "\ud83e\udde0 ML Signal: Financial threshold values for stock limits",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1265,
      18124,
      796,
      29201,
      7,
      40386,
      8
    ],
    "start_token": 118,
    "end_token": 128,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11302,
      11387,
      3815,
      329,
      4283,
      7095
    ],
    "label": "ml_signal",
    "reason": "Financial threshold values for stock limits"
  },
  {
    "line": 37,
    "text": "    bidPrice = Column(JSON)",
    "annotation": "\ud83e\udde0 ML Signal: Financial data related to stock trading",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      8406,
      18124,
      796,
      29201,
      7,
      40386,
      8
    ],
    "start_token": 128,
    "end_token": 138,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11302,
      1366,
      3519,
      284,
      4283,
      7313
    ],
    "label": "ml_signal",
    "reason": "Financial data related to stock trading"
  },
  {
    "line": 39,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Financial data related to stock trading",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 138,
    "end_token": 138,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11302,
      1366,
      3519,
      284,
      4283,
      7313
    ],
    "label": "ml_signal",
    "reason": "Financial data related to stock trading"
  },
  {
    "line": 41,
    "text": "class StockQuote(StockQuoteBase, StockKdataCommon):",
    "annotation": "\ud83e\udde0 ML Signal: Financial metrics for stock valuation",
    "confidence": 0.5,
    "tokens": [
      4871,
      10500,
      25178,
      7,
      26207,
      25178,
      14881,
      11,
      10500,
      42,
      7890,
      17227,
      2599
    ],
    "start_token": 138,
    "end_token": 151,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11302,
      20731,
      329,
      4283,
      29115
    ],
    "label": "ml_signal",
    "reason": "Financial metrics for stock valuation"
  },
  {
    "line": 43,
    "text": "    #: UNIX\u65f6\u95f4\u6233",
    "annotation": "\ud83e\udde0 ML Signal: Financial metrics for stock valuation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      4725,
      10426,
      33768,
      114,
      29785,
      112,
      22755,
      111
    ],
    "start_token": 151,
    "end_token": 164,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11302,
      20731,
      329,
      4283,
      29115
    ],
    "label": "ml_signal",
    "reason": "Financial metrics for stock valuation"
  },
  {
    "line": 36,
    "text": "    askVol = Column(JSON)",
    "annotation": "\u2705 Best Practice: Define __tablename__ to explicitly specify the table name in the database.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1265,
      16598,
      796,
      29201,
      7,
      40386,
      8
    ],
    "start_token": 164,
    "end_token": 174,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      500,
      11593,
      8658,
      11925,
      480,
      834,
      284,
      11777,
      11986,
      262,
      3084,
      1438,
      287,
      262,
      6831,
      13
    ],
    "label": "best_practice",
    "reason": "Define __tablename__ to explicitly specify the table name in the database."
  },
  {
    "line": 38,
    "text": "    bidVol = Column(JSON)",
    "annotation": "\ud83e\udde0 ML Signal: Integer type for time suggests it might be a timestamp.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      8406,
      16598,
      796,
      29201,
      7,
      40386,
      8
    ],
    "start_token": 174,
    "end_token": 184,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      34142,
      2099,
      329,
      640,
      5644,
      340,
      1244,
      307,
      257,
      41033,
      13
    ],
    "label": "ml_signal",
    "reason": "Integer type for time suggests it might be a timestamp."
  },
  {
    "line": 40,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Float type for price indicates it is a continuous value.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 184,
    "end_token": 184,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      48436,
      2099,
      329,
      2756,
      9217,
      340,
      318,
      257,
      12948,
      1988,
      13
    ],
    "label": "ml_signal",
    "reason": "Float type for price indicates it is a continuous value."
  },
  {
    "line": 42,
    "text": "    __tablename__ = \"stock_quote\"",
    "annotation": "\ud83e\udde0 ML Signal: Boolean flags for limit up/down can be used for classification tasks.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      11593,
      8658,
      11925,
      480,
      834,
      796,
      366,
      13578,
      62,
      22708,
      1
    ],
    "start_token": 184,
    "end_token": 198,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      41146,
      9701,
      329,
      4179,
      510,
      14,
      2902,
      460,
      307,
      973,
      329,
      17923,
      8861,
      13
    ],
    "label": "ml_signal",
    "reason": "Boolean flags for limit up/down can be used for classification tasks."
  },
  {
    "line": 44,
    "text": "    time = Column(Integer)",
    "annotation": "\ud83e\udde0 ML Signal: Float type for limit up amount indicates it is a continuous value.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      640,
      796,
      29201,
      7,
      46541,
      8
    ],
    "start_token": 198,
    "end_token": 207,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      48436,
      2099,
      329,
      4179,
      510,
      2033,
      9217,
      340,
      318,
      257,
      12948,
      1988,
      13
    ],
    "label": "ml_signal",
    "reason": "Float type for limit up amount indicates it is a continuous value."
  },
  {
    "line": 46,
    "text": "    price = Column(Float)",
    "annotation": "\ud83e\udde0 ML Signal: Boolean flags for limit up/down can be used for classification tasks.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2756,
      796,
      29201,
      7,
      43879,
      8
    ],
    "start_token": 207,
    "end_token": 216,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      41146,
      9701,
      329,
      4179,
      510,
      14,
      2902,
      460,
      307,
      973,
      329,
      17923,
      8861,
      13
    ],
    "label": "ml_signal",
    "reason": "Boolean flags for limit up/down can be used for classification tasks."
  },
  {
    "line": 48,
    "text": "    is_limit_up = Column(Boolean)",
    "annotation": "\ud83e\udde0 ML Signal: Float type for limit down amount indicates it is a continuous value.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      318,
      62,
      32374,
      62,
      929,
      796,
      29201,
      7,
      46120,
      13087,
      8
    ],
    "start_token": 216,
    "end_token": 230,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      48436,
      2099,
      329,
      4179,
      866,
      2033,
      9217,
      340,
      318,
      257,
      12948,
      1988,
      13
    ],
    "label": "ml_signal",
    "reason": "Float type for limit down amount indicates it is a continuous value."
  },
  {
    "line": 50,
    "text": "    limit_up_amount = Column(Float)",
    "annotation": "\ud83e\udde0 ML Signal: Float type for ask amount indicates it is a continuous value.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      4179,
      62,
      929,
      62,
      17287,
      796,
      29201,
      7,
      43879,
      8
    ],
    "start_token": 230,
    "end_token": 243,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      48436,
      2099,
      329,
      1265,
      2033,
      9217,
      340,
      318,
      257,
      12948,
      1988,
      13
    ],
    "label": "ml_signal",
    "reason": "Float type for ask amount indicates it is a continuous value."
  },
  {
    "line": 52,
    "text": "    is_limit_down = Column(Boolean)",
    "annotation": "\ud83e\udde0 ML Signal: Float type for bid amount indicates it is a continuous value.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      318,
      62,
      32374,
      62,
      2902,
      796,
      29201,
      7,
      46120,
      13087,
      8
    ],
    "start_token": 243,
    "end_token": 257,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      48436,
      2099,
      329,
      8406,
      2033,
      9217,
      340,
      318,
      257,
      12948,
      1988,
      13
    ],
    "label": "ml_signal",
    "reason": "Float type for bid amount indicates it is a continuous value."
  },
  {
    "line": 54,
    "text": "    limit_down_amount = Column(Float)",
    "annotation": "\ud83e\udde0 ML Signal: Float type for float cap indicates it is a continuous value.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      4179,
      62,
      2902,
      62,
      17287,
      796,
      29201,
      7,
      43879,
      8
    ],
    "start_token": 257,
    "end_token": 270,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      48436,
      2099,
      329,
      12178,
      1451,
      9217,
      340,
      318,
      257,
      12948,
      1988,
      13
    ],
    "label": "ml_signal",
    "reason": "Float type for float cap indicates it is a continuous value."
  },
  {
    "line": 56,
    "text": "    ask_amount = Column(Float)",
    "annotation": "\ud83e\udde0 ML Signal: Float type for total cap indicates it is a continuous value.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1265,
      62,
      17287,
      796,
      29201,
      7,
      43879,
      8
    ],
    "start_token": 270,
    "end_token": 281,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      48436,
      2099,
      329,
      2472,
      1451,
      9217,
      340,
      318,
      257,
      12948,
      1988,
      13
    ],
    "label": "ml_signal",
    "reason": "Float type for total cap indicates it is a continuous value."
  },
  {
    "line": 49,
    "text": "    #: \u5c01\u6da8\u505c\u91d1\u989d",
    "annotation": "\ud83e\udde0 ML Signal: Use of a fixed-length string for 'code' suggests a pattern for stock identifiers",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10263,
      108,
      223,
      162,
      114,
      101,
      161,
      223,
      250,
      34932,
      239,
      165,
      95,
      251
    ],
    "start_token": 281,
    "end_token": 300,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      5969,
      12,
      13664,
      4731,
      329,
      705,
      8189,
      6,
      5644,
      257,
      3912,
      329,
      4283,
      42814
    ],
    "label": "ml_signal",
    "reason": "Use of a fixed-length string for 'code' suggests a pattern for stock identifiers"
  },
  {
    "line": 51,
    "text": "    #: \u662f\u5426\u8dcc\u505c",
    "annotation": "\ud83e\udde0 ML Signal: Use of a fixed-length string for 'name' suggests a pattern for stock names",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10545,
      246,
      107,
      28938,
      99,
      164,
      115,
      234,
      161,
      223,
      250
    ],
    "start_token": 300,
    "end_token": 316,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      5969,
      12,
      13664,
      4731,
      329,
      705,
      3672,
      6,
      5644,
      257,
      3912,
      329,
      4283,
      3891
    ],
    "label": "ml_signal",
    "reason": "Use of a fixed-length string for 'name' suggests a pattern for stock names"
  },
  {
    "line": 53,
    "text": "    #: \u5c01\u8dcc\u505c\u91d1\u989d",
    "annotation": "\ud83e\udde0 ML Signal: Use of Integer for 'time' suggests a pattern for timestamp or time representation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10263,
      108,
      223,
      164,
      115,
      234,
      161,
      223,
      250,
      34932,
      239,
      165,
      95,
      251
    ],
    "start_token": 316,
    "end_token": 335,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      34142,
      329,
      705,
      2435,
      6,
      5644,
      257,
      3912,
      329,
      41033,
      393,
      640,
      10552
    ],
    "label": "ml_signal",
    "reason": "Use of Integer for 'time' suggests a pattern for timestamp or time representation"
  },
  {
    "line": 55,
    "text": "    #: 5\u6321\u5356\u5355\u91d1\u989d",
    "annotation": "\ud83e\udde0 ML Signal: Use of Float for 'price' suggests a pattern for financial data representation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      642,
      162,
      234,
      94,
      39355,
      244,
      39355,
      243,
      34932,
      239,
      165,
      95,
      251
    ],
    "start_token": 335,
    "end_token": 353,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      48436,
      329,
      705,
      20888,
      6,
      5644,
      257,
      3912,
      329,
      3176,
      1366,
      10552
    ],
    "label": "ml_signal",
    "reason": "Use of Float for 'price' suggests a pattern for financial data representation"
  },
  {
    "line": 57,
    "text": "    #: 5\u6321\u4e70\u5355\u91d1\u989d",
    "annotation": "\ud83e\udde0 ML Signal: Use of Float for 'avg_price' suggests a pattern for financial data representation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      642,
      162,
      234,
      94,
      20046,
      108,
      39355,
      243,
      34932,
      239,
      165,
      95,
      251
    ],
    "start_token": 353,
    "end_token": 371,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      48436,
      329,
      705,
      615,
      70,
      62,
      20888,
      6,
      5644,
      257,
      3912,
      329,
      3176,
      1366,
      10552
    ],
    "label": "ml_signal",
    "reason": "Use of Float for 'avg_price' suggests a pattern for financial data representation"
  },
  {
    "line": 59,
    "text": "    #: \u6d41\u901a\u5e02\u503c",
    "annotation": "\ud83e\udde0 ML Signal: Use of Float for 'change_pct' suggests a pattern for percentage change representation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10545,
      113,
      223,
      34460,
      248,
      30585,
      224,
      161,
      222,
      120
    ],
    "start_token": 371,
    "end_token": 386,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      48436,
      329,
      705,
      3803,
      62,
      79,
      310,
      6,
      5644,
      257,
      3912,
      329,
      5873,
      1487,
      10552
    ],
    "label": "ml_signal",
    "reason": "Use of Float for 'change_pct' suggests a pattern for percentage change representation"
  },
  {
    "line": 61,
    "text": "    #: \u603b\u5e02\u503c",
    "annotation": "\ud83e\udde0 ML Signal: Use of Float for 'volume' suggests a pattern for financial data representation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10545,
      222,
      119,
      30585,
      224,
      161,
      222,
      120
    ],
    "start_token": 386,
    "end_token": 399,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      48436,
      329,
      705,
      29048,
      6,
      5644,
      257,
      3912,
      329,
      3176,
      1366,
      10552
    ],
    "label": "ml_signal",
    "reason": "Use of Float for 'volume' suggests a pattern for financial data representation"
  },
  {
    "line": 61,
    "text": "    #: \u603b\u5e02\u503c",
    "annotation": "\ud83e\udde0 ML Signal: Use of Float for 'turnover' suggests a pattern for financial data representation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10545,
      222,
      119,
      30585,
      224,
      161,
      222,
      120
    ],
    "start_token": 399,
    "end_token": 412,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      48436,
      329,
      705,
      15344,
      2502,
      6,
      5644,
      257,
      3912,
      329,
      3176,
      1366,
      10552
    ],
    "label": "ml_signal",
    "reason": "Use of Float for 'turnover' suggests a pattern for financial data representation"
  },
  {
    "line": 61,
    "text": "    #: \u603b\u5e02\u503c",
    "annotation": "\ud83e\udde0 ML Signal: Use of Float for 'turnover_rate' suggests a pattern for percentage or rate representation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10545,
      222,
      119,
      30585,
      224,
      161,
      222,
      120
    ],
    "start_token": 412,
    "end_token": 425,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      48436,
      329,
      705,
      15344,
      2502,
      62,
      4873,
      6,
      5644,
      257,
      3912,
      329,
      5873,
      393,
      2494,
      10552
    ],
    "label": "ml_signal",
    "reason": "Use of Float for 'turnover_rate' suggests a pattern for percentage or rate representation"
  },
  {
    "line": 61,
    "text": "    #: \u603b\u5e02\u503c",
    "annotation": "\ud83e\udde0 ML Signal: Use of Boolean for 'is_limit_up' suggests a pattern for binary state representation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10545,
      222,
      119,
      30585,
      224,
      161,
      222,
      120
    ],
    "start_token": 425,
    "end_token": 438,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      41146,
      329,
      705,
      271,
      62,
      32374,
      62,
      929,
      6,
      5644,
      257,
      3912,
      329,
      13934,
      1181,
      10552
    ],
    "label": "ml_signal",
    "reason": "Use of Boolean for 'is_limit_up' suggests a pattern for binary state representation"
  },
  {
    "line": 61,
    "text": "    #: \u603b\u5e02\u503c",
    "annotation": "\ud83e\udde0 ML Signal: Use of Boolean for 'is_limit_down' suggests a pattern for binary state representation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10545,
      222,
      119,
      30585,
      224,
      161,
      222,
      120
    ],
    "start_token": 438,
    "end_token": 451,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      41146,
      329,
      705,
      271,
      62,
      32374,
      62,
      2902,
      6,
      5644,
      257,
      3912,
      329,
      13934,
      1181,
      10552
    ],
    "label": "ml_signal",
    "reason": "Use of Boolean for 'is_limit_down' suggests a pattern for binary state representation"
  },
  {
    "line": 61,
    "text": "    #: \u603b\u5e02\u503c",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential risk if 'register_schema' is not properly validated or sanitized",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10545,
      222,
      119,
      30585,
      224,
      161,
      222,
      120
    ],
    "start_token": 451,
    "end_token": 464,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2526,
      611,
      705,
      30238,
      62,
      15952,
      2611,
      6,
      318,
      407,
      6105,
      31031,
      393,
      5336,
      36951
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential risk if 'register_schema' is not properly validated or sanitized"
  },
  {
    "line": 61,
    "text": "    #: \u603b\u5e02\u503c",
    "annotation": "\u2705 Best Practice: Use of '__all__' to define public API of the module",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10545,
      222,
      119,
      30585,
      224,
      161,
      222,
      120
    ],
    "start_token": 464,
    "end_token": 477,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      705,
      834,
      439,
      834,
      6,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265
    ],
    "label": "best_practice",
    "reason": "Use of '__all__' to define public API of the module"
  }
]