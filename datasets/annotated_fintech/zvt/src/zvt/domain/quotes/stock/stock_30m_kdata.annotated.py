# -*- coding: utf-8 -*-
# ðŸ§  ML Signal: Importing from a specific module indicates usage of ORM patterns
# this file is generated by gen_kdata_schema function, dont't change it
# âœ… Best Practice: Grouping imports from the same module together improves readability
from sqlalchemy.orm import declarative_base

from zvt.contract.register import register_schema
# ðŸ§  ML Signal: Importing a function from a specific module indicates usage of a registration pattern
from zvt.domain.quotes import StockKdataCommon
# ðŸ§  ML Signal: Use of class inheritance to define a database table schema

KdataBase = declarative_base()

# ðŸ§  ML Signal: Registration of schema with multiple data providers
# âœ… Best Practice: Use of __all__ to define public API of the module
# ðŸ§  ML Signal: Importing a class from a specific module indicates usage of domain-specific data models
# ðŸ§  ML Signal: Usage of declarative_base indicates ORM pattern for database models
# âœ… Best Practice: Naming convention for base classes should be clear and descriptive
# âœ… Best Practice: Explicitly specifying providers and database name for schema registration

class Stock30mKdata(KdataBase, StockKdataCommon):
    __tablename__ = "stock_30m_kdata"


register_schema(
    providers=["em", "qmt", "joinquant"], db_name="stock_30m_kdata", schema_base=KdataBase, entity_type="stock"
)


# the __all__ is generated
__all__ = ["Stock30mKdata"]