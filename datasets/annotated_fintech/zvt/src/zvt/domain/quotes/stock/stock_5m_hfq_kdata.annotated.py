# -*- coding: utf-8 -*-
# âœ… Best Practice: Grouping imports from the same module together improves readability.
# this file is generated by gen_kdata_schema function, dont't change it
from sqlalchemy.orm import declarative_base

from zvt.contract.register import register_schema
# ðŸ§  ML Signal: Inheritance from multiple base classes, indicating a pattern of code reuse and extension.
# ðŸ§  ML Signal: Usage of SQLAlchemy's declarative_base indicates ORM pattern.
from zvt.domain.quotes import StockKdataCommon
# ðŸ§  ML Signal: Use of a class attribute to define a database table name, indicating a pattern for ORM usage.

KdataBase = declarative_base()

# ðŸ§  ML Signal: Registration of a schema with multiple providers, indicating a pattern of data source integration.
# âœ… Best Practice: Use of __all__ to define public symbols of the module, improving code readability and maintainability.

class Stock5mHfqKdata(KdataBase, StockKdataCommon):
    __tablename__ = "stock_5m_hfq_kdata"


register_schema(
    providers=["em", "qmt", "joinquant"], db_name="stock_5m_hfq_kdata", schema_base=KdataBase, entity_type="stock"
)


# the __all__ is generated
__all__ = ["Stock5mHfqKdata"]