[
  {
    "line": 2,
    "text": "# this file is generated by gen_kdata_schema function, dont't change it",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 0.5,
    "tokens": [
      2,
      428,
      2393,
      318,
      7560,
      416,
      2429,
      62,
      74,
      7890,
      62,
      15952,
      2611,
      2163,
      11,
      17666,
      470,
      1487,
      340
    ],
    "start_token": 0,
    "end_token": 19,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 5,
    "text": "from zvt.contract.register import register_schema",
    "annotation": "\ud83e\udde0 ML Signal: Usage of SQLAlchemy's declarative_base indicates ORM pattern.",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      28484,
      13,
      30238,
      1330,
      7881,
      62,
      15952,
      2611
    ],
    "start_token": 19,
    "end_token": 31,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      16363,
      2348,
      26599,
      338,
      2377,
      283,
      876,
      62,
      8692,
      9217,
      6375,
      44,
      3912,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of SQLAlchemy's declarative_base indicates ORM pattern."
  },
  {
    "line": 6,
    "text": "from zvt.domain.quotes import StockKdataCommon",
    "annotation": "\ud83e\udde0 ML Signal: Inheritance from KdataBase and StockKdataCommon indicates a pattern of using base classes for shared functionality.",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      27830,
      13,
      421,
      6421,
      1330,
      10500,
      42,
      7890,
      17227
    ],
    "start_token": 31,
    "end_token": 44,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47025,
      42942,
      422,
      509,
      7890,
      14881,
      290,
      10500,
      42,
      7890,
      17227,
      9217,
      257,
      3912,
      286,
      1262,
      2779,
      6097,
      329,
      4888,
      11244,
      13
    ],
    "label": "ml_signal",
    "reason": "Inheritance from KdataBase and StockKdataCommon indicates a pattern of using base classes for shared functionality."
  },
  {
    "line": 7,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of a class attribute to define a table name suggests a pattern for ORM table mapping.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 44,
    "end_token": 44,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      1398,
      11688,
      284,
      8160,
      257,
      3084,
      1438,
      5644,
      257,
      3912,
      329,
      6375,
      44,
      3084,
      16855,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of a class attribute to define a table name suggests a pattern for ORM table mapping."
  },
  {
    "line": 10,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Registration of schema with multiple providers indicates a pattern of supporting multiple data sources.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 44,
    "end_token": 44,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24610,
      286,
      32815,
      351,
      3294,
      9549,
      9217,
      257,
      3912,
      286,
      6493,
      3294,
      1366,
      4237,
      13
    ],
    "label": "ml_signal",
    "reason": "Registration of schema with multiple providers indicates a pattern of supporting multiple data sources."
  },
  {
    "line": 10,
    "text": "",
    "annotation": "\u2705 Best Practice: Explicitly specifying parameters in function calls improves readability and maintainability.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 44,
    "end_token": 44,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11884,
      306,
      31577,
      10007,
      287,
      2163,
      3848,
      19575,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Explicitly specifying parameters in function calls improves readability and maintainability."
  },
  {
    "line": 10,
    "text": "",
    "annotation": "\u2705 Best Practice: Defining __all__ for module exports clarifies the intended public interface of the module.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 44,
    "end_token": 44,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      3191,
      11593,
      439,
      834,
      329,
      8265,
      15319,
      10212,
      6945,
      262,
      5292,
      1171,
      7071,
      286,
      262,
      8265,
      13
    ],
    "label": "best_practice",
    "reason": "Defining __all__ for module exports clarifies the intended public interface of the module."
  }
]