# -*- coding: utf-8 -*-
# âœ… Best Practice: Grouping imports from the same module together improves readability.
# this file is generated by gen_kdata_schema function, dont't change it
from sqlalchemy.orm import declarative_base

from zvt.contract.register import register_schema

# âœ… Best Practice: Naming convention for classes should typically be CamelCase.
from zvt.domain.quotes import StockKdataCommon

# ðŸ§  ML Signal: Use of class inheritance to define a database table schema

KdataBase = declarative_base()

# âœ… Best Practice: Use of __all__ to define public API of the module
# ðŸ§  ML Signal: Registration of schema with multiple data providers
# âœ… Best Practice: Use of a function to register schema enhances modularity and reusability


class Stock1hKdata(KdataBase, StockKdataCommon):
    __tablename__ = "stock_1h_kdata"


register_schema(
    providers=["em", "qmt", "joinquant"],
    db_name="stock_1h_kdata",
    schema_base=KdataBase,
    entity_type="stock",
)


# the __all__ is generated
__all__ = ["Stock1hKdata"]
