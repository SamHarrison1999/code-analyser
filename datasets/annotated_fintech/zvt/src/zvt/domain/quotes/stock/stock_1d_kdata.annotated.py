# -*- coding: utf-8 -*-
# âœ… Best Practice: Grouping imports from the same module together improves readability.
# this file is generated by gen_kdata_schema function, dont't change it
from sqlalchemy.orm import declarative_base

# âœ… Best Practice: Using a descriptive variable name for the base class improves code readability.
from zvt.contract.register import register_schema
from zvt.domain.quotes import StockKdataCommon
# ðŸ§  ML Signal: Use of class inheritance to extend functionality
# âœ… Best Practice: Use of class-level variable for table name improves maintainability

KdataBase = declarative_base()

# ðŸ§  ML Signal: Registration of schema with multiple providers indicates extensibility
# âœ… Best Practice: Use of a function to register schema promotes modularity and reusability
# âœ… Best Practice: Use of __all__ to define public API of the module

class Stock1dKdata(KdataBase, StockKdataCommon):
    __tablename__ = "stock_1d_kdata"


register_schema(
    providers=["em", "qmt", "joinquant"], db_name="stock_1d_kdata", schema_base=KdataBase, entity_type="stock"
)


# the __all__ is generated
__all__ = ["Stock1dKdata"]