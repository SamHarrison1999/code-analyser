# -*- coding: utf-8 -*-
# ðŸ§  ML Signal: Importing custom modules indicates specific domain usage patterns
# this file is generated by gen_kdata_schema function, dont't change it
from sqlalchemy.orm import declarative_base

# ðŸ§  ML Signal: Importing custom modules indicates specific domain usage patterns

from zvt.contract.register import register_schema

# ðŸ§  ML Signal: Usage of declarative_base indicates ORM pattern
# âœ… Best Practice: Use of class-level variable for table name improves maintainability and readability.
from zvt.domain.quotes import StockKdataCommon

KdataBase = declarative_base()

# ðŸ§  ML Signal: Registration of schema with specific providers and database name indicates usage patterns for data storage.
# âœ… Best Practice: Defining __all__ helps in controlling the import of module components.


class Stock1mKdata(KdataBase, StockKdataCommon):
    __tablename__ = "stock_1m_kdata"


register_schema(
    providers=["em", "qmt", "joinquant"],
    db_name="stock_1m_kdata",
    schema_base=KdataBase,
    entity_type="stock",
)


# the __all__ is generated
__all__ = ["Stock1mKdata"]
