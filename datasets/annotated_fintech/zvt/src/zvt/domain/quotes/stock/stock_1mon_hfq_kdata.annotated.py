# -*- coding: utf-8 -*-
# âœ… Best Practice: Grouping imports from the same module together improves readability.
# this file is generated by gen_kdata_schema function, dont't change it
from sqlalchemy.orm import declarative_base

from zvt.contract.register import register_schema
# ðŸ§  ML Signal: Inheritance from multiple classes indicates a pattern of code reuse and polymorphism.
# âœ… Best Practice: Using a descriptive variable name for the base class improves code readability.
from zvt.domain.quotes import StockKdataCommon
# ðŸ§  ML Signal: Use of a class attribute to define a table name suggests a pattern for ORM usage.

KdataBase = declarative_base()

# ðŸ§  ML Signal: Registration of schema with multiple providers indicates a pattern of data source integration.
# âœ… Best Practice: Use of keyword arguments improves code readability and maintainability.
# âœ… Best Practice: Defining __all__ for module exports improves code clarity and controls namespace exposure.

class Stock1monHfqKdata(KdataBase, StockKdataCommon):
    __tablename__ = "stock_1mon_hfq_kdata"


register_schema(
    providers=["em", "qmt", "joinquant"], db_name="stock_1mon_hfq_kdata", schema_base=KdataBase, entity_type="stock"
)


# the __all__ is generated
__all__ = ["Stock1monHfqKdata"]