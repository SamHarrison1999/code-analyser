# -*- coding: utf-8 -*-
# âœ… Best Practice: Grouping imports from the same module together improves readability.
# this file is generated by gen_kdata_schema function, dont't change it
from sqlalchemy.orm import declarative_base

# ðŸ§  ML Signal: Usage of SQLAlchemy's declarative_base indicates ORM pattern.
from zvt.contract.register import register_schema
# ðŸ§  ML Signal: Inheritance from multiple classes, indicating a use of multiple behaviors or interfaces.
from zvt.domain.quotes import IndexusKdataCommon

# ðŸ§  ML Signal: Use of a class attribute to define a database table name, indicating ORM usage.
# ðŸ§  ML Signal: Function call with specific parameters, indicating a pattern for schema registration.
# âœ… Best Practice: Explicitly specifying parameters in function calls improves readability and maintainability.
# âœ… Best Practice: Use of __all__ to define public symbols of the module, improving code clarity and module interface management.
KdataBase = declarative_base()


class Indexus1dKdata(KdataBase, IndexusKdataCommon):
    __tablename__ = "indexus_1d_kdata"


register_schema(providers=["em"], db_name="indexus_1d_kdata", schema_base=KdataBase, entity_type="indexus")


# the __all__ is generated
__all__ = ["Indexus1dKdata"]