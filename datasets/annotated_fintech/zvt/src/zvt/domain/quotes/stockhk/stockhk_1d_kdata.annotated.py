# -*- coding: utf-8 -*-
# ðŸ§  ML Signal: Importing from a specific module indicates usage of a custom library or framework
# this file is generated by gen_kdata_schema function, dont't change it
from sqlalchemy.orm import declarative_base

# ðŸ§  ML Signal: Importing from a specific module indicates usage of a custom library or framework

from zvt.contract.register import register_schema

# ðŸ§  ML Signal: Usage of declarative_base indicates ORM pattern
# ðŸ§  ML Signal: Inheritance from multiple classes indicates a pattern of code reuse and polymorphism.
from zvt.domain.quotes import StockhkKdataCommon

# ðŸ§  ML Signal: Use of class attribute to define table name suggests a pattern for ORM usage.
# ðŸ§  ML Signal: Function call with specific parameters indicates a pattern for database schema registration.
# âœ… Best Practice: Explicitly specifying parameters in function calls improves code readability and maintainability.
# âœ… Best Practice: Defining __all__ for module exports improves code clarity and controls the public API.
KdataBase = declarative_base()


class Stockhk1dKdata(KdataBase, StockhkKdataCommon):
    __tablename__ = "stockhk_1d_kdata"


register_schema(
    providers=["em"],
    db_name="stockhk_1d_kdata",
    schema_base=KdataBase,
    entity_type="stockhk",
)


# the __all__ is generated
__all__ = ["Stockhk1dKdata"]
