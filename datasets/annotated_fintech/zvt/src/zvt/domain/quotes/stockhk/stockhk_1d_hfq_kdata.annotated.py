# -*- coding: utf-8 -*-
# âœ… Best Practice: Grouping imports from the same module together improves readability.
# this file is generated by gen_kdata_schema function, dont't change it
from sqlalchemy.orm import declarative_base

# âœ… Best Practice: Using a descriptive variable name for the base class improves code readability.
from zvt.contract.register import register_schema
from zvt.domain.quotes import StockhkKdataCommon

# ðŸ§  ML Signal: Use of class inheritance to extend functionality

# âœ… Best Practice: Use of __all__ to define public API of the module
# âœ… Best Practice: Use of class-level variable for table name improves maintainability
# ðŸ§  ML Signal: Registration pattern for schemas with specific providers and database names
# âœ… Best Practice: Explicitly specifying parameters in function calls improves readability
KdataBase = declarative_base()


class Stockhk1dHfqKdata(KdataBase, StockhkKdataCommon):
    __tablename__ = "stockhk_1d_hfq_kdata"


register_schema(
    providers=["em"],
    db_name="stockhk_1d_hfq_kdata",
    schema_base=KdataBase,
    entity_type="stockhk",
)


# the __all__ is generated
__all__ = ["Stockhk1dHfqKdata"]
