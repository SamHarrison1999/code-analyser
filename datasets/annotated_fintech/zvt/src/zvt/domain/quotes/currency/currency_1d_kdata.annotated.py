# -*- coding: utf-8 -*-
# 🧠 ML Signal: Importing specific functions or classes from modules
# this file is generated by gen_kdata_schema function, dont't change it
from sqlalchemy.orm import declarative_base

# 🧠 ML Signal: Importing specific functions or classes from modules

from zvt.contract.register import register_schema

# 🧠 ML Signal: Inheritance from multiple base classes indicates a pattern of code reuse and polymorphism.
# 🧠 ML Signal: Assigning a base class for ORM models
from zvt.domain.quotes import CurrencyKdataCommon

# 🧠 ML Signal: Use of a class attribute to define a database table name suggests a pattern for ORM usage.
# 🧠 ML Signal: Function call to register a schema indicates a pattern of dynamic schema registration.
# ⚠️ SAST Risk (Low): Ensure that the parameters passed to register_schema are validated to prevent injection attacks.
# 🧠 ML Signal: Use of __all__ to define public API of the module suggests a pattern for controlled module exports.
KdataBase = declarative_base()


class Currency1dKdata(KdataBase, CurrencyKdataCommon):
    __tablename__ = "currency_1d_kdata"


register_schema(
    providers=["em"],
    db_name="currency_1d_kdata",
    schema_base=KdataBase,
    entity_type="currency",
)


# the __all__ is generated
__all__ = ["Currency1dKdata"]
