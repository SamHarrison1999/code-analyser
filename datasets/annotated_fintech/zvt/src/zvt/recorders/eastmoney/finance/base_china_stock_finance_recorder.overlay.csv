annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
üß† ML Signal: Importing specific functions from a module indicates usage patterns,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 5499, 422, 257, 8265, 9217, 8748, 7572]",0.5,0,ml_signal,2,Importing specific functions from a module indicates usage patterns,,0,,[]
‚ö†Ô∏è SAST Risk (Low): Ensure the imported functions are from a trusted source,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 262, 17392, 5499, 389, 422, 257, 13467, 2723]",0.5,19,sast_risk,3,Ensure the imported functions are from a trusted source,Low,0,"from jqdatapy.api import get_fundamentals, get_query_count","[6738, 474, 80, 19608, 12826, 13, 15042, 1330, 651, 62, 10990, 3263, 874, 11, 651, 62, 22766, 62, 9127]"
üß† ML Signal: Importing specific functions from a module indicates usage patterns,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 5499, 422, 257, 8265, 9217, 8748, 7572]",0.5,34,ml_signal,5,Importing specific functions from a module indicates usage patterns,,19,from zvt.api.utils import to_report_period_type,"[6738, 1976, 36540, 13, 15042, 13, 26791, 1330, 284, 62, 13116, 62, 41007, 62, 4906]"
üß† ML Signal: Importing specific functions from a module indicates usage patterns,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 5499, 422, 257, 8265, 9217, 8748, 7572]",0.5,49,ml_signal,5,Importing specific functions from a module indicates usage patterns,,34,from zvt.api.utils import to_report_period_type,"[6738, 1976, 36540, 13, 15042, 13, 26791, 1330, 284, 62, 13116, 62, 41007, 62, 4906]"
üß† ML Signal: Importing specific classes from a module indicates usage patterns,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 6097, 422, 257, 8265, 9217, 8748, 7572]",0.5,59,ml_signal,12,Importing specific classes from a module indicates usage patterns,,49,"    call_eastmoney_api,","[220, 220, 220, 869, 62, 23316, 26316, 62, 15042, 11]"
üß† ML Signal: Importing multiple specific functions and classes indicates usage patterns,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 3294, 2176, 5499, 290, 6097, 9217, 8748, 7572]",0.5,77,ml_signal,17,Importing multiple specific functions and classes indicates usage patterns,,59,from zvt.utils.pd_utils import pd_is_not_null,"[6738, 1976, 36540, 13, 26791, 13, 30094, 62, 26791, 1330, 279, 67, 62, 271, 62, 1662, 62, 8423]"
‚ö†Ô∏è SAST Risk (Low): Ensure the imported functions and classes are from a trusted source,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 262, 17392, 5499, 290, 6097, 389, 422, 257, 13467, 2723]",0.5,99,sast_risk,18,Ensure the imported functions and classes are from a trusted source,Low,77,"from zvt.utils.time_utils import to_time_str, to_pd_timestamp","[6738, 1976, 36540, 13, 26791, 13, 2435, 62, 26791, 1330, 284, 62, 2435, 62, 2536, 11, 284, 62, 30094, 62, 16514, 27823]"
üß† ML Signal: Importing specific functions from a module indicates usage patterns,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 5499, 422, 257, 8265, 9217, 8748, 7572]",0.5,99,ml_signal,20,Importing specific functions from a module indicates usage patterns,,99,,[]
üß† ML Signal: Importing specific functions from a module indicates usage patterns,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 5499, 422, 257, 8265, 9217, 8748, 7572]",0.5,116,ml_signal,22,Importing specific functions from a module indicates usage patterns,,99,    the_date = to_pd_timestamp(timestamp),"[220, 220, 220, 262, 62, 4475, 796, 284, 62, 30094, 62, 16514, 27823, 7, 16514, 27823, 8]"
üß† ML Signal: Importing specific functions from a module indicates usage patterns,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 5499, 422, 257, 8265, 9217, 8748, 7572]",0.5,132,ml_signal,24,Importing specific functions from a module indicates usage patterns,,116,    if report_period == ReportPeriod.year.value:,"[220, 220, 220, 611, 989, 62, 41007, 6624, 6358, 5990, 2101, 13, 1941, 13, 8367, 25]"
üß† ML Signal: Importing specific functions from a module indicates usage patterns,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 5499, 422, 257, 8265, 9217, 8748, 7572]",0.5,149,ml_signal,26,Importing specific functions from a module indicates usage patterns,,132,    if report_period == ReportPeriod.season1.value:,"[220, 220, 220, 611, 989, 62, 41007, 6624, 6358, 5990, 2101, 13, 6230, 16, 13, 8367, 25]"
‚úÖ Best Practice: Consider adding a docstring to describe the function's purpose and parameters.,"[26486, 227, 6705, 19939, 25, 12642, 4375, 257, 2205, 8841, 284, 6901, 262, 2163, 338, 4007, 290, 10007, 13]",1.0,162,best_practice,16,Consider adding a docstring to describe the function's purpose and parameters.,,149,from zvt.utils.pd_utils import index_df,"[6738, 1976, 36540, 13, 26791, 13, 30094, 62, 26791, 1330, 6376, 62, 7568]"
‚úÖ Best Practice: Consider adding error handling for the to_pd_timestamp function.,"[26486, 227, 6705, 19939, 25, 12642, 4375, 4049, 9041, 329, 262, 284, 62, 30094, 62, 16514, 27823, 2163, 13]",0.5,184,best_practice,18,Consider adding error handling for the to_pd_timestamp function.,,162,"from zvt.utils.time_utils import to_time_str, to_pd_timestamp","[6738, 1976, 36540, 13, 26791, 13, 2435, 62, 26791, 1330, 284, 62, 2435, 62, 2536, 11, 284, 62, 30094, 62, 16514, 27823]"
‚úÖ Best Practice: Consider adding error handling for the to_report_period_type function.,"[26486, 227, 6705, 19939, 25, 12642, 4375, 4049, 9041, 329, 262, 284, 62, 13116, 62, 41007, 62, 4906, 2163, 13]",0.5,184,best_practice,20,Consider adding error handling for the to_report_period_type function.,,184,,[]
‚úÖ Best Practice: Use elif for mutually exclusive conditions to improve readability.,"[26486, 227, 6705, 19939, 25, 5765, 1288, 361, 329, 26519, 8568, 3403, 284, 2987, 1100, 1799, 13]",1.0,201,best_practice,22,Use elif for mutually exclusive conditions to improve readability.,,184,    the_date = to_pd_timestamp(timestamp),"[220, 220, 220, 262, 62, 4475, 796, 284, 62, 30094, 62, 16514, 27823, 7, 16514, 27823, 8]"
‚úÖ Best Practice: Use elif for mutually exclusive conditions to improve readability.,"[26486, 227, 6705, 19939, 25, 5765, 1288, 361, 329, 26519, 8568, 3403, 284, 2987, 1100, 1799, 13]",1.0,220,best_practice,25,Use elif for mutually exclusive conditions to improve readability.,,201,"        return ""{}"".format(the_date.year)","[220, 220, 220, 220, 220, 220, 220, 1441, 45144, 92, 1911, 18982, 7, 1169, 62, 4475, 13, 1941, 8]"
‚úÖ Best Practice: Use elif for mutually exclusive conditions to improve readability.,"[26486, 227, 6705, 19939, 25, 5765, 1288, 361, 329, 26519, 8568, 3403, 284, 2987, 1100, 1799, 13]",1.0,238,best_practice,28,Use elif for mutually exclusive conditions to improve readability.,,220,    if report_period == ReportPeriod.half_year.value:,"[220, 220, 220, 611, 989, 62, 41007, 6624, 6358, 5990, 2101, 13, 13959, 62, 1941, 13, 8367, 25]"
‚úÖ Best Practice: Use elif for mutually exclusive conditions to improve readability.,"[26486, 227, 6705, 19939, 25, 5765, 1288, 361, 329, 26519, 8568, 3403, 284, 2987, 1100, 1799, 13]",1.0,259,best_practice,31,Use elif for mutually exclusive conditions to improve readability.,,238,"        return ""{}q3"".format(the_date.year)","[220, 220, 220, 220, 220, 220, 220, 1441, 45144, 92, 80, 18, 1911, 18982, 7, 1169, 62, 4475, 13, 1941, 8]"
‚ö†Ô∏è SAST Risk (Low): Using assert for control flow can be risky in production code as it may be disabled with optimization.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 6818, 329, 1630, 5202, 460, 307, 17564, 287, 3227, 2438, 355, 340, 743, 307, 10058, 351, 23989, 13]",1.0,259,sast_risk,34,Using assert for control flow can be risky in production code as it may be disabled with optimization.,Low,259,,[]
"üß† ML Signal: Class definition for a recorder, indicating a pattern for data recording","[8582, 100, 254, 10373, 26484, 25, 5016, 6770, 329, 257, 38156, 11, 12739, 257, 3912, 329, 1366, 8296]",0.5,277,ml_signal,28,"Class definition for a recorder, indicating a pattern for data recording",,259,    if report_period == ReportPeriod.half_year.value:,"[220, 220, 220, 611, 989, 62, 41007, 6624, 6358, 5990, 2101, 13, 13959, 62, 1941, 13, 8367, 25]"
üß† ML Signal: Class attribute indicating a specific type of finance report,"[8582, 100, 254, 10373, 26484, 25, 5016, 11688, 12739, 257, 2176, 2099, 286, 9604, 989]",0.5,294,ml_signal,30,Class attribute indicating a specific type of finance report,,277,    if report_period == ReportPeriod.season3.value:,"[220, 220, 220, 611, 989, 62, 41007, 6624, 6358, 5990, 2101, 13, 6230, 18, 13, 8367, 25]"
üß† ML Signal: Class attribute indicating a specific data type,"[8582, 100, 254, 10373, 26484, 25, 5016, 11688, 12739, 257, 2176, 1366, 2099]",0.5,294,ml_signal,32,Class attribute indicating a specific data type,,294,,[]
"üß† ML Signal: URL pattern for fetching timestamps, useful for identifying data sources","[8582, 100, 254, 10373, 26484, 25, 10289, 3912, 329, 21207, 278, 4628, 395, 9430, 11, 4465, 329, 13720, 1366, 4237]",0.5,294,ml_signal,34,"URL pattern for fetching timestamps, useful for identifying data sources",,294,,[]
"üß† ML Signal: Path fields for extracting timestamp list, indicating data structure","[8582, 100, 254, 10373, 26484, 25, 10644, 7032, 329, 37895, 41033, 1351, 11, 12739, 1366, 4645]",0.5,294,ml_signal,34,"Path fields for extracting timestamp list, indicating data structure",,294,,[]
"üß† ML Signal: Path fields for extracting individual timestamps, indicating data structure","[8582, 100, 254, 10373, 26484, 25, 10644, 7032, 329, 37895, 1981, 4628, 395, 9430, 11, 12739, 1366, 4645]",0.5,294,ml_signal,34,"Path fields for extracting individual timestamps, indicating data structure",,294,,[]
‚úÖ Best Practice: Explicitly call the superclass's __init__ method to ensure proper initialization.,"[26486, 227, 6705, 19939, 25, 11884, 306, 869, 262, 2208, 4871, 338, 11593, 15003, 834, 2446, 284, 4155, 1774, 37588, 13]",1.0,305,best_practice,49,Explicitly call the superclass's __init__ method to ensure proper initialization.,,294,"        code=None,","[220, 220, 220, 220, 220, 220, 220, 2438, 28, 14202, 11]"
"üß† ML Signal: Logging usage pattern, capturing query count information.","[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 8748, 3912, 11, 21430, 12405, 954, 1321, 13]",0.5,318,ml_signal,65,"Logging usage pattern, capturing query count information.",,305,"            code,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2438, 11]"
‚ö†Ô∏è SAST Risk (Low): Catching a broad exception without specific handling.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 327, 19775, 257, 3154, 6631, 1231, 2176, 9041, 13]",0.5,339,sast_risk,71,Catching a broad exception without specific handling.,Low,318,"            end_timestamp=end_timestamp,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 886, 62, 16514, 27823, 28, 437, 62, 16514, 27823, 11]"
"üß† ML Signal: Logging usage pattern, capturing warning messages.","[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 8748, 3912, 11, 21430, 6509, 6218, 13]",0.5,360,ml_signal,71,"Logging usage pattern, capturing warning messages.",,339,"            end_timestamp=end_timestamp,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 886, 62, 16514, 27823, 28, 437, 62, 16514, 27823, 11]"
‚úÖ Best Practice: Consider adding a docstring to describe the purpose and usage of the function.,"[26486, 227, 6705, 19939, 25, 12642, 4375, 257, 2205, 8841, 284, 6901, 262, 4007, 290, 8748, 286, 262, 2163, 13]",0.5,381,best_practice,71,Consider adding a docstring to describe the purpose and usage of the function.,,360,"            end_timestamp=end_timestamp,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 886, 62, 16514, 27823, 28, 437, 62, 16514, 27823, 11]"
üß† ML Signal: Usage of dictionary to store parameters for API call.,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 22155, 284, 3650, 10007, 329, 7824, 869, 13]",1.0,381,ml_signal,73,Usage of dictionary to store parameters for API call.,,381,,[]
‚úÖ Best Practice: Use 'in' for multiple comparisons to improve readability.,"[26486, 227, 6705, 19939, 25, 5765, 705, 259, 6, 329, 3294, 17909, 284, 2987, 1100, 1799, 13]",0.5,415,best_practice,75,Use 'in' for multiple comparisons to improve readability.,,381,"            self.logger.info(f""joinquant query count:{get_query_count()}"")","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 6404, 1362, 13, 10951, 7, 69, 1, 7639, 18934, 415, 12405, 954, 29164, 1136, 62, 22766, 62, 9127, 3419, 92, 4943]"
üß† ML Signal: Pattern of calling an external API with specific parameters.,"[8582, 100, 254, 10373, 26484, 25, 23939, 286, 4585, 281, 7097, 7824, 351, 2176, 10007, 13]",0.5,438,ml_signal,78,Pattern of calling an external API with specific parameters.,,415,            self.fetch_jq_timestamp = False,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 69, 7569, 62, 73, 80, 62, 16514, 27823, 796, 10352]"
‚ö†Ô∏è SAST Risk (Low): Potential KeyError if 'self.timestamp_path_fields' is not set.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 7383, 12331, 611, 705, 944, 13, 16514, 27823, 62, 6978, 62, 25747, 6, 318, 407, 900, 13]",0.5,438,sast_risk,82,Potential KeyError if 'self.timestamp_path_fields' is not set.,Low,438,,[]
üß† ML Signal: Usage of list comprehension to transform data.,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 1351, 35915, 284, 6121, 1366, 13]",1.0,452,ml_signal,83,Usage of list comprehension to transform data.,,438,"    def init_timestamps(self, entity):","[220, 220, 220, 825, 2315, 62, 16514, 395, 9430, 7, 944, 11, 9312, 2599]"
‚ö†Ô∏è SAST Risk (Low): Potential UnboundLocalError if 'timestamps' is not initialized.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 791, 7784, 14565, 12331, 611, 705, 16514, 395, 9430, 6, 318, 407, 23224, 13]",0.5,466,sast_risk,83,Potential UnboundLocalError if 'timestamps' is not initialized.,Low,452,"    def init_timestamps(self, entity):","[220, 220, 220, 825, 2315, 62, 16514, 395, 9430, 7, 944, 11, 9312, 2599]"
üß† ML Signal: Conditional logic based on the length of a list,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9156, 1912, 319, 262, 4129, 286, 257, 1351]",1.0,466,ml_signal,82,Conditional logic based on the length of a list,,466,,[]
üß† ML Signal: Function call with a specific parameter,"[8582, 100, 254, 10373, 26484, 25, 15553, 869, 351, 257, 2176, 11507]",0.5,480,ml_signal,83,Function call with a specific parameter,,466,"    def init_timestamps(self, entity):","[220, 220, 220, 825, 2315, 62, 16514, 395, 9430, 7, 944, 11, 9312, 2599]"
üß† ML Signal: Function call with a specific parameter,"[8582, 100, 254, 10373, 26484, 25, 15553, 869, 351, 257, 2176, 11507]",0.5,480,ml_signal,92,Function call with a specific parameter,,480,,[]
üß† ML Signal: Function call with a specific parameter,"[8582, 100, 254, 10373, 26484, 25, 15553, 869, 351, 257, 2176, 11507]",0.5,494,ml_signal,100,Function call with a specific parameter,,480,            param = {,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 5772, 796, 1391]"
üß† ML Signal: Function call with a specific parameter,"[8582, 100, 254, 10373, 26484, 25, 15553, 869, 351, 257, 2176, 11507]",0.5,508,ml_signal,100,Function call with a specific parameter,,494,            param = {,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 5772, 796, 1391]"
üß† ML Signal: Conversion of a list element to a string,"[8582, 100, 254, 10373, 26484, 25, 44101, 286, 257, 1351, 5002, 284, 257, 4731]",1.0,534,ml_signal,102,Conversion of a list element to a string,,508,"                ""fc"": get_fc(security_item),","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 366, 16072, 1298, 651, 62, 16072, 7, 12961, 62, 9186, 828]"
üß† ML Signal: Conditional logic based on string comparison,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9156, 1912, 319, 4731, 7208]",0.5,555,ml_signal,106,Conditional logic based on string comparison,,534,"                ""endDate"": """",","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 366, 437, 10430, 1298, 366, 1600]"
üß† ML Signal: Function definition with a parameter indicates a pattern for function usage,"[8582, 100, 254, 10373, 26484, 25, 15553, 6770, 351, 257, 11507, 9217, 257, 3912, 329, 2163, 8748]",0.5,585,ml_signal,103,Function definition with a parameter indicates a pattern for function usage,,555,"                ""corpType"": company_type_flag(security_item),","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 366, 10215, 79, 6030, 1298, 1664, 62, 4906, 62, 32109, 7, 12961, 62, 9186, 828]"
üß† ML Signal: Usage of a helper function to determine company type,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 31904, 2163, 284, 5004, 1664, 2099]",0.5,607,ml_signal,105,Usage of a helper function to determine company type,,585,"                ""reportDateType"": 0,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 366, 13116, 10430, 6030, 1298, 657, 11]"
üß† ML Signal: Conditional logic based on company type,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9156, 1912, 319, 1664, 2099]",1.0,628,ml_signal,107,Conditional logic based on company type,,607,"                ""latestCount"": size,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 366, 42861, 12332, 1298, 2546, 11]"
‚úÖ Best Practice: Using format for string formatting improves readability,"[26486, 227, 6705, 19939, 25, 8554, 5794, 329, 4731, 33313, 19575, 1100, 1799]",0.5,637,best_practice,109,Using format for string formatting improves readability,,628,        else:,"[220, 220, 220, 220, 220, 220, 220, 2073, 25]"
‚úÖ Best Practice: Using format for string formatting improves readability,"[26486, 227, 6705, 19939, 25, 8554, 5794, 329, 4731, 33313, 19575, 1100, 1799]",0.5,663,best_practice,112,Using format for string formatting improves readability,,637,"                ""fc"": get_fc(security_item),","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 366, 16072, 1298, 651, 62, 16072, 7, 12961, 62, 9186, 828]"
‚úÖ Best Practice: Using format for string formatting improves readability,"[26486, 227, 6705, 19939, 25, 8554, 5794, 329, 4731, 33313, 19575, 1100, 1799]",0.5,685,best_practice,115,Using format for string formatting improves readability,,663,"                ""reportDateType"": 0,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 366, 13116, 10430, 6030, 1298, 657, 11]"
‚úÖ Best Practice: Using format for string formatting improves readability,"[26486, 227, 6705, 19939, 25, 8554, 5794, 329, 4731, 33313, 19575, 1100, 1799]",0.5,697,best_practice,118,Using format for string formatting improves readability,,685,            },"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1782]"
‚úÖ Best Practice: Consider adding type hints for better code readability and maintainability,"[26486, 227, 6705, 19939, 25, 12642, 4375, 2099, 20269, 329, 1365, 2438, 1100, 1799, 290, 5529, 1799]",0.5,727,best_practice,113,Consider adding type hints for better code readability and maintainability,,697,"                ""corpType"": company_type_flag(security_item),","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 366, 10215, 79, 6030, 1298, 1664, 62, 4906, 62, 32109, 7, 12961, 62, 9186, 828]"
üß† ML Signal: Usage of a method to generate request parameters,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2446, 284, 7716, 2581, 10007]",0.5,749,ml_signal,115,Usage of a method to generate request parameters,,727,"                ""reportDateType"": 0,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 366, 13116, 10430, 6030, 1298, 657, 11]"
üß† ML Signal: Logging request parameters for debugging or monitoring,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 2581, 10007, 329, 28769, 393, 9904]",0.5,780,ml_signal,116,Logging request parameters for debugging or monitoring,,749,"                ""endDate"": to_time_str(timestamps[10]),","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 366, 437, 10430, 1298, 284, 62, 2435, 62, 2536, 7, 16514, 395, 9430, 58, 940, 46570]"
‚ö†Ô∏è SAST Risk (Low): Potential information exposure in logs if sensitive data is included in param,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 1321, 7111, 287, 17259, 611, 8564, 1366, 318, 3017, 287, 5772]",0.5,780,sast_risk,119,Potential information exposure in logs if sensitive data is included in param,Low,780,,[]
üß† ML Signal: Usage of a URL and method for making API requests,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 10289, 290, 2446, 329, 1642, 7824, 7007]",0.5,798,ml_signal,121,Usage of a URL and method for making API requests,,780,"            param[""reportType""] = 1","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 5772, 14692, 13116, 6030, 8973, 796, 352]"
‚ö†Ô∏è SAST Risk (Medium): Ensure that the API request handles exceptions and errors properly,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 48987, 326, 262, 7824, 2581, 17105, 13269, 290, 8563, 6105]",0.5,807,sast_risk,123,Ensure that the API request handles exceptions and errors properly,Medium,798,        return param,"[220, 220, 220, 220, 220, 220, 220, 1441, 5772]"
‚úÖ Best Practice: Method name is descriptive and follows naming conventions,"[26486, 227, 6705, 19939, 25, 11789, 1438, 318, 35644, 290, 5679, 19264, 21396]",0.5,807,best_practice,119,Method name is descriptive and follows naming conventions,,807,,[]
‚úÖ Best Practice: Returning a hardcoded string is simple and efficient for constant values,"[26486, 227, 6705, 19939, 25, 42882, 257, 1327, 40976, 4731, 318, 2829, 290, 6942, 329, 6937, 3815]",0.5,825,best_practice,121,Returning a hardcoded string is simple and efficient for constant values,,807,"            param[""reportType""] = 1","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 5772, 14692, 13116, 6030, 8973, 796, 352]"
üß† ML Signal: Checking if a DataFrame is not null before proceeding,"[8582, 100, 254, 10373, 26484, 25, 39432, 611, 257, 6060, 19778, 318, 407, 9242, 878, 18788]",0.5,857,ml_signal,131,Checking if a DataFrame is not null before proceeding,,825,"            return [""{}_BaoXian"".format(self.finance_report_type)]","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441, 14631, 90, 92, 62, 33, 5488, 55, 666, 1911, 18982, 7, 944, 13, 69, 14149, 62, 13116, 62, 4906, 15437]"
üß† ML Signal: Assigning a value to an object's attribute,"[8582, 100, 254, 10373, 26484, 25, 2195, 38944, 257, 1988, 284, 281, 2134, 338, 11688]",0.5,889,ml_signal,133,Assigning a value to an object's attribute,,857,"            return [""{}_QuanShang"".format(self.finance_report_type)]","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441, 14631, 90, 92, 62, 4507, 272, 2484, 648, 1911, 18982, 7, 944, 13, 69, 14149, 62, 13116, 62, 4906, 15437]"
‚úÖ Best Practice: Using logging for information tracking,"[26486, 227, 6705, 19939, 25, 8554, 18931, 329, 1321, 9646]",0.5,921,best_practice,133,Using logging for information tracking,,889,"            return [""{}_QuanShang"".format(self.finance_report_type)]","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441, 14631, 90, 92, 62, 4507, 272, 2484, 648, 1911, 18982, 7, 944, 13, 69, 14149, 62, 13116, 62, 4906, 15437]"
‚ö†Ô∏è SAST Risk (Low): Committing to a session without exception handling for database errors,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 1520, 2535, 284, 257, 6246, 1231, 6631, 9041, 329, 6831, 8563]",0.5,921,sast_risk,141,Committing to a session without exception handling for database errors,Low,921,,[]
‚úÖ Best Practice: Using logging for error tracking,"[26486, 227, 6705, 19939, 25, 8554, 18931, 329, 4049, 9646]",1.0,929,best_practice,144,Using logging for error tracking,,921,        ),"[220, 220, 220, 220, 220, 220, 220, 1267]"
üß† ML Signal: Checking if a list is not empty before processing,"[8582, 100, 254, 10373, 26484, 25, 39432, 611, 257, 1351, 318, 407, 6565, 878, 7587]",1.0,948,ml_signal,157,Checking if a list is not empty before processing,,929,"                count=None,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 954, 28, 14202, 11]"
üß† ML Signal: Conditional logic based on data schema type,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9156, 1912, 319, 1366, 32815, 2099]",1.0,960,ml_signal,159,Conditional logic based on data schema type,,948,            ),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1267]"
üß† ML Signal: Checking if a DataFrame is not null before processing,"[8582, 100, 254, 10373, 26484, 25, 39432, 611, 257, 6060, 19778, 318, 407, 9242, 878, 7587]",1.0,980,ml_signal,174,Checking if a DataFrame is not null before processing,,960,        if not self.fetch_jq_timestamp:,"[220, 220, 220, 220, 220, 220, 220, 611, 407, 2116, 13, 69, 7569, 62, 73, 80, 62, 16514, 27823, 25]"
üß† ML Signal: Complex condition checking involving DataFrame and list,"[8582, 100, 254, 10373, 26484, 25, 19157, 4006, 10627, 7411, 6060, 19778, 290, 1351]",1.0,995,ml_signal,177,Complex condition checking involving DataFrame and list,,980,        # fill the timestamp for report published date,"[220, 220, 220, 220, 220, 220, 220, 1303, 6070, 262, 41033, 329, 989, 3199, 3128]"
‚úÖ Best Practice: Using logging for information tracking,"[26486, 227, 6705, 19939, 25, 8554, 18931, 329, 1321, 9646]",1.0,1020,best_practice,182,Using logging for information tracking,,995,"            order=self.data_schema.timestamp.asc(),","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1502, 28, 944, 13, 7890, 62, 15952, 2611, 13, 16514, 27823, 13, 3372, 22784]"
‚ö†Ô∏è SAST Risk (Low): Committing to a session without exception handling,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 1520, 2535, 284, 257, 6246, 1231, 6631, 9041]",1.0,1033,sast_risk,185,Committing to a session without exception handling,Low,1020,            filters=[,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 16628, 41888]"
‚úÖ Best Practice: Define __all__ for module exports,"[26486, 227, 6705, 19939, 25, 2896, 500, 11593, 439, 834, 329, 8265, 15319]",0.5,1046,best_practice,185,Define __all__ for module exports,,1033,            filters=[,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 16628, 41888]"
