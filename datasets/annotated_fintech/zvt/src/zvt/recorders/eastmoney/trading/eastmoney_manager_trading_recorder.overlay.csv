annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
üß† ML Signal: Importing specific functions or classes indicates usage patterns and dependencies,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 5499, 393, 6097, 9217, 8748, 7572, 290, 20086]",0.5,11,ml_signal,4,Importing specific functions or classes indicates usage patterns and dependencies,,0,from zvt.utils.utils import to_float,"[6738, 1976, 36540, 13, 26791, 13, 26791, 1330, 284, 62, 22468]"
üß† ML Signal: Inheritance from a specific base class indicates a pattern of extending functionality,"[8582, 100, 254, 10373, 26484, 25, 47025, 42942, 422, 257, 2176, 2779, 1398, 9217, 257, 3912, 286, 16610, 11244]",0.5,22,ml_signal,4,Inheritance from a specific base class indicates a pattern of extending functionality,,11,from zvt.utils.utils import to_float,"[6738, 1976, 36540, 13, 26791, 13, 26791, 1330, 284, 62, 22468]"
üß† ML Signal: Class attribute assignment indicates a pattern of setting schema for data handling,"[8582, 100, 254, 10373, 26484, 25, 5016, 11688, 16237, 9217, 257, 3912, 286, 4634, 32815, 329, 1366, 9041]",0.5,22,ml_signal,6,Class attribute assignment indicates a pattern of setting schema for data handling,,22,,[]
üß† ML Signal: URL assignment indicates a pattern of accessing external resources,"[8582, 100, 254, 10373, 26484, 25, 10289, 16237, 9217, 257, 3912, 286, 22534, 7097, 4133]",0.5,33,ml_signal,8,URL assignment indicates a pattern of accessing external resources,,22,    data_schema = ManagerTrading,"[220, 220, 220, 1366, 62, 15952, 2611, 796, 9142, 2898, 4980]"
üß† ML Signal: Path fields assignment indicates a pattern of specifying data extraction paths,"[8582, 100, 254, 10373, 26484, 25, 10644, 7032, 16237, 9217, 257, 3912, 286, 31577, 1366, 22236, 13532]",0.5,70,ml_signal,10,Path fields assignment indicates a pattern of specifying data extraction paths,,33,"    url = ""https://emh5.eastmoney.com/api/JiaoYiShuJu/GetGaoGuanZengJian""","[220, 220, 220, 19016, 796, 366, 5450, 1378, 368, 71, 20, 13, 23316, 26316, 13, 785, 14, 15042, 14, 41, 13481, 56, 72, 2484, 84, 33018, 14, 3855, 38, 5488, 38, 7258, 57, 1516, 41, 666, 1]"
‚úÖ Best Practice: Method name should be descriptive of its functionality,"[26486, 227, 6705, 19939, 25, 11789, 1438, 815, 307, 35644, 286, 663, 11244]",0.5,81,best_practice,8,Method name should be descriptive of its functionality,,70,    data_schema = ManagerTrading,"[220, 220, 220, 1366, 62, 15952, 2611, 796, 9142, 2898, 4980]"
"üß† ML Signal: Returns a hardcoded string, indicating a potential constant or configuration","[8582, 100, 254, 10373, 26484, 25, 16409, 257, 1327, 40976, 4731, 11, 12739, 257, 2785, 6937, 393, 8398]",0.5,118,ml_signal,10,"Returns a hardcoded string, indicating a potential constant or configuration",,81,"    url = ""https://emh5.eastmoney.com/api/JiaoYiShuJu/GetGaoGuanZengJian""","[220, 220, 220, 19016, 796, 366, 5450, 1378, 368, 71, 20, 13, 23316, 26316, 13, 785, 14, 15042, 14, 41, 13481, 56, 72, 2484, 84, 33018, 14, 3855, 38, 5488, 38, 7258, 57, 1516, 41, 666, 1]"
‚úÖ Best Practice: Use of a dictionary to map keys to tuples for structured data representation,"[26486, 227, 6705, 19939, 25, 5765, 286, 257, 22155, 284, 3975, 8251, 284, 12777, 2374, 329, 20793, 1366, 10552]",1.0,155,best_practice,10,Use of a dictionary to map keys to tuples for structured data representation,,118,"    url = ""https://emh5.eastmoney.com/api/JiaoYiShuJu/GetGaoGuanZengJian""","[220, 220, 220, 19016, 796, 366, 5450, 1378, 368, 71, 20, 13, 23316, 26316, 13, 785, 14, 15042, 14, 41, 13481, 56, 72, 2484, 84, 33018, 14, 3855, 38, 5488, 38, 7258, 57, 1516, 41, 666, 1]"
üß† ML Signal: Mapping of keys to data types and conversion functions indicates data processing patterns,"[8582, 100, 254, 10373, 26484, 25, 337, 5912, 286, 8251, 284, 1366, 3858, 290, 11315, 5499, 9217, 1366, 7587, 7572]",1.0,173,ml_signal,11,Mapping of keys to data types and conversion functions indicates data processing patterns,,155,"    path_fields = [""GaoGuanZengJianList""]","[220, 220, 220, 3108, 62, 25747, 796, 14631, 38, 5488, 38, 7258, 57, 1516, 41, 666, 8053, 8973]"
üß† ML Signal: Use of string keys and conversion functions suggests a pattern for data transformation,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4731, 8251, 290, 11315, 5499, 5644, 257, 3912, 329, 1366, 13389]",0.5,191,ml_signal,11,Use of string keys and conversion functions suggests a pattern for data transformation,,173,"    path_fields = [""GaoGuanZengJianList""]","[220, 220, 220, 3108, 62, 25747, 796, 14631, 38, 5488, 38, 7258, 57, 1516, 41, 666, 8053, 8973]"
üß† ML Signal: Use of a custom function 'to_float' for data conversion indicates a specific data handling pattern,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 2183, 2163, 705, 1462, 62, 22468, 6, 329, 1366, 11315, 9217, 257, 2176, 1366, 9041, 3912]",0.5,209,ml_signal,11,Use of a custom function 'to_float' for data conversion indicates a specific data handling pattern,,191,"    path_fields = [""GaoGuanZengJianList""]","[220, 220, 220, 3108, 62, 25747, 796, 14631, 38, 5488, 38, 7258, 57, 1516, 41, 666, 8053, 8973]"
üß† ML Signal: Consistent use of 'to_float' for numerical data conversion,"[8582, 100, 254, 10373, 26484, 25, 3515, 7609, 779, 286, 705, 1462, 62, 22468, 6, 329, 29052, 1366, 11315]",0.5,235,ml_signal,18,Consistent use of 'to_float' for numerical data conversion,,209,"            ""trading_person"": (""BianDongRen"", str),","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 366, 2213, 4980, 62, 6259, 1298, 5855, 33, 666, 35, 506, 26764, 1600, 965, 828]"
üß† ML Signal: Consistent use of 'to_float' for numerical data conversion,"[8582, 100, 254, 10373, 26484, 25, 3515, 7609, 779, 286, 705, 1462, 62, 22468, 6, 329, 29052, 1366, 11315]",0.5,262,ml_signal,20,Consistent use of 'to_float' for numerical data conversion,,235,"            ""price"": (""JiaoYiJunJia"", to_float),","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 366, 20888, 1298, 5855, 41, 13481, 56, 72, 22396, 41, 544, 1600, 284, 62, 22468, 828]"
üß† ML Signal: Use of string keys and conversion functions suggests a pattern for data transformation,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4731, 8251, 290, 11315, 5499, 5644, 257, 3912, 329, 1366, 13389]",0.5,290,ml_signal,22,Use of string keys and conversion functions suggests a pattern for data transformation,,262,"            ""trading_way"": (""JiaoYiTuJing"", str),","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 366, 2213, 4980, 62, 1014, 1298, 5855, 41, 13481, 56, 72, 47247, 41, 278, 1600, 965, 828]"
üß† ML Signal: Use of string keys and conversion functions suggests a pattern for data transformation,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4731, 8251, 290, 11315, 5499, 5644, 257, 3912, 329, 1366, 13389]",0.5,318,ml_signal,24,Use of string keys and conversion functions suggests a pattern for data transformation,,290,"            ""manager_position"": (""GaoGuanZhiWei"", str),","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 366, 37153, 62, 9150, 1298, 5855, 38, 5488, 38, 7258, 57, 5303, 1135, 72, 1600, 965, 828]"
üß† ML Signal: Use of string keys and conversion functions suggests a pattern for data transformation,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4731, 8251, 290, 11315, 5499, 5644, 257, 3912, 329, 1366, 13389]",0.5,326,ml_signal,26,Use of string keys and conversion functions suggests a pattern for data transformation,,318,        },"[220, 220, 220, 220, 220, 220, 220, 1782]"
üß† ML Signal: Use of string keys and conversion functions suggests a pattern for data transformation,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4731, 8251, 290, 11315, 5499, 5644, 257, 3912, 329, 1366, 13389]",0.5,344,ml_signal,28,Use of string keys and conversion functions suggests a pattern for data transformation,,326,"    def generate_domain_id(self, entity, original_data):","[220, 220, 220, 825, 7716, 62, 27830, 62, 312, 7, 944, 11, 9312, 11, 2656, 62, 7890, 2599]"
üß† ML Signal: Usage of dictionary get method to access data,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 22155, 651, 2446, 284, 1895, 1366]",0.5,372,ml_signal,22,Usage of dictionary get method to access data,,344,"            ""trading_way"": (""JiaoYiTuJing"", str),","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 366, 2213, 4980, 62, 1014, 1298, 5855, 41, 13481, 56, 72, 47247, 41, 278, 1600, 965, 828]"
üß† ML Signal: Accessing a method to retrieve a specific field name,"[8582, 100, 254, 10373, 26484, 25, 8798, 278, 257, 2446, 284, 19818, 257, 2176, 2214, 1438]",0.5,400,ml_signal,24,Accessing a method to retrieve a specific field name,,372,"            ""manager_position"": (""GaoGuanZhiWei"", str),","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 366, 37153, 62, 9150, 1298, 5855, 38, 5488, 38, 7258, 57, 5303, 1135, 72, 1600, 965, 828]"
üß† ML Signal: String formatting pattern for ID generation,"[8582, 100, 254, 10373, 26484, 25, 10903, 33313, 3912, 329, 4522, 5270]",0.5,408,ml_signal,26,String formatting pattern for ID generation,,400,        },"[220, 220, 220, 220, 220, 220, 220, 1782]"
‚ö†Ô∏è SAST Risk (Low): Direct execution of code in the main block without input validation,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 9706, 286, 2438, 287, 262, 1388, 2512, 1231, 5128, 21201]",0.5,431,sast_risk,29,Direct execution of code in the main block without input validation,Low,408,"        the_name = original_data.get(""BianDongRen"")","[220, 220, 220, 220, 220, 220, 220, 262, 62, 3672, 796, 2656, 62, 7890, 13, 1136, 7203, 33, 666, 35, 506, 26764, 4943]"
üß† ML Signal: Instantiation of a class with specific parameters,"[8582, 100, 254, 10373, 26484, 25, 24470, 3920, 286, 257, 1398, 351, 2176, 10007]",1.0,454,ml_signal,29,Instantiation of a class with specific parameters,,431,"        the_name = original_data.get(""BianDongRen"")","[220, 220, 220, 220, 220, 220, 220, 262, 62, 3672, 796, 2656, 62, 7890, 13, 1136, 7203, 33, 666, 35, 506, 26764, 4943]"
üß† ML Signal: Invocation of a run method on an object,"[8582, 100, 254, 10373, 26484, 25, 10001, 5040, 286, 257, 1057, 2446, 319, 281, 2134]",0.5,477,ml_signal,29,Invocation of a run method on an object,,454,"        the_name = original_data.get(""BianDongRen"")","[220, 220, 220, 220, 220, 220, 220, 262, 62, 3672, 796, 2656, 62, 7890, 13, 1136, 7203, 33, 666, 35, 506, 26764, 4943]"
‚úÖ Best Practice: Explicitly defining __all__ for module exports,"[26486, 227, 6705, 19939, 25, 11884, 306, 16215, 11593, 439, 834, 329, 8265, 15319]",0.5,500,best_practice,29,Explicitly defining __all__ for module exports,,477,"        the_name = original_data.get(""BianDongRen"")","[220, 220, 220, 220, 220, 220, 220, 262, 62, 3672, 796, 2656, 62, 7890, 13, 1136, 7203, 33, 666, 35, 506, 26764, 4943]"
