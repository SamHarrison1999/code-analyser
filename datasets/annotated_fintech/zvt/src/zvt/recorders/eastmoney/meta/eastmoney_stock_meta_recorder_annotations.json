[
  {
    "line": 2,
    "text": "",
    "annotation": "\u2705 Best Practice: Group imports into standard library, third-party, and local sections for readability",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 0,
    "end_token": 0,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      17944,
      656,
      3210,
      5888,
      11,
      2368,
      12,
      10608,
      11,
      290,
      1957,
      9004,
      329,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Group imports into standard library, third-party, and local sections for readability"
  },
  {
    "line": 8,
    "text": "from zvt.recorders.exchange.exchange_stock_meta_recorder import ExchangeStockMetaRecorder",
    "annotation": "\ud83e\udde0 ML Signal: Custom class definition for stock recording",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      8344,
      6361,
      13,
      1069,
      3803,
      13,
      1069,
      3803,
      62,
      13578,
      62,
      28961,
      62,
      8344,
      2875,
      1330,
      12516,
      26207,
      48526,
      6690,
      2875
    ],
    "start_token": 0,
    "end_token": 25,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8562,
      1398,
      6770,
      329,
      4283,
      8296
    ],
    "label": "ml_signal",
    "reason": "Custom class definition for stock recording"
  },
  {
    "line": 10,
    "text": "from zvt.utils.utils import to_float, pct_to_float",
    "annotation": "\ud83e\udde0 ML Signal: Class attribute for data schema",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      26791,
      1330,
      284,
      62,
      22468,
      11,
      279,
      310,
      62,
      1462,
      62,
      22468
    ],
    "start_token": 25,
    "end_token": 43,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      11688,
      329,
      1366,
      32815
    ],
    "label": "ml_signal",
    "reason": "Class attribute for data schema"
  },
  {
    "line": 12,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Class attribute for provider information",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 43,
    "end_token": 43,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      11688,
      329,
      10131,
      1321
    ],
    "label": "ml_signal",
    "reason": "Class attribute for provider information"
  },
  {
    "line": 11,
    "text": "",
    "annotation": "\u2705 Best Practice: Class definition should follow PEP 8 naming conventions, using CamelCase for class names.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 43,
    "end_token": 43,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      6770,
      815,
      1061,
      350,
      8905,
      807,
      19264,
      21396,
      11,
      1262,
      43281,
      20448,
      329,
      1398,
      3891,
      13
    ],
    "label": "best_practice",
    "reason": "Class definition should follow PEP 8 naming conventions, using CamelCase for class names."
  },
  {
    "line": 13,
    "text": "class EastmoneyStockRecorder(ExchangeStockMetaRecorder):",
    "annotation": "\u2705 Best Practice: Class attributes should be defined at the top of the class for better readability.",
    "confidence": 0.5,
    "tokens": [
      4871,
      3687,
      26316,
      26207,
      6690,
      2875,
      7,
      3109,
      3803,
      26207,
      48526,
      6690,
      2875,
      2599
    ],
    "start_token": 43,
    "end_token": 57,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      12608,
      815,
      307,
      5447,
      379,
      262,
      1353,
      286,
      262,
      1398,
      329,
      1365,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Class attributes should be defined at the top of the class for better readability."
  },
  {
    "line": 15,
    "text": "    provider = \"eastmoney\"",
    "annotation": "\u2705 Best Practice: Class attributes should be defined at the top of the class for better readability.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      10131,
      796,
      366,
      23316,
      26316,
      1
    ],
    "start_token": 57,
    "end_token": 66,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      12608,
      815,
      307,
      5447,
      379,
      262,
      1353,
      286,
      262,
      1398,
      329,
      1365,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Class attributes should be defined at the top of the class for better readability."
  },
  {
    "line": 15,
    "text": "    provider = \"eastmoney\"",
    "annotation": "\u2705 Best Practice: Explicitly call the superclass's __init__ method to ensure proper initialization.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      10131,
      796,
      366,
      23316,
      26316,
      1
    ],
    "start_token": 66,
    "end_token": 75,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11884,
      306,
      869,
      262,
      2208,
      4871,
      338,
      11593,
      15003,
      834,
      2446,
      284,
      4155,
      1774,
      37588,
      13
    ],
    "label": "best_practice",
    "reason": "Explicitly call the superclass's __init__ method to ensure proper initialization."
  },
  {
    "line": 17,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Instantiating and running a specific recorder class, indicating a pattern of data collection.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 75,
    "end_token": 75,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2262,
      17096,
      803,
      290,
      2491,
      257,
      2176,
      38156,
      1398,
      11,
      12739,
      257,
      3912,
      286,
      1366,
      4947,
      13
    ],
    "label": "ml_signal",
    "reason": "Instantiating and running a specific recorder class, indicating a pattern of data collection."
  },
  {
    "line": 18,
    "text": "class EastmoneyStockDetailRecorder(Recorder):",
    "annotation": "\u2705 Best Practice: Use of conditional logic to handle mutually exclusive parameters.",
    "confidence": 0.5,
    "tokens": [
      4871,
      3687,
      26316,
      26207,
      11242,
      603,
      6690,
      2875,
      7,
      6690,
      2875,
      2599
    ],
    "start_token": 75,
    "end_token": 87,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      26340,
      9156,
      284,
      5412,
      26519,
      8568,
      10007,
      13
    ],
    "label": "best_practice",
    "reason": "Use of conditional logic to handle mutually exclusive parameters."
  },
  {
    "line": 24,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of conditional logic to set filters based on the force_update flag.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 87,
    "end_token": 87,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      26340,
      9156,
      284,
      900,
      16628,
      1912,
      319,
      262,
      2700,
      62,
      19119,
      6056,
      13
    ],
    "label": "best_practice",
    "reason": "Use of conditional logic to set filters based on the force_update flag."
  },
  {
    "line": 24,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Fetching entities with specific filters and parameters, indicating a pattern of data retrieval.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 87,
    "end_token": 87,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      376,
      7569,
      278,
      12066,
      351,
      2176,
      16628,
      290,
      10007,
      11,
      12739,
      257,
      3912,
      286,
      1366,
      45069,
      13
    ],
    "label": "ml_signal",
    "reason": "Fetching entities with specific filters and parameters, indicating a pattern of data retrieval."
  },
  {
    "line": 36,
    "text": "            session=self.session,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of assert for type checking can be bypassed if Python is run with optimizations",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6246,
      28,
      944,
      13,
      29891,
      11
    ],
    "start_token": 87,
    "end_token": 104,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      6818,
      329,
      2099,
      10627,
      460,
      307,
      17286,
      276,
      611,
      11361,
      318,
      1057,
      351,
      41446
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of assert for type checking can be bypassed if Python is run with optimizations"
  },
  {
    "line": 50,
    "text": "                fc = \"{}01\".format(security_item.code)",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential for injection if securities_code is not properly sanitized",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      277,
      66,
      796,
      45144,
      92,
      486,
      1911,
      18982,
      7,
      12961,
      62,
      9186,
      13,
      8189,
      8
    ],
    "start_token": 104,
    "end_token": 134,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      329,
      16954,
      611,
      16145,
      62,
      8189,
      318,
      407,
      6105,
      5336,
      36951
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential for injection if securities_code is not properly sanitized"
  },
  {
    "line": 53,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): No error handling for network request failures",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 134,
    "end_token": 134,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1400,
      4049,
      9041,
      329,
      3127,
      2581,
      15536
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "No error handling for network request failures"
  },
  {
    "line": 56,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): No error handling for JSON parsing or missing keys",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 134,
    "end_token": 134,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1400,
      4049,
      9041,
      329,
      19449,
      32096,
      393,
      4814,
      8251
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "No error handling for JSON parsing or missing keys"
  },
  {
    "line": 70,
    "text": "            resp_json = resp.json()[\"result\"][\"data\"][0]",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential for injection if securities_code is not properly sanitized",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1217,
      62,
      17752,
      796,
      1217,
      13,
      17752,
      3419,
      14692,
      20274,
      1,
      7131,
      1,
      7890,
      1,
      7131,
      15,
      60
    ],
    "start_token": 134,
    "end_token": 163,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      329,
      16954,
      611,
      16145,
      62,
      8189,
      318,
      407,
      6105,
      5336,
      36951
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential for injection if securities_code is not properly sanitized"
  },
  {
    "line": 76,
    "text": "            # \u5173\u8054\u884c\u4e1a",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): No error handling for network request failures",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      10263,
      227,
      111,
      164,
      223,
      242,
      26193,
      234,
      10310,
      248
    ],
    "start_token": 163,
    "end_token": 185,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1400,
      4049,
      9041,
      329,
      3127,
      2581,
      15536
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "No error handling for network request failures"
  },
  {
    "line": 79,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): No error handling for JSON parsing or missing keys",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 185,
    "end_token": 185,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1400,
      4049,
      9041,
      329,
      19449,
      32096,
      393,
      4814,
      8251
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "No error handling for JSON parsing or missing keys"
  },
  {
    "line": 85,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): No error handling for database commit failures",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 185,
    "end_token": 185,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1400,
      4049,
      9041,
      329,
      6831,
      4589,
      15536
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "No error handling for database commit failures"
  },
  {
    "line": 85,
    "text": "",
    "annotation": "\u2705 Best Practice: Use f-string for better readability",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 185,
    "end_token": 185,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      277,
      12,
      8841,
      329,
      1365,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Use f-string for better readability"
  },
  {
    "line": 85,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation and usage of a custom class",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 185,
    "end_token": 185,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      290,
      8748,
      286,
      257,
      2183,
      1398
    ],
    "label": "ml_signal",
    "reason": "Instantiation and usage of a custom class"
  },
  {
    "line": 85,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Method call with specific parameters",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 185,
    "end_token": 185,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      869,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Method call with specific parameters"
  },
  {
    "line": 85,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Definition of module exports",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 185,
    "end_token": 185,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      30396,
      286,
      8265,
      15319
    ],
    "label": "ml_signal",
    "reason": "Definition of module exports"
  }
]