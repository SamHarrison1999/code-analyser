[
  {
    "line": 3,
    "text": "from zvt.recorders.eastmoney.common import EastmoneyPageabeDataRecorder",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Importing modules without validation can lead to dependency confusion if the module names are not unique or are typo-squatted.",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      8344,
      6361,
      13,
      23316,
      26316,
      13,
      11321,
      1330,
      3687,
      26316,
      9876,
      11231,
      6601,
      6690,
      2875
    ],
    "start_token": 0,
    "end_token": 19,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      17267,
      278,
      13103,
      1231,
      21201,
      460,
      1085,
      284,
      20203,
      10802,
      611,
      262,
      8265,
      3891,
      389,
      407,
      3748,
      393,
      389,
      46517,
      12,
      16485,
      16898,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Importing modules without validation can lead to dependency confusion if the module names are not unique or are typo-squatted."
  },
  {
    "line": 5,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Inheritance from a specific base class indicates a pattern of extending functionality",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 19,
    "end_token": 19,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47025,
      42942,
      422,
      257,
      2176,
      2779,
      1398,
      9217,
      257,
      3912,
      286,
      16610,
      11244
    ],
    "label": "ml_signal",
    "reason": "Inheritance from a specific base class indicates a pattern of extending functionality"
  },
  {
    "line": 7,
    "text": "class DividendDetailRecorder(EastmoneyPageabeDataRecorder):",
    "annotation": "\ud83e\udde0 ML Signal: Assignment of a schema to a variable suggests a pattern of data structure usage",
    "confidence": 0.5,
    "tokens": [
      4871,
      360,
      1699,
      437,
      11242,
      603,
      6690,
      2875,
      7,
      25234,
      26316,
      9876,
      11231,
      6601,
      6690,
      2875,
      2599
    ],
    "start_token": 19,
    "end_token": 36,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      50144,
      286,
      257,
      32815,
      284,
      257,
      7885,
      5644,
      257,
      3912,
      286,
      1366,
      4645,
      8748
    ],
    "label": "ml_signal",
    "reason": "Assignment of a schema to a variable suggests a pattern of data structure usage"
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoded URL can lead to inflexibility and potential security risks if the URL changes or is deprecated",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 36,
    "end_token": 36,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      40976,
      10289,
      460,
      1085,
      284,
      1167,
      2588,
      2247,
      290,
      2785,
      2324,
      7476,
      611,
      262,
      10289,
      2458,
      393,
      318,
      39224
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoded URL can lead to inflexibility and potential security risks if the URL changes or is deprecated"
  },
  {
    "line": 10,
    "text": "    url = \"https://emh5.eastmoney.com/api/FenHongRongZi/GetFenHongSongZhuanList\"",
    "annotation": "\ud83e\udde0 ML Signal: Hardcoded API endpoint indicates a pattern of accessing external resources",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      19016,
      796,
      366,
      5450,
      1378,
      368,
      71,
      20,
      13,
      23316,
      26316,
      13,
      785,
      14,
      15042,
      14,
      37,
      268,
      48559,
      49,
      506,
      57,
      72,
      14,
      3855,
      37,
      268,
      48559,
      44241,
      57,
      71,
      7258,
      8053,
      1
    ],
    "start_token": 36,
    "end_token": 73,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6912,
      40976,
      7824,
      36123,
      9217,
      257,
      3912,
      286,
      22534,
      7097,
      4133
    ],
    "label": "ml_signal",
    "reason": "Hardcoded API endpoint indicates a pattern of accessing external resources"
  },
  {
    "line": 12,
    "text": "    path_fields = [\"FenHongSongZhuanList\"]",
    "annotation": "\u2705 Best Practice: Reusing the `url` variable improves maintainability and reduces redundancy",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      3108,
      62,
      25747,
      796,
      14631,
      37,
      268,
      48559,
      44241,
      57,
      71,
      7258,
      8053,
      8973
    ],
    "start_token": 73,
    "end_token": 90,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      797,
      3500,
      262,
      4600,
      6371,
      63,
      7885,
      19575,
      5529,
      1799,
      290,
      12850,
      49052
    ],
    "label": "best_practice",
    "reason": "Reusing the `url` variable improves maintainability and reduces redundancy"
  },
  {
    "line": 12,
    "text": "    path_fields = [\"FenHongSongZhuanList\"]",
    "annotation": "\ud83e\udde0 ML Signal: Use of a list to define path fields suggests a pattern of structured data access",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      3108,
      62,
      25747,
      796,
      14631,
      37,
      268,
      48559,
      44241,
      57,
      71,
      7258,
      8053,
      8973
    ],
    "start_token": 90,
    "end_token": 107,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      1351,
      284,
      8160,
      3108,
      7032,
      5644,
      257,
      3912,
      286,
      20793,
      1366,
      1895
    ],
    "label": "ml_signal",
    "reason": "Use of a list to define path fields suggests a pattern of structured data access"
  },
  {
    "line": 10,
    "text": "    url = \"https://emh5.eastmoney.com/api/FenHongRongZi/GetFenHongSongZhuanList\"",
    "annotation": "\u2705 Best Practice: Method name is descriptive and follows naming conventions",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      19016,
      796,
      366,
      5450,
      1378,
      368,
      71,
      20,
      13,
      23316,
      26316,
      13,
      785,
      14,
      15042,
      14,
      37,
      268,
      48559,
      49,
      506,
      57,
      72,
      14,
      3855,
      37,
      268,
      48559,
      44241,
      57,
      71,
      7258,
      8053,
      1
    ],
    "start_token": 107,
    "end_token": 144,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11789,
      1438,
      318,
      35644,
      290,
      5679,
      19264,
      21396
    ],
    "label": "best_practice",
    "reason": "Method name is descriptive and follows naming conventions"
  },
  {
    "line": 12,
    "text": "    path_fields = [\"FenHongSongZhuanList\"]",
    "annotation": "\ud83e\udde0 ML Signal: Returns a hardcoded string, indicating a constant or fixed value",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      3108,
      62,
      25747,
      796,
      14631,
      37,
      268,
      48559,
      44241,
      57,
      71,
      7258,
      8053,
      8973
    ],
    "start_token": 144,
    "end_token": 161,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      16409,
      257,
      1327,
      40976,
      4731,
      11,
      12739,
      257,
      6937,
      393,
      5969,
      1988
    ],
    "label": "ml_signal",
    "reason": "Returns a hardcoded string, indicating a constant or fixed value"
  },
  {
    "line": 12,
    "text": "    path_fields = [\"FenHongSongZhuanList\"]",
    "annotation": "\u2705 Best Practice: Use of a dictionary to map keys to tuples for clear data structure",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      3108,
      62,
      25747,
      796,
      14631,
      37,
      268,
      48559,
      44241,
      57,
      71,
      7258,
      8053,
      8973
    ],
    "start_token": 161,
    "end_token": 178,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      257,
      22155,
      284,
      3975,
      8251,
      284,
      12777,
      2374,
      329,
      1598,
      1366,
      4645
    ],
    "label": "best_practice",
    "reason": "Use of a dictionary to map keys to tuples for clear data structure"
  },
  {
    "line": 20,
    "text": "            \"announce_date\": (\"GongGaoRiQi\", to_pd_timestamp),",
    "annotation": "\ud83e\udde0 ML Signal: Entry point for script execution",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      1236,
      8652,
      62,
      4475,
      1298,
      5855,
      38,
      506,
      38,
      5488,
      49,
      72,
      48,
      72,
      1600,
      284,
      62,
      30094,
      62,
      16514,
      27823,
      828
    ],
    "start_token": 178,
    "end_token": 212,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      21617,
      966,
      329,
      4226,
      9706
    ],
    "label": "ml_signal",
    "reason": "Entry point for script execution"
  },
  {
    "line": 21,
    "text": "            # \u80a1\u6743\u767b\u8bb0\u65e5",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of a class with specific parameters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      5525,
      224,
      94,
      30266,
      225,
      163,
      247,
      119,
      164,
      106,
      108,
      33768,
      98
    ],
    "start_token": 212,
    "end_token": 237,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      257,
      1398,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Instantiation of a class with specific parameters"
  },
  {
    "line": 21,
    "text": "            # \u80a1\u6743\u767b\u8bb0\u65e5",
    "annotation": "\ud83e\udde0 ML Signal: Method call on an object",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      5525,
      224,
      94,
      30266,
      225,
      163,
      247,
      119,
      164,
      106,
      108,
      33768,
      98
    ],
    "start_token": 237,
    "end_token": 262,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      869,
      319,
      281,
      2134
    ],
    "label": "ml_signal",
    "reason": "Method call on an object"
  },
  {
    "line": 21,
    "text": "            # \u80a1\u6743\u767b\u8bb0\u65e5",
    "annotation": "\u2705 Best Practice: Use of __all__ to define public interface of the module",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      5525,
      224,
      94,
      30266,
      225,
      163,
      247,
      119,
      164,
      106,
      108,
      33768,
      98
    ],
    "start_token": 262,
    "end_token": 287,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7071,
      286,
      262,
      8265
    ],
    "label": "best_practice",
    "reason": "Use of __all__ to define public interface of the module"
  }
]