[
  {
    "line": 2,
    "text": "from zvt.domain.fundamental.dividend_financing import DividendFinancing",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      27830,
      13,
      10990,
      6860,
      13,
      67,
      1699,
      437,
      62,
      15643,
      5077,
      1330,
      360,
      1699,
      437,
      18467,
      5077
    ],
    "start_token": 0,
    "end_token": 21,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 4,
    "text": "from zvt.utils.utils import second_item_to_float",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      26791,
      1330,
      1218,
      62,
      9186,
      62,
      1462,
      62,
      22468
    ],
    "start_token": 21,
    "end_token": 36,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 4,
    "text": "from zvt.utils.utils import second_item_to_float",
    "annotation": "\ud83e\udde0 ML Signal: Class definition with inheritance, useful for understanding class hierarchies and relationships",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      26791,
      1330,
      1218,
      62,
      9186,
      62,
      1462,
      62,
      22468
    ],
    "start_token": 36,
    "end_token": 51,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      6770,
      351,
      24155,
      11,
      4465,
      329,
      4547,
      1398,
      28398,
      444,
      290,
      6958
    ],
    "label": "ml_signal",
    "reason": "Class definition with inheritance, useful for understanding class hierarchies and relationships"
  },
  {
    "line": 6,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Class attribute assignment, useful for understanding default configurations",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 51,
    "end_token": 51,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      11688,
      16237,
      11,
      4465,
      329,
      4547,
      4277,
      25412
    ],
    "label": "ml_signal",
    "reason": "Class attribute assignment, useful for understanding default configurations"
  },
  {
    "line": 8,
    "text": "    data_schema = DividendFinancing",
    "annotation": "\ud83e\udde0 ML Signal: URL assignment, useful for understanding API endpoints used",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1366,
      62,
      15952,
      2611,
      796,
      360,
      1699,
      437,
      18467,
      5077
    ],
    "start_token": 51,
    "end_token": 64,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      10289,
      16237,
      11,
      4465,
      329,
      4547,
      7824,
      886,
      13033,
      973
    ],
    "label": "ml_signal",
    "reason": "URL assignment, useful for understanding API endpoints used"
  },
  {
    "line": 10,
    "text": "    url = \"https://emh5.eastmoney.com/api/FenHongRongZi/GetLiNianFenHongRongZiList\"",
    "annotation": "\u2705 Best Practice: Reuse of URL variable, improves maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      19016,
      796,
      366,
      5450,
      1378,
      368,
      71,
      20,
      13,
      23316,
      26316,
      13,
      785,
      14,
      15042,
      14,
      37,
      268,
      48559,
      49,
      506,
      57,
      72,
      14,
      3855,
      32304,
      45,
      666,
      37,
      268,
      48559,
      49,
      506,
      57,
      72,
      8053,
      1
    ],
    "start_token": 64,
    "end_token": 104,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      797,
      1904,
      286,
      10289,
      7885,
      11,
      19575,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Reuse of URL variable, improves maintainability"
  },
  {
    "line": 12,
    "text": "    path_fields = [\"LiNianFenHongRongZiList\"]",
    "annotation": "\ud83e\udde0 ML Signal: Path fields definition, useful for understanding data extraction paths",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      3108,
      62,
      25747,
      796,
      14631,
      32304,
      45,
      666,
      37,
      268,
      48559,
      49,
      506,
      57,
      72,
      8053,
      8973
    ],
    "start_token": 104,
    "end_token": 124,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      10644,
      7032,
      6770,
      11,
      4465,
      329,
      4547,
      1366,
      22236,
      13532
    ],
    "label": "ml_signal",
    "reason": "Path fields definition, useful for understanding data extraction paths"
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\u2705 Best Practice: Method name should be descriptive of its functionality",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 124,
    "end_token": 124,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11789,
      1438,
      815,
      307,
      35644,
      286,
      663,
      11244
    ],
    "label": "best_practice",
    "reason": "Method name should be descriptive of its functionality"
  },
  {
    "line": 11,
    "text": "    page_url = url",
    "annotation": "\ud83e\udde0 ML Signal: Returns a hardcoded string, indicating a potential constant or configuration",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      2443,
      62,
      6371,
      796,
      19016
    ],
    "start_token": 124,
    "end_token": 132,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      16409,
      257,
      1327,
      40976,
      4731,
      11,
      12739,
      257,
      2785,
      6937,
      393,
      8398
    ],
    "label": "ml_signal",
    "reason": "Returns a hardcoded string, indicating a potential constant or configuration"
  },
  {
    "line": 11,
    "text": "    page_url = url",
    "annotation": "\u2705 Best Practice: Use of a dictionary to map keys to tuples for clear data organization",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      2443,
      62,
      6371,
      796,
      19016
    ],
    "start_token": 132,
    "end_token": 140,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      257,
      22155,
      284,
      3975,
      8251,
      284,
      12777,
      2374,
      329,
      1598,
      1366,
      4009
    ],
    "label": "best_practice",
    "reason": "Use of a dictionary to map keys to tuples for clear data organization"
  },
  {
    "line": 12,
    "text": "    path_fields = [\"LiNianFenHongRongZiList\"]",
    "annotation": "\ud83e\udde0 ML Signal: Consistent use of a dictionary for mapping, useful for pattern recognition",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      3108,
      62,
      25747,
      796,
      14631,
      32304,
      45,
      666,
      37,
      268,
      48559,
      49,
      506,
      57,
      72,
      8053,
      8973
    ],
    "start_token": 140,
    "end_token": 160,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3515,
      7609,
      779,
      286,
      257,
      22155,
      329,
      16855,
      11,
      4465,
      329,
      3912,
      9465
    ],
    "label": "ml_signal",
    "reason": "Consistent use of a dictionary for mapping, useful for pattern recognition"
  },
  {
    "line": 12,
    "text": "    path_fields = [\"LiNianFenHongRongZiList\"]",
    "annotation": "\ud83e\udde0 ML Signal: Mapping of string keys to tuples, indicating a pattern of data transformation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      3108,
      62,
      25747,
      796,
      14631,
      32304,
      45,
      666,
      37,
      268,
      48559,
      49,
      506,
      57,
      72,
      8053,
      8973
    ],
    "start_token": 160,
    "end_token": 180,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      337,
      5912,
      286,
      4731,
      8251,
      284,
      12777,
      2374,
      11,
      12739,
      257,
      3912,
      286,
      1366,
      13389
    ],
    "label": "ml_signal",
    "reason": "Mapping of string keys to tuples, indicating a pattern of data transformation"
  },
  {
    "line": 17,
    "text": "    def get_data_map(self):",
    "annotation": "\ud83e\udde0 ML Signal: Mapping of string keys to tuples, indicating a pattern of data transformation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      651,
      62,
      7890,
      62,
      8899,
      7,
      944,
      2599
    ],
    "start_token": 180,
    "end_token": 192,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      337,
      5912,
      286,
      4731,
      8251,
      284,
      12777,
      2374,
      11,
      12739,
      257,
      3912,
      286,
      1366,
      13389
    ],
    "label": "ml_signal",
    "reason": "Mapping of string keys to tuples, indicating a pattern of data transformation"
  },
  {
    "line": 19,
    "text": "            # \u5206\u7ea2\u603b\u989d",
    "annotation": "\ud83e\udde0 ML Signal: Mapping of string keys to tuples, indicating a pattern of data transformation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      10263,
      230,
      228,
      163,
      118,
      95,
      45250,
      119,
      165,
      95,
      251
    ],
    "start_token": 192,
    "end_token": 215,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      337,
      5912,
      286,
      4731,
      8251,
      284,
      12777,
      2374,
      11,
      12739,
      257,
      3912,
      286,
      1366,
      13389
    ],
    "label": "ml_signal",
    "reason": "Mapping of string keys to tuples, indicating a pattern of data transformation"
  },
  {
    "line": 21,
    "text": "            # \u65b0\u80a1",
    "annotation": "\ud83e\udde0 ML Signal: Mapping of string keys to tuples, indicating a pattern of data transformation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      10545,
      244,
      108,
      164,
      224,
      94
    ],
    "start_token": 215,
    "end_token": 233,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      337,
      5912,
      286,
      4731,
      8251,
      284,
      12777,
      2374,
      11,
      12739,
      257,
      3912,
      286,
      1366,
      13389
    ],
    "label": "ml_signal",
    "reason": "Mapping of string keys to tuples, indicating a pattern of data transformation"
  },
  {
    "line": 23,
    "text": "            # \u589e\u53d1",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of querying data from a database",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      10263,
      95,
      252,
      20998,
      239
    ],
    "start_token": 233,
    "end_token": 250,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      42517,
      1112,
      1366,
      422,
      257,
      6831
    ],
    "label": "ml_signal",
    "reason": "Pattern of querying data from a database"
  },
  {
    "line": 33,
    "text": "                code_security[item.code] = item",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential risk of overwriting data without validation",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2438,
      62,
      12961,
      58,
      9186,
      13,
      8189,
      60,
      796,
      2378
    ],
    "start_token": 250,
    "end_token": 275,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2526,
      286,
      6993,
      799,
      278,
      1366,
      1231,
      21201
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential risk of overwriting data without validation"
  },
  {
    "line": 35,
    "text": "                need_fill_items = DividendFinancing.query_data(",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Committing changes to the database without error handling",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      761,
      62,
      20797,
      62,
      23814,
      796,
      360,
      1699,
      437,
      18467,
      5077,
      13,
      22766,
      62,
      7890,
      7
    ],
    "start_token": 275,
    "end_token": 306,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1520,
      2535,
      2458,
      284,
      262,
      6831,
      1231,
      4049,
      9041
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Committing changes to the database without error handling"
  },
  {
    "line": 38,
    "text": "                    return_type=\"domain\",",
    "annotation": "\u2705 Best Practice: Logging exceptions for debugging purposes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      62,
      4906,
      2625,
      27830,
      1600
    ],
    "start_token": 306,
    "end_token": 331,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5972,
      2667,
      13269,
      329,
      28769,
      4959
    ],
    "label": "best_practice",
    "reason": "Logging exceptions for debugging purposes"
  },
  {
    "line": 40,
    "text": "                    filters=[DividendFinancing.ipo_raising_fund.is_(None), DividendFinancing.ipo_issues != 0],",
    "annotation": "\u2705 Best Practice: Calling the superclass method to ensure proper cleanup",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      16628,
      41888,
      35,
      1699,
      437,
      18467,
      5077,
      13,
      541,
      78,
      62,
      32741,
      62,
      10990,
      13,
      271,
      41052,
      14202,
      828,
      360,
      1699,
      437,
      18467,
      5077,
      13,
      541,
      78,
      62,
      37165,
      14512,
      657,
      4357
    ],
    "start_token": 331,
    "end_token": 382,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      32677,
      262,
      2208,
      4871,
      2446,
      284,
      4155,
      1774,
      27425
    ],
    "label": "best_practice",
    "reason": "Calling the superclass method to ensure proper cleanup"
  },
  {
    "line": 40,
    "text": "                    filters=[DividendFinancing.ipo_raising_fund.is_(None), DividendFinancing.ipo_issues != 0],",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation and execution pattern of a recorder object",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      16628,
      41888,
      35,
      1699,
      437,
      18467,
      5077,
      13,
      541,
      78,
      62,
      32741,
      62,
      10990,
      13,
      271,
      41052,
      14202,
      828,
      360,
      1699,
      437,
      18467,
      5077,
      13,
      541,
      78,
      62,
      37165,
      14512,
      657,
      4357
    ],
    "start_token": 382,
    "end_token": 433,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      290,
      9706,
      3912,
      286,
      257,
      38156,
      2134
    ],
    "label": "ml_signal",
    "reason": "Instantiation and execution pattern of a recorder object"
  },
  {
    "line": 40,
    "text": "                    filters=[DividendFinancing.ipo_raising_fund.is_(None), DividendFinancing.ipo_issues != 0],",
    "annotation": "\u2705 Best Practice: Defining __all__ for module exports",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      16628,
      41888,
      35,
      1699,
      437,
      18467,
      5077,
      13,
      541,
      78,
      62,
      32741,
      62,
      10990,
      13,
      271,
      41052,
      14202,
      828,
      360,
      1699,
      437,
      18467,
      5077,
      13,
      541,
      78,
      62,
      37165,
      14512,
      657,
      4357
    ],
    "start_token": 433,
    "end_token": 484,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      3191,
      11593,
      439,
      834,
      329,
      8265,
      15319
    ],
    "label": "best_practice",
    "reason": "Defining __all__ for module exports"
  }
]