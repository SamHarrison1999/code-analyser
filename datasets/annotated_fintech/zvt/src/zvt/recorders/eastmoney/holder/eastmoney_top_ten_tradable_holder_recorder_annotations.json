[
  {
    "line": 2,
    "text": "from zvt.domain import TopTenTradableHolder",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      27830,
      1330,
      5849,
      24893,
      2898,
      324,
      540,
      39,
      19892
    ],
    "start_token": 0,
    "end_token": 13,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 7,
    "text": "    provider = \"eastmoney\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoded URL can lead to inflexibility and potential security risks if the URL changes or is compromised.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      10131,
      796,
      366,
      23316,
      26316,
      1
    ],
    "start_token": 13,
    "end_token": 22,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      40976,
      10289,
      460,
      1085,
      284,
      1167,
      2588,
      2247,
      290,
      2785,
      2324,
      7476,
      611,
      262,
      10289,
      2458,
      393,
      318,
      19066,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoded URL can lead to inflexibility and potential security risks if the URL changes or is compromised."
  },
  {
    "line": 10,
    "text": "    url = \"https://emh5.eastmoney.com/api/GuBenGuDong/GetShiDaLiuTongGuDong\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoded URL can lead to inflexibility and potential security risks if the URL changes or is compromised.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      19016,
      796,
      366,
      5450,
      1378,
      368,
      71,
      20,
      13,
      23316,
      26316,
      13,
      785,
      14,
      15042,
      14,
      8205,
      11696,
      8205,
      35,
      506,
      14,
      3855,
      2484,
      72,
      26531,
      43,
      16115,
      51,
      506,
      8205,
      35,
      506,
      1
    ],
    "start_token": 22,
    "end_token": 59,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      40976,
      10289,
      460,
      1085,
      284,
      1167,
      2588,
      2247,
      290,
      2785,
      2324,
      7476,
      611,
      262,
      10289,
      2458,
      393,
      318,
      19066,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoded URL can lead to inflexibility and potential security risks if the URL changes or is compromised."
  },
  {
    "line": 13,
    "text": "    timestamp_list_path_fields = [\"SDLTGDBGQ\", \"ShiDaLiuTongGuDongBaoGaoQiList\"]",
    "annotation": "\ud83e\udde0 ML Signal: Entry point for script execution, indicating standalone script usage.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      41033,
      62,
      4868,
      62,
      6978,
      62,
      25747,
      796,
      14631,
      10305,
      27734,
      38,
      11012,
      38,
      48,
      1600,
      366,
      2484,
      72,
      26531,
      43,
      16115,
      51,
      506,
      8205,
      35,
      506,
      33,
      5488,
      38,
      5488,
      48,
      72,
      8053,
      8973
    ],
    "start_token": 59,
    "end_token": 97,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      21617,
      966,
      329,
      4226,
      9706,
      11,
      12739,
      27669,
      4226,
      8748,
      13
    ],
    "label": "ml_signal",
    "reason": "Entry point for script execution, indicating standalone script usage."
  },
  {
    "line": 13,
    "text": "    timestamp_list_path_fields = [\"SDLTGDBGQ\", \"ShiDaLiuTongGuDongBaoGaoQiList\"]",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation and method call pattern for running the recorder.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      41033,
      62,
      4868,
      62,
      6978,
      62,
      25747,
      796,
      14631,
      10305,
      27734,
      38,
      11012,
      38,
      48,
      1600,
      366,
      2484,
      72,
      26531,
      43,
      16115,
      51,
      506,
      8205,
      35,
      506,
      33,
      5488,
      38,
      5488,
      48,
      72,
      8053,
      8973
    ],
    "start_token": 97,
    "end_token": 135,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      290,
      2446,
      869,
      3912,
      329,
      2491,
      262,
      38156,
      13
    ],
    "label": "ml_signal",
    "reason": "Instantiation and method call pattern for running the recorder."
  },
  {
    "line": 13,
    "text": "    timestamp_list_path_fields = [\"SDLTGDBGQ\", \"ShiDaLiuTongGuDongBaoGaoQiList\"]",
    "annotation": "\u2705 Best Practice: Define __all__ to explicitly declare the public API of the module.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      41033,
      62,
      4868,
      62,
      6978,
      62,
      25747,
      796,
      14631,
      10305,
      27734,
      38,
      11012,
      38,
      48,
      1600,
      366,
      2484,
      72,
      26531,
      43,
      16115,
      51,
      506,
      8205,
      35,
      506,
      33,
      5488,
      38,
      5488,
      48,
      72,
      8053,
      8973
    ],
    "start_token": 135,
    "end_token": 173,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      500,
      11593,
      439,
      834,
      284,
      11777,
      13627,
      262,
      1171,
      7824,
      286,
      262,
      8265,
      13
    ],
    "label": "best_practice",
    "reason": "Define __all__ to explicitly declare the public API of the module."
  }
]