[
  {
    "line": 2,
    "text": "",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 0,
    "end_token": 0,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 5,
    "text": "from zvt.domain import Index",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      27830,
      1330,
      12901
    ],
    "start_token": 0,
    "end_token": 7,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 6,
    "text": "from zvt.recorders.exchange.api import cn_index_api, cs_index_api",
    "annotation": "\ud83e\udde0 ML Signal: Inheritance from a base class, indicating a pattern of extending functionality",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      8344,
      6361,
      13,
      1069,
      3803,
      13,
      15042,
      1330,
      269,
      77,
      62,
      9630,
      62,
      15042,
      11,
      50115,
      62,
      9630,
      62,
      15042
    ],
    "start_token": 7,
    "end_token": 31,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47025,
      42942,
      422,
      257,
      2779,
      1398,
      11,
      12739,
      257,
      3912,
      286,
      16610,
      11244
    ],
    "label": "ml_signal",
    "reason": "Inheritance from a base class, indicating a pattern of extending functionality"
  },
  {
    "line": 8,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of class attribute to define a constant value",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 31,
    "end_token": 31,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1398,
      11688,
      284,
      8160,
      257,
      6937,
      1988
    ],
    "label": "ml_signal",
    "reason": "Use of class attribute to define a constant value"
  },
  {
    "line": 10,
    "text": "    provider = \"exchange\"",
    "annotation": "\ud83e\udde0 ML Signal: Use of class attribute to define a schema or data structure",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      10131,
      796,
      366,
      1069,
      3803,
      1
    ],
    "start_token": 31,
    "end_token": 40,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1398,
      11688,
      284,
      8160,
      257,
      32815,
      393,
      1366,
      4645
    ],
    "label": "ml_signal",
    "reason": "Use of class attribute to define a schema or data structure"
  },
  {
    "line": 9,
    "text": "class ExchangeIndexRecorder(Recorder):",
    "annotation": "\ud83e\udde0 ML Signal: Method calls with string literals indicate specific actions or configurations",
    "confidence": 1.0,
    "tokens": [
      4871,
      12516,
      15732,
      6690,
      2875,
      7,
      6690,
      2875,
      2599
    ],
    "start_token": 40,
    "end_token": 49,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      3848,
      351,
      4731,
      4187,
      874,
      7603,
      2176,
      4028,
      393,
      25412
    ],
    "label": "ml_signal",
    "reason": "Method calls with string literals indicate specific actions or configurations"
  },
  {
    "line": 11,
    "text": "    data_schema = Index",
    "annotation": "\ud83e\udde0 ML Signal: Method calls with string literals indicate specific actions or configurations",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1366,
      62,
      15952,
      2611,
      796,
      12901
    ],
    "start_token": 49,
    "end_token": 58,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      3848,
      351,
      4731,
      4187,
      874,
      7603,
      2176,
      4028,
      393,
      25412
    ],
    "label": "ml_signal",
    "reason": "Method calls with string literals indicate specific actions or configurations"
  },
  {
    "line": 13,
    "text": "    def run(self):",
    "annotation": "\ud83e\udde0 ML Signal: Method calls with string literals indicate specific actions or configurations",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      1057,
      7,
      944,
      2599
    ],
    "start_token": 58,
    "end_token": 66,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      3848,
      351,
      4731,
      4187,
      874,
      7603,
      2176,
      4028,
      393,
      25412
    ],
    "label": "ml_signal",
    "reason": "Method calls with string literals indicate specific actions or configurations"
  },
  {
    "line": 15,
    "text": "        self.record_cn_index(\"sz\")",
    "annotation": "\ud83e\udde0 ML Signal: Method calls with string literals indicate specific actions or configurations",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      22105,
      62,
      31522,
      62,
      9630,
      7203,
      82,
      89,
      4943
    ],
    "start_token": 66,
    "end_token": 84,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      3848,
      351,
      4731,
      4187,
      874,
      7603,
      2176,
      4028,
      393,
      25412
    ],
    "label": "ml_signal",
    "reason": "Method calls with string literals indicate specific actions or configurations"
  },
  {
    "line": 13,
    "text": "    def run(self):",
    "annotation": "\ud83e\udde0 ML Signal: Method for recording index data, useful for learning data processing patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1057,
      7,
      944,
      2599
    ],
    "start_token": 84,
    "end_token": 92,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      329,
      8296,
      6376,
      1366,
      11,
      4465,
      329,
      4673,
      1366,
      7587,
      7572
    ],
    "label": "ml_signal",
    "reason": "Method for recording index data, useful for learning data processing patterns"
  },
  {
    "line": 15,
    "text": "        self.record_cn_index(\"sz\")",
    "annotation": "\ud83e\udde0 ML Signal: API call pattern for fetching data",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      22105,
      62,
      31522,
      62,
      9630,
      7203,
      82,
      89,
      4943
    ],
    "start_token": 92,
    "end_token": 110,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7824,
      869,
      3912,
      329,
      21207,
      278,
      1366
    ],
    "label": "ml_signal",
    "reason": "API call pattern for fetching data"
  },
  {
    "line": 17,
    "text": "        self.record_cn_index(\"cni\")",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Ensure df_to_db handles data safely to prevent injection attacks",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      22105,
      62,
      31522,
      62,
      9630,
      7203,
      66,
      8461,
      4943
    ],
    "start_token": 110,
    "end_token": 128,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      48987,
      47764,
      62,
      1462,
      62,
      9945,
      17105,
      1366,
      11512,
      284,
      2948,
      16954,
      3434
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Ensure df_to_db handles data safely to prevent injection attacks"
  },
  {
    "line": 18,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Pattern for storing data into a database",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 128,
    "end_token": 128,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      329,
      23069,
      1366,
      656,
      257,
      6831
    ],
    "label": "ml_signal",
    "reason": "Pattern for storing data into a database"
  },
  {
    "line": 20,
    "text": "        self.record_cs_index(\"sh\")",
    "annotation": "\u2705 Best Practice: Use of logging for tracking execution and debugging",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      22105,
      62,
      6359,
      62,
      9630,
      7203,
      1477,
      4943
    ],
    "start_token": 128,
    "end_token": 145,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      18931,
      329,
      9646,
      9706,
      290,
      28769
    ],
    "label": "best_practice",
    "reason": "Use of logging for tracking execution and debugging"
  },
  {
    "line": 18,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on input parameter",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 145,
    "end_token": 145,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      5128,
      11507
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on input parameter"
  },
  {
    "line": 24,
    "text": "    # \u4e2d\u8bc1\uff0c\u4e0a\u6d77",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of assert for control flow, which can be disabled in production",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      220,
      40792,
      46237,
      223,
      171,
      120,
      234,
      41468,
      38184,
      115
    ],
    "start_token": 145,
    "end_token": 159,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      6818,
      329,
      1630,
      5202,
      11,
      543,
      460,
      307,
      10058,
      287,
      3227
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of assert for control flow, which can be disabled in production"
  },
  {
    "line": 27,
    "text": "        df_to_db(data_schema=self.data_schema, df=df, provider=self.provider, force_update=True)",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over items in a dictionary",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      62,
      1462,
      62,
      9945,
      7,
      7890,
      62,
      15952,
      2611,
      28,
      944,
      13,
      7890,
      62,
      15952,
      2611,
      11,
      47764,
      28,
      7568,
      11,
      10131,
      28,
      944,
      13,
      15234,
      1304,
      11,
      2700,
      62,
      19119,
      28,
      17821,
      8
    ],
    "start_token": 159,
    "end_token": 201,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      3709,
      287,
      257,
      22155
    ],
    "label": "ml_signal",
    "reason": "Iterating over items in a dictionary"
  },
  {
    "line": 29,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: API call with dynamic parameters",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 201,
    "end_token": 201,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7824,
      869,
      351,
      8925,
      10007
    ],
    "label": "ml_signal",
    "reason": "API call with dynamic parameters"
  },
  {
    "line": 31,
    "text": "    def record_cn_index(self, index_type):",
    "annotation": "\ud83e\udde0 ML Signal: Data persistence operation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1700,
      62,
      31522,
      62,
      9630,
      7,
      944,
      11,
      6376,
      62,
      4906,
      2599
    ],
    "start_token": 201,
    "end_token": 217,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6060,
      30802,
      4905
    ],
    "label": "ml_signal",
    "reason": "Data persistence operation"
  },
  {
    "line": 31,
    "text": "    def record_cn_index(self, index_type):",
    "annotation": "\ud83e\udde0 ML Signal: Logging operation with dynamic content",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      1700,
      62,
      31522,
      62,
      9630,
      7,
      944,
      11,
      6376,
      62,
      4906,
      2599
    ],
    "start_token": 217,
    "end_token": 233,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      4905,
      351,
      8925,
      2695
    ],
    "label": "ml_signal",
    "reason": "Logging operation with dynamic content"
  },
  {
    "line": 31,
    "text": "    def record_cn_index(self, index_type):",
    "annotation": "\u2705 Best Practice: Standard Python entry point check",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      1700,
      62,
      31522,
      62,
      9630,
      7,
      944,
      11,
      6376,
      62,
      4906,
      2599
    ],
    "start_token": 233,
    "end_token": 249,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8997,
      11361,
      5726,
      966,
      2198
    ],
    "label": "best_practice",
    "reason": "Standard Python entry point check"
  },
  {
    "line": 31,
    "text": "    def record_cn_index(self, index_type):",
    "annotation": "\ud83e\udde0 ML Signal: Execution of main functionality",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1700,
      62,
      31522,
      62,
      9630,
      7,
      944,
      11,
      6376,
      62,
      4906,
      2599
    ],
    "start_token": 249,
    "end_token": 265,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      37497,
      286,
      1388,
      11244
    ],
    "label": "ml_signal",
    "reason": "Execution of main functionality"
  },
  {
    "line": 31,
    "text": "    def record_cn_index(self, index_type):",
    "annotation": "\u2705 Best Practice: Use of __all__ to define public API of the module",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      1700,
      62,
      31522,
      62,
      9630,
      7,
      944,
      11,
      6376,
      62,
      4906,
      2599
    ],
    "start_token": 265,
    "end_token": 281,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265
    ],
    "label": "best_practice",
    "reason": "Use of __all__ to define public API of the module"
  }
]