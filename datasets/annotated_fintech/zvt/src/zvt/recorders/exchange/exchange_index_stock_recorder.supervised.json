[
  {
    "line": 9,
    "text": "from zvt.domain import Index, IndexStock",
    "annotation": "\ud83e\udde0 ML Signal: Inheritance from TimestampsDataRecorder indicates a pattern of extending functionality",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      27830,
      1330,
      12901,
      11,
      12901,
      26207
    ],
    "start_token": 0,
    "end_token": 10,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47025,
      42942,
      422,
      5045,
      395,
      9430,
      6601,
      6690,
      2875,
      9217,
      257,
      3912,
      286,
      16610,
      11244
    ],
    "label": "ml_signal",
    "reason": "Inheritance from TimestampsDataRecorder indicates a pattern of extending functionality"
  },
  {
    "line": 10,
    "text": "from zvt.recorders.exchange.api import cs_index_stock_api, cn_index_stock_api",
    "annotation": "\ud83e\udde0 ML Signal: Use of class attributes for configuration suggests a pattern for setting static properties",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      8344,
      6361,
      13,
      1069,
      3803,
      13,
      15042,
      1330,
      50115,
      62,
      9630,
      62,
      13578,
      62,
      15042,
      11,
      269,
      77,
      62,
      9630,
      62,
      13578,
      62,
      15042
    ],
    "start_token": 10,
    "end_token": 38,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1398,
      12608,
      329,
      8398,
      5644,
      257,
      3912,
      329,
      4634,
      9037,
      6608
    ],
    "label": "ml_signal",
    "reason": "Use of class attributes for configuration suggests a pattern for setting static properties"
  },
  {
    "line": 11,
    "text": "from zvt.utils.time_utils import pre_month_start_date",
    "annotation": "\u2705 Best Practice: Class name should be descriptive of its purpose and functionality",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      2435,
      62,
      26791,
      1330,
      662,
      62,
      8424,
      62,
      9688,
      62,
      4475
    ],
    "start_token": 38,
    "end_token": 55,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      1438,
      815,
      307,
      35644,
      286,
      663,
      4007,
      290,
      11244
    ],
    "label": "best_practice",
    "reason": "Class name should be descriptive of its purpose and functionality"
  },
  {
    "line": 13,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Static configuration of entity_provider indicates a pattern for data source specification",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 55,
    "end_token": 55,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      36125,
      8398,
      286,
      9312,
      62,
      15234,
      1304,
      9217,
      257,
      3912,
      329,
      1366,
      2723,
      20855
    ],
    "label": "ml_signal",
    "reason": "Static configuration of entity_provider indicates a pattern for data source specification"
  },
  {
    "line": 14,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Static configuration of entity_schema indicates a pattern for defining data structure",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 55,
    "end_token": 55,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      36125,
      8398,
      286,
      9312,
      62,
      15952,
      2611,
      9217,
      257,
      3912,
      329,
      16215,
      1366,
      4645
    ],
    "label": "ml_signal",
    "reason": "Static configuration of entity_schema indicates a pattern for defining data structure"
  },
  {
    "line": 14,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Static configuration of provider indicates a pattern for specifying data provider",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 55,
    "end_token": 55,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      36125,
      8398,
      286,
      10131,
      9217,
      257,
      3912,
      329,
      31577,
      1366,
      10131
    ],
    "label": "ml_signal",
    "reason": "Static configuration of provider indicates a pattern for specifying data provider"
  },
  {
    "line": 14,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Static configuration of data_schema indicates a pattern for defining data structure",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 55,
    "end_token": 55,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      36125,
      8398,
      286,
      1366,
      62,
      15952,
      2611,
      9217,
      257,
      3912,
      329,
      16215,
      1366,
      4645
    ],
    "label": "ml_signal",
    "reason": "Static configuration of data_schema indicates a pattern for defining data structure"
  },
  {
    "line": 32,
    "text": "        entity_filters=None,",
    "annotation": "\u2705 Best Practice: Call to super() ensures proper initialization of the base class.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      62,
      10379,
      1010,
      28,
      14202,
      11
    ],
    "start_token": 55,
    "end_token": 69,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4889,
      284,
      2208,
      3419,
      19047,
      1774,
      37588,
      286,
      262,
      2779,
      1398,
      13
    ],
    "label": "best_practice",
    "reason": "Call to super() ensures proper initialization of the base class."
  },
  {
    "line": 49,
    "text": "            entity_filters,",
    "annotation": "\ud83e\udde0 ML Signal: Tracking the record_history parameter could indicate user preference for data persistence.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      62,
      10379,
      1010,
      11
    ],
    "start_token": 69,
    "end_token": 85,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      37169,
      262,
      1700,
      62,
      23569,
      11507,
      714,
      7603,
      2836,
      12741,
      329,
      1366,
      30802,
      13
    ],
    "label": "ml_signal",
    "reason": "Tracking the record_history parameter could indicate user preference for data persistence."
  },
  {
    "line": 49,
    "text": "            entity_filters,",
    "annotation": "\u2705 Best Practice: Consider adding type hints for the method parameters for better readability and maintainability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      62,
      10379,
      1010,
      11
    ],
    "start_token": 85,
    "end_token": 101,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      4375,
      2099,
      20269,
      329,
      262,
      2446,
      10007,
      329,
      1365,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Consider adding type hints for the method parameters for better readability and maintainability"
  },
  {
    "line": 51,
    "text": "            real_time,",
    "annotation": "\u2705 Best Practice: Use descriptive variable names for better readability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1103,
      62,
      2435,
      11
    ],
    "start_token": 101,
    "end_token": 116,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      35644,
      7885,
      3891,
      329,
      1365,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Use descriptive variable names for better readability"
  },
  {
    "line": 52,
    "text": "            fix_duplicate_way,",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on a boolean attribute (self.record_history) can indicate feature usage patterns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4259,
      62,
      646,
      489,
      5344,
      62,
      1014,
      11
    ],
    "start_token": 116,
    "end_token": 135,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      257,
      25131,
      11688,
      357,
      944,
      13,
      22105,
      62,
      23569,
      8,
      460,
      7603,
      3895,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on a boolean attribute (self.record_history) can indicate feature usage patterns"
  },
  {
    "line": 55,
    "text": "        )",
    "annotation": "\ud83e\udde0 ML Signal: List comprehension usage can indicate coding style and efficiency preferences",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 135,
    "end_token": 143,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7343,
      35915,
      8748,
      460,
      7603,
      19617,
      3918,
      290,
      9332,
      15387
    ],
    "label": "ml_signal",
    "reason": "List comprehension usage can indicate coding style and efficiency preferences"
  },
  {
    "line": 58,
    "text": "    def init_timestamps(self, entity_item) -> List[pd.Timestamp]:",
    "annotation": "\ud83e\udde0 ML Signal: Returning a list with a single element can indicate a specific design choice or pattern",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      2315,
      62,
      16514,
      395,
      9430,
      7,
      944,
      11,
      9312,
      62,
      9186,
      8,
      4613,
      7343,
      58,
      30094,
      13,
      14967,
      27823,
      5974
    ],
    "start_token": 143,
    "end_token": 167,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      42882,
      257,
      1351,
      351,
      257,
      2060,
      5002,
      460,
      7603,
      257,
      2176,
      1486,
      3572,
      393,
      3912
    ],
    "label": "ml_signal",
    "reason": "Returning a list with a single element can indicate a specific design choice or pattern"
  },
  {
    "line": 56,
    "text": "        self.record_history = record_history",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on entity attributes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      22105,
      62,
      23569,
      796,
      1700,
      62,
      23569
    ],
    "start_token": 167,
    "end_token": 183,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      9312,
      12608
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on entity attributes"
  },
  {
    "line": 59,
    "text": "        last_valid_date = pre_month_start_date()",
    "annotation": "\ud83e\udde0 ML Signal: API call pattern with dynamic parameters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      938,
      62,
      12102,
      62,
      4475,
      796,
      662,
      62,
      8424,
      62,
      9688,
      62,
      4475,
      3419
    ],
    "start_token": 183,
    "end_token": 204,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7824,
      869,
      3912,
      351,
      8925,
      10007
    ],
    "label": "ml_signal",
    "reason": "API call pattern with dynamic parameters"
  },
  {
    "line": 61,
    "text": "            # \u6bcf\u4e2a\u6708\u8bb0\u5f55\u4e00\u6b21",
    "annotation": "\ud83e\udde0 ML Signal: Data persistence pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      10545,
      107,
      237,
      10310,
      103,
      17312,
      42062,
      106,
      108,
      37605,
      243,
      31660,
      162,
      105,
      94
    ],
    "start_token": 204,
    "end_token": 231,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6060,
      30802,
      3912
    ],
    "label": "ml_signal",
    "reason": "Data persistence pattern"
  },
  {
    "line": 64,
    "text": "            return [last_valid_date]",
    "annotation": "\ud83e\udde0 ML Signal: API call pattern with static parameters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      685,
      12957,
      62,
      12102,
      62,
      4475,
      60
    ],
    "start_token": 231,
    "end_token": 250,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7824,
      869,
      3912,
      351,
      9037,
      10007
    ],
    "label": "ml_signal",
    "reason": "API call pattern with static parameters"
  },
  {
    "line": 65,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Data persistence pattern",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 250,
    "end_token": 250,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6060,
      30802,
      3912
    ],
    "label": "ml_signal",
    "reason": "Data persistence pattern"
  },
  {
    "line": 65,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Direct execution of code without input validation",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 250,
    "end_token": 250,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      4128,
      9706,
      286,
      2438,
      1231,
      5128,
      21201
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Direct execution of code without input validation"
  },
  {
    "line": 65,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Hardcoded parameters in function call",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 250,
    "end_token": 250,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6912,
      40976,
      10007,
      287,
      2163,
      869
    ],
    "label": "ml_signal",
    "reason": "Hardcoded parameters in function call"
  },
  {
    "line": 65,
    "text": "",
    "annotation": "\u2705 Best Practice: Define __all__ for explicit module exports",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 250,
    "end_token": 250,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      500,
      11593,
      439,
      834,
      329,
      7952,
      8265,
      15319
    ],
    "label": "best_practice",
    "reason": "Define __all__ for explicit module exports"
  }
]