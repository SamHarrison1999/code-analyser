[
  {
    "line": 4,
    "text": "",
    "annotation": "\u2705 Best Practice: Grouping imports by standard, third-party, and local modules improves readability.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 0,
    "end_token": 0,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      416,
      3210,
      11,
      2368,
      12,
      10608,
      11,
      290,
      1957,
      13103,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports by standard, third-party, and local modules improves readability."
  },
  {
    "line": 9,
    "text": "from zvt.contract.recorder import Recorder",
    "annotation": "\u2705 Best Practice: Class should inherit from a base class to ensure consistent behavior and structure",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      28484,
      13,
      8344,
      2875,
      1330,
      3311,
      2875
    ],
    "start_token": 0,
    "end_token": 11,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      815,
      16955,
      422,
      257,
      2779,
      1398,
      284,
      4155,
      6414,
      4069,
      290,
      4645
    ],
    "label": "best_practice",
    "reason": "Class should inherit from a base class to ensure consistent behavior and structure"
  },
  {
    "line": 11,
    "text": "from zvt.recorders.consts import DEFAULT_SH_HEADER, DEFAULT_SZ_HEADER",
    "annotation": "\u2705 Best Practice: Class variables should be defined at the top of the class for clarity",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      8344,
      6361,
      13,
      1102,
      6448,
      1330,
      5550,
      38865,
      62,
      9693,
      62,
      37682,
      1137,
      11,
      5550,
      38865,
      62,
      50,
      57,
      62,
      37682,
      1137
    ],
    "start_token": 11,
    "end_token": 37,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      9633,
      815,
      307,
      5447,
      379,
      262,
      1353,
      286,
      262,
      1398,
      329,
      16287
    ],
    "label": "best_practice",
    "reason": "Class variables should be defined at the top of the class for clarity"
  },
  {
    "line": 13,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Hardcoded provider name could be used to identify data source patterns",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 37,
    "end_token": 37,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6912,
      40976,
      10131,
      1438,
      714,
      307,
      973,
      284,
      5911,
      1366,
      2723,
      7572
    ],
    "label": "ml_signal",
    "reason": "Hardcoded provider name could be used to identify data source patterns"
  },
  {
    "line": 14,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoded URL may lead to maintenance issues if the URL changes",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 37,
    "end_token": 37,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      40976,
      10289,
      743,
      1085,
      284,
      9262,
      2428,
      611,
      262,
      10289,
      2458
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoded URL may lead to maintenance issues if the URL changes"
  },
  {
    "line": 17,
    "text": "    provider = \"exchange\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Hardcoded URL can lead to security issues if the endpoint changes or is deprecated.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      10131,
      796,
      366,
      1069,
      3803,
      1
    ],
    "start_token": 37,
    "end_token": 46,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      6912,
      40976,
      10289,
      460,
      1085,
      284,
      2324,
      2428,
      611,
      262,
      36123,
      2458,
      393,
      318,
      39224,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Hardcoded URL can lead to security issues if the endpoint changes or is deprecated."
  },
  {
    "line": 19,
    "text": "    original_page_url = \"http://www.sse.com.cn/assortment/stock/list/share/\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): No error handling for the HTTP request, which may lead to unhandled exceptions.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2656,
      62,
      7700,
      62,
      6371,
      796,
      366,
      4023,
      1378,
      2503,
      13,
      82,
      325,
      13,
      785,
      13,
      31522,
      14,
      562,
      33920,
      14,
      13578,
      14,
      4868,
      14,
      20077,
      30487
    ],
    "start_token": 46,
    "end_token": 76,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1400,
      4049,
      9041,
      329,
      262,
      14626,
      2581,
      11,
      543,
      743,
      1085,
      284,
      555,
      38788,
      13269,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "No error handling for the HTTP request, which may lead to unhandled exceptions."
  },
  {
    "line": 19,
    "text": "    original_page_url = \"http://www.sse.com.cn/assortment/stock/list/share/\"",
    "annotation": "\ud83e\udde0 ML Signal: Usage of requests.get to fetch data from a URL.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2656,
      62,
      7700,
      62,
      6371,
      796,
      366,
      4023,
      1378,
      2503,
      13,
      82,
      325,
      13,
      785,
      13,
      31522,
      14,
      562,
      33920,
      14,
      13578,
      14,
      4868,
      14,
      20077,
      30487
    ],
    "start_token": 76,
    "end_token": 106,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      7007,
      13,
      1136,
      284,
      21207,
      1366,
      422,
      257,
      10289,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of requests.get to fetch data from a URL."
  },
  {
    "line": 22,
    "text": "        url = (",
    "annotation": "\ud83e\udde0 ML Signal: Method call with specific parameters indicating a pattern of downloading stock lists.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      19016,
      796,
      357
    ],
    "start_token": 106,
    "end_token": 116,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      869,
      351,
      2176,
      10007,
      12739,
      257,
      3912,
      286,
      22023,
      4283,
      8341,
      13
    ],
    "label": "ml_signal",
    "reason": "Method call with specific parameters indicating a pattern of downloading stock lists."
  },
  {
    "line": 26,
    "text": "        self.download_stock_list(response=resp, exchange=\"sh\")",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Hardcoded URL can lead to security issues if the endpoint changes or is deprecated.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      15002,
      62,
      13578,
      62,
      4868,
      7,
      26209,
      28,
      4363,
      11,
      5163,
      2625,
      1477,
      4943
    ],
    "start_token": 116,
    "end_token": 139,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      6912,
      40976,
      10289,
      460,
      1085,
      284,
      2324,
      2428,
      611,
      262,
      36123,
      2458,
      393,
      318,
      39224,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Hardcoded URL can lead to security issues if the endpoint changes or is deprecated."
  },
  {
    "line": 28,
    "text": "        url = (",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): No error handling for the HTTP request, which may lead to unhandled exceptions.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      19016,
      796,
      357
    ],
    "start_token": 139,
    "end_token": 149,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1400,
      4049,
      9041,
      329,
      262,
      14626,
      2581,
      11,
      543,
      743,
      1085,
      284,
      555,
      38788,
      13269,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "No error handling for the HTTP request, which may lead to unhandled exceptions."
  },
  {
    "line": 29,
    "text": "            \"http://query.sse.com.cn/security/stock/downloadStockListFile.do?csrcCode=&stockCode=&areaName=&stockType=8\"",
    "annotation": "\ud83e\udde0 ML Signal: Usage of requests.get to fetch data from a URL.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      4023,
      1378,
      22766,
      13,
      82,
      325,
      13,
      785,
      13,
      31522,
      14,
      12961,
      14,
      13578,
      14,
      15002,
      26207,
      8053,
      8979,
      13,
      4598,
      30,
      6359,
      6015,
      10669,
      28,
      5,
      13578,
      10669,
      28,
      5,
      20337,
      5376,
      28,
      5,
      13578,
      6030,
      28,
      23,
      1
    ],
    "start_token": 149,
    "end_token": 201,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      7007,
      13,
      1136,
      284,
      21207,
      1366,
      422,
      257,
      10289,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of requests.get to fetch data from a URL."
  },
  {
    "line": 30,
    "text": "        )",
    "annotation": "\ud83e\udde0 ML Signal: Method call with specific parameters indicating a pattern of downloading stock lists.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 201,
    "end_token": 209,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      869,
      351,
      2176,
      10007,
      12739,
      257,
      3912,
      286,
      22023,
      4283,
      8341,
      13
    ],
    "label": "ml_signal",
    "reason": "Method call with specific parameters indicating a pattern of downloading stock lists."
  },
  {
    "line": 30,
    "text": "        )",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Hardcoded URL can lead to security issues if the endpoint changes or is deprecated.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 209,
    "end_token": 217,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      6912,
      40976,
      10289,
      460,
      1085,
      284,
      2324,
      2428,
      611,
      262,
      36123,
      2458,
      393,
      318,
      39224,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Hardcoded URL can lead to security issues if the endpoint changes or is deprecated."
  },
  {
    "line": 39,
    "text": "        df = None",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): No error handling for the HTTP request, which may lead to unhandled exceptions.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      796,
      6045
    ],
    "start_token": 217,
    "end_token": 227,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1400,
      4049,
      9041,
      329,
      262,
      14626,
      2581,
      11,
      543,
      743,
      1085,
      284,
      555,
      38788,
      13269,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "No error handling for the HTTP request, which may lead to unhandled exceptions."
  },
  {
    "line": 39,
    "text": "        df = None",
    "annotation": "\ud83e\udde0 ML Signal: Usage of requests.get to fetch data from a URL.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      796,
      6045
    ],
    "start_token": 227,
    "end_token": 237,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      7007,
      13,
      1136,
      284,
      21207,
      1366,
      422,
      257,
      10289,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of requests.get to fetch data from a URL."
  },
  {
    "line": 39,
    "text": "        df = None",
    "annotation": "\ud83e\udde0 ML Signal: Method call with specific parameters indicating a pattern of downloading stock lists.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      796,
      6045
    ],
    "start_token": 237,
    "end_token": 247,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      869,
      351,
      2176,
      10007,
      12739,
      257,
      3912,
      286,
      22023,
      4283,
      8341,
      13
    ],
    "label": "ml_signal",
    "reason": "Method call with specific parameters indicating a pattern of downloading stock lists."
  },
  {
    "line": 40,
    "text": "        if exchange == \"sh\":",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Printing data frames can expose sensitive data in logs",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      5163,
      6624,
      366,
      1477,
      1298
    ],
    "start_token": 247,
    "end_token": 260,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      44118,
      1366,
      13431,
      460,
      15651,
      8564,
      1366,
      287,
      17259
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Printing data frames can expose sensitive data in logs"
  },
  {
    "line": 58,
    "text": "                dtype=str,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Printing data frames can expose sensitive data in logs",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      288,
      4906,
      28,
      2536,
      11
    ],
    "start_token": 260,
    "end_token": 280,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      44118,
      1366,
      13431,
      460,
      15651,
      8564,
      1366,
      287,
      17259
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Printing data frames can expose sensitive data in logs"
  },
  {
    "line": 60,
    "text": "                date_format=\"%Y-m-d\",",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Printing data frames can expose sensitive data in logs",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3128,
      62,
      18982,
      2625,
      4,
      56,
      12,
      76,
      12,
      67,
      1600
    ],
    "start_token": 280,
    "end_token": 306,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      44118,
      1366,
      13431,
      460,
      15651,
      8564,
      1366,
      287,
      17259
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Printing data frames can expose sensitive data in logs"
  },
  {
    "line": 70,
    "text": "            # handle the dirty data",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a database function to persist data",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      5412,
      262,
      11841,
      1366
    ],
    "start_token": 306,
    "end_token": 322,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      6831,
      2163,
      284,
      21160,
      1366
    ],
    "label": "ml_signal",
    "reason": "Usage of a database function to persist data"
  },
  {
    "line": 72,
    "text": "            df.loc[df[\"code\"] == \"600996\", \"list_date\"] = \"2016-12-26\"",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a database function to persist data",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      13,
      17946,
      58,
      7568,
      14692,
      8189,
      8973,
      6624,
      366,
      8054,
      38565,
      1600,
      366,
      4868,
      62,
      4475,
      8973,
      796,
      366,
      5304,
      12,
      1065,
      12,
      2075,
      1
    ],
    "start_token": 322,
    "end_token": 359,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      6831,
      2163,
      284,
      21160,
      1366
    ],
    "label": "ml_signal",
    "reason": "Usage of a database function to persist data"
  },
  {
    "line": 74,
    "text": "            print(df[\"list_date\"])",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Logging data frames can expose sensitive data in logs",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      7568,
      14692,
      4868,
      62,
      4475,
      8973,
      8
    ],
    "start_token": 359,
    "end_token": 379,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5972,
      2667,
      1366,
      13431,
      460,
      15651,
      8564,
      1366,
      287,
      17259
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Logging data frames can expose sensitive data in logs"
  },
  {
    "line": 74,
    "text": "            print(df[\"list_date\"])",
    "annotation": "\u2705 Best Practice: Use of __all__ to define public API of the module",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      7568,
      14692,
      4868,
      62,
      4475,
      8973,
      8
    ],
    "start_token": 379,
    "end_token": 399,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265
    ],
    "label": "best_practice",
    "reason": "Use of __all__ to define public API of the module"
  },
  {
    "line": 74,
    "text": "            print(df[\"list_date\"])",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation and usage of a class",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      7568,
      14692,
      4868,
      62,
      4475,
      8973,
      8
    ],
    "start_token": 399,
    "end_token": 419,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      290,
      8748,
      286,
      257,
      1398
    ],
    "label": "ml_signal",
    "reason": "Instantiation and usage of a class"
  },
  {
    "line": 74,
    "text": "            print(df[\"list_date\"])",
    "annotation": "\ud83e\udde0 ML Signal: Execution of a method within a class",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      7568,
      14692,
      4868,
      62,
      4475,
      8973,
      8
    ],
    "start_token": 419,
    "end_token": 439,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      37497,
      286,
      257,
      2446,
      1626,
      257,
      1398
    ],
    "label": "ml_signal",
    "reason": "Execution of a method within a class"
  },
  {
    "line": 74,
    "text": "            print(df[\"list_date\"])",
    "annotation": "\u2705 Best Practice: Use of __all__ to define public API of the module",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      7568,
      14692,
      4868,
      62,
      4475,
      8973,
      8
    ],
    "start_token": 439,
    "end_token": 459,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265
    ],
    "label": "best_practice",
    "reason": "Use of __all__ to define public API of the module"
  }
]