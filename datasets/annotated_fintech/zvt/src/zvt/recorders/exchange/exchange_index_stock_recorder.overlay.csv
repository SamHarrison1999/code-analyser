annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
üß† ML Signal: Inheritance from TimestampsDataRecorder indicates a pattern of extending functionality,"[8582, 100, 254, 10373, 26484, 25, 47025, 42942, 422, 5045, 395, 9430, 6601, 6690, 2875, 9217, 257, 3912, 286, 16610, 11244]",1.0,10,ml_signal,9,Inheritance from TimestampsDataRecorder indicates a pattern of extending functionality,,0,"from zvt.domain import Index, IndexStock","[6738, 1976, 36540, 13, 27830, 1330, 12901, 11, 12901, 26207]"
üß† ML Signal: Use of class attributes for configuration suggests a pattern for setting static properties,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1398, 12608, 329, 8398, 5644, 257, 3912, 329, 4634, 9037, 6608]",0.5,38,ml_signal,10,Use of class attributes for configuration suggests a pattern for setting static properties,,10,"from zvt.recorders.exchange.api import cs_index_stock_api, cn_index_stock_api","[6738, 1976, 36540, 13, 8344, 6361, 13, 1069, 3803, 13, 15042, 1330, 50115, 62, 9630, 62, 13578, 62, 15042, 11, 269, 77, 62, 9630, 62, 13578, 62, 15042]"
‚úÖ Best Practice: Class name should be descriptive of its purpose and functionality,"[26486, 227, 6705, 19939, 25, 5016, 1438, 815, 307, 35644, 286, 663, 4007, 290, 11244]",0.5,55,best_practice,11,Class name should be descriptive of its purpose and functionality,,38,from zvt.utils.time_utils import pre_month_start_date,"[6738, 1976, 36540, 13, 26791, 13, 2435, 62, 26791, 1330, 662, 62, 8424, 62, 9688, 62, 4475]"
üß† ML Signal: Static configuration of entity_provider indicates a pattern for data source specification,"[8582, 100, 254, 10373, 26484, 25, 36125, 8398, 286, 9312, 62, 15234, 1304, 9217, 257, 3912, 329, 1366, 2723, 20855]",0.5,55,ml_signal,13,Static configuration of entity_provider indicates a pattern for data source specification,,55,,[]
üß† ML Signal: Static configuration of entity_schema indicates a pattern for defining data structure,"[8582, 100, 254, 10373, 26484, 25, 36125, 8398, 286, 9312, 62, 15952, 2611, 9217, 257, 3912, 329, 16215, 1366, 4645]",0.5,55,ml_signal,14,Static configuration of entity_schema indicates a pattern for defining data structure,,55,,[]
üß† ML Signal: Static configuration of provider indicates a pattern for specifying data provider,"[8582, 100, 254, 10373, 26484, 25, 36125, 8398, 286, 10131, 9217, 257, 3912, 329, 31577, 1366, 10131]",0.5,55,ml_signal,14,Static configuration of provider indicates a pattern for specifying data provider,,55,,[]
üß† ML Signal: Static configuration of data_schema indicates a pattern for defining data structure,"[8582, 100, 254, 10373, 26484, 25, 36125, 8398, 286, 1366, 62, 15952, 2611, 9217, 257, 3912, 329, 16215, 1366, 4645]",0.5,55,ml_signal,14,Static configuration of data_schema indicates a pattern for defining data structure,,55,,[]
‚úÖ Best Practice: Call to super() ensures proper initialization of the base class.,"[26486, 227, 6705, 19939, 25, 4889, 284, 2208, 3419, 19047, 1774, 37588, 286, 262, 2779, 1398, 13]",1.0,69,best_practice,32,Call to super() ensures proper initialization of the base class.,,55,"        entity_filters=None,","[220, 220, 220, 220, 220, 220, 220, 9312, 62, 10379, 1010, 28, 14202, 11]"
üß† ML Signal: Tracking the record_history parameter could indicate user preference for data persistence.,"[8582, 100, 254, 10373, 26484, 25, 37169, 262, 1700, 62, 23569, 11507, 714, 7603, 2836, 12741, 329, 1366, 30802, 13]",1.0,85,ml_signal,49,Tracking the record_history parameter could indicate user preference for data persistence.,,69,"            entity_filters,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 9312, 62, 10379, 1010, 11]"
‚úÖ Best Practice: Consider adding type hints for the method parameters for better readability and maintainability,"[26486, 227, 6705, 19939, 25, 12642, 4375, 2099, 20269, 329, 262, 2446, 10007, 329, 1365, 1100, 1799, 290, 5529, 1799]",0.5,101,best_practice,49,Consider adding type hints for the method parameters for better readability and maintainability,,85,"            entity_filters,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 9312, 62, 10379, 1010, 11]"
‚úÖ Best Practice: Use descriptive variable names for better readability,"[26486, 227, 6705, 19939, 25, 5765, 35644, 7885, 3891, 329, 1365, 1100, 1799]",0.5,116,best_practice,51,Use descriptive variable names for better readability,,101,"            real_time,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1103, 62, 2435, 11]"
üß† ML Signal: Conditional logic based on a boolean attribute (self.record_history) can indicate feature usage patterns,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9156, 1912, 319, 257, 25131, 11688, 357, 944, 13, 22105, 62, 23569, 8, 460, 7603, 3895, 8748, 7572]",1.0,135,ml_signal,52,Conditional logic based on a boolean attribute (self.record_history) can indicate feature usage patterns,,116,"            fix_duplicate_way,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4259, 62, 646, 489, 5344, 62, 1014, 11]"
üß† ML Signal: List comprehension usage can indicate coding style and efficiency preferences,"[8582, 100, 254, 10373, 26484, 25, 7343, 35915, 8748, 460, 7603, 19617, 3918, 290, 9332, 15387]",0.5,143,ml_signal,55,List comprehension usage can indicate coding style and efficiency preferences,,135,        ),"[220, 220, 220, 220, 220, 220, 220, 1267]"
üß† ML Signal: Returning a list with a single element can indicate a specific design choice or pattern,"[8582, 100, 254, 10373, 26484, 25, 42882, 257, 1351, 351, 257, 2060, 5002, 460, 7603, 257, 2176, 1486, 3572, 393, 3912]",0.5,167,ml_signal,58,Returning a list with a single element can indicate a specific design choice or pattern,,143,"    def init_timestamps(self, entity_item) -> List[pd.Timestamp]:","[220, 220, 220, 825, 2315, 62, 16514, 395, 9430, 7, 944, 11, 9312, 62, 9186, 8, 4613, 7343, 58, 30094, 13, 14967, 27823, 5974]"
üß† ML Signal: Conditional logic based on entity attributes,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9156, 1912, 319, 9312, 12608]",1.0,183,ml_signal,56,Conditional logic based on entity attributes,,167,        self.record_history = record_history,"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 22105, 62, 23569, 796, 1700, 62, 23569]"
üß† ML Signal: API call pattern with dynamic parameters,"[8582, 100, 254, 10373, 26484, 25, 7824, 869, 3912, 351, 8925, 10007]",1.0,204,ml_signal,59,API call pattern with dynamic parameters,,183,        last_valid_date = pre_month_start_date(),"[220, 220, 220, 220, 220, 220, 220, 938, 62, 12102, 62, 4475, 796, 662, 62, 8424, 62, 9688, 62, 4475, 3419]"
üß† ML Signal: Data persistence pattern,"[8582, 100, 254, 10373, 26484, 25, 6060, 30802, 3912]",1.0,231,ml_signal,61,Data persistence pattern,,204,            # ÊØè‰∏™ÊúàËÆ∞ÂΩï‰∏ÄÊ¨°,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 10545, 107, 237, 10310, 103, 17312, 42062, 106, 108, 37605, 243, 31660, 162, 105, 94]"
üß† ML Signal: API call pattern with static parameters,"[8582, 100, 254, 10373, 26484, 25, 7824, 869, 3912, 351, 9037, 10007]",1.0,250,ml_signal,64,API call pattern with static parameters,,231,            return [last_valid_date],"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441, 685, 12957, 62, 12102, 62, 4475, 60]"
üß† ML Signal: Data persistence pattern,"[8582, 100, 254, 10373, 26484, 25, 6060, 30802, 3912]",1.0,250,ml_signal,65,Data persistence pattern,,250,,[]
‚ö†Ô∏è SAST Risk (Low): Direct execution of code without input validation,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 9706, 286, 2438, 1231, 5128, 21201]",0.5,250,sast_risk,65,Direct execution of code without input validation,Low,250,,[]
üß† ML Signal: Hardcoded parameters in function call,"[8582, 100, 254, 10373, 26484, 25, 6912, 40976, 10007, 287, 2163, 869]",0.5,250,ml_signal,65,Hardcoded parameters in function call,,250,,[]
‚úÖ Best Practice: Define __all__ for explicit module exports,"[26486, 227, 6705, 19939, 25, 2896, 500, 11593, 439, 834, 329, 7952, 8265, 15319]",0.5,250,best_practice,65,Define __all__ for explicit module exports,,250,,[]
