annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Use a logger for consistent and configurable logging throughout the application.,"[26486, 227, 6705, 19939, 25, 5765, 257, 49706, 329, 6414, 290, 4566, 11970, 18931, 3690, 262, 3586, 13]",1.0,15,best_practice,9,Use a logger for consistent and configurable logging throughout the application.,,0,from zvt.recorders.consts import DEFAULT_HEADER,"[6738, 1976, 36540, 13, 8344, 6361, 13, 1102, 6448, 1330, 5550, 38865, 62, 37682, 1137]"
üß† ML Signal: Hardcoded URLs can indicate specific data sources or endpoints used by the application.,"[8582, 100, 254, 10373, 26484, 25, 6912, 40976, 32336, 460, 7603, 2176, 1366, 4237, 393, 886, 13033, 973, 416, 262, 3586, 13]",0.5,15,ml_signal,11,Hardcoded URLs can indicate specific data sources or endpoints used by the application.,,15,,[]
üß† ML Signal: URL patterns can be used to identify API endpoints and their usage in the application.,"[8582, 100, 254, 10373, 26484, 25, 10289, 7572, 460, 307, 973, 284, 5911, 7824, 886, 13033, 290, 511, 8748, 287, 262, 3586, 13]",1.0,71,ml_signal,17,URL patterns can be used to identify API endpoints and their usage in the application.,,15,# ‰∏≠ËØÅÊåáÊï∞ ÊäìÂèñ È£éÊ†ºÊåáÊï∞ Ë°å‰∏öÊåáÊï∞ ËßÑÊ®°ÊåáÊï∞ Âü∫ÈáëÊåáÊï∞,"[2, 220, 40792, 46237, 223, 162, 234, 229, 46763, 108, 10545, 232, 241, 20998, 244, 16268, 96, 236, 43718, 120, 162, 234, 229, 46763, 108, 5525, 94, 234, 10310, 248, 162, 234, 229, 46763, 108, 5525, 100, 226, 162, 101, 94, 162, 234, 229, 46763, 108, 10263, 253, 118, 34932, 239, 162, 234, 229, 46763, 108]"
üß† ML Signal: Mapping categories to URLs can indicate how different data categories are accessed.,"[8582, 100, 254, 10373, 26484, 25, 337, 5912, 9376, 284, 32336, 460, 7603, 703, 1180, 1366, 9376, 389, 17535, 13]",0.5,127,ml_signal,17,Mapping categories to URLs can indicate how different data categories are accessed.,,71,# ‰∏≠ËØÅÊåáÊï∞ ÊäìÂèñ È£éÊ†ºÊåáÊï∞ Ë°å‰∏öÊåáÊï∞ ËßÑÊ®°ÊåáÊï∞ Âü∫ÈáëÊåáÊï∞,"[2, 220, 40792, 46237, 223, 162, 234, 229, 46763, 108, 10545, 232, 241, 20998, 244, 16268, 96, 236, 43718, 120, 162, 234, 229, 46763, 108, 5525, 94, 234, 10310, 248, 162, 234, 229, 46763, 108, 5525, 100, 226, 162, 101, 94, 162, 234, 229, 46763, 108, 10263, 253, 118, 34932, 239, 162, 234, 229, 46763, 108]"
üß† ML Signal: Separate mappings for different categories can indicate different data handling strategies.,"[8582, 100, 254, 10373, 26484, 25, 8621, 30748, 285, 39242, 329, 1180, 9376, 460, 7603, 1180, 1366, 9041, 10064, 13]",0.5,137,ml_signal,26,Separate mappings for different categories can indicate different data handling strategies.,,127,sz_category_map_url = {,"[82, 89, 62, 22872, 62, 8899, 62, 6371, 796, 1391]"
"‚ö†Ô∏è SAST Risk (Medium): Potential KeyError if ""data"" key is not present in the JSON response","[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 32480, 7383, 12331, 611, 366, 7890, 1, 1994, 318, 407, 1944, 287, 262, 19449, 2882]",0.5,152,sast_risk,20,"Potential KeyError if ""data"" key is not present in the JSON response",Medium,137,"    IndexCategory.industry: url.format(""201""),","[220, 220, 220, 12901, 27313, 13, 23213, 563, 25, 19016, 13, 18982, 7203, 1264, 12340]"
"‚úÖ Best Practice: Consider handling exceptions for robustness, such as KeyError or JSONDecodeError","[26486, 227, 6705, 19939, 25, 12642, 9041, 13269, 329, 12373, 1108, 11, 884, 355, 7383, 12331, 393, 19449, 10707, 1098, 12331]",0.5,166,best_practice,21,"Consider handling exceptions for robustness, such as KeyError or JSONDecodeError",,152,"    IndexCategory.scope: url.format(""200""),","[220, 220, 220, 12901, 27313, 13, 29982, 25, 19016, 13, 18982, 7203, 2167, 12340]"
"‚ö†Ô∏è SAST Risk (Low): raise_for_status() will raise an HTTPError for bad responses, which should be handled","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5298, 62, 1640, 62, 13376, 3419, 481, 5298, 281, 14626, 12331, 329, 2089, 9109, 11, 543, 815, 307, 12118]",0.5,167,sast_risk,23,"raise_for_status() will raise an HTTPError for bad responses, which should be handled",Low,166,},[92]
üß† ML Signal: Extracting specific data from a JSON response is a common pattern in API interaction,"[8582, 100, 254, 10373, 26484, 25, 29677, 278, 2176, 1366, 422, 257, 19449, 2882, 318, 257, 2219, 3912, 287, 7824, 10375]",0.5,194,ml_signal,25,Extracting specific data from a JSON response is a common pattern in API interaction,,167,# Ê∑±ËØÅÊåáÊï∞ Âè™ÂèñËßÑÊ®°ÊåáÊï∞,"[2, 10545, 115, 109, 46237, 223, 162, 234, 229, 46763, 108, 10263, 237, 103, 20998, 244, 164, 100, 226, 162, 101, 94, 162, 234, 229, 46763, 108]"
üß† ML Signal: Default parameter values can indicate common usage patterns.,"[8582, 100, 254, 10373, 26484, 25, 15161, 11507, 3815, 460, 7603, 2219, 8748, 7572, 13]",1.0,194,ml_signal,24,Default parameter values can indicate common usage patterns.,,194,,[]
‚ö†Ô∏è SAST Risk (Low): Using assert for control flow can be bypassed if Python is run with optimizations.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 6818, 329, 1630, 5202, 460, 307, 17286, 276, 611, 11361, 318, 1057, 351, 41446, 13]",0.5,208,sast_risk,31,Using assert for control flow can be bypassed if Python is run with optimizations.,Low,194,def _get_resp_data(resp: requests.Response):,"[4299, 4808, 1136, 62, 4363, 62, 7890, 7, 4363, 25, 7007, 13, 31077, 2599]"
‚ö†Ô∏è SAST Risk (Low): Creating a new session for each function call can lead to resource exhaustion.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 30481, 257, 649, 6246, 329, 1123, 2163, 869, 460, 1085, 284, 8271, 32493, 13]",0.5,219,sast_risk,33,Creating a new session for each function call can lead to resource exhaustion.,Low,208,"    return resp.json()[""data""]","[220, 220, 220, 1441, 1217, 13, 17752, 3419, 14692, 7890, 8973]"
"‚ö†Ô∏è SAST Risk (Medium): No error handling for the HTTP request, which can lead to unhandled exceptions.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 1400, 4049, 9041, 329, 262, 14626, 2581, 11, 543, 460, 1085, 284, 555, 38788, 13269, 13]",1.0,240,sast_risk,36,"No error handling for the HTTP request, which can lead to unhandled exceptions.",Medium,219,"def get_cn_index(index_type=""cni"", category=IndexCategory.style):","[4299, 651, 62, 31522, 62, 9630, 7, 9630, 62, 4906, 2625, 66, 8461, 1600, 6536, 28, 15732, 27313, 13, 7635, 2599]"
"‚ö†Ô∏è SAST Risk (Medium): No error handling for the HTTP request, which can lead to unhandled exceptions.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 1400, 4049, 9041, 329, 262, 14626, 2581, 11, 543, 460, 1085, 284, 555, 38788, 13269, 13]",1.0,251,sast_risk,45,"No error handling for the HTTP request, which can lead to unhandled exceptions.",Medium,240,    requests_session = requests.Session(),"[220, 220, 220, 7007, 62, 29891, 796, 7007, 13, 36044, 3419]"
üß† ML Signal: String formatting for IDs can indicate patterns in ID generation.,"[8582, 100, 254, 10373, 26484, 25, 10903, 33313, 329, 32373, 460, 7603, 7572, 287, 4522, 5270, 13]",0.5,262,ml_signal,45,String formatting for IDs can indicate patterns in ID generation.,,251,    requests_session = requests.Session(),"[220, 220, 220, 7007, 62, 29891, 796, 7007, 13, 36044, 3419]"
‚ö†Ô∏è SAST Risk (Low): Use of time.sleep can lead to performance issues in production environments.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 640, 13, 42832, 460, 1085, 284, 2854, 2428, 287, 3227, 12493, 13]",0.5,273,sast_risk,66,Use of time.sleep can lead to performance issues in production environments.,Low,262,    # peDynamic: 29.8607,"[220, 220, 220, 1303, 613, 44090, 25, 2808, 13, 23, 31980]"
"‚ö†Ô∏è SAST Risk (Low): Potential for returning None if the_list is empty, which may not be handled by the caller.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 8024, 6045, 611, 262, 62, 4868, 318, 6565, 11, 543, 743, 407, 307, 12118, 416, 262, 24955, 13]",0.5,284,sast_risk,66,"Potential for returning None if the_list is empty, which may not be handled by the caller.",Low,273,    # peDynamic: 29.8607,"[220, 220, 220, 1303, 613, 44090, 25, 2808, 13, 23, 31980]"
üß† ML Signal: Direct function call in the main block can indicate common usage patterns.,"[8582, 100, 254, 10373, 26484, 25, 4128, 2163, 869, 287, 262, 1388, 2512, 460, 7603, 2219, 8748, 7572, 13]",0.5,295,ml_signal,66,Direct function call in the main block can indicate common usage patterns.,,284,    # peDynamic: 29.8607,"[220, 220, 220, 1303, 613, 44090, 25, 2808, 13, 23, 31980]"
‚úÖ Best Practice: Using __all__ to define public API of the module.,"[26486, 227, 6705, 19939, 25, 8554, 11593, 439, 834, 284, 8160, 1171, 7824, 286, 262, 8265, 13]",0.5,306,best_practice,66,Using __all__ to define public API of the module.,,295,    # peDynamic: 29.8607,"[220, 220, 220, 1303, 613, 44090, 25, 2808, 13, 23, 31980]"
