[
  {
    "line": 8,
    "text": "from zvt.recorders.consts import DEFAULT_HEADER",
    "annotation": "\u2705 Best Practice: Use a logger for consistent and configurable logging throughout the module.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      8344,
      6361,
      13,
      1102,
      6448,
      1330,
      5550,
      38865,
      62,
      37682,
      1137
    ],
    "start_token": 0,
    "end_token": 15,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      257,
      49706,
      329,
      6414,
      290,
      4566,
      11970,
      18931,
      3690,
      262,
      8265,
      13
    ],
    "label": "best_practice",
    "reason": "Use a logger for consistent and configurable logging throughout the module."
  },
  {
    "line": 11,
    "text": "logger = logging.getLogger(__name__)",
    "annotation": "\ud83e\udde0 ML Signal: Hardcoded URLs can indicate a pattern of accessing specific web resources.",
    "confidence": 0.5,
    "tokens": [
      6404,
      1362,
      796,
      18931,
      13,
      1136,
      11187,
      1362,
      7,
      834,
      3672,
      834,
      8
    ],
    "start_token": 15,
    "end_token": 28,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6912,
      40976,
      32336,
      460,
      7603,
      257,
      3912,
      286,
      22534,
      2176,
      3992,
      4133,
      13
    ],
    "label": "ml_signal",
    "reason": "Hardcoded URLs can indicate a pattern of accessing specific web resources."
  },
  {
    "line": 14,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Hardcoded URLs can indicate a pattern of accessing specific web resources.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 28,
    "end_token": 28,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6912,
      40976,
      32336,
      460,
      7603,
      257,
      3912,
      286,
      22534,
      2176,
      3992,
      4133,
      13
    ],
    "label": "ml_signal",
    "reason": "Hardcoded URLs can indicate a pattern of accessing specific web resources."
  },
  {
    "line": 17,
    "text": "index_category_map = {IndexCategory.scope: \"17\", IndexCategory.industry: \"18\", IndexCategory.style: \"19\"}",
    "annotation": "\ud83e\udde0 ML Signal: Mapping categories to specific codes can indicate a pattern of data categorization.",
    "confidence": 0.5,
    "tokens": [
      9630,
      62,
      22872,
      62,
      8899,
      796,
      1391,
      15732,
      27313,
      13,
      29982,
      25,
      366,
      1558,
      1600,
      12901,
      27313,
      13,
      23213,
      563,
      25,
      366,
      1507,
      1600,
      12901,
      27313,
      13,
      7635,
      25,
      366,
      1129,
      20662
    ],
    "start_token": 28,
    "end_token": 60,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      337,
      5912,
      9376,
      284,
      2176,
      12416,
      460,
      7603,
      257,
      3912,
      286,
      1366,
      17851,
      1634,
      13
    ],
    "label": "ml_signal",
    "reason": "Mapping categories to specific codes can indicate a pattern of data categorization."
  },
  {
    "line": 11,
    "text": "logger = logging.getLogger(__name__)",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential KeyError if \"data\" key is not present in the JSON response",
    "confidence": 1.0,
    "tokens": [
      6404,
      1362,
      796,
      18931,
      13,
      1136,
      11187,
      1362,
      7,
      834,
      3672,
      834,
      8
    ],
    "start_token": 60,
    "end_token": 73,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      7383,
      12331,
      611,
      366,
      7890,
      1,
      1994,
      318,
      407,
      1944,
      287,
      262,
      19449,
      2882
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential KeyError if \"data\" key is not present in the JSON response"
  },
  {
    "line": 12,
    "text": "",
    "annotation": "\u2705 Best Practice: Consider handling exceptions for robustness",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 73,
    "end_token": 73,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      9041,
      13269,
      329,
      12373,
      1108
    ],
    "label": "best_practice",
    "reason": "Consider handling exceptions for robustness"
  },
  {
    "line": 14,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Raises HTTPError if the HTTP request returned an unsuccessful status code",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 73,
    "end_token": 73,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      7567,
      2696,
      14626,
      12331,
      611,
      262,
      14626,
      2581,
      4504,
      281,
      23993,
      3722,
      2438
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Raises HTTPError if the HTTP request returned an unsuccessful status code"
  },
  {
    "line": 16,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Accessing JSON data from HTTP response",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 73,
    "end_token": 73,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8798,
      278,
      19449,
      1366,
      422,
      14626,
      2882
    ],
    "label": "ml_signal",
    "reason": "Accessing JSON data from HTTP response"
  },
  {
    "line": 15,
    "text": "url = \"https://www.csindex.com.cn/csindex-home/index-list/query-index-item\"",
    "annotation": "\ud83e\udde0 ML Signal: Use of conditional logic to determine index_series based on index_type",
    "confidence": 0.5,
    "tokens": [
      6371,
      796,
      366,
      5450,
      1378,
      2503,
      13,
      6359,
      9630,
      13,
      785,
      13,
      31522,
      14,
      6359,
      9630,
      12,
      11195,
      14,
      9630,
      12,
      4868,
      14,
      22766,
      12,
      9630,
      12,
      9186,
      1
    ],
    "start_token": 73,
    "end_token": 102,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      26340,
      9156,
      284,
      5004,
      6376,
      62,
      25076,
      1912,
      319,
      6376,
      62,
      4906
    ],
    "label": "ml_signal",
    "reason": "Use of conditional logic to determine index_series based on index_type"
  },
  {
    "line": 18,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of conditional logic to determine index_series based on index_type",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 102,
    "end_token": 102,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      26340,
      9156,
      284,
      5004,
      6376,
      62,
      25076,
      1912,
      319,
      6376,
      62,
      4906
    ],
    "label": "ml_signal",
    "reason": "Use of conditional logic to determine index_series based on index_type"
  },
  {
    "line": 22,
    "text": "    return resp.json()[\"data\"]",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of assert for control flow can be disabled in optimized mode",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1441,
      1217,
      13,
      17752,
      3419,
      14692,
      7890,
      8973
    ],
    "start_token": 102,
    "end_token": 113,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      6818,
      329,
      1630,
      5202,
      460,
      307,
      10058,
      287,
      23392,
      4235
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of assert for control flow can be disabled in optimized mode"
  },
  {
    "line": 23,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of external mapping to determine index_classify",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 113,
    "end_token": 113,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      7097,
      16855,
      284,
      5004,
      6376,
      62,
      4871,
      1958
    ],
    "label": "ml_signal",
    "reason": "Use of external mapping to determine index_classify"
  },
  {
    "line": 23,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of descriptive keys for dictionary improves readability",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 113,
    "end_token": 113,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      35644,
      8251,
      329,
      22155,
      19575,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of descriptive keys for dictionary improves readability"
  },
  {
    "line": 23,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of descriptive keys for dictionary improves readability",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 113,
    "end_token": 113,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      35644,
      8251,
      329,
      22155,
      19575,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of descriptive keys for dictionary improves readability"
  },
  {
    "line": 32,
    "text": "        assert False",
    "annotation": "\u2705 Best Practice: Use of descriptive keys for dictionary improves readability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6818,
      10352
    ],
    "start_token": 113,
    "end_token": 122,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      35644,
      8251,
      329,
      22155,
      19575,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of descriptive keys for dictionary improves readability"
  },
  {
    "line": 39,
    "text": "            \"ifCustomized\": None,",
    "annotation": "\ud83e\udde0 ML Signal: Dynamic assignment of indexClassify based on input category",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      361,
      15022,
      1143,
      1298,
      6045,
      11
    ],
    "start_token": 122,
    "end_token": 140,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      26977,
      16237,
      286,
      6376,
      9487,
      1958,
      1912,
      319,
      5128,
      6536
    ],
    "label": "ml_signal",
    "reason": "Dynamic assignment of indexClassify based on input category"
  },
  {
    "line": 43,
    "text": "            \"hotSpot\": None,",
    "annotation": "\ud83e\udde0 ML Signal: Dynamic assignment of indexSeries based on input index_type",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      8940,
      32565,
      1298,
      6045,
      11
    ],
    "start_token": 140,
    "end_token": 157,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      26977,
      16237,
      286,
      6376,
      27996,
      1912,
      319,
      5128,
      6376,
      62,
      4906
    ],
    "label": "ml_signal",
    "reason": "Dynamic assignment of indexSeries based on input index_type"
  },
  {
    "line": 40,
    "text": "            \"ifTracked\": None,",
    "annotation": "\ud83e\udde0 ML Signal: Default parameter usage pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      361,
      2898,
      6021,
      1298,
      6045,
      11
    ],
    "start_token": 157,
    "end_token": 175,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15161,
      11507,
      8748,
      3912
    ],
    "label": "ml_signal",
    "reason": "Default parameter usage pattern"
  },
  {
    "line": 46,
    "text": "            \"region\": None,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of assert for control flow",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      36996,
      1298,
      6045,
      11
    ],
    "start_token": 175,
    "end_token": 191,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      6818,
      329,
      1630,
      5202
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of assert for control flow"
  },
  {
    "line": 49,
    "text": "        },",
    "annotation": "\u2705 Best Practice: Use a session object for HTTP requests",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      8964
    ],
    "start_token": 191,
    "end_token": 199,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      257,
      6246,
      2134,
      329,
      14626,
      7007
    ],
    "label": "best_practice",
    "reason": "Use a session object for HTTP requests"
  },
  {
    "line": 54,
    "text": "    if index_type == \"csi\":",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): No error handling for HTTP request",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      611,
      6376,
      62,
      4906,
      6624,
      366,
      6359,
      72,
      1298
    ],
    "start_token": 199,
    "end_token": 211,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      1400,
      4049,
      9041,
      329,
      14626,
      2581
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "No error handling for HTTP request"
  },
  {
    "line": 64,
    "text": "    for category in category_list:",
    "annotation": "\ud83e\udde0 ML Signal: URL construction pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      329,
      6536,
      287,
      6536,
      62,
      4868,
      25
    ],
    "start_token": 211,
    "end_token": 221,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      10289,
      5103,
      3912
    ],
    "label": "ml_signal",
    "reason": "URL construction pattern"
  },
  {
    "line": 64,
    "text": "    for category in category_list:",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): No error handling for HTTP request",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      329,
      6536,
      287,
      6536,
      62,
      4868,
      25
    ],
    "start_token": 221,
    "end_token": 231,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      1400,
      4049,
      9041,
      329,
      14626,
      2581
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "No error handling for HTTP request"
  },
  {
    "line": 64,
    "text": "    for category in category_list:",
    "annotation": "\ud83e\udde0 ML Signal: Entity ID construction pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      329,
      6536,
      287,
      6536,
      62,
      4868,
      25
    ],
    "start_token": 231,
    "end_token": 241,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20885,
      4522,
      5103,
      3912
    ],
    "label": "ml_signal",
    "reason": "Entity ID construction pattern"
  },
  {
    "line": 77,
    "text": "            code = result[\"indexCode\"]",
    "annotation": "\ud83e\udde0 ML Signal: Timestamp conversion pattern",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2438,
      796,
      1255,
      14692,
      9630,
      10669,
      8973
    ],
    "start_token": 241,
    "end_token": 259,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5045,
      27823,
      11315,
      3912
    ],
    "label": "ml_signal",
    "reason": "Timestamp conversion pattern"
  },
  {
    "line": 81,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Date conversion pattern",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 259,
    "end_token": 259,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7536,
      11315,
      3912
    ],
    "label": "ml_signal",
    "reason": "Date conversion pattern"
  },
  {
    "line": 84,
    "text": "            index_item = {",
    "annotation": "\u2705 Best Practice: Use pandas for structured data handling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6376,
      62,
      9186,
      796,
      1391
    ],
    "start_token": 259,
    "end_token": 275,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      19798,
      292,
      329,
      20793,
      1366,
      9041
    ],
    "label": "best_practice",
    "reason": "Use pandas for structured data handling"
  },
  {
    "line": 84,
    "text": "            index_item = {",
    "annotation": "\ud83e\udde0 ML Signal: Main execution pattern",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6376,
      62,
      9186,
      796,
      1391
    ],
    "start_token": 275,
    "end_token": 291,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8774,
      9706,
      3912
    ],
    "label": "ml_signal",
    "reason": "Main execution pattern"
  },
  {
    "line": 84,
    "text": "            index_item = {",
    "annotation": "\u2705 Best Practice: Define __all__ for module exports",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6376,
      62,
      9186,
      796,
      1391
    ],
    "start_token": 291,
    "end_token": 307,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      500,
      11593,
      439,
      834,
      329,
      8265,
      15319
    ],
    "label": "best_practice",
    "reason": "Define __all__ for module exports"
  }
]