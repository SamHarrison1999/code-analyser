[
  {
    "line": 4,
    "text": "",
    "annotation": "\u2705 Best Practice: Group imports into standard library, third-party, and local imports for better readability",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 0,
    "end_token": 0,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      17944,
      656,
      3210,
      5888,
      11,
      2368,
      12,
      10608,
      11,
      290,
      1957,
      17944,
      329,
      1365,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Group imports into standard library, third-party, and local imports for better readability"
  },
  {
    "line": 11,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Inheritance from TimestampsDataRecorder indicates a pattern of extending functionality",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 0,
    "end_token": 0,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47025,
      42942,
      422,
      5045,
      395,
      9430,
      6601,
      6690,
      2875,
      9217,
      257,
      3912,
      286,
      16610,
      11244
    ],
    "label": "ml_signal",
    "reason": "Inheritance from TimestampsDataRecorder indicates a pattern of extending functionality"
  },
  {
    "line": 13,
    "text": "class ExchangeStockSummaryRecorder(TimestampsDataRecorder):",
    "annotation": "\ud83e\udde0 ML Signal: Use of class-level attributes for configuration",
    "confidence": 0.5,
    "tokens": [
      4871,
      12516,
      26207,
      22093,
      6690,
      2875,
      7,
      14967,
      395,
      9430,
      6601,
      6690,
      2875,
      2599
    ],
    "start_token": 0,
    "end_token": 14,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1398,
      12,
      5715,
      12608,
      329,
      8398
    ],
    "label": "ml_signal",
    "reason": "Use of class-level attributes for configuration"
  },
  {
    "line": 15,
    "text": "    entity_schema = Index",
    "annotation": "\ud83e\udde0 ML Signal: Use of class-level attributes for configuration",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      15952,
      2611,
      796,
      12901
    ],
    "start_token": 14,
    "end_token": 23,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1398,
      12,
      5715,
      12608,
      329,
      8398
    ],
    "label": "ml_signal",
    "reason": "Use of class-level attributes for configuration"
  },
  {
    "line": 17,
    "text": "    provider = \"exchange\"",
    "annotation": "\ud83e\udde0 ML Signal: Use of class-level attributes for configuration",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      10131,
      796,
      366,
      1069,
      3803,
      1
    ],
    "start_token": 23,
    "end_token": 32,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1398,
      12,
      5715,
      12608,
      329,
      8398
    ],
    "label": "ml_signal",
    "reason": "Use of class-level attributes for configuration"
  },
  {
    "line": 17,
    "text": "    provider = \"exchange\"",
    "annotation": "\ud83e\udde0 ML Signal: Use of class-level attributes for configuration",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      10131,
      796,
      366,
      1069,
      3803,
      1
    ],
    "start_token": 32,
    "end_token": 41,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1398,
      12,
      5715,
      12608,
      329,
      8398
    ],
    "label": "ml_signal",
    "reason": "Use of class-level attributes for configuration"
  },
  {
    "line": 17,
    "text": "    provider = \"exchange\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoded URL can lead to inflexibility and potential security risks if the URL changes or is deprecated",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      10131,
      796,
      366,
      1069,
      3803,
      1
    ],
    "start_token": 41,
    "end_token": 50,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      40976,
      10289,
      460,
      1085,
      284,
      1167,
      2588,
      2247,
      290,
      2785,
      2324,
      7476,
      611,
      262,
      10289,
      2458,
      393,
      318,
      39224
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoded URL can lead to inflexibility and potential security risks if the URL changes or is deprecated"
  },
  {
    "line": 17,
    "text": "    provider = \"exchange\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoded URL with query parameters can expose sensitive data or be manipulated if not handled properly",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      10131,
      796,
      366,
      1069,
      3803,
      1
    ],
    "start_token": 50,
    "end_token": 59,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      40976,
      10289,
      351,
      12405,
      10007,
      460,
      15651,
      8564,
      1366,
      393,
      307,
      25036,
      611,
      407,
      12118,
      6105
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoded URL with query parameters can expose sensitive data or be manipulated if not handled properly"
  },
  {
    "line": 33,
    "text": "        entity_filters=None,",
    "annotation": "\u2705 Best Practice: Use of super() to call the parent class's __init__ method",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      62,
      10379,
      1010,
      28,
      14202,
      11
    ],
    "start_token": 59,
    "end_token": 73,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2208,
      3419,
      284,
      869,
      262,
      2560,
      1398,
      338,
      11593,
      15003,
      834,
      2446
    ],
    "label": "best_practice",
    "reason": "Use of super() to call the parent class's __init__ method"
  },
  {
    "line": 33,
    "text": "        entity_filters=None,",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters in function signature",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      62,
      10379,
      1010,
      28,
      14202,
      11
    ],
    "start_token": 73,
    "end_token": 87,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      287,
      2163,
      9877
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters in function signature"
  },
  {
    "line": 33,
    "text": "        entity_filters=None,",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters in function signature",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      62,
      10379,
      1010,
      28,
      14202,
      11
    ],
    "start_token": 87,
    "end_token": 101,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      287,
      2163,
      9877
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters in function signature"
  },
  {
    "line": 33,
    "text": "        entity_filters=None,",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters in function signature",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      62,
      10379,
      1010,
      28,
      14202,
      11
    ],
    "start_token": 101,
    "end_token": 115,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      287,
      2163,
      9877
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters in function signature"
  },
  {
    "line": 33,
    "text": "        entity_filters=None,",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters in function signature",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      62,
      10379,
      1010,
      28,
      14202,
      11
    ],
    "start_token": 115,
    "end_token": 129,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      287,
      2163,
      9877
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters in function signature"
  },
  {
    "line": 49,
    "text": "            entity_filters,",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters in function signature",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      62,
      10379,
      1010,
      11
    ],
    "start_token": 129,
    "end_token": 145,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      287,
      2163,
      9877
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters in function signature"
  },
  {
    "line": 49,
    "text": "            entity_filters,",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters in function signature",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      62,
      10379,
      1010,
      11
    ],
    "start_token": 145,
    "end_token": 161,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      287,
      2163,
      9877
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters in function signature"
  },
  {
    "line": 49,
    "text": "            entity_filters,",
    "annotation": "\ud83e\udde0 ML Signal: Use of hardcoded list in function call",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      62,
      10379,
      1010,
      11
    ],
    "start_token": 161,
    "end_token": 177,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1327,
      40976,
      1351,
      287,
      2163,
      869
    ],
    "label": "ml_signal",
    "reason": "Use of hardcoded list in function call"
  },
  {
    "line": 49,
    "text": "            entity_filters,",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters in function signature",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      62,
      10379,
      1010,
      11
    ],
    "start_token": 177,
    "end_token": 193,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      287,
      2163,
      9877
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters in function signature"
  },
  {
    "line": 51,
    "text": "            real_time,",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters in function signature",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1103,
      62,
      2435,
      11
    ],
    "start_token": 193,
    "end_token": 208,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      287,
      2163,
      9877
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters in function signature"
  },
  {
    "line": 53,
    "text": "            start_timestamp,",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters in function signature",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      923,
      62,
      16514,
      27823,
      11
    ],
    "start_token": 208,
    "end_token": 224,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      287,
      2163,
      9877
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters in function signature"
  },
  {
    "line": 55,
    "text": "        )",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters in function signature",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 224,
    "end_token": 232,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      287,
      2163,
      9877
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters in function signature"
  },
  {
    "line": 57,
    "text": "    def init_timestamps(self, entity):",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters in function signature",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      2315,
      62,
      16514,
      395,
      9430,
      7,
      944,
      11,
      9312,
      2599
    ],
    "start_token": 232,
    "end_token": 246,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      287,
      2163,
      9877
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters in function signature"
  },
  {
    "line": 59,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters in function signature",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 246,
    "end_token": 246,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      287,
      2163,
      9877
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters in function signature"
  },
  {
    "line": 61,
    "text": "        json_results = []",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters in function signature",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      33918,
      62,
      43420,
      796,
      17635
    ],
    "start_token": 246,
    "end_token": 258,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      287,
      2163,
      9877
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters in function signature"
  },
  {
    "line": 49,
    "text": "            entity_filters,",
    "annotation": "\ud83e\udde0 ML Signal: Use of pandas for date range generation",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      62,
      10379,
      1010,
      11
    ],
    "start_token": 258,
    "end_token": 274,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      19798,
      292,
      329,
      3128,
      2837,
      5270
    ],
    "label": "ml_signal",
    "reason": "Use of pandas for date range generation"
  },
  {
    "line": 50,
    "text": "            ignore_failed,",
    "annotation": "\u2705 Best Practice: Use of pd.date_range for generating a list of business days",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      8856,
      62,
      47904,
      11
    ],
    "start_token": 274,
    "end_token": 289,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      279,
      67,
      13,
      4475,
      62,
      9521,
      329,
      15453,
      257,
      1351,
      286,
      1597,
      1528
    ],
    "label": "best_practice",
    "reason": "Use of pd.date_range for generating a list of business days"
  },
  {
    "line": 52,
    "text": "            fix_duplicate_way,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential timezone issues with pd.Timestamp.now()",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4259,
      62,
      646,
      489,
      5344,
      62,
      1014,
      11
    ],
    "start_token": 289,
    "end_token": 308,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      640,
      11340,
      2428,
      351,
      279,
      67,
      13,
      14967,
      27823,
      13,
      2197,
      3419
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential timezone issues with pd.Timestamp.now()"
  },
  {
    "line": 54,
    "text": "            end_timestamp,",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over timestamps to fetch and process data",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      886,
      62,
      16514,
      27823,
      11
    ],
    "start_token": 308,
    "end_token": 324,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      4628,
      395,
      9430,
      284,
      21207,
      290,
      1429,
      1366
    ],
    "label": "ml_signal",
    "reason": "Iterating over timestamps to fetch and process data"
  },
  {
    "line": 56,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: URL formatting with dynamic timestamp",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 324,
    "end_token": 324,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      10289,
      33313,
      351,
      8925,
      41033
    ],
    "label": "ml_signal",
    "reason": "URL formatting with dynamic timestamp"
  },
  {
    "line": 58,
    "text": "        return pd.date_range(start=entity.timestamp, end=pd.Timestamp.now(), freq=\"B\").tolist()",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): No error handling for network request",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      279,
      67,
      13,
      4475,
      62,
      9521,
      7,
      9688,
      28,
      26858,
      13,
      16514,
      27823,
      11,
      886,
      28,
      30094,
      13,
      14967,
      27823,
      13,
      2197,
      22784,
      2030,
      80,
      2625,
      33,
      11074,
      83,
      349,
      396,
      3419
    ],
    "start_token": 324,
    "end_token": 364,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      1400,
      4049,
      9041,
      329,
      3127,
      2581
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "No error handling for network request"
  },
  {
    "line": 60,
    "text": "    def record(self, entity, start, end, size, timestamps):",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): No error handling for JSON decoding",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      1700,
      7,
      944,
      11,
      9312,
      11,
      923,
      11,
      886,
      11,
      2546,
      11,
      4628,
      395,
      9430,
      2599
    ],
    "start_token": 364,
    "end_token": 384,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      1400,
      4049,
      9041,
      329,
      19449,
      39938
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "No error handling for JSON decoding"
  },
  {
    "line": 61,
    "text": "        json_results = []",
    "annotation": "\ud83e\udde0 ML Signal: Filtering results based on productType",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      33918,
      62,
      43420,
      796,
      17635
    ],
    "start_token": 384,
    "end_token": 396,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7066,
      20212,
      2482,
      1912,
      319,
      1720,
      6030
    ],
    "label": "ml_signal",
    "reason": "Filtering results based on productType"
  },
  {
    "line": 61,
    "text": "        json_results = []",
    "annotation": "\ud83e\udde0 ML Signal: Appending processed data to json_results",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      33918,
      62,
      43420,
      796,
      17635
    ],
    "start_token": 396,
    "end_token": 408,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2034,
      1571,
      13686,
      1366,
      284,
      33918,
      62,
      43420
    ],
    "label": "ml_signal",
    "reason": "Appending processed data to json_results"
  },
  {
    "line": 74,
    "text": "                        \"provider\": \"exchange\",",
    "annotation": "\u2705 Best Practice: Use of helper function to convert values",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      15234,
      1304,
      1298,
      366,
      1069,
      3803,
      1600
    ],
    "start_token": 408,
    "end_token": 439,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      31904,
      2163,
      284,
      10385,
      3815
    ],
    "label": "best_practice",
    "reason": "Use of helper function to convert values"
  },
  {
    "line": 81,
    "text": "                        \"turnover\": to_float(result_json[\"trdAmt1\"] + \"\u4ebf\", 0.0),",
    "annotation": "\u2705 Best Practice: Early return to avoid unnecessary processing",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      15344,
      2502,
      1298,
      284,
      62,
      22468,
      7,
      20274,
      62,
      17752,
      14692,
      2213,
      67,
      5840,
      83,
      16,
      8973,
      1343,
      366,
      12859,
      123,
      1600,
      657,
      13,
      15,
      828
    ],
    "start_token": 439,
    "end_token": 489,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12556,
      1441,
      284,
      3368,
      13114,
      7587
    ],
    "label": "best_practice",
    "reason": "Early return to avoid unnecessary processing"
  },
  {
    "line": 79,
    "text": "                        \"total_tradable_vaule\": to_float(result_json[\"negotiableValue1\"] + \"\u4ebf\", 0.0),",
    "annotation": "\u2705 Best Practice: Use of __name__ == \"__main__\" to allow or prevent parts of code from being run when the modules are imported.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      23350,
      62,
      2213,
      324,
      540,
      62,
      85,
      559,
      293,
      1298,
      284,
      62,
      22468,
      7,
      20274,
      62,
      17752,
      14692,
      12480,
      313,
      3379,
      11395,
      16,
      8973,
      1343,
      366,
      12859,
      123,
      1600,
      657,
      13,
      15,
      828
    ],
    "start_token": 489,
    "end_token": 546,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      3672,
      834,
      6624,
      366,
      834,
      12417,
      834,
      1,
      284,
      1249,
      393,
      2948,
      3354,
      286,
      2438,
      422,
      852,
      1057,
      618,
      262,
      13103,
      389,
      17392,
      13
    ],
    "label": "best_practice",
    "reason": "Use of __name__ == \"__main__\" to allow or prevent parts of code from being run when the modules are imported."
  },
  {
    "line": 81,
    "text": "                        \"turnover\": to_float(result_json[\"trdAmt1\"] + \"\u4ebf\", 0.0),",
    "annotation": "\u26a0\ufe0f SAST Risk (High): Potential use of an undefined class 'ExchangeStockSummaryRecorder', which could lead to runtime errors.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      15344,
      2502,
      1298,
      284,
      62,
      22468,
      7,
      20274,
      62,
      17752,
      14692,
      2213,
      67,
      5840,
      83,
      16,
      8973,
      1343,
      366,
      12859,
      123,
      1600,
      657,
      13,
      15,
      828
    ],
    "start_token": 546,
    "end_token": 596,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      11922,
      2599,
      32480,
      779,
      286,
      281,
      28721,
      1398,
      705,
      3109,
      3803,
      26207,
      22093,
      6690,
      2875,
      3256,
      543,
      714,
      1085,
      284,
      19124,
      8563,
      13
    ],
    "label": "sast_risk",
    "severity": "High",
    "reason": "Potential use of an undefined class 'ExchangeStockSummaryRecorder', which could lead to runtime errors."
  },
  {
    "line": 81,
    "text": "                        \"turnover\": to_float(result_json[\"trdAmt1\"] + \"\u4ebf\", 0.0),",
    "annotation": "\u2705 Best Practice: Use of __all__ to define the public interface of the module, controlling what is exported when import * is used.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      15344,
      2502,
      1298,
      284,
      62,
      22468,
      7,
      20274,
      62,
      17752,
      14692,
      2213,
      67,
      5840,
      83,
      16,
      8973,
      1343,
      366,
      12859,
      123,
      1600,
      657,
      13,
      15,
      828
    ],
    "start_token": 596,
    "end_token": 646,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      262,
      1171,
      7071,
      286,
      262,
      8265,
      11,
      12755,
      644,
      318,
      29050,
      618,
      1330,
      1635,
      318,
      973,
      13
    ],
    "label": "best_practice",
    "reason": "Use of __all__ to define the public interface of the module, controlling what is exported when import * is used."
  }
]