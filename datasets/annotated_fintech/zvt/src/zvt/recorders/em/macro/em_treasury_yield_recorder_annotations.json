[
  {
    "line": 2,
    "text": "import pandas as pd",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      11748,
      19798,
      292,
      355,
      279,
      67
    ],
    "start_token": 0,
    "end_token": 6,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 4,
    "text": "from zvt.contract import IntervalLevel",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      28484,
      1330,
      4225,
      2100,
      4971
    ],
    "start_token": 6,
    "end_token": 15,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 6,
    "text": "from zvt.contract.recorder import FixedCycleDataRecorder",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      28484,
      13,
      8344,
      2875,
      1330,
      10832,
      20418,
      2375,
      6601,
      6690,
      2875
    ],
    "start_token": 15,
    "end_token": 30,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 8,
    "text": "from zvt.domain.macro.monetary import TreasuryYield",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      27830,
      13,
      20285,
      305,
      13,
      2144,
      8527,
      1330,
      13419,
      56,
      1164
    ],
    "start_token": 30,
    "end_token": 45,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 10,
    "text": "",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 45,
    "end_token": 45,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 12,
    "text": "class EMTreasuryYieldRecorder(FixedCycleDataRecorder):",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      4871,
      412,
      13752,
      260,
      11579,
      56,
      1164,
      6690,
      2875,
      7,
      13715,
      20418,
      2375,
      6601,
      6690,
      2875,
      2599
    ],
    "start_token": 45,
    "end_token": 62,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 8,
    "text": "from zvt.domain.macro.monetary import TreasuryYield",
    "annotation": "\u2705 Best Practice: Class definition should be followed by a docstring explaining its purpose and usage",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      27830,
      13,
      20285,
      305,
      13,
      2144,
      8527,
      1330,
      13419,
      56,
      1164
    ],
    "start_token": 62,
    "end_token": 77,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      6770,
      815,
      307,
      3940,
      416,
      257,
      2205,
      8841,
      11170,
      663,
      4007,
      290,
      8748
    ],
    "label": "best_practice",
    "reason": "Class definition should be followed by a docstring explaining its purpose and usage"
  },
  {
    "line": 10,
    "text": "",
    "annotation": "\u2705 Best Practice: Class attributes should be documented to explain their purpose",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 77,
    "end_token": 77,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      12608,
      815,
      307,
      12395,
      284,
      4727,
      511,
      4007
    ],
    "label": "best_practice",
    "reason": "Class attributes should be documented to explain their purpose"
  },
  {
    "line": 12,
    "text": "class EMTreasuryYieldRecorder(FixedCycleDataRecorder):",
    "annotation": "\u2705 Best Practice: Class attributes should be documented to explain their purpose",
    "confidence": 1.0,
    "tokens": [
      4871,
      412,
      13752,
      260,
      11579,
      56,
      1164,
      6690,
      2875,
      7,
      13715,
      20418,
      2375,
      6601,
      6690,
      2875,
      2599
    ],
    "start_token": 77,
    "end_token": 94,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      12608,
      815,
      307,
      12395,
      284,
      4727,
      511,
      4007
    ],
    "label": "best_practice",
    "reason": "Class attributes should be documented to explain their purpose"
  },
  {
    "line": 13,
    "text": "    entity_schema = Country",
    "annotation": "\u2705 Best Practice: Class attributes should be documented to explain their purpose",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      15952,
      2611,
      796,
      12946
    ],
    "start_token": 94,
    "end_token": 103,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      12608,
      815,
      307,
      12395,
      284,
      4727,
      511,
      4007
    ],
    "label": "best_practice",
    "reason": "Class attributes should be documented to explain their purpose"
  },
  {
    "line": 13,
    "text": "    entity_schema = Country",
    "annotation": "\u2705 Best Practice: Class attributes should be documented to explain their purpose",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      15952,
      2611,
      796,
      12946
    ],
    "start_token": 103,
    "end_token": 112,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      12608,
      815,
      307,
      12395,
      284,
      4727,
      511,
      4007
    ],
    "label": "best_practice",
    "reason": "Class attributes should be documented to explain their purpose"
  },
  {
    "line": 28,
    "text": "        level=IntervalLevel.LEVEL_1DAY,",
    "annotation": "\u2705 Best Practice: Call to super() ensures proper initialization of the base class",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1241,
      28,
      9492,
      2100,
      4971,
      13,
      2538,
      18697,
      62,
      16,
      26442,
      11
    ],
    "start_token": 112,
    "end_token": 131,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4889,
      284,
      2208,
      3419,
      19047,
      1774,
      37588,
      286,
      262,
      2779,
      1398
    ],
    "label": "best_practice",
    "reason": "Call to super() ensures proper initialization of the base class"
  },
  {
    "line": 28,
    "text": "        level=IntervalLevel.LEVEL_1DAY,",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters indicates common usage patterns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1241,
      28,
      9492,
      2100,
      4971,
      13,
      2538,
      18697,
      62,
      16,
      26442,
      11
    ],
    "start_token": 131,
    "end_token": 150,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      9217,
      2219,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters indicates common usage patterns"
  },
  {
    "line": 28,
    "text": "        level=IntervalLevel.LEVEL_1DAY,",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters indicates common usage patterns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1241,
      28,
      9492,
      2100,
      4971,
      13,
      2538,
      18697,
      62,
      16,
      26442,
      11
    ],
    "start_token": 150,
    "end_token": 169,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      9217,
      2219,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters indicates common usage patterns"
  },
  {
    "line": 28,
    "text": "        level=IntervalLevel.LEVEL_1DAY,",
    "annotation": "\ud83e\udde0 ML Signal: Hardcoded values can indicate default or common configurations",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1241,
      28,
      9492,
      2100,
      4971,
      13,
      2538,
      18697,
      62,
      16,
      26442,
      11
    ],
    "start_token": 169,
    "end_token": 188,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6912,
      40976,
      3815,
      460,
      7603,
      4277,
      393,
      2219,
      25412
    ],
    "label": "ml_signal",
    "reason": "Hardcoded values can indicate default or common configurations"
  },
  {
    "line": 48,
    "text": "            level,",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters indicates common usage patterns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1241,
      11
    ],
    "start_token": 188,
    "end_token": 201,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      9217,
      2219,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters indicates common usage patterns"
  },
  {
    "line": 48,
    "text": "            level,",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters indicates common usage patterns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1241,
      11
    ],
    "start_token": 201,
    "end_token": 214,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      9217,
      2219,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters indicates common usage patterns"
  },
  {
    "line": 48,
    "text": "            level,",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters indicates common usage patterns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1241,
      11
    ],
    "start_token": 214,
    "end_token": 227,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      9217,
      2219,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters indicates common usage patterns"
  },
  {
    "line": 48,
    "text": "            level,",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters indicates common usage patterns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1241,
      11
    ],
    "start_token": 227,
    "end_token": 240,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      9217,
      2219,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters indicates common usage patterns"
  },
  {
    "line": 49,
    "text": "            kdata_use_begin_time,",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters indicates common usage patterns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      479,
      7890,
      62,
      1904,
      62,
      27471,
      62,
      2435,
      11
    ],
    "start_token": 240,
    "end_token": 260,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      9217,
      2219,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters indicates common usage patterns"
  },
  {
    "line": 50,
    "text": "            one_day_trading_minutes,",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters indicates common usage patterns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      530,
      62,
      820,
      62,
      2213,
      4980,
      62,
      1084,
      1769,
      11
    ],
    "start_token": 260,
    "end_token": 281,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      9217,
      2219,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters indicates common usage patterns"
  },
  {
    "line": 53,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters indicates common usage patterns",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 281,
    "end_token": 281,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      9217,
      2219,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters indicates common usage patterns"
  },
  {
    "line": 55,
    "text": "        # record before",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters indicates common usage patterns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      1700,
      878
    ],
    "start_token": 281,
    "end_token": 291,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      9217,
      2219,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters indicates common usage patterns"
  },
  {
    "line": 55,
    "text": "        # record before",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters indicates common usage patterns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      1700,
      878
    ],
    "start_token": 291,
    "end_token": 301,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      9217,
      2219,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters indicates common usage patterns"
  },
  {
    "line": 59,
    "text": "            result = em_api.get_treasury_yield(fetch_all=True)",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters indicates common usage patterns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1255,
      796,
      795,
      62,
      15042,
      13,
      1136,
      62,
      33945,
      11579,
      62,
      88,
      1164,
      7,
      69,
      7569,
      62,
      439,
      28,
      17821,
      8
    ],
    "start_token": 301,
    "end_token": 333,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      9217,
      2219,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters indicates common usage patterns"
  },
  {
    "line": 49,
    "text": "            kdata_use_begin_time,",
    "annotation": "\ud83e\udde0 ML Signal: Conditional API call based on the 'start' parameter",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      479,
      7890,
      62,
      1904,
      62,
      27471,
      62,
      2435,
      11
    ],
    "start_token": 333,
    "end_token": 353,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      7824,
      869,
      1912,
      319,
      262,
      705,
      9688,
      6,
      11507
    ],
    "label": "ml_signal",
    "reason": "Conditional API call based on the 'start' parameter"
  },
  {
    "line": 50,
    "text": "            one_day_trading_minutes,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for large data retrieval if 'size' is large",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      530,
      62,
      820,
      62,
      2213,
      4980,
      62,
      1084,
      1769,
      11
    ],
    "start_token": 353,
    "end_token": 374,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      1588,
      1366,
      45069,
      611,
      705,
      7857,
      6,
      318,
      1588
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for large data retrieval if 'size' is large"
  },
  {
    "line": 54,
    "text": "    def record(self, entity, start, end, size, timestamps):",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Fetching all data could lead to performance issues",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      1700,
      7,
      944,
      11,
      9312,
      11,
      923,
      11,
      886,
      11,
      2546,
      11,
      4628,
      395,
      9430,
      2599
    ],
    "start_token": 374,
    "end_token": 394,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      376,
      7569,
      278,
      477,
      1366,
      714,
      1085,
      284,
      2854,
      2428
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Fetching all data could lead to performance issues"
  },
  {
    "line": 55,
    "text": "        # record before",
    "annotation": "\ud83e\udde0 ML Signal: Conversion of API result to DataFrame",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      1700,
      878
    ],
    "start_token": 394,
    "end_token": 404,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      44101,
      286,
      7824,
      1255,
      284,
      6060,
      19778
    ],
    "label": "ml_signal",
    "reason": "Conversion of API result to DataFrame"
  },
  {
    "line": 59,
    "text": "            result = em_api.get_treasury_yield(fetch_all=True)",
    "annotation": "\ud83e\udde0 ML Signal: Data persistence with specific parameters",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1255,
      796,
      795,
      62,
      15042,
      13,
      1136,
      62,
      33945,
      11579,
      62,
      88,
      1164,
      7,
      69,
      7569,
      62,
      439,
      28,
      17821,
      8
    ],
    "start_token": 404,
    "end_token": 436,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6060,
      30802,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Data persistence with specific parameters"
  },
  {
    "line": 65,
    "text": "                provider=self.provider,",
    "annotation": "\u2705 Best Practice: Use 'if __name__ == \"__main__\":' to ensure code is only run when script is executed directly",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      10131,
      28,
      944,
      13,
      15234,
      1304,
      11
    ],
    "start_token": 436,
    "end_token": 458,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      705,
      361,
      11593,
      3672,
      834,
      6624,
      366,
      834,
      12417,
      834,
      1298,
      6,
      284,
      4155,
      2438,
      318,
      691,
      1057,
      618,
      4226,
      318,
      10945,
      3264
    ],
    "label": "best_practice",
    "reason": "Use 'if __name__ == \"__main__\":' to ensure code is only run when script is executed directly"
  },
  {
    "line": 65,
    "text": "                provider=self.provider,",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation and execution of a specific class method",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      10131,
      28,
      944,
      13,
      15234,
      1304,
      11
    ],
    "start_token": 458,
    "end_token": 480,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      290,
      9706,
      286,
      257,
      2176,
      1398,
      2446
    ],
    "label": "ml_signal",
    "reason": "Instantiation and execution of a specific class method"
  },
  {
    "line": 65,
    "text": "                provider=self.provider,",
    "annotation": "\u2705 Best Practice: Define __all__ to explicitly declare module exports",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      10131,
      28,
      944,
      13,
      15234,
      1304,
      11
    ],
    "start_token": 480,
    "end_token": 502,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      500,
      11593,
      439,
      834,
      284,
      11777,
      13627,
      8265,
      15319
    ],
    "label": "best_practice",
    "reason": "Define __all__ to explicitly declare module exports"
  }
]