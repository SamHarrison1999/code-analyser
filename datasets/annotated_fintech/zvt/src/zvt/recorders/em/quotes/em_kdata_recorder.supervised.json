[
  {
    "line": 4,
    "text": "from zvt.contract import IntervalLevel, AdjustType",
    "annotation": "\u2705 Best Practice: Grouping related imports together improves readability and maintainability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      28484,
      1330,
      4225,
      2100,
      4971,
      11,
      20292,
      6030
    ],
    "start_token": 0,
    "end_token": 12,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      3519,
      17944,
      1978,
      19575,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping related imports together improves readability and maintainability."
  },
  {
    "line": 27,
    "text": "from zvt.utils.time_utils import count_interval, now_pd_timestamp, current_date",
    "annotation": "\ud83e\udde0 ML Signal: Usage of utility functions like time_utils can indicate time-based operations or scheduling.",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      2435,
      62,
      26791,
      1330,
      954,
      62,
      3849,
      2100,
      11,
      783,
      62,
      30094,
      62,
      16514,
      27823,
      11,
      1459,
      62,
      4475
    ],
    "start_token": 12,
    "end_token": 37,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      10361,
      5499,
      588,
      640,
      62,
      26791,
      460,
      7603,
      640,
      12,
      3106,
      4560,
      393,
      26925,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of utility functions like time_utils can indicate time-based operations or scheduling."
  },
  {
    "line": 26,
    "text": "from zvt.utils.pd_utils import pd_is_not_null",
    "annotation": "\ud83e\udde0 ML Signal: Class definition for a data recorder, useful for identifying patterns in class-based architecture",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      30094,
      62,
      26791,
      1330,
      279,
      67,
      62,
      271,
      62,
      1662,
      62,
      8423
    ],
    "start_token": 37,
    "end_token": 55,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      6770,
      329,
      257,
      1366,
      38156,
      11,
      4465,
      329,
      13720,
      7572,
      287,
      1398,
      12,
      3106,
      10959
    ],
    "label": "ml_signal",
    "reason": "Class definition for a data recorder, useful for identifying patterns in class-based architecture"
  },
  {
    "line": 28,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Default size attribute, could indicate typical data batch sizes",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 55,
    "end_token": 55,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15161,
      2546,
      11688,
      11,
      714,
      7603,
      7226,
      1366,
      15458,
      10620
    ],
    "label": "ml_signal",
    "reason": "Default size attribute, could indicate typical data batch sizes"
  },
  {
    "line": 30,
    "text": "class BaseEMStockKdataRecorder(FixedCycleDataRecorder):",
    "annotation": "\ud83e\udde0 ML Signal: Entity provider attribute, useful for understanding data source patterns",
    "confidence": 1.0,
    "tokens": [
      4871,
      7308,
      3620,
      26207,
      42,
      7890,
      6690,
      2875,
      7,
      13715,
      20418,
      2375,
      6601,
      6690,
      2875,
      2599
    ],
    "start_token": 55,
    "end_token": 71,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20885,
      10131,
      11688,
      11,
      4465,
      329,
      4547,
      1366,
      2723,
      7572
    ],
    "label": "ml_signal",
    "reason": "Entity provider attribute, useful for understanding data source patterns"
  },
  {
    "line": 30,
    "text": "class BaseEMStockKdataRecorder(FixedCycleDataRecorder):",
    "annotation": "\ud83e\udde0 ML Signal: Provider attribute, useful for understanding data source patterns",
    "confidence": 1.0,
    "tokens": [
      4871,
      7308,
      3620,
      26207,
      42,
      7890,
      6690,
      2875,
      7,
      13715,
      20418,
      2375,
      6601,
      6690,
      2875,
      2599
    ],
    "start_token": 71,
    "end_token": 87,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      32549,
      11688,
      11,
      4465,
      329,
      4547,
      1366,
      2723,
      7572
    ],
    "label": "ml_signal",
    "reason": "Provider attribute, useful for understanding data source patterns"
  },
  {
    "line": 52,
    "text": "        level=IntervalLevel.LEVEL_1DAY,",
    "annotation": "\u2705 Best Practice: Convert level to IntervalLevel to ensure type consistency",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1241,
      28,
      9492,
      2100,
      4971,
      13,
      2538,
      18697,
      62,
      16,
      26442,
      11
    ],
    "start_token": 87,
    "end_token": 106,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      38240,
      1241,
      284,
      4225,
      2100,
      4971,
      284,
      4155,
      2099,
      15794
    ],
    "label": "best_practice",
    "reason": "Convert level to IntervalLevel to ensure type consistency"
  },
  {
    "line": 54,
    "text": "        one_day_trading_minutes=24 * 60,",
    "annotation": "\u2705 Best Practice: Convert adjust_type to AdjustType to ensure type consistency",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      530,
      62,
      820,
      62,
      2213,
      4980,
      62,
      1084,
      1769,
      28,
      1731,
      1635,
      3126,
      11
    ],
    "start_token": 106,
    "end_token": 127,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      38240,
      4532,
      62,
      4906,
      284,
      20292,
      6030,
      284,
      4155,
      2099,
      15794
    ],
    "label": "best_practice",
    "reason": "Convert adjust_type to AdjustType to ensure type consistency"
  },
  {
    "line": 56,
    "text": "        return_unfinished=False,",
    "annotation": "\ud83e\udde0 ML Signal: Usage of entity schema name to determine entity type",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      62,
      403,
      43952,
      28,
      25101,
      11
    ],
    "start_token": 127,
    "end_token": 141,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      9312,
      32815,
      1438,
      284,
      5004,
      9312,
      2099
    ],
    "label": "ml_signal",
    "reason": "Usage of entity schema name to determine entity type"
  },
  {
    "line": 56,
    "text": "        return_unfinished=False,",
    "annotation": "\ud83e\udde0 ML Signal: Dynamic schema retrieval based on entity type, level, and adjust type",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      62,
      403,
      43952,
      28,
      25101,
      11
    ],
    "start_token": 141,
    "end_token": 155,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      26977,
      32815,
      45069,
      1912,
      319,
      9312,
      2099,
      11,
      1241,
      11,
      290,
      4532,
      2099
    ],
    "label": "ml_signal",
    "reason": "Dynamic schema retrieval based on entity type, level, and adjust type"
  },
  {
    "line": 56,
    "text": "        return_unfinished=False,",
    "annotation": "\u2705 Best Practice: Use of super() to ensure proper initialization of the base class",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      62,
      403,
      43952,
      28,
      25101,
      11
    ],
    "start_token": 155,
    "end_token": 169,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2208,
      3419,
      284,
      4155,
      1774,
      37588,
      286,
      262,
      2779,
      1398
    ],
    "label": "best_practice",
    "reason": "Use of super() to ensure proper initialization of the base class"
  },
  {
    "line": 77,
    "text": "            start_timestamp,",
    "annotation": "\ud83e\udde0 ML Signal: Function signature indicates a pattern of recording data with specific parameters",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      923,
      62,
      16514,
      27823,
      11
    ],
    "start_token": 169,
    "end_token": 185,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      9877,
      9217,
      257,
      3912,
      286,
      8296,
      1366,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Function signature indicates a pattern of recording data with specific parameters"
  },
  {
    "line": 81,
    "text": "            one_day_trading_minutes,",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential risk if 'entity.id' is not validated or sanitized",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      530,
      62,
      820,
      62,
      2213,
      4980,
      62,
      1084,
      1769,
      11
    ],
    "start_token": 185,
    "end_token": 206,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      2526,
      611,
      705,
      26858,
      13,
      312,
      6,
      318,
      407,
      31031,
      393,
      5336,
      36951
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential risk if 'entity.id' is not validated or sanitized"
  },
  {
    "line": 83,
    "text": "        )",
    "annotation": "\u2705 Best Practice: Check for null data before proceeding with database operations",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 206,
    "end_token": 214,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      329,
      9242,
      1366,
      878,
      18788,
      351,
      6831,
      4560
    ],
    "label": "best_practice",
    "reason": "Check for null data before proceeding with database operations"
  },
  {
    "line": 85,
    "text": "    def record(self, entity, start, end, size, timestamps):",
    "annotation": "\ud83e\udde0 ML Signal: Usage of 'df_to_db' indicates a pattern of storing data in a database",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      1700,
      7,
      944,
      11,
      9312,
      11,
      923,
      11,
      886,
      11,
      2546,
      11,
      4628,
      395,
      9430,
      2599
    ],
    "start_token": 214,
    "end_token": 234,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      705,
      7568,
      62,
      1462,
      62,
      9945,
      6,
      9217,
      257,
      3912,
      286,
      23069,
      1366,
      287,
      257,
      6831
    ],
    "label": "ml_signal",
    "reason": "Usage of 'df_to_db' indicates a pattern of storing data in a database"
  },
  {
    "line": 86,
    "text": "        df = em_api.get_kdata(",
    "annotation": "\u2705 Best Practice: Logging information when no data is found for traceability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      796,
      795,
      62,
      15042,
      13,
      1136,
      62,
      74,
      7890,
      7
    ],
    "start_token": 234,
    "end_token": 252,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5972,
      2667,
      1321,
      618,
      645,
      1366,
      318,
      1043,
      329,
      12854,
      1799
    ],
    "label": "best_practice",
    "reason": "Logging information when no data is found for traceability"
  },
  {
    "line": 86,
    "text": "        df = em_api.get_kdata(",
    "annotation": "\ud83e\udde0 ML Signal: Checking for missing attributes in an entity",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      796,
      795,
      62,
      15042,
      13,
      1136,
      62,
      74,
      7890,
      7
    ],
    "start_token": 252,
    "end_token": 270,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      4814,
      12608,
      287,
      281,
      9312
    ],
    "label": "ml_signal",
    "reason": "Checking for missing attributes in an entity"
  },
  {
    "line": 95,
    "text": "        # fill timestamp",
    "annotation": "\ud83e\udde0 ML Signal: Handling non-empty query results",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      6070,
      41033
    ],
    "start_token": 270,
    "end_token": 280,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      49500,
      1729,
      12,
      28920,
      12405,
      2482
    ],
    "label": "ml_signal",
    "reason": "Handling non-empty query results"
  },
  {
    "line": 97,
    "text": "            # get the first",
    "annotation": "\u2705 Best Practice: Use f-string for logging messages",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      651,
      262,
      717
    ],
    "start_token": 280,
    "end_token": 295,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      277,
      12,
      8841,
      329,
      18931,
      6218
    ],
    "label": "best_practice",
    "reason": "Use f-string for logging messages"
  },
  {
    "line": 100,
    "text": "                entity_id=entity.id,",
    "annotation": "\ud83e\udde0 ML Signal: Conditional assignment based on attribute presence",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      62,
      312,
      28,
      26858,
      13,
      312,
      11
    ],
    "start_token": 295,
    "end_token": 318,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      16237,
      1912,
      319,
      11688,
      4931
    ],
    "label": "ml_signal",
    "reason": "Conditional assignment based on attribute presence"
  },
  {
    "line": 103,
    "text": "                return_type=\"domain\",",
    "annotation": "\ud83e\udde0 ML Signal: Conditional assignment based on attribute presence",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      62,
      4906,
      2625,
      27830,
      1600
    ],
    "start_token": 318,
    "end_token": 339,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      16237,
      1912,
      319,
      11688,
      4931
    ],
    "label": "ml_signal",
    "reason": "Conditional assignment based on attribute presence"
  },
  {
    "line": 105,
    "text": "            if kdatas:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential risk of SQL injection if entity data is not sanitized",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      479,
      19608,
      292,
      25
    ],
    "start_token": 339,
    "end_token": 355,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2526,
      286,
      16363,
      16954,
      611,
      9312,
      1366,
      318,
      407,
      5336,
      36951
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential risk of SQL injection if entity data is not sanitized"
  },
  {
    "line": 107,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Committing changes to the database without error handling",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 355,
    "end_token": 355,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1520,
      2535,
      2458,
      284,
      262,
      6831,
      1231,
      4049,
      9041
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Committing changes to the database without error handling"
  },
  {
    "line": 102,
    "text": "                limit=1,",
    "annotation": "\u2705 Best Practice: Class definition should follow PEP 8 naming conventions",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4179,
      28,
      16,
      11
    ],
    "start_token": 355,
    "end_token": 374,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      6770,
      815,
      1061,
      350,
      8905,
      807,
      19264,
      21396
    ],
    "label": "best_practice",
    "reason": "Class definition should follow PEP 8 naming conventions"
  },
  {
    "line": 104,
    "text": "            )",
    "annotation": "\u2705 Best Practice: Class attributes should be documented for clarity",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 374,
    "end_token": 386,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      12608,
      815,
      307,
      12395,
      329,
      16287
    ],
    "label": "best_practice",
    "reason": "Class attributes should be documented for clarity"
  },
  {
    "line": 106,
    "text": "                timestamp = kdatas[0].timestamp",
    "annotation": "\u2705 Best Practice: Class attributes should be documented for clarity",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      41033,
      796,
      479,
      19608,
      292,
      58,
      15,
      4083,
      16514,
      27823
    ],
    "start_token": 386,
    "end_token": 411,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      12608,
      815,
      307,
      12395,
      329,
      16287
    ],
    "label": "best_practice",
    "reason": "Class attributes should be documented for clarity"
  },
  {
    "line": 106,
    "text": "                timestamp = kdatas[0].timestamp",
    "annotation": "\u2705 Best Practice: Call to superclass method ensures proper inheritance behavior.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      41033,
      796,
      479,
      19608,
      292,
      58,
      15,
      4083,
      16514,
      27823
    ],
    "start_token": 411,
    "end_token": 436,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4889,
      284,
      2208,
      4871,
      2446,
      19047,
      1774,
      24155,
      4069,
      13
    ],
    "label": "best_practice",
    "reason": "Call to superclass method ensures proper inheritance behavior."
  },
  {
    "line": 108,
    "text": "                self.logger.info(f\"fill {entity.name} list_date as {timestamp}\")",
    "annotation": "\u2705 Best Practice: Check for holder_modified_date ensures logic only runs when necessary.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      6404,
      1362,
      13,
      10951,
      7,
      69,
      1,
      20797,
      1391,
      26858,
      13,
      3672,
      92,
      1351,
      62,
      4475,
      355,
      1391,
      16514,
      27823,
      92,
      4943
    ],
    "start_token": 436,
    "end_token": 475,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      329,
      15762,
      62,
      41771,
      62,
      4475,
      19047,
      9156,
      691,
      4539,
      618,
      3306,
      13
    ],
    "label": "best_practice",
    "reason": "Check for holder_modified_date ensures logic only runs when necessary."
  },
  {
    "line": 110,
    "text": "                if not entity.timestamp:",
    "annotation": "\ud83e\udde0 ML Signal: Usage of external API to fetch data based on entity code.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      407,
      9312,
      13,
      16514,
      27823,
      25
    ],
    "start_token": 475,
    "end_token": 497,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      7097,
      7824,
      284,
      21207,
      1366,
      1912,
      319,
      9312,
      2438,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of external API to fetch data based on entity code."
  },
  {
    "line": 112,
    "text": "                if not entity.list_date:",
    "annotation": "\u2705 Best Practice: Use of get method to safely access dictionary keys.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      407,
      9312,
      13,
      4868,
      62,
      4475,
      25
    ],
    "start_token": 497,
    "end_token": 520,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      651,
      2446,
      284,
      11512,
      1895,
      22155,
      8251,
      13
    ],
    "label": "best_practice",
    "reason": "Use of get method to safely access dictionary keys."
  },
  {
    "line": 119,
    "text": "    entity_schema = Stock",
    "annotation": "\ud83e\udde0 ML Signal: Updating entity attributes based on external data.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      15952,
      2611,
      796,
      10500
    ],
    "start_token": 520,
    "end_token": 529,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3205,
      38734,
      9312,
      12608,
      1912,
      319,
      7097,
      1366,
      13
    ],
    "label": "ml_signal",
    "reason": "Updating entity attributes based on external data."
  },
  {
    "line": 121,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Directly adding and committing to session without exception handling.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 529,
    "end_token": 529,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      4128,
      306,
      4375,
      290,
      17222,
      284,
      6246,
      1231,
      6631,
      9041,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Directly adding and committing to session without exception handling."
  },
  {
    "line": 124,
    "text": "        # fill holder",
    "annotation": "\ud83e\udde0 ML Signal: Fetching additional statistics for the entity.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      6070,
      15762
    ],
    "start_token": 529,
    "end_token": 539,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      376,
      7569,
      278,
      3224,
      7869,
      329,
      262,
      9312,
      13
    ],
    "label": "ml_signal",
    "reason": "Fetching additional statistics for the entity."
  },
  {
    "line": 127,
    "text": "            if holder:",
    "annotation": "\u2705 Best Practice: Use of get method to safely access dictionary keys.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      15762,
      25
    ],
    "start_token": 539,
    "end_token": 553,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      651,
      2446,
      284,
      11512,
      1895,
      22155,
      8251,
      13
    ],
    "label": "best_practice",
    "reason": "Use of get method to safely access dictionary keys."
  },
  {
    "line": 129,
    "text": "                if holder.get(\"parent\"):",
    "annotation": "\ud83e\udde0 ML Signal: Updating entity attributes based on external data.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      15762,
      13,
      1136,
      7203,
      8000,
      1,
      2599
    ],
    "start_token": 553,
    "end_token": 576,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3205,
      38734,
      9312,
      12608,
      1912,
      319,
      7097,
      1366,
      13
    ],
    "label": "ml_signal",
    "reason": "Updating entity attributes based on external data."
  },
  {
    "line": 131,
    "text": "                else:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Directly adding and committing to session without exception handling.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 576,
    "end_token": 593,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      4128,
      306,
      4375,
      290,
      17222,
      284,
      6246,
      1231,
      6631,
      9041,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Directly adding and committing to session without exception handling."
  },
  {
    "line": 125,
    "text": "        if not entity.holder_modified_date or (count_interval(entity.holder_modified_date, now_pd_timestamp()) > 30):",
    "annotation": "\ud83e\udde0 ML Signal: Inheritance from a base class indicates a common pattern for extending functionality.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      407,
      9312,
      13,
      13829,
      62,
      41771,
      62,
      4475,
      393,
      357,
      9127,
      62,
      3849,
      2100,
      7,
      26858,
      13,
      13829,
      62,
      41771,
      62,
      4475,
      11,
      783,
      62,
      30094,
      62,
      16514,
      27823,
      28955,
      1875,
      1542,
      2599
    ],
    "start_token": 593,
    "end_token": 634,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47025,
      42942,
      422,
      257,
      2779,
      1398,
      9217,
      257,
      2219,
      3912,
      329,
      16610,
      11244,
      13
    ],
    "label": "ml_signal",
    "reason": "Inheritance from a base class indicates a common pattern for extending functionality."
  },
  {
    "line": 127,
    "text": "            if holder:",
    "annotation": "\ud83e\udde0 ML Signal: Use of a string constant for provider name, useful for categorization.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      15762,
      25
    ],
    "start_token": 634,
    "end_token": 648,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      4731,
      6937,
      329,
      10131,
      1438,
      11,
      4465,
      329,
      17851,
      1634,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of a string constant for provider name, useful for categorization."
  },
  {
    "line": 129,
    "text": "                if holder.get(\"parent\"):",
    "annotation": "\ud83e\udde0 ML Signal: Assignment of schema class, indicating a pattern for data structure.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      15762,
      13,
      1136,
      7203,
      8000,
      1,
      2599
    ],
    "start_token": 648,
    "end_token": 671,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      50144,
      286,
      32815,
      1398,
      11,
      12739,
      257,
      3912,
      329,
      1366,
      4645,
      13
    ],
    "label": "ml_signal",
    "reason": "Assignment of schema class, indicating a pattern for data structure."
  },
  {
    "line": 131,
    "text": "                else:",
    "annotation": "\ud83e\udde0 ML Signal: Assignment of data schema, indicating a pattern for data structure.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 671,
    "end_token": 688,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      50144,
      286,
      1366,
      32815,
      11,
      12739,
      257,
      3912,
      329,
      1366,
      4645,
      13
    ],
    "label": "ml_signal",
    "reason": "Assignment of data schema, indicating a pattern for data structure."
  },
  {
    "line": 129,
    "text": "                if holder.get(\"parent\"):",
    "annotation": "\ud83e\udde0 ML Signal: Inheritance from a base class indicates a pattern of code reuse and specialization.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      15762,
      13,
      1136,
      7203,
      8000,
      1,
      2599
    ],
    "start_token": 688,
    "end_token": 711,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47025,
      42942,
      422,
      257,
      2779,
      1398,
      9217,
      257,
      3912,
      286,
      2438,
      32349,
      290,
      43135,
      13
    ],
    "label": "ml_signal",
    "reason": "Inheritance from a base class indicates a pattern of code reuse and specialization."
  },
  {
    "line": 131,
    "text": "                else:",
    "annotation": "\ud83e\udde0 ML Signal: Use of a string constant to define a provider, which could be used to categorize or filter data.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 711,
    "end_token": 728,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      4731,
      6937,
      284,
      8160,
      257,
      10131,
      11,
      543,
      714,
      307,
      973,
      284,
      17851,
      1096,
      393,
      8106,
      1366,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of a string constant to define a provider, which could be used to categorize or filter data."
  },
  {
    "line": 133,
    "text": "                entity.holder_modified_date = current_date()",
    "annotation": "\ud83e\udde0 ML Signal: Assignment of a schema class, indicating a pattern of structured data handling.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      13,
      13829,
      62,
      41771,
      62,
      4475,
      796,
      1459,
      62,
      4475,
      3419
    ],
    "start_token": 728,
    "end_token": 755,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      50144,
      286,
      257,
      32815,
      1398,
      11,
      12739,
      257,
      3912,
      286,
      20793,
      1366,
      9041,
      13
    ],
    "label": "ml_signal",
    "reason": "Assignment of a schema class, indicating a pattern of structured data handling."
  },
  {
    "line": 135,
    "text": "                self.entity_session.commit()",
    "annotation": "\ud83e\udde0 ML Signal: Use of a common data schema, suggesting a standardized approach to data representation.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      26858,
      62,
      29891,
      13,
      41509,
      3419
    ],
    "start_token": 755,
    "end_token": 778,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      2219,
      1366,
      32815,
      11,
      9524,
      257,
      25713,
      3164,
      284,
      1366,
      10552,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of a common data schema, suggesting a standardized approach to data representation."
  },
  {
    "line": 133,
    "text": "                entity.holder_modified_date = current_date()",
    "annotation": "\ud83e\udde0 ML Signal: Inheritance from a base class indicates a usage pattern for extending functionality.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      13,
      13829,
      62,
      41771,
      62,
      4475,
      796,
      1459,
      62,
      4475,
      3419
    ],
    "start_token": 778,
    "end_token": 805,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47025,
      42942,
      422,
      257,
      2779,
      1398,
      9217,
      257,
      8748,
      3912,
      329,
      16610,
      11244,
      13
    ],
    "label": "ml_signal",
    "reason": "Inheritance from a base class indicates a usage pattern for extending functionality."
  },
  {
    "line": 134,
    "text": "                self.entity_session.add(entity)",
    "annotation": "\u2705 Best Practice: Class-level attributes provide a clear and consistent way to define static properties.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      26858,
      62,
      29891,
      13,
      2860,
      7,
      26858,
      8
    ],
    "start_token": 805,
    "end_token": 830,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      12,
      5715,
      12608,
      2148,
      257,
      1598,
      290,
      6414,
      835,
      284,
      8160,
      9037,
      6608,
      13
    ],
    "label": "best_practice",
    "reason": "Class-level attributes provide a clear and consistent way to define static properties."
  },
  {
    "line": 136,
    "text": "            holder_stats = em_api.get_top_ten_free_holder_stats(code=entity.code)",
    "annotation": "\ud83e\udde0 ML Signal: Use of a string to define a provider can indicate a pattern for data source identification.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      15762,
      62,
      34242,
      796,
      795,
      62,
      15042,
      13,
      1136,
      62,
      4852,
      62,
      1452,
      62,
      5787,
      62,
      13829,
      62,
      34242,
      7,
      8189,
      28,
      26858,
      13,
      8189,
      8
    ],
    "start_token": 830,
    "end_token": 867,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      4731,
      284,
      8160,
      257,
      10131,
      460,
      7603,
      257,
      3912,
      329,
      1366,
      2723,
      11795,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of a string to define a provider can indicate a pattern for data source identification."
  },
  {
    "line": 138,
    "text": "                entity.top_ten_ratio = holder_stats.get(\"ratio\")",
    "annotation": "\ud83e\udde0 ML Signal: Assigning a schema to a class attribute suggests a pattern for data structure enforcement.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      13,
      4852,
      62,
      1452,
      62,
      10366,
      952,
      796,
      15762,
      62,
      34242,
      13,
      1136,
      7203,
      10366,
      952,
      4943
    ],
    "start_token": 867,
    "end_token": 900,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      38944,
      257,
      32815,
      284,
      257,
      1398,
      11688,
      5644,
      257,
      3912,
      329,
      1366,
      4645,
      5394,
      13
    ],
    "label": "ml_signal",
    "reason": "Assigning a schema to a class attribute suggests a pattern for data structure enforcement."
  },
  {
    "line": 140,
    "text": "                self.entity_session.add(entity)",
    "annotation": "\ud83e\udde0 ML Signal: Use of a common data schema indicates a pattern for standardizing data handling.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      26858,
      62,
      29891,
      13,
      2860,
      7,
      26858,
      8
    ],
    "start_token": 900,
    "end_token": 925,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      2219,
      1366,
      32815,
      9217,
      257,
      3912,
      329,
      3210,
      2890,
      1366,
      9041,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of a common data schema indicates a pattern for standardizing data handling."
  },
  {
    "line": 137,
    "text": "            if holder_stats:",
    "annotation": "\ud83e\udde0 ML Signal: Inheritance pattern indicating a specialized class",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      15762,
      62,
      34242,
      25
    ],
    "start_token": 925,
    "end_token": 941,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47025,
      42942,
      3912,
      12739,
      257,
      16976,
      1398
    ],
    "label": "ml_signal",
    "reason": "Inheritance pattern indicating a specialized class"
  },
  {
    "line": 138,
    "text": "                entity.top_ten_ratio = holder_stats.get(\"ratio\")",
    "annotation": "\u2705 Best Practice: Class-level attributes for configuration and metadata",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      13,
      4852,
      62,
      1452,
      62,
      10366,
      952,
      796,
      15762,
      62,
      34242,
      13,
      1136,
      7203,
      10366,
      952,
      4943
    ],
    "start_token": 941,
    "end_token": 974,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      12,
      5715,
      12608,
      329,
      8398,
      290,
      20150
    ],
    "label": "best_practice",
    "reason": "Class-level attributes for configuration and metadata"
  },
  {
    "line": 140,
    "text": "                self.entity_session.add(entity)",
    "annotation": "\ud83e\udde0 ML Signal: Static configuration of data source",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      26858,
      62,
      29891,
      13,
      2860,
      7,
      26858,
      8
    ],
    "start_token": 974,
    "end_token": 999,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      36125,
      8398,
      286,
      1366,
      2723
    ],
    "label": "ml_signal",
    "reason": "Static configuration of data source"
  },
  {
    "line": 142,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Static configuration of data schema",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 999,
    "end_token": 999,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      36125,
      8398,
      286,
      1366,
      32815
    ],
    "label": "ml_signal",
    "reason": "Static configuration of data schema"
  },
  {
    "line": 141,
    "text": "                self.entity_session.commit()",
    "annotation": "\ud83e\udde0 ML Signal: Inheritance from a base class indicates a usage pattern for extending functionality.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      26858,
      62,
      29891,
      13,
      41509,
      3419
    ],
    "start_token": 999,
    "end_token": 1022,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47025,
      42942,
      422,
      257,
      2779,
      1398,
      9217,
      257,
      8748,
      3912,
      329,
      16610,
      11244,
      13
    ],
    "label": "ml_signal",
    "reason": "Inheritance from a base class indicates a usage pattern for extending functionality."
  },
  {
    "line": 142,
    "text": "",
    "annotation": "\u2705 Best Practice: Class attributes are defined at the top for clarity and easy access.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1022,
    "end_token": 1022,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      12608,
      389,
      5447,
      379,
      262,
      1353,
      329,
      16287,
      290,
      2562,
      1895,
      13
    ],
    "label": "best_practice",
    "reason": "Class attributes are defined at the top for clarity and easy access."
  },
  {
    "line": 144,
    "text": "class EMStockusKdataRecorder(BaseEMStockKdataRecorder):",
    "annotation": "\ud83e\udde0 ML Signal: Use of a string to define a provider suggests a pattern for identifying data sources.",
    "confidence": 0.5,
    "tokens": [
      4871,
      17228,
      26207,
      385,
      42,
      7890,
      6690,
      2875,
      7,
      14881,
      3620,
      26207,
      42,
      7890,
      6690,
      2875,
      2599
    ],
    "start_token": 1022,
    "end_token": 1039,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      4731,
      284,
      8160,
      257,
      10131,
      5644,
      257,
      3912,
      329,
      13720,
      1366,
      4237,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of a string to define a provider suggests a pattern for identifying data sources."
  },
  {
    "line": 146,
    "text": "    entity_schema = Stockus",
    "annotation": "\ud83e\udde0 ML Signal: Use of schema attributes indicates a pattern for data structure definition.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      15952,
      2611,
      796,
      10500,
      385
    ],
    "start_token": 1039,
    "end_token": 1049,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32815,
      12608,
      9217,
      257,
      3912,
      329,
      1366,
      4645,
      6770,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of schema attributes indicates a pattern for data structure definition."
  },
  {
    "line": 148,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of schema attributes indicates a pattern for data structure definition.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1049,
    "end_token": 1049,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32815,
      12608,
      9217,
      257,
      3912,
      329,
      1366,
      4645,
      6770,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of schema attributes indicates a pattern for data structure definition."
  },
  {
    "line": 144,
    "text": "class EMStockusKdataRecorder(BaseEMStockKdataRecorder):",
    "annotation": "\ud83e\udde0 ML Signal: Class definition with inheritance, useful for understanding class hierarchies",
    "confidence": 1.0,
    "tokens": [
      4871,
      17228,
      26207,
      385,
      42,
      7890,
      6690,
      2875,
      7,
      14881,
      3620,
      26207,
      42,
      7890,
      6690,
      2875,
      2599
    ],
    "start_token": 1049,
    "end_token": 1066,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      6770,
      351,
      24155,
      11,
      4465,
      329,
      4547,
      1398,
      28398,
      444
    ],
    "label": "ml_signal",
    "reason": "Class definition with inheritance, useful for understanding class hierarchies"
  },
  {
    "line": 146,
    "text": "    entity_schema = Stockus",
    "annotation": "\ud83e\udde0 ML Signal: Class attribute definition, useful for understanding default values and configurations",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      15952,
      2611,
      796,
      10500,
      385
    ],
    "start_token": 1066,
    "end_token": 1076,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      11688,
      6770,
      11,
      4465,
      329,
      4547,
      4277,
      3815,
      290,
      25412
    ],
    "label": "ml_signal",
    "reason": "Class attribute definition, useful for understanding default values and configurations"
  },
  {
    "line": 148,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Class attribute definition, useful for understanding default values and configurations",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 1076,
    "end_token": 1076,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      11688,
      6770,
      11,
      4465,
      329,
      4547,
      4277,
      3815,
      290,
      25412
    ],
    "label": "ml_signal",
    "reason": "Class attribute definition, useful for understanding default values and configurations"
  },
  {
    "line": 150,
    "text": "class EMStockhkKdataRecorder(BaseEMStockKdataRecorder):",
    "annotation": "\ud83e\udde0 ML Signal: Class attribute definition, useful for understanding default values and configurations",
    "confidence": 1.0,
    "tokens": [
      4871,
      17228,
      26207,
      71,
      74,
      42,
      7890,
      6690,
      2875,
      7,
      14881,
      3620,
      26207,
      42,
      7890,
      6690,
      2875,
      2599
    ],
    "start_token": 1076,
    "end_token": 1094,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      11688,
      6770,
      11,
      4465,
      329,
      4547,
      4277,
      3815,
      290,
      25412
    ],
    "label": "ml_signal",
    "reason": "Class attribute definition, useful for understanding default values and configurations"
  },
  {
    "line": 153,
    "text": "    data_schema = StockhkKdataCommon",
    "annotation": "\u2705 Best Practice: Use of __name__ == \"__main__\" to ensure code only runs when script is executed directly",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1366,
      62,
      15952,
      2611,
      796,
      10500,
      71,
      74,
      42,
      7890,
      17227
    ],
    "start_token": 1094,
    "end_token": 1108,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      3672,
      834,
      6624,
      366,
      834,
      12417,
      834,
      1,
      284,
      4155,
      2438,
      691,
      4539,
      618,
      4226,
      318,
      10945,
      3264
    ],
    "label": "best_practice",
    "reason": "Use of __name__ == \"__main__\" to ensure code only runs when script is executed directly"
  },
  {
    "line": 155,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Querying data from a specific provider and filtering by exchange",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1108,
    "end_token": 1108,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      422,
      257,
      2176,
      10131,
      290,
      25431,
      416,
      5163
    ],
    "label": "ml_signal",
    "reason": "Querying data from a specific provider and filtering by exchange"
  },
  {
    "line": 158,
    "text": "    entity_schema = Index",
    "annotation": "\ud83e\udde0 ML Signal: Converting a DataFrame column to a list",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      15952,
      2611,
      796,
      12901
    ],
    "start_token": 1108,
    "end_token": 1117,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      35602,
      889,
      257,
      6060,
      19778,
      5721,
      284,
      257,
      1351
    ],
    "label": "ml_signal",
    "reason": "Converting a DataFrame column to a list"
  },
  {
    "line": 159,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Instantiating a recorder with specific parameters",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 1117,
    "end_token": 1117,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2262,
      17096,
      803,
      257,
      38156,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Instantiating a recorder with specific parameters"
  },
  {
    "line": 159,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Running a recorder instance",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1117,
    "end_token": 1117,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      18162,
      257,
      38156,
      4554
    ],
    "label": "ml_signal",
    "reason": "Running a recorder instance"
  },
  {
    "line": 159,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of __all__ to define public API of the module",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 1117,
    "end_token": 1117,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265
    ],
    "label": "best_practice",
    "reason": "Use of __all__ to define public API of the module"
  }
]