annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Grouping related imports together improves readability and maintainability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 3519, 17944, 1978, 19575, 1100, 1799, 290, 5529, 1799, 13]",1.0,12,best_practice,4,Grouping related imports together improves readability and maintainability.,,0,"from zvt.contract import IntervalLevel, AdjustType","[6738, 1976, 36540, 13, 28484, 1330, 4225, 2100, 4971, 11, 20292, 6030]"
üß† ML Signal: Usage of utility functions like time_utils can indicate time-based operations or scheduling.,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 10361, 5499, 588, 640, 62, 26791, 460, 7603, 640, 12, 3106, 4560, 393, 26925, 13]",0.5,37,ml_signal,27,Usage of utility functions like time_utils can indicate time-based operations or scheduling.,,12,"from zvt.utils.time_utils import count_interval, now_pd_timestamp, current_date","[6738, 1976, 36540, 13, 26791, 13, 2435, 62, 26791, 1330, 954, 62, 3849, 2100, 11, 783, 62, 30094, 62, 16514, 27823, 11, 1459, 62, 4475]"
"üß† ML Signal: Class definition for a data recorder, useful for identifying patterns in class-based architecture","[8582, 100, 254, 10373, 26484, 25, 5016, 6770, 329, 257, 1366, 38156, 11, 4465, 329, 13720, 7572, 287, 1398, 12, 3106, 10959]",0.5,55,ml_signal,26,"Class definition for a data recorder, useful for identifying patterns in class-based architecture",,37,from zvt.utils.pd_utils import pd_is_not_null,"[6738, 1976, 36540, 13, 26791, 13, 30094, 62, 26791, 1330, 279, 67, 62, 271, 62, 1662, 62, 8423]"
"üß† ML Signal: Default size attribute, could indicate typical data batch sizes","[8582, 100, 254, 10373, 26484, 25, 15161, 2546, 11688, 11, 714, 7603, 7226, 1366, 15458, 10620]",0.5,55,ml_signal,28,"Default size attribute, could indicate typical data batch sizes",,55,,[]
"üß† ML Signal: Entity provider attribute, useful for understanding data source patterns","[8582, 100, 254, 10373, 26484, 25, 20885, 10131, 11688, 11, 4465, 329, 4547, 1366, 2723, 7572]",1.0,71,ml_signal,30,"Entity provider attribute, useful for understanding data source patterns",,55,class BaseEMStockKdataRecorder(FixedCycleDataRecorder):,"[4871, 7308, 3620, 26207, 42, 7890, 6690, 2875, 7, 13715, 20418, 2375, 6601, 6690, 2875, 2599]"
"üß† ML Signal: Provider attribute, useful for understanding data source patterns","[8582, 100, 254, 10373, 26484, 25, 32549, 11688, 11, 4465, 329, 4547, 1366, 2723, 7572]",1.0,87,ml_signal,30,"Provider attribute, useful for understanding data source patterns",,71,class BaseEMStockKdataRecorder(FixedCycleDataRecorder):,"[4871, 7308, 3620, 26207, 42, 7890, 6690, 2875, 7, 13715, 20418, 2375, 6601, 6690, 2875, 2599]"
‚úÖ Best Practice: Convert level to IntervalLevel to ensure type consistency,"[26486, 227, 6705, 19939, 25, 38240, 1241, 284, 4225, 2100, 4971, 284, 4155, 2099, 15794]",0.5,106,best_practice,52,Convert level to IntervalLevel to ensure type consistency,,87,"        level=IntervalLevel.LEVEL_1DAY,","[220, 220, 220, 220, 220, 220, 220, 1241, 28, 9492, 2100, 4971, 13, 2538, 18697, 62, 16, 26442, 11]"
‚úÖ Best Practice: Convert adjust_type to AdjustType to ensure type consistency,"[26486, 227, 6705, 19939, 25, 38240, 4532, 62, 4906, 284, 20292, 6030, 284, 4155, 2099, 15794]",0.5,127,best_practice,54,Convert adjust_type to AdjustType to ensure type consistency,,106,"        one_day_trading_minutes=24 * 60,","[220, 220, 220, 220, 220, 220, 220, 530, 62, 820, 62, 2213, 4980, 62, 1084, 1769, 28, 1731, 1635, 3126, 11]"
üß† ML Signal: Usage of entity schema name to determine entity type,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 9312, 32815, 1438, 284, 5004, 9312, 2099]",0.5,141,ml_signal,56,Usage of entity schema name to determine entity type,,127,"        return_unfinished=False,","[220, 220, 220, 220, 220, 220, 220, 1441, 62, 403, 43952, 28, 25101, 11]"
"üß† ML Signal: Dynamic schema retrieval based on entity type, level, and adjust type","[8582, 100, 254, 10373, 26484, 25, 26977, 32815, 45069, 1912, 319, 9312, 2099, 11, 1241, 11, 290, 4532, 2099]",0.5,155,ml_signal,56,"Dynamic schema retrieval based on entity type, level, and adjust type",,141,"        return_unfinished=False,","[220, 220, 220, 220, 220, 220, 220, 1441, 62, 403, 43952, 28, 25101, 11]"
‚úÖ Best Practice: Use of super() to ensure proper initialization of the base class,"[26486, 227, 6705, 19939, 25, 5765, 286, 2208, 3419, 284, 4155, 1774, 37588, 286, 262, 2779, 1398]",1.0,169,best_practice,56,Use of super() to ensure proper initialization of the base class,,155,"        return_unfinished=False,","[220, 220, 220, 220, 220, 220, 220, 1441, 62, 403, 43952, 28, 25101, 11]"
üß† ML Signal: Function signature indicates a pattern of recording data with specific parameters,"[8582, 100, 254, 10373, 26484, 25, 15553, 9877, 9217, 257, 3912, 286, 8296, 1366, 351, 2176, 10007]",0.5,185,ml_signal,77,Function signature indicates a pattern of recording data with specific parameters,,169,"            start_timestamp,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 923, 62, 16514, 27823, 11]"
‚ö†Ô∏è SAST Risk (Medium): Potential risk if 'entity.id' is not validated or sanitized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 32480, 2526, 611, 705, 26858, 13, 312, 6, 318, 407, 31031, 393, 5336, 36951]",0.5,206,sast_risk,81,Potential risk if 'entity.id' is not validated or sanitized,Medium,185,"            one_day_trading_minutes,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 530, 62, 820, 62, 2213, 4980, 62, 1084, 1769, 11]"
‚úÖ Best Practice: Check for null data before proceeding with database operations,"[26486, 227, 6705, 19939, 25, 6822, 329, 9242, 1366, 878, 18788, 351, 6831, 4560]",0.5,214,best_practice,83,Check for null data before proceeding with database operations,,206,        ),"[220, 220, 220, 220, 220, 220, 220, 1267]"
üß† ML Signal: Usage of 'df_to_db' indicates a pattern of storing data in a database,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 705, 7568, 62, 1462, 62, 9945, 6, 9217, 257, 3912, 286, 23069, 1366, 287, 257, 6831]",0.5,234,ml_signal,85,Usage of 'df_to_db' indicates a pattern of storing data in a database,,214,"    def record(self, entity, start, end, size, timestamps):","[220, 220, 220, 825, 1700, 7, 944, 11, 9312, 11, 923, 11, 886, 11, 2546, 11, 4628, 395, 9430, 2599]"
‚úÖ Best Practice: Logging information when no data is found for traceability,"[26486, 227, 6705, 19939, 25, 5972, 2667, 1321, 618, 645, 1366, 318, 1043, 329, 12854, 1799]",0.5,252,best_practice,86,Logging information when no data is found for traceability,,234,        df = em_api.get_kdata(,"[220, 220, 220, 220, 220, 220, 220, 47764, 796, 795, 62, 15042, 13, 1136, 62, 74, 7890, 7]"
üß† ML Signal: Checking for missing attributes in an entity,"[8582, 100, 254, 10373, 26484, 25, 39432, 329, 4814, 12608, 287, 281, 9312]",1.0,270,ml_signal,86,Checking for missing attributes in an entity,,252,        df = em_api.get_kdata(,"[220, 220, 220, 220, 220, 220, 220, 47764, 796, 795, 62, 15042, 13, 1136, 62, 74, 7890, 7]"
üß† ML Signal: Handling non-empty query results,"[8582, 100, 254, 10373, 26484, 25, 49500, 1729, 12, 28920, 12405, 2482]",0.5,280,ml_signal,95,Handling non-empty query results,,270,        # fill timestamp,"[220, 220, 220, 220, 220, 220, 220, 1303, 6070, 41033]"
‚úÖ Best Practice: Use f-string for logging messages,"[26486, 227, 6705, 19939, 25, 5765, 277, 12, 8841, 329, 18931, 6218]",0.5,295,best_practice,97,Use f-string for logging messages,,280,            # get the first,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 651, 262, 717]"
üß† ML Signal: Conditional assignment based on attribute presence,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 16237, 1912, 319, 11688, 4931]",0.5,318,ml_signal,100,Conditional assignment based on attribute presence,,295,"                entity_id=entity.id,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 9312, 62, 312, 28, 26858, 13, 312, 11]"
üß† ML Signal: Conditional assignment based on attribute presence,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 16237, 1912, 319, 11688, 4931]",0.5,339,ml_signal,103,Conditional assignment based on attribute presence,,318,"                return_type=""domain"",","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441, 62, 4906, 2625, 27830, 1600]"
‚ö†Ô∏è SAST Risk (Low): Potential risk of SQL injection if entity data is not sanitized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 286, 16363, 16954, 611, 9312, 1366, 318, 407, 5336, 36951]",0.5,355,sast_risk,105,Potential risk of SQL injection if entity data is not sanitized,Low,339,            if kdatas:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 479, 19608, 292, 25]"
‚ö†Ô∏è SAST Risk (Low): Committing changes to the database without error handling,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 1520, 2535, 2458, 284, 262, 6831, 1231, 4049, 9041]",1.0,355,sast_risk,107,Committing changes to the database without error handling,Low,355,,[]
‚úÖ Best Practice: Class definition should follow PEP 8 naming conventions,"[26486, 227, 6705, 19939, 25, 5016, 6770, 815, 1061, 350, 8905, 807, 19264, 21396]",0.5,374,best_practice,102,Class definition should follow PEP 8 naming conventions,,355,"                limit=1,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4179, 28, 16, 11]"
‚úÖ Best Practice: Class attributes should be documented for clarity,"[26486, 227, 6705, 19939, 25, 5016, 12608, 815, 307, 12395, 329, 16287]",0.5,386,best_practice,104,Class attributes should be documented for clarity,,374,            ),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1267]"
‚úÖ Best Practice: Class attributes should be documented for clarity,"[26486, 227, 6705, 19939, 25, 5016, 12608, 815, 307, 12395, 329, 16287]",0.5,411,best_practice,106,Class attributes should be documented for clarity,,386,                timestamp = kdatas[0].timestamp,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 41033, 796, 479, 19608, 292, 58, 15, 4083, 16514, 27823]"
‚úÖ Best Practice: Call to superclass method ensures proper inheritance behavior.,"[26486, 227, 6705, 19939, 25, 4889, 284, 2208, 4871, 2446, 19047, 1774, 24155, 4069, 13]",0.5,436,best_practice,106,Call to superclass method ensures proper inheritance behavior.,,411,                timestamp = kdatas[0].timestamp,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 41033, 796, 479, 19608, 292, 58, 15, 4083, 16514, 27823]"
‚úÖ Best Practice: Check for holder_modified_date ensures logic only runs when necessary.,"[26486, 227, 6705, 19939, 25, 6822, 329, 15762, 62, 41771, 62, 4475, 19047, 9156, 691, 4539, 618, 3306, 13]",0.5,475,best_practice,108,Check for holder_modified_date ensures logic only runs when necessary.,,436,"                self.logger.info(f""fill {entity.name} list_date as {timestamp}"")","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 6404, 1362, 13, 10951, 7, 69, 1, 20797, 1391, 26858, 13, 3672, 92, 1351, 62, 4475, 355, 1391, 16514, 27823, 92, 4943]"
üß† ML Signal: Usage of external API to fetch data based on entity code.,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 7097, 7824, 284, 21207, 1366, 1912, 319, 9312, 2438, 13]",1.0,497,ml_signal,110,Usage of external API to fetch data based on entity code.,,475,                if not entity.timestamp:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 407, 9312, 13, 16514, 27823, 25]"
‚úÖ Best Practice: Use of get method to safely access dictionary keys.,"[26486, 227, 6705, 19939, 25, 5765, 286, 651, 2446, 284, 11512, 1895, 22155, 8251, 13]",0.5,520,best_practice,112,Use of get method to safely access dictionary keys.,,497,                if not entity.list_date:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 407, 9312, 13, 4868, 62, 4475, 25]"
üß† ML Signal: Updating entity attributes based on external data.,"[8582, 100, 254, 10373, 26484, 25, 3205, 38734, 9312, 12608, 1912, 319, 7097, 1366, 13]",1.0,529,ml_signal,119,Updating entity attributes based on external data.,,520,    entity_schema = Stock,"[220, 220, 220, 9312, 62, 15952, 2611, 796, 10500]"
‚ö†Ô∏è SAST Risk (Low): Directly adding and committing to session without exception handling.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 306, 4375, 290, 17222, 284, 6246, 1231, 6631, 9041, 13]",0.5,529,sast_risk,121,Directly adding and committing to session without exception handling.,Low,529,,[]
üß† ML Signal: Fetching additional statistics for the entity.,"[8582, 100, 254, 10373, 26484, 25, 376, 7569, 278, 3224, 7869, 329, 262, 9312, 13]",0.5,539,ml_signal,124,Fetching additional statistics for the entity.,,529,        # fill holder,"[220, 220, 220, 220, 220, 220, 220, 1303, 6070, 15762]"
‚úÖ Best Practice: Use of get method to safely access dictionary keys.,"[26486, 227, 6705, 19939, 25, 5765, 286, 651, 2446, 284, 11512, 1895, 22155, 8251, 13]",0.5,553,best_practice,127,Use of get method to safely access dictionary keys.,,539,            if holder:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 15762, 25]"
üß† ML Signal: Updating entity attributes based on external data.,"[8582, 100, 254, 10373, 26484, 25, 3205, 38734, 9312, 12608, 1912, 319, 7097, 1366, 13]",1.0,576,ml_signal,129,Updating entity attributes based on external data.,,553,"                if holder.get(""parent""):","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 15762, 13, 1136, 7203, 8000, 1, 2599]"
‚ö†Ô∏è SAST Risk (Low): Directly adding and committing to session without exception handling.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 306, 4375, 290, 17222, 284, 6246, 1231, 6631, 9041, 13]",0.5,593,sast_risk,131,Directly adding and committing to session without exception handling.,Low,576,                else:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2073, 25]"
üß† ML Signal: Inheritance from a base class indicates a common pattern for extending functionality.,"[8582, 100, 254, 10373, 26484, 25, 47025, 42942, 422, 257, 2779, 1398, 9217, 257, 2219, 3912, 329, 16610, 11244, 13]",1.0,634,ml_signal,125,Inheritance from a base class indicates a common pattern for extending functionality.,,593,"        if not entity.holder_modified_date or (count_interval(entity.holder_modified_date, now_pd_timestamp()) > 30):","[220, 220, 220, 220, 220, 220, 220, 611, 407, 9312, 13, 13829, 62, 41771, 62, 4475, 393, 357, 9127, 62, 3849, 2100, 7, 26858, 13, 13829, 62, 41771, 62, 4475, 11, 783, 62, 30094, 62, 16514, 27823, 28955, 1875, 1542, 2599]"
"üß† ML Signal: Use of a string constant for provider name, useful for categorization.","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 4731, 6937, 329, 10131, 1438, 11, 4465, 329, 17851, 1634, 13]",1.0,648,ml_signal,127,"Use of a string constant for provider name, useful for categorization.",,634,            if holder:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 15762, 25]"
"üß† ML Signal: Assignment of schema class, indicating a pattern for data structure.","[8582, 100, 254, 10373, 26484, 25, 50144, 286, 32815, 1398, 11, 12739, 257, 3912, 329, 1366, 4645, 13]",0.5,671,ml_signal,129,"Assignment of schema class, indicating a pattern for data structure.",,648,"                if holder.get(""parent""):","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 15762, 13, 1136, 7203, 8000, 1, 2599]"
"üß† ML Signal: Assignment of data schema, indicating a pattern for data structure.","[8582, 100, 254, 10373, 26484, 25, 50144, 286, 1366, 32815, 11, 12739, 257, 3912, 329, 1366, 4645, 13]",0.5,688,ml_signal,131,"Assignment of data schema, indicating a pattern for data structure.",,671,                else:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2073, 25]"
üß† ML Signal: Inheritance from a base class indicates a pattern of code reuse and specialization.,"[8582, 100, 254, 10373, 26484, 25, 47025, 42942, 422, 257, 2779, 1398, 9217, 257, 3912, 286, 2438, 32349, 290, 43135, 13]",0.5,711,ml_signal,129,Inheritance from a base class indicates a pattern of code reuse and specialization.,,688,"                if holder.get(""parent""):","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 15762, 13, 1136, 7203, 8000, 1, 2599]"
"üß† ML Signal: Use of a string constant to define a provider, which could be used to categorize or filter data.","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 4731, 6937, 284, 8160, 257, 10131, 11, 543, 714, 307, 973, 284, 17851, 1096, 393, 8106, 1366, 13]",0.5,728,ml_signal,131,"Use of a string constant to define a provider, which could be used to categorize or filter data.",,711,                else:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2073, 25]"
"üß† ML Signal: Assignment of a schema class, indicating a pattern of structured data handling.","[8582, 100, 254, 10373, 26484, 25, 50144, 286, 257, 32815, 1398, 11, 12739, 257, 3912, 286, 20793, 1366, 9041, 13]",0.5,755,ml_signal,133,"Assignment of a schema class, indicating a pattern of structured data handling.",,728,                entity.holder_modified_date = current_date(),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 9312, 13, 13829, 62, 41771, 62, 4475, 796, 1459, 62, 4475, 3419]"
"üß† ML Signal: Use of a common data schema, suggesting a standardized approach to data representation.","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 2219, 1366, 32815, 11, 9524, 257, 25713, 3164, 284, 1366, 10552, 13]",0.5,778,ml_signal,135,"Use of a common data schema, suggesting a standardized approach to data representation.",,755,                self.entity_session.commit(),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 26858, 62, 29891, 13, 41509, 3419]"
üß† ML Signal: Inheritance from a base class indicates a usage pattern for extending functionality.,"[8582, 100, 254, 10373, 26484, 25, 47025, 42942, 422, 257, 2779, 1398, 9217, 257, 8748, 3912, 329, 16610, 11244, 13]",0.5,805,ml_signal,133,Inheritance from a base class indicates a usage pattern for extending functionality.,,778,                entity.holder_modified_date = current_date(),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 9312, 13, 13829, 62, 41771, 62, 4475, 796, 1459, 62, 4475, 3419]"
‚úÖ Best Practice: Class-level attributes provide a clear and consistent way to define static properties.,"[26486, 227, 6705, 19939, 25, 5016, 12, 5715, 12608, 2148, 257, 1598, 290, 6414, 835, 284, 8160, 9037, 6608, 13]",0.5,830,best_practice,134,Class-level attributes provide a clear and consistent way to define static properties.,,805,                self.entity_session.add(entity),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 26858, 62, 29891, 13, 2860, 7, 26858, 8]"
üß† ML Signal: Use of a string to define a provider can indicate a pattern for data source identification.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 4731, 284, 8160, 257, 10131, 460, 7603, 257, 3912, 329, 1366, 2723, 11795, 13]",0.5,867,ml_signal,136,Use of a string to define a provider can indicate a pattern for data source identification.,,830,            holder_stats = em_api.get_top_ten_free_holder_stats(code=entity.code),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 15762, 62, 34242, 796, 795, 62, 15042, 13, 1136, 62, 4852, 62, 1452, 62, 5787, 62, 13829, 62, 34242, 7, 8189, 28, 26858, 13, 8189, 8]"
üß† ML Signal: Assigning a schema to a class attribute suggests a pattern for data structure enforcement.,"[8582, 100, 254, 10373, 26484, 25, 2195, 38944, 257, 32815, 284, 257, 1398, 11688, 5644, 257, 3912, 329, 1366, 4645, 5394, 13]",0.5,900,ml_signal,138,Assigning a schema to a class attribute suggests a pattern for data structure enforcement.,,867,"                entity.top_ten_ratio = holder_stats.get(""ratio"")","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 9312, 13, 4852, 62, 1452, 62, 10366, 952, 796, 15762, 62, 34242, 13, 1136, 7203, 10366, 952, 4943]"
üß† ML Signal: Use of a common data schema indicates a pattern for standardizing data handling.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 2219, 1366, 32815, 9217, 257, 3912, 329, 3210, 2890, 1366, 9041, 13]",0.5,925,ml_signal,140,Use of a common data schema indicates a pattern for standardizing data handling.,,900,                self.entity_session.add(entity),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 26858, 62, 29891, 13, 2860, 7, 26858, 8]"
üß† ML Signal: Inheritance pattern indicating a specialized class,"[8582, 100, 254, 10373, 26484, 25, 47025, 42942, 3912, 12739, 257, 16976, 1398]",1.0,941,ml_signal,137,Inheritance pattern indicating a specialized class,,925,            if holder_stats:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 15762, 62, 34242, 25]"
‚úÖ Best Practice: Class-level attributes for configuration and metadata,"[26486, 227, 6705, 19939, 25, 5016, 12, 5715, 12608, 329, 8398, 290, 20150]",0.5,974,best_practice,138,Class-level attributes for configuration and metadata,,941,"                entity.top_ten_ratio = holder_stats.get(""ratio"")","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 9312, 13, 4852, 62, 1452, 62, 10366, 952, 796, 15762, 62, 34242, 13, 1136, 7203, 10366, 952, 4943]"
üß† ML Signal: Static configuration of data source,"[8582, 100, 254, 10373, 26484, 25, 36125, 8398, 286, 1366, 2723]",0.5,999,ml_signal,140,Static configuration of data source,,974,                self.entity_session.add(entity),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 26858, 62, 29891, 13, 2860, 7, 26858, 8]"
üß† ML Signal: Static configuration of data schema,"[8582, 100, 254, 10373, 26484, 25, 36125, 8398, 286, 1366, 32815]",0.5,999,ml_signal,142,Static configuration of data schema,,999,,[]
üß† ML Signal: Inheritance from a base class indicates a usage pattern for extending functionality.,"[8582, 100, 254, 10373, 26484, 25, 47025, 42942, 422, 257, 2779, 1398, 9217, 257, 8748, 3912, 329, 16610, 11244, 13]",1.0,1022,ml_signal,141,Inheritance from a base class indicates a usage pattern for extending functionality.,,999,                self.entity_session.commit(),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 26858, 62, 29891, 13, 41509, 3419]"
‚úÖ Best Practice: Class attributes are defined at the top for clarity and easy access.,"[26486, 227, 6705, 19939, 25, 5016, 12608, 389, 5447, 379, 262, 1353, 329, 16287, 290, 2562, 1895, 13]",0.5,1022,best_practice,142,Class attributes are defined at the top for clarity and easy access.,,1022,,[]
üß† ML Signal: Use of a string to define a provider suggests a pattern for identifying data sources.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 4731, 284, 8160, 257, 10131, 5644, 257, 3912, 329, 13720, 1366, 4237, 13]",0.5,1039,ml_signal,144,Use of a string to define a provider suggests a pattern for identifying data sources.,,1022,class EMStockusKdataRecorder(BaseEMStockKdataRecorder):,"[4871, 17228, 26207, 385, 42, 7890, 6690, 2875, 7, 14881, 3620, 26207, 42, 7890, 6690, 2875, 2599]"
üß† ML Signal: Use of schema attributes indicates a pattern for data structure definition.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32815, 12608, 9217, 257, 3912, 329, 1366, 4645, 6770, 13]",0.5,1049,ml_signal,146,Use of schema attributes indicates a pattern for data structure definition.,,1039,    entity_schema = Stockus,"[220, 220, 220, 9312, 62, 15952, 2611, 796, 10500, 385]"
üß† ML Signal: Use of schema attributes indicates a pattern for data structure definition.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32815, 12608, 9217, 257, 3912, 329, 1366, 4645, 6770, 13]",0.5,1049,ml_signal,148,Use of schema attributes indicates a pattern for data structure definition.,,1049,,[]
"üß† ML Signal: Class definition with inheritance, useful for understanding class hierarchies","[8582, 100, 254, 10373, 26484, 25, 5016, 6770, 351, 24155, 11, 4465, 329, 4547, 1398, 28398, 444]",1.0,1066,ml_signal,144,"Class definition with inheritance, useful for understanding class hierarchies",,1049,class EMStockusKdataRecorder(BaseEMStockKdataRecorder):,"[4871, 17228, 26207, 385, 42, 7890, 6690, 2875, 7, 14881, 3620, 26207, 42, 7890, 6690, 2875, 2599]"
"üß† ML Signal: Class attribute definition, useful for understanding default values and configurations","[8582, 100, 254, 10373, 26484, 25, 5016, 11688, 6770, 11, 4465, 329, 4547, 4277, 3815, 290, 25412]",1.0,1076,ml_signal,146,"Class attribute definition, useful for understanding default values and configurations",,1066,    entity_schema = Stockus,"[220, 220, 220, 9312, 62, 15952, 2611, 796, 10500, 385]"
"üß† ML Signal: Class attribute definition, useful for understanding default values and configurations","[8582, 100, 254, 10373, 26484, 25, 5016, 11688, 6770, 11, 4465, 329, 4547, 4277, 3815, 290, 25412]",1.0,1076,ml_signal,148,"Class attribute definition, useful for understanding default values and configurations",,1076,,[]
"üß† ML Signal: Class attribute definition, useful for understanding default values and configurations","[8582, 100, 254, 10373, 26484, 25, 5016, 11688, 6770, 11, 4465, 329, 4547, 4277, 3815, 290, 25412]",1.0,1094,ml_signal,150,"Class attribute definition, useful for understanding default values and configurations",,1076,class EMStockhkKdataRecorder(BaseEMStockKdataRecorder):,"[4871, 17228, 26207, 71, 74, 42, 7890, 6690, 2875, 7, 14881, 3620, 26207, 42, 7890, 6690, 2875, 2599]"
"‚úÖ Best Practice: Use of __name__ == ""__main__"" to ensure code only runs when script is executed directly","[26486, 227, 6705, 19939, 25, 5765, 286, 11593, 3672, 834, 6624, 366, 834, 12417, 834, 1, 284, 4155, 2438, 691, 4539, 618, 4226, 318, 10945, 3264]",0.5,1108,best_practice,153,"Use of __name__ == ""__main__"" to ensure code only runs when script is executed directly",,1094,    data_schema = StockhkKdataCommon,"[220, 220, 220, 1366, 62, 15952, 2611, 796, 10500, 71, 74, 42, 7890, 17227]"
üß† ML Signal: Querying data from a specific provider and filtering by exchange,"[8582, 100, 254, 10373, 26484, 25, 2264, 263, 1112, 1366, 422, 257, 2176, 10131, 290, 25431, 416, 5163]",0.5,1108,ml_signal,155,Querying data from a specific provider and filtering by exchange,,1108,,[]
üß† ML Signal: Converting a DataFrame column to a list,"[8582, 100, 254, 10373, 26484, 25, 35602, 889, 257, 6060, 19778, 5721, 284, 257, 1351]",1.0,1117,ml_signal,158,Converting a DataFrame column to a list,,1108,    entity_schema = Index,"[220, 220, 220, 9312, 62, 15952, 2611, 796, 12901]"
üß† ML Signal: Instantiating a recorder with specific parameters,"[8582, 100, 254, 10373, 26484, 25, 2262, 17096, 803, 257, 38156, 351, 2176, 10007]",1.0,1117,ml_signal,159,Instantiating a recorder with specific parameters,,1117,,[]
üß† ML Signal: Running a recorder instance,"[8582, 100, 254, 10373, 26484, 25, 18162, 257, 38156, 4554]",0.5,1117,ml_signal,159,Running a recorder instance,,1117,,[]
‚úÖ Best Practice: Use of __all__ to define public API of the module,"[26486, 227, 6705, 19939, 25, 5765, 286, 11593, 439, 834, 284, 8160, 1171, 7824, 286, 262, 8265]",1.0,1117,best_practice,159,Use of __all__ to define public API of the module,,1117,,[]
