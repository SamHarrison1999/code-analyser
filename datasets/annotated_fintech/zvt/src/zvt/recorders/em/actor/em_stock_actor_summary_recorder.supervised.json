[
  {
    "line": 3,
    "text": "",
    "annotation": "\u2705 Best Practice: Grouping imports into standard, third-party, and local sections improves readability.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 0,
    "end_token": 0,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      656,
      3210,
      11,
      2368,
      12,
      10608,
      11,
      290,
      1957,
      9004,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports into standard, third-party, and local sections improves readability."
  },
  {
    "line": 12,
    "text": "from zvt.recorders.em.em_api import get_ii_holder_report_dates, actor_type_to_org_type, get_ii_summary",
    "annotation": "\ud83e\udde0 ML Signal: Inheritance from TimestampsDataRecorder indicates a pattern of extending functionality",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      8344,
      6361,
      13,
      368,
      13,
      368,
      62,
      15042,
      1330,
      651,
      62,
      4178,
      62,
      13829,
      62,
      13116,
      62,
      19581,
      11,
      8674,
      62,
      4906,
      62,
      1462,
      62,
      2398,
      62,
      4906,
      11,
      651,
      62,
      4178,
      62,
      49736
    ],
    "start_token": 0,
    "end_token": 38,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47025,
      42942,
      422,
      5045,
      395,
      9430,
      6601,
      6690,
      2875,
      9217,
      257,
      3912,
      286,
      16610,
      11244
    ],
    "label": "ml_signal",
    "reason": "Inheritance from TimestampsDataRecorder indicates a pattern of extending functionality"
  },
  {
    "line": 14,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of string literals for configuration or identification",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 38,
    "end_token": 38,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4731,
      4187,
      874,
      329,
      8398,
      393,
      11795
    ],
    "label": "ml_signal",
    "reason": "Use of string literals for configuration or identification"
  },
  {
    "line": 16,
    "text": "# [{'CHANGE_RATIO': -1.045966694333,",
    "annotation": "\ud83e\udde0 ML Signal: Use of class attributes for schema definition",
    "confidence": 0.5,
    "tokens": [
      2,
      685,
      90,
      6,
      3398,
      27746,
      62,
      49,
      1404,
      9399,
      10354,
      532,
      16,
      13,
      15,
      33459,
      2791,
      45214,
      20370,
      11
    ],
    "start_token": 38,
    "end_token": 58,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1398,
      12608,
      329,
      32815,
      6770
    ],
    "label": "ml_signal",
    "reason": "Use of class attributes for schema definition"
  },
  {
    "line": 18,
    "text": "#   'ORG_TYPE': '07',",
    "annotation": "\ud83e\udde0 ML Signal: Consistent use of provider attribute for data source identification",
    "confidence": 0.5,
    "tokens": [
      2,
      220,
      220,
      705,
      1581,
      38,
      62,
      25216,
      10354,
      705,
      2998,
      3256
    ],
    "start_token": 58,
    "end_token": 70,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3515,
      7609,
      779,
      286,
      10131,
      11688,
      329,
      1366,
      2723,
      11795
    ],
    "label": "ml_signal",
    "reason": "Consistent use of provider attribute for data source identification"
  },
  {
    "line": 20,
    "text": "#   'SECUCODE': '000338.SZ',",
    "annotation": "\ud83e\udde0 ML Signal: Use of class attributes for schema definition",
    "confidence": 0.5,
    "tokens": [
      2,
      220,
      220,
      705,
      23683,
      9598,
      16820,
      10354,
      705,
      830,
      28460,
      13,
      50,
      57,
      3256
    ],
    "start_token": 70,
    "end_token": 85,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1398,
      12608,
      329,
      32815,
      6770
    ],
    "label": "ml_signal",
    "reason": "Use of class attributes for schema definition"
  },
  {
    "line": 16,
    "text": "# [{'CHANGE_RATIO': -1.045966694333,",
    "annotation": "\u2705 Best Practice: Consider adding a type hint for the return type of the function",
    "confidence": 1.0,
    "tokens": [
      2,
      685,
      90,
      6,
      3398,
      27746,
      62,
      49,
      1404,
      9399,
      10354,
      532,
      16,
      13,
      15,
      33459,
      2791,
      45214,
      20370,
      11
    ],
    "start_token": 85,
    "end_token": 105,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      4375,
      257,
      2099,
      9254,
      329,
      262,
      1441,
      2099,
      286,
      262,
      2163
    ],
    "label": "best_practice",
    "reason": "Consider adding a type hint for the return type of the function"
  },
  {
    "line": 18,
    "text": "#   'ORG_TYPE': '07',",
    "annotation": "\ud83e\udde0 ML Signal: Usage of external function get_ii_holder_report_dates",
    "confidence": 1.0,
    "tokens": [
      2,
      220,
      220,
      705,
      1581,
      38,
      62,
      25216,
      10354,
      705,
      2998,
      3256
    ],
    "start_token": 105,
    "end_token": 117,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      7097,
      2163,
      651,
      62,
      4178,
      62,
      13829,
      62,
      13116,
      62,
      19581
    ],
    "label": "ml_signal",
    "reason": "Usage of external function get_ii_holder_report_dates"
  },
  {
    "line": 21,
    "text": "#   'SECURITY_CODE': '000338',",
    "annotation": "\ud83e\udde0 ML Signal: List comprehension pattern",
    "confidence": 0.5,
    "tokens": [
      2,
      220,
      220,
      705,
      23683,
      4261,
      9050,
      62,
      34,
      16820,
      10354,
      705,
      830,
      28460,
      3256
    ],
    "start_token": 117,
    "end_token": 132,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7343,
      35915,
      3912
    ],
    "label": "ml_signal",
    "reason": "List comprehension pattern"
  },
  {
    "line": 22,
    "text": "#   'TOTAL_FREE_SHARES': 2598718411,",
    "annotation": "\ud83e\udde0 ML Signal: Usage of external function to_pd_timestamp",
    "confidence": 0.5,
    "tokens": [
      2,
      220,
      220,
      705,
      51,
      27510,
      62,
      39274,
      62,
      9693,
      1503,
      1546,
      10354,
      1679,
      44183,
      22883,
      1157,
      11
    ],
    "start_token": 132,
    "end_token": 150,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      7097,
      2163,
      284,
      62,
      30094,
      62,
      16514,
      27823
    ],
    "label": "ml_signal",
    "reason": "Usage of external function to_pd_timestamp"
  },
  {
    "line": 21,
    "text": "#   'SECURITY_CODE': '000338',",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over timestamps to process data",
    "confidence": 1.0,
    "tokens": [
      2,
      220,
      220,
      705,
      23683,
      4261,
      9050,
      62,
      34,
      16820,
      10354,
      705,
      830,
      28460,
      3256
    ],
    "start_token": 150,
    "end_token": 165,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      4628,
      395,
      9430,
      284,
      1429,
      1366
    ],
    "label": "ml_signal",
    "reason": "Iterating over timestamps to process data"
  },
  {
    "line": 23,
    "text": "#   'TOTAL_MARKET_CAP': 49999342227.64,",
    "annotation": "\ud83e\udde0 ML Signal: Converting timestamp to string format",
    "confidence": 1.0,
    "tokens": [
      2,
      220,
      220,
      705,
      51,
      27510,
      62,
      44,
      14175,
      2767,
      62,
      33177,
      10354,
      604,
      24214,
      2682,
      1828,
      1983,
      13,
      2414,
      11
    ],
    "start_token": 165,
    "end_token": 186,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      35602,
      889,
      41033,
      284,
      4731,
      5794
    ],
    "label": "ml_signal",
    "reason": "Converting timestamp to string format"
  },
  {
    "line": 25,
    "text": "#   'TOTAL_SHARES_RATIO': 29.51742666}]",
    "annotation": "\ud83e\udde0 ML Signal: Logging information with entity code and date",
    "confidence": 1.0,
    "tokens": [
      2,
      220,
      220,
      705,
      51,
      27510,
      62,
      9693,
      1503,
      1546,
      62,
      49,
      1404,
      9399,
      10354,
      2808,
      13,
      20,
      22985,
      2075,
      2791,
      92,
      60
    ],
    "start_token": 186,
    "end_token": 209,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      1321,
      351,
      9312,
      2438,
      290,
      3128
    ],
    "label": "ml_signal",
    "reason": "Logging information with entity code and date"
  },
  {
    "line": 27,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over actor types for processing",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 209,
    "end_token": 209,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      8674,
      3858,
      329,
      7587
    ],
    "label": "ml_signal",
    "reason": "Iterating over actor types for processing"
  },
  {
    "line": 30,
    "text": "    entity_schema = Stock",
    "annotation": "\u2705 Best Practice: Skipping specific actor types early in the loop",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      15952,
      2611,
      796,
      10500
    ],
    "start_token": 209,
    "end_token": 218,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      3661,
      4501,
      2176,
      8674,
      3858,
      1903,
      287,
      262,
      9052
    ],
    "label": "best_practice",
    "reason": "Skipping specific actor types early in the loop"
  },
  {
    "line": 31,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Fetching summary data based on entity code, date, and actor type",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 218,
    "end_token": 218,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      376,
      7569,
      278,
      10638,
      1366,
      1912,
      319,
      9312,
      2438,
      11,
      3128,
      11,
      290,
      8674,
      2099
    ],
    "label": "ml_signal",
    "reason": "Fetching summary data based on entity code, date, and actor type"
  },
  {
    "line": 31,
    "text": "",
    "annotation": "\u2705 Best Practice: Checking if result is not empty before processing",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 218,
    "end_token": 218,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      39432,
      611,
      1255,
      318,
      407,
      6565,
      878,
      7587
    ],
    "label": "best_practice",
    "reason": "Checking if result is not empty before processing"
  },
  {
    "line": 31,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Creating a list of summaries from result data",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 218,
    "end_token": 218,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      30481,
      257,
      1351,
      286,
      30114,
      3166,
      422,
      1255,
      1366
    ],
    "label": "ml_signal",
    "reason": "Creating a list of summaries from result data"
  },
  {
    "line": 50,
    "text": "                if result:",
    "annotation": "\ud83e\udde0 ML Signal: Constructing unique ID for each summary",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      1255,
      25
    ],
    "start_token": 218,
    "end_token": 236,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      28407,
      278,
      3748,
      4522,
      329,
      1123,
      10638
    ],
    "label": "ml_signal",
    "reason": "Constructing unique ID for each summary"
  },
  {
    "line": 50,
    "text": "                if result:",
    "annotation": "\ud83e\udde0 ML Signal: Extracting and transforming data from result",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      1255,
      25
    ],
    "start_token": 236,
    "end_token": 254,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29677,
      278,
      290,
      25449,
      1366,
      422,
      1255
    ],
    "label": "ml_signal",
    "reason": "Extracting and transforming data from result"
  },
  {
    "line": 60,
    "text": "                            \"report_date\": timestamp,",
    "annotation": "\ud83e\udde0 ML Signal: Creating DataFrame from summary list",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      13116,
      62,
      4475,
      1298,
      41033,
      11
    ],
    "start_token": 254,
    "end_token": 288,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      30481,
      6060,
      19778,
      422,
      10638,
      1351
    ],
    "label": "ml_signal",
    "reason": "Creating DataFrame from summary list"
  },
  {
    "line": 60,
    "text": "                            \"report_date\": timestamp,",
    "annotation": "\ud83e\udde0 ML Signal: Storing DataFrame to database with specific parameters",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      13116,
      62,
      4475,
      1298,
      41033,
      11
    ],
    "start_token": 288,
    "end_token": 322,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      520,
      3255,
      6060,
      19778,
      284,
      6831,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Storing DataFrame to database with specific parameters"
  },
  {
    "line": 60,
    "text": "                            \"report_date\": timestamp,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Code execution entry point",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      13116,
      62,
      4475,
      1298,
      41033,
      11
    ],
    "start_token": 322,
    "end_token": 356,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6127,
      9706,
      5726,
      966
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Code execution entry point"
  },
  {
    "line": 60,
    "text": "                            \"report_date\": timestamp,",
    "annotation": "\ud83e\udde0 ML Signal: Running the recorder with specific stock codes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      13116,
      62,
      4475,
      1298,
      41033,
      11
    ],
    "start_token": 356,
    "end_token": 390,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      18162,
      262,
      38156,
      351,
      2176,
      4283,
      12416
    ],
    "label": "ml_signal",
    "reason": "Running the recorder with specific stock codes"
  },
  {
    "line": 60,
    "text": "                            \"report_date\": timestamp,",
    "annotation": "\ud83e\udde0 ML Signal: Defining module exports",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      13116,
      62,
      4475,
      1298,
      41033,
      11
    ],
    "start_token": 390,
    "end_token": 424,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2896,
      3191,
      8265,
      15319
    ],
    "label": "ml_signal",
    "reason": "Defining module exports"
  }
]