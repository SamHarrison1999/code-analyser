annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
"‚úÖ Best Practice: Grouping imports into standard, third-party, and local sections improves readability.","[26486, 227, 6705, 19939, 25, 4912, 278, 17944, 656, 3210, 11, 2368, 12, 10608, 11, 290, 1957, 9004, 19575, 1100, 1799, 13]",1.0,0,best_practice,3,"Grouping imports into standard, third-party, and local sections improves readability.",,0,,[]
üß† ML Signal: Inheritance from TimestampsDataRecorder indicates a pattern of extending functionality,"[8582, 100, 254, 10373, 26484, 25, 47025, 42942, 422, 5045, 395, 9430, 6601, 6690, 2875, 9217, 257, 3912, 286, 16610, 11244]",0.5,38,ml_signal,12,Inheritance from TimestampsDataRecorder indicates a pattern of extending functionality,,0,"from zvt.recorders.em.em_api import get_ii_holder_report_dates, actor_type_to_org_type, get_ii_summary","[6738, 1976, 36540, 13, 8344, 6361, 13, 368, 13, 368, 62, 15042, 1330, 651, 62, 4178, 62, 13829, 62, 13116, 62, 19581, 11, 8674, 62, 4906, 62, 1462, 62, 2398, 62, 4906, 11, 651, 62, 4178, 62, 49736]"
üß† ML Signal: Use of string literals for configuration or identification,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4731, 4187, 874, 329, 8398, 393, 11795]",0.5,38,ml_signal,14,Use of string literals for configuration or identification,,38,,[]
üß† ML Signal: Use of class attributes for schema definition,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1398, 12608, 329, 32815, 6770]",0.5,58,ml_signal,16,Use of class attributes for schema definition,,38,"# [{'CHANGE_RATIO': -1.045966694333,","[2, 685, 90, 6, 3398, 27746, 62, 49, 1404, 9399, 10354, 532, 16, 13, 15, 33459, 2791, 45214, 20370, 11]"
üß† ML Signal: Consistent use of provider attribute for data source identification,"[8582, 100, 254, 10373, 26484, 25, 3515, 7609, 779, 286, 10131, 11688, 329, 1366, 2723, 11795]",0.5,70,ml_signal,18,Consistent use of provider attribute for data source identification,,58,"#   'ORG_TYPE': '07',","[2, 220, 220, 705, 1581, 38, 62, 25216, 10354, 705, 2998, 3256]"
üß† ML Signal: Use of class attributes for schema definition,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1398, 12608, 329, 32815, 6770]",0.5,85,ml_signal,20,Use of class attributes for schema definition,,70,"#   'SECUCODE': '000338.SZ',","[2, 220, 220, 705, 23683, 9598, 16820, 10354, 705, 830, 28460, 13, 50, 57, 3256]"
‚úÖ Best Practice: Consider adding a type hint for the return type of the function,"[26486, 227, 6705, 19939, 25, 12642, 4375, 257, 2099, 9254, 329, 262, 1441, 2099, 286, 262, 2163]",1.0,105,best_practice,16,Consider adding a type hint for the return type of the function,,85,"# [{'CHANGE_RATIO': -1.045966694333,","[2, 685, 90, 6, 3398, 27746, 62, 49, 1404, 9399, 10354, 532, 16, 13, 15, 33459, 2791, 45214, 20370, 11]"
üß† ML Signal: Usage of external function get_ii_holder_report_dates,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 7097, 2163, 651, 62, 4178, 62, 13829, 62, 13116, 62, 19581]",1.0,117,ml_signal,18,Usage of external function get_ii_holder_report_dates,,105,"#   'ORG_TYPE': '07',","[2, 220, 220, 705, 1581, 38, 62, 25216, 10354, 705, 2998, 3256]"
üß† ML Signal: List comprehension pattern,"[8582, 100, 254, 10373, 26484, 25, 7343, 35915, 3912]",0.5,132,ml_signal,21,List comprehension pattern,,117,"#   'SECURITY_CODE': '000338',","[2, 220, 220, 705, 23683, 4261, 9050, 62, 34, 16820, 10354, 705, 830, 28460, 3256]"
üß† ML Signal: Usage of external function to_pd_timestamp,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 7097, 2163, 284, 62, 30094, 62, 16514, 27823]",0.5,150,ml_signal,22,Usage of external function to_pd_timestamp,,132,"#   'TOTAL_FREE_SHARES': 2598718411,","[2, 220, 220, 705, 51, 27510, 62, 39274, 62, 9693, 1503, 1546, 10354, 1679, 44183, 22883, 1157, 11]"
üß† ML Signal: Iterating over timestamps to process data,"[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 4628, 395, 9430, 284, 1429, 1366]",1.0,165,ml_signal,21,Iterating over timestamps to process data,,150,"#   'SECURITY_CODE': '000338',","[2, 220, 220, 705, 23683, 4261, 9050, 62, 34, 16820, 10354, 705, 830, 28460, 3256]"
üß† ML Signal: Converting timestamp to string format,"[8582, 100, 254, 10373, 26484, 25, 35602, 889, 41033, 284, 4731, 5794]",1.0,186,ml_signal,23,Converting timestamp to string format,,165,"#   'TOTAL_MARKET_CAP': 49999342227.64,","[2, 220, 220, 705, 51, 27510, 62, 44, 14175, 2767, 62, 33177, 10354, 604, 24214, 2682, 1828, 1983, 13, 2414, 11]"
üß† ML Signal: Logging information with entity code and date,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 1321, 351, 9312, 2438, 290, 3128]",1.0,209,ml_signal,25,Logging information with entity code and date,,186,#   'TOTAL_SHARES_RATIO': 29.51742666}],"[2, 220, 220, 705, 51, 27510, 62, 9693, 1503, 1546, 62, 49, 1404, 9399, 10354, 2808, 13, 20, 22985, 2075, 2791, 92, 60]"
üß† ML Signal: Iterating over actor types for processing,"[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 8674, 3858, 329, 7587]",1.0,209,ml_signal,27,Iterating over actor types for processing,,209,,[]
‚úÖ Best Practice: Skipping specific actor types early in the loop,"[26486, 227, 6705, 19939, 25, 3661, 4501, 2176, 8674, 3858, 1903, 287, 262, 9052]",1.0,218,best_practice,30,Skipping specific actor types early in the loop,,209,    entity_schema = Stock,"[220, 220, 220, 9312, 62, 15952, 2611, 796, 10500]"
"üß† ML Signal: Fetching summary data based on entity code, date, and actor type","[8582, 100, 254, 10373, 26484, 25, 376, 7569, 278, 10638, 1366, 1912, 319, 9312, 2438, 11, 3128, 11, 290, 8674, 2099]",1.0,218,ml_signal,31,"Fetching summary data based on entity code, date, and actor type",,218,,[]
‚úÖ Best Practice: Checking if result is not empty before processing,"[26486, 227, 6705, 19939, 25, 39432, 611, 1255, 318, 407, 6565, 878, 7587]",1.0,218,best_practice,31,Checking if result is not empty before processing,,218,,[]
üß† ML Signal: Creating a list of summaries from result data,"[8582, 100, 254, 10373, 26484, 25, 30481, 257, 1351, 286, 30114, 3166, 422, 1255, 1366]",1.0,218,ml_signal,31,Creating a list of summaries from result data,,218,,[]
üß† ML Signal: Constructing unique ID for each summary,"[8582, 100, 254, 10373, 26484, 25, 28407, 278, 3748, 4522, 329, 1123, 10638]",1.0,236,ml_signal,50,Constructing unique ID for each summary,,218,                if result:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 1255, 25]"
üß† ML Signal: Extracting and transforming data from result,"[8582, 100, 254, 10373, 26484, 25, 29677, 278, 290, 25449, 1366, 422, 1255]",1.0,254,ml_signal,50,Extracting and transforming data from result,,236,                if result:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 1255, 25]"
üß† ML Signal: Creating DataFrame from summary list,"[8582, 100, 254, 10373, 26484, 25, 30481, 6060, 19778, 422, 10638, 1351]",1.0,288,ml_signal,60,Creating DataFrame from summary list,,254,"                            ""report_date"": timestamp,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 366, 13116, 62, 4475, 1298, 41033, 11]"
üß† ML Signal: Storing DataFrame to database with specific parameters,"[8582, 100, 254, 10373, 26484, 25, 520, 3255, 6060, 19778, 284, 6831, 351, 2176, 10007]",0.5,322,ml_signal,60,Storing DataFrame to database with specific parameters,,288,"                            ""report_date"": timestamp,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 366, 13116, 62, 4475, 1298, 41033, 11]"
‚ö†Ô∏è SAST Risk (Low): Code execution entry point,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6127, 9706, 5726, 966]",0.5,356,sast_risk,60,Code execution entry point,Low,322,"                            ""report_date"": timestamp,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 366, 13116, 62, 4475, 1298, 41033, 11]"
üß† ML Signal: Running the recorder with specific stock codes,"[8582, 100, 254, 10373, 26484, 25, 18162, 262, 38156, 351, 2176, 4283, 12416]",1.0,390,ml_signal,60,Running the recorder with specific stock codes,,356,"                            ""report_date"": timestamp,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 366, 13116, 62, 4475, 1298, 41033, 11]"
üß† ML Signal: Defining module exports,"[8582, 100, 254, 10373, 26484, 25, 2896, 3191, 8265, 15319]",0.5,424,ml_signal,60,Defining module exports,,390,"                            ""report_date"": timestamp,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 366, 13116, 62, 4475, 1298, 41033, 11]"
