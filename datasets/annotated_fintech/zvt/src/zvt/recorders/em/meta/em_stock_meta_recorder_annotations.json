[
  {
    "line": 9,
    "text": "from zvt.recorders.em import em_api",
    "annotation": "\ud83e\udde0 ML Signal: Inheritance from a base class, indicating a pattern of extending functionality",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      8344,
      6361,
      13,
      368,
      1330,
      795,
      62,
      15042
    ],
    "start_token": 0,
    "end_token": 12,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47025,
      42942,
      422,
      257,
      2779,
      1398,
      11,
      12739,
      257,
      3912,
      286,
      16610,
      11244
    ],
    "label": "ml_signal",
    "reason": "Inheritance from a base class, indicating a pattern of extending functionality"
  },
  {
    "line": 11,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Class attribute indicating a constant or configuration setting",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 12,
    "end_token": 12,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      11688,
      12739,
      257,
      6937,
      393,
      8398,
      4634
    ],
    "label": "ml_signal",
    "reason": "Class attribute indicating a constant or configuration setting"
  },
  {
    "line": 13,
    "text": "class EMStockRecorder(Recorder):",
    "annotation": "\ud83e\udde0 ML Signal: Class attribute indicating a schema or data structure being used",
    "confidence": 0.5,
    "tokens": [
      4871,
      17228,
      26207,
      6690,
      2875,
      7,
      6690,
      2875,
      2599
    ],
    "start_token": 12,
    "end_token": 21,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      11688,
      12739,
      257,
      32815,
      393,
      1366,
      4645,
      852,
      973
    ],
    "label": "ml_signal",
    "reason": "Class attribute indicating a schema or data structure being used"
  },
  {
    "line": 12,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over a list of exchanges indicates a pattern of processing multiple data sources.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 21,
    "end_token": 21,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      257,
      1351,
      286,
      14525,
      9217,
      257,
      3912,
      286,
      7587,
      3294,
      1366,
      4237,
      13
    ],
    "label": "ml_signal",
    "reason": "Iterating over a list of exchanges indicates a pattern of processing multiple data sources."
  },
  {
    "line": 14,
    "text": "    provider = \"em\"",
    "annotation": "\ud83e\udde0 ML Signal: API call to fetch tradable list, indicating data retrieval pattern.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      10131,
      796,
      366,
      368,
      1
    ],
    "start_token": 21,
    "end_token": 29,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7824,
      869,
      284,
      21207,
      2083,
      540,
      1351,
      11,
      12739,
      1366,
      45069,
      3912,
      13
    ],
    "label": "ml_signal",
    "reason": "API call to fetch tradable list, indicating data retrieval pattern."
  },
  {
    "line": 16,
    "text": "",
    "annotation": "\u2705 Best Practice: Check if DataFrame is not null before processing.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 29,
    "end_token": 29,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      611,
      6060,
      19778,
      318,
      407,
      9242,
      878,
      7587,
      13
    ],
    "label": "best_practice",
    "reason": "Check if DataFrame is not null before processing."
  },
  {
    "line": 18,
    "text": "        for exchange in [Exchange.sh, Exchange.sz, Exchange.bj]:",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over DataFrame rows to process each item.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      329,
      5163,
      287,
      685,
      3109,
      3803,
      13,
      1477,
      11,
      12516,
      13,
      82,
      89,
      11,
      12516,
      13,
      50007,
      5974
    ],
    "start_token": 29,
    "end_token": 54,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      6060,
      19778,
      15274,
      284,
      1429,
      1123,
      2378,
      13
    ],
    "label": "ml_signal",
    "reason": "Iterating over DataFrame rows to process each item."
  },
  {
    "line": 20,
    "text": "            # df_delist = df[df[\"name\"].str.contains(\"\u9000\")]",
    "annotation": "\u2705 Best Practice: Destructuring assignment for clarity.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      47764,
      62,
      12381,
      396,
      796,
      47764,
      58,
      7568,
      14692,
      3672,
      1,
      4083,
      2536,
      13,
      3642,
      1299,
      7203,
      34460,
      222,
      4943,
      60
    ],
    "start_token": 54,
    "end_token": 87,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8145,
      1356,
      870,
      16237,
      329,
      16287,
      13
    ],
    "label": "best_practice",
    "reason": "Destructuring assignment for clarity."
  },
  {
    "line": 23,
    "text": "                    id = item[0]",
    "annotation": "\u26a0\ufe0f SAST Risk (High): SQL injection risk due to string formatting in SQL query.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4686,
      796,
      2378,
      58,
      15,
      60
    ],
    "start_token": 87,
    "end_token": 112,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      11922,
      2599,
      16363,
      16954,
      2526,
      2233,
      284,
      4731,
      33313,
      287,
      16363,
      12405,
      13
    ],
    "label": "sast_risk",
    "severity": "High",
    "reason": "SQL injection risk due to string formatting in SQL query."
  },
  {
    "line": 25,
    "text": "                    sql = text(f'update stock set name = \"{name}\" where id = \"{id}\"')",
    "annotation": "\ud83e\udde0 ML Signal: Executing SQL command indicates database interaction pattern.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      44161,
      796,
      2420,
      7,
      69,
      6,
      19119,
      4283,
      900,
      1438,
      796,
      45144,
      3672,
      36786,
      810,
      4686,
      796,
      45144,
      312,
      36786,
      11537
    ],
    "start_token": 112,
    "end_token": 152,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8393,
      15129,
      16363,
      3141,
      9217,
      6831,
      10375,
      3912,
      13
    ],
    "label": "ml_signal",
    "reason": "Executing SQL command indicates database interaction pattern."
  },
  {
    "line": 26,
    "text": "                    self.session.execute(sql)",
    "annotation": "\ud83e\udde0 ML Signal: Committing transaction to database.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      29891,
      13,
      41049,
      7,
      25410,
      8
    ],
    "start_token": 152,
    "end_token": 179,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      1520,
      2535,
      8611,
      284,
      6831,
      13
    ],
    "label": "ml_signal",
    "reason": "Committing transaction to database."
  },
  {
    "line": 26,
    "text": "                    self.session.execute(sql)",
    "annotation": "\ud83e\udde0 ML Signal: Logging information, indicating a pattern of monitoring or debugging.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      29891,
      13,
      41049,
      7,
      25410,
      8
    ],
    "start_token": 179,
    "end_token": 206,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      1321,
      11,
      12739,
      257,
      3912,
      286,
      9904,
      393,
      28769,
      13
    ],
    "label": "ml_signal",
    "reason": "Logging information, indicating a pattern of monitoring or debugging."
  },
  {
    "line": 26,
    "text": "                    self.session.execute(sql)",
    "annotation": "\ud83e\udde0 ML Signal: Saving DataFrame to database, indicating data persistence pattern.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      29891,
      13,
      41049,
      7,
      25410,
      8
    ],
    "start_token": 206,
    "end_token": 233,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      34689,
      6060,
      19778,
      284,
      6831,
      11,
      12739,
      1366,
      30802,
      3912,
      13
    ],
    "label": "ml_signal",
    "reason": "Saving DataFrame to database, indicating data persistence pattern."
  },
  {
    "line": 26,
    "text": "                    self.session.execute(sql)",
    "annotation": "\u2705 Best Practice: Use of main guard to ensure code only runs when script is executed directly.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      29891,
      13,
      41049,
      7,
      25410,
      8
    ],
    "start_token": 233,
    "end_token": 260,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      1388,
      4860,
      284,
      4155,
      2438,
      691,
      4539,
      618,
      4226,
      318,
      10945,
      3264,
      13
    ],
    "label": "best_practice",
    "reason": "Use of main guard to ensure code only runs when script is executed directly."
  },
  {
    "line": 26,
    "text": "                    self.session.execute(sql)",
    "annotation": "\ud83e\udde0 ML Signal: Instantiating and running a recorder object, indicating a pattern of task execution.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      29891,
      13,
      41049,
      7,
      25410,
      8
    ],
    "start_token": 260,
    "end_token": 287,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2262,
      17096,
      803,
      290,
      2491,
      257,
      38156,
      2134,
      11,
      12739,
      257,
      3912,
      286,
      4876,
      9706,
      13
    ],
    "label": "ml_signal",
    "reason": "Instantiating and running a recorder object, indicating a pattern of task execution."
  },
  {
    "line": 26,
    "text": "                    self.session.execute(sql)",
    "annotation": "\u2705 Best Practice: Use of __all__ to define public API of the module.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      29891,
      13,
      41049,
      7,
      25410,
      8
    ],
    "start_token": 287,
    "end_token": 314,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265,
      13
    ],
    "label": "best_practice",
    "reason": "Use of __all__ to define public API of the module."
  }
]