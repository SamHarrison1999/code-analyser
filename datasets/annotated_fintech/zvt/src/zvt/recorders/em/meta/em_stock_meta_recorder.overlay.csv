annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
"üß† ML Signal: Inheritance from a base class, indicating a pattern of extending functionality","[8582, 100, 254, 10373, 26484, 25, 47025, 42942, 422, 257, 2779, 1398, 11, 12739, 257, 3912, 286, 16610, 11244]",0.5,12,ml_signal,9,"Inheritance from a base class, indicating a pattern of extending functionality",,0,from zvt.recorders.em import em_api,"[6738, 1976, 36540, 13, 8344, 6361, 13, 368, 1330, 795, 62, 15042]"
üß† ML Signal: Class attribute indicating a constant or configuration setting,"[8582, 100, 254, 10373, 26484, 25, 5016, 11688, 12739, 257, 6937, 393, 8398, 4634]",0.5,12,ml_signal,11,Class attribute indicating a constant or configuration setting,,12,,[]
üß† ML Signal: Class attribute indicating a schema or data structure being used,"[8582, 100, 254, 10373, 26484, 25, 5016, 11688, 12739, 257, 32815, 393, 1366, 4645, 852, 973]",0.5,21,ml_signal,13,Class attribute indicating a schema or data structure being used,,12,class EMStockRecorder(Recorder):,"[4871, 17228, 26207, 6690, 2875, 7, 6690, 2875, 2599]"
üß† ML Signal: Iterating over a list of exchanges indicates a pattern of processing multiple data sources.,"[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 257, 1351, 286, 14525, 9217, 257, 3912, 286, 7587, 3294, 1366, 4237, 13]",1.0,21,ml_signal,12,Iterating over a list of exchanges indicates a pattern of processing multiple data sources.,,21,,[]
"üß† ML Signal: API call to fetch tradable list, indicating data retrieval pattern.","[8582, 100, 254, 10373, 26484, 25, 7824, 869, 284, 21207, 2083, 540, 1351, 11, 12739, 1366, 45069, 3912, 13]",1.0,29,ml_signal,14,"API call to fetch tradable list, indicating data retrieval pattern.",,21,"    provider = ""em""","[220, 220, 220, 10131, 796, 366, 368, 1]"
‚úÖ Best Practice: Check if DataFrame is not null before processing.,"[26486, 227, 6705, 19939, 25, 6822, 611, 6060, 19778, 318, 407, 9242, 878, 7587, 13]",1.0,29,best_practice,16,Check if DataFrame is not null before processing.,,29,,[]
üß† ML Signal: Iterating over DataFrame rows to process each item.,"[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 6060, 19778, 15274, 284, 1429, 1123, 2378, 13]",1.0,54,ml_signal,18,Iterating over DataFrame rows to process each item.,,29,"        for exchange in [Exchange.sh, Exchange.sz, Exchange.bj]:","[220, 220, 220, 220, 220, 220, 220, 329, 5163, 287, 685, 3109, 3803, 13, 1477, 11, 12516, 13, 82, 89, 11, 12516, 13, 50007, 5974]"
‚úÖ Best Practice: Destructuring assignment for clarity.,"[26486, 227, 6705, 19939, 25, 8145, 1356, 870, 16237, 329, 16287, 13]",1.0,87,best_practice,20,Destructuring assignment for clarity.,,54,"            # df_delist = df[df[""name""].str.contains(""ÈÄÄ"")]","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 47764, 62, 12381, 396, 796, 47764, 58, 7568, 14692, 3672, 1, 4083, 2536, 13, 3642, 1299, 7203, 34460, 222, 4943, 60]"
‚ö†Ô∏è SAST Risk (High): SQL injection risk due to string formatting in SQL query.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 11922, 2599, 16363, 16954, 2526, 2233, 284, 4731, 33313, 287, 16363, 12405, 13]",1.0,112,sast_risk,23,SQL injection risk due to string formatting in SQL query.,High,87,                    id = item[0],"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4686, 796, 2378, 58, 15, 60]"
üß† ML Signal: Executing SQL command indicates database interaction pattern.,"[8582, 100, 254, 10373, 26484, 25, 8393, 15129, 16363, 3141, 9217, 6831, 10375, 3912, 13]",1.0,152,ml_signal,25,Executing SQL command indicates database interaction pattern.,,112,"                    sql = text(f'update stock set name = ""{name}"" where id = ""{id}""')","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 44161, 796, 2420, 7, 69, 6, 19119, 4283, 900, 1438, 796, 45144, 3672, 36786, 810, 4686, 796, 45144, 312, 36786, 11537]"
üß† ML Signal: Committing transaction to database.,"[8582, 100, 254, 10373, 26484, 25, 1520, 2535, 8611, 284, 6831, 13]",1.0,179,ml_signal,26,Committing transaction to database.,,152,                    self.session.execute(sql),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 29891, 13, 41049, 7, 25410, 8]"
"üß† ML Signal: Logging information, indicating a pattern of monitoring or debugging.","[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 1321, 11, 12739, 257, 3912, 286, 9904, 393, 28769, 13]",1.0,206,ml_signal,26,"Logging information, indicating a pattern of monitoring or debugging.",,179,                    self.session.execute(sql),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 29891, 13, 41049, 7, 25410, 8]"
"üß† ML Signal: Saving DataFrame to database, indicating data persistence pattern.","[8582, 100, 254, 10373, 26484, 25, 34689, 6060, 19778, 284, 6831, 11, 12739, 1366, 30802, 3912, 13]",1.0,233,ml_signal,26,"Saving DataFrame to database, indicating data persistence pattern.",,206,                    self.session.execute(sql),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 29891, 13, 41049, 7, 25410, 8]"
‚úÖ Best Practice: Use of main guard to ensure code only runs when script is executed directly.,"[26486, 227, 6705, 19939, 25, 5765, 286, 1388, 4860, 284, 4155, 2438, 691, 4539, 618, 4226, 318, 10945, 3264, 13]",1.0,260,best_practice,26,Use of main guard to ensure code only runs when script is executed directly.,,233,                    self.session.execute(sql),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 29891, 13, 41049, 7, 25410, 8]"
"üß† ML Signal: Instantiating and running a recorder object, indicating a pattern of task execution.","[8582, 100, 254, 10373, 26484, 25, 2262, 17096, 803, 290, 2491, 257, 38156, 2134, 11, 12739, 257, 3912, 286, 4876, 9706, 13]",1.0,287,ml_signal,26,"Instantiating and running a recorder object, indicating a pattern of task execution.",,260,                    self.session.execute(sql),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 29891, 13, 41049, 7, 25410, 8]"
‚úÖ Best Practice: Use of __all__ to define public API of the module.,"[26486, 227, 6705, 19939, 25, 5765, 286, 11593, 439, 834, 284, 8160, 1171, 7824, 286, 262, 8265, 13]",0.5,314,best_practice,26,Use of __all__ to define public API of the module.,,287,                    self.session.execute(sql),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 29891, 13, 41049, 7, 25410, 8]"
