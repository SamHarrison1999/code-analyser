[
  {
    "line": 2,
    "text": "",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 0,
    "end_token": 0,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 4,
    "text": "from zvt.contract.recorder import Recorder",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      28484,
      13,
      8344,
      2875,
      1330,
      3311,
      2875
    ],
    "start_token": 0,
    "end_token": 11,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 6,
    "text": "from zvt.recorders.em import em_api",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      8344,
      6361,
      13,
      368,
      1330,
      795,
      62,
      15042
    ],
    "start_token": 11,
    "end_token": 23,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 5,
    "text": "from zvt.domain.meta.currency_meta import Currency",
    "annotation": "\u2705 Best Practice: Class definition should include a docstring to describe its purpose and usage",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      27830,
      13,
      28961,
      13,
      34415,
      62,
      28961,
      1330,
      20113
    ],
    "start_token": 23,
    "end_token": 36,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      6770,
      815,
      2291,
      257,
      2205,
      8841,
      284,
      6901,
      663,
      4007,
      290,
      8748
    ],
    "label": "best_practice",
    "reason": "Class definition should include a docstring to describe its purpose and usage"
  },
  {
    "line": 7,
    "text": "",
    "annotation": "\u2705 Best Practice: Class attributes should be documented to explain their purpose",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 36,
    "end_token": 36,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      12608,
      815,
      307,
      12395,
      284,
      4727,
      511,
      4007
    ],
    "label": "best_practice",
    "reason": "Class attributes should be documented to explain their purpose"
  },
  {
    "line": 9,
    "text": "class EMCurrencyRecorder(Recorder):",
    "annotation": "\u2705 Best Practice: Class attributes should be documented to explain their purpose",
    "confidence": 1.0,
    "tokens": [
      4871,
      412,
      9655,
      13382,
      6690,
      2875,
      7,
      6690,
      2875,
      2599
    ],
    "start_token": 36,
    "end_token": 46,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      12608,
      815,
      307,
      12395,
      284,
      4727,
      511,
      4007
    ],
    "label": "best_practice",
    "reason": "Class attributes should be documented to explain their purpose"
  },
  {
    "line": 9,
    "text": "class EMCurrencyRecorder(Recorder):",
    "annotation": "\ud83e\udde0 ML Signal: Usage of external API to fetch data",
    "confidence": 1.0,
    "tokens": [
      4871,
      412,
      9655,
      13382,
      6690,
      2875,
      7,
      6690,
      2875,
      2599
    ],
    "start_token": 46,
    "end_token": 56,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      7097,
      7824,
      284,
      21207,
      1366
    ],
    "label": "ml_signal",
    "reason": "Usage of external API to fetch data"
  },
  {
    "line": 11,
    "text": "    data_schema = Currency",
    "annotation": "\ud83e\udde0 ML Signal: Logging of data for monitoring or debugging",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1366,
      62,
      15952,
      2611,
      796,
      20113
    ],
    "start_token": 56,
    "end_token": 65,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      286,
      1366,
      329,
      9904,
      393,
      28769
    ],
    "label": "ml_signal",
    "reason": "Logging of data for monitoring or debugging"
  },
  {
    "line": 13,
    "text": "    def run(self):",
    "annotation": "\ud83e\udde0 ML Signal: Data persistence pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      1057,
      7,
      944,
      2599
    ],
    "start_token": 65,
    "end_token": 73,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6060,
      30802,
      3912
    ],
    "label": "ml_signal",
    "reason": "Data persistence pattern"
  },
  {
    "line": 15,
    "text": "        self.logger.info(df)",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation and execution pattern of a class",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      6404,
      1362,
      13,
      10951,
      7,
      7568,
      8
    ],
    "start_token": 73,
    "end_token": 89,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      290,
      9706,
      3912,
      286,
      257,
      1398
    ],
    "label": "ml_signal",
    "reason": "Instantiation and execution pattern of a class"
  },
  {
    "line": 15,
    "text": "        self.logger.info(df)",
    "annotation": "\ud83e\udde0 ML Signal: Method execution pattern",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      6404,
      1362,
      13,
      10951,
      7,
      7568,
      8
    ],
    "start_token": 89,
    "end_token": 105,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      9706,
      3912
    ],
    "label": "ml_signal",
    "reason": "Method execution pattern"
  },
  {
    "line": 15,
    "text": "        self.logger.info(df)",
    "annotation": "\u2705 Best Practice: Use of __all__ to define public interface of the module",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      6404,
      1362,
      13,
      10951,
      7,
      7568,
      8
    ],
    "start_token": 105,
    "end_token": 121,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7071,
      286,
      262,
      8265
    ],
    "label": "best_practice",
    "reason": "Use of __all__ to define public interface of the module"
  }
]