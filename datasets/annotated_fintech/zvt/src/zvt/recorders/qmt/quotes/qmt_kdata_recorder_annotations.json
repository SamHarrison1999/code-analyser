[
  {
    "line": 2,
    "text": "import pandas as pd",
    "annotation": "\u2705 Best Practice: Grouping imports by their source or purpose improves readability and maintainability.",
    "confidence": 0.5,
    "tokens": [
      11748,
      19798,
      292,
      355,
      279,
      67
    ],
    "start_token": 0,
    "end_token": 6,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      416,
      511,
      2723,
      393,
      4007,
      19575,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports by their source or purpose improves readability and maintainability."
  },
  {
    "line": 14,
    "text": "from zvt.utils.time_utils import current_date, to_time_str, now_time_str",
    "annotation": "\ud83e\udde0 ML Signal: Inheritance from FixedCycleDataRecorder indicates a design pattern for data recording",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      2435,
      62,
      26791,
      1330,
      1459,
      62,
      4475,
      11,
      284,
      62,
      2435,
      62,
      2536,
      11,
      783,
      62,
      2435,
      62,
      2536
    ],
    "start_token": 6,
    "end_token": 31,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47025,
      42942,
      422,
      10832,
      20418,
      2375,
      6601,
      6690,
      2875,
      9217,
      257,
      1486,
      3912,
      329,
      1366,
      8296
    ],
    "label": "ml_signal",
    "reason": "Inheritance from FixedCycleDataRecorder indicates a design pattern for data recording"
  },
  {
    "line": 16,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of class attributes for default configuration values",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 31,
    "end_token": 31,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      1398,
      12608,
      329,
      4277,
      8398,
      3815
    ],
    "label": "best_practice",
    "reason": "Use of class attributes for default configuration values"
  },
  {
    "line": 17,
    "text": "class BaseQmtKdataRecorder(FixedCycleDataRecorder):",
    "annotation": "\u2705 Best Practice: Type hinting for class attributes improves code readability and maintainability",
    "confidence": 0.5,
    "tokens": [
      4871,
      7308,
      48,
      16762,
      42,
      7890,
      6690,
      2875,
      7,
      13715,
      20418,
      2375,
      6601,
      6690,
      2875,
      2599
    ],
    "start_token": 31,
    "end_token": 47,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      1398,
      12608,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting for class attributes improves code readability and maintainability"
  },
  {
    "line": 17,
    "text": "class BaseQmtKdataRecorder(FixedCycleDataRecorder):",
    "annotation": "\u2705 Best Practice: Consistent naming for provider attributes aids in code clarity",
    "confidence": 0.5,
    "tokens": [
      4871,
      7308,
      48,
      16762,
      42,
      7890,
      6690,
      2875,
      7,
      13715,
      20418,
      2375,
      6601,
      6690,
      2875,
      2599
    ],
    "start_token": 47,
    "end_token": 63,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      3515,
      7609,
      19264,
      329,
      10131,
      12608,
      31378,
      287,
      2438,
      16287
    ],
    "label": "best_practice",
    "reason": "Consistent naming for provider attributes aids in code clarity"
  },
  {
    "line": 39,
    "text": "        level=IntervalLevel.LEVEL_1DAY,",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameter values",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1241,
      28,
      9492,
      2100,
      4971,
      13,
      2538,
      18697,
      62,
      16,
      26442,
      11
    ],
    "start_token": 63,
    "end_token": 82,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      11507,
      3815
    ],
    "label": "ml_signal",
    "reason": "Use of default parameter values"
  },
  {
    "line": 40,
    "text": "        kdata_use_begin_time=False,",
    "annotation": "\u2705 Best Practice: Convert level to IntervalLevel to ensure correct type",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      479,
      7890,
      62,
      1904,
      62,
      27471,
      62,
      2435,
      28,
      25101,
      11
    ],
    "start_token": 82,
    "end_token": 100,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      38240,
      1241,
      284,
      4225,
      2100,
      4971,
      284,
      4155,
      3376,
      2099
    ],
    "label": "best_practice",
    "reason": "Convert level to IntervalLevel to ensure correct type"
  },
  {
    "line": 42,
    "text": "        adjust_type=AdjustType.qfq,",
    "annotation": "\u2705 Best Practice: Convert adjust_type to AdjustType to ensure correct type",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4532,
      62,
      4906,
      28,
      39668,
      6030,
      13,
      80,
      69,
      80,
      11
    ],
    "start_token": 100,
    "end_token": 118,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      38240,
      4532,
      62,
      4906,
      284,
      20292,
      6030,
      284,
      4155,
      3376,
      2099
    ],
    "label": "best_practice",
    "reason": "Convert adjust_type to AdjustType to ensure correct type"
  },
  {
    "line": 43,
    "text": "        return_unfinished=False,",
    "annotation": "\ud83e\udde0 ML Signal: Dynamic attribute assignment based on class schema",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      62,
      403,
      43952,
      28,
      25101,
      11
    ],
    "start_token": 118,
    "end_token": 132,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      26977,
      11688,
      16237,
      1912,
      319,
      1398,
      32815
    ],
    "label": "ml_signal",
    "reason": "Dynamic attribute assignment based on class schema"
  },
  {
    "line": 43,
    "text": "        return_unfinished=False,",
    "annotation": "\ud83e\udde0 ML Signal: Use of a function to get schema based on parameters",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      62,
      403,
      43952,
      28,
      25101,
      11
    ],
    "start_token": 132,
    "end_token": 146,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      2163,
      284,
      651,
      32815,
      1912,
      319,
      10007
    ],
    "label": "ml_signal",
    "reason": "Use of a function to get schema based on parameters"
  },
  {
    "line": 43,
    "text": "        return_unfinished=False,",
    "annotation": "\u2705 Best Practice: Call to superclass constructor with parameters",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      62,
      403,
      43952,
      28,
      25101,
      11
    ],
    "start_token": 146,
    "end_token": 160,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4889,
      284,
      2208,
      4871,
      23772,
      351,
      10007
    ],
    "label": "best_practice",
    "reason": "Call to superclass constructor with parameters"
  },
  {
    "line": 67,
    "text": "            kdata_use_begin_time,",
    "annotation": "\u2705 Best Practice: Use of self to access instance variables and methods",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      479,
      7890,
      62,
      1904,
      62,
      27471,
      62,
      2435,
      11
    ],
    "start_token": 160,
    "end_token": 180,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2116,
      284,
      1895,
      4554,
      9633,
      290,
      5050
    ],
    "label": "best_practice",
    "reason": "Use of self to access instance variables and methods"
  },
  {
    "line": 71,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential SQL Injection if provider or data_schema are user-controlled",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 180,
    "end_token": 180,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      16363,
      554,
      29192,
      611,
      10131,
      393,
      1366,
      62,
      15952,
      2611,
      389,
      2836,
      12,
      14401
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential SQL Injection if provider or data_schema are user-controlled"
  },
  {
    "line": 75,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of current timestamp for querying data",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 180,
    "end_token": 180,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1459,
      41033,
      329,
      42517,
      1112,
      1366
    ],
    "label": "ml_signal",
    "reason": "Use of current timestamp for querying data"
  },
  {
    "line": 78,
    "text": "            self.entity_session = self.session",
    "annotation": "\u2705 Best Practice: Check for null data before processing",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      26858,
      62,
      29891,
      796,
      2116,
      13,
      29891
    ],
    "start_token": 180,
    "end_token": 200,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      329,
      9242,
      1366,
      878,
      7587
    ],
    "label": "best_practice",
    "reason": "Check for null data before processing"
  },
  {
    "line": 79,
    "text": "        else:",
    "annotation": "\ud83e\udde0 ML Signal: Conversion of DataFrame column to list",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 200,
    "end_token": 209,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      44101,
      286,
      6060,
      19778,
      5721,
      284,
      1351
    ],
    "label": "ml_signal",
    "reason": "Conversion of DataFrame column to list"
  },
  {
    "line": 82,
    "text": "        if self.day_data:",
    "annotation": "\u2705 Best Practice: Use of logging for information tracking",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      2116,
      13,
      820,
      62,
      7890,
      25
    ],
    "start_token": 209,
    "end_token": 223,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      18931,
      329,
      1321,
      9646
    ],
    "label": "best_practice",
    "reason": "Use of logging for information tracking"
  },
  {
    "line": 82,
    "text": "        if self.day_data:",
    "annotation": "\u2705 Best Practice: Use of list append method",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      2116,
      13,
      820,
      62,
      7890,
      25
    ],
    "start_token": 223,
    "end_token": 237,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      1351,
      24443,
      2446
    ],
    "label": "best_practice",
    "reason": "Use of list append method"
  },
  {
    "line": 88,
    "text": "                self.logger.info(f\"ignore entity_ids:{entity_ids}\")",
    "annotation": "\u2705 Best Practice: Initialize list with a single element",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      6404,
      1362,
      13,
      10951,
      7,
      69,
      1,
      46430,
      9312,
      62,
      2340,
      29164,
      26858,
      62,
      2340,
      92,
      4943
    ],
    "start_token": 237,
    "end_token": 271,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      20768,
      1096,
      1351,
      351,
      257,
      2060,
      5002
    ],
    "label": "best_practice",
    "reason": "Initialize list with a single element"
  },
  {
    "line": 90,
    "text": "                    self.entity_filters.append(self.entity_schema.entity_id.notin_(entity_ids))",
    "annotation": "\ud83e\udde0 ML Signal: Retrieval of entities with specific filters and parameters",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      26858,
      62,
      10379,
      1010,
      13,
      33295,
      7,
      944,
      13,
      26858,
      62,
      15952,
      2611,
      13,
      26858,
      62,
      312,
      13,
      1662,
      259,
      41052,
      26858,
      62,
      2340,
      4008
    ],
    "start_token": 271,
    "end_token": 317,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      4990,
      380,
      18206,
      286,
      12066,
      351,
      2176,
      16628,
      290,
      10007
    ],
    "label": "ml_signal",
    "reason": "Retrieval of entities with specific filters and parameters"
  },
  {
    "line": 93,
    "text": "",
    "annotation": "\u2705 Best Practice: Check if 'start' is not None before using it",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 317,
    "end_token": 317,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      611,
      705,
      9688,
      6,
      318,
      407,
      6045,
      878,
      1262,
      340
    ],
    "label": "best_practice",
    "reason": "Check if 'start' is not None before using it"
  },
  {
    "line": 96,
    "text": "            session=self.entity_session,",
    "annotation": "\u2705 Best Practice: Check if 'start' is not None before using it",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6246,
      28,
      944,
      13,
      26858,
      62,
      29891,
      11
    ],
    "start_token": 317,
    "end_token": 336,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      611,
      705,
      9688,
      6,
      318,
      407,
      6045,
      878,
      1262,
      340
    ],
    "label": "best_practice",
    "reason": "Check if 'start' is not None before using it"
  },
  {
    "line": 96,
    "text": "            session=self.entity_session,",
    "annotation": "\ud83e\udde0 ML Signal: Usage of external API 'qmt_quote.get_kdata'",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6246,
      28,
      944,
      13,
      26858,
      62,
      29891,
      11
    ],
    "start_token": 336,
    "end_token": 355,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      7097,
      7824,
      705,
      80,
      16762,
      62,
      22708,
      13,
      1136,
      62,
      74,
      7890,
      6
    ],
    "label": "ml_signal",
    "reason": "Usage of external API 'qmt_quote.get_kdata'"
  },
  {
    "line": 105,
    "text": "",
    "annotation": "\u2705 Best Practice: Check if DataFrame is not null before proceeding",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 355,
    "end_token": 355,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      611,
      6060,
      19778,
      318,
      407,
      9242,
      878,
      18788
    ],
    "label": "best_practice",
    "reason": "Check if DataFrame is not null before proceeding"
  },
  {
    "line": 105,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of external API 'get_kdata'",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 355,
    "end_token": 355,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      7097,
      7824,
      705,
      1136,
      62,
      74,
      7890,
      6
    ],
    "label": "ml_signal",
    "reason": "Usage of external API 'get_kdata'"
  },
  {
    "line": 119,
    "text": "            )",
    "annotation": "\u2705 Best Practice: Check if DataFrame is not null before proceeding",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 355,
    "end_token": 367,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      611,
      6060,
      19778,
      318,
      407,
      9242,
      878,
      18788
    ],
    "label": "best_practice",
    "reason": "Check if DataFrame is not null before proceeding"
  },
  {
    "line": 123,
    "text": "                    provider=self.provider,",
    "annotation": "\u2705 Best Practice: Use of 'round' for floating-point comparison",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      10131,
      28,
      944,
      13,
      15234,
      1304,
      11
    ],
    "start_token": 367,
    "end_token": 393,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      705,
      744,
      6,
      329,
      12462,
      12,
      4122,
      7208
    ],
    "label": "best_practice",
    "reason": "Use of 'round' for floating-point comparison"
  },
  {
    "line": 124,
    "text": "                    start_timestamp=start,",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential SQL Injection risk if 'entity.id' is not sanitized",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      923,
      62,
      16514,
      27823,
      28,
      9688,
      11
    ],
    "start_token": 393,
    "end_token": 419,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      16363,
      554,
      29192,
      2526,
      611,
      705,
      26858,
      13,
      312,
      6,
      318,
      407,
      5336,
      36951
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential SQL Injection risk if 'entity.id' is not sanitized"
  },
  {
    "line": 124,
    "text": "                    start_timestamp=start,",
    "annotation": "\u2705 Best Practice: Default value assignment for 'start'",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      923,
      62,
      16514,
      27823,
      28,
      9688,
      11
    ],
    "start_token": 419,
    "end_token": 445,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      15161,
      1988,
      16237,
      329,
      705,
      9688,
      6
    ],
    "label": "best_practice",
    "reason": "Default value assignment for 'start'"
  },
  {
    "line": 132,
    "text": "                    new = check_df[\"close\"][0]",
    "annotation": "\u2705 Best Practice: Default value assignment for 'end'",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      649,
      796,
      2198,
      62,
      7568,
      14692,
      19836,
      1,
      7131,
      15,
      60
    ],
    "start_token": 445,
    "end_token": 475,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      15161,
      1988,
      16237,
      329,
      705,
      437,
      6
    ],
    "label": "best_practice",
    "reason": "Default value assignment for 'end'"
  },
  {
    "line": 134,
    "text": "                    if round(old, 2) != round(new, 2):",
    "annotation": "\ud83e\udde0 ML Signal: Usage of external API 'qmt_quote.get_kdata'",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      2835,
      7,
      727,
      11,
      362,
      8,
      14512,
      2835,
      7,
      3605,
      11,
      362,
      2599
    ],
    "start_token": 475,
    "end_token": 508,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      7097,
      7824,
      705,
      80,
      16762,
      62,
      22708,
      13,
      1136,
      62,
      74,
      7890,
      6
    ],
    "label": "ml_signal",
    "reason": "Usage of external API 'qmt_quote.get_kdata'"
  },
  {
    "line": 142,
    "text": "            end = current_date()",
    "annotation": "\u2705 Best Practice: Check if DataFrame is not null before proceeding",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      886,
      796,
      1459,
      62,
      4475,
      3419
    ],
    "start_token": 508,
    "end_token": 525,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      611,
      6060,
      19778,
      318,
      407,
      9242,
      878,
      18788
    ],
    "label": "best_practice",
    "reason": "Check if DataFrame is not null before proceeding"
  },
  {
    "line": 146,
    "text": "            start_timestamp=start,",
    "annotation": "\ud83e\udde0 ML Signal: Conversion of index to datetime",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      923,
      62,
      16514,
      27823,
      28,
      9688,
      11
    ],
    "start_token": 525,
    "end_token": 543,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      44101,
      286,
      6376,
      284,
      4818,
      8079
    ],
    "label": "ml_signal",
    "reason": "Conversion of index to datetime"
  },
  {
    "line": 148,
    "text": "            adjust_type=self.adjust_type,",
    "annotation": "\ud83e\udde0 ML Signal: Creation of unique ID using lambda",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4532,
      62,
      4906,
      28,
      944,
      13,
      23032,
      62,
      4906,
      11
    ],
    "start_token": 543,
    "end_token": 564,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      21582,
      286,
      3748,
      4522,
      1262,
      37456
    ],
    "label": "ml_signal",
    "reason": "Creation of unique ID using lambda"
  },
  {
    "line": 150,
    "text": "            download_history=False,",
    "annotation": "\u2705 Best Practice: Use of 'rename' for clarity",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4321,
      62,
      23569,
      28,
      25101,
      11
    ],
    "start_token": 564,
    "end_token": 581,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      705,
      918,
      480,
      6,
      329,
      16287
    ],
    "label": "best_practice",
    "reason": "Use of 'rename' for clarity"
  },
  {
    "line": 150,
    "text": "            download_history=False,",
    "annotation": "\u2705 Best Practice: Calculation of percentage change",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4321,
      62,
      23569,
      28,
      25101,
      11
    ],
    "start_token": 581,
    "end_token": 598,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2199,
      14902,
      286,
      5873,
      1487
    ],
    "label": "best_practice",
    "reason": "Calculation of percentage change"
  },
  {
    "line": 150,
    "text": "            download_history=False,",
    "annotation": "\ud83e\udde0 ML Signal: Usage of external API 'df_to_db'",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4321,
      62,
      23569,
      28,
      25101,
      11
    ],
    "start_token": 598,
    "end_token": 615,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      7097,
      7824,
      705,
      7568,
      62,
      1462,
      62,
      9945,
      6
    ],
    "label": "ml_signal",
    "reason": "Usage of external API 'df_to_db'"
  },
  {
    "line": 150,
    "text": "            download_history=False,",
    "annotation": "\ud83e\udde0 ML Signal: Logging of information",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4321,
      62,
      23569,
      28,
      25101,
      11
    ],
    "start_token": 615,
    "end_token": 632,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      286,
      1321
    ],
    "label": "ml_signal",
    "reason": "Logging of information"
  },
  {
    "line": 148,
    "text": "            adjust_type=self.adjust_type,",
    "annotation": "\ud83e\udde0 ML Signal: Class definition with inheritance, useful for understanding class hierarchies and relationships",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4532,
      62,
      4906,
      28,
      944,
      13,
      23032,
      62,
      4906,
      11
    ],
    "start_token": 632,
    "end_token": 653,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      6770,
      351,
      24155,
      11,
      4465,
      329,
      4547,
      1398,
      28398,
      444,
      290,
      6958
    ],
    "label": "ml_signal",
    "reason": "Class definition with inheritance, useful for understanding class hierarchies and relationships"
  },
  {
    "line": 150,
    "text": "            download_history=False,",
    "annotation": "\ud83e\udde0 ML Signal: Common pattern for script entry point",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4321,
      62,
      23569,
      28,
      25101,
      11
    ],
    "start_token": 653,
    "end_token": 670,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8070,
      3912,
      329,
      4226,
      5726,
      966
    ],
    "label": "ml_signal",
    "reason": "Common pattern for script entry point"
  },
  {
    "line": 150,
    "text": "            download_history=False,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Direct execution of code, ensure safe handling of inputs and environment",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4321,
      62,
      23569,
      28,
      25101,
      11
    ],
    "start_token": 670,
    "end_token": 687,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      4128,
      9706,
      286,
      2438,
      11,
      4155,
      3338,
      9041,
      286,
      17311,
      290,
      2858
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Direct execution of code, ensure safe handling of inputs and environment"
  },
  {
    "line": 150,
    "text": "            download_history=False,",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation and method call pattern, useful for understanding object usage",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4321,
      62,
      23569,
      28,
      25101,
      11
    ],
    "start_token": 687,
    "end_token": 704,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      290,
      2446,
      869,
      3912,
      11,
      4465,
      329,
      4547,
      2134,
      8748
    ],
    "label": "ml_signal",
    "reason": "Instantiation and method call pattern, useful for understanding object usage"
  },
  {
    "line": 150,
    "text": "            download_history=False,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoded entity_id, consider external configuration for flexibility",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4321,
      62,
      23569,
      28,
      25101,
      11
    ],
    "start_token": 704,
    "end_token": 721,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      40976,
      9312,
      62,
      312,
      11,
      2074,
      7097,
      8398,
      329,
      13688
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoded entity_id, consider external configuration for flexibility"
  },
  {
    "line": 150,
    "text": "            download_history=False,",
    "annotation": "\u2705 Best Practice: Use of named arguments improves readability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4321,
      62,
      23569,
      28,
      25101,
      11
    ],
    "start_token": 721,
    "end_token": 738,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      3706,
      7159,
      19575,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of named arguments improves readability"
  },
  {
    "line": 150,
    "text": "            download_history=False,",
    "annotation": "\u2705 Best Practice: Use of __all__ to define public API of the module",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4321,
      62,
      23569,
      28,
      25101,
      11
    ],
    "start_token": 738,
    "end_token": 755,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265
    ],
    "label": "best_practice",
    "reason": "Use of __all__ to define public API of the module"
  }
]