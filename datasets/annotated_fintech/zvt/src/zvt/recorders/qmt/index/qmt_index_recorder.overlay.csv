annotation,annotation_tokens,confidence,end_token,label,line,reason,start_token,text,tokens
"âœ… Best Practice: Grouping imports by their source (standard library, third-party, local) improves readability.","[26486, 227, 6705, 19939, 25, 4912, 278, 17944, 416, 511, 2723, 357, 20307, 5888, 11, 2368, 12, 10608, 11, 1957, 8, 19575, 1100, 1799, 13]",0.5,9,best_practice,7,"Grouping imports by their source (standard library, third-party, local) improves readability.",0,from zvt.contract import IntervalLevel,"[6738, 1976, 36540, 13, 28484, 1330, 4225, 2100, 4971]"
"âœ… Best Practice: Class definition should follow PEP 8 naming conventions, using CamelCase.","[26486, 227, 6705, 19939, 25, 5016, 6770, 815, 1061, 350, 8905, 807, 19264, 21396, 11, 1262, 43281, 20448, 13]",0.5,27,best_practice,12,"Class definition should follow PEP 8 naming conventions, using CamelCase.",9,from zvt.utils.pd_utils import pd_is_not_null,"[6738, 1976, 36540, 13, 26791, 13, 30094, 62, 26791, 1330, 279, 67, 62, 271, 62, 1662, 62, 8423]"
âœ… Best Practice: Class attributes should be documented for clarity and maintainability.,"[26486, 227, 6705, 19939, 25, 5016, 12608, 815, 307, 12395, 329, 16287, 290, 5529, 1799, 13]",0.5,27,best_practice,14,Class attributes should be documented for clarity and maintainability.,27,,[]
âœ… Best Practice: Class attributes should be documented for clarity and maintainability.,"[26486, 227, 6705, 19939, 25, 5016, 12608, 815, 307, 12395, 329, 16287, 290, 5529, 1799, 13]",0.5,41,best_practice,16,Class attributes should be documented for clarity and maintainability.,27,class QmtIndexRecorder(FixedCycleDataRecorder):,"[4871, 1195, 16762, 15732, 6690, 2875, 7, 13715, 20418, 2375, 6601, 6690, 2875, 2599]"
âœ… Best Practice: Class attributes should be documented for clarity and maintainability.,"[26486, 227, 6705, 19939, 25, 5016, 12608, 815, 307, 12395, 329, 16287, 290, 5529, 1799, 13]",0.5,54,best_practice,18,Class attributes should be documented for clarity and maintainability.,41,    # class level kdata schema should always use common,"[220, 220, 220, 1303, 1398, 1241, 479, 7890, 32815, 815, 1464, 779, 2219]"
âœ… Best Practice: Class attributes should be documented for clarity and maintainability.,"[26486, 227, 6705, 19939, 25, 5016, 12608, 815, 307, 12395, 329, 16287, 290, 5529, 1799, 13]",0.5,67,best_practice,18,Class attributes should be documented for clarity and maintainability.,54,    # class level kdata schema should always use common,"[220, 220, 220, 1303, 1398, 1241, 479, 7890, 32815, 815, 1464, 779, 2219]"
âœ… Best Practice: Class attributes should be documented for clarity and maintainability.,"[26486, 227, 6705, 19939, 25, 5016, 12608, 815, 307, 12395, 329, 16287, 290, 5529, 1799, 13]",0.5,80,best_practice,18,Class attributes should be documented for clarity and maintainability.,67,    # class level kdata schema should always use common,"[220, 220, 220, 1303, 1398, 1241, 479, 7890, 32815, 815, 1464, 779, 2219]"
âœ… Best Practice: Convert level to IntervalLevel to ensure type consistency,"[26486, 227, 6705, 19939, 25, 38240, 1241, 284, 4225, 2100, 4971, 284, 4155, 2099, 15794]",1.0,99,best_practice,40,Convert level to IntervalLevel to ensure type consistency,80,"        level=IntervalLevel.LEVEL_1DAY,","[220, 220, 220, 220, 220, 220, 220, 1241, 28, 9492, 2100, 4971, 13, 2538, 18697, 62, 16, 26442, 11]"
ðŸ§  ML Signal: Hardcoded entity type can indicate specific domain usage,"[8582, 100, 254, 10373, 26484, 25, 6912, 40976, 9312, 2099, 460, 7603, 2176, 7386, 8748]",0.5,120,ml_signal,42,Hardcoded entity type can indicate specific domain usage,99,"        one_day_trading_minutes=24 * 60,","[220, 220, 220, 220, 220, 220, 220, 530, 62, 820, 62, 2213, 4980, 62, 1084, 1769, 28, 1731, 1635, 3126, 11]"
ðŸ§  ML Signal: Tracking download history data preference,"[8582, 100, 254, 10373, 26484, 25, 37169, 4321, 2106, 1366, 12741]",0.5,135,ml_signal,44,Tracking download history data preference,120,"        download_history_data=False,","[220, 220, 220, 220, 220, 220, 220, 4321, 62, 23569, 62, 7890, 28, 25101, 11]"
âœ… Best Practice: Use of a function to get schema improves maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 257, 2163, 284, 651, 32815, 19575, 5529, 1799]",1.0,150,best_practice,44,Use of a function to get schema improves maintainability,135,"        download_history_data=False,","[220, 220, 220, 220, 220, 220, 220, 4321, 62, 23569, 62, 7890, 28, 25101, 11]"
âœ… Best Practice: Use of super() to call parent class constructor,"[26486, 227, 6705, 19939, 25, 5765, 286, 2208, 3419, 284, 869, 2560, 1398, 23772]",1.0,165,best_practice,44,Use of super() to call parent class constructor,150,"        download_history_data=False,","[220, 220, 220, 220, 220, 220, 220, 4321, 62, 23569, 62, 7890, 28, 25101, 11]"
âœ… Best Practice: Explicitly setting one_day_trading_minutes for clarity,"[26486, 227, 6705, 19939, 25, 11884, 306, 4634, 530, 62, 820, 62, 2213, 4980, 62, 1084, 1769, 329, 16287]",0.5,186,best_practice,69,Explicitly setting one_day_trading_minutes for clarity,165,"            one_day_trading_minutes,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 530, 62, 820, 62, 2213, 4980, 62, 1084, 1769, 11]"
âœ… Best Practice: Check if 'start' is not None before using it,"[26486, 227, 6705, 19939, 25, 6822, 611, 705, 9688, 6, 318, 407, 6045, 878, 1262, 340]",1.0,202,best_practice,66,Check if 'start' is not None before using it,186,"            end_timestamp,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 886, 62, 16514, 27823, 11]"
âœ… Best Practice: Provide a default value for 'start' if it is None,"[26486, 227, 6705, 19939, 25, 44290, 257, 4277, 1988, 329, 705, 9688, 6, 611, 340, 318, 6045]",1.0,223,best_practice,69,Provide a default value for 'start' if it is None,202,"            one_day_trading_minutes,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 530, 62, 820, 62, 2213, 4980, 62, 1084, 1769, 11]"
âœ… Best Practice: Provide a default value for 'end' if it is None,"[26486, 227, 6705, 19939, 25, 44290, 257, 4277, 1988, 329, 705, 437, 6, 611, 340, 318, 6045]",1.0,243,best_practice,72,Provide a default value for 'end' if it is None,223,        self.one_day_trading_minutes = 240,"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 505, 62, 820, 62, 2213, 4980, 62, 1084, 1769, 796, 14956]"
âœ… Best Practice: Adjust 'end' for specific interval levels,"[26486, 227, 6705, 19939, 25, 20292, 705, 437, 6, 329, 2176, 16654, 2974]",1.0,263,best_practice,74,Adjust 'end' for specific interval levels,243,"    def record(self, entity, start, end, size, timestamps):","[220, 220, 220, 825, 1700, 7, 944, 11, 9312, 11, 923, 11, 886, 11, 2546, 11, 4628, 395, 9430, 2599]"
ðŸ§  ML Signal: Usage of external data fetching function,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 7097, 1366, 21207, 278, 2163]",1.0,283,ml_signal,74,Usage of external data fetching function,263,"    def record(self, entity, start, end, size, timestamps):","[220, 220, 220, 825, 1700, 7, 944, 11, 9312, 11, 923, 11, 886, 11, 2546, 11, 4628, 395, 9430, 2599]"
âœ… Best Practice: Use a conditional expression to determine time format,"[26486, 227, 6705, 19939, 25, 5765, 257, 26340, 5408, 284, 5004, 640, 5794]",1.0,302,best_practice,86,Use a conditional expression to determine time format,283,        df = qmt_quote.get_kdata(,"[220, 220, 220, 220, 220, 220, 220, 47764, 796, 10662, 16762, 62, 22708, 13, 1136, 62, 74, 7890, 7]"
âœ… Best Practice: Check if DataFrame is not null before processing,"[26486, 227, 6705, 19939, 25, 6822, 611, 6060, 19778, 318, 407, 9242, 878, 7587]",1.0,320,best_practice,89,Check if DataFrame is not null before processing,302,"            end_timestamp=end,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 886, 62, 16514, 27823, 28, 437, 11]"
âœ… Best Practice: Convert index to datetime for consistency,"[26486, 227, 6705, 19939, 25, 38240, 6376, 284, 4818, 8079, 329, 15794]",1.0,343,best_practice,92,Convert index to datetime for consistency,320,"            download_history=self.download_history_data,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4321, 62, 23569, 28, 944, 13, 15002, 62, 23569, 62, 7890, 11]"
ðŸ§  ML Signal: Creation of unique identifiers for rows,"[8582, 100, 254, 10373, 26484, 25, 21582, 286, 3748, 42814, 329, 15274]",0.5,385,ml_signal,94,Creation of unique identifiers for rows,343,        time_str_fmt = TIME_FORMAT_DAY if self.level == IntervalLevel.LEVEL_1DAY else TIME_FORMAT_MINUTE,"[220, 220, 220, 220, 220, 220, 220, 640, 62, 2536, 62, 69, 16762, 796, 20460, 62, 21389, 1404, 62, 26442, 611, 2116, 13, 5715, 6624, 4225, 2100, 4971, 13, 2538, 18697, 62, 16, 26442, 2073, 20460, 62, 21389, 1404, 62, 23678, 37780]"
âœ… Best Practice: Rename columns for clarity,"[26486, 227, 6705, 19939, 25, 7152, 480, 15180, 329, 16287]",1.0,397,best_practice,100,Rename columns for clarity,385,            ),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1267]"
âœ… Best Practice: Calculate percentage change for analysis,"[26486, 227, 6705, 19939, 25, 27131, 378, 5873, 1487, 329, 3781]",1.0,434,best_practice,106,Calculate percentage change for analysis,397,"            df[""change_pct""] = (df[""close""] - df[""preClose""]) / df[""preClose""]","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 47764, 14692, 3803, 62, 79, 310, 8973, 796, 357, 7568, 14692, 19836, 8973, 532, 47764, 14692, 3866, 26125, 8973, 8, 1220, 47764, 14692, 3866, 26125, 8973]"
ðŸ§  ML Signal: Storing processed data into a database,"[8582, 100, 254, 10373, 26484, 25, 520, 3255, 13686, 1366, 656, 257, 6831]",1.0,471,ml_signal,106,Storing processed data into a database,434,"            df[""change_pct""] = (df[""close""] - df[""preClose""]) / df[""preClose""]","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 47764, 14692, 3803, 62, 79, 310, 8973, 796, 357, 7568, 14692, 19836, 8973, 532, 47764, 14692, 3866, 26125, 8973, 8, 1220, 47764, 14692, 3866, 26125, 8973]"
âœ… Best Practice: Log information when no data is found,"[26486, 227, 6705, 19939, 25, 5972, 1321, 618, 645, 1366, 318, 1043]",1.0,508,best_practice,106,Log information when no data is found,471,"            df[""change_pct""] = (df[""close""] - df[""preClose""]) / df[""preClose""]","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 47764, 14692, 3803, 62, 79, 310, 8973, 796, 357, 7568, 14692, 19836, 8973, 532, 47764, 14692, 3866, 26125, 8973, 8, 1220, 47764, 14692, 3866, 26125, 8973]"
âœ… Best Practice: Check if all required conditions are met before proceeding with the logic.,"[26486, 227, 6705, 19939, 25, 6822, 611, 477, 2672, 3403, 389, 1138, 878, 18788, 351, 262, 9156, 13]",1.0,562,best_practice,99,Check if all required conditions are met before proceeding with the logic.,508,"                lambda row: f""{row['entity_id']}_{to_time_str(row['timestamp'], fmt=time_str_fmt)}"", axis=1","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 37456, 5752, 25, 277, 1, 90, 808, 17816, 26858, 62, 312, 20520, 92, 23330, 1462, 62, 2435, 62, 2536, 7, 808, 17816, 16514, 27823, 6, 4357, 46996, 28, 2435, 62, 2536, 62, 69, 16762, 38165, 1600, 16488, 28, 16]"
ðŸ§  ML Signal: Evaluating size based on timestamps can indicate data completeness.,"[8582, 100, 254, 10373, 26484, 25, 26439, 11927, 2546, 1912, 319, 4628, 395, 9430, 460, 7603, 1366, 1224, 43205, 13]",0.5,574,ml_signal,100,Evaluating size based on timestamps can indicate data completeness.,562,            ),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1267]"
ðŸ§  ML Signal: Querying a database to count records within a timestamp range.,"[8582, 100, 254, 10373, 26484, 25, 2264, 263, 1112, 257, 6831, 284, 954, 4406, 1626, 257, 41033, 2837, 13]",0.5,611,ml_signal,106,Querying a database to count records within a timestamp range.,574,"            df[""change_pct""] = (df[""close""] - df[""preClose""]) / df[""preClose""]","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 47764, 14692, 3803, 62, 79, 310, 8973, 796, 357, 7568, 14692, 19836, 8973, 532, 47764, 14692, 3866, 26125, 8973, 8, 1220, 47764, 14692, 3866, 26125, 8973]"
âœ… Best Practice: Compare expected and recorded sizes to ensure data integrity.,"[26486, 227, 6705, 19939, 25, 27814, 2938, 290, 6264, 10620, 284, 4155, 1366, 11540, 13]",1.0,632,best_practice,118,Compare expected and recorded sizes to ensure data integrity.,611,"                level=self.level,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1241, 28, 944, 13, 5715, 11]"
âœ… Best Practice: Use of super() to call a method from the parent class.,"[26486, 227, 6705, 19939, 25, 5765, 286, 2208, 3419, 284, 869, 257, 2446, 422, 262, 2560, 1398, 13]",0.5,644,best_practice,120,Use of super() to call a method from the parent class.,632,            ),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1267]"
âœ… Best Practice: Check if end_timestamp is not None before comparing.,"[26486, 227, 6705, 19939, 25, 6822, 611, 886, 62, 16514, 27823, 318, 407, 6045, 878, 14176, 13]",0.5,660,best_practice,122,Check if end_timestamp is not None before comparing.,644,            recorded_size = (,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 6264, 62, 7857, 796, 357]"
âœ… Best Practice: Ensure start_timestamp is less than end_timestamp.,"[26486, 227, 6705, 19939, 25, 48987, 923, 62, 16514, 27823, 318, 1342, 621, 886, 62, 16514, 27823, 13]",0.5,676,best_practice,122,Ensure start_timestamp is less than end_timestamp.,660,            recorded_size = (,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 6264, 62, 7857, 796, 357]"
ðŸ§  ML Signal: Re-evaluating size based on updated timestamps.,"[8582, 100, 254, 10373, 26484, 25, 797, 12, 18206, 11927, 2546, 1912, 319, 6153, 4628, 395, 9430, 13]",0.5,694,ml_signal,129,Re-evaluating size based on updated timestamps.,676,                .count(),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 764, 9127, 3419]"
ðŸ§  ML Signal: Initialization of timestamps for a specific date range.,"[8582, 100, 254, 10373, 26484, 25, 20768, 1634, 286, 4628, 395, 9430, 329, 257, 2176, 3128, 2837, 13]",0.5,707,ml_signal,141,Initialization of timestamps for a specific date range.,694,            else:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2073, 25]"
ðŸ§  ML Signal: Instantiation and execution of a recorder with specific parameters.,"[8582, 100, 254, 10373, 26484, 25, 24470, 3920, 290, 9706, 286, 257, 38156, 351, 2176, 10007, 13]",1.0,720,ml_signal,141,Instantiation and execution of a recorder with specific parameters.,707,            else:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2073, 25]"
âœ… Best Practice: Use of __all__ to define public symbols in a module.,"[26486, 227, 6705, 19939, 25, 5765, 286, 11593, 439, 834, 284, 8160, 1171, 14354, 287, 257, 8265, 13]",0.5,733,best_practice,141,Use of __all__ to define public symbols in a module.,720,            else:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2073, 25]"
