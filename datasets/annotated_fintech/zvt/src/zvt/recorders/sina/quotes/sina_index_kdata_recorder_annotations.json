[
  {
    "line": 9,
    "text": "from zvt.contract import IntervalLevel, AdjustType",
    "annotation": "\ud83e\udde0 ML Signal: Class definition with inheritance, useful for understanding class hierarchies and relationships",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      28484,
      1330,
      4225,
      2100,
      4971,
      11,
      20292,
      6030
    ],
    "start_token": 0,
    "end_token": 12,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      6770,
      351,
      24155,
      11,
      4465,
      329,
      4547,
      1398,
      28398,
      444,
      290,
      6958
    ],
    "label": "ml_signal",
    "reason": "Class definition with inheritance, useful for understanding class hierarchies and relationships"
  },
  {
    "line": 11,
    "text": "from zvt.domain import Index, IndexKdataCommon",
    "annotation": "\ud83e\udde0 ML Signal: Class attribute definition, useful for understanding default configurations",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      27830,
      1330,
      12901,
      11,
      12901,
      42,
      7890,
      17227
    ],
    "start_token": 12,
    "end_token": 24,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      11688,
      6770,
      11,
      4465,
      329,
      4547,
      4277,
      25412
    ],
    "label": "ml_signal",
    "reason": "Class attribute definition, useful for understanding default configurations"
  },
  {
    "line": 13,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Class attribute definition, useful for understanding default configurations",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 24,
    "end_token": 24,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      11688,
      6770,
      11,
      4465,
      329,
      4547,
      4277,
      25412
    ],
    "label": "ml_signal",
    "reason": "Class attribute definition, useful for understanding default configurations"
  },
  {
    "line": 15,
    "text": "class ChinaIndexDayKdataRecorder(FixedCycleDataRecorder):",
    "annotation": "\ud83e\udde0 ML Signal: Class attribute definition, useful for understanding default configurations",
    "confidence": 1.0,
    "tokens": [
      4871,
      2807,
      15732,
      12393,
      42,
      7890,
      6690,
      2875,
      7,
      13715,
      20418,
      2375,
      6601,
      6690,
      2875,
      2599
    ],
    "start_token": 24,
    "end_token": 40,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      11688,
      6770,
      11,
      4465,
      329,
      4547,
      4277,
      25412
    ],
    "label": "ml_signal",
    "reason": "Class attribute definition, useful for understanding default configurations"
  },
  {
    "line": 15,
    "text": "class ChinaIndexDayKdataRecorder(FixedCycleDataRecorder):",
    "annotation": "\ud83e\udde0 ML Signal: Class attribute definition, useful for understanding default configurations",
    "confidence": 1.0,
    "tokens": [
      4871,
      2807,
      15732,
      12393,
      42,
      7890,
      6690,
      2875,
      7,
      13715,
      20418,
      2375,
      6601,
      6690,
      2875,
      2599
    ],
    "start_token": 40,
    "end_token": 56,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      11688,
      6770,
      11,
      4465,
      329,
      4547,
      4277,
      25412
    ],
    "label": "ml_signal",
    "reason": "Class attribute definition, useful for understanding default configurations"
  },
  {
    "line": 15,
    "text": "class ChinaIndexDayKdataRecorder(FixedCycleDataRecorder):",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoded URL, potential for misuse if not validated or sanitized",
    "confidence": 1.0,
    "tokens": [
      4871,
      2807,
      15732,
      12393,
      42,
      7890,
      6690,
      2875,
      7,
      13715,
      20418,
      2375,
      6601,
      6690,
      2875,
      2599
    ],
    "start_token": 56,
    "end_token": 72,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      40976,
      10289,
      11,
      2785,
      329,
      29169,
      611,
      407,
      31031,
      393,
      5336,
      36951
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoded URL, potential for misuse if not validated or sanitized"
  },
  {
    "line": 15,
    "text": "class ChinaIndexDayKdataRecorder(FixedCycleDataRecorder):",
    "annotation": "\ud83e\udde0 ML Signal: URL pattern, useful for understanding data source endpoints",
    "confidence": 1.0,
    "tokens": [
      4871,
      2807,
      15732,
      12393,
      42,
      7890,
      6690,
      2875,
      7,
      13715,
      20418,
      2375,
      6601,
      6690,
      2875,
      2599
    ],
    "start_token": 72,
    "end_token": 88,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      10289,
      3912,
      11,
      4465,
      329,
      4547,
      1366,
      2723,
      886,
      13033
    ],
    "label": "ml_signal",
    "reason": "URL pattern, useful for understanding data source endpoints"
  },
  {
    "line": 36,
    "text": "        fix_duplicate_way=\"ignore\",",
    "annotation": "\u2705 Best Practice: Convert level to IntervalLevel to ensure type consistency",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4259,
      62,
      646,
      489,
      5344,
      62,
      1014,
      2625,
      46430,
      1600
    ],
    "start_token": 88,
    "end_token": 105,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      38240,
      1241,
      284,
      4225,
      2100,
      4971,
      284,
      4155,
      2099,
      15794
    ],
    "label": "best_practice",
    "reason": "Convert level to IntervalLevel to ensure type consistency"
  },
  {
    "line": 38,
    "text": "        end_timestamp=None,",
    "annotation": "\u2705 Best Practice: Set default adjust_type for clarity and consistency",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      886,
      62,
      16514,
      27823,
      28,
      14202,
      11
    ],
    "start_token": 105,
    "end_token": 119,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5345,
      4277,
      4532,
      62,
      4906,
      329,
      16287,
      290,
      15794
    ],
    "label": "best_practice",
    "reason": "Set default adjust_type for clarity and consistency"
  },
  {
    "line": 40,
    "text": "        kdata_use_begin_time=False,",
    "annotation": "\u2705 Best Practice: Use of lower() for consistent entity type naming",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      479,
      7890,
      62,
      1904,
      62,
      27471,
      62,
      2435,
      28,
      25101,
      11
    ],
    "start_token": 119,
    "end_token": 137,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2793,
      3419,
      329,
      6414,
      9312,
      2099,
      19264
    ],
    "label": "best_practice",
    "reason": "Use of lower() for consistent entity type naming"
  },
  {
    "line": 40,
    "text": "        kdata_use_begin_time=False,",
    "annotation": "\u2705 Best Practice: Use of a function to get schema promotes modularity",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      479,
      7890,
      62,
      1904,
      62,
      27471,
      62,
      2435,
      28,
      25101,
      11
    ],
    "start_token": 137,
    "end_token": 155,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      257,
      2163,
      284,
      651,
      32815,
      21068,
      26507,
      414
    ],
    "label": "best_practice",
    "reason": "Use of a function to get schema promotes modularity"
  },
  {
    "line": 40,
    "text": "        kdata_use_begin_time=False,",
    "annotation": "\u2705 Best Practice: Use of super() to ensure proper inheritance",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      479,
      7890,
      62,
      1904,
      62,
      27471,
      62,
      2435,
      28,
      25101,
      11
    ],
    "start_token": 155,
    "end_token": 173,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2208,
      3419,
      284,
      4155,
      1774,
      24155
    ],
    "label": "best_practice",
    "reason": "Use of super() to ensure proper inheritance"
  },
  {
    "line": 60,
    "text": "            ignore_failed,",
    "annotation": "\u2705 Best Practice: Consider adding a docstring to describe the purpose and return value of the function",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      8856,
      62,
      47904,
      11
    ],
    "start_token": 173,
    "end_token": 188,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      4375,
      257,
      2205,
      8841,
      284,
      6901,
      262,
      4007,
      290,
      1441,
      1988,
      286,
      262,
      2163
    ],
    "label": "best_practice",
    "reason": "Consider adding a docstring to describe the purpose and return value of the function"
  },
  {
    "line": 62,
    "text": "            fix_duplicate_way,",
    "annotation": "\u2705 Best Practice: Returning a dictionary directly is clear and concise",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4259,
      62,
      646,
      489,
      5344,
      62,
      1014,
      11
    ],
    "start_token": 188,
    "end_token": 207,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      42882,
      257,
      22155,
      3264,
      318,
      1598,
      290,
      35327
    ],
    "label": "best_practice",
    "reason": "Returning a dictionary directly is clear and concise"
  },
  {
    "line": 62,
    "text": "            fix_duplicate_way,",
    "annotation": "\ud83e\udde0 ML Signal: Method signature and parameter usage pattern",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4259,
      62,
      646,
      489,
      5344,
      62,
      1014,
      11
    ],
    "start_token": 207,
    "end_token": 226,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      9877,
      290,
      11507,
      8748,
      3912
    ],
    "label": "ml_signal",
    "reason": "Method signature and parameter usage pattern"
  },
  {
    "line": 64,
    "text": "            end_timestamp,",
    "annotation": "\ud83e\udde0 ML Signal: Usage of external function with specific parameters",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      886,
      62,
      16514,
      27823,
      11
    ],
    "start_token": 226,
    "end_token": 242,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      7097,
      2163,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Usage of external function with specific parameters"
  },
  {
    "line": 65,
    "text": "            level,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential information exposure if entity.id or original_data[\"timestamp\"] contains sensitive data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1241,
      11
    ],
    "start_token": 242,
    "end_token": 255,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      1321,
      7111,
      611,
      9312,
      13,
      312,
      393,
      2656,
      62,
      7890,
      14692,
      16514,
      27823,
      8973,
      4909,
      8564,
      1366
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential information exposure if entity.id or original_data[\"timestamp\"] contains sensitive data"
  },
  {
    "line": 75,
    "text": "        return generate_kdata_id(entity.id, timestamp=original_data[\"timestamp\"], level=self.level)",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potentially unsafe external URL request without timeout",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      7716,
      62,
      74,
      7890,
      62,
      312,
      7,
      26858,
      13,
      312,
      11,
      41033,
      28,
      14986,
      62,
      7890,
      14692,
      16514,
      27823,
      33116,
      1241,
      28,
      944,
      13,
      5715,
      8
    ],
    "start_token": 255,
    "end_token": 289,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      6902,
      3746,
      21596,
      7097,
      10289,
      2581,
      1231,
      26827
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potentially unsafe external URL request without timeout"
  },
  {
    "line": 78,
    "text": "        the_quarters = get_year_quarters(start)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potentially unsafe HTML parsing",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      262,
      62,
      8230,
      796,
      651,
      62,
      1941,
      62,
      8230,
      7,
      9688,
      8
    ],
    "start_token": 289,
    "end_token": 308,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6902,
      3746,
      21596,
      11532,
      32096
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potentially unsafe HTML parsing"
  },
  {
    "line": 83,
    "text": "",
    "annotation": "\u2705 Best Practice: Consider using a backoff strategy instead of fixed sleep",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 308,
    "end_token": 308,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      257,
      736,
      2364,
      4811,
      2427,
      286,
      5969,
      3993
    ],
    "label": "best_practice",
    "reason": "Consider using a backoff strategy instead of fixed sleep"
  },
  {
    "line": 87,
    "text": "",
    "annotation": "\u2705 Best Practice: Consider using a backoff strategy instead of fixed sleep",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 308,
    "end_token": 308,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      257,
      736,
      2364,
      4811,
      2427,
      286,
      5969,
      3993
    ],
    "label": "best_practice",
    "reason": "Consider using a backoff strategy instead of fixed sleep"
  },
  {
    "line": 95,
    "text": "                dfs = pd.read_html(response.text)",
    "annotation": "\ud83e\udde0 ML Signal: Usage of pandas for data manipulation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      288,
      9501,
      796,
      279,
      67,
      13,
      961,
      62,
      6494,
      7,
      26209,
      13,
      5239,
      8
    ],
    "start_token": 308,
    "end_token": 337,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      19798,
      292,
      329,
      1366,
      17512
    ],
    "label": "ml_signal",
    "reason": "Usage of pandas for data manipulation"
  },
  {
    "line": 98,
    "text": "                time.sleep(10.0)",
    "annotation": "\ud83e\udde0 ML Signal: Usage of pandas for data concatenation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      640,
      13,
      42832,
      7,
      940,
      13,
      15,
      8
    ],
    "start_token": 337,
    "end_token": 360,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      19798,
      292,
      329,
      1366,
      1673,
      36686,
      341
    ],
    "label": "ml_signal",
    "reason": "Usage of pandas for data concatenation"
  },
  {
    "line": 101,
    "text": "            if len(dfs) < 5:",
    "annotation": "\u2705 Best Practice: Consider using a backoff strategy instead of fixed sleep",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      18896,
      7,
      7568,
      82,
      8,
      1279,
      642,
      25
    ],
    "start_token": 360,
    "end_token": 380,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      257,
      736,
      2364,
      4811,
      2427,
      286,
      5969,
      3993
    ],
    "label": "best_practice",
    "reason": "Consider using a backoff strategy instead of fixed sleep"
  },
  {
    "line": 101,
    "text": "            if len(dfs) < 5:",
    "annotation": "\ud83e\udde0 ML Signal: Usage of pandas for data sorting",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      18896,
      7,
      7568,
      82,
      8,
      1279,
      642,
      25
    ],
    "start_token": 380,
    "end_token": 400,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      19798,
      292,
      329,
      1366,
      29407
    ],
    "label": "ml_signal",
    "reason": "Usage of pandas for data sorting"
  },
  {
    "line": 101,
    "text": "            if len(dfs) < 5:",
    "annotation": "\ud83e\udde0 ML Signal: Conversion of DataFrame to dictionary",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      18896,
      7,
      7568,
      82,
      8,
      1279,
      642,
      25
    ],
    "start_token": 400,
    "end_token": 420,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      44101,
      286,
      6060,
      19778,
      284,
      22155
    ],
    "label": "ml_signal",
    "reason": "Conversion of DataFrame to dictionary"
  },
  {
    "line": 101,
    "text": "            if len(dfs) < 5:",
    "annotation": "\u2705 Best Practice: Use of __all__ to define public API of the module",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      18896,
      7,
      7568,
      82,
      8,
      1279,
      642,
      25
    ],
    "start_token": 420,
    "end_token": 440,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265
    ],
    "label": "best_practice",
    "reason": "Use of __all__ to define public API of the module"
  },
  {
    "line": 101,
    "text": "            if len(dfs) < 5:",
    "annotation": "\ud83e\udde0 ML Signal: Pattern for running a script directly",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      18896,
      7,
      7568,
      82,
      8,
      1279,
      642,
      25
    ],
    "start_token": 440,
    "end_token": 460,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      329,
      2491,
      257,
      4226,
      3264
    ],
    "label": "ml_signal",
    "reason": "Pattern for running a script directly"
  },
  {
    "line": 101,
    "text": "            if len(dfs) < 5:",
    "annotation": "\u2705 Best Practice: Use of __all__ to define public API of the module",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      18896,
      7,
      7568,
      82,
      8,
      1279,
      642,
      25
    ],
    "start_token": 460,
    "end_token": 480,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265
    ],
    "label": "best_practice",
    "reason": "Use of __all__ to define public API of the module"
  }
]