[
  {
    "line": 3,
    "text": "",
    "annotation": "\u2705 Best Practice: Group imports into standard library, third-party, and local sections for readability",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 0,
    "end_token": 0,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      17944,
      656,
      3210,
      5888,
      11,
      2368,
      12,
      10608,
      11,
      290,
      1957,
      9004,
      329,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Group imports into standard library, third-party, and local sections for readability"
  },
  {
    "line": 7,
    "text": "from zvt.domain import StockMoneyFlow, Stock, StockTradeDay",
    "annotation": "\ud83e\udde0 ML Signal: Class definition with inheritance, useful for understanding class hierarchies and relationships",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      27830,
      1330,
      10500,
      26788,
      37535,
      11,
      10500,
      11,
      10500,
      35965,
      12393
    ],
    "start_token": 0,
    "end_token": 15,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      6770,
      351,
      24155,
      11,
      4465,
      329,
      4547,
      1398,
      28398,
      444,
      290,
      6958
    ],
    "label": "ml_signal",
    "reason": "Class definition with inheritance, useful for understanding class hierarchies and relationships"
  },
  {
    "line": 9,
    "text": "from zvt.utils.utils import to_float",
    "annotation": "\ud83e\udde0 ML Signal: Class attribute definition, useful for understanding default configurations and settings",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      26791,
      1330,
      284,
      62,
      22468
    ],
    "start_token": 15,
    "end_token": 26,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      11688,
      6770,
      11,
      4465,
      329,
      4547,
      4277,
      25412,
      290,
      6460
    ],
    "label": "ml_signal",
    "reason": "Class attribute definition, useful for understanding default configurations and settings"
  },
  {
    "line": 11,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Class attribute definition, useful for understanding default configurations and settings",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 26,
    "end_token": 26,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      11688,
      6770,
      11,
      4465,
      329,
      4547,
      4277,
      25412,
      290,
      6460
    ],
    "label": "ml_signal",
    "reason": "Class attribute definition, useful for understanding default configurations and settings"
  },
  {
    "line": 13,
    "text": "    entity_provider = \"joinquant\"",
    "annotation": "\ud83e\udde0 ML Signal: Class attribute definition, useful for understanding default configurations and settings",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      15234,
      1304,
      796,
      366,
      7639,
      18934,
      415,
      1
    ],
    "start_token": 26,
    "end_token": 39,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      11688,
      6770,
      11,
      4465,
      329,
      4547,
      4277,
      25412,
      290,
      6460
    ],
    "label": "ml_signal",
    "reason": "Class attribute definition, useful for understanding default configurations and settings"
  },
  {
    "line": 15,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Class attribute definition, useful for understanding default configurations and settings",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 39,
    "end_token": 39,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      11688,
      6770,
      11,
      4465,
      329,
      4547,
      4277,
      25412,
      290,
      6460
    ],
    "label": "ml_signal",
    "reason": "Class attribute definition, useful for understanding default configurations and settings"
  },
  {
    "line": 17,
    "text": "    data_schema = StockMoneyFlow",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoded URL, potential for misuse if not validated or sanitized",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1366,
      62,
      15952,
      2611,
      796,
      10500,
      26788,
      37535
    ],
    "start_token": 39,
    "end_token": 50,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      40976,
      10289,
      11,
      2785,
      329,
      29169,
      611,
      407,
      31031,
      393,
      5336,
      36951
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoded URL, potential for misuse if not validated or sanitized"
  },
  {
    "line": 18,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: URL pattern, useful for understanding external data sources and API usage",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 50,
    "end_token": 50,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      10289,
      3912,
      11,
      4465,
      329,
      4547,
      7097,
      1366,
      4237,
      290,
      7824,
      8748
    ],
    "label": "ml_signal",
    "reason": "URL pattern, useful for understanding external data sources and API usage"
  },
  {
    "line": 14,
    "text": "    entity_schema = Stock",
    "annotation": "\u2705 Best Practice: Call to superclass method ensures proper initialization of inherited attributes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      15952,
      2611,
      796,
      10500
    ],
    "start_token": 50,
    "end_token": 59,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4889,
      284,
      2208,
      4871,
      2446,
      19047,
      1774,
      37588,
      286,
      19552,
      12608
    ],
    "label": "best_practice",
    "reason": "Call to superclass method ensures proper initialization of inherited attributes"
  },
  {
    "line": 15,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Filtering entities based on a condition could indicate importance of active entities",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 59,
    "end_token": 59,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7066,
      20212,
      12066,
      1912,
      319,
      257,
      4006,
      714,
      7603,
      6817,
      286,
      4075,
      12066
    ],
    "label": "ml_signal",
    "reason": "Filtering entities based on a condition could indicate importance of active entities"
  },
  {
    "line": 17,
    "text": "    data_schema = StockMoneyFlow",
    "annotation": "\u2705 Best Practice: List comprehension for filtering is concise and efficient",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1366,
      62,
      15952,
      2611,
      796,
      10500,
      26788,
      37535
    ],
    "start_token": 59,
    "end_token": 70,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      7343,
      35915,
      329,
      25431,
      318,
      35327,
      290,
      6942
    ],
    "label": "best_practice",
    "reason": "List comprehension for filtering is concise and efficient"
  },
  {
    "line": 19,
    "text": "    url = \"http://vip.stock.finance.sina.com.cn/quotes_service/api/json_v2.php/MoneyFlow.ssl_qsfx_lscjfb?page=1&num={}&sort=opendate&asc=0&daima={}\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Assumes entity.end_date and now_pd_timestamp() are compatible types for comparison",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      19016,
      796,
      366,
      4023,
      1378,
      85,
      541,
      13,
      13578,
      13,
      69,
      14149,
      13,
      82,
      1437,
      13,
      785,
      13,
      31522,
      14,
      421,
      6421,
      62,
      15271,
      14,
      15042,
      14,
      17752,
      62,
      85,
      17,
      13,
      10121,
      14,
      26788,
      37535,
      13,
      45163,
      62,
      48382,
      21373,
      62,
      75,
      1416,
      73,
      21855,
      30,
      7700,
      28,
      16,
      5,
      22510,
      34758,
      92,
      5,
      30619,
      28,
      404,
      437,
      378,
      5,
      3372,
      28,
      15,
      5,
      67,
      1385,
      64,
      34758,
      36786
    ],
    "start_token": 70,
    "end_token": 143,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      2195,
      8139,
      9312,
      13,
      437,
      62,
      4475,
      290,
      783,
      62,
      30094,
      62,
      16514,
      27823,
      3419,
      389,
      11670,
      3858,
      329,
      7208
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Assumes entity.end_date and now_pd_timestamp() are compatible types for comparison"
  },
  {
    "line": 19,
    "text": "    url = \"http://vip.stock.finance.sina.com.cn/quotes_service/api/json_v2.php/MoneyFlow.ssl_qsfx_lscjfb?page=1&num={}&sort=opendate&asc=0&daima={}\"",
    "annotation": "\u2705 Best Practice: Unpacking multiple return values improves readability and maintainability.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      19016,
      796,
      366,
      4023,
      1378,
      85,
      541,
      13,
      13578,
      13,
      69,
      14149,
      13,
      82,
      1437,
      13,
      785,
      13,
      31522,
      14,
      421,
      6421,
      62,
      15271,
      14,
      15042,
      14,
      17752,
      62,
      85,
      17,
      13,
      10121,
      14,
      26788,
      37535,
      13,
      45163,
      62,
      48382,
      21373,
      62,
      75,
      1416,
      73,
      21855,
      30,
      7700,
      28,
      16,
      5,
      22510,
      34758,
      92,
      5,
      30619,
      28,
      404,
      437,
      378,
      5,
      3372,
      28,
      15,
      5,
      67,
      1385,
      64,
      34758,
      36786
    ],
    "start_token": 143,
    "end_token": 216,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      791,
      41291,
      3294,
      1441,
      3815,
      19575,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Unpacking multiple return values improves readability and maintainability."
  },
  {
    "line": 22,
    "text": "        super().init_entities()",
    "annotation": "\ud83e\udde0 ML Signal: Querying data with specific conditions can indicate data access patterns.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2208,
      22446,
      15003,
      62,
      298,
      871,
      3419
    ],
    "start_token": 216,
    "end_token": 230,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      351,
      2176,
      3403,
      460,
      7603,
      1366,
      1895,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "Querying data with specific conditions can indicate data access patterns."
  },
  {
    "line": 25,
    "text": "            entity for entity in self.entities if (entity.end_date is None) or (entity.end_date > now_pd_timestamp())",
    "annotation": "\ud83e\udde0 ML Signal: Checking for date equality can indicate temporal logic patterns.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      329,
      9312,
      287,
      2116,
      13,
      298,
      871,
      611,
      357,
      26858,
      13,
      437,
      62,
      4475,
      318,
      6045,
      8,
      393,
      357,
      26858,
      13,
      437,
      62,
      4475,
      1875,
      783,
      62,
      30094,
      62,
      16514,
      27823,
      28955
    ],
    "start_token": 230,
    "end_token": 274,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      3128,
      10537,
      460,
      7603,
      21964,
      9156,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "Checking for date equality can indicate temporal logic patterns."
  },
  {
    "line": 27,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Directly modifying a variable based on a condition without logging or validation.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 274,
    "end_token": 274,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      4128,
      306,
      30620,
      257,
      7885,
      1912,
      319,
      257,
      4006,
      1231,
      18931,
      393,
      21201,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Directly modifying a variable based on a condition without logging or validation."
  },
  {
    "line": 29,
    "text": "    def evaluate_start_end_size_timestamps(self, entity):",
    "annotation": "\u2705 Best Practice: Returning multiple values in a consistent order aids in understanding the function's output.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      13446,
      62,
      9688,
      62,
      437,
      62,
      7857,
      62,
      16514,
      395,
      9430,
      7,
      944,
      11,
      9312,
      2599
    ],
    "start_token": 274,
    "end_token": 294,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      42882,
      3294,
      3815,
      287,
      257,
      6414,
      1502,
      31378,
      287,
      4547,
      262,
      2163,
      338,
      5072,
      13
    ],
    "label": "best_practice",
    "reason": "Returning multiple values in a consistent order aids in understanding the function's output."
  },
  {
    "line": 26,
    "text": "        ]",
    "annotation": "\ud83e\udde0 ML Signal: Method for generating URLs based on input parameters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2361
    ],
    "start_token": 294,
    "end_token": 302,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      329,
      15453,
      32336,
      1912,
      319,
      5128,
      10007
    ],
    "label": "ml_signal",
    "reason": "Method for generating URLs based on input parameters"
  },
  {
    "line": 27,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of format method for string formatting",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 302,
    "end_token": 302,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      5794,
      2446,
      329,
      4731,
      33313
    ],
    "label": "best_practice",
    "reason": "Use of format method for string formatting"
  },
  {
    "line": 29,
    "text": "    def evaluate_start_end_size_timestamps(self, entity):",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for URL injection if inputs are not validated",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      13446,
      62,
      9688,
      62,
      437,
      62,
      7857,
      62,
      16514,
      395,
      9430,
      7,
      944,
      11,
      9312,
      2599
    ],
    "start_token": 302,
    "end_token": 322,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      10289,
      16954,
      611,
      17311,
      389,
      407,
      31031
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for URL injection if inputs are not validated"
  },
  {
    "line": 28,
    "text": "    # TODO:more general for the case using StockTradeDay",
    "annotation": "\u2705 Best Practice: Method should have a docstring explaining its purpose",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      16926,
      46,
      25,
      3549,
      2276,
      329,
      262,
      1339,
      1262,
      10500,
      35965,
      12393
    ],
    "start_token": 322,
    "end_token": 338,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11789,
      815,
      423,
      257,
      2205,
      8841,
      11170,
      663,
      4007
    ],
    "label": "best_practice",
    "reason": "Method should have a docstring explaining its purpose"
  },
  {
    "line": 30,
    "text": "        start, end, size, timestamps = super().evaluate_start_end_size_timestamps(entity)",
    "annotation": "\u2705 Best Practice: Consider returning a more descriptive data structure if possible",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      923,
      11,
      886,
      11,
      2546,
      11,
      4628,
      395,
      9430,
      796,
      2208,
      22446,
      49786,
      62,
      9688,
      62,
      437,
      62,
      7857,
      62,
      16514,
      395,
      9430,
      7,
      26858,
      8
    ],
    "start_token": 338,
    "end_token": 371,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      8024,
      257,
      517,
      35644,
      1366,
      4645,
      611,
      1744
    ],
    "label": "best_practice",
    "reason": "Consider returning a more descriptive data structure if possible"
  },
  {
    "line": 35,
    "text": "                    size = 0",
    "annotation": "\ud83e\udde0 ML Signal: Usage of external API via HTTP GET request",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2546,
      796,
      657
    ],
    "start_token": 371,
    "end_token": 393,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      7097,
      7824,
      2884,
      14626,
      17151,
      2581
    ],
    "label": "ml_signal",
    "reason": "Usage of external API via HTTP GET request"
  },
  {
    "line": 36,
    "text": "        return start, end, size, timestamps",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): No error handling for network issues",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      923,
      11,
      886,
      11,
      2546,
      11,
      4628,
      395,
      9430
    ],
    "start_token": 393,
    "end_token": 410,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      1400,
      4049,
      9041,
      329,
      3127,
      2428
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "No error handling for network issues"
  },
  {
    "line": 54,
    "text": "        opendate = \"opendate\"",
    "annotation": "\u26a0\ufe0f SAST Risk (High): Use of eval() on potentially untrusted data",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1034,
      437,
      378,
      796,
      366,
      404,
      437,
      378,
      1
    ],
    "start_token": 410,
    "end_token": 426,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      11922,
      2599,
      5765,
      286,
      5418,
      3419,
      319,
      6196,
      1418,
      81,
      8459,
      1366
    ],
    "label": "sast_risk",
    "severity": "High",
    "reason": "Use of eval() on potentially untrusted data"
  },
  {
    "line": 57,
    "text": "        turnover = \"turnover\"",
    "annotation": "\u2705 Best Practice: Specify encoding explicitly for consistent behavior",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      25079,
      796,
      366,
      15344,
      2502,
      1
    ],
    "start_token": 426,
    "end_token": 439,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      18291,
      1958,
      21004,
      11777,
      329,
      6414,
      4069
    ],
    "label": "best_practice",
    "reason": "Specify encoding explicitly for consistent behavior"
  },
  {
    "line": 59,
    "text": "        ratioamount = \"ratioamount\"",
    "annotation": "\ud83e\udde0 ML Signal: Logging of errors for monitoring",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      8064,
      17287,
      796,
      366,
      10366,
      952,
      17287,
      1
    ],
    "start_token": 439,
    "end_token": 454,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      286,
      8563,
      329,
      9904
    ],
    "label": "ml_signal",
    "reason": "Logging of errors for monitoring"
  },
  {
    "line": 60,
    "text": "        r0 = \"r0\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Fixed sleep duration can lead to inefficiencies",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      374,
      15,
      796,
      366,
      81,
      15,
      1
    ],
    "start_token": 454,
    "end_token": 468,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      10832,
      3993,
      9478,
      460,
      1085,
      284,
      287,
      24531,
      22139
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Fixed sleep duration can lead to inefficiencies"
  },
  {
    "line": 60,
    "text": "        r0 = \"r0\"",
    "annotation": "\ud83e\udde0 ML Signal: Conversion of data types for processing",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      374,
      15,
      796,
      366,
      81,
      15,
      1
    ],
    "start_token": 468,
    "end_token": 482,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      44101,
      286,
      1366,
      3858,
      329,
      7587
    ],
    "label": "ml_signal",
    "reason": "Conversion of data types for processing"
  },
  {
    "line": 84,
    "text": "                \"name\": entity.name,",
    "annotation": "\ud83e\udde0 ML Signal: Entry point for script execution",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      3672,
      1298,
      9312,
      13,
      3672,
      11
    ],
    "start_token": 482,
    "end_token": 504,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      21617,
      966,
      329,
      4226,
      9706
    ],
    "label": "ml_signal",
    "reason": "Entry point for script execution"
  },
  {
    "line": 84,
    "text": "                \"name\": entity.name,",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation and execution of a specific class method",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      3672,
      1298,
      9312,
      13,
      3672,
      11
    ],
    "start_token": 504,
    "end_token": 526,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      290,
      9706,
      286,
      257,
      2176,
      1398,
      2446
    ],
    "label": "ml_signal",
    "reason": "Instantiation and execution of a specific class method"
  },
  {
    "line": 84,
    "text": "                \"name\": entity.name,",
    "annotation": "\u2705 Best Practice: Use of __all__ to define public API of the module",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      3672,
      1298,
      9312,
      13,
      3672,
      11
    ],
    "start_token": 526,
    "end_token": 548,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265
    ],
    "label": "best_practice",
    "reason": "Use of __all__ to define public API of the module"
  }
]