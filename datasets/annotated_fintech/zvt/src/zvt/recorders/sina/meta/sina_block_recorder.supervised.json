[
  {
    "line": 5,
    "text": "import pandas as pd",
    "annotation": "\u2705 Best Practice: Grouping imports from the same package together improves readability.",
    "confidence": 0.5,
    "tokens": [
      11748,
      19798,
      292,
      355,
      279,
      67
    ],
    "start_token": 0,
    "end_token": 6,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      5301,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same package together improves readability."
  },
  {
    "line": 7,
    "text": "",
    "annotation": "\u2705 Best Practice: Grouping imports from the same package together improves readability.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 6,
    "end_token": 6,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      5301,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same package together improves readability."
  },
  {
    "line": 9,
    "text": "from zvt.contract.api import df_to_db",
    "annotation": "\u2705 Best Practice: Grouping imports from the same package together improves readability.",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      28484,
      13,
      15042,
      1330,
      47764,
      62,
      1462,
      62,
      9945
    ],
    "start_token": 6,
    "end_token": 19,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      5301,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same package together improves readability."
  },
  {
    "line": 11,
    "text": "from zvt.domain import BlockStock, BlockCategory, Block",
    "annotation": "\u2705 Best Practice: Grouping imports from the same package together improves readability.",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      27830,
      1330,
      9726,
      26207,
      11,
      9726,
      27313,
      11,
      9726
    ],
    "start_token": 19,
    "end_token": 32,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      5301,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same package together improves readability."
  },
  {
    "line": 13,
    "text": "",
    "annotation": "\u2705 Best Practice: Grouping imports from the same package together improves readability.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 32,
    "end_token": 32,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      5301,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same package together improves readability."
  },
  {
    "line": 10,
    "text": "from zvt.contract.recorder import Recorder, TimeSeriesDataRecorder",
    "annotation": "\ud83e\udde0 ML Signal: Class definition with inheritance, useful for understanding class hierarchies and relationships",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      28484,
      13,
      8344,
      2875,
      1330,
      3311,
      2875,
      11,
      3862,
      27996,
      6601,
      6690,
      2875
    ],
    "start_token": 32,
    "end_token": 49,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      6770,
      351,
      24155,
      11,
      4465,
      329,
      4547,
      1398,
      28398,
      444,
      290,
      6958
    ],
    "label": "ml_signal",
    "reason": "Class definition with inheritance, useful for understanding class hierarchies and relationships"
  },
  {
    "line": 12,
    "text": "from zvt.utils.time_utils import now_pd_timestamp",
    "annotation": "\ud83e\udde0 ML Signal: Class attribute indicating a constant value, useful for understanding class-specific configurations",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      2435,
      62,
      26791,
      1330,
      783,
      62,
      30094,
      62,
      16514,
      27823
    ],
    "start_token": 49,
    "end_token": 65,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      11688,
      12739,
      257,
      6937,
      1988,
      11,
      4465,
      329,
      4547,
      1398,
      12,
      11423,
      25412
    ],
    "label": "ml_signal",
    "reason": "Class attribute indicating a constant value, useful for understanding class-specific configurations"
  },
  {
    "line": 13,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Class attribute indicating a schema, useful for understanding data structure expectations",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 65,
    "end_token": 65,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      11688,
      12739,
      257,
      32815,
      11,
      4465,
      329,
      4547,
      1366,
      4645,
      9027
    ],
    "label": "ml_signal",
    "reason": "Class attribute indicating a schema, useful for understanding data structure expectations"
  },
  {
    "line": 17,
    "text": "    data_schema = Block",
    "annotation": "\ud83e\udde0 ML Signal: Mapping of categories to URLs, useful for understanding data source configurations",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1366,
      62,
      15952,
      2611,
      796,
      9726
    ],
    "start_token": 65,
    "end_token": 74,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      337,
      5912,
      286,
      9376,
      284,
      32336,
      11,
      4465,
      329,
      4547,
      1366,
      2723,
      25412
    ],
    "label": "ml_signal",
    "reason": "Mapping of categories to URLs, useful for understanding data source configurations"
  },
  {
    "line": 18,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Enum usage, useful for understanding categorical data handling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 74,
    "end_token": 74,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2039,
      388,
      8748,
      11,
      4465,
      329,
      4547,
      4253,
      12409,
      1366,
      9041
    ],
    "label": "ml_signal",
    "reason": "Enum usage, useful for understanding categorical data handling"
  },
  {
    "line": 20,
    "text": "    category_map_url = {",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoded URL, potential for misuse if URLs change or are insecure",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6536,
      62,
      8899,
      62,
      6371,
      796,
      1391
    ],
    "start_token": 74,
    "end_token": 84,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      40976,
      10289,
      11,
      2785,
      329,
      29169,
      611,
      32336,
      1487,
      393,
      389,
      31955
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoded URL, potential for misuse if URLs change or are insecure"
  },
  {
    "line": 19,
    "text": "    # \u7528\u4e8e\u6293\u53d6\u884c\u4e1a/\u6982\u5ff5/\u5730\u57df\u5217\u8868",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): No error handling for network request failures",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      13328,
      242,
      101,
      12859,
      236,
      162,
      232,
      241,
      20998,
      244,
      26193,
      234,
      10310,
      248,
      14,
      162,
      99,
      224,
      33232,
      113,
      14,
      28839,
      108,
      161,
      253,
      253,
      26344,
      245,
      26193,
      101
    ],
    "start_token": 84,
    "end_token": 118,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      1400,
      4049,
      9041,
      329,
      3127,
      2581,
      15536
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "No error handling for network request failures"
  },
  {
    "line": 21,
    "text": "        BlockCategory.industry: \"http://vip.stock.finance.sina.com.cn/q/view/newSinaHy.php\",",
    "annotation": "\u2705 Best Practice: Set encoding explicitly to ensure correct text decoding",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9726,
      27313,
      13,
      23213,
      563,
      25,
      366,
      4023,
      1378,
      85,
      541,
      13,
      13578,
      13,
      69,
      14149,
      13,
      82,
      1437,
      13,
      785,
      13,
      31522,
      14,
      80,
      14,
      1177,
      14,
      3605,
      50,
      1437,
      21217,
      13,
      10121,
      1600
    ],
    "start_token": 118,
    "end_token": 160,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5345,
      21004,
      11777,
      284,
      4155,
      3376,
      2420,
      39938
    ],
    "label": "best_practice",
    "reason": "Set encoding explicitly to ensure correct text decoding"
  },
  {
    "line": 24,
    "text": "    }",
    "annotation": "\u26a0\ufe0f SAST Risk (High): Potential for ValueError if \"{\" or \"}\" not found in string",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1782
    ],
    "start_token": 160,
    "end_token": 164,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      11922,
      2599,
      32480,
      329,
      11052,
      12331,
      611,
      366,
      4895,
      393,
      366,
      36786,
      407,
      1043,
      287,
      4731
    ],
    "label": "sast_risk",
    "severity": "High",
    "reason": "Potential for ValueError if \"{\" or \"}\" not found in string"
  },
  {
    "line": 26,
    "text": "    def run(self):",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): No error handling for JSON decoding",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      1057,
      7,
      944,
      2599
    ],
    "start_token": 164,
    "end_token": 172,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      1400,
      4049,
      9041,
      329,
      19449,
      39938
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "No error handling for JSON decoding"
  },
  {
    "line": 28,
    "text": "        for category, url in self.category_map_url.items():",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of extracting and processing data from JSON",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      329,
      6536,
      11,
      19016,
      287,
      2116,
      13,
      22872,
      62,
      8899,
      62,
      6371,
      13,
      23814,
      33529
    ],
    "start_token": 172,
    "end_token": 194,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      37895,
      290,
      7587,
      1366,
      422,
      19449
    ],
    "label": "ml_signal",
    "reason": "Pattern of extracting and processing data from JSON"
  },
  {
    "line": 28,
    "text": "        for category, url in self.category_map_url.items():",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of constructing unique identifiers",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      329,
      6536,
      11,
      19016,
      287,
      2116,
      13,
      22872,
      62,
      8899,
      62,
      6371,
      13,
      23814,
      33529
    ],
    "start_token": 194,
    "end_token": 216,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      30580,
      3748,
      42814
    ],
    "label": "ml_signal",
    "reason": "Pattern of constructing unique identifiers"
  },
  {
    "line": 46,
    "text": "                        \"exchange\": \"cn\",",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of converting list of dicts to DataFrame",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      1069,
      3803,
      1298,
      366,
      31522,
      1600
    ],
    "start_token": 216,
    "end_token": 246,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      23202,
      1351,
      286,
      8633,
      82,
      284,
      6060,
      19778
    ],
    "label": "ml_signal",
    "reason": "Pattern of converting list of dicts to DataFrame"
  },
  {
    "line": 48,
    "text": "                        \"name\": name,",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): No error handling for database operations",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      3672,
      1298,
      1438,
      11
    ],
    "start_token": 246,
    "end_token": 274,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      1400,
      4049,
      9041,
      329,
      6831,
      4560
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "No error handling for database operations"
  },
  {
    "line": 50,
    "text": "                    }",
    "annotation": "\u2705 Best Practice: Use logging for tracking execution flow",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1782
    ],
    "start_token": 274,
    "end_token": 294,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      18931,
      329,
      9646,
      9706,
      5202
    ],
    "label": "best_practice",
    "reason": "Use logging for tracking execution flow"
  },
  {
    "line": 43,
    "text": "                        \"id\": entity_id,",
    "annotation": "\ud83e\udde0 ML Signal: Class definition with inheritance, useful for understanding class hierarchies and relationships",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      312,
      1298,
      9312,
      62,
      312,
      11
    ],
    "start_token": 294,
    "end_token": 324,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      6770,
      351,
      24155,
      11,
      4465,
      329,
      4547,
      1398,
      28398,
      444,
      290,
      6958
    ],
    "label": "ml_signal",
    "reason": "Class definition with inheritance, useful for understanding class hierarchies and relationships"
  },
  {
    "line": 45,
    "text": "                        \"entity_type\": \"block\",",
    "annotation": "\ud83e\udde0 ML Signal: Class attribute definition, useful for understanding default values and configurations",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      26858,
      62,
      4906,
      1298,
      366,
      9967,
      1600
    ],
    "start_token": 324,
    "end_token": 355,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      11688,
      6770,
      11,
      4465,
      329,
      4547,
      4277,
      3815,
      290,
      25412
    ],
    "label": "ml_signal",
    "reason": "Class attribute definition, useful for understanding default values and configurations"
  },
  {
    "line": 47,
    "text": "                        \"code\": code,",
    "annotation": "\ud83e\udde0 ML Signal: Class attribute definition, useful for understanding default values and configurations",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      8189,
      1298,
      2438,
      11
    ],
    "start_token": 355,
    "end_token": 383,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      11688,
      6770,
      11,
      4465,
      329,
      4547,
      4277,
      3815,
      290,
      25412
    ],
    "label": "ml_signal",
    "reason": "Class attribute definition, useful for understanding default values and configurations"
  },
  {
    "line": 49,
    "text": "                        \"category\": category.value,",
    "annotation": "\ud83e\udde0 ML Signal: Class attribute definition, useful for understanding default values and configurations",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      22872,
      1298,
      6536,
      13,
      8367,
      11
    ],
    "start_token": 383,
    "end_token": 413,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      11688,
      6770,
      11,
      4465,
      329,
      4547,
      4277,
      3815,
      290,
      25412
    ],
    "label": "ml_signal",
    "reason": "Class attribute definition, useful for understanding default values and configurations"
  },
  {
    "line": 51,
    "text": "                )",
    "annotation": "\ud83e\udde0 ML Signal: Class attribute definition, useful for understanding default values and configurations",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 413,
    "end_token": 429,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      11688,
      6770,
      11,
      4465,
      329,
      4547,
      4277,
      3815,
      290,
      25412
    ],
    "label": "ml_signal",
    "reason": "Class attribute definition, useful for understanding default values and configurations"
  },
  {
    "line": 53,
    "text": "                df = pd.DataFrame.from_records(the_list)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoded URL, potential for misuse if not validated or sanitized",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      796,
      279,
      67,
      13,
      6601,
      19778,
      13,
      6738,
      62,
      8344,
      3669,
      7,
      1169,
      62,
      4868,
      8
    ],
    "start_token": 429,
    "end_token": 461,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      40976,
      10289,
      11,
      2785,
      329,
      29169,
      611,
      407,
      31031,
      393,
      5336,
      36951
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoded URL, potential for misuse if not validated or sanitized"
  },
  {
    "line": 54,
    "text": "                df_to_db(data_schema=self.data_schema, df=df, provider=self.provider, force_update=True)",
    "annotation": "\ud83e\udde0 ML Signal: Class attribute definition, useful for understanding default values and configurations",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      62,
      1462,
      62,
      9945,
      7,
      7890,
      62,
      15952,
      2611,
      28,
      944,
      13,
      7890,
      62,
      15952,
      2611,
      11,
      47764,
      28,
      7568,
      11,
      10131,
      28,
      944,
      13,
      15234,
      1304,
      11,
      2700,
      62,
      19119,
      28,
      17821,
      8
    ],
    "start_token": 461,
    "end_token": 511,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5016,
      11688,
      6770,
      11,
      4465,
      329,
      4547,
      4277,
      3815,
      290,
      25412
    ],
    "label": "ml_signal",
    "reason": "Class attribute definition, useful for understanding default values and configurations"
  },
  {
    "line": 51,
    "text": "                )",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over a fixed range of pages",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 511,
    "end_token": 527,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      257,
      5969,
      2837,
      286,
      5468
    ],
    "label": "ml_signal",
    "reason": "Iterating over a fixed range of pages"
  },
  {
    "line": 53,
    "text": "                df = pd.DataFrame.from_records(the_list)",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): No timeout specified in requests.get",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      796,
      279,
      67,
      13,
      6601,
      19778,
      13,
      6738,
      62,
      8344,
      3669,
      7,
      1169,
      62,
      4868,
      8
    ],
    "start_token": 527,
    "end_token": 559,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      1400,
      26827,
      7368,
      287,
      7007,
      13,
      1136
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "No timeout specified in requests.get"
  },
  {
    "line": 57,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for demjson3.decode to raise an exception if resp.text is not valid JSON",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 559,
    "end_token": 559,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      1357,
      17752,
      18,
      13,
      12501,
      1098,
      284,
      5298,
      281,
      6631,
      611,
      1217,
      13,
      5239,
      318,
      407,
      4938,
      19449
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for demjson3.decode to raise an exception if resp.text is not valid JSON"
  },
  {
    "line": 61,
    "text": "    entity_schema = Block",
    "annotation": "\ud83e\udde0 ML Signal: Conversion of stock code to stock ID",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      15952,
      2611,
      796,
      9726
    ],
    "start_token": 559,
    "end_token": 568,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      44101,
      286,
      4283,
      2438,
      284,
      4283,
      4522
    ],
    "label": "ml_signal",
    "reason": "Conversion of stock code to stock ID"
  },
  {
    "line": 81,
    "text": "                    the_list.append(",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential SQL injection risk if data_schema or provider are user-controlled",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      262,
      62,
      4868,
      13,
      33295,
      7
    ],
    "start_token": 568,
    "end_token": 593,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      16363,
      16954,
      2526,
      611,
      1366,
      62,
      15952,
      2611,
      393,
      10131,
      389,
      2836,
      12,
      14401
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential SQL injection risk if data_schema or provider are user-controlled"
  },
  {
    "line": 83,
    "text": "                            \"id\": \"{}_{}\".format(block_id, stock_id),",
    "annotation": "\ud83e\udde0 ML Signal: Logging successful recording of data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      312,
      1298,
      45144,
      92,
      23330,
      92,
      1911,
      18982,
      7,
      9967,
      62,
      312,
      11,
      4283,
      62,
      312,
      828
    ],
    "start_token": 593,
    "end_token": 638,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      4388,
      8296,
      286,
      1366
    ],
    "label": "ml_signal",
    "reason": "Logging successful recording of data"
  },
  {
    "line": 86,
    "text": "                            \"exchange\": entity.exchange,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Broad exception catch without specific handling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      1069,
      3803,
      1298,
      9312,
      13,
      1069,
      3803,
      11
    ],
    "start_token": 638,
    "end_token": 674,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      9765,
      6631,
      4929,
      1231,
      2176,
      9041
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Broad exception catch without specific handling"
  },
  {
    "line": 86,
    "text": "                            \"exchange\": entity.exchange,",
    "annotation": "\ud83e\udde0 ML Signal: Use of sleep to manage request rate",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      1069,
      3803,
      1298,
      9312,
      13,
      1069,
      3803,
      11
    ],
    "start_token": 674,
    "end_token": 710,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      3993,
      284,
      6687,
      2581,
      2494
    ],
    "label": "ml_signal",
    "reason": "Use of sleep to manage request rate"
  },
  {
    "line": 86,
    "text": "                            \"exchange\": entity.exchange,",
    "annotation": "\ud83e\udde0 ML Signal: Running main function for data recording",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      1069,
      3803,
      1298,
      9312,
      13,
      1069,
      3803,
      11
    ],
    "start_token": 710,
    "end_token": 746,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      18162,
      1388,
      2163,
      329,
      1366,
      8296
    ],
    "label": "ml_signal",
    "reason": "Running main function for data recording"
  },
  {
    "line": 86,
    "text": "                            \"exchange\": entity.exchange,",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation and execution of a specific recorder with predefined codes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      1069,
      3803,
      1298,
      9312,
      13,
      1069,
      3803,
      11
    ],
    "start_token": 746,
    "end_token": 782,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      290,
      9706,
      286,
      257,
      2176,
      38156,
      351,
      2747,
      18156,
      12416
    ],
    "label": "ml_signal",
    "reason": "Instantiation and execution of a specific recorder with predefined codes"
  },
  {
    "line": 86,
    "text": "                            \"exchange\": entity.exchange,",
    "annotation": "\u2705 Best Practice: Use of __all__ to define public API of the module",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      1069,
      3803,
      1298,
      9312,
      13,
      1069,
      3803,
      11
    ],
    "start_token": 782,
    "end_token": 818,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265
    ],
    "label": "best_practice",
    "reason": "Use of __all__ to define public API of the module"
  }
]