annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
üß† ML Signal: Importing specific classes from modules indicates usage patterns and dependencies,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 6097, 422, 13103, 9217, 8748, 7572, 290, 20086]",1.0,9,ml_signal,3,Importing specific classes from modules indicates usage patterns and dependencies,,0,from zvt.domain import ReportPeriod,"[6738, 1976, 36540, 13, 27830, 1330, 6358, 5990, 2101]"
üß† ML Signal: Function uses conditional logic to map input to specific output values,"[8582, 100, 254, 10373, 26484, 25, 15553, 3544, 26340, 9156, 284, 3975, 5128, 284, 2176, 5072, 3815]",0.5,18,ml_signal,3,Function uses conditional logic to map input to specific output values,,9,from zvt.domain import ReportPeriod,"[6738, 1976, 36540, 13, 27830, 1330, 6358, 5990, 2101]"
üß† ML Signal: Conditional check for input value,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 2198, 329, 5128, 1988]",0.5,18,ml_signal,5,Conditional check for input value,,18,,[]
üß† ML Signal: Specific condition and return value mapping,"[8582, 100, 254, 10373, 26484, 25, 17377, 4006, 290, 1441, 1988, 16855]",0.5,31,ml_signal,8,Specific condition and return value mapping,,18,        return trading_level.value,"[220, 220, 220, 220, 220, 220, 220, 1441, 7313, 62, 5715, 13, 8367]"
üß† ML Signal: Specific condition and return value mapping,"[8582, 100, 254, 10373, 26484, 25, 17377, 4006, 290, 1441, 1988, 16855]",0.5,43,ml_signal,11,Specific condition and return value mapping,,31,"        return ""60m""","[220, 220, 220, 220, 220, 220, 220, 1441, 366, 1899, 76, 1]"
üß† ML Signal: Specific condition and return value mapping,"[8582, 100, 254, 10373, 26484, 25, 17377, 4006, 290, 1441, 1988, 16855]",0.5,61,ml_signal,14,Specific condition and return value mapping,,43,    if trading_level == IntervalLevel.LEVEL_1DAY:,"[220, 220, 220, 611, 7313, 62, 5715, 6624, 4225, 2100, 4971, 13, 2538, 18697, 62, 16, 26442, 25]"
üß† ML Signal: Specific condition and return value mapping,"[8582, 100, 254, 10373, 26484, 25, 17377, 4006, 290, 1441, 1988, 16855]",0.5,73,ml_signal,17,Specific condition and return value mapping,,61,"        return ""1w""","[220, 220, 220, 220, 220, 220, 220, 1441, 366, 16, 86, 1]"
üß† ML Signal: Specific condition and return value mapping,"[8582, 100, 254, 10373, 26484, 25, 17377, 4006, 290, 1441, 1988, 16855]",0.5,73,ml_signal,20,Specific condition and return value mapping,,73,,[]
üß† ML Signal: Function definition with specific input parameter type,"[8582, 100, 254, 10373, 26484, 25, 15553, 6770, 351, 2176, 5128, 11507, 2099]",0.5,92,ml_signal,16,Function definition with specific input parameter type,,73,    if trading_level == IntervalLevel.LEVEL_1WEEK:,"[220, 220, 220, 611, 7313, 62, 5715, 6624, 4225, 2100, 4971, 13, 2538, 18697, 62, 16, 54, 33823, 25]"
üß† ML Signal: Conditional check for specific entity types,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 2198, 329, 2176, 9312, 3858]",0.5,110,ml_signal,18,Conditional check for specific entity types,,92,    if trading_level == IntervalLevel.LEVEL_1MON:,"[220, 220, 220, 611, 7313, 62, 5715, 6624, 4225, 2100, 4971, 13, 2538, 18697, 62, 16, 27857, 25]"
üß† ML Signal: Nested conditional check for exchange type,"[8582, 100, 254, 10373, 26484, 25, 399, 7287, 26340, 2198, 329, 5163, 2099]",0.5,110,ml_signal,20,Nested conditional check for exchange type,,110,,[]
‚úÖ Best Practice: Use f-string for better readability and performance,"[26486, 227, 6705, 19939, 25, 5765, 277, 12, 8841, 329, 1365, 1100, 1799, 290, 2854]",1.0,124,best_practice,22,Use f-string for better readability and performance,,110,def to_jq_entity_id(security_item):,"[4299, 284, 62, 73, 80, 62, 26858, 62, 312, 7, 12961, 62, 9186, 2599]"
üß† ML Signal: Conditional check for another exchange type,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 2198, 329, 1194, 5163, 2099]",0.5,142,ml_signal,24,Conditional check for another exchange type,,124,"        if security_item.exchange == ""sh"":","[220, 220, 220, 220, 220, 220, 220, 611, 2324, 62, 9186, 13, 1069, 3803, 6624, 366, 1477, 1298]"
‚úÖ Best Practice: Use f-string for better readability and performance,"[26486, 227, 6705, 19939, 25, 5765, 277, 12, 8841, 329, 1365, 1100, 1799, 290, 2854]",1.0,161,best_practice,26,Use f-string for better readability and performance,,142,"        if security_item.exchange == ""sz"":","[220, 220, 220, 220, 220, 220, 220, 611, 2324, 62, 9186, 13, 1069, 3803, 6624, 366, 82, 89, 1298]"
‚úÖ Best Practice: Use specific exception types instead of a bare except clause,"[26486, 227, 6705, 19939, 25, 5765, 2176, 6631, 3858, 2427, 286, 257, 6247, 2845, 13444]",1.0,188,best_practice,23,Use specific exception types instead of a bare except clause,,161,"    if security_item.entity_type == ""stock"" or security_item.entity_type == ""index"":","[220, 220, 220, 611, 2324, 62, 9186, 13, 26858, 62, 4906, 6624, 366, 13578, 1, 393, 2324, 62, 9186, 13, 26858, 62, 4906, 6624, 366, 9630, 1298]"
‚ö†Ô∏è SAST Risk (Low): Catching all exceptions can hide unexpected errors,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 327, 19775, 477, 13269, 460, 7808, 10059, 8563]",1.0,193,sast_risk,31,Catching all exceptions can hide unexpected errors,Low,188,    try:,"[220, 220, 220, 1949, 25]"
üß† ML Signal: String formatting pattern for generating entity IDs,"[8582, 100, 254, 10373, 26484, 25, 10903, 33313, 3912, 329, 15453, 9312, 32373]",1.0,209,ml_signal,34,String formatting pattern for generating entity IDs,,193,"            exchange = ""sh""","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 5163, 796, 366, 1477, 1]"
"üß† ML Signal: Function uses a series of if statements to map input to output, indicating a pattern of discrete mapping.","[8582, 100, 254, 10373, 26484, 25, 15553, 3544, 257, 2168, 286, 611, 6299, 284, 3975, 5128, 284, 5072, 11, 12739, 257, 3912, 286, 28810, 16855, 13]",1.0,225,ml_signal,34,"Function uses a series of if statements to map input to output, indicating a pattern of discrete mapping.",,209,"            exchange = ""sh""","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 5163, 796, 366, 1477, 1]"
"‚ö†Ô∏è SAST Risk (Low): Use of assert for control flow can be disabled in production, leading to unexpected behavior.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 6818, 329, 1630, 5202, 460, 307, 10058, 287, 3227, 11, 3756, 284, 10059, 4069, 13]",1.0,247,sast_risk,47,"Use of assert for control flow can be disabled in production, leading to unexpected behavior.",Low,225,"    if jq_report_type == ""Á¨¨‰∫åÂ≠£Â∫¶"":","[220, 220, 220, 611, 474, 80, 62, 13116, 62, 4906, 6624, 366, 163, 105, 105, 12859, 234, 27764, 96, 41753, 99, 1298]"
"‚úÖ Best Practice: Use of __all__ to define public API of the module, improving code maintainability and clarity.","[26486, 227, 6705, 19939, 25, 5765, 286, 11593, 439, 834, 284, 8160, 1171, 7824, 286, 262, 8265, 11, 10068, 2438, 5529, 1799, 290, 16287, 13]",1.0,269,best_practice,47,"Use of __all__ to define public API of the module, improving code maintainability and clarity.",,247,"    if jq_report_type == ""Á¨¨‰∫åÂ≠£Â∫¶"":","[220, 220, 220, 611, 474, 80, 62, 13116, 62, 4906, 6624, 366, 163, 105, 105, 12859, 234, 27764, 96, 41753, 99, 1298]"
