[
  {
    "line": 2,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Importing specific functions from a module indicates usage patterns and dependencies",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 0,
    "end_token": 0,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      2176,
      5499,
      422,
      257,
      8265,
      9217,
      8748,
      7572,
      290,
      20086
    ],
    "label": "ml_signal",
    "reason": "Importing specific functions from a module indicates usage patterns and dependencies"
  },
  {
    "line": 4,
    "text": "from zvt.domain import Index, CrossMarketSummary",
    "annotation": "\ud83e\udde0 ML Signal: Importing specific classes from a module indicates usage patterns and dependencies",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      27830,
      1330,
      12901,
      11,
      6372,
      27470,
      22093
    ],
    "start_token": 0,
    "end_token": 11,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      2176,
      6097,
      422,
      257,
      8265,
      9217,
      8748,
      7572,
      290,
      20086
    ],
    "label": "ml_signal",
    "reason": "Importing specific classes from a module indicates usage patterns and dependencies"
  },
  {
    "line": 6,
    "text": "from zvt.utils.utils import multiple_number",
    "annotation": "\ud83e\udde0 ML Signal: Importing specific classes from a module indicates usage patterns and dependencies",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      26791,
      1330,
      3294,
      62,
      17618
    ],
    "start_token": 11,
    "end_token": 22,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      2176,
      6097,
      422,
      257,
      8265,
      9217,
      8748,
      7572,
      290,
      20086
    ],
    "label": "ml_signal",
    "reason": "Importing specific classes from a module indicates usage patterns and dependencies"
  },
  {
    "line": 8,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Importing specific functions from a module indicates usage patterns and dependencies",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 22,
    "end_token": 22,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      2176,
      5499,
      422,
      257,
      8265,
      9217,
      8748,
      7572,
      290,
      20086
    ],
    "label": "ml_signal",
    "reason": "Importing specific functions from a module indicates usage patterns and dependencies"
  },
  {
    "line": 10,
    "text": "    entity_provider = \"joinquant\"",
    "annotation": "\ud83e\udde0 ML Signal: Importing specific functions from a module indicates usage patterns and dependencies",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      15234,
      1304,
      796,
      366,
      7639,
      18934,
      415,
      1
    ],
    "start_token": 22,
    "end_token": 35,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      2176,
      5499,
      422,
      257,
      8265,
      9217,
      8748,
      7572,
      290,
      20086
    ],
    "label": "ml_signal",
    "reason": "Importing specific functions from a module indicates usage patterns and dependencies"
  },
  {
    "line": 7,
    "text": "",
    "annotation": "\u2705 Best Practice: Class attributes are defined at the top for clarity and maintainability",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 35,
    "end_token": 35,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      12608,
      389,
      5447,
      379,
      262,
      1353,
      329,
      16287,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Class attributes are defined at the top for clarity and maintainability"
  },
  {
    "line": 9,
    "text": "class CrossMarketSummaryRecorder(TimeSeriesDataRecorder):",
    "annotation": "\ud83e\udde0 ML Signal: Use of a specific entity schema indicates a pattern in data handling",
    "confidence": 0.5,
    "tokens": [
      4871,
      6372,
      27470,
      22093,
      6690,
      2875,
      7,
      7575,
      27996,
      6601,
      6690,
      2875,
      2599
    ],
    "start_token": 35,
    "end_token": 48,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      2176,
      9312,
      32815,
      9217,
      257,
      3912,
      287,
      1366,
      9041
    ],
    "label": "ml_signal",
    "reason": "Use of a specific entity schema indicates a pattern in data handling"
  },
  {
    "line": 11,
    "text": "    entity_schema = Index",
    "annotation": "\ud83e\udde0 ML Signal: Consistent use of provider name suggests a pattern in data source usage",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      15952,
      2611,
      796,
      12901
    ],
    "start_token": 48,
    "end_token": 57,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3515,
      7609,
      779,
      286,
      10131,
      1438,
      5644,
      257,
      3912,
      287,
      1366,
      2723,
      8748
    ],
    "label": "ml_signal",
    "reason": "Consistent use of provider name suggests a pattern in data source usage"
  },
  {
    "line": 13,
    "text": "    provider = \"joinquant\"",
    "annotation": "\ud83e\udde0 ML Signal: Use of a specific data schema indicates a pattern in data handling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      10131,
      796,
      366,
      7639,
      18934,
      415,
      1
    ],
    "start_token": 57,
    "end_token": 67,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      2176,
      1366,
      32815,
      9217,
      257,
      3912,
      287,
      1366,
      9041
    ],
    "label": "ml_signal",
    "reason": "Use of a specific data schema indicates a pattern in data handling"
  },
  {
    "line": 12,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of default values for function parameters improves usability and flexibility.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 67,
    "end_token": 67,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      4277,
      3815,
      329,
      2163,
      10007,
      19575,
      42863,
      290,
      13688,
      13
    ],
    "label": "best_practice",
    "reason": "Use of default values for function parameters improves usability and flexibility."
  },
  {
    "line": 13,
    "text": "    provider = \"joinquant\"",
    "annotation": "\ud83e\udde0 ML Signal: Hardcoded list of codes could indicate specific domain knowledge or usage pattern.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      10131,
      796,
      366,
      7639,
      18934,
      415,
      1
    ],
    "start_token": 67,
    "end_token": 77,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6912,
      40976,
      1351,
      286,
      12416,
      714,
      7603,
      2176,
      7386,
      3725,
      393,
      8748,
      3912,
      13
    ],
    "label": "ml_signal",
    "reason": "Hardcoded list of codes could indicate specific domain knowledge or usage pattern."
  },
  {
    "line": 25,
    "text": "        codes = [\"310001\", \"310002\", \"310003\", \"310004\"]",
    "annotation": "\u2705 Best Practice: Use of super() to call the parent class's __init__ method ensures proper initialization.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      12416,
      796,
      14631,
      18,
      3064,
      486,
      1600,
      366,
      3132,
      34215,
      1600,
      366,
      3132,
      830,
      18,
      1600,
      366,
      3132,
      830,
      19,
      8973
    ],
    "start_token": 77,
    "end_token": 105,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2208,
      3419,
      284,
      869,
      262,
      2560,
      1398,
      338,
      11593,
      15003,
      834,
      2446,
      19047,
      1774,
      37588,
      13
    ],
    "label": "best_practice",
    "reason": "Use of super() to call the parent class's __init__ method ensures proper initialization."
  },
  {
    "line": 26,
    "text": "        super().__init__(",
    "annotation": "\ud83e\udde0 ML Signal: The parameters passed to super().__init__() can indicate configuration or setup patterns.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2208,
      22446,
      834,
      15003,
      834,
      7
    ],
    "start_token": 105,
    "end_token": 118,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      383,
      10007,
      3804,
      284,
      2208,
      22446,
      834,
      15003,
      834,
      3419,
      460,
      7603,
      8398,
      393,
      9058,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "The parameters passed to super().__init__() can indicate configuration or setup patterns."
  },
  {
    "line": 23,
    "text": "        # 310004\t\u6e2f\u80a1\u901a\uff08\u6df1\uff09",
    "annotation": "\u2705 Best Practice: Use of super() to call a method from the parent class ensures proper initialization in inheritance.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      3261,
      830,
      19,
      197,
      162,
      116,
      107,
      164,
      224,
      94,
      34460,
      248,
      171,
      120,
      230,
      162,
      115,
      109,
      171,
      120,
      231
    ],
    "start_token": 118,
    "end_token": 147,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2208,
      3419,
      284,
      869,
      257,
      2446,
      422,
      262,
      2560,
      1398,
      19047,
      1774,
      37588,
      287,
      24155,
      13
    ],
    "label": "best_practice",
    "reason": "Use of super() to call a method from the parent class ensures proper initialization in inheritance."
  },
  {
    "line": 26,
    "text": "        super().__init__(",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential SQL injection risk if `entity.code` or `start` are not properly sanitized",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2208,
      22446,
      834,
      15003,
      834,
      7
    ],
    "start_token": 147,
    "end_token": 160,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      16363,
      16954,
      2526,
      611,
      4600,
      26858,
      13,
      8189,
      63,
      393,
      4600,
      9688,
      63,
      389,
      407,
      6105,
      5336,
      36951
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential SQL injection risk if `entity.code` or `start` are not properly sanitized"
  },
  {
    "line": 28,
    "text": "            sleeping_time,",
    "annotation": "\u2705 Best Practice: Consider using logging instead of print for better control over output",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      11029,
      62,
      2435,
      11
    ],
    "start_token": 160,
    "end_token": 175,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      18931,
      2427,
      286,
      3601,
      329,
      1365,
      1630,
      625,
      5072
    ],
    "label": "best_practice",
    "reason": "Consider using logging instead of print for better control over output"
  },
  {
    "line": 30,
    "text": "            None,",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over DataFrame records to transform data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6045,
      11
    ],
    "start_token": 175,
    "end_token": 188,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      6060,
      19778,
      4406,
      284,
      6121,
      1366
    ],
    "label": "ml_signal",
    "reason": "Iterating over DataFrame records to transform data"
  },
  {
    "line": 41,
    "text": "        df = run_query(table=\"finance.STK_ML_QUOTA\", conditions=f\"link_id#=#{entity.code}&day#>=#{to_time_str(start)}\")",
    "annotation": "\ud83e\udde0 ML Signal: Applying transformation to numerical data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      796,
      1057,
      62,
      22766,
      7,
      11487,
      2625,
      69,
      14149,
      13,
      2257,
      42,
      62,
      5805,
      62,
      10917,
      29009,
      1600,
      3403,
      28,
      69,
      1,
      8726,
      62,
      312,
      2,
      46249,
      90,
      26858,
      13,
      8189,
      92,
      5,
      820,
      2,
      29,
      46249,
      90,
      1462,
      62,
      2435,
      62,
      2536,
      7,
      9688,
      38165,
      4943
    ],
    "start_token": 188,
    "end_token": 243,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2034,
      3157,
      13389,
      284,
      29052,
      1366
    ],
    "label": "ml_signal",
    "reason": "Applying transformation to numerical data"
  },
  {
    "line": 41,
    "text": "        df = run_query(table=\"finance.STK_ML_QUOTA\", conditions=f\"link_id#=#{entity.code}&day#>=#{to_time_str(start)}\")",
    "annotation": "\ud83e\udde0 ML Signal: Applying transformation to numerical data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      796,
      1057,
      62,
      22766,
      7,
      11487,
      2625,
      69,
      14149,
      13,
      2257,
      42,
      62,
      5805,
      62,
      10917,
      29009,
      1600,
      3403,
      28,
      69,
      1,
      8726,
      62,
      312,
      2,
      46249,
      90,
      26858,
      13,
      8189,
      92,
      5,
      820,
      2,
      29,
      46249,
      90,
      1462,
      62,
      2435,
      62,
      2536,
      7,
      9688,
      38165,
      4943
    ],
    "start_token": 243,
    "end_token": 298,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2034,
      3157,
      13389,
      284,
      29052,
      1366
    ],
    "label": "ml_signal",
    "reason": "Applying transformation to numerical data"
  },
  {
    "line": 43,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Applying transformation to numerical data",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 298,
    "end_token": 298,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2034,
      3157,
      13389,
      284,
      29052,
      1366
    ],
    "label": "ml_signal",
    "reason": "Applying transformation to numerical data"
  },
  {
    "line": 45,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Applying transformation to numerical data",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 298,
    "end_token": 298,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2034,
      3157,
      13389,
      284,
      29052,
      1366
    ],
    "label": "ml_signal",
    "reason": "Applying transformation to numerical data"
  },
  {
    "line": 49,
    "text": "                \"timestamp\": item[\"day\"],",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on the length of results",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      16514,
      27823,
      1298,
      2378,
      14692,
      820,
      33116
    ],
    "start_token": 298,
    "end_token": 321,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      262,
      4129,
      286,
      2482
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on the length of results"
  },
  {
    "line": 47,
    "text": "            result = {",
    "annotation": "\u2705 Best Practice: Use a main guard to ensure code is only executed when the script is run directly",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1255,
      796,
      1391
    ],
    "start_token": 321,
    "end_token": 335,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      257,
      1388,
      4860,
      284,
      4155,
      2438,
      318,
      691,
      10945,
      618,
      262,
      4226,
      318,
      1057,
      3264
    ],
    "label": "best_practice",
    "reason": "Use a main guard to ensure code is only executed when the script is run directly"
  },
  {
    "line": 49,
    "text": "                \"timestamp\": item[\"day\"],",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential risk if CrossMarketSummaryRecorder is not defined or imported",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      16514,
      27823,
      1298,
      2378,
      14692,
      820,
      33116
    ],
    "start_token": 335,
    "end_token": 358,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2526,
      611,
      6372,
      27470,
      22093,
      6690,
      2875,
      318,
      407,
      5447,
      393,
      17392
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential risk if CrossMarketSummaryRecorder is not defined or imported"
  },
  {
    "line": 49,
    "text": "                \"timestamp\": item[\"day\"],",
    "annotation": "\u2705 Best Practice: Define __all__ to explicitly declare the public API of the module",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      16514,
      27823,
      1298,
      2378,
      14692,
      820,
      33116
    ],
    "start_token": 358,
    "end_token": 381,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      500,
      11593,
      439,
      834,
      284,
      11777,
      13627,
      262,
      1171,
      7824,
      286,
      262,
      8265
    ],
    "label": "best_practice",
    "reason": "Define __all__ to explicitly declare the public API of the module"
  }
]