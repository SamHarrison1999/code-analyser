annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
"🧠 ML Signal: Mapping of stock codes to identifiers, useful for feature extraction in ML models","[8582, 100, 254, 10373, 26484, 25, 337, 5912, 286, 4283, 12416, 284, 42814, 11, 4465, 329, 3895, 22236, 287, 10373, 4981]",1.0,0,ml_signal,8,"Mapping of stock codes to identifiers, useful for feature extraction in ML models",,0,,[]
"🧠 ML Signal: Inheritance from a base class, indicating a pattern of extending functionality","[8582, 100, 254, 10373, 26484, 25, 47025, 42942, 422, 257, 2779, 1398, 11, 12739, 257, 3912, 286, 16610, 11244]",0.5,12,ml_signal,9,"Inheritance from a base class, indicating a pattern of extending functionality",,0,# 聚宽编码,"[2, 5525, 223, 248, 22522, 121, 163, 120, 244, 163, 254, 223]"
"🧠 ML Signal: Use of class attributes for configuration, common in data processing classes","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1398, 12608, 329, 8398, 11, 2219, 287, 1366, 7587, 6097]",0.5,23,ml_signal,11,"Use of class attributes for configuration, common in data processing classes",,12,# 322002	上海A股,"[2, 38831, 21601, 197, 41468, 38184, 115, 32, 164, 224, 94]"
"🧠 ML Signal: Use of class attributes for configuration, common in data processing classes","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1398, 12608, 329, 8398, 11, 2219, 287, 1366, 7587, 6097]",0.5,73,ml_signal,13,"Use of class attributes for configuration, common in data processing classes",,23,# 322004	深圳市场	该市场交易所未公布成交量和成交笔数,"[2, 38831, 22914, 197, 162, 115, 109, 28839, 111, 30585, 224, 28839, 118, 197, 46237, 98, 30585, 224, 28839, 118, 12859, 97, 23626, 241, 33699, 222, 17312, 103, 17739, 105, 30585, 225, 22755, 238, 12859, 97, 34932, 237, 161, 240, 234, 22755, 238, 12859, 97, 163, 105, 242, 46763, 108]"
"🧠 ML Signal: Use of class attributes for configuration, common in data processing classes","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1398, 12608, 329, 8398, 11, 2219, 287, 1366, 7587, 6097]",0.5,123,ml_signal,13,"Use of class attributes for configuration, common in data processing classes",,73,# 322004	深圳市场	该市场交易所未公布成交量和成交笔数,"[2, 38831, 22914, 197, 162, 115, 109, 28839, 111, 30585, 224, 28839, 118, 197, 46237, 98, 30585, 224, 28839, 118, 12859, 97, 23626, 241, 33699, 222, 17312, 103, 17739, 105, 30585, 225, 22755, 238, 12859, 97, 34932, 237, 161, 240, 234, 22755, 238, 12859, 97, 163, 105, 242, 46763, 108]"
"🧠 ML Signal: Use of class attributes for configuration, common in data processing classes","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1398, 12608, 329, 8398, 11, 2219, 287, 1366, 7587, 6097]",0.5,173,ml_signal,13,"Use of class attributes for configuration, common in data processing classes",,123,# 322004	深圳市场	该市场交易所未公布成交量和成交笔数,"[2, 38831, 22914, 197, 162, 115, 109, 28839, 111, 30585, 224, 28839, 118, 197, 46237, 98, 30585, 224, 28839, 118, 12859, 97, 23626, 241, 33699, 222, 17312, 103, 17739, 105, 30585, 225, 22755, 238, 12859, 97, 34932, 237, 161, 240, 234, 22755, 238, 12859, 97, 163, 105, 242, 46763, 108]"
✅ Best Practice: Use of a list to store multiple codes for better organization and readability,"[26486, 227, 6705, 19939, 25, 5765, 286, 257, 1351, 284, 3650, 3294, 12416, 329, 1365, 4009, 290, 1100, 1799]",1.0,181,best_practice,28,Use of a list to store multiple codes for better organization and readability,,173,    def __init__(,"[220, 220, 220, 825, 11593, 15003, 834, 7]"
🧠 ML Signal: Use of a superclass constructor with multiple parameters indicates a pattern for inheritance and initialization,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 2208, 4871, 23772, 351, 3294, 10007, 9217, 257, 3912, 329, 24155, 290, 37588]",0.5,190,ml_signal,29,Use of a superclass constructor with multiple parameters indicates a pattern for inheritance and initialization,,181,"        self,","[220, 220, 220, 220, 220, 220, 220, 2116, 11]"
✅ Best Practice: Passing a predefined list of codes to the superclass for better maintainability,"[26486, 227, 6705, 19939, 25, 46389, 257, 2747, 18156, 1351, 286, 12416, 284, 262, 2208, 4871, 329, 1365, 5529, 1799]",0.5,219,best_practice,44,Passing a predefined list of codes to the superclass for better maintainability,,190,"        codes = [""000001"", ""399106"", ""399001"", ""399005"", ""399006""]","[220, 220, 220, 220, 220, 220, 220, 12416, 796, 14631, 2388, 486, 1600, 366, 28771, 15801, 1600, 366, 28771, 8298, 1600, 366, 28771, 22544, 1600, 366, 28771, 28041, 8973]"
🧠 ML Signal: Usage of a mapping dictionary to retrieve values based on entity code,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 16855, 22155, 284, 19818, 3815, 1912, 319, 9312, 2438]",0.5,232,ml_signal,45,Usage of a mapping dictionary to retrieve values based on entity code,,219,        super().__init__(,"[220, 220, 220, 220, 220, 220, 220, 2208, 22446, 834, 15003, 834, 7]"
🧠 ML Signal: Querying a database table with specific conditions,"[8582, 100, 254, 10373, 26484, 25, 2264, 263, 1112, 257, 6831, 3084, 351, 2176, 3403]",0.5,247,ml_signal,46,Querying a database table with specific conditions,,232,"            force_update,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2700, 62, 19119, 11]"
⚠️ SAST Risk (Medium): Potential SQL injection risk if `to_time_str(start)` is not properly sanitized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 32480, 16363, 16954, 2526, 611, 4600, 1462, 62, 2435, 62, 2536, 7, 9688, 8, 63, 318, 407, 6105, 5336, 36951]",0.5,262,sast_risk,46,Potential SQL injection risk if `to_time_str(start)` is not properly sanitized,Medium,247,"            force_update,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2700, 62, 19119, 11]"
✅ Best Practice: Consider using logging instead of print for better control over output,"[26486, 227, 6705, 19939, 25, 12642, 1262, 18931, 2427, 286, 3601, 329, 1365, 1630, 625, 5072]",0.5,281,best_practice,54,Consider using logging instead of print for better control over output,,262,"            ignore_failed=ignore_failed,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 8856, 62, 47904, 28, 46430, 62, 47904, 11]"
🧠 ML Signal: Iterating over DataFrame records and converting them to a list of dictionaries,"[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 6060, 19778, 4406, 290, 23202, 606, 284, 257, 1351, 286, 48589, 3166]",0.5,300,ml_signal,54,Iterating over DataFrame records and converting them to a list of dictionaries,,281,"            ignore_failed=ignore_failed,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 8856, 62, 47904, 28, 46430, 62, 47904, 11]"
🧠 ML Signal: Usage of a utility function to convert numbers,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 10361, 2163, 284, 10385, 3146]",0.5,328,ml_signal,65,Usage of a utility function to convert numbers,,300,"            table=""finance.STK_EXCHANGE_TRADE_INFO"",","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 3084, 2625, 69, 14149, 13, 2257, 42, 62, 6369, 3398, 27746, 62, 5446, 19266, 62, 10778, 1600]"
🧠 ML Signal: Conditional logic based on the length of a list,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9156, 1912, 319, 262, 4129, 286, 257, 1351]",1.0,328,ml_signal,72,Conditional logic based on the length of a list,,328,,[]
✅ Best Practice: Consider adding a docstring to describe the purpose of this method.,"[26486, 227, 6705, 19939, 25, 12642, 4375, 257, 2205, 8841, 284, 6901, 262, 4007, 286, 428, 2446, 13]",0.5,340,best_practice,71,Consider adding a docstring to describe the purpose of this method.,,328,        json_results = [],"[220, 220, 220, 220, 220, 220, 220, 33918, 62, 43420, 796, 17635]"
⚠️ SAST Risk (Low): Ensure that StockSummaryRecorder is defined before use to avoid NameError.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 326, 10500, 22093, 6690, 2875, 318, 5447, 878, 779, 284, 3368, 6530, 12331, 13]",0.5,362,sast_risk,73,Ensure that StockSummaryRecorder is defined before use to avoid NameError.,Low,340,"        for item in df.to_dict(orient=""records""):","[220, 220, 220, 220, 220, 220, 220, 329, 2378, 287, 47764, 13, 1462, 62, 11600, 7, 13989, 2625, 8344, 3669, 1, 2599]"
🧠 ML Signal: Usage of the main guard pattern to execute code only when the script is run directly.,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 262, 1388, 4860, 3912, 284, 12260, 2438, 691, 618, 262, 4226, 318, 1057, 3264, 13]",0.5,384,ml_signal,73,Usage of the main guard pattern to execute code only when the script is run directly.,,362,"        for item in df.to_dict(orient=""records""):","[220, 220, 220, 220, 220, 220, 220, 329, 2378, 287, 47764, 13, 1462, 62, 11600, 7, 13989, 2625, 8344, 3669, 1, 2599]"
✅ Best Practice: Use of __all__ to define the public interface of the module.,"[26486, 227, 6705, 19939, 25, 5765, 286, 11593, 439, 834, 284, 8160, 262, 1171, 7071, 286, 262, 8265, 13]",1.0,406,best_practice,73,Use of __all__ to define the public interface of the module.,,384,"        for item in df.to_dict(orient=""records""):","[220, 220, 220, 220, 220, 220, 220, 329, 2378, 287, 47764, 13, 1462, 62, 11600, 7, 13989, 2625, 8344, 3669, 1, 2599]"
