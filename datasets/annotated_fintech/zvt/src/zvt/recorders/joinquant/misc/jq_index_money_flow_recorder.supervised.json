[
  {
    "line": 2,
    "text": "import pandas as pd",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      11748,
      19798,
      292,
      355,
      279,
      67
    ],
    "start_token": 0,
    "end_token": 6,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 4,
    "text": "from zvt.contract import IntervalLevel",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      28484,
      1330,
      4225,
      2100,
      4971
    ],
    "start_token": 6,
    "end_token": 15,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 6,
    "text": "from zvt.contract.recorder import FixedCycleDataRecorder",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      28484,
      13,
      8344,
      2875,
      1330,
      10832,
      20418,
      2375,
      6601,
      6690,
      2875
    ],
    "start_token": 15,
    "end_token": 30,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 8,
    "text": "from zvt.utils.pd_utils import pd_is_not_null",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      30094,
      62,
      26791,
      1330,
      279,
      67,
      62,
      271,
      62,
      1662,
      62,
      8423
    ],
    "start_token": 30,
    "end_token": 48,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 10,
    "text": "",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 48,
    "end_token": 48,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 12,
    "text": "class JoinquantIndexMoneyFlowRecorder(FixedCycleDataRecorder):",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      4871,
      15251,
      40972,
      15732,
      26788,
      37535,
      6690,
      2875,
      7,
      13715,
      20418,
      2375,
      6601,
      6690,
      2875,
      2599
    ],
    "start_token": 48,
    "end_token": 64,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 9,
    "text": "from zvt.utils.time_utils import to_time_str",
    "annotation": "\ud83e\udde0 ML Signal: Inheritance from a specific base class indicates a design pattern or framework usage",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      2435,
      62,
      26791,
      1330,
      284,
      62,
      2435,
      62,
      2536
    ],
    "start_token": 64,
    "end_token": 79,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47025,
      42942,
      422,
      257,
      2176,
      2779,
      1398,
      9217,
      257,
      1486,
      3912,
      393,
      9355,
      8748
    ],
    "label": "ml_signal",
    "reason": "Inheritance from a specific base class indicates a design pattern or framework usage"
  },
  {
    "line": 11,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Hardcoded string values can indicate configuration or categorical data",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 79,
    "end_token": 79,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6912,
      40976,
      4731,
      3815,
      460,
      7603,
      8398,
      393,
      4253,
      12409,
      1366
    ],
    "label": "ml_signal",
    "reason": "Hardcoded string values can indicate configuration or categorical data"
  },
  {
    "line": 13,
    "text": "    entity_provider = \"exchange\"",
    "annotation": "\ud83e\udde0 ML Signal: Use of specific schema class can indicate data structure or domain model",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      15234,
      1304,
      796,
      366,
      1069,
      3803,
      1
    ],
    "start_token": 79,
    "end_token": 91,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2176,
      32815,
      1398,
      460,
      7603,
      1366,
      4645,
      393,
      7386,
      2746
    ],
    "label": "ml_signal",
    "reason": "Use of specific schema class can indicate data structure or domain model"
  },
  {
    "line": 13,
    "text": "    entity_provider = \"exchange\"",
    "annotation": "\ud83e\udde0 ML Signal: Hardcoded string values can indicate configuration or categorical data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      15234,
      1304,
      796,
      366,
      1069,
      3803,
      1
    ],
    "start_token": 91,
    "end_token": 103,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6912,
      40976,
      4731,
      3815,
      460,
      7603,
      8398,
      393,
      4253,
      12409,
      1366
    ],
    "label": "ml_signal",
    "reason": "Hardcoded string values can indicate configuration or categorical data"
  },
  {
    "line": 13,
    "text": "    entity_provider = \"exchange\"",
    "annotation": "\ud83e\udde0 ML Signal: Use of specific schema class can indicate data structure or domain model",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      15234,
      1304,
      796,
      366,
      1069,
      3803,
      1
    ],
    "start_token": 103,
    "end_token": 115,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2176,
      32815,
      1398,
      460,
      7603,
      1366,
      4645,
      393,
      7386,
      2746
    ],
    "label": "ml_signal",
    "reason": "Use of specific schema class can indicate data structure or domain model"
  },
  {
    "line": 34,
    "text": "        end_timestamp=None,",
    "annotation": "\u2705 Best Practice: Use of a list to define default supported codes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      886,
      62,
      16514,
      27823,
      28,
      14202,
      11
    ],
    "start_token": 115,
    "end_token": 129,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      257,
      1351,
      284,
      8160,
      4277,
      4855,
      12416
    ],
    "label": "best_practice",
    "reason": "Use of a list to define default supported codes"
  },
  {
    "line": 36,
    "text": "        kdata_use_begin_time=False,",
    "annotation": "\u2705 Best Practice: Assign default codes if none are provided",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      479,
      7890,
      62,
      1904,
      62,
      27471,
      62,
      2435,
      28,
      25101,
      11
    ],
    "start_token": 129,
    "end_token": 147,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2195,
      570,
      4277,
      12416,
      611,
      4844,
      389,
      2810
    ],
    "label": "best_practice",
    "reason": "Assign default codes if none are provided"
  },
  {
    "line": 39,
    "text": "    ) -> None:",
    "annotation": "\u2705 Best Practice: Use of set intersection to filter supported codes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1267,
      4613,
      6045,
      25
    ],
    "start_token": 147,
    "end_token": 154,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      900,
      16246,
      284,
      8106,
      4855,
      12416
    ],
    "label": "best_practice",
    "reason": "Use of set intersection to filter supported codes"
  },
  {
    "line": 39,
    "text": "    ) -> None:",
    "annotation": "\u2705 Best Practice: Proper use of super() to initialize the parent class",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1267,
      4613,
      6045,
      25
    ],
    "start_token": 154,
    "end_token": 161,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      45989,
      779,
      286,
      2208,
      3419,
      284,
      41216,
      262,
      2560,
      1398
    ],
    "label": "best_practice",
    "reason": "Proper use of super() to initialize the parent class"
  },
  {
    "line": 60,
    "text": "            end_timestamp,",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on entity code",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      886,
      62,
      16514,
      27823,
      11
    ],
    "start_token": 161,
    "end_token": 177,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      9312,
      2438
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on entity code"
  },
  {
    "line": 61,
    "text": "            level,",
    "annotation": "\ud83e\udde0 ML Signal: Querying data with specific filters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1241,
      11
    ],
    "start_token": 177,
    "end_token": 190,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      351,
      2176,
      16628
    ],
    "label": "ml_signal",
    "reason": "Querying data with specific filters"
  },
  {
    "line": 78,
    "text": "        # \u521b\u4e1a\u677f",
    "annotation": "\u2705 Best Practice: Check if DataFrame is not null before processing",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      10263,
      230,
      249,
      10310,
      248,
      30266,
      123
    ],
    "start_token": 190,
    "end_token": 205,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      611,
      6060,
      19778,
      318,
      407,
      9242,
      878,
      7587
    ],
    "label": "best_practice",
    "reason": "Check if DataFrame is not null before processing"
  },
  {
    "line": 79,
    "text": "        elif entity.code == \"399006\":",
    "annotation": "\ud83e\udde0 ML Signal: Grouping data by timestamp",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1288,
      361,
      9312,
      13,
      8189,
      6624,
      366,
      28771,
      28041,
      1298
    ],
    "start_token": 205,
    "end_token": 222,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      4912,
      278,
      1366,
      416,
      41033
    ],
    "label": "ml_signal",
    "reason": "Grouping data by timestamp"
  },
  {
    "line": 79,
    "text": "        elif entity.code == \"399006\":",
    "annotation": "\ud83e\udde0 ML Signal: Creating a series with specific data",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1288,
      361,
      9312,
      13,
      8189,
      6624,
      366,
      28771,
      28041,
      1298
    ],
    "start_token": 222,
    "end_token": 239,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      30481,
      257,
      2168,
      351,
      2176,
      1366
    ],
    "label": "ml_signal",
    "reason": "Creating a series with specific data"
  },
  {
    "line": 103,
    "text": "                    \"net_huge_inflows\",",
    "annotation": "\ud83e\udde0 ML Signal: Summing up specific columns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      3262,
      62,
      40878,
      62,
      259,
      44041,
      1600
    ],
    "start_token": 239,
    "end_token": 266,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5060,
      2229,
      510,
      2176,
      15180
    ],
    "label": "ml_signal",
    "reason": "Summing up specific columns"
  },
  {
    "line": 109,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Calculating average rates",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 266,
    "end_token": 266,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      27131,
      803,
      2811,
      3965
    ],
    "label": "ml_signal",
    "reason": "Calculating average rates"
  },
  {
    "line": 111,
    "text": "                    \"net_main_inflow_rate\",",
    "annotation": "\u2705 Best Practice: Convert series to DataFrame for logging and database operations",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      3262,
      62,
      12417,
      62,
      259,
      11125,
      62,
      4873,
      1600
    ],
    "start_token": 266,
    "end_token": 295,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      38240,
      2168,
      284,
      6060,
      19778,
      329,
      18931,
      290,
      6831,
      4560
    ],
    "label": "best_practice",
    "reason": "Convert series to DataFrame for logging and database operations"
  },
  {
    "line": 112,
    "text": "                    \"net_huge_inflow_rate\",",
    "annotation": "\ud83e\udde0 ML Signal: Logging the DataFrame",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      3262,
      62,
      40878,
      62,
      259,
      11125,
      62,
      4873,
      1600
    ],
    "start_token": 295,
    "end_token": 324,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      262,
      6060,
      19778
    ],
    "label": "ml_signal",
    "reason": "Logging the DataFrame"
  },
  {
    "line": 112,
    "text": "                    \"net_huge_inflow_rate\",",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Ensure df_to_db handles SQL injection safely",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      3262,
      62,
      40878,
      62,
      259,
      11125,
      62,
      4873,
      1600
    ],
    "start_token": 324,
    "end_token": 353,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      48987,
      47764,
      62,
      1462,
      62,
      9945,
      17105,
      16363,
      16954,
      11512
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Ensure df_to_db handles SQL injection safely"
  },
  {
    "line": 112,
    "text": "                    \"net_huge_inflow_rate\",",
    "annotation": "\ud83e\udde0 ML Signal: Running the recorder with a specific start timestamp",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      3262,
      62,
      40878,
      62,
      259,
      11125,
      62,
      4873,
      1600
    ],
    "start_token": 353,
    "end_token": 382,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      18162,
      262,
      38156,
      351,
      257,
      2176,
      923,
      41033
    ],
    "label": "ml_signal",
    "reason": "Running the recorder with a specific start timestamp"
  },
  {
    "line": 112,
    "text": "                    \"net_huge_inflow_rate\",",
    "annotation": "\u2705 Best Practice: Define __all__ for module exports",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      3262,
      62,
      40878,
      62,
      259,
      11125,
      62,
      4873,
      1600
    ],
    "start_token": 382,
    "end_token": 411,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      500,
      11593,
      439,
      834,
      329,
      8265,
      15319
    ],
    "label": "best_practice",
    "reason": "Define __all__ for module exports"
  }
]