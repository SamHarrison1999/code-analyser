annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
🧠 ML Signal: Importing specific functions from a module indicates selective usage patterns,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 5499, 422, 257, 8265, 9217, 21792, 8748, 7572]",1.0,11,ml_signal,2,Importing specific functions from a module indicates selective usage patterns,,0,from jqdatapy.api import run_query,"[6738, 474, 80, 19608, 12826, 13, 15042, 1330, 1057, 62, 22766]"
🧠 ML Signal: Importing specific functions from a module indicates selective usage patterns,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 5499, 422, 257, 8265, 9217, 21792, 8748, 7572]",1.0,28,ml_signal,4,Importing specific functions from a module indicates selective usage patterns,,11,"from zvt.contract.api import df_to_db, get_data","[6738, 1976, 36540, 13, 28484, 13, 15042, 1330, 47764, 62, 1462, 62, 9945, 11, 651, 62, 7890]"
🧠 ML Signal: Importing specific classes from a module indicates selective usage patterns,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 6097, 422, 257, 8265, 9217, 21792, 8748, 7572]",1.0,35,ml_signal,6,Importing specific classes from a module indicates selective usage patterns,,28,from zvt.domain import Index,"[6738, 1976, 36540, 13, 27830, 1330, 12901]"
🧠 ML Signal: Importing specific classes from a module indicates selective usage patterns,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 6097, 422, 257, 8265, 9217, 21792, 8748, 7572]",1.0,53,ml_signal,8,Importing specific classes from a module indicates selective usage patterns,,35,from zvt.recorders.joinquant.common import to_entity_id,"[6738, 1976, 36540, 13, 8344, 6361, 13, 7639, 18934, 415, 13, 11321, 1330, 284, 62, 26858, 62, 312]"
🧠 ML Signal: Importing specific classes from a module indicates selective usage patterns,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 6097, 422, 257, 8265, 9217, 21792, 8748, 7572]",1.0,82,ml_signal,10,Importing specific classes from a module indicates selective usage patterns,,53,"from zvt.utils.time_utils import to_time_str, TIME_FORMAT_DAY, to_pd_timestamp","[6738, 1976, 36540, 13, 26791, 13, 2435, 62, 26791, 1330, 284, 62, 2435, 62, 2536, 11, 20460, 62, 21389, 1404, 62, 26442, 11, 284, 62, 30094, 62, 16514, 27823]"
🧠 ML Signal: Importing specific functions from a module indicates selective usage patterns,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 5499, 422, 257, 8265, 9217, 21792, 8748, 7572]",1.0,82,ml_signal,12,Importing specific functions from a module indicates selective usage patterns,,82,,[]
🧠 ML Signal: Importing specific functions from a module indicates selective usage patterns,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 5499, 422, 257, 8265, 9217, 21792, 8748, 7572]",1.0,143,ml_signal,14,Importing specific functions from a module indicates selective usage patterns,,82,"# 1)时间上就是交易日的列表,这个是可知的，可以以此为增量计算点","[2, 352, 8, 33768, 114, 29785, 112, 41468, 22887, 109, 42468, 12859, 97, 23626, 241, 33768, 98, 21410, 26344, 245, 26193, 101, 11, 32573, 247, 10310, 103, 42468, 20998, 107, 163, 253, 98, 21410, 171, 120, 234, 20998, 107, 20015, 98, 20015, 98, 29826, 97, 10310, 118, 161, 95, 252, 34932, 237, 164, 106, 94, 163, 106, 245, 163, 224, 117]"
🧠 ML Signal: Importing specific functions from a module indicates selective usage patterns,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 5499, 422, 257, 8265, 9217, 21792, 8748, 7572]",1.0,171,ml_signal,15,Importing specific functions from a module indicates selective usage patterns,,143,# 2)HkHolder数据结构的设计：,"[2, 362, 8, 39, 74, 39, 19892, 46763, 108, 162, 235, 106, 163, 119, 241, 162, 252, 226, 21410, 164, 106, 122, 164, 106, 94, 171, 120, 248]"
✅ Best Practice: Class attributes should be documented to explain their purpose and usage.,"[26486, 227, 6705, 19939, 25, 5016, 12608, 815, 307, 12395, 284, 4727, 511, 4007, 290, 8748, 13]",0.5,171,best_practice,11,Class attributes should be documented to explain their purpose and usage.,,171,,[]
✅ Best Practice: Class attributes should be documented to explain their purpose and usage.,"[26486, 227, 6705, 19939, 25, 5016, 12608, 815, 307, 12395, 284, 4727, 511, 4007, 290, 8748, 13]",0.5,198,best_practice,13,Class attributes should be documented to explain their purpose and usage.,,171,# 这里选择继承TimestampsDataRecorder是因为,"[2, 5525, 123, 247, 34932, 234, 34460, 231, 162, 233, 102, 163, 119, 100, 33699, 123, 14967, 395, 9430, 6601, 6690, 2875, 42468, 32368, 254, 10310, 118]"
✅ Best Practice: Class attributes should be documented to explain their purpose and usage.,"[26486, 227, 6705, 19939, 25, 5016, 12608, 815, 307, 12395, 284, 4727, 511, 4007, 290, 8748, 13]",0.5,226,best_practice,15,Class attributes should be documented to explain their purpose and usage.,,198,# 2)HkHolder数据结构的设计：,"[2, 362, 8, 39, 74, 39, 19892, 46763, 108, 162, 235, 106, 163, 119, 241, 162, 252, 226, 21410, 164, 106, 122, 164, 106, 94, 171, 120, 248]"
✅ Best Practice: Class attributes should be documented to explain their purpose and usage.,"[26486, 227, 6705, 19939, 25, 5016, 12608, 815, 307, 12395, 284, 4727, 511, 4007, 290, 8748, 13]",0.5,254,best_practice,15,Class attributes should be documented to explain their purpose and usage.,,226,# 2)HkHolder数据结构的设计：,"[2, 362, 8, 39, 74, 39, 19892, 46763, 108, 162, 235, 106, 163, 119, 241, 162, 252, 226, 21410, 164, 106, 122, 164, 106, 94, 171, 120, 248]"
✅ Best Practice: Use of default values for function parameters improves usability and reduces errors.,"[26486, 227, 6705, 19939, 25, 5765, 286, 4277, 3815, 329, 2163, 10007, 19575, 42863, 290, 12850, 8563, 13]",1.0,264,best_practice,24,Use of default values for function parameters improves usability and reduces errors.,,254,"    provider = ""joinquant""","[220, 220, 220, 10131, 796, 366, 7639, 18934, 415, 1]"
🧠 ML Signal: Use of hardcoded values can indicate specific business logic or domain-specific constants.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1327, 40976, 3815, 460, 7603, 2176, 1597, 9156, 393, 7386, 12, 11423, 38491, 13]",1.0,276,ml_signal,25,Use of hardcoded values can indicate specific business logic or domain-specific constants.,,264,    data_schema = HkHolder,"[220, 220, 220, 1366, 62, 15952, 2611, 796, 367, 74, 39, 19892]"
✅ Best Practice: Calling the superclass's __init__ method ensures proper initialization of the base class.,"[26486, 227, 6705, 19939, 25, 32677, 262, 2208, 4871, 338, 11593, 15003, 834, 2446, 19047, 1774, 37588, 286, 262, 2779, 1398, 13]",1.0,295,best_practice,39,Calling the superclass's __init__ method ensures proper initialization of the base class.,,276,        # 310002	深股通,"[220, 220, 220, 220, 220, 220, 220, 1303, 3261, 34215, 197, 162, 115, 109, 164, 224, 94, 34460, 248]"
✅ Best Practice: Consider adding a docstring to describe the purpose and parameters of the function,"[26486, 227, 6705, 19939, 25, 12642, 4375, 257, 2205, 8841, 284, 6901, 262, 4007, 290, 10007, 286, 262, 2163]",1.0,328,best_practice,37,Consider adding a docstring to describe the purpose and parameters of the function,,295,        # 市场通编码	市场通名称,"[220, 220, 220, 220, 220, 220, 220, 1303, 10263, 116, 224, 28839, 118, 34460, 248, 163, 120, 244, 163, 254, 223, 197, 30585, 224, 28839, 118, 34460, 248, 28938, 235, 163, 100, 108]"
🧠 ML Signal: Usage of pandas date_range to generate a list of business days,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 19798, 292, 3128, 62, 9521, 284, 7716, 257, 1351, 286, 1597, 1528]",1.0,347,ml_signal,39,Usage of pandas date_range to generate a list of business days,,328,        # 310002	深股通,"[220, 220, 220, 220, 220, 220, 220, 1303, 3261, 34215, 197, 162, 115, 109, 164, 224, 94, 34460, 248]"
✅ Best Practice: Use a consistent date format for better readability and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 257, 6414, 3128, 5794, 329, 1365, 1100, 1799, 290, 5529, 1799]",0.5,376,best_practice,40,Use a consistent date format for better readability and maintainability,,347,        # 310003	港股通（沪）,"[220, 220, 220, 220, 220, 220, 220, 1303, 3261, 830, 18, 197, 162, 116, 107, 164, 224, 94, 34460, 248, 171, 120, 230, 162, 110, 103, 171, 120, 231]"
⚠️ SAST Risk (High): Use of eval() can lead to code injection vulnerabilities if input is not properly sanitized.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 11922, 2599, 5765, 286, 5418, 3419, 460, 1085, 284, 2438, 16954, 23805, 611, 5128, 318, 407, 6105, 5336, 36951, 13]",1.0,395,sast_risk,39,Use of eval() can lead to code injection vulnerabilities if input is not properly sanitized.,High,376,        # 310002	深股通,"[220, 220, 220, 220, 220, 220, 220, 1303, 3261, 34215, 197, 162, 115, 109, 164, 224, 94, 34460, 248]"
🧠 ML Signal: Dynamic method invocation using eval() indicates a pattern of flexible code execution.,"[8582, 100, 254, 10373, 26484, 25, 26977, 2446, 43219, 1262, 5418, 3419, 9217, 257, 3912, 286, 12846, 2438, 9706, 13]",1.0,424,ml_signal,41,Dynamic method invocation using eval() indicates a pattern of flexible code execution.,,395,        # 310004	港股通（深）,"[220, 220, 220, 220, 220, 220, 220, 1303, 3261, 830, 19, 197, 162, 116, 107, 164, 224, 94, 34460, 248, 171, 120, 230, 162, 115, 109, 171, 120, 231]"
🧠 ML Signal: Use of external data fetching function with filters and parameters.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 7097, 1366, 21207, 278, 2163, 351, 16628, 290, 10007, 13]",1.0,453,ml_signal,41,Use of external data fetching function with filters and parameters.,,424,        # 310004	港股通（深）,"[220, 220, 220, 220, 220, 220, 220, 1303, 3261, 830, 19, 197, 162, 116, 107, 164, 224, 94, 34460, 248, 171, 120, 230, 162, 115, 109, 171, 120, 231]"
🧠 ML Signal: Filtering data based on entity attributes.,"[8582, 100, 254, 10373, 26484, 25, 7066, 20212, 1366, 1912, 319, 9312, 12608, 13]",1.0,482,ml_signal,41,Filtering data based on entity attributes.,,453,        # 310004	港股通（深）,"[220, 220, 220, 220, 220, 220, 220, 1303, 3261, 830, 19, 197, 162, 116, 107, 164, 224, 94, 34460, 248, 171, 120, 230, 162, 115, 109, 171, 120, 231]"
🧠 ML Signal: Use of provider pattern for data access.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 10131, 3912, 329, 1366, 1895, 13]",1.0,497,ml_signal,50,Use of provider pattern for data access.,,482,"            day_data,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1110, 62, 7890, 11]"
🧠 ML Signal: Use of data schema for structured data retrieval.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1366, 32815, 329, 20793, 1366, 45069, 13]",1.0,512,ml_signal,50,Use of data schema for structured data retrieval.,,497,"            day_data,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1110, 62, 7890, 11]"
🧠 ML Signal: Ordering data dynamically.,"[8582, 100, 254, 10373, 26484, 25, 8284, 278, 1366, 32366, 13]",1.0,531,ml_signal,51,Ordering data dynamically.,,512,"            real_time=real_time,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1103, 62, 2435, 28, 5305, 62, 2435, 11]"
🧠 ML Signal: Limiting data retrieval to a specific number of records.,"[8582, 100, 254, 10373, 26484, 25, 7576, 1780, 1366, 45069, 284, 257, 2176, 1271, 286, 4406, 13]",1.0,552,ml_signal,53,Limiting data retrieval to a specific number of records.,,531,"            start_timestamp=start_timestamp,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 923, 62, 16514, 27823, 28, 9688, 62, 16514, 27823, 11]"
🧠 ML Signal: Specifying return type for data retrieval.,"[8582, 100, 254, 10373, 26484, 25, 18291, 4035, 1441, 2099, 329, 1366, 45069, 13]",1.0,560,ml_signal,55,Specifying return type for data retrieval.,,552,        ),"[220, 220, 220, 220, 220, 220, 220, 1267]"
🧠 ML Signal: Use of session for database operations.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6246, 329, 6831, 4560, 13]",1.0,591,ml_signal,58,Use of session for database operations.,,560,        # 聚宽数据从2017年3月17开始,"[220, 220, 220, 220, 220, 220, 220, 1303, 5525, 223, 248, 22522, 121, 46763, 108, 162, 235, 106, 20015, 236, 5539, 33176, 112, 18, 17312, 230, 1558, 28156, 222, 34650, 233]"
✅ Best Practice: Check if records list is not empty before accessing its elements.,"[26486, 227, 6705, 19939, 25, 6822, 611, 4406, 1351, 318, 407, 6565, 878, 22534, 663, 4847, 13]",1.0,591,best_practice,60,Check if records list is not empty before accessing its elements.,,591,,[]
🧠 ML Signal: Iterating over timestamps to process data for each timestamp,"[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 4628, 395, 9430, 284, 1429, 1366, 329, 1123, 41033]",1.0,612,ml_signal,54,Iterating over timestamps to process data for each timestamp,,591,"            end_timestamp=end_timestamp,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 886, 62, 16514, 27823, 28, 437, 62, 16514, 27823, 11]"
⚠️ SAST Risk (Low): Potential SQL injection risk if `entity.code` or `timestamp` are not sanitized,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 16363, 16954, 2526, 611, 4600, 26858, 13, 8189, 63, 393, 4600, 16514, 27823, 63, 389, 407, 5336, 36951]",0.5,620,sast_risk,55,Potential SQL injection risk if `entity.code` or `timestamp` are not sanitized,Low,612,        ),"[220, 220, 220, 220, 220, 220, 220, 1267]"
✅ Best Practice: Consider using logging instead of print for better control over output,"[26486, 227, 6705, 19939, 25, 12642, 1262, 18931, 2427, 286, 3601, 329, 1365, 1630, 625, 5072]",0.5,620,best_practice,60,Consider using logging instead of print for better control over output,,620,,[]
🧠 ML Signal: Checking if DataFrame is not null before processing,"[8582, 100, 254, 10373, 26484, 25, 39432, 611, 6060, 19778, 318, 407, 9242, 878, 7587]",0.5,657,ml_signal,63,Checking if DataFrame is not null before processing,,620,"        order = eval(""self.data_schema.{}.desc()"".format(self.get_evaluated_time_field()))","[220, 220, 220, 220, 220, 220, 220, 1502, 796, 5418, 7203, 944, 13, 7890, 62, 15952, 2611, 13, 90, 27422, 20147, 3419, 1911, 18982, 7, 944, 13, 1136, 62, 18206, 6605, 62, 2435, 62, 3245, 3419, 4008]"
✅ Best Practice: Use rename with a dictionary for clarity and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 36265, 351, 257, 22155, 329, 16287, 290, 5529, 1799]",0.5,657,best_practice,64,Use rename with a dictionary for clarity and maintainability,,657,,[]
✅ Best Practice: Ensure consistent datetime format for timestamps,"[26486, 227, 6705, 19939, 25, 48987, 6414, 4818, 8079, 5794, 329, 4628, 395, 9430]",0.5,683,best_practice,66,Ensure consistent datetime format for timestamps,,657,"            filters=[HkHolder.holder_code == entity.code],","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 16628, 41888, 39, 74, 39, 19892, 13, 13829, 62, 8189, 6624, 9312, 13, 8189, 4357]"
🧠 ML Signal: Mapping entity codes to entity IDs,"[8582, 100, 254, 10373, 26484, 25, 337, 5912, 9312, 12416, 284, 9312, 32373]",1.0,700,ml_signal,72,Mapping entity codes to entity IDs,,683,"            session=self.session,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 6246, 28, 944, 13, 29891, 11]"
🧠 ML Signal: Processing and modifying stock codes,"[8582, 100, 254, 10373, 26484, 25, 28403, 290, 30620, 4283, 12416]",0.5,717,ml_signal,72,Processing and modifying stock codes,,700,"            session=self.session,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 6246, 28, 944, 13, 29891, 11]"
🧠 ML Signal: Creating unique IDs for records,"[8582, 100, 254, 10373, 26484, 25, 30481, 3748, 32373, 329, 4406]",0.5,727,ml_signal,74,Creating unique IDs for records,,717,        if records:,"[220, 220, 220, 220, 220, 220, 220, 611, 4406, 25]"
⚠️ SAST Risk (Low): Ensure `df_to_db` handles data safely to prevent SQL injection,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 4600, 7568, 62, 1462, 62, 9945, 63, 17105, 1366, 11512, 284, 2948, 16363, 16954]",0.5,743,sast_risk,75,Ensure `df_to_db` handles data safely to prevent SQL injection,Low,727,            return records[0],"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441, 4406, 58, 15, 60]"
"✅ Best Practice: Use `if __name__ == ""__main__"":` to ensure code only runs when script is executed directly","[26486, 227, 6705, 19939, 25, 5765, 4600, 361, 11593, 3672, 834, 6624, 366, 834, 12417, 834, 1298, 63, 284, 4155, 2438, 691, 4539, 618, 4226, 318, 10945, 3264]",0.5,759,best_practice,75,"Use `if __name__ == ""__main__"":` to ensure code only runs when script is executed directly",,743,            return records[0],"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441, 4406, 58, 15, 60]"
🧠 ML Signal: Running a recorder with a specified sleeping time,"[8582, 100, 254, 10373, 26484, 25, 18162, 257, 38156, 351, 257, 7368, 11029, 640]",1.0,775,ml_signal,75,Running a recorder with a specified sleeping time,,759,            return records[0],"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441, 4406, 58, 15, 60]"
✅ Best Practice: Use `__all__` to define public API of the module,"[26486, 227, 6705, 19939, 25, 5765, 4600, 834, 439, 834, 63, 284, 8160, 1171, 7824, 286, 262, 8265]",0.5,791,best_practice,75,Use `__all__` to define public API of the module,,775,            return records[0],"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441, 4406, 58, 15, 60]"
