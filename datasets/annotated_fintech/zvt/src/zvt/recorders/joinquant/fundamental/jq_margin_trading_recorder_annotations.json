[
  {
    "line": 10,
    "text": "from zvt.utils.pd_utils import pd_is_not_null",
    "annotation": "\ud83e\udde0 ML Signal: Importing specific functions and classes indicates usage patterns and dependencies",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      30094,
      62,
      26791,
      1330,
      279,
      67,
      62,
      271,
      62,
      1662,
      62,
      8423
    ],
    "start_token": 0,
    "end_token": 18,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      2176,
      5499,
      290,
      6097,
      9217,
      8748,
      7572,
      290,
      20086
    ],
    "label": "ml_signal",
    "reason": "Importing specific functions and classes indicates usage patterns and dependencies"
  },
  {
    "line": 11,
    "text": "from zvt.utils.time_utils import to_time_str, TIME_FORMAT_DAY",
    "annotation": "\u2705 Best Practice: Grouping imports by functionality or source improves readability and maintainability",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      2435,
      62,
      26791,
      1330,
      284,
      62,
      2435,
      62,
      2536,
      11,
      20460,
      62,
      21389,
      1404,
      62,
      26442
    ],
    "start_token": 18,
    "end_token": 40,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      416,
      11244,
      393,
      2723,
      19575,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Grouping imports by functionality or source improves readability and maintainability"
  },
  {
    "line": 10,
    "text": "from zvt.utils.pd_utils import pd_is_not_null",
    "annotation": "\u2705 Best Practice: Use of class attributes for configuration and metadata",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      30094,
      62,
      26791,
      1330,
      279,
      67,
      62,
      271,
      62,
      1662,
      62,
      8423
    ],
    "start_token": 40,
    "end_token": 58,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      1398,
      12608,
      329,
      8398,
      290,
      20150
    ],
    "label": "best_practice",
    "reason": "Use of class attributes for configuration and metadata"
  },
  {
    "line": 12,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of class attributes for configuration and metadata",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 58,
    "end_token": 58,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      1398,
      12608,
      329,
      8398,
      290,
      20150
    ],
    "label": "best_practice",
    "reason": "Use of class attributes for configuration and metadata"
  },
  {
    "line": 14,
    "text": "class MarginTradingRecorder(TimeSeriesDataRecorder):",
    "annotation": "\u2705 Best Practice: Use of class attributes for configuration and metadata",
    "confidence": 0.5,
    "tokens": [
      4871,
      11899,
      259,
      2898,
      4980,
      6690,
      2875,
      7,
      7575,
      27996,
      6601,
      6690,
      2875,
      2599
    ],
    "start_token": 58,
    "end_token": 72,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      1398,
      12608,
      329,
      8398,
      290,
      20150
    ],
    "label": "best_practice",
    "reason": "Use of class attributes for configuration and metadata"
  },
  {
    "line": 16,
    "text": "    entity_schema = Stock",
    "annotation": "\u2705 Best Practice: Use of class attributes for configuration and metadata",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      15952,
      2611,
      796,
      10500
    ],
    "start_token": 72,
    "end_token": 81,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      1398,
      12608,
      329,
      8398,
      290,
      20150
    ],
    "label": "best_practice",
    "reason": "Use of class attributes for configuration and metadata"
  },
  {
    "line": 15,
    "text": "    entity_provider = \"joinquant\"",
    "annotation": "\ud83e\udde0 ML Signal: Function uses external data fetching and processing",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      15234,
      1304,
      796,
      366,
      7639,
      18934,
      415,
      1
    ],
    "start_token": 81,
    "end_token": 94,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      3544,
      7097,
      1366,
      21207,
      278,
      290,
      7587
    ],
    "label": "ml_signal",
    "reason": "Function uses external data fetching and processing"
  },
  {
    "line": 17,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential risk if get_mtss function does not handle input validation",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 94,
    "end_token": 94,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2526,
      611,
      651,
      62,
      16762,
      824,
      2163,
      857,
      407,
      5412,
      5128,
      21201
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential risk if get_mtss function does not handle input validation"
  },
  {
    "line": 19,
    "text": "    provider = \"joinquant\"",
    "annotation": "\u2705 Best Practice: Explicitly setting DataFrame columns for clarity",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      10131,
      796,
      366,
      7639,
      18934,
      415,
      1
    ],
    "start_token": 94,
    "end_token": 104,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11884,
      306,
      4634,
      6060,
      19778,
      15180,
      329,
      16287
    ],
    "label": "best_practice",
    "reason": "Explicitly setting DataFrame columns for clarity"
  },
  {
    "line": 21,
    "text": "    data_schema = MarginTrading",
    "annotation": "\u2705 Best Practice: Using rename with inplace=True for efficient DataFrame modification",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1366,
      62,
      15952,
      2611,
      796,
      11899,
      259,
      2898,
      4980
    ],
    "start_token": 104,
    "end_token": 116,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      36265,
      351,
      287,
      5372,
      28,
      17821,
      329,
      6942,
      6060,
      19778,
      17613
    ],
    "label": "best_practice",
    "reason": "Using rename with inplace=True for efficient DataFrame modification"
  },
  {
    "line": 24,
    "text": "        df = get_mtss(code=to_jq_entity_id(entity), date=to_time_str(start))",
    "annotation": "\u2705 Best Practice: Converting to datetime for consistent timestamp handling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      796,
      651,
      62,
      16762,
      824,
      7,
      8189,
      28,
      1462,
      62,
      73,
      80,
      62,
      26858,
      62,
      312,
      7,
      26858,
      828,
      3128,
      28,
      1462,
      62,
      2435,
      62,
      2536,
      7,
      9688,
      4008
    ],
    "start_token": 116,
    "end_token": 153,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      35602,
      889,
      284,
      4818,
      8079,
      329,
      6414,
      41033,
      9041
    ],
    "label": "best_practice",
    "reason": "Converting to datetime for consistent timestamp handling"
  },
  {
    "line": 26,
    "text": "        if pd_is_not_null(df):",
    "annotation": "\ud83e\udde0 ML Signal: Creation of unique identifiers for records",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      279,
      67,
      62,
      271,
      62,
      1662,
      62,
      8423,
      7,
      7568,
      2599
    ],
    "start_token": 153,
    "end_token": 172,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      21582,
      286,
      3748,
      42814,
      329,
      4406
    ],
    "label": "ml_signal",
    "reason": "Creation of unique identifiers for records"
  },
  {
    "line": 29,
    "text": "            df.rename(columns={\"date\": \"timestamp\"}, inplace=True)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Printing DataFrame can expose sensitive data in logs",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      13,
      918,
      480,
      7,
      28665,
      82,
      28,
      4895,
      4475,
      1298,
      366,
      16514,
      27823,
      25719,
      287,
      5372,
      28,
      17821,
      8
    ],
    "start_token": 172,
    "end_token": 203,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      44118,
      6060,
      19778,
      460,
      15651,
      8564,
      1366,
      287,
      17259
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Printing DataFrame can expose sensitive data in logs"
  },
  {
    "line": 29,
    "text": "            df.rename(columns={\"date\": \"timestamp\"}, inplace=True)",
    "annotation": "\ud83e\udde0 ML Signal: Storing processed data into a database",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      13,
      918,
      480,
      7,
      28665,
      82,
      28,
      4895,
      4475,
      1298,
      366,
      16514,
      27823,
      25719,
      287,
      5372,
      28,
      17821,
      8
    ],
    "start_token": 203,
    "end_token": 234,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      520,
      3255,
      13686,
      1366,
      656,
      257,
      6831
    ],
    "label": "ml_signal",
    "reason": "Storing processed data into a database"
  },
  {
    "line": 29,
    "text": "            df.rename(columns={\"date\": \"timestamp\"}, inplace=True)",
    "annotation": "\ud83e\udde0 ML Signal: Entry point for running the MarginTradingRecorder",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      13,
      918,
      480,
      7,
      28665,
      82,
      28,
      4895,
      4475,
      1298,
      366,
      16514,
      27823,
      25719,
      287,
      5372,
      28,
      17821,
      8
    ],
    "start_token": 234,
    "end_token": 265,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      21617,
      966,
      329,
      2491,
      262,
      11899,
      259,
      2898,
      4980,
      6690,
      2875
    ],
    "label": "ml_signal",
    "reason": "Entry point for running the MarginTradingRecorder"
  },
  {
    "line": 29,
    "text": "            df.rename(columns={\"date\": \"timestamp\"}, inplace=True)",
    "annotation": "\ud83e\udde0 ML Signal: Explicitly defining module exports",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      13,
      918,
      480,
      7,
      28665,
      82,
      28,
      4895,
      4475,
      1298,
      366,
      16514,
      27823,
      25719,
      287,
      5372,
      28,
      17821,
      8
    ],
    "start_token": 265,
    "end_token": 296,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11884,
      306,
      16215,
      8265,
      15319
    ],
    "label": "ml_signal",
    "reason": "Explicitly defining module exports"
  }
]