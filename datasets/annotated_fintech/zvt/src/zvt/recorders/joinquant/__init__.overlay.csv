annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
✅ Best Practice: Importing specific attributes from modules can improve code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 17267, 278, 2176, 12608, 422, 13103, 460, 2987, 2438, 1100, 1799, 290, 5529, 1799, 13]",0.5,0,best_practice,2,Importing specific attributes from modules can improve code readability and maintainability.,,0,,[]
⚠️ SAST Risk (Medium): Using wildcard imports can lead to namespace pollution and make it unclear which names are present.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 12231, 290, 787, 340, 10061, 543, 3891, 389, 1944, 13]",1.0,7,sast_risk,4,Using wildcard imports can lead to namespace pollution and make it unclear which names are present.,Medium,0,# the __all__ is generated,"[2, 262, 11593, 439, 834, 318, 7560]"
✅ Best Practice: Explicitly extending __all__ helps in controlling what is exported from the module.,"[26486, 227, 6705, 19939, 25, 11884, 306, 16610, 11593, 439, 834, 5419, 287, 12755, 644, 318, 29050, 422, 262, 8265, 13]",0.5,15,best_practice,7,Explicitly extending __all__ helps in controlling what is exported from the module.,,7,# __init__.py structure:,"[2, 11593, 15003, 834, 13, 9078, 4645, 25]"
⚠️ SAST Risk (Medium): Using wildcard imports can lead to namespace pollution and make it unclear which names are present.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 12231, 290, 787, 340, 10061, 543, 3891, 389, 1944, 13]",1.0,31,sast_risk,9,Using wildcard imports can lead to namespace pollution and make it unclear which names are present.,Medium,15,# export interface in __all__ which contains __all__ of its sub modules,"[2, 10784, 7071, 287, 11593, 439, 834, 543, 4909, 11593, 439, 834, 286, 663, 850, 13103]"
⚠️ SAST Risk (Medium): Using wildcard imports can lead to namespace pollution and make it unclear which names are present.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 12231, 290, 787, 340, 10061, 543, 3891, 389, 1944, 13]",1.0,45,sast_risk,13,Using wildcard imports can lead to namespace pollution and make it unclear which names are present.,Medium,31,from .overall import __all__ as _overall_all,"[6738, 764, 2502, 439, 1330, 11593, 439, 834, 355, 4808, 2502, 439, 62, 439]"
⚠️ SAST Risk (Medium): Using wildcard imports can lead to namespace pollution and make it unclear which names are present.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 12231, 290, 787, 340, 10061, 543, 3891, 389, 1944, 13]",1.0,52,sast_risk,17,Using wildcard imports can lead to namespace pollution and make it unclear which names are present.,Medium,45,# import all from submodule fundamental,"[2, 1330, 477, 422, 850, 21412, 7531]"
⚠️ SAST Risk (Medium): Using wildcard imports can lead to namespace pollution and make it unclear which names are present.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 12231, 290, 787, 340, 10061, 543, 3891, 389, 1944, 13]",1.0,66,sast_risk,19,Using wildcard imports can lead to namespace pollution and make it unclear which names are present.,Medium,52,from .fundamental import __all__ as _fundamental_all,"[6738, 764, 10990, 6860, 1330, 11593, 439, 834, 355, 4808, 10990, 6860, 62, 439]"
⚠️ SAST Risk (Medium): Using wildcard imports can lead to namespace pollution and make it unclear which names are present.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 12231, 290, 787, 340, 10061, 543, 3891, 389, 1944, 13]",1.0,80,sast_risk,19,Using wildcard imports can lead to namespace pollution and make it unclear which names are present.,Medium,66,from .fundamental import __all__ as _fundamental_all,"[6738, 764, 10990, 6860, 1330, 11593, 439, 834, 355, 4808, 10990, 6860, 62, 439]"
