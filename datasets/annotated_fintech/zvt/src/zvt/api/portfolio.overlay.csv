annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Grouping related imports together improves readability and maintainability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 3519, 17944, 1978, 19575, 1100, 1799, 290, 5529, 1799, 13]",1.0,4,best_practice,3,Grouping related imports together improves readability and maintainability.,,0,from typing import List,"[6738, 19720, 1330, 7343]"
‚úÖ Best Practice: Consider adding type hints for function parameters and return type for better readability and maintainability,"[26486, 227, 6705, 19939, 25, 12642, 4375, 2099, 20269, 329, 2163, 10007, 290, 1441, 2099, 329, 1365, 1100, 1799, 290, 5529, 1799]",0.5,14,best_practice,8,Consider adding type hints for function parameters and return type for better readability and maintainability,,4,from zvt.contract import PortfolioStockHistory,"[6738, 1976, 36540, 13, 28484, 1330, 4347, 13652, 26207, 18122]"
üß† ML Signal: Assigning attributes from one object to another is a common pattern,"[8582, 100, 254, 10373, 26484, 25, 2195, 38944, 12608, 422, 530, 2134, 284, 1194, 318, 257, 2219, 3912]",0.5,28,ml_signal,10,Assigning attributes from one object to another is a common pattern,,14,"from zvt.domain import ReportPeriod, Fund, Etf","[6738, 1976, 36540, 13, 27830, 1330, 6358, 5990, 2101, 11, 7557, 11, 17906, 69]"
üß† ML Signal: Assigning attributes from one object to another is a common pattern,"[8582, 100, 254, 10373, 26484, 25, 2195, 38944, 12608, 422, 530, 2134, 284, 1194, 318, 257, 2219, 3912]",0.5,28,ml_signal,12,Assigning attributes from one object to another is a common pattern,,28,,[]
üß† ML Signal: Assigning attributes from one object to another is a common pattern,"[8582, 100, 254, 10373, 26484, 25, 2195, 38944, 12608, 422, 530, 2134, 284, 1194, 318, 257, 2219, 3912]",0.5,40,ml_signal,14,Assigning attributes from one object to another is a common pattern,,28,"def portfolio_relate_stock(df, portfolio):","[4299, 15320, 62, 2411, 378, 62, 13578, 7, 7568, 11, 15320, 2599]"
üß† ML Signal: Assigning attributes from one object to another is a common pattern,"[8582, 100, 254, 10373, 26484, 25, 2195, 38944, 12608, 422, 530, 2134, 284, 1194, 318, 257, 2219, 3912]",0.5,55,ml_signal,15,Assigning attributes from one object to another is a common pattern,,40,"    df[""entity_id""] = portfolio.entity_id","[220, 220, 220, 47764, 14692, 26858, 62, 312, 8973, 796, 15320, 13, 26858, 62, 312]"
üß† ML Signal: Assigning attributes from one object to another is a common pattern,"[8582, 100, 254, 10373, 26484, 25, 2195, 38944, 12608, 422, 530, 2134, 284, 1194, 318, 257, 2219, 3912]",0.5,70,ml_signal,15,Assigning attributes from one object to another is a common pattern,,55,"    df[""entity_id""] = portfolio.entity_id","[220, 220, 220, 47764, 14692, 26858, 62, 312, 8973, 796, 15320, 13, 26858, 62, 312]"
"‚úÖ Best Practice: Ensure the function returns a value, which it does here","[26486, 227, 6705, 19939, 25, 48987, 262, 2163, 5860, 257, 1988, 11, 543, 340, 857, 994]",0.5,70,best_practice,20,"Ensure the function returns a value, which it does here",,70,,[]
‚úÖ Best Practice: Use f-string for dynamic string formatting,"[26486, 227, 6705, 19939, 25, 5765, 277, 12, 8841, 329, 8925, 4731, 33313]",1.0,70,best_practice,23,Use f-string for dynamic string formatting,,70,,[]
‚úÖ Best Practice: Type hinting improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5994, 9254, 278, 19575, 2438, 1100, 1799, 290, 5529, 1799]",1.0,78,best_practice,25,Type hinting improves code readability and maintainability,,70,def get_portfolio_stocks(,"[4299, 651, 62, 634, 13652, 62, 29522, 7]"
‚úÖ Best Practice: Type hinting improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5994, 9254, 278, 19575, 2438, 1100, 1799, 290, 5529, 1799]",1.0,86,best_practice,25,Type hinting improves code readability and maintainability,,78,def get_portfolio_stocks(,"[4299, 651, 62, 634, 13652, 62, 29522, 7]"
‚úÖ Best Practice: Use of constants for comparison improves readability,"[26486, 227, 6705, 19939, 25, 5765, 286, 38491, 329, 7208, 19575, 1100, 1799]",0.5,104,best_practice,46,Use of constants for comparison improves readability,,86,        df = data_schema.query_data(,"[220, 220, 220, 220, 220, 220, 220, 47764, 796, 1366, 62, 15952, 2611, 13, 22766, 62, 7890, 7]"
‚ö†Ô∏è SAST Risk (Low): Potential infinite loop if step condition is not met,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 15541, 9052, 611, 2239, 4006, 318, 407, 1138]",1.0,119,sast_risk,49,Potential infinite loop if step condition is not met,Low,104,"            codes=codes,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 12416, 28, 40148, 11]"
‚úÖ Best Practice: Descriptive variable names improve readability,"[26486, 227, 6705, 19939, 25, 2935, 6519, 425, 7885, 3891, 2987, 1100, 1799]",1.0,134,best_practice,49,Descriptive variable names improve readability,,119,"            codes=codes,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 12416, 28, 40148, 11]"
üß† ML Signal: Use of pd.concat indicates data aggregation pattern,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 279, 67, 13, 1102, 9246, 9217, 1366, 46500, 3912]",1.0,162,ml_signal,63,Use of pd.concat indicates data aggregation pattern,,134,                pre_df = data_schema.query_data(,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 662, 62, 7568, 796, 1366, 62, 15952, 2611, 13, 22766, 62, 7890, 7]"
‚úÖ Best Practice: Use of list comprehension for concise code,"[26486, 227, 6705, 19939, 25, 5765, 286, 1351, 35915, 329, 35327, 2438]",0.5,185,best_practice,65,Use of list comprehension for concise code,,162,"                    code=code,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2438, 28, 8189, 11]"
‚úÖ Best Practice: Use of drop_duplicates to ensure data integrity,"[26486, 227, 6705, 19939, 25, 5765, 286, 4268, 62, 646, 489, 16856, 284, 4155, 1366, 11540]",0.5,208,best_practice,65,Use of drop_duplicates to ensure data integrity,,185,"                    code=code,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2438, 28, 8189, 11]"
üß† ML Signal: Function with multiple optional parameters indicating flexible usage patterns,"[8582, 100, 254, 10373, 26484, 25, 15553, 351, 3294, 11902, 10007, 12739, 12846, 8748, 7572]",1.0,232,ml_signal,64,Function with multiple optional parameters indicating flexible usage patterns,,208,"                    provider=provider,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 10131, 28, 15234, 1304, 11]"
‚úÖ Best Practice: Use of default parameter values for flexibility and to avoid errors,"[26486, 227, 6705, 19939, 25, 5765, 286, 4277, 11507, 3815, 329, 13688, 290, 284, 3368, 8563]",1.0,255,best_practice,65,Use of default parameter values for flexibility and to avoid errors,,232,"                    code=code,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2438, 28, 8189, 11]"
üß† ML Signal: Delegation pattern by calling another function,"[8582, 100, 254, 10373, 26484, 25, 1024, 1455, 341, 3912, 416, 4585, 1194, 2163]",0.5,278,ml_signal,65,Delegation pattern by calling another function,,255,"                    code=code,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2438, 28, 8189, 11]"
üß† ML Signal: Use of specific class or type as a parameter,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2176, 1398, 393, 2099, 355, 257, 11507]",1.0,301,ml_signal,65,Use of specific class or type as a parameter,,278,"                    code=code,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2438, 28, 8189, 11]"
üß† ML Signal: Function with multiple optional parameters indicating flexible usage patterns,"[8582, 100, 254, 10373, 26484, 25, 15553, 351, 3294, 11902, 10007, 12739, 12846, 8748, 7572]",1.0,333,ml_signal,74,Function with multiple optional parameters indicating flexible usage patterns,,301,                # ÂçäÂπ¥Êä•ÂíåÂπ¥Êä•,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 10263, 235, 232, 33176, 112, 162, 232, 98, 161, 240, 234, 33176, 112, 162, 232, 98]"
‚úÖ Best Practice: Use of default parameters to enhance function flexibility,"[26486, 227, 6705, 19939, 25, 5765, 286, 4277, 10007, 284, 9494, 2163, 13688]",0.5,365,best_practice,74,Use of default parameters to enhance function flexibility,,333,                # ÂçäÂπ¥Êä•ÂíåÂπ¥Êä•,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 10263, 235, 232, 33176, 112, 162, 232, 98, 161, 240, 234, 33176, 112, 162, 232, 98]"
"üß† ML Signal: Delegating functionality to another function, indicating a common design pattern","[8582, 100, 254, 10373, 26484, 25, 1024, 1455, 803, 11244, 284, 1194, 2163, 11, 12739, 257, 2219, 1486, 3912]",1.0,397,ml_signal,74,"Delegating functionality to another function, indicating a common design pattern",,365,                # ÂçäÂπ¥Êä•ÂíåÂπ¥Êä•,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 10263, 235, 232, 33176, 112, 162, 232, 98, 161, 240, 234, 33176, 112, 162, 232, 98]"
‚úÖ Best Practice: Use of __all__ to define public API of the module,"[26486, 227, 6705, 19939, 25, 5765, 286, 11593, 439, 834, 284, 8160, 1171, 7824, 286, 262, 8265]",1.0,397,best_practice,82,Use of __all__ to define public API of the module,,397,,[]
