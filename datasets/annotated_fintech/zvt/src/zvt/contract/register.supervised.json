[
  {
    "line": 13,
    "text": "from zvt.contract.schema import TradableEntity, Mixin",
    "annotation": "\u2705 Best Practice: Consistent use of logging for debugging and monitoring",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      28484,
      13,
      15952,
      2611,
      1330,
      11974,
      32398,
      11,
      15561,
      259
    ],
    "start_token": 0,
    "end_token": 14,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      3515,
      7609,
      779,
      286,
      18931,
      329,
      28769,
      290,
      9904
    ],
    "label": "best_practice",
    "reason": "Consistent use of logging for debugging and monitoring"
  },
  {
    "line": 14,
    "text": "from zvt.utils.utils import add_to_map_list",
    "annotation": "\u2705 Best Practice: Use of type hints for function parameters improves code readability and maintainability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      26791,
      1330,
      751,
      62,
      1462,
      62,
      8899,
      62,
      4868
    ],
    "start_token": 14,
    "end_token": 29,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      20269,
      329,
      2163,
      10007,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Use of type hints for function parameters improves code readability and maintainability."
  },
  {
    "line": 22,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of class registration pattern",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 29,
    "end_token": 29,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1398,
      9352,
      3912
    ],
    "label": "ml_signal",
    "reason": "Use of class registration pattern"
  },
  {
    "line": 24,
    "text": "    :type entity_type:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential use of undefined variable 'entity_type'",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1058,
      4906,
      9312,
      62,
      4906,
      25
    ],
    "start_token": 29,
    "end_token": 38,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      779,
      286,
      28721,
      7885,
      705,
      26858,
      62,
      4906,
      6
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential use of undefined variable 'entity_type'"
  },
  {
    "line": 27,
    "text": "    \"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Dynamic determination of entity type based on class name",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      37227
    ],
    "start_token": 38,
    "end_token": 42,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      26977,
      12123,
      286,
      9312,
      2099,
      1912,
      319,
      1398,
      1438
    ],
    "label": "ml_signal",
    "reason": "Dynamic determination of entity type based on class name"
  },
  {
    "line": 30,
    "text": "        # register the entity",
    "annotation": "\ud83e\udde0 ML Signal: Use of list to track registered entity types",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      7881,
      262,
      9312
    ],
    "start_token": 42,
    "end_token": 53,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1351,
      284,
      2610,
      6823,
      9312,
      3858
    ],
    "label": "ml_signal",
    "reason": "Use of list to track registered entity types"
  },
  {
    "line": 32,
    "text": "            entity_type_ = entity_type",
    "annotation": "\ud83e\udde0 ML Signal: Use of list to track registered entity schemas",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      62,
      4906,
      62,
      796,
      9312,
      62,
      4906
    ],
    "start_token": 53,
    "end_token": 72,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1351,
      284,
      2610,
      6823,
      9312,
      3897,
      5356
    ],
    "label": "ml_signal",
    "reason": "Use of list to track registered entity schemas"
  },
  {
    "line": 32,
    "text": "            entity_type_ = entity_type",
    "annotation": "\ud83e\udde0 ML Signal: Use of dictionary to map entity types to schemas",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      62,
      4906,
      62,
      796,
      9312,
      62,
      4906
    ],
    "start_token": 72,
    "end_token": 91,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      22155,
      284,
      3975,
      9312,
      3858,
      284,
      3897,
      5356
    ],
    "label": "ml_signal",
    "reason": "Use of dictionary to map entity types to schemas"
  },
  {
    "line": 100,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Executing raw SQL statements can lead to SQL injection if not properly handled.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 91,
    "end_token": 91,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      8393,
      15129,
      8246,
      16363,
      6299,
      460,
      1085,
      284,
      16363,
      16954,
      611,
      407,
      6105,
      12118,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Executing raw SQL statements can lead to SQL injection if not properly handled."
  },
  {
    "line": 114,
    "text": "                else:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Using eval can be dangerous if input is not controlled.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 91,
    "end_token": 108,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      8554,
      5418,
      460,
      307,
      4923,
      611,
      5128,
      318,
      407,
      6856,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Using eval can be dangerous if input is not controlled."
  },
  {
    "line": 123,
    "text": "                    # So we just support add new column, for others just change the db manually",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Using eval can be dangerous if input is not controlled.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      1406,
      356,
      655,
      1104,
      751,
      649,
      5721,
      11,
      329,
      1854,
      655,
      1487,
      262,
      20613,
      14500
    ],
    "start_token": 108,
    "end_token": 143,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      8554,
      5418,
      460,
      307,
      4923,
      611,
      5128,
      318,
      407,
      6856,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Using eval can be dangerous if input is not controlled."
  },
  {
    "line": 127,
    "text": "                            stmt = text(",
    "annotation": "\u2705 Best Practice: Logging exceptions helps in debugging and monitoring.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      336,
      16762,
      796,
      2420,
      7
    ],
    "start_token": 143,
    "end_token": 175,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5972,
      2667,
      13269,
      5419,
      287,
      28769,
      290,
      9904,
      13
    ],
    "label": "best_practice",
    "reason": "Logging exceptions helps in debugging and monitoring."
  },
  {
    "line": 127,
    "text": "                            stmt = text(",
    "annotation": "\u2705 Best Practice: Defining __all__ helps in controlling what is exported when the module is imported.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      336,
      16762,
      796,
      2420,
      7
    ],
    "start_token": 175,
    "end_token": 207,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      3191,
      11593,
      439,
      834,
      5419,
      287,
      12755,
      644,
      318,
      29050,
      618,
      262,
      8265,
      318,
      17392,
      13
    ],
    "label": "best_practice",
    "reason": "Defining __all__ helps in controlling what is exported when the module is imported."
  }
]