[
  {
    "line": 2,
    "text": "from datetime import datetime",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      4818,
      8079,
      1330,
      4818,
      8079
    ],
    "start_token": 0,
    "end_token": 6,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 3,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Custom model class definition, useful for identifying model patterns",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 6,
    "end_token": 6,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8562,
      2746,
      1398,
      6770,
      11,
      4465,
      329,
      13720,
      2746,
      7572
    ],
    "label": "ml_signal",
    "reason": "Custom model class definition, useful for identifying model patterns"
  },
  {
    "line": 4,
    "text": "from pydantic import BaseModel, ConfigDict",
    "annotation": "\u2705 Best Practice: Inherits from BaseModel, indicating use of a structured model approach",
    "confidence": 0.5,
    "tokens": [
      6738,
      279,
      5173,
      5109,
      1330,
      7308,
      17633,
      11,
      17056,
      35,
      713
    ],
    "start_token": 6,
    "end_token": 17,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      47025,
      896,
      422,
      7308,
      17633,
      11,
      12739,
      779,
      286,
      257,
      20793,
      2746,
      3164
    ],
    "label": "best_practice",
    "reason": "Inherits from BaseModel, indicating use of a structured model approach"
  },
  {
    "line": 6,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Configuration settings for the model, indicating customization",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 17,
    "end_token": 17,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      28373,
      6460,
      329,
      262,
      2746,
      11,
      12739,
      31344
    ],
    "label": "ml_signal",
    "reason": "Configuration settings for the model, indicating customization"
  },
  {
    "line": 7,
    "text": "class CustomModel(BaseModel):",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Allowing inf/nan values might lead to unexpected behavior if not handled properly",
    "confidence": 0.5,
    "tokens": [
      4871,
      8562,
      17633,
      7,
      14881,
      17633,
      2599
    ],
    "start_token": 17,
    "end_token": 24,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1439,
      7855,
      1167,
      14,
      12647,
      3815,
      1244,
      1085,
      284,
      10059,
      4069,
      611,
      407,
      12118,
      6105
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Allowing inf/nan values might lead to unexpected behavior if not handled properly"
  },
  {
    "line": 5,
    "text": "",
    "annotation": "\u2705 Best Practice: Class should inherit from object explicitly in Python 2.x for clarity, though not needed in Python 3.x",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 24,
    "end_token": 24,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      815,
      16955,
      422,
      2134,
      11777,
      287,
      11361,
      362,
      13,
      87,
      329,
      16287,
      11,
      996,
      407,
      2622,
      287,
      11361,
      513,
      13,
      87
    ],
    "label": "best_practice",
    "reason": "Class should inherit from object explicitly in Python 2.x for clarity, though not needed in Python 3.x"
  },
  {
    "line": 7,
    "text": "class CustomModel(BaseModel):",
    "annotation": "\ud83e\udde0 ML Signal: Use of string type hints for id fields, common in database models",
    "confidence": 0.5,
    "tokens": [
      4871,
      8562,
      17633,
      7,
      14881,
      17633,
      2599
    ],
    "start_token": 24,
    "end_token": 31,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4731,
      2099,
      20269,
      329,
      4686,
      7032,
      11,
      2219,
      287,
      6831,
      4981
    ],
    "label": "ml_signal",
    "reason": "Use of string type hints for id fields, common in database models"
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of string type hints for entity_id fields, common in database models",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 31,
    "end_token": 31,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4731,
      2099,
      20269,
      329,
      9312,
      62,
      312,
      7032,
      11,
      2219,
      287,
      6831,
      4981
    ],
    "label": "ml_signal",
    "reason": "Use of string type hints for entity_id fields, common in database models"
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of datetime type hints for timestamp fields, common in time-tracking models",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 31,
    "end_token": 31,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4818,
      8079,
      2099,
      20269,
      329,
      41033,
      7032,
      11,
      2219,
      287,
      640,
      12,
      36280,
      4981
    ],
    "label": "ml_signal",
    "reason": "Use of datetime type hints for timestamp fields, common in time-tracking models"
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of __all__ to define public API of the module",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 31,
    "end_token": 31,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265
    ],
    "label": "best_practice",
    "reason": "Use of __all__ to define public API of the module"
  }
]