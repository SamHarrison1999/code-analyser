[
  {
    "line": 14,
    "text": "from zvt.rest.trading import trading_router",
    "annotation": "\u2705 Best Practice: Use of ORJSONResponse for better performance with JSON serialization",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      2118,
      13,
      2213,
      4980,
      1330,
      7313,
      62,
      472,
      353
    ],
    "start_token": 0,
    "end_token": 13,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      6375,
      40386,
      31077,
      329,
      1365,
      2854,
      351,
      19449,
      11389,
      1634
    ],
    "label": "best_practice",
    "reason": "Use of ORJSONResponse for better performance with JSON serialization"
  },
  {
    "line": 15,
    "text": "from zvt.rest.work import work_router",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Allowing all origins can lead to security risks if not properly managed",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      2118,
      13,
      1818,
      1330,
      670,
      62,
      472,
      353
    ],
    "start_token": 13,
    "end_token": 25,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1439,
      7855,
      477,
      15587,
      460,
      1085,
      284,
      2324,
      7476,
      611,
      407,
      6105,
      5257
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Allowing all origins can lead to security risks if not properly managed"
  },
  {
    "line": 23,
    "text": "    allow_origins=origins,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Allowing all origins, methods, and headers can expose the API to CSRF attacks",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1249,
      62,
      11612,
      1040,
      28,
      11612,
      1040,
      11
    ],
    "start_token": 25,
    "end_token": 36,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1439,
      7855,
      477,
      15587,
      11,
      5050,
      11,
      290,
      24697,
      460,
      15651,
      262,
      7824,
      284,
      9429,
      32754,
      3434
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Allowing all origins, methods, and headers can expose the API to CSRF attacks"
  },
  {
    "line": 31,
    "text": "async def root():",
    "annotation": "\ud83e\udde0 ML Signal: Simple endpoint returning a static message",
    "confidence": 1.0,
    "tokens": [
      292,
      13361,
      825,
      6808,
      33529
    ],
    "start_token": 36,
    "end_token": 41,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17427,
      36123,
      8024,
      257,
      9037,
      3275
    ],
    "label": "ml_signal",
    "reason": "Simple endpoint returning a static message"
  },
  {
    "line": 34,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of multiple routers indicates a modular API design",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 41,
    "end_token": 41,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      3294,
      41144,
      9217,
      257,
      26507,
      7824,
      1486
    ],
    "label": "ml_signal",
    "reason": "Usage of multiple routers indicates a modular API design"
  },
  {
    "line": 35,
    "text": "app.include_router(data_router)",
    "annotation": "\ud83e\udde0 ML Signal: Adding pagination to the app, indicating handling of large datasets",
    "confidence": 0.5,
    "tokens": [
      1324,
      13,
      17256,
      62,
      472,
      353,
      7,
      7890,
      62,
      472,
      353,
      8
    ],
    "start_token": 41,
    "end_token": 53,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      18247,
      42208,
      1883,
      284,
      262,
      598,
      11,
      12739,
      9041,
      286,
      1588,
      40522
    ],
    "label": "ml_signal",
    "reason": "Adding pagination to the app, indicating handling of large datasets"
  },
  {
    "line": 31,
    "text": "async def root():",
    "annotation": "\u2705 Best Practice: Define main function to encapsulate script logic",
    "confidence": 0.5,
    "tokens": [
      292,
      13361,
      825,
      6808,
      33529
    ],
    "start_token": 53,
    "end_token": 58,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      500,
      1388,
      2163,
      284,
      32652,
      5039,
      4226,
      9156
    ],
    "label": "best_practice",
    "reason": "Define main function to encapsulate script logic"
  },
  {
    "line": 33,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): os.path.join usage without validation of zvt_env[\"resource_path\"] could lead to path traversal",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 58,
    "end_token": 58,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      28686,
      13,
      6978,
      13,
      22179,
      8748,
      1231,
      21201,
      286,
      1976,
      36540,
      62,
      24330,
      14692,
      31092,
      62,
      6978,
      8973,
      714,
      1085,
      284,
      3108,
      33038,
      282
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "os.path.join usage without validation of zvt_env[\"resource_path\"] could lead to path traversal"
  },
  {
    "line": 35,
    "text": "app.include_router(data_router)",
    "annotation": "\u26a0\ufe0f SAST Risk (High): Binding to all interfaces with host=\"0.0.0.0\" can expose the server to external attacks",
    "confidence": 0.5,
    "tokens": [
      1324,
      13,
      17256,
      62,
      472,
      353,
      7,
      7890,
      62,
      472,
      353,
      8
    ],
    "start_token": 58,
    "end_token": 70,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      11922,
      2599,
      38904,
      284,
      477,
      20314,
      351,
      2583,
      2625,
      15,
      13,
      15,
      13,
      15,
      13,
      15,
      1,
      460,
      15651,
      262,
      4382,
      284,
      7097,
      3434
    ],
    "label": "sast_risk",
    "severity": "High",
    "reason": "Binding to all interfaces with host=\"0.0.0.0\" can expose the server to external attacks"
  },
  {
    "line": 35,
    "text": "app.include_router(data_router)",
    "annotation": "\ud83e\udde0 ML Signal: Usage of uvicorn.run indicates a pattern of running an ASGI server",
    "confidence": 0.5,
    "tokens": [
      1324,
      13,
      17256,
      62,
      472,
      353,
      7,
      7890,
      62,
      472,
      353,
      8
    ],
    "start_token": 70,
    "end_token": 82,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      334,
      25531,
      1211,
      13,
      5143,
      9217,
      257,
      3912,
      286,
      2491,
      281,
      7054,
      18878,
      4382
    ],
    "label": "ml_signal",
    "reason": "Usage of uvicorn.run indicates a pattern of running an ASGI server"
  },
  {
    "line": 35,
    "text": "app.include_router(data_router)",
    "annotation": "\u2705 Best Practice: Use the standard Python idiom to ensure main is only executed when the script is run directly",
    "confidence": 0.5,
    "tokens": [
      1324,
      13,
      17256,
      62,
      472,
      353,
      7,
      7890,
      62,
      472,
      353,
      8
    ],
    "start_token": 82,
    "end_token": 94,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      262,
      3210,
      11361,
      4686,
      29005,
      284,
      4155,
      1388,
      318,
      691,
      10945,
      618,
      262,
      4226,
      318,
      1057,
      3264
    ],
    "label": "best_practice",
    "reason": "Use the standard Python idiom to ensure main is only executed when the script is run directly"
  }
]