[
  {
    "line": 1,
    "text": "# -*- coding: utf-8 -*-",
    "annotation": "\u2705 Best Practice: Custom exception class for module-specific errors",
    "confidence": 1.0,
    "tokens": [
      2,
      532,
      9,
      12,
      19617,
      25,
      3384,
      69,
      12,
      23,
      532,
      9,
      12
    ],
    "start_token": 0,
    "end_token": 13,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8562,
      6631,
      1398,
      329,
      8265,
      12,
      11423,
      8563
    ],
    "label": "best_practice",
    "reason": "Custom exception class for module-specific errors"
  },
  {
    "line": 4,
    "text": "",
    "annotation": "\u2705 Best Practice: Class definition should include a docstring to describe its purpose and usage",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 13,
    "end_token": 13,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      6770,
      815,
      2291,
      257,
      2205,
      8841,
      284,
      6901,
      663,
      4007,
      290,
      8748
    ],
    "label": "best_practice",
    "reason": "Class definition should include a docstring to describe its purpose and usage"
  },
  {
    "line": 5,
    "text": "    pass",
    "annotation": "\u2705 Best Practice: Provide a default value for the parameter to ensure the function can be called without arguments.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1208
    ],
    "start_token": 13,
    "end_token": 17,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      44290,
      257,
      4277,
      1988,
      329,
      262,
      11507,
      284,
      4155,
      262,
      2163,
      460,
      307,
      1444,
      1231,
      7159,
      13
    ],
    "label": "best_practice",
    "reason": "Provide a default value for the parameter to ensure the function can be called without arguments."
  },
  {
    "line": 7,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Storing a parameter as an instance attribute is a common pattern.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 17,
    "end_token": 17,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      520,
      3255,
      257,
      11507,
      355,
      281,
      4554,
      11688,
      318,
      257,
      2219,
      3912,
      13
    ],
    "label": "ml_signal",
    "reason": "Storing a parameter as an instance attribute is a common pattern."
  },
  {
    "line": 7,
    "text": "",
    "annotation": "\u2705 Best Practice: Custom exception class for specific error handling",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 17,
    "end_token": 17,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8562,
      6631,
      1398,
      329,
      2176,
      4049,
      9041
    ],
    "label": "best_practice",
    "reason": "Custom exception class for specific error handling"
  },
  {
    "line": 8,
    "text": "class QmtError(TraderError):",
    "annotation": "\u2705 Best Practice: Provide a default value for the message parameter to ensure consistent behavior",
    "confidence": 1.0,
    "tokens": [
      4871,
      1195,
      16762,
      12331,
      7,
      2898,
      5067,
      12331,
      2599
    ],
    "start_token": 17,
    "end_token": 26,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      44290,
      257,
      4277,
      1988,
      329,
      262,
      3275,
      11507,
      284,
      4155,
      6414,
      4069
    ],
    "label": "best_practice",
    "reason": "Provide a default value for the message parameter to ensure consistent behavior"
  },
  {
    "line": 10,
    "text": "        self.message = message",
    "annotation": "\ud83e\udde0 ML Signal: Storing a message in an instance variable is a common pattern for exception handling",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      20500,
      796,
      3275
    ],
    "start_token": 26,
    "end_token": 38,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      520,
      3255,
      257,
      3275,
      287,
      281,
      4554,
      7885,
      318,
      257,
      2219,
      3912,
      329,
      6631,
      9041
    ],
    "label": "ml_signal",
    "reason": "Storing a message in an instance variable is a common pattern for exception handling"
  },
  {
    "line": 10,
    "text": "        self.message = message",
    "annotation": "\ud83e\udde0 ML Signal: Use of __all__ to define public API of the module",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      20500,
      796,
      3275
    ],
    "start_token": 38,
    "end_token": 50,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265
    ],
    "label": "ml_signal",
    "reason": "Use of __all__ to define public API of the module"
  }
]