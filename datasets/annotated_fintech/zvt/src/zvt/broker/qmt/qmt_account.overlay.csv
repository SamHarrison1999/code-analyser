annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
üß† ML Signal: Use of logging for tracking and debugging,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 18931, 329, 9646, 290, 28769]",1.0,19,ml_signal,12,Use of logging for tracking and debugging,,0,"from zvt.common.trading_models import BuyParameter, PositionType, SellParameter","[6738, 1976, 36540, 13, 11321, 13, 2213, 4980, 62, 27530, 1330, 11763, 36301, 11, 23158, 6030, 11, 25688, 36301]"
üß† ML Signal: Function for mapping order types to constants,"[8582, 100, 254, 10373, 26484, 25, 15553, 329, 16855, 1502, 3858, 284, 38491]",0.5,48,ml_signal,13,Function for mapping order types to constants,,19,"from zvt.trader import AccountService, TradingSignal, OrderType, trading_signal_type_to_order_type","[6738, 1976, 36540, 13, 2213, 5067, 1330, 10781, 16177, 11, 25469, 11712, 282, 11, 8284, 6030, 11, 7313, 62, 12683, 282, 62, 4906, 62, 1462, 62, 2875, 62, 4906]"
üß† ML Signal: Checking for specific order type,"[8582, 100, 254, 10373, 26484, 25, 39432, 329, 2176, 1502, 2099]",0.5,48,ml_signal,15,Checking for specific order type,,48,,[]
üß† ML Signal: Checking for specific order type,"[8582, 100, 254, 10373, 26484, 25, 39432, 329, 2176, 1502, 2099]",0.5,48,ml_signal,18,Checking for specific order type,,48,,[]
‚ö†Ô∏è SAST Risk (Low): Missing handling for unexpected order types,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 25639, 9041, 329, 10059, 1502, 3858]",0.5,66,sast_risk,21,Missing handling for unexpected order types,Low,48,        return xtconstant.STOCK_BUY,"[220, 220, 220, 220, 220, 220, 220, 1441, 220, 742, 9979, 415, 13, 2257, 11290, 62, 19499, 56]"
‚úÖ Best Practice: Consider adding a default case to handle unexpected order types,"[26486, 227, 6705, 19939, 25, 12642, 4375, 257, 4277, 1339, 284, 5412, 10059, 1502, 3858]",1.0,84,best_practice,22,Consider adding a default case to handle unexpected order types,,66,    elif order_type == OrderType.order_close_long:,"[220, 220, 220, 1288, 361, 1502, 62, 4906, 6624, 8284, 6030, 13, 2875, 62, 19836, 62, 6511, 25]"
‚úÖ Best Practice: Class definition should include a docstring to describe its purpose and usage.,"[26486, 227, 6705, 19939, 25, 5016, 6770, 815, 2291, 257, 2205, 8841, 284, 6901, 663, 4007, 290, 8748, 13]",0.5,102,best_practice,19,Class definition should include a docstring to describe its purpose and usage.,,84,def _to_qmt_order_type(order_type: OrderType):,"[4299, 4808, 1462, 62, 80, 16762, 62, 2875, 62, 4906, 7, 2875, 62, 4906, 25, 8284, 6030, 2599]"
üß† ML Signal: Logging connection events can be used to train models on system usage patterns,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 4637, 2995, 460, 307, 973, 284, 4512, 4981, 319, 1080, 8748, 7572]",1.0,120,ml_signal,19,Logging connection events can be used to train models on system usage patterns,,102,def _to_qmt_order_type(order_type: OrderType):,"[4299, 4808, 1462, 62, 80, 16762, 62, 2875, 62, 4906, 7, 2875, 62, 4906, 25, 8284, 6030, 2599]"
üß† ML Signal: Logging messages can be used to train models on common log patterns,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 6218, 460, 307, 973, 284, 4512, 4981, 319, 2219, 2604, 7572]",0.5,138,ml_signal,21,Logging messages can be used to train models on common log patterns,,120,        return xtconstant.STOCK_BUY,"[220, 220, 220, 220, 220, 220, 220, 1441, 220, 742, 9979, 415, 13, 2257, 11290, 62, 19499, 56]"
‚úÖ Best Practice: Use of logging for information messages improves traceability and debugging,"[26486, 227, 6705, 19939, 25, 5765, 286, 18931, 329, 1321, 6218, 19575, 12854, 1799, 290, 28769]",1.0,156,best_practice,22,Use of logging for information messages improves traceability and debugging,,138,    elif order_type == OrderType.order_close_long:,"[220, 220, 220, 1288, 361, 1502, 62, 4906, 6624, 8284, 6030, 13, 2875, 62, 19836, 62, 6511, 25]"
üß† ML Signal: Logging response data can indicate how the function is used and its importance.,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 2882, 1366, 460, 7603, 703, 262, 2163, 318, 973, 290, 663, 6817, 13]",1.0,174,ml_signal,21,Logging response data can indicate how the function is used and its importance.,,156,        return xtconstant.STOCK_BUY,"[220, 220, 220, 220, 220, 220, 220, 1441, 220, 742, 9979, 415, 13, 2257, 11290, 62, 19499, 56]"
‚úÖ Best Practice: Using f-strings for logging provides clear and concise log messages.,"[26486, 227, 6705, 19939, 25, 8554, 277, 12, 37336, 329, 18931, 3769, 1598, 290, 35327, 2604, 6218, 13]",0.5,192,best_practice,22,Using f-strings for logging provides clear and concise log messages.,,174,    elif order_type == OrderType.order_close_long:,"[220, 220, 220, 1288, 361, 1502, 62, 4906, 6624, 8284, 6030, 13, 2875, 62, 19836, 62, 6511, 25]"
‚ö†Ô∏è SAST Risk (Low): Logging the entire response object may expose sensitive information.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5972, 2667, 262, 2104, 2882, 2134, 743, 15651, 8564, 1321, 13]",0.5,192,sast_risk,24,Logging the entire response object may expose sensitive information.,Low,192,,[]
‚úÖ Best Practice: Use of logging for tracking and debugging,"[26486, 227, 6705, 19939, 25, 5765, 286, 18931, 329, 9646, 290, 28769]",0.5,210,best_practice,23,Use of logging for tracking and debugging,,192,        return xtconstant.STOCK_SELL,"[220, 220, 220, 220, 220, 220, 220, 1441, 220, 742, 9979, 415, 13, 2257, 11290, 62, 5188, 3069]"
üß† ML Signal: Logging response data can be used to analyze system behavior,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 2882, 1366, 460, 307, 973, 284, 16602, 1080, 4069]",0.5,210,ml_signal,25,Logging response data can be used to analyze system behavior,,210,,[]
‚ö†Ô∏è SAST Risk (Low): Potential exposure of sensitive information in logs,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 7111, 286, 8564, 1321, 287, 17259]",0.5,226,sast_risk,26,Potential exposure of sensitive information in logs,Low,210,class MyXtQuantTraderCallback(XtQuantTraderCallback):,"[4871, 2011, 55, 83, 24915, 2898, 5067, 47258, 7, 55, 83, 24915, 2898, 5067, 47258, 2599]"
"üß† ML Signal: Logging a specific event, useful for understanding system behavior","[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 257, 2176, 1785, 11, 4465, 329, 4547, 1080, 4069]",0.5,247,ml_signal,30,"Logging a specific event, useful for understanding system behavior",,226,"    def on_smt_appointment_async_response(self, response):","[220, 220, 220, 825, 319, 62, 5796, 83, 62, 1324, 49805, 62, 292, 13361, 62, 26209, 7, 944, 11, 2882, 2599]"
üß† ML Signal: Logging of order details can be used to analyze order processing patterns,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 286, 1502, 3307, 460, 307, 973, 284, 16602, 1502, 7587, 7572]",1.0,255,ml_signal,37,Logging of order details can be used to analyze order processing patterns,,247,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚ö†Ô∏è SAST Risk (Low): Potential exposure of sensitive order information in logs,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 7111, 286, 8564, 1502, 1321, 287, 17259]",1.0,272,sast_risk,38,Potential exposure of sensitive order information in logs,Low,255,        ËøûÊé•Êñ≠ÂºÄ,"[220, 220, 220, 220, 220, 220, 220, 5525, 123, 252, 162, 236, 98, 23877, 255, 28156, 222]"
üß† ML Signal: Logging asset information can be used to understand asset usage patterns,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 11171, 1321, 460, 307, 973, 284, 1833, 11171, 8748, 7572]",1.0,280,ml_signal,44,Logging asset information can be used to understand asset usage patterns,,272,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚ö†Ô∏è SAST Risk (Low): Potential exposure of sensitive asset information in logs,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 7111, 286, 8564, 11171, 1321, 287, 17259]",1.0,302,sast_risk,45,Potential exposure of sensitive asset information in logs,Low,280,        ÂßîÊâòÂõûÊä•Êé®ÈÄÅ,"[220, 220, 220, 220, 220, 220, 220, 10263, 100, 242, 33699, 246, 32368, 252, 162, 232, 98, 162, 236, 101, 34460, 223]"
üß† ML Signal: Logging trade information can be used to identify trading patterns or anomalies.,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 3292, 1321, 460, 307, 973, 284, 5911, 7313, 7572, 393, 35907, 13]",1.0,317,ml_signal,51,Logging trade information can be used to identify trading patterns or anomalies.,,302,"    def on_stock_asset(self, asset):","[220, 220, 220, 825, 319, 62, 13578, 62, 562, 316, 7, 944, 11, 11171, 2599]"
‚ö†Ô∏è SAST Risk (Low): Potential exposure of sensitive trade information in logs.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 7111, 286, 8564, 3292, 1321, 287, 17259, 13]",0.5,325,sast_risk,52,Potential exposure of sensitive trade information in logs.,Low,317,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
üß† ML Signal: Logging of function input for monitoring or debugging,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 286, 2163, 5128, 329, 9904, 393, 28769]",1.0,325,ml_signal,58,Logging of function input for monitoring or debugging,,325,,[]
‚ö†Ô∏è SAST Risk (Low): Potential exposure of sensitive information in logs,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 7111, 286, 8564, 1321, 287, 17259]",0.5,339,sast_risk,59,Potential exposure of sensitive information in logs,Low,325,"    def on_stock_trade(self, trade):","[220, 220, 220, 825, 319, 62, 13578, 62, 25351, 7, 944, 11, 3292, 2599]"
üß† ML Signal: Logging of error information can be used to train models for error prediction or classification,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 286, 4049, 1321, 460, 307, 973, 284, 4512, 4981, 329, 4049, 17724, 393, 17923]",1.0,367,ml_signal,65,Logging of error information can be used to train models for error prediction or classification,,339,"        logger.info(f""qmt on_stock_trade: {vars(trade)}"")","[220, 220, 220, 220, 220, 220, 220, 49706, 13, 10951, 7, 69, 1, 80, 16762, 319, 62, 13578, 62, 25351, 25, 1391, 85, 945, 7, 25351, 38165, 4943]"
‚ö†Ô∏è SAST Risk (Low): Potential exposure of sensitive information in logs,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 7111, 286, 8564, 1321, 287, 17259]",1.0,367,sast_risk,66,Potential exposure of sensitive information in logs,Low,367,,[]
‚úÖ Best Practice: Use of f-string for logging provides better readability and performance.,"[26486, 227, 6705, 19939, 25, 5765, 286, 277, 12, 8841, 329, 18931, 3769, 1365, 1100, 1799, 290, 2854, 13]",0.5,375,best_practice,72,Use of f-string for logging provides better readability and performance.,,367,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
üß† ML Signal: Logging error information can be used to identify patterns in error occurrences.,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 4049, 1321, 460, 307, 973, 284, 5911, 7572, 287, 4049, 40279, 13]",1.0,403,ml_signal,73,Logging error information can be used to identify patterns in error occurrences.,,375,"        logger.info(f""qmt on_stock_position: {vars(position)}"")","[220, 220, 220, 220, 220, 220, 220, 49706, 13, 10951, 7, 69, 1, 80, 16762, 319, 62, 13578, 62, 9150, 25, 1391, 85, 945, 7, 9150, 38165, 4943]"
üß† ML Signal: Function definition with a specific naming pattern indicating an event handler,"[8582, 100, 254, 10373, 26484, 25, 15553, 6770, 351, 257, 2176, 19264, 3912, 12739, 281, 1785, 21360]",0.5,403,ml_signal,74,Function definition with a specific naming pattern indicating an event handler,,403,,[]
üß† ML Signal: Logging usage pattern with dynamic content,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 8748, 3912, 351, 8925, 2695]",0.5,411,ml_signal,80,Logging usage pattern with dynamic content,,403,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚úÖ Best Practice: Use of f-string for logging,"[26486, 227, 6705, 19939, 25, 5765, 286, 277, 12, 8841, 329, 18931]",0.5,441,best_practice,81,Use of f-string for logging,,411,"        logger.info(f""qmt on_order_error: {vars(order_error)}"")","[220, 220, 220, 220, 220, 220, 220, 49706, 13, 10951, 7, 69, 1, 80, 16762, 319, 62, 2875, 62, 18224, 25, 1391, 85, 945, 7, 2875, 62, 18224, 38165, 4943]"
‚úÖ Best Practice: Add type hints for the 'status' parameter for better code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 3060, 2099, 20269, 329, 262, 705, 13376, 6, 11507, 329, 1365, 2438, 1100, 1799, 290, 5529, 1799, 13]",0.5,471,best_practice,81,Add type hints for the 'status' parameter for better code readability and maintainability.,,441,"        logger.info(f""qmt on_order_error: {vars(order_error)}"")","[220, 220, 220, 220, 220, 220, 220, 49706, 13, 10951, 7, 69, 1, 80, 16762, 319, 62, 2875, 62, 18224, 25, 1391, 85, 945, 7, 2875, 62, 18224, 38165, 4943]"
‚ö†Ô∏è SAST Risk (Low): Logging sensitive information like account_id and status can lead to information leakage.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5972, 2667, 8564, 1321, 588, 1848, 62, 312, 290, 3722, 460, 1085, 284, 1321, 47988, 13]",1.0,495,sast_risk,86,Logging sensitive information like account_id and status can lead to information leakage.,Low,471,        :param cancel_error: XtCancelError ÂØπË±°,"[220, 220, 220, 220, 220, 220, 220, 1058, 17143, 14241, 62, 18224, 25, 1395, 83, 34, 21130, 12331, 10263, 107, 117, 164, 109, 94]"
‚úÖ Best Practice: Class should have a docstring explaining its purpose and usage,"[26486, 227, 6705, 19939, 25, 5016, 815, 423, 257, 2205, 8841, 11170, 663, 4007, 290, 8748]",0.5,505,best_practice,87,Class should have a docstring explaining its purpose and usage,,495,        :return:,"[220, 220, 220, 220, 220, 220, 220, 1058, 7783, 25]"
üß† ML Signal: Defaulting session_id to current time if not provided,"[8582, 100, 254, 10373, 26484, 25, 15161, 278, 6246, 62, 312, 284, 1459, 640, 611, 407, 2810]",1.0,513,ml_signal,88,Defaulting session_id to current time if not provided,,505,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚ö†Ô∏è SAST Risk (Low): Logging sensitive information like account_id,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5972, 2667, 8564, 1321, 588, 1848, 62, 312]",1.0,521,sast_risk,92,Logging sensitive information like account_id,Low,513,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
üß† ML Signal: Instantiating XtQuantTrader with path and session_id,"[8582, 100, 254, 10373, 26484, 25, 2262, 17096, 803, 1395, 83, 24915, 2898, 5067, 351, 3108, 290, 6246, 62, 312]",1.0,542,ml_signal,94,Instantiating XtQuantTrader with path and session_id,,521,        :param response: XtOrderResponse ÂØπË±°,"[220, 220, 220, 220, 220, 220, 220, 1058, 17143, 2882, 25, 1395, 83, 18743, 31077, 10263, 107, 117, 164, 109, 94]"
üß† ML Signal: Creating a StockAccount with account_id and account_type,"[8582, 100, 254, 10373, 26484, 25, 30481, 257, 10500, 30116, 351, 1848, 62, 312, 290, 1848, 62, 4906]",1.0,550,ml_signal,96,Creating a StockAccount with account_id and account_type,,542,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
üß† ML Signal: Registering a callback for the trader,"[8582, 100, 254, 10373, 26484, 25, 17296, 278, 257, 23838, 329, 262, 31791]",1.0,550,ml_signal,98,Registering a callback for the trader,,550,,[]
üß† ML Signal: Starting the trader,"[8582, 100, 254, 10373, 26484, 25, 17962, 262, 31791]",1.0,571,ml_signal,101,Starting the trader,,550,        :param response: XtAccountStatus ÂØπË±°,"[220, 220, 220, 220, 220, 220, 220, 1058, 17143, 2882, 25, 1395, 83, 30116, 19580, 10263, 107, 117, 164, 109, 94]"
üß† ML Signal: Connecting the trader and handling connection result,"[8582, 100, 254, 10373, 26484, 25, 8113, 278, 262, 31791, 290, 9041, 4637, 1255]",1.0,579,ml_signal,103,Connecting the trader and handling connection result,,571,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚ö†Ô∏è SAST Risk (Low): Logging error with connection result,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5972, 2667, 4049, 351, 4637, 1255]",1.0,579,sast_risk,106,Logging error with connection result,Low,579,,[]
üß† ML Signal: Subscribing the account and handling subscription result,"[8582, 100, 254, 10373, 26484, 25, 3834, 1416, 23098, 262, 1848, 290, 9041, 14569, 1255]",1.0,600,ml_signal,110,Subscribing the account and handling subscription result,,579,            session_id = int(time.time()),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 6246, 62, 312, 796, 493, 7, 2435, 13, 2435, 28955]"
‚ö†Ô∏è SAST Risk (Low): Logging error with subscription result,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5972, 2667, 4049, 351, 14569, 1255]",1.0,600,sast_risk,113,Logging error with subscription result,Low,600,,[]
"üß† ML Signal: Method definition in a class, useful for understanding class behavior","[8582, 100, 254, 10373, 26484, 25, 11789, 6770, 287, 257, 1398, 11, 4465, 329, 4547, 1398, 4069]",0.5,609,ml_signal,107,"Method definition in a class, useful for understanding class behavior",,600,class QmtStockAccount(AccountService):,"[4871, 1195, 16762, 26207, 30116, 7, 30116, 16177, 2599]"
‚úÖ Best Practice: Type hinting for the variable 'positions' improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5994, 9254, 278, 329, 262, 7885, 705, 1930, 1756, 6, 19575, 2438, 1100, 1799, 290, 5529, 1799]",0.5,622,best_practice,109,Type hinting for the variable 'positions' improves code readability and maintainability,,609,        if not session_id:,"[220, 220, 220, 220, 220, 220, 220, 611, 407, 6246, 62, 312, 25]"
"üß† ML Signal: Returning a value from a method, useful for understanding data flow","[8582, 100, 254, 10373, 26484, 25, 42882, 257, 1988, 422, 257, 2446, 11, 4465, 329, 4547, 1366, 5202]",0.5,639,ml_signal,111,"Returning a value from a method, useful for understanding data flow",,622,        self.trader_name = trader_name,"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 2213, 5067, 62, 3672, 796, 31791, 62, 3672]"
üß† ML Signal: Method with a boolean flag parameter indicating optional behavior,"[8582, 100, 254, 10373, 26484, 25, 11789, 351, 257, 25131, 6056, 11507, 12739, 11902, 4069]",0.5,660,ml_signal,110,Method with a boolean flag parameter indicating optional behavior,,639,            session_id = int(time.time()),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 6246, 62, 312, 796, 493, 7, 2435, 13, 2435, 28955]"
üß† ML Signal: Conversion function usage pattern for entity_id,"[8582, 100, 254, 10373, 26484, 25, 44101, 2163, 8748, 3912, 329, 9312, 62, 312]",1.0,703,ml_signal,112,Conversion function usage pattern for entity_id,,660,"        logger.info(f""path: {path}, account: {account_id}, trader_name: {trader_name}, session: {session_id}"")","[220, 220, 220, 220, 220, 220, 220, 49706, 13, 10951, 7, 69, 1, 6978, 25, 1391, 6978, 5512, 1848, 25, 1391, 23317, 62, 312, 5512, 31791, 62, 3672, 25, 1391, 2213, 5067, 62, 3672, 5512, 6246, 25, 1391, 29891, 62, 312, 92, 4943]"
üß† ML Signal: Method call pattern with object attributes,"[8582, 100, 254, 10373, 26484, 25, 11789, 869, 3912, 351, 2134, 12608]",0.5,733,ml_signal,114,Method call pattern with object attributes,,703,"        self.xt_trader = XtQuantTrader(path=path, session=session_id)","[220, 220, 220, 220, 220, 220, 220, 2116, 13, 742, 62, 2213, 5067, 796, 1395, 83, 24915, 2898, 5067, 7, 6978, 28, 6978, 11, 6246, 28, 29891, 62, 312, 8]"
üß† ML Signal: Method that queries and returns stock asset information,"[8582, 100, 254, 10373, 26484, 25, 11789, 326, 20743, 290, 5860, 4283, 11171, 1321]",1.0,763,ml_signal,114,Method that queries and returns stock asset information,,733,"        self.xt_trader = XtQuantTrader(path=path, session=session_id)","[220, 220, 220, 220, 220, 220, 220, 2116, 13, 742, 62, 2213, 5067, 796, 1395, 83, 24915, 2898, 5067, 7, 6978, 28, 6978, 11, 6246, 28, 29891, 62, 312, 8]"
‚úÖ Best Practice: Explicit return of the queried asset,"[26486, 227, 6705, 19939, 25, 11884, 1441, 286, 262, 42517, 798, 11171]",0.5,848,best_practice,116,Explicit return of the queried asset,,763,        # StockAccountÂèØ‰ª•Áî®Á¨¨‰∫å‰∏™ÂèÇÊï∞ÊåáÂÆöË¥¶Âè∑Á±ªÂûãÔºåÂ¶ÇÊ≤™Ê∏ØÈÄö‰º†'HUGANGTONG'ÔºåÊ∑±Ê∏ØÈÄö‰º†'SHENGANGTONG',"[220, 220, 220, 220, 220, 220, 220, 1303, 10500, 30116, 20998, 107, 20015, 98, 18796, 101, 163, 105, 105, 12859, 234, 10310, 103, 20998, 224, 46763, 108, 162, 234, 229, 22522, 248, 164, 112, 99, 20998, 115, 163, 109, 119, 161, 252, 233, 171, 120, 234, 36685, 224, 162, 110, 103, 162, 116, 107, 34460, 248, 27670, 254, 6, 39, 7340, 15567, 11357, 38, 6, 171, 120, 234, 162, 115, 109, 162, 116, 107, 34460, 248, 27670, 254, 6, 9693, 26808, 15567, 11357, 38, 6]"
"üß† ML Signal: Method for ordering stocks by amount, useful for learning trading patterns","[8582, 100, 254, 10373, 26484, 25, 11789, 329, 16216, 14420, 416, 2033, 11, 4465, 329, 4673, 7313, 7572]",0.5,933,ml_signal,116,"Method for ordering stocks by amount, useful for learning trading patterns",,848,        # StockAccountÂèØ‰ª•Áî®Á¨¨‰∫å‰∏™ÂèÇÊï∞ÊåáÂÆöË¥¶Âè∑Á±ªÂûãÔºåÂ¶ÇÊ≤™Ê∏ØÈÄö‰º†'HUGANGTONG'ÔºåÊ∑±Ê∏ØÈÄö‰º†'SHENGANGTONG',"[220, 220, 220, 220, 220, 220, 220, 1303, 10500, 30116, 20998, 107, 20015, 98, 18796, 101, 163, 105, 105, 12859, 234, 10310, 103, 20998, 224, 46763, 108, 162, 234, 229, 22522, 248, 164, 112, 99, 20998, 115, 163, 109, 119, 161, 252, 233, 171, 120, 234, 36685, 224, 162, 110, 103, 162, 116, 107, 34460, 248, 27670, 254, 6, 39, 7340, 15567, 11357, 38, 6, 171, 120, 234, 162, 115, 109, 162, 116, 107, 34460, 248, 27670, 254, 6, 9693, 26808, 15567, 11357, 38, 6]"
"üß† ML Signal: Conversion of entity_id to stock code, indicating a mapping pattern","[8582, 100, 254, 10373, 26484, 25, 44101, 286, 9312, 62, 312, 284, 4283, 2438, 11, 12739, 257, 16855, 3912]",0.5,933,ml_signal,118,"Conversion of entity_id to stock code, indicating a mapping pattern",,933,,[]
‚ö†Ô∏è SAST Risk (Medium): Potential risk if _to_qmt_code or _to_qmt_order_type are not validated,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 32480, 2526, 611, 4808, 1462, 62, 80, 16762, 62, 8189, 393, 4808, 1462, 62, 80, 16762, 62, 2875, 62, 4906, 389, 407, 31031]",0.5,933,sast_risk,118,Potential risk if _to_qmt_code or _to_qmt_order_type are not validated,Medium,933,,[]
"üß† ML Signal: Use of an external trading API, indicating integration with trading systems","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 281, 7097, 7313, 7824, 11, 12739, 11812, 351, 7313, 3341]",0.5,933,ml_signal,118,"Use of an external trading API, indicating integration with trading systems",,933,,[]
"üß† ML Signal: Use of account information, relevant for account-based behavior analysis","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1848, 1321, 11, 5981, 329, 1848, 12, 3106, 4069, 3781]",0.5,933,ml_signal,118,"Use of account information, relevant for account-based behavior analysis",,933,,[]
"üß† ML Signal: Use of stock code in trading, relevant for stock-specific behavior analysis","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4283, 2438, 287, 7313, 11, 5981, 329, 4283, 12, 11423, 4069, 3781]",0.5,947,ml_signal,128,"Use of stock code in trading, relevant for stock-specific behavior analysis",,933,        if connect_result != 0:,"[220, 220, 220, 220, 220, 220, 220, 611, 2018, 62, 20274, 14512, 657, 25]"
"üß† ML Signal: Conversion of order type, indicating a mapping pattern","[8582, 100, 254, 10373, 26484, 25, 44101, 286, 1502, 2099, 11, 12739, 257, 16855, 3912]",0.5,961,ml_signal,128,"Conversion of order type, indicating a mapping pattern",,947,        if connect_result != 0:,"[220, 220, 220, 220, 220, 220, 220, 611, 2018, 62, 20274, 14512, 657, 25]"
"üß† ML Signal: Use of order volume, relevant for volume-based trading behavior","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1502, 6115, 11, 5981, 329, 6115, 12, 3106, 7313, 4069]",0.5,999,ml_signal,129,"Use of order volume, relevant for volume-based trading behavior",,961,"            logger.error(f""qmt trader ËøûÊé•Â§±Ë¥•: {connect_result}"")","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 49706, 13, 18224, 7, 69, 1, 80, 16762, 31791, 5525, 123, 252, 162, 236, 98, 13783, 109, 164, 112, 98, 25, 1391, 8443, 62, 20274, 92, 4943]"
"üß† ML Signal: Use of fixed price type, relevant for price-based trading behavior","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 5969, 2756, 2099, 11, 5981, 329, 2756, 12, 3106, 7313, 4069]",0.5,1035,ml_signal,131,"Use of fixed price type, relevant for price-based trading behavior",,999,"        logger.info(""qmt trader Âª∫Á´ã‰∫§ÊòìËøûÊé•ÊàêÂäüÔºÅ"")","[220, 220, 220, 220, 220, 220, 220, 49706, 13, 10951, 7203, 80, 16762, 31791, 10263, 119, 118, 44165, 233, 12859, 97, 23626, 241, 32573, 252, 162, 236, 98, 22755, 238, 27950, 253, 171, 120, 223, 4943]"
"üß† ML Signal: Use of order price, relevant for price-based trading behavior","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1502, 2756, 11, 5981, 329, 2756, 12, 3106, 7313, 4069]",1.0,1035,ml_signal,132,"Use of order price, relevant for price-based trading behavior",,1035,,[]
"üß† ML Signal: Use of strategy name, relevant for strategy-based behavior analysis","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4811, 1438, 11, 5981, 329, 4811, 12, 3106, 4069, 3781]",0.5,1035,ml_signal,135,"Use of strategy name, relevant for strategy-based behavior analysis",,1035,,[]
"üß† ML Signal: Use of order remark, relevant for custom order annotations","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1502, 6919, 11, 5981, 329, 2183, 1502, 37647]",0.5,1075,ml_signal,137,"Use of order remark, relevant for custom order annotations",,1035,"            logger.error(f""Ë¥¶Âè∑ËÆ¢ÈòÖÂ§±Ë¥•: {subscribe_result}"")","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 49706, 13, 18224, 7, 69, 1, 164, 112, 99, 20998, 115, 164, 106, 95, 165, 11805, 13783, 109, 164, 112, 98, 25, 1391, 7266, 12522, 62, 20274, 92, 4943]"
‚úÖ Best Practice: Use of logging for tracking order results,"[26486, 227, 6705, 19939, 25, 5765, 286, 18931, 329, 9646, 1502, 2482]",0.5,1075,best_practice,140,Use of logging for tracking order results,,1075,,[]
üß† ML Signal: Iterating over a list of objects to process each one,"[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 257, 1351, 286, 5563, 284, 1429, 1123, 530]",1.0,1114,ml_signal,130,Iterating over a list of objects to process each one,,1075,"            raise QmtError(f""qmt trader ËøûÊé•Â§±Ë¥•: {connect_result}"")","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 5298, 1195, 16762, 12331, 7, 69, 1, 80, 16762, 31791, 5525, 123, 252, 162, 236, 98, 13783, 109, 164, 112, 98, 25, 1391, 8443, 62, 20274, 92, 4943]"
üß† ML Signal: Method call pattern for handling individual items,"[8582, 100, 254, 10373, 26484, 25, 11789, 869, 3912, 329, 9041, 1981, 3709]",0.5,1114,ml_signal,132,Method call pattern for handling individual items,,1114,,[]
‚ö†Ô∏è SAST Risk (Low): Catching broad exceptions can hide specific errors,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 327, 19775, 3154, 13269, 460, 7808, 2176, 8563]",1.0,1128,sast_risk,136,Catching broad exceptions can hide specific errors,Low,1114,        if subscribe_result != 0:,"[220, 220, 220, 220, 220, 220, 220, 611, 12383, 62, 20274, 14512, 657, 25]"
üß† ML Signal: Logging exceptions for error tracking,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 13269, 329, 4049, 9646]",0.5,1168,ml_signal,137,Logging exceptions for error tracking,,1128,"            logger.error(f""Ë¥¶Âè∑ËÆ¢ÈòÖÂ§±Ë¥•: {subscribe_result}"")","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 49706, 13, 18224, 7, 69, 1, 164, 112, 99, 20998, 115, 164, 106, 95, 165, 11805, 13783, 109, 164, 112, 98, 25, 1391, 7266, 12522, 62, 20274, 92, 4943]"
üß† ML Signal: Error handling pattern with additional context,"[8582, 100, 254, 10373, 26484, 25, 13047, 9041, 3912, 351, 3224, 4732]",0.5,1197,ml_signal,139,Error handling pattern with additional context,,1168,"        logger.info(""Ë¥¶Âè∑ËÆ¢ÈòÖÊàêÂäüÔºÅ"")","[220, 220, 220, 220, 220, 220, 220, 49706, 13, 10951, 7203, 164, 112, 99, 20998, 115, 164, 106, 95, 165, 11805, 22755, 238, 27950, 253, 171, 120, 223, 4943]"
üß† ML Signal: Mapping trading signal type to order type can indicate trading strategy,"[8582, 100, 254, 10373, 26484, 25, 337, 5912, 7313, 6737, 2099, 284, 1502, 2099, 460, 7603, 7313, 4811]",1.0,1226,ml_signal,139,Mapping trading signal type to order type can indicate trading strategy,,1197,"        logger.info(""Ë¥¶Âè∑ËÆ¢ÈòÖÊàêÂäüÔºÅ"")","[220, 220, 220, 220, 220, 220, 220, 49706, 13, 10951, 7203, 164, 112, 99, 20998, 115, 164, 106, 95, 165, 11805, 22755, 238, 27950, 253, 171, 120, 223, 4943]"
üß† ML Signal: Trading level usage can indicate risk appetite or strategy,"[8582, 100, 254, 10373, 26484, 25, 25469, 1241, 8748, 460, 7603, 2526, 20788, 393, 4811]",0.5,1237,ml_signal,141,Trading level usage can indicate risk appetite or strategy,,1226,    def get_positions(self):,"[220, 220, 220, 825, 651, 62, 1930, 1756, 7, 944, 2599]"
‚ö†Ô∏è SAST Risk (Low): Potential time-based logic flaw if system time is manipulated,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 640, 12, 3106, 9156, 11804, 611, 1080, 640, 318, 25036]",0.5,1271,sast_risk,142,Potential time-based logic flaw if system time is manipulated,Low,1237,        positions: List[XtPosition] = self.xt_trader.query_stock_positions(self.account),"[220, 220, 220, 220, 220, 220, 220, 6116, 25, 7343, 58, 55, 83, 26545, 60, 796, 2116, 13, 742, 62, 2213, 5067, 13, 22766, 62, 13578, 62, 1930, 1756, 7, 944, 13, 23317, 8]"
‚ö†Ô∏è SAST Risk (Medium): External data source used without validation,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 34579, 1366, 2723, 973, 1231, 21201]",0.5,1271,sast_risk,149,External data source used without validation,Medium,1271,,[]
üß† ML Signal: Using ask price for long orders can indicate trading strategy,"[8582, 100, 254, 10373, 26484, 25, 8554, 1265, 2756, 329, 890, 6266, 460, 7603, 7313, 4811]",0.5,1280,ml_signal,152,Using ask price for long orders can indicate trading strategy,,1271,        return asset,"[220, 220, 220, 220, 220, 220, 220, 1441, 11171]"
üß† ML Signal: Using bid price for closing long orders can indicate trading strategy,"[8582, 100, 254, 10373, 26484, 25, 8554, 8406, 2756, 329, 9605, 890, 6266, 460, 7603, 7313, 4811]",0.5,1280,ml_signal,153,Using bid price for closing long orders can indicate trading strategy,,1280,,[]
‚ö†Ô∏è SAST Risk (Low): Use of assert for control flow can be bypassed in production,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 6818, 329, 1630, 5202, 460, 307, 17286, 276, 287, 3227]",1.0,1299,sast_risk,158,Use of assert for control flow can be bypassed in production,Low,1280,"            stock_code=stock_code,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4283, 62, 8189, 28, 13578, 62, 8189, 11]"
‚úÖ Best Practice: Use keyword arguments for clarity and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 21179, 7159, 329, 16287, 290, 5529, 1799]",0.5,1318,best_practice,160,Use keyword arguments for clarity and maintainability,,1299,"            order_volume=order_amount,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1502, 62, 29048, 28, 2875, 62, 17287, 11]"
"üß† ML Signal: Function definition with a specific event name, indicating event-driven programming","[8582, 100, 254, 10373, 26484, 25, 15553, 6770, 351, 257, 2176, 1785, 1438, 11, 12739, 1785, 12, 15808, 8300]",1.0,1337,ml_signal,160,"Function definition with a specific event name, indicating event-driven programming",,1318,"            order_volume=order_amount,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1502, 62, 29048, 28, 2875, 62, 17287, 11]"
"üß† ML Signal: Function definition with a specific event name pattern, useful for event-driven model training","[8582, 100, 254, 10373, 26484, 25, 15553, 6770, 351, 257, 2176, 1785, 1438, 3912, 11, 4465, 329, 1785, 12, 15808, 2746, 3047]",1.0,1354,ml_signal,162,"Function definition with a specific event name pattern, useful for event-driven model training",,1337,"            price=order_price,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2756, 28, 2875, 62, 20888, 11]"
‚úÖ Best Practice: Method is defined but not implemented; consider adding a docstring or implementation.,"[26486, 227, 6705, 19939, 25, 11789, 318, 5447, 475, 407, 9177, 26, 2074, 4375, 257, 2205, 8841, 393, 7822, 13]",0.5,1375,best_practice,164,Method is defined but not implemented; consider adding a docstring or implementation.,,1354,"            order_remark=""order from zvt"",","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1502, 62, 2787, 668, 2625, 2875, 422, 1976, 36540, 1600]"
"üß† ML Signal: Method signature indicates handling of trading errors, useful for error pattern analysis","[8582, 100, 254, 10373, 26484, 25, 11789, 9877, 9217, 9041, 286, 7313, 8563, 11, 4465, 329, 4049, 3912, 3781]",1.0,1402,ml_signal,166,"Method signature indicates handling of trading errors, useful for error pattern analysis",,1375,"        logger.info(f""order result id: {fix_result_order_id}"")","[220, 220, 220, 220, 220, 220, 220, 49706, 13, 10951, 7, 69, 1, 2875, 1255, 4686, 25, 1391, 13049, 62, 20274, 62, 2875, 62, 312, 92, 4943]"
üß† ML Signal: Iterating over a list of stock codes for batch processing,"[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 257, 1351, 286, 4283, 12416, 329, 15458, 7587]",1.0,1429,ml_signal,168,Iterating over a list of stock codes for batch processing,,1402,"    def on_trading_signals(self, trading_signals: List[TradingSignal]):","[220, 220, 220, 825, 319, 62, 2213, 4980, 62, 12683, 874, 7, 944, 11, 7313, 62, 12683, 874, 25, 7343, 58, 2898, 4980, 11712, 282, 60, 2599]"
üß† ML Signal: Converting entity IDs to stock codes,"[8582, 100, 254, 10373, 26484, 25, 35602, 889, 9312, 32373, 284, 4283, 12416]",1.0,1442,ml_signal,170,Converting entity IDs to stock codes,,1429,            try:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1949, 25]"
üß† ML Signal: Looping through stock codes and associated percentages,"[8582, 100, 254, 10373, 26484, 25, 6706, 15816, 832, 4283, 12416, 290, 3917, 28071]",1.0,1458,ml_signal,172,Looping through stock codes and associated percentages,,1442,            except Exception as e:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2845, 35528, 355, 304, 25]"
üß† ML Signal: Accessing sell percentages for each stock,"[8582, 100, 254, 10373, 26484, 25, 8798, 278, 3677, 28071, 329, 1123, 4283]",0.5,1480,ml_signal,173,Accessing sell percentages for each stock,,1458,                logger.exception(e),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 49706, 13, 1069, 4516, 7, 68, 8]"
‚ö†Ô∏è SAST Risk (Low): Potential issue if query_stock_position returns None or unexpected data,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2071, 611, 12405, 62, 13578, 62, 9150, 5860, 6045, 393, 10059, 1366]",0.5,1502,sast_risk,173,Potential issue if query_stock_position returns None or unexpected data,Low,1480,                logger.exception(e),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 49706, 13, 1069, 4516, 7, 68, 8]"
‚ö†Ô∏è SAST Risk (Medium): Ensure order_volume calculation does not result in unintended zero or negative values,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 48987, 1502, 62, 29048, 17952, 857, 407, 1255, 287, 30261, 6632, 393, 4633, 3815]",0.5,1524,sast_risk,173,Ensure order_volume calculation does not result in unintended zero or negative values,Medium,1502,                logger.exception(e),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 49706, 13, 1069, 4516, 7, 68, 8]"
‚úÖ Best Practice: Logging order result for traceability,"[26486, 227, 6705, 19939, 25, 5972, 2667, 1502, 1255, 329, 12854, 1799]",1.0,1536,best_practice,189,Logging order result for traceability,,1524,            return,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441]"
üß† ML Signal: Usage of external data source for stock information,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 7097, 1366, 2723, 329, 4283, 1321]",0.5,1555,ml_signal,201,Usage of external data source for stock information,,1536,"            order_type=order_type,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1502, 62, 4906, 28, 2875, 62, 4906, 11]"
‚ö†Ô∏è SAST Risk (Medium): Potential division by zero if try_price is zero,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 32480, 7297, 416, 6632, 611, 1949, 62, 20888, 318, 6632]",0.5,1555,sast_risk,210,Potential division by zero if try_price is zero,Medium,1555,,[]
üß† ML Signal: Pattern of placing stock orders,"[8582, 100, 254, 10373, 26484, 25, 23939, 286, 12560, 4283, 6266]",0.5,1571,ml_signal,211,Pattern of placing stock orders,,1555,"    def on_trading_finish(self, timestamp):","[220, 220, 220, 825, 319, 62, 2213, 4980, 62, 15643, 680, 7, 944, 11, 41033, 2599]"
üß† ML Signal: Logging of order results,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 286, 1502, 2482]",0.5,1590,ml_signal,224,Logging of order results,,1571,        # market_value	float	Â∏ÇÂÄº,"[220, 220, 220, 220, 220, 220, 220, 1303, 1910, 62, 8367, 197, 22468, 197, 30585, 224, 161, 222, 120]"
‚úÖ Best Practice: Use of main guard to prevent code from running on import,"[26486, 227, 6705, 19939, 25, 5765, 286, 1388, 4860, 284, 2948, 2438, 422, 2491, 319, 1330]",1.0,1613,best_practice,225,Use of main guard to prevent code from running on import,,1590,        # frozen_volume	int	ÂÜªÁªìÊï∞Èáè,"[220, 220, 220, 220, 220, 220, 220, 1303, 12912, 62, 29048, 197, 600, 197, 37863, 119, 163, 119, 241, 46763, 108, 34932, 237]"
"‚ö†Ô∏è SAST Risk (Low): Hardcoded file path, potential for path injection","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 2393, 3108, 11, 2785, 329, 3108, 16954]",0.5,1636,sast_risk,225,"Hardcoded file path, potential for path injection",Low,1613,        # frozen_volume	int	ÂÜªÁªìÊï∞Èáè,"[220, 220, 220, 220, 220, 220, 220, 1303, 12912, 62, 29048, 197, 600, 197, 37863, 119, 163, 119, 241, 46763, 108, 34932, 237]"
üß† ML Signal: Retrieval of account positions,"[8582, 100, 254, 10373, 26484, 25, 4990, 380, 18206, 286, 1848, 6116]",0.5,1659,ml_signal,225,Retrieval of account positions,,1636,        # frozen_volume	int	ÂÜªÁªìÊï∞Èáè,"[220, 220, 220, 220, 220, 220, 220, 1303, 12912, 62, 29048, 197, 600, 197, 37863, 119, 163, 119, 241, 46763, 108, 34932, 237]"
‚úÖ Best Practice: Use of __all__ to define public API of the module,"[26486, 227, 6705, 19939, 25, 5765, 286, 11593, 439, 834, 284, 8160, 1171, 7824, 286, 262, 8265]",0.5,1682,best_practice,225,Use of __all__ to define public API of the module,,1659,        # frozen_volume	int	ÂÜªÁªìÊï∞Èáè,"[220, 220, 220, 220, 220, 220, 220, 1303, 12912, 62, 29048, 197, 600, 197, 37863, 119, 163, 119, 241, 46763, 108, 34932, 237]"
