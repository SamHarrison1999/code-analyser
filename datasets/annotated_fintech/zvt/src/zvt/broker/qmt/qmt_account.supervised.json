[
  {
    "line": 12,
    "text": "from zvt.common.trading_models import BuyParameter, PositionType, SellParameter",
    "annotation": "\ud83e\udde0 ML Signal: Use of logging for tracking and debugging",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      11321,
      13,
      2213,
      4980,
      62,
      27530,
      1330,
      11763,
      36301,
      11,
      23158,
      6030,
      11,
      25688,
      36301
    ],
    "start_token": 0,
    "end_token": 19,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      18931,
      329,
      9646,
      290,
      28769
    ],
    "label": "ml_signal",
    "reason": "Use of logging for tracking and debugging"
  },
  {
    "line": 13,
    "text": "from zvt.trader import AccountService, TradingSignal, OrderType, trading_signal_type_to_order_type",
    "annotation": "\ud83e\udde0 ML Signal: Function for mapping order types to constants",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      2213,
      5067,
      1330,
      10781,
      16177,
      11,
      25469,
      11712,
      282,
      11,
      8284,
      6030,
      11,
      7313,
      62,
      12683,
      282,
      62,
      4906,
      62,
      1462,
      62,
      2875,
      62,
      4906
    ],
    "start_token": 19,
    "end_token": 48,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      329,
      16855,
      1502,
      3858,
      284,
      38491
    ],
    "label": "ml_signal",
    "reason": "Function for mapping order types to constants"
  },
  {
    "line": 15,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Checking for specific order type",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 48,
    "end_token": 48,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      2176,
      1502,
      2099
    ],
    "label": "ml_signal",
    "reason": "Checking for specific order type"
  },
  {
    "line": 18,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Checking for specific order type",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 48,
    "end_token": 48,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      2176,
      1502,
      2099
    ],
    "label": "ml_signal",
    "reason": "Checking for specific order type"
  },
  {
    "line": 21,
    "text": "        return xtconstant.STOCK_BUY",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Missing handling for unexpected order types",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      220,
      742,
      9979,
      415,
      13,
      2257,
      11290,
      62,
      19499,
      56
    ],
    "start_token": 48,
    "end_token": 66,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      25639,
      9041,
      329,
      10059,
      1502,
      3858
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Missing handling for unexpected order types"
  },
  {
    "line": 22,
    "text": "    elif order_type == OrderType.order_close_long:",
    "annotation": "\u2705 Best Practice: Consider adding a default case to handle unexpected order types",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1288,
      361,
      1502,
      62,
      4906,
      6624,
      8284,
      6030,
      13,
      2875,
      62,
      19836,
      62,
      6511,
      25
    ],
    "start_token": 66,
    "end_token": 84,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      4375,
      257,
      4277,
      1339,
      284,
      5412,
      10059,
      1502,
      3858
    ],
    "label": "best_practice",
    "reason": "Consider adding a default case to handle unexpected order types"
  },
  {
    "line": 19,
    "text": "def _to_qmt_order_type(order_type: OrderType):",
    "annotation": "\u2705 Best Practice: Class definition should include a docstring to describe its purpose and usage.",
    "confidence": 0.5,
    "tokens": [
      4299,
      4808,
      1462,
      62,
      80,
      16762,
      62,
      2875,
      62,
      4906,
      7,
      2875,
      62,
      4906,
      25,
      8284,
      6030,
      2599
    ],
    "start_token": 84,
    "end_token": 102,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      6770,
      815,
      2291,
      257,
      2205,
      8841,
      284,
      6901,
      663,
      4007,
      290,
      8748,
      13
    ],
    "label": "best_practice",
    "reason": "Class definition should include a docstring to describe its purpose and usage."
  },
  {
    "line": 19,
    "text": "def _to_qmt_order_type(order_type: OrderType):",
    "annotation": "\ud83e\udde0 ML Signal: Logging connection events can be used to train models on system usage patterns",
    "confidence": 1.0,
    "tokens": [
      4299,
      4808,
      1462,
      62,
      80,
      16762,
      62,
      2875,
      62,
      4906,
      7,
      2875,
      62,
      4906,
      25,
      8284,
      6030,
      2599
    ],
    "start_token": 102,
    "end_token": 120,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      4637,
      2995,
      460,
      307,
      973,
      284,
      4512,
      4981,
      319,
      1080,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Logging connection events can be used to train models on system usage patterns"
  },
  {
    "line": 21,
    "text": "        return xtconstant.STOCK_BUY",
    "annotation": "\ud83e\udde0 ML Signal: Logging messages can be used to train models on common log patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      220,
      742,
      9979,
      415,
      13,
      2257,
      11290,
      62,
      19499,
      56
    ],
    "start_token": 120,
    "end_token": 138,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      6218,
      460,
      307,
      973,
      284,
      4512,
      4981,
      319,
      2219,
      2604,
      7572
    ],
    "label": "ml_signal",
    "reason": "Logging messages can be used to train models on common log patterns"
  },
  {
    "line": 22,
    "text": "    elif order_type == OrderType.order_close_long:",
    "annotation": "\u2705 Best Practice: Use of logging for information messages improves traceability and debugging",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1288,
      361,
      1502,
      62,
      4906,
      6624,
      8284,
      6030,
      13,
      2875,
      62,
      19836,
      62,
      6511,
      25
    ],
    "start_token": 138,
    "end_token": 156,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      18931,
      329,
      1321,
      6218,
      19575,
      12854,
      1799,
      290,
      28769
    ],
    "label": "best_practice",
    "reason": "Use of logging for information messages improves traceability and debugging"
  },
  {
    "line": 21,
    "text": "        return xtconstant.STOCK_BUY",
    "annotation": "\ud83e\udde0 ML Signal: Logging response data can indicate how the function is used and its importance.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      220,
      742,
      9979,
      415,
      13,
      2257,
      11290,
      62,
      19499,
      56
    ],
    "start_token": 156,
    "end_token": 174,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      2882,
      1366,
      460,
      7603,
      703,
      262,
      2163,
      318,
      973,
      290,
      663,
      6817,
      13
    ],
    "label": "ml_signal",
    "reason": "Logging response data can indicate how the function is used and its importance."
  },
  {
    "line": 22,
    "text": "    elif order_type == OrderType.order_close_long:",
    "annotation": "\u2705 Best Practice: Using f-strings for logging provides clear and concise log messages.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1288,
      361,
      1502,
      62,
      4906,
      6624,
      8284,
      6030,
      13,
      2875,
      62,
      19836,
      62,
      6511,
      25
    ],
    "start_token": 174,
    "end_token": 192,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      277,
      12,
      37336,
      329,
      18931,
      3769,
      1598,
      290,
      35327,
      2604,
      6218,
      13
    ],
    "label": "best_practice",
    "reason": "Using f-strings for logging provides clear and concise log messages."
  },
  {
    "line": 24,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Logging the entire response object may expose sensitive information.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 192,
    "end_token": 192,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5972,
      2667,
      262,
      2104,
      2882,
      2134,
      743,
      15651,
      8564,
      1321,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Logging the entire response object may expose sensitive information."
  },
  {
    "line": 23,
    "text": "        return xtconstant.STOCK_SELL",
    "annotation": "\u2705 Best Practice: Use of logging for tracking and debugging",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      220,
      742,
      9979,
      415,
      13,
      2257,
      11290,
      62,
      5188,
      3069
    ],
    "start_token": 192,
    "end_token": 210,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      18931,
      329,
      9646,
      290,
      28769
    ],
    "label": "best_practice",
    "reason": "Use of logging for tracking and debugging"
  },
  {
    "line": 25,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Logging response data can be used to analyze system behavior",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 210,
    "end_token": 210,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      2882,
      1366,
      460,
      307,
      973,
      284,
      16602,
      1080,
      4069
    ],
    "label": "ml_signal",
    "reason": "Logging response data can be used to analyze system behavior"
  },
  {
    "line": 26,
    "text": "class MyXtQuantTraderCallback(XtQuantTraderCallback):",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential exposure of sensitive information in logs",
    "confidence": 0.5,
    "tokens": [
      4871,
      2011,
      55,
      83,
      24915,
      2898,
      5067,
      47258,
      7,
      55,
      83,
      24915,
      2898,
      5067,
      47258,
      2599
    ],
    "start_token": 210,
    "end_token": 226,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      7111,
      286,
      8564,
      1321,
      287,
      17259
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential exposure of sensitive information in logs"
  },
  {
    "line": 30,
    "text": "    def on_smt_appointment_async_response(self, response):",
    "annotation": "\ud83e\udde0 ML Signal: Logging a specific event, useful for understanding system behavior",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      319,
      62,
      5796,
      83,
      62,
      1324,
      49805,
      62,
      292,
      13361,
      62,
      26209,
      7,
      944,
      11,
      2882,
      2599
    ],
    "start_token": 226,
    "end_token": 247,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      257,
      2176,
      1785,
      11,
      4465,
      329,
      4547,
      1080,
      4069
    ],
    "label": "ml_signal",
    "reason": "Logging a specific event, useful for understanding system behavior"
  },
  {
    "line": 37,
    "text": "        \"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Logging of order details can be used to analyze order processing patterns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 247,
    "end_token": 255,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      286,
      1502,
      3307,
      460,
      307,
      973,
      284,
      16602,
      1502,
      7587,
      7572
    ],
    "label": "ml_signal",
    "reason": "Logging of order details can be used to analyze order processing patterns"
  },
  {
    "line": 38,
    "text": "        \u8fde\u63a5\u65ad\u5f00",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential exposure of sensitive order information in logs",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      5525,
      123,
      252,
      162,
      236,
      98,
      23877,
      255,
      28156,
      222
    ],
    "start_token": 255,
    "end_token": 272,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      7111,
      286,
      8564,
      1502,
      1321,
      287,
      17259
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential exposure of sensitive order information in logs"
  },
  {
    "line": 44,
    "text": "        \"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Logging asset information can be used to understand asset usage patterns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 272,
    "end_token": 280,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      11171,
      1321,
      460,
      307,
      973,
      284,
      1833,
      11171,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Logging asset information can be used to understand asset usage patterns"
  },
  {
    "line": 45,
    "text": "        \u59d4\u6258\u56de\u62a5\u63a8\u9001",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential exposure of sensitive asset information in logs",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      10263,
      100,
      242,
      33699,
      246,
      32368,
      252,
      162,
      232,
      98,
      162,
      236,
      101,
      34460,
      223
    ],
    "start_token": 280,
    "end_token": 302,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      7111,
      286,
      8564,
      11171,
      1321,
      287,
      17259
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential exposure of sensitive asset information in logs"
  },
  {
    "line": 51,
    "text": "    def on_stock_asset(self, asset):",
    "annotation": "\ud83e\udde0 ML Signal: Logging trade information can be used to identify trading patterns or anomalies.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      319,
      62,
      13578,
      62,
      562,
      316,
      7,
      944,
      11,
      11171,
      2599
    ],
    "start_token": 302,
    "end_token": 317,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      3292,
      1321,
      460,
      307,
      973,
      284,
      5911,
      7313,
      7572,
      393,
      35907,
      13
    ],
    "label": "ml_signal",
    "reason": "Logging trade information can be used to identify trading patterns or anomalies."
  },
  {
    "line": 52,
    "text": "        \"\"\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential exposure of sensitive trade information in logs.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 317,
    "end_token": 325,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      7111,
      286,
      8564,
      3292,
      1321,
      287,
      17259,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential exposure of sensitive trade information in logs."
  },
  {
    "line": 58,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Logging of function input for monitoring or debugging",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 325,
    "end_token": 325,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      286,
      2163,
      5128,
      329,
      9904,
      393,
      28769
    ],
    "label": "ml_signal",
    "reason": "Logging of function input for monitoring or debugging"
  },
  {
    "line": 59,
    "text": "    def on_stock_trade(self, trade):",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential exposure of sensitive information in logs",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      319,
      62,
      13578,
      62,
      25351,
      7,
      944,
      11,
      3292,
      2599
    ],
    "start_token": 325,
    "end_token": 339,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      7111,
      286,
      8564,
      1321,
      287,
      17259
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential exposure of sensitive information in logs"
  },
  {
    "line": 65,
    "text": "        logger.info(f\"qmt on_stock_trade: {vars(trade)}\")",
    "annotation": "\ud83e\udde0 ML Signal: Logging of error information can be used to train models for error prediction or classification",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      49706,
      13,
      10951,
      7,
      69,
      1,
      80,
      16762,
      319,
      62,
      13578,
      62,
      25351,
      25,
      1391,
      85,
      945,
      7,
      25351,
      38165,
      4943
    ],
    "start_token": 339,
    "end_token": 367,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      286,
      4049,
      1321,
      460,
      307,
      973,
      284,
      4512,
      4981,
      329,
      4049,
      17724,
      393,
      17923
    ],
    "label": "ml_signal",
    "reason": "Logging of error information can be used to train models for error prediction or classification"
  },
  {
    "line": 66,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential exposure of sensitive information in logs",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 367,
    "end_token": 367,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      7111,
      286,
      8564,
      1321,
      287,
      17259
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential exposure of sensitive information in logs"
  },
  {
    "line": 72,
    "text": "        \"\"\"",
    "annotation": "\u2705 Best Practice: Use of f-string for logging provides better readability and performance.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 367,
    "end_token": 375,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      277,
      12,
      8841,
      329,
      18931,
      3769,
      1365,
      1100,
      1799,
      290,
      2854,
      13
    ],
    "label": "best_practice",
    "reason": "Use of f-string for logging provides better readability and performance."
  },
  {
    "line": 73,
    "text": "        logger.info(f\"qmt on_stock_position: {vars(position)}\")",
    "annotation": "\ud83e\udde0 ML Signal: Logging error information can be used to identify patterns in error occurrences.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      49706,
      13,
      10951,
      7,
      69,
      1,
      80,
      16762,
      319,
      62,
      13578,
      62,
      9150,
      25,
      1391,
      85,
      945,
      7,
      9150,
      38165,
      4943
    ],
    "start_token": 375,
    "end_token": 403,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      4049,
      1321,
      460,
      307,
      973,
      284,
      5911,
      7572,
      287,
      4049,
      40279,
      13
    ],
    "label": "ml_signal",
    "reason": "Logging error information can be used to identify patterns in error occurrences."
  },
  {
    "line": 74,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with a specific naming pattern indicating an event handler",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 403,
    "end_token": 403,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      257,
      2176,
      19264,
      3912,
      12739,
      281,
      1785,
      21360
    ],
    "label": "ml_signal",
    "reason": "Function definition with a specific naming pattern indicating an event handler"
  },
  {
    "line": 80,
    "text": "        \"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Logging usage pattern with dynamic content",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 403,
    "end_token": 411,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      8748,
      3912,
      351,
      8925,
      2695
    ],
    "label": "ml_signal",
    "reason": "Logging usage pattern with dynamic content"
  },
  {
    "line": 81,
    "text": "        logger.info(f\"qmt on_order_error: {vars(order_error)}\")",
    "annotation": "\u2705 Best Practice: Use of f-string for logging",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      49706,
      13,
      10951,
      7,
      69,
      1,
      80,
      16762,
      319,
      62,
      2875,
      62,
      18224,
      25,
      1391,
      85,
      945,
      7,
      2875,
      62,
      18224,
      38165,
      4943
    ],
    "start_token": 411,
    "end_token": 441,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      277,
      12,
      8841,
      329,
      18931
    ],
    "label": "best_practice",
    "reason": "Use of f-string for logging"
  },
  {
    "line": 81,
    "text": "        logger.info(f\"qmt on_order_error: {vars(order_error)}\")",
    "annotation": "\u2705 Best Practice: Add type hints for the 'status' parameter for better code readability and maintainability.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      49706,
      13,
      10951,
      7,
      69,
      1,
      80,
      16762,
      319,
      62,
      2875,
      62,
      18224,
      25,
      1391,
      85,
      945,
      7,
      2875,
      62,
      18224,
      38165,
      4943
    ],
    "start_token": 441,
    "end_token": 471,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      3060,
      2099,
      20269,
      329,
      262,
      705,
      13376,
      6,
      11507,
      329,
      1365,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Add type hints for the 'status' parameter for better code readability and maintainability."
  },
  {
    "line": 86,
    "text": "        :param cancel_error: XtCancelError \u5bf9\u8c61",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Logging sensitive information like account_id and status can lead to information leakage.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1058,
      17143,
      14241,
      62,
      18224,
      25,
      1395,
      83,
      34,
      21130,
      12331,
      10263,
      107,
      117,
      164,
      109,
      94
    ],
    "start_token": 471,
    "end_token": 495,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5972,
      2667,
      8564,
      1321,
      588,
      1848,
      62,
      312,
      290,
      3722,
      460,
      1085,
      284,
      1321,
      47988,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Logging sensitive information like account_id and status can lead to information leakage."
  },
  {
    "line": 87,
    "text": "        :return:",
    "annotation": "\u2705 Best Practice: Class should have a docstring explaining its purpose and usage",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1058,
      7783,
      25
    ],
    "start_token": 495,
    "end_token": 505,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      815,
      423,
      257,
      2205,
      8841,
      11170,
      663,
      4007,
      290,
      8748
    ],
    "label": "best_practice",
    "reason": "Class should have a docstring explaining its purpose and usage"
  },
  {
    "line": 88,
    "text": "        \"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Defaulting session_id to current time if not provided",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 505,
    "end_token": 513,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15161,
      278,
      6246,
      62,
      312,
      284,
      1459,
      640,
      611,
      407,
      2810
    ],
    "label": "ml_signal",
    "reason": "Defaulting session_id to current time if not provided"
  },
  {
    "line": 92,
    "text": "        \"\"\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Logging sensitive information like account_id",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 513,
    "end_token": 521,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5972,
      2667,
      8564,
      1321,
      588,
      1848,
      62,
      312
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Logging sensitive information like account_id"
  },
  {
    "line": 94,
    "text": "        :param response: XtOrderResponse \u5bf9\u8c61",
    "annotation": "\ud83e\udde0 ML Signal: Instantiating XtQuantTrader with path and session_id",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1058,
      17143,
      2882,
      25,
      1395,
      83,
      18743,
      31077,
      10263,
      107,
      117,
      164,
      109,
      94
    ],
    "start_token": 521,
    "end_token": 542,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2262,
      17096,
      803,
      1395,
      83,
      24915,
      2898,
      5067,
      351,
      3108,
      290,
      6246,
      62,
      312
    ],
    "label": "ml_signal",
    "reason": "Instantiating XtQuantTrader with path and session_id"
  },
  {
    "line": 96,
    "text": "        \"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Creating a StockAccount with account_id and account_type",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 542,
    "end_token": 550,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      30481,
      257,
      10500,
      30116,
      351,
      1848,
      62,
      312,
      290,
      1848,
      62,
      4906
    ],
    "label": "ml_signal",
    "reason": "Creating a StockAccount with account_id and account_type"
  },
  {
    "line": 98,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Registering a callback for the trader",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 550,
    "end_token": 550,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17296,
      278,
      257,
      23838,
      329,
      262,
      31791
    ],
    "label": "ml_signal",
    "reason": "Registering a callback for the trader"
  },
  {
    "line": 101,
    "text": "        :param response: XtAccountStatus \u5bf9\u8c61",
    "annotation": "\ud83e\udde0 ML Signal: Starting the trader",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1058,
      17143,
      2882,
      25,
      1395,
      83,
      30116,
      19580,
      10263,
      107,
      117,
      164,
      109,
      94
    ],
    "start_token": 550,
    "end_token": 571,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17962,
      262,
      31791
    ],
    "label": "ml_signal",
    "reason": "Starting the trader"
  },
  {
    "line": 103,
    "text": "        \"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Connecting the trader and handling connection result",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 571,
    "end_token": 579,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8113,
      278,
      262,
      31791,
      290,
      9041,
      4637,
      1255
    ],
    "label": "ml_signal",
    "reason": "Connecting the trader and handling connection result"
  },
  {
    "line": 106,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Logging error with connection result",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 579,
    "end_token": 579,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5972,
      2667,
      4049,
      351,
      4637,
      1255
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Logging error with connection result"
  },
  {
    "line": 110,
    "text": "            session_id = int(time.time())",
    "annotation": "\ud83e\udde0 ML Signal: Subscribing the account and handling subscription result",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6246,
      62,
      312,
      796,
      493,
      7,
      2435,
      13,
      2435,
      28955
    ],
    "start_token": 579,
    "end_token": 600,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3834,
      1416,
      23098,
      262,
      1848,
      290,
      9041,
      14569,
      1255
    ],
    "label": "ml_signal",
    "reason": "Subscribing the account and handling subscription result"
  },
  {
    "line": 113,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Logging error with subscription result",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 600,
    "end_token": 600,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5972,
      2667,
      4049,
      351,
      14569,
      1255
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Logging error with subscription result"
  },
  {
    "line": 107,
    "text": "class QmtStockAccount(AccountService):",
    "annotation": "\ud83e\udde0 ML Signal: Method definition in a class, useful for understanding class behavior",
    "confidence": 0.5,
    "tokens": [
      4871,
      1195,
      16762,
      26207,
      30116,
      7,
      30116,
      16177,
      2599
    ],
    "start_token": 600,
    "end_token": 609,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      6770,
      287,
      257,
      1398,
      11,
      4465,
      329,
      4547,
      1398,
      4069
    ],
    "label": "ml_signal",
    "reason": "Method definition in a class, useful for understanding class behavior"
  },
  {
    "line": 109,
    "text": "        if not session_id:",
    "annotation": "\u2705 Best Practice: Type hinting for the variable 'positions' improves code readability and maintainability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      407,
      6246,
      62,
      312,
      25
    ],
    "start_token": 609,
    "end_token": 622,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      262,
      7885,
      705,
      1930,
      1756,
      6,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting for the variable 'positions' improves code readability and maintainability"
  },
  {
    "line": 111,
    "text": "        self.trader_name = trader_name",
    "annotation": "\ud83e\udde0 ML Signal: Returning a value from a method, useful for understanding data flow",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      2213,
      5067,
      62,
      3672,
      796,
      31791,
      62,
      3672
    ],
    "start_token": 622,
    "end_token": 639,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      42882,
      257,
      1988,
      422,
      257,
      2446,
      11,
      4465,
      329,
      4547,
      1366,
      5202
    ],
    "label": "ml_signal",
    "reason": "Returning a value from a method, useful for understanding data flow"
  },
  {
    "line": 110,
    "text": "            session_id = int(time.time())",
    "annotation": "\ud83e\udde0 ML Signal: Method with a boolean flag parameter indicating optional behavior",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6246,
      62,
      312,
      796,
      493,
      7,
      2435,
      13,
      2435,
      28955
    ],
    "start_token": 639,
    "end_token": 660,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      351,
      257,
      25131,
      6056,
      11507,
      12739,
      11902,
      4069
    ],
    "label": "ml_signal",
    "reason": "Method with a boolean flag parameter indicating optional behavior"
  },
  {
    "line": 112,
    "text": "        logger.info(f\"path: {path}, account: {account_id}, trader_name: {trader_name}, session: {session_id}\")",
    "annotation": "\ud83e\udde0 ML Signal: Conversion function usage pattern for entity_id",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      49706,
      13,
      10951,
      7,
      69,
      1,
      6978,
      25,
      1391,
      6978,
      5512,
      1848,
      25,
      1391,
      23317,
      62,
      312,
      5512,
      31791,
      62,
      3672,
      25,
      1391,
      2213,
      5067,
      62,
      3672,
      5512,
      6246,
      25,
      1391,
      29891,
      62,
      312,
      92,
      4943
    ],
    "start_token": 660,
    "end_token": 703,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      44101,
      2163,
      8748,
      3912,
      329,
      9312,
      62,
      312
    ],
    "label": "ml_signal",
    "reason": "Conversion function usage pattern for entity_id"
  },
  {
    "line": 114,
    "text": "        self.xt_trader = XtQuantTrader(path=path, session=session_id)",
    "annotation": "\ud83e\udde0 ML Signal: Method call pattern with object attributes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      742,
      62,
      2213,
      5067,
      796,
      1395,
      83,
      24915,
      2898,
      5067,
      7,
      6978,
      28,
      6978,
      11,
      6246,
      28,
      29891,
      62,
      312,
      8
    ],
    "start_token": 703,
    "end_token": 733,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      869,
      3912,
      351,
      2134,
      12608
    ],
    "label": "ml_signal",
    "reason": "Method call pattern with object attributes"
  },
  {
    "line": 114,
    "text": "        self.xt_trader = XtQuantTrader(path=path, session=session_id)",
    "annotation": "\ud83e\udde0 ML Signal: Method that queries and returns stock asset information",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      742,
      62,
      2213,
      5067,
      796,
      1395,
      83,
      24915,
      2898,
      5067,
      7,
      6978,
      28,
      6978,
      11,
      6246,
      28,
      29891,
      62,
      312,
      8
    ],
    "start_token": 733,
    "end_token": 763,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      326,
      20743,
      290,
      5860,
      4283,
      11171,
      1321
    ],
    "label": "ml_signal",
    "reason": "Method that queries and returns stock asset information"
  },
  {
    "line": 116,
    "text": "        # StockAccount\u53ef\u4ee5\u7528\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u8d26\u53f7\u7c7b\u578b\uff0c\u5982\u6caa\u6e2f\u901a\u4f20'HUGANGTONG'\uff0c\u6df1\u6e2f\u901a\u4f20'SHENGANGTONG'",
    "annotation": "\u2705 Best Practice: Explicit return of the queried asset",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      10500,
      30116,
      20998,
      107,
      20015,
      98,
      18796,
      101,
      163,
      105,
      105,
      12859,
      234,
      10310,
      103,
      20998,
      224,
      46763,
      108,
      162,
      234,
      229,
      22522,
      248,
      164,
      112,
      99,
      20998,
      115,
      163,
      109,
      119,
      161,
      252,
      233,
      171,
      120,
      234,
      36685,
      224,
      162,
      110,
      103,
      162,
      116,
      107,
      34460,
      248,
      27670,
      254,
      6,
      39,
      7340,
      15567,
      11357,
      38,
      6,
      171,
      120,
      234,
      162,
      115,
      109,
      162,
      116,
      107,
      34460,
      248,
      27670,
      254,
      6,
      9693,
      26808,
      15567,
      11357,
      38,
      6
    ],
    "start_token": 763,
    "end_token": 848,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11884,
      1441,
      286,
      262,
      42517,
      798,
      11171
    ],
    "label": "best_practice",
    "reason": "Explicit return of the queried asset"
  },
  {
    "line": 116,
    "text": "        # StockAccount\u53ef\u4ee5\u7528\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u8d26\u53f7\u7c7b\u578b\uff0c\u5982\u6caa\u6e2f\u901a\u4f20'HUGANGTONG'\uff0c\u6df1\u6e2f\u901a\u4f20'SHENGANGTONG'",
    "annotation": "\ud83e\udde0 ML Signal: Method for ordering stocks by amount, useful for learning trading patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      10500,
      30116,
      20998,
      107,
      20015,
      98,
      18796,
      101,
      163,
      105,
      105,
      12859,
      234,
      10310,
      103,
      20998,
      224,
      46763,
      108,
      162,
      234,
      229,
      22522,
      248,
      164,
      112,
      99,
      20998,
      115,
      163,
      109,
      119,
      161,
      252,
      233,
      171,
      120,
      234,
      36685,
      224,
      162,
      110,
      103,
      162,
      116,
      107,
      34460,
      248,
      27670,
      254,
      6,
      39,
      7340,
      15567,
      11357,
      38,
      6,
      171,
      120,
      234,
      162,
      115,
      109,
      162,
      116,
      107,
      34460,
      248,
      27670,
      254,
      6,
      9693,
      26808,
      15567,
      11357,
      38,
      6
    ],
    "start_token": 848,
    "end_token": 933,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      329,
      16216,
      14420,
      416,
      2033,
      11,
      4465,
      329,
      4673,
      7313,
      7572
    ],
    "label": "ml_signal",
    "reason": "Method for ordering stocks by amount, useful for learning trading patterns"
  },
  {
    "line": 118,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Conversion of entity_id to stock code, indicating a mapping pattern",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 933,
    "end_token": 933,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      44101,
      286,
      9312,
      62,
      312,
      284,
      4283,
      2438,
      11,
      12739,
      257,
      16855,
      3912
    ],
    "label": "ml_signal",
    "reason": "Conversion of entity_id to stock code, indicating a mapping pattern"
  },
  {
    "line": 118,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential risk if _to_qmt_code or _to_qmt_order_type are not validated",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 933,
    "end_token": 933,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      2526,
      611,
      4808,
      1462,
      62,
      80,
      16762,
      62,
      8189,
      393,
      4808,
      1462,
      62,
      80,
      16762,
      62,
      2875,
      62,
      4906,
      389,
      407,
      31031
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential risk if _to_qmt_code or _to_qmt_order_type are not validated"
  },
  {
    "line": 118,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of an external trading API, indicating integration with trading systems",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 933,
    "end_token": 933,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      281,
      7097,
      7313,
      7824,
      11,
      12739,
      11812,
      351,
      7313,
      3341
    ],
    "label": "ml_signal",
    "reason": "Use of an external trading API, indicating integration with trading systems"
  },
  {
    "line": 118,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of account information, relevant for account-based behavior analysis",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 933,
    "end_token": 933,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1848,
      1321,
      11,
      5981,
      329,
      1848,
      12,
      3106,
      4069,
      3781
    ],
    "label": "ml_signal",
    "reason": "Use of account information, relevant for account-based behavior analysis"
  },
  {
    "line": 128,
    "text": "        if connect_result != 0:",
    "annotation": "\ud83e\udde0 ML Signal: Use of stock code in trading, relevant for stock-specific behavior analysis",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      2018,
      62,
      20274,
      14512,
      657,
      25
    ],
    "start_token": 933,
    "end_token": 947,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4283,
      2438,
      287,
      7313,
      11,
      5981,
      329,
      4283,
      12,
      11423,
      4069,
      3781
    ],
    "label": "ml_signal",
    "reason": "Use of stock code in trading, relevant for stock-specific behavior analysis"
  },
  {
    "line": 128,
    "text": "        if connect_result != 0:",
    "annotation": "\ud83e\udde0 ML Signal: Conversion of order type, indicating a mapping pattern",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      2018,
      62,
      20274,
      14512,
      657,
      25
    ],
    "start_token": 947,
    "end_token": 961,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      44101,
      286,
      1502,
      2099,
      11,
      12739,
      257,
      16855,
      3912
    ],
    "label": "ml_signal",
    "reason": "Conversion of order type, indicating a mapping pattern"
  },
  {
    "line": 129,
    "text": "            logger.error(f\"qmt trader \u8fde\u63a5\u5931\u8d25: {connect_result}\")",
    "annotation": "\ud83e\udde0 ML Signal: Use of order volume, relevant for volume-based trading behavior",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      49706,
      13,
      18224,
      7,
      69,
      1,
      80,
      16762,
      31791,
      5525,
      123,
      252,
      162,
      236,
      98,
      13783,
      109,
      164,
      112,
      98,
      25,
      1391,
      8443,
      62,
      20274,
      92,
      4943
    ],
    "start_token": 961,
    "end_token": 999,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1502,
      6115,
      11,
      5981,
      329,
      6115,
      12,
      3106,
      7313,
      4069
    ],
    "label": "ml_signal",
    "reason": "Use of order volume, relevant for volume-based trading behavior"
  },
  {
    "line": 131,
    "text": "        logger.info(\"qmt trader \u5efa\u7acb\u4ea4\u6613\u8fde\u63a5\u6210\u529f\uff01\")",
    "annotation": "\ud83e\udde0 ML Signal: Use of fixed price type, relevant for price-based trading behavior",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      49706,
      13,
      10951,
      7203,
      80,
      16762,
      31791,
      10263,
      119,
      118,
      44165,
      233,
      12859,
      97,
      23626,
      241,
      32573,
      252,
      162,
      236,
      98,
      22755,
      238,
      27950,
      253,
      171,
      120,
      223,
      4943
    ],
    "start_token": 999,
    "end_token": 1035,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      5969,
      2756,
      2099,
      11,
      5981,
      329,
      2756,
      12,
      3106,
      7313,
      4069
    ],
    "label": "ml_signal",
    "reason": "Use of fixed price type, relevant for price-based trading behavior"
  },
  {
    "line": 132,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of order price, relevant for price-based trading behavior",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 1035,
    "end_token": 1035,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1502,
      2756,
      11,
      5981,
      329,
      2756,
      12,
      3106,
      7313,
      4069
    ],
    "label": "ml_signal",
    "reason": "Use of order price, relevant for price-based trading behavior"
  },
  {
    "line": 135,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of strategy name, relevant for strategy-based behavior analysis",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1035,
    "end_token": 1035,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4811,
      1438,
      11,
      5981,
      329,
      4811,
      12,
      3106,
      4069,
      3781
    ],
    "label": "ml_signal",
    "reason": "Use of strategy name, relevant for strategy-based behavior analysis"
  },
  {
    "line": 137,
    "text": "            logger.error(f\"\u8d26\u53f7\u8ba2\u9605\u5931\u8d25: {subscribe_result}\")",
    "annotation": "\ud83e\udde0 ML Signal: Use of order remark, relevant for custom order annotations",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      49706,
      13,
      18224,
      7,
      69,
      1,
      164,
      112,
      99,
      20998,
      115,
      164,
      106,
      95,
      165,
      11805,
      13783,
      109,
      164,
      112,
      98,
      25,
      1391,
      7266,
      12522,
      62,
      20274,
      92,
      4943
    ],
    "start_token": 1035,
    "end_token": 1075,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1502,
      6919,
      11,
      5981,
      329,
      2183,
      1502,
      37647
    ],
    "label": "ml_signal",
    "reason": "Use of order remark, relevant for custom order annotations"
  },
  {
    "line": 140,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of logging for tracking order results",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1075,
    "end_token": 1075,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      18931,
      329,
      9646,
      1502,
      2482
    ],
    "label": "best_practice",
    "reason": "Use of logging for tracking order results"
  },
  {
    "line": 130,
    "text": "            raise QmtError(f\"qmt trader \u8fde\u63a5\u5931\u8d25: {connect_result}\")",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over a list of objects to process each one",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      5298,
      1195,
      16762,
      12331,
      7,
      69,
      1,
      80,
      16762,
      31791,
      5525,
      123,
      252,
      162,
      236,
      98,
      13783,
      109,
      164,
      112,
      98,
      25,
      1391,
      8443,
      62,
      20274,
      92,
      4943
    ],
    "start_token": 1075,
    "end_token": 1114,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      257,
      1351,
      286,
      5563,
      284,
      1429,
      1123,
      530
    ],
    "label": "ml_signal",
    "reason": "Iterating over a list of objects to process each one"
  },
  {
    "line": 132,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Method call pattern for handling individual items",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1114,
    "end_token": 1114,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      869,
      3912,
      329,
      9041,
      1981,
      3709
    ],
    "label": "ml_signal",
    "reason": "Method call pattern for handling individual items"
  },
  {
    "line": 136,
    "text": "        if subscribe_result != 0:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Catching broad exceptions can hide specific errors",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      12383,
      62,
      20274,
      14512,
      657,
      25
    ],
    "start_token": 1114,
    "end_token": 1128,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      327,
      19775,
      3154,
      13269,
      460,
      7808,
      2176,
      8563
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Catching broad exceptions can hide specific errors"
  },
  {
    "line": 137,
    "text": "            logger.error(f\"\u8d26\u53f7\u8ba2\u9605\u5931\u8d25: {subscribe_result}\")",
    "annotation": "\ud83e\udde0 ML Signal: Logging exceptions for error tracking",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      49706,
      13,
      18224,
      7,
      69,
      1,
      164,
      112,
      99,
      20998,
      115,
      164,
      106,
      95,
      165,
      11805,
      13783,
      109,
      164,
      112,
      98,
      25,
      1391,
      7266,
      12522,
      62,
      20274,
      92,
      4943
    ],
    "start_token": 1128,
    "end_token": 1168,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      13269,
      329,
      4049,
      9646
    ],
    "label": "ml_signal",
    "reason": "Logging exceptions for error tracking"
  },
  {
    "line": 139,
    "text": "        logger.info(\"\u8d26\u53f7\u8ba2\u9605\u6210\u529f\uff01\")",
    "annotation": "\ud83e\udde0 ML Signal: Error handling pattern with additional context",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      49706,
      13,
      10951,
      7203,
      164,
      112,
      99,
      20998,
      115,
      164,
      106,
      95,
      165,
      11805,
      22755,
      238,
      27950,
      253,
      171,
      120,
      223,
      4943
    ],
    "start_token": 1168,
    "end_token": 1197,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      13047,
      9041,
      3912,
      351,
      3224,
      4732
    ],
    "label": "ml_signal",
    "reason": "Error handling pattern with additional context"
  },
  {
    "line": 139,
    "text": "        logger.info(\"\u8d26\u53f7\u8ba2\u9605\u6210\u529f\uff01\")",
    "annotation": "\ud83e\udde0 ML Signal: Mapping trading signal type to order type can indicate trading strategy",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      49706,
      13,
      10951,
      7203,
      164,
      112,
      99,
      20998,
      115,
      164,
      106,
      95,
      165,
      11805,
      22755,
      238,
      27950,
      253,
      171,
      120,
      223,
      4943
    ],
    "start_token": 1197,
    "end_token": 1226,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      337,
      5912,
      7313,
      6737,
      2099,
      284,
      1502,
      2099,
      460,
      7603,
      7313,
      4811
    ],
    "label": "ml_signal",
    "reason": "Mapping trading signal type to order type can indicate trading strategy"
  },
  {
    "line": 141,
    "text": "    def get_positions(self):",
    "annotation": "\ud83e\udde0 ML Signal: Trading level usage can indicate risk appetite or strategy",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      651,
      62,
      1930,
      1756,
      7,
      944,
      2599
    ],
    "start_token": 1226,
    "end_token": 1237,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      25469,
      1241,
      8748,
      460,
      7603,
      2526,
      20788,
      393,
      4811
    ],
    "label": "ml_signal",
    "reason": "Trading level usage can indicate risk appetite or strategy"
  },
  {
    "line": 142,
    "text": "        positions: List[XtPosition] = self.xt_trader.query_stock_positions(self.account)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential time-based logic flaw if system time is manipulated",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6116,
      25,
      7343,
      58,
      55,
      83,
      26545,
      60,
      796,
      2116,
      13,
      742,
      62,
      2213,
      5067,
      13,
      22766,
      62,
      13578,
      62,
      1930,
      1756,
      7,
      944,
      13,
      23317,
      8
    ],
    "start_token": 1237,
    "end_token": 1271,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      640,
      12,
      3106,
      9156,
      11804,
      611,
      1080,
      640,
      318,
      25036
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential time-based logic flaw if system time is manipulated"
  },
  {
    "line": 149,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): External data source used without validation",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1271,
    "end_token": 1271,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      34579,
      1366,
      2723,
      973,
      1231,
      21201
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "External data source used without validation"
  },
  {
    "line": 152,
    "text": "        return asset",
    "annotation": "\ud83e\udde0 ML Signal: Using ask price for long orders can indicate trading strategy",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      11171
    ],
    "start_token": 1271,
    "end_token": 1280,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8554,
      1265,
      2756,
      329,
      890,
      6266,
      460,
      7603,
      7313,
      4811
    ],
    "label": "ml_signal",
    "reason": "Using ask price for long orders can indicate trading strategy"
  },
  {
    "line": 153,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Using bid price for closing long orders can indicate trading strategy",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1280,
    "end_token": 1280,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8554,
      8406,
      2756,
      329,
      9605,
      890,
      6266,
      460,
      7603,
      7313,
      4811
    ],
    "label": "ml_signal",
    "reason": "Using bid price for closing long orders can indicate trading strategy"
  },
  {
    "line": 158,
    "text": "            stock_code=stock_code,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of assert for control flow can be bypassed in production",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4283,
      62,
      8189,
      28,
      13578,
      62,
      8189,
      11
    ],
    "start_token": 1280,
    "end_token": 1299,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      6818,
      329,
      1630,
      5202,
      460,
      307,
      17286,
      276,
      287,
      3227
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of assert for control flow can be bypassed in production"
  },
  {
    "line": 160,
    "text": "            order_volume=order_amount,",
    "annotation": "\u2705 Best Practice: Use keyword arguments for clarity and maintainability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1502,
      62,
      29048,
      28,
      2875,
      62,
      17287,
      11
    ],
    "start_token": 1299,
    "end_token": 1318,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      21179,
      7159,
      329,
      16287,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Use keyword arguments for clarity and maintainability"
  },
  {
    "line": 160,
    "text": "            order_volume=order_amount,",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with a specific event name, indicating event-driven programming",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1502,
      62,
      29048,
      28,
      2875,
      62,
      17287,
      11
    ],
    "start_token": 1318,
    "end_token": 1337,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      257,
      2176,
      1785,
      1438,
      11,
      12739,
      1785,
      12,
      15808,
      8300
    ],
    "label": "ml_signal",
    "reason": "Function definition with a specific event name, indicating event-driven programming"
  },
  {
    "line": 162,
    "text": "            price=order_price,",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with a specific event name pattern, useful for event-driven model training",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2756,
      28,
      2875,
      62,
      20888,
      11
    ],
    "start_token": 1337,
    "end_token": 1354,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      257,
      2176,
      1785,
      1438,
      3912,
      11,
      4465,
      329,
      1785,
      12,
      15808,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Function definition with a specific event name pattern, useful for event-driven model training"
  },
  {
    "line": 164,
    "text": "            order_remark=\"order from zvt\",",
    "annotation": "\u2705 Best Practice: Method is defined but not implemented; consider adding a docstring or implementation.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1502,
      62,
      2787,
      668,
      2625,
      2875,
      422,
      1976,
      36540,
      1600
    ],
    "start_token": 1354,
    "end_token": 1375,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11789,
      318,
      5447,
      475,
      407,
      9177,
      26,
      2074,
      4375,
      257,
      2205,
      8841,
      393,
      7822,
      13
    ],
    "label": "best_practice",
    "reason": "Method is defined but not implemented; consider adding a docstring or implementation."
  },
  {
    "line": 166,
    "text": "        logger.info(f\"order result id: {fix_result_order_id}\")",
    "annotation": "\ud83e\udde0 ML Signal: Method signature indicates handling of trading errors, useful for error pattern analysis",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      49706,
      13,
      10951,
      7,
      69,
      1,
      2875,
      1255,
      4686,
      25,
      1391,
      13049,
      62,
      20274,
      62,
      2875,
      62,
      312,
      92,
      4943
    ],
    "start_token": 1375,
    "end_token": 1402,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      9877,
      9217,
      9041,
      286,
      7313,
      8563,
      11,
      4465,
      329,
      4049,
      3912,
      3781
    ],
    "label": "ml_signal",
    "reason": "Method signature indicates handling of trading errors, useful for error pattern analysis"
  },
  {
    "line": 168,
    "text": "    def on_trading_signals(self, trading_signals: List[TradingSignal]):",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over a list of stock codes for batch processing",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      319,
      62,
      2213,
      4980,
      62,
      12683,
      874,
      7,
      944,
      11,
      7313,
      62,
      12683,
      874,
      25,
      7343,
      58,
      2898,
      4980,
      11712,
      282,
      60,
      2599
    ],
    "start_token": 1402,
    "end_token": 1429,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      257,
      1351,
      286,
      4283,
      12416,
      329,
      15458,
      7587
    ],
    "label": "ml_signal",
    "reason": "Iterating over a list of stock codes for batch processing"
  },
  {
    "line": 170,
    "text": "            try:",
    "annotation": "\ud83e\udde0 ML Signal: Converting entity IDs to stock codes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1949,
      25
    ],
    "start_token": 1429,
    "end_token": 1442,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      35602,
      889,
      9312,
      32373,
      284,
      4283,
      12416
    ],
    "label": "ml_signal",
    "reason": "Converting entity IDs to stock codes"
  },
  {
    "line": 172,
    "text": "            except Exception as e:",
    "annotation": "\ud83e\udde0 ML Signal: Looping through stock codes and associated percentages",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2845,
      35528,
      355,
      304,
      25
    ],
    "start_token": 1442,
    "end_token": 1458,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6706,
      15816,
      832,
      4283,
      12416,
      290,
      3917,
      28071
    ],
    "label": "ml_signal",
    "reason": "Looping through stock codes and associated percentages"
  },
  {
    "line": 173,
    "text": "                logger.exception(e)",
    "annotation": "\ud83e\udde0 ML Signal: Accessing sell percentages for each stock",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      49706,
      13,
      1069,
      4516,
      7,
      68,
      8
    ],
    "start_token": 1458,
    "end_token": 1480,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8798,
      278,
      3677,
      28071,
      329,
      1123,
      4283
    ],
    "label": "ml_signal",
    "reason": "Accessing sell percentages for each stock"
  },
  {
    "line": 173,
    "text": "                logger.exception(e)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential issue if query_stock_position returns None or unexpected data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      49706,
      13,
      1069,
      4516,
      7,
      68,
      8
    ],
    "start_token": 1480,
    "end_token": 1502,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2071,
      611,
      12405,
      62,
      13578,
      62,
      9150,
      5860,
      6045,
      393,
      10059,
      1366
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential issue if query_stock_position returns None or unexpected data"
  },
  {
    "line": 173,
    "text": "                logger.exception(e)",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Ensure order_volume calculation does not result in unintended zero or negative values",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      49706,
      13,
      1069,
      4516,
      7,
      68,
      8
    ],
    "start_token": 1502,
    "end_token": 1524,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      48987,
      1502,
      62,
      29048,
      17952,
      857,
      407,
      1255,
      287,
      30261,
      6632,
      393,
      4633,
      3815
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Ensure order_volume calculation does not result in unintended zero or negative values"
  },
  {
    "line": 189,
    "text": "            return",
    "annotation": "\u2705 Best Practice: Logging order result for traceability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441
    ],
    "start_token": 1524,
    "end_token": 1536,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5972,
      2667,
      1502,
      1255,
      329,
      12854,
      1799
    ],
    "label": "best_practice",
    "reason": "Logging order result for traceability"
  },
  {
    "line": 201,
    "text": "            order_type=order_type,",
    "annotation": "\ud83e\udde0 ML Signal: Usage of external data source for stock information",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1502,
      62,
      4906,
      28,
      2875,
      62,
      4906,
      11
    ],
    "start_token": 1536,
    "end_token": 1555,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      7097,
      1366,
      2723,
      329,
      4283,
      1321
    ],
    "label": "ml_signal",
    "reason": "Usage of external data source for stock information"
  },
  {
    "line": 210,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential division by zero if try_price is zero",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1555,
    "end_token": 1555,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      7297,
      416,
      6632,
      611,
      1949,
      62,
      20888,
      318,
      6632
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential division by zero if try_price is zero"
  },
  {
    "line": 211,
    "text": "    def on_trading_finish(self, timestamp):",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of placing stock orders",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      319,
      62,
      2213,
      4980,
      62,
      15643,
      680,
      7,
      944,
      11,
      41033,
      2599
    ],
    "start_token": 1555,
    "end_token": 1571,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      12560,
      4283,
      6266
    ],
    "label": "ml_signal",
    "reason": "Pattern of placing stock orders"
  },
  {
    "line": 224,
    "text": "        # market_value\tfloat\t\u5e02\u503c",
    "annotation": "\ud83e\udde0 ML Signal: Logging of order results",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      1910,
      62,
      8367,
      197,
      22468,
      197,
      30585,
      224,
      161,
      222,
      120
    ],
    "start_token": 1571,
    "end_token": 1590,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      286,
      1502,
      2482
    ],
    "label": "ml_signal",
    "reason": "Logging of order results"
  },
  {
    "line": 225,
    "text": "        # frozen_volume\tint\t\u51bb\u7ed3\u6570\u91cf",
    "annotation": "\u2705 Best Practice: Use of main guard to prevent code from running on import",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      12912,
      62,
      29048,
      197,
      600,
      197,
      37863,
      119,
      163,
      119,
      241,
      46763,
      108,
      34932,
      237
    ],
    "start_token": 1590,
    "end_token": 1613,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      1388,
      4860,
      284,
      2948,
      2438,
      422,
      2491,
      319,
      1330
    ],
    "label": "best_practice",
    "reason": "Use of main guard to prevent code from running on import"
  },
  {
    "line": 225,
    "text": "        # frozen_volume\tint\t\u51bb\u7ed3\u6570\u91cf",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoded file path, potential for path injection",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      12912,
      62,
      29048,
      197,
      600,
      197,
      37863,
      119,
      163,
      119,
      241,
      46763,
      108,
      34932,
      237
    ],
    "start_token": 1613,
    "end_token": 1636,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      40976,
      2393,
      3108,
      11,
      2785,
      329,
      3108,
      16954
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoded file path, potential for path injection"
  },
  {
    "line": 225,
    "text": "        # frozen_volume\tint\t\u51bb\u7ed3\u6570\u91cf",
    "annotation": "\ud83e\udde0 ML Signal: Retrieval of account positions",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      12912,
      62,
      29048,
      197,
      600,
      197,
      37863,
      119,
      163,
      119,
      241,
      46763,
      108,
      34932,
      237
    ],
    "start_token": 1636,
    "end_token": 1659,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      4990,
      380,
      18206,
      286,
      1848,
      6116
    ],
    "label": "ml_signal",
    "reason": "Retrieval of account positions"
  },
  {
    "line": 225,
    "text": "        # frozen_volume\tint\t\u51bb\u7ed3\u6570\u91cf",
    "annotation": "\u2705 Best Practice: Use of __all__ to define public API of the module",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      12912,
      62,
      29048,
      197,
      600,
      197,
      37863,
      119,
      163,
      119,
      241,
      46763,
      108,
      34932,
      237
    ],
    "start_token": 1659,
    "end_token": 1682,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265
    ],
    "label": "best_practice",
    "reason": "Use of __all__ to define public API of the module"
  }
]