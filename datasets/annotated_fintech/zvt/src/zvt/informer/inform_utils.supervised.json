[
  {
    "line": 3,
    "text": "import requests",
    "annotation": "\ud83e\udde0 ML Signal: Importing specific configurations or settings from a module",
    "confidence": 1.0,
    "tokens": [
      11748,
      7007
    ],
    "start_token": 0,
    "end_token": 2,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      2176,
      25412,
      393,
      6460,
      422,
      257,
      8265
    ],
    "label": "ml_signal",
    "reason": "Importing specific configurations or settings from a module"
  },
  {
    "line": 5,
    "text": "from zvt import zvt_config",
    "annotation": "\ud83e\udde0 ML Signal: Importing specific functions or classes from a module",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      1330,
      1976,
      36540,
      62,
      11250
    ],
    "start_token": 2,
    "end_token": 10,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      2176,
      5499,
      393,
      6097,
      422,
      257,
      8265
    ],
    "label": "ml_signal",
    "reason": "Importing specific functions or classes from a module"
  },
  {
    "line": 7,
    "text": "from zvt.informer import EmailInformer",
    "annotation": "\ud83e\udde0 ML Signal: Importing specific functions or classes from a module",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      259,
      16354,
      1330,
      9570,
      818,
      16354
    ],
    "start_token": 10,
    "end_token": 20,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      2176,
      5499,
      393,
      6097,
      422,
      257,
      8265
    ],
    "label": "ml_signal",
    "reason": "Importing specific functions or classes from a module"
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\u2705 Best Practice: Consider handling exceptions that may arise from get_entities to improve robustness.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 20,
    "end_token": 20,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      9041,
      13269,
      326,
      743,
      15058,
      422,
      651,
      62,
      298,
      871,
      284,
      2987,
      12373,
      1108,
      13
    ],
    "label": "best_practice",
    "reason": "Consider handling exceptions that may arise from get_entities to improve robustness."
  },
  {
    "line": 11,
    "text": "    msg = \"no targets\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Using assert for runtime checks can be disabled with optimization flags, consider using explicit error handling.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      31456,
      796,
      366,
      3919,
      6670,
      1
    ],
    "start_token": 20,
    "end_token": 29,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      8554,
      6818,
      329,
      19124,
      8794,
      460,
      307,
      10058,
      351,
      23989,
      9701,
      11,
      2074,
      1262,
      7952,
      4049,
      9041,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Using assert for runtime checks can be disabled with optimization flags, consider using explicit error handling."
  },
  {
    "line": 13,
    "text": "        entities = get_entities(provider=provider, entity_type=entity_type, entity_ids=entity_ids, return_type=\"domain\")",
    "annotation": "\ud83e\udde0 ML Signal: List comprehension usage indicates a pattern of transforming data.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      12066,
      796,
      651,
      62,
      298,
      871,
      7,
      15234,
      1304,
      28,
      15234,
      1304,
      11,
      9312,
      62,
      4906,
      28,
      26858,
      62,
      4906,
      11,
      9312,
      62,
      2340,
      28,
      26858,
      62,
      2340,
      11,
      1441,
      62,
      4906,
      2625,
      27830,
      4943
    ],
    "start_token": 29,
    "end_token": 71,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7343,
      35915,
      8748,
      9217,
      257,
      3912,
      286,
      25449,
      1366,
      13
    ],
    "label": "ml_signal",
    "reason": "List comprehension usage indicates a pattern of transforming data."
  },
  {
    "line": 15,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: String joining pattern for creating multi-line messages.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 71,
    "end_token": 71,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      10903,
      9679,
      3912,
      329,
      4441,
      5021,
      12,
      1370,
      6218,
      13
    ],
    "label": "ml_signal",
    "reason": "String joining pattern for creating multi-line messages."
  },
  {
    "line": 17,
    "text": "        msg = \"\\n\".join(infos) + \"\\n\"",
    "annotation": "\u2705 Best Practice: Ensure EmailInformer().send_message handles exceptions to prevent application crashes.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      31456,
      796,
      37082,
      77,
      1911,
      22179,
      7,
      10745,
      418,
      8,
      1343,
      37082,
      77,
      1
    ],
    "start_token": 71,
    "end_token": 92,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      48987,
      9570,
      818,
      16354,
      22446,
      21280,
      62,
      20500,
      17105,
      13269,
      284,
      2948,
      3586,
      17616,
      13
    ],
    "label": "best_practice",
    "reason": "Ensure EmailInformer().send_message handles exceptions to prevent application crashes."
  },
  {
    "line": 19,
    "text": "        EmailInformer().send_message(zvt_config[\"email_username\"], f\"{target_date} {title}\", msg)",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potentially sensitive operation without error handling",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9570,
      818,
      16354,
      22446,
      21280,
      62,
      20500,
      7,
      89,
      36540,
      62,
      11250,
      14692,
      12888,
      62,
      29460,
      33116,
      277,
      1,
      90,
      16793,
      62,
      4475,
      92,
      1391,
      7839,
      92,
      1600,
      31456,
      8
    ],
    "start_token": 92,
    "end_token": 129,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      6902,
      3746,
      8564,
      4905,
      1231,
      4049,
      9041
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potentially sensitive operation without error handling"
  },
  {
    "line": 25,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Deleting a group without confirmation or logging",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 129,
    "end_token": 129,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      42226,
      889,
      257,
      1448,
      1231,
      12641,
      393,
      18931
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Deleting a group without confirmation or logging"
  },
  {
    "line": 28,
    "text": "            group_id = eastmoneypy.get_group_id(group, session=session, headers=headers)",
    "annotation": "\ud83e\udde0 ML Signal: Usage of set to remove duplicates",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1448,
      62,
      312,
      796,
      7627,
      26316,
      9078,
      13,
      1136,
      62,
      8094,
      62,
      312,
      7,
      8094,
      11,
      6246,
      28,
      29891,
      11,
      24697,
      28,
      50145,
      8
    ],
    "start_token": 129,
    "end_token": 164,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      900,
      284,
      4781,
      14184,
      16856
    ],
    "label": "ml_signal",
    "reason": "Usage of set to remove duplicates"
  },
  {
    "line": 31,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Creating a group without validation or logging",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 164,
    "end_token": 164,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      30481,
      257,
      1448,
      1231,
      21201,
      393,
      18931
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Creating a group without validation or logging"
  },
  {
    "line": 35,
    "text": "            if group_id and over_write:",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potentially sensitive operation without error handling",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      1448,
      62,
      312,
      290,
      625,
      62,
      13564,
      25
    ],
    "start_token": 164,
    "end_token": 184,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      6902,
      3746,
      8564,
      4905,
      1231,
      4049,
      9041
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potentially sensitive operation without error handling"
  },
  {
    "line": 38,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Set difference operation to find new codes",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 184,
    "end_token": 184,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5345,
      3580,
      4905,
      284,
      1064,
      649,
      12416
    ],
    "label": "ml_signal",
    "reason": "Set difference operation to find new codes"
  },
  {
    "line": 41,
    "text": "                result = eastmoneypy.create_group(group_name=group, session=session, headers=headers)",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Adding to group without validation or logging",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1255,
      796,
      7627,
      26316,
      9078,
      13,
      17953,
      62,
      8094,
      7,
      8094,
      62,
      3672,
      28,
      8094,
      11,
      6246,
      28,
      29891,
      11,
      24697,
      28,
      50145,
      8
    ],
    "start_token": 184,
    "end_token": 223,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      18247,
      284,
      1448,
      1231,
      21201,
      393,
      18931
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Adding to group without validation or logging"
  },
  {
    "line": 44,
    "text": "                current_codes = eastmoneypy.list_entities(group_id=group_id, session=session, headers=headers)",
    "annotation": "\u2705 Best Practice: Using a session object for requests can improve performance and resource management.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1459,
      62,
      40148,
      796,
      7627,
      26316,
      9078,
      13,
      4868,
      62,
      298,
      871,
      7,
      8094,
      62,
      312,
      28,
      8094,
      62,
      312,
      11,
      6246,
      28,
      29891,
      11,
      24697,
      28,
      50145,
      8
    ],
    "start_token": 223,
    "end_token": 267,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      257,
      6246,
      2134,
      329,
      7007,
      460,
      2987,
      2854,
      290,
      8271,
      4542,
      13
    ],
    "label": "best_practice",
    "reason": "Using a session object for requests can improve performance and resource management."
  },
  {
    "line": 46,
    "text": "                    codes = codes - set(current_codes)",
    "annotation": "\ud83e\udde0 ML Signal: Usage of external library function `get_groups` with session and headers.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      12416,
      796,
      12416,
      532,
      900,
      7,
      14421,
      62,
      40148,
      8
    ],
    "start_token": 267,
    "end_token": 296,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      7097,
      5888,
      2163,
      4600,
      1136,
      62,
      24432,
      63,
      351,
      6246,
      290,
      24697,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of external library function `get_groups` with session and headers."
  },
  {
    "line": 48,
    "text": "            for code in codes:",
    "annotation": "\ud83e\udde0 ML Signal: Filtering groups based on a condition, indicating a pattern of data processing.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      329,
      2438,
      287,
      12416,
      25
    ],
    "start_token": 296,
    "end_token": 312,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7066,
      20212,
      2628,
      1912,
      319,
      257,
      4006,
      11,
      12739,
      257,
      3912,
      286,
      1366,
      7587,
      13
    ],
    "label": "ml_signal",
    "reason": "Filtering groups based on a condition, indicating a pattern of data processing."
  },
  {
    "line": 51,
    "text": "                )",
    "annotation": "\ud83e\udde0 ML Signal: Usage of external library function `del_group` with session and headers.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 312,
    "end_token": 328,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      7097,
      5888,
      2163,
      4600,
      12381,
      62,
      8094,
      63,
      351,
      6246,
      290,
      24697,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of external library function `del_group` with session and headers."
  },
  {
    "line": 52,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential risk of deleting important data if `keep` is not properly set.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 328,
    "end_token": 328,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      2526,
      286,
      34817,
      1593,
      1366,
      611,
      4600,
      14894,
      63,
      318,
      407,
      6105,
      900,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential risk of deleting important data if `keep` is not properly set."
  },
  {
    "line": 50,
    "text": "                    code=code, entity_type=entity_type, group_id=group_id, session=session, headers=headers",
    "annotation": "\u2705 Best Practice: Use of default mutable arguments can lead to unexpected behavior; using None and initializing inside the function is safer.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2438,
      28,
      8189,
      11,
      9312,
      62,
      4906,
      28,
      26858,
      62,
      4906,
      11,
      1448,
      62,
      312,
      28,
      8094,
      62,
      312,
      11,
      6246,
      28,
      29891,
      11,
      24697,
      28,
      50145
    ],
    "start_token": 328,
    "end_token": 374,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      4277,
      4517,
      540,
      7159,
      460,
      1085,
      284,
      10059,
      4069,
      26,
      1262,
      6045,
      290,
      4238,
      2890,
      2641,
      262,
      2163,
      318,
      14178,
      13
    ],
    "label": "best_practice",
    "reason": "Use of default mutable arguments can lead to unexpected behavior; using None and initializing inside the function is safer."
  },
  {
    "line": 55,
    "text": "    if headers_list is None:",
    "annotation": "\ud83e\udde0 ML Signal: Usage of external library 'requests' for HTTP operations.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      611,
      24697,
      62,
      4868,
      318,
      6045,
      25
    ],
    "start_token": 374,
    "end_token": 384,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      7097,
      5888,
      705,
      8897,
      3558,
      6,
      329,
      14626,
      4560,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of external library 'requests' for HTTP operations."
  },
  {
    "line": 55,
    "text": "    if headers_list is None:",
    "annotation": "\ud83e\udde0 ML Signal: Usage of 'eastmoneypy.del_group' function indicates interaction with a specific API or service.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      611,
      24697,
      62,
      4868,
      318,
      6045,
      25
    ],
    "start_token": 384,
    "end_token": 394,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      705,
      23316,
      26316,
      9078,
      13,
      12381,
      62,
      8094,
      6,
      2163,
      9217,
      10375,
      351,
      257,
      2176,
      7824,
      393,
      2139,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of 'eastmoneypy.del_group' function indicates interaction with a specific API or service."
  },
  {
    "line": 55,
    "text": "    if headers_list is None:",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential risk of sending sensitive data over a network; ensure secure transmission.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      611,
      24697,
      62,
      4868,
      318,
      6045,
      25
    ],
    "start_token": 394,
    "end_token": 404,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      2526,
      286,
      7216,
      8564,
      1366,
      625,
      257,
      3127,
      26,
      4155,
      5713,
      11478,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential risk of sending sensitive data over a network; ensure secure transmission."
  },
  {
    "line": 55,
    "text": "    if headers_list is None:",
    "annotation": "\u2705 Best Practice: Use of __all__ to define public API of the module, improving code maintainability and readability.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      611,
      24697,
      62,
      4868,
      318,
      6045,
      25
    ],
    "start_token": 404,
    "end_token": 414,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265,
      11,
      10068,
      2438,
      5529,
      1799,
      290,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Use of __all__ to define public API of the module, improving code maintainability and readability."
  }
]