annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Group imports from the same module together for better readability.,"[26486, 227, 6705, 19939, 25, 4912, 17944, 422, 262, 976, 8265, 1978, 329, 1365, 1100, 1799, 13]",1.0,0,best_practice,2,Group imports from the same module together for better readability.,,0,,[]
‚úÖ Best Practice: Group imports from the same module together for better readability.,"[26486, 227, 6705, 19939, 25, 4912, 17944, 422, 262, 976, 8265, 1978, 329, 1365, 1100, 1799, 13]",1.0,16,best_practice,5,Group imports from the same module together for better readability.,,0,from zvt.api.kdata import get_kdata_schema,"[6738, 1976, 36540, 13, 15042, 13, 74, 7890, 1330, 651, 62, 74, 7890, 62, 15952, 2611]"
‚úÖ Best Practice: Group imports from the same module together for better readability.,"[26486, 227, 6705, 19939, 25, 4912, 17944, 422, 262, 976, 8265, 1978, 329, 1365, 1100, 1799, 13]",1.0,27,best_practice,8,Group imports from the same module together for better readability.,,16,from zvt.contract.drawer import Drawer,"[6738, 1976, 36540, 13, 28484, 13, 19334, 263, 1330, 15315, 263]"
‚úÖ Best Practice: Group imports from the same module together for better readability.,"[26486, 227, 6705, 19939, 25, 4912, 17944, 422, 262, 976, 8265, 1978, 329, 1365, 1100, 1799, 13]",1.0,45,best_practice,11,Group imports from the same module together for better readability.,,27,from zvt.utils.pd_utils import pd_is_not_null,"[6738, 1976, 36540, 13, 26791, 13, 30094, 62, 26791, 1330, 279, 67, 62, 271, 62, 1662, 62, 8423]"
‚úÖ Best Practice: Group imports from the same module together for better readability.,"[26486, 227, 6705, 19939, 25, 4912, 17944, 422, 262, 976, 8265, 1978, 329, 1365, 1100, 1799, 13]",1.0,56,best_practice,14,Group imports from the same module together for better readability.,,45,def order_type_color(order_type):,"[4299, 1502, 62, 4906, 62, 8043, 7, 2875, 62, 4906, 2599]"
‚úÖ Best Practice: Group imports from the same module together for better readability.,"[26486, 227, 6705, 19939, 25, 4912, 17944, 422, 262, 976, 8265, 1978, 329, 1365, 1100, 1799, 13]",1.0,68,best_practice,16,Group imports from the same module together for better readability.,,56,"        return ""#ec0000""","[220, 220, 220, 220, 220, 220, 220, 1441, 25113, 721, 2388, 1]"
‚úÖ Best Practice: Group imports from the same module together for better readability.,"[26486, 227, 6705, 19939, 25, 4912, 17944, 422, 262, 976, 8265, 1978, 329, 1365, 1100, 1799, 13]",1.0,68,best_practice,19,Group imports from the same module together for better readability.,,68,,[]
‚úÖ Best Practice: Group imports from the same module together for better readability.,"[26486, 227, 6705, 19939, 25, 4912, 17944, 422, 262, 976, 8265, 1978, 329, 1365, 1100, 1799, 13]",1.0,79,best_practice,23,Group imports from the same module together for better readability.,,68,"        return ""B""","[220, 220, 220, 220, 220, 220, 220, 1441, 366, 33, 1]"
üß† ML Signal: Function with conditional logic based on input value,"[8582, 100, 254, 10373, 26484, 25, 15553, 351, 26340, 9156, 1912, 319, 5128, 1988]",1.0,89,ml_signal,9,Function with conditional logic based on input value,,79,from zvt.contract.reader import DataReader,"[6738, 1976, 36540, 13, 28484, 13, 46862, 1330, 6060, 33634]"
üß† ML Signal: Specific string values used to determine logic flow,"[8582, 100, 254, 10373, 26484, 25, 17377, 4731, 3815, 973, 284, 5004, 9156, 5202]",1.0,107,ml_signal,11,Specific string values used to determine logic flow,,89,from zvt.utils.pd_utils import pd_is_not_null,"[6738, 1976, 36540, 13, 26791, 13, 30094, 62, 26791, 1330, 279, 67, 62, 271, 62, 1662, 62, 8423]"
üß† ML Signal: Returns specific color code based on condition,"[8582, 100, 254, 10373, 26484, 25, 16409, 2176, 3124, 2438, 1912, 319, 4006]",1.0,107,ml_signal,13,Returns specific color code based on condition,,107,,[]
üß† ML Signal: Default return value for unspecified conditions,"[8582, 100, 254, 10373, 26484, 25, 15161, 1441, 1988, 329, 29547, 3403]",1.0,119,ml_signal,16,Default return value for unspecified conditions,,107,"        return ""#ec0000""","[220, 220, 220, 220, 220, 220, 220, 1441, 25113, 721, 2388, 1]"
"üß† ML Signal: Function uses conditional logic to map input to output, useful for learning decision boundaries","[8582, 100, 254, 10373, 26484, 25, 15553, 3544, 26340, 9156, 284, 3975, 5128, 284, 5072, 11, 4465, 329, 4673, 2551, 13215]",0.5,144,ml_signal,15,"Function uses conditional logic to map input to output, useful for learning decision boundaries",,119,"    if order_type == ""order_long"" or order_type == ""order_close_short"":","[220, 220, 220, 611, 1502, 62, 4906, 6624, 366, 2875, 62, 6511, 1, 393, 1502, 62, 4906, 6624, 366, 2875, 62, 19836, 62, 19509, 1298]"
"üß† ML Signal: Specific string values are used to determine output, indicating categorical input","[8582, 100, 254, 10373, 26484, 25, 17377, 4731, 3815, 389, 973, 284, 5004, 5072, 11, 12739, 4253, 12409, 5128]",0.5,156,ml_signal,16,"Specific string values are used to determine output, indicating categorical input",,144,"        return ""#ec0000""","[220, 220, 220, 220, 220, 220, 220, 1441, 25113, 721, 2388, 1]"
"üß† ML Signal: Default return value for non-matching conditions, useful for learning default behavior","[8582, 100, 254, 10373, 26484, 25, 15161, 1441, 1988, 329, 1729, 12, 15699, 278, 3403, 11, 4465, 329, 4673, 4277, 4069]",0.5,156,ml_signal,19,"Default return value for non-matching conditions, useful for learning default behavior",,156,,[]
"üß† ML Signal: Decoding entity_id to extract entity_type, which could be used to understand entity categorization patterns","[8582, 100, 254, 10373, 26484, 25, 4280, 7656, 9312, 62, 312, 284, 7925, 9312, 62, 4906, 11, 543, 714, 307, 973, 284, 1833, 9312, 17851, 1634, 7572]",0.5,181,ml_signal,22,"Decoding entity_id to extract entity_type, which could be used to understand entity categorization patterns",,156,"    if order_type == ""order_long"" or order_type == ""order_close_short"":","[220, 220, 220, 611, 1502, 62, 4906, 6624, 366, 2875, 62, 6511, 1, 393, 1502, 62, 4906, 6624, 366, 2875, 62, 19836, 62, 19509, 1298]"
üß† ML Signal: Usage of get_kdata_schema to determine data schema based on entity type and other parameters,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 651, 62, 74, 7890, 62, 15952, 2611, 284, 5004, 1366, 32815, 1912, 319, 9312, 2099, 290, 584, 10007]",0.5,186,ml_signal,24,Usage of get_kdata_schema to determine data schema based on entity type and other parameters,,181,    else:,"[220, 220, 220, 2073, 25]"
‚úÖ Best Practice: Defaulting start_timestamp to order_reader's start_timestamp if not provided,"[26486, 227, 6705, 19939, 25, 15161, 278, 923, 62, 16514, 27823, 284, 1502, 62, 46862, 338, 923, 62, 16514, 27823, 611, 407, 2810]",1.0,186,best_practice,27,Defaulting start_timestamp to order_reader's start_timestamp if not provided,,186,,[]
‚úÖ Best Practice: Defaulting end_timestamp to order_reader's end_timestamp if not provided,"[26486, 227, 6705, 19939, 25, 15161, 278, 886, 62, 16514, 27823, 284, 1502, 62, 46862, 338, 886, 62, 16514, 27823, 611, 407, 2810]",1.0,197,best_practice,28,Defaulting end_timestamp to order_reader's end_timestamp if not provided,,186,def get_trading_signals_figure(,"[4299, 651, 62, 2213, 4980, 62, 12683, 874, 62, 26875, 7]"
"üß† ML Signal: Instantiating DataReader with specific parameters, indicating data access patterns","[8582, 100, 254, 10373, 26484, 25, 2262, 17096, 803, 6060, 33634, 351, 2176, 10007, 11, 12739, 1366, 1895, 7572]",0.5,208,ml_signal,28,"Instantiating DataReader with specific parameters, indicating data access patterns",,197,def get_trading_signals_figure(,"[4299, 651, 62, 2213, 4980, 62, 12683, 874, 62, 26875, 7]"
‚ö†Ô∏è SAST Risk (Low): Potential for infinite loop if move_on does not handle timeout properly,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 15541, 9052, 611, 1445, 62, 261, 857, 407, 5412, 26827, 6105]",1.0,223,sast_risk,41,Potential for infinite loop if move_on does not handle timeout properly,Low,208,"        entity_ids=[entity_id],","[220, 220, 220, 220, 220, 220, 220, 9312, 62, 2340, 41888, 26858, 62, 312, 4357]"
"üß† ML Signal: Copying data from order_reader, indicating data manipulation patterns","[8582, 100, 254, 10373, 26484, 25, 6955, 1112, 1366, 422, 1502, 62, 46862, 11, 12739, 1366, 17512, 7572]",0.5,240,ml_signal,43,"Copying data from order_reader, indicating data manipulation patterns",,223,"        end_timestamp=end_timestamp,","[220, 220, 220, 220, 220, 220, 220, 886, 62, 16514, 27823, 28, 437, 62, 16514, 27823, 11]"
"üß† ML Signal: Filtering data based on entity_id, showing data selection patterns","[8582, 100, 254, 10373, 26484, 25, 7066, 20212, 1366, 1912, 319, 9312, 62, 312, 11, 4478, 1366, 6356, 7572]",0.5,244,ml_signal,45,"Filtering data based on entity_id, showing data selection patterns",,240,    ),"[220, 220, 220, 1267]"
"üß† ML Signal: Creating new columns based on existing data, indicating feature engineering patterns","[8582, 100, 254, 10373, 26484, 25, 30481, 649, 15180, 1912, 319, 4683, 1366, 11, 12739, 3895, 8705, 7572]",0.5,259,ml_signal,48,"Creating new columns based on existing data, indicating feature engineering patterns",,244,    order_reader.move_on(timeout=0),"[220, 220, 220, 1502, 62, 46862, 13, 21084, 62, 261, 7, 48678, 28, 15, 8]"
üß† ML Signal: Applying transformations to order_type to derive new features,"[8582, 100, 254, 10373, 26484, 25, 2034, 3157, 38226, 284, 1502, 62, 4906, 284, 27099, 649, 3033]",0.5,278,ml_signal,50,Applying transformations to order_type to derive new features,,259,    df = df[df.entity_id == entity_id].copy(),"[220, 220, 220, 47764, 796, 47764, 58, 7568, 13, 26858, 62, 312, 6624, 9312, 62, 312, 4083, 30073, 3419]"
‚úÖ Best Practice: Printing the tail of the DataFrame for debugging or logging purposes,"[26486, 227, 6705, 19939, 25, 44118, 262, 7894, 286, 262, 6060, 19778, 329, 28769, 393, 18931, 4959]",1.0,296,best_practice,52,Printing the tail of the DataFrame for debugging or logging purposes,,278,"        df[""value""] = df[""order_price""]","[220, 220, 220, 220, 220, 220, 220, 47764, 14692, 8367, 8973, 796, 47764, 14692, 2875, 62, 20888, 8973]"
"üß† ML Signal: Using Drawer to visualize data, indicating visualization patterns","[8582, 100, 254, 10373, 26484, 25, 8554, 15315, 263, 284, 38350, 1366, 11, 12739, 32704, 7572]",0.5,314,ml_signal,52,"Using Drawer to visualize data, indicating visualization patterns",,296,"        df[""value""] = df[""order_price""]","[220, 220, 220, 220, 220, 220, 220, 47764, 14692, 8367, 8973, 796, 47764, 14692, 2875, 62, 20888, 8973]"
"üß† ML Signal: Drawing kline chart, showing visualization preferences","[8582, 100, 254, 10373, 26484, 25, 40027, 479, 1370, 8262, 11, 4478, 32704, 15387]",0.5,332,ml_signal,52,"Drawing kline chart, showing visualization preferences",,314,"        df[""value""] = df[""order_price""]","[220, 220, 220, 220, 220, 220, 220, 47764, 14692, 8367, 8973, 796, 47764, 14692, 2875, 62, 20888, 8973]"
‚úÖ Best Practice: Consider adding type hints for the return type for better readability and maintainability.,"[26486, 227, 6705, 19939, 25, 12642, 4375, 2099, 20269, 329, 262, 1441, 2099, 329, 1365, 1100, 1799, 290, 5529, 1799, 13]",1.0,332,best_practice,46,Consider adding type hints for the return type for better readability and maintainability.,,332,,[]
‚úÖ Best Practice: Initialize variables before use to avoid potential reference errors.,"[26486, 227, 6705, 19939, 25, 20768, 1096, 9633, 878, 779, 284, 3368, 2785, 4941, 8563, 13]",1.0,347,best_practice,48,Initialize variables before use to avoid potential reference errors.,,332,    order_reader.move_on(timeout=0),"[220, 220, 220, 1502, 62, 46862, 13, 21084, 62, 261, 7, 48678, 28, 15, 8]"
‚ö†Ô∏è SAST Risk (Low): Check if account_stats_reader is None to avoid potential AttributeError.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6822, 611, 1848, 62, 34242, 62, 46862, 318, 6045, 284, 3368, 2785, 3460, 4163, 12331, 13]",1.0,366,sast_risk,50,Check if account_stats_reader is None to avoid potential AttributeError.,Low,347,    df = df[df.entity_id == entity_id].copy(),"[220, 220, 220, 47764, 796, 47764, 58, 7568, 13, 26858, 62, 312, 6624, 9312, 62, 312, 4083, 30073, 3419]"
"üß† ML Signal: Usage of a method from an object to generate a figure, indicating a pattern of data visualization.","[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2446, 422, 281, 2134, 284, 7716, 257, 3785, 11, 12739, 257, 3912, 286, 1366, 32704, 13]",0.5,384,ml_signal,52,"Usage of a method from an object to generate a figure, indicating a pattern of data visualization.",,366,"        df[""value""] = df[""order_price""]","[220, 220, 220, 220, 220, 220, 220, 47764, 14692, 8367, 8973, 796, 47764, 14692, 2875, 62, 20888, 8973]"
"üß† ML Signal: Iterating over a list of trader names to generate graphs, indicating a pattern of dynamic UI generation.","[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 257, 1351, 286, 31791, 3891, 284, 7716, 28770, 11, 12739, 257, 3912, 286, 8925, 12454, 5270, 13]",0.5,402,ml_signal,52,"Iterating over a list of trader names to generate graphs, indicating a pattern of dynamic UI generation.",,384,"        df[""value""] = df[""order_price""]","[220, 220, 220, 220, 220, 220, 220, 47764, 14692, 8367, 8973, 796, 47764, 14692, 2875, 62, 20888, 8973]"
"üß† ML Signal: Dynamic ID generation for UI components, useful for tracking user interactions.","[8582, 100, 254, 10373, 26484, 25, 26977, 4522, 5270, 329, 12454, 6805, 11, 4465, 329, 9646, 2836, 12213, 13]",0.5,420,ml_signal,52,"Dynamic ID generation for UI components, useful for tracking user interactions.",,402,"        df[""value""] = df[""order_price""]","[220, 220, 220, 220, 220, 220, 220, 47764, 14692, 8367, 8973, 796, 47764, 14692, 2875, 62, 20888, 8973]"
‚úÖ Best Practice: Explicitly return the result to improve code clarity.,"[26486, 227, 6705, 19939, 25, 11884, 306, 1441, 262, 1255, 284, 2987, 2438, 16287, 13]",0.5,438,best_practice,52,Explicitly return the result to improve code clarity.,,420,"        df[""value""] = df[""order_price""]","[220, 220, 220, 220, 220, 220, 220, 47764, 14692, 8367, 8973, 796, 47764, 14692, 2875, 62, 20888, 8973]"
