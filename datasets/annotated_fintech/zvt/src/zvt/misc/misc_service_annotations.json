[
  {
    "line": 2,
    "text": "from zvt.misc.zhdate import ZhDate",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      44374,
      13,
      23548,
      4475,
      1330,
      10511,
      10430
    ],
    "start_token": 0,
    "end_token": 11,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 4,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of default parameter values for flexibility",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 11,
    "end_token": 11,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      4277,
      11507,
      3815,
      329,
      13688
    ],
    "label": "best_practice",
    "reason": "Use of default parameter values for flexibility"
  },
  {
    "line": 9,
    "text": "    else:",
    "annotation": "\ud83e\udde0 ML Signal: Extracting month from date for conditional logic",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 11,
    "end_token": 16,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29677,
      278,
      1227,
      422,
      3128,
      329,
      26340,
      9156
    ],
    "label": "ml_signal",
    "reason": "Extracting month from date for conditional logic"
  },
  {
    "line": 11,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Collecting information messages in a list",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 16,
    "end_token": 16,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9745,
      278,
      1321,
      6218,
      287,
      257,
      1351
    ],
    "label": "ml_signal",
    "reason": "Collecting information messages in a list"
  },
  {
    "line": 14,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Appending specific messages based on conditions",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 16,
    "end_token": 16,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2034,
      1571,
      2176,
      6218,
      1912,
      319,
      3403
    ],
    "label": "ml_signal",
    "reason": "Appending specific messages based on conditions"
  },
  {
    "line": 17,
    "text": "        infos.append(\"\u4e1a\u7ee9\u9884\u544a\u671f\uff0c\u6ce8\u610f\u6392\u96f7\")",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential timezone issues with date calculations",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1167,
      418,
      13,
      33295,
      7203,
      10310,
      248,
      163,
      119,
      102,
      165,
      95,
      226,
      37772,
      232,
      17312,
      253,
      171,
      120,
      234,
      37345,
      101,
      35707,
      237,
      162,
      236,
      240,
      37239,
      115,
      4943
    ],
    "start_token": 16,
    "end_token": 53,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      640,
      11340,
      2428,
      351,
      3128,
      16765
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential timezone issues with date calculations"
  },
  {
    "line": 22,
    "text": "        if 0 < distance < consider_future_days:",
    "annotation": "\ud83e\udde0 ML Signal: Use of lunar calendar for date calculations",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      657,
      1279,
      5253,
      1279,
      2074,
      62,
      37443,
      62,
      12545,
      25
    ],
    "start_token": 53,
    "end_token": 71,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      25572,
      11845,
      329,
      3128,
      16765
    ],
    "label": "ml_signal",
    "reason": "Use of lunar calendar for date calculations"
  },
  {
    "line": 46,
    "text": "        distance = count_interval(the_date, wuyi)",
    "annotation": "\ud83e\udde0 ML Signal: Joining list of messages into a single string",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      5253,
      796,
      954,
      62,
      3849,
      2100,
      7,
      1169,
      62,
      4475,
      11,
      266,
      4669,
      72,
      8
    ],
    "start_token": 71,
    "end_token": 93,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5302,
      3191,
      1351,
      286,
      6218,
      656,
      257,
      2060,
      4731
    ],
    "label": "ml_signal",
    "reason": "Joining list of messages into a single string"
  },
  {
    "line": 43,
    "text": "    # \u4e94\u4e00",
    "annotation": "\u2705 Best Practice: Use of dictionary to return multiple values",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      220,
      49390,
      31660
    ],
    "start_token": 93,
    "end_token": 100,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      22155,
      284,
      1441,
      3294,
      3815
    ],
    "label": "best_practice",
    "reason": "Use of dictionary to return multiple values"
  },
  {
    "line": 46,
    "text": "        distance = count_interval(the_date, wuyi)",
    "annotation": "\ud83e\udde0 ML Signal: Common pattern for script entry point",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      5253,
      796,
      954,
      62,
      3849,
      2100,
      7,
      1169,
      62,
      4475,
      11,
      266,
      4669,
      72,
      8
    ],
    "start_token": 100,
    "end_token": 122,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8070,
      3912,
      329,
      4226,
      5726,
      966
    ],
    "label": "ml_signal",
    "reason": "Common pattern for script entry point"
  },
  {
    "line": 46,
    "text": "        distance = count_interval(the_date, wuyi)",
    "annotation": "\u2705 Best Practice: Use of __all__ to define public API of the module",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      5253,
      796,
      954,
      62,
      3849,
      2100,
      7,
      1169,
      62,
      4475,
      11,
      266,
      4669,
      72,
      8
    ],
    "start_token": 122,
    "end_token": 144,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265
    ],
    "label": "best_practice",
    "reason": "Use of __all__ to define public API of the module"
  }
]