annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
✅ Best Practice: Grouping related imports together improves readability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 3519, 17944, 1978, 19575, 1100, 1799, 13]",1.0,12,best_practice,4,Grouping related imports together improves readability.,,0,from sqlalchemy.orm import declarative_base,"[6738, 44161, 282, 26599, 13, 579, 1330, 2377, 283, 876, 62, 8692]"
✅ Best Practice: Naming convention for base classes should be consistent and descriptive.,"[26486, 227, 6705, 19939, 25, 399, 3723, 9831, 329, 2779, 6097, 815, 307, 6414, 290, 35644, 13]",1.0,24,best_practice,7,Naming convention for base classes should be consistent and descriptive.,,12,from zvt.contract.register import register_schema,"[6738, 1976, 36540, 13, 28484, 13, 30238, 1330, 7881, 62, 15952, 2611]"
✅ Best Practice: Use of class-level variable for table name improves maintainability and readability.,"[26486, 227, 6705, 19939, 25, 5765, 286, 1398, 12, 5715, 7885, 329, 3084, 1438, 19575, 5529, 1799, 290, 1100, 1799, 13]",0.5,24,best_practice,8,Use of class-level variable for table name improves maintainability and readability.,,24,,[]
✅ Best Practice: Defining columns with types improves readability and ensures correct data handling.,"[26486, 227, 6705, 19939, 25, 2896, 3191, 15180, 351, 3858, 19575, 1100, 1799, 290, 19047, 3376, 1366, 9041, 13]",0.5,24,best_practice,10,Defining columns with types improves readability and ensures correct data handling.,,24,,[]
✅ Best Practice: Defining columns with types improves readability and ensures correct data handling.,"[26486, 227, 6705, 19939, 25, 2896, 3191, 15180, 351, 3858, 19575, 1100, 1799, 290, 19047, 3376, 1366, 9041, 13]",0.5,35,best_practice,12,Defining columns with types improves readability and ensures correct data handling.,,24,"class TagQuoteStats(Mixin, TradingBase):","[4871, 17467, 25178, 29668, 7, 35608, 259, 11, 25469, 14881, 2599]"
✅ Best Practice: Defining columns with types improves readability and ensures correct data handling.,"[26486, 227, 6705, 19939, 25, 2896, 3191, 15180, 351, 3858, 19575, 1100, 1799, 290, 19047, 3376, 1366, 9041, 13]",0.5,48,best_practice,14,Defining columns with types improves readability and ensures correct data handling.,,35,    stock_pool_name = Column(String),"[220, 220, 220, 4283, 62, 7742, 62, 3672, 796, 29201, 7, 10100, 8]"
✅ Best Practice: Defining columns with types improves readability and ensures correct data handling.,"[26486, 227, 6705, 19939, 25, 2896, 3191, 15180, 351, 3858, 19575, 1100, 1799, 290, 19047, 3376, 1366, 9041, 13]",0.5,61,best_practice,16,Defining columns with types improves readability and ensures correct data handling.,,48,    limit_up_count = Column(Integer),"[220, 220, 220, 4179, 62, 929, 62, 9127, 796, 29201, 7, 46541, 8]"
✅ Best Practice: Defining columns with types improves readability and ensures correct data handling.,"[26486, 227, 6705, 19939, 25, 2896, 3191, 15180, 351, 3858, 19575, 1100, 1799, 290, 19047, 3376, 1366, 9041, 13]",0.5,72,best_practice,18,Defining columns with types improves readability and ensures correct data handling.,,61,    up_count = Column(Integer),"[220, 220, 220, 510, 62, 9127, 796, 29201, 7, 46541, 8]"
✅ Best Practice: Defining columns with types improves readability and ensures correct data handling.,"[26486, 227, 6705, 19939, 25, 2896, 3191, 15180, 351, 3858, 19575, 1100, 1799, 290, 19047, 3376, 1366, 9041, 13]",0.5,84,best_practice,20,Defining columns with types improves readability and ensures correct data handling.,,72,    change_pct = Column(Float),"[220, 220, 220, 1487, 62, 79, 310, 796, 29201, 7, 43879, 8]"
✅ Best Practice: Defining columns with types improves readability and ensures correct data handling.,"[26486, 227, 6705, 19939, 25, 2896, 3191, 15180, 351, 3858, 19575, 1100, 1799, 290, 19047, 3376, 1366, 9041, 13]",0.5,84,best_practice,22,Defining columns with types improves readability and ensures correct data handling.,,84,,[]
✅ Best Practice: Defining columns with types improves readability and ensures correct data handling.,"[26486, 227, 6705, 19939, 25, 2896, 3191, 15180, 351, 3858, 19575, 1100, 1799, 290, 19047, 3376, 1366, 9041, 13]",0.5,95,best_practice,24,Defining columns with types improves readability and ensures correct data handling.,,84,"class TradingPlan(TradingBase, Mixin):","[4871, 25469, 20854, 7, 2898, 4980, 14881, 11, 15561, 259, 2599]"
🧠 ML Signal: Inheritance from TradingBase and Mixin indicates a pattern for extending functionality,"[8582, 100, 254, 10373, 26484, 25, 47025, 42942, 422, 25469, 14881, 290, 15561, 259, 9217, 257, 3912, 329, 16610, 11244]",1.0,108,ml_signal,17,Inheritance from TradingBase and Mixin indicates a pattern for extending functionality,,95,    limit_down_count = Column(Integer),"[220, 220, 220, 4179, 62, 2902, 62, 9127, 796, 29201, 7, 46541, 8]"
🧠 ML Signal: Use of __tablename__ suggests ORM pattern for database interaction,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 11593, 8658, 11925, 480, 834, 5644, 6375, 44, 3912, 329, 6831, 10375]",1.0,119,ml_signal,19,Use of __tablename__ suggests ORM pattern for database interaction,,108,    down_count = Column(Integer),"[220, 220, 220, 866, 62, 9127, 796, 29201, 7, 46541, 8]"
🧠 ML Signal: Column definitions indicate a pattern for database schema design,"[8582, 100, 254, 10373, 26484, 25, 29201, 17336, 7603, 257, 3912, 329, 6831, 32815, 1486]",1.0,128,ml_signal,21,Column definitions indicate a pattern for database schema design,,119,    turnover = Column(Float),"[220, 220, 220, 25079, 796, 29201, 7, 43879, 8]"
🧠 ML Signal: Column definitions indicate a pattern for database schema design,"[8582, 100, 254, 10373, 26484, 25, 29201, 17336, 7603, 257, 3912, 329, 6831, 32815, 1486]",1.0,128,ml_signal,23,Column definitions indicate a pattern for database schema design,,128,,[]
🧠 ML Signal: Column definitions indicate a pattern for database schema design,"[8582, 100, 254, 10373, 26484, 25, 29201, 17336, 7603, 257, 3912, 329, 6831, 32815, 1486]",1.0,143,ml_signal,25,Column definitions indicate a pattern for database schema design,,128,"    __tablename__ = ""trading_plan""","[220, 220, 220, 11593, 8658, 11925, 480, 834, 796, 366, 2213, 4980, 62, 11578, 1]"
🧠 ML Signal: Column definitions indicate a pattern for database schema design,"[8582, 100, 254, 10373, 26484, 25, 29201, 17336, 7603, 257, 3912, 329, 6831, 32815, 1486]",1.0,154,ml_signal,27,Column definitions indicate a pattern for database schema design,,143,    stock_code = Column(String),"[220, 220, 220, 4283, 62, 8189, 796, 29201, 7, 10100, 8]"
🧠 ML Signal: Column definitions indicate a pattern for database schema design,"[8582, 100, 254, 10373, 26484, 25, 29201, 17336, 7603, 257, 3912, 329, 6831, 32815, 1486]",1.0,166,ml_signal,29,Column definitions indicate a pattern for database schema design,,154,    trading_date = Column(DateTime),"[220, 220, 220, 7313, 62, 4475, 796, 29201, 7, 10430, 7575, 8]"
⚠️ SAST Risk (Low): Nullable=False on expected_open_pct could lead to integrity errors if not handled,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 35886, 540, 28, 25101, 319, 2938, 62, 9654, 62, 79, 310, 714, 1085, 284, 11540, 8563, 611, 407, 12118]",1.0,187,sast_risk,30,Nullable=False on expected_open_pct could lead to integrity errors if not handled,Low,166,    # 预期开盘涨跌幅,"[220, 220, 220, 1303, 16268, 95, 226, 17312, 253, 28156, 222, 33566, 246, 162, 114, 101, 164, 115, 234, 33176, 227]"
🧠 ML Signal: Column definitions indicate a pattern for database schema design,"[8582, 100, 254, 10373, 26484, 25, 29201, 17336, 7603, 257, 3912, 329, 6831, 32815, 1486]",1.0,198,ml_signal,32,Column definitions indicate a pattern for database schema design,,187,    buy_price = Column(Float),"[220, 220, 220, 2822, 62, 20888, 796, 29201, 7, 43879, 8]"
🧠 ML Signal: Column definitions indicate a pattern for database schema design,"[8582, 100, 254, 10373, 26484, 25, 29201, 17336, 7603, 257, 3912, 329, 6831, 32815, 1486]",1.0,210,ml_signal,34,Column definitions indicate a pattern for database schema design,,198,    # 操作理由,"[220, 220, 220, 1303, 10545, 241, 235, 43291, 49426, 228, 18796, 109]"
🧠 ML Signal: Column definitions indicate a pattern for database schema design,"[8582, 100, 254, 10373, 26484, 25, 29201, 17336, 7603, 257, 3912, 329, 6831, 32815, 1486]",1.0,221,ml_signal,35,Column definitions indicate a pattern for database schema design,,210,    trading_reason = Column(String),"[220, 220, 220, 7313, 62, 41181, 796, 29201, 7, 10100, 8]"
🧠 ML Signal: Column definitions indicate a pattern for database schema design,"[8582, 100, 254, 10373, 26484, 25, 29201, 17336, 7603, 257, 3912, 329, 6831, 32815, 1486]",1.0,232,ml_signal,35,Column definitions indicate a pattern for database schema design,,221,    trading_reason = Column(String),"[220, 220, 220, 7313, 62, 41181, 796, 29201, 7, 10100, 8]"
🧠 ML Signal: Column definitions indicate a pattern for database schema design,"[8582, 100, 254, 10373, 26484, 25, 29201, 17336, 7603, 257, 3912, 329, 6831, 32815, 1486]",1.0,243,ml_signal,35,Column definitions indicate a pattern for database schema design,,232,    trading_reason = Column(String),"[220, 220, 220, 7313, 62, 41181, 796, 29201, 7, 10100, 8]"
🧠 ML Signal: Column definitions indicate a pattern for database schema design,"[8582, 100, 254, 10373, 26484, 25, 29201, 17336, 7603, 257, 3912, 329, 6831, 32815, 1486]",1.0,254,ml_signal,35,Column definitions indicate a pattern for database schema design,,243,    trading_reason = Column(String),"[220, 220, 220, 7313, 62, 41181, 796, 29201, 7, 10100, 8]"
🧠 ML Signal: Inheritance from multiple classes indicates a pattern of using mixins for shared functionality.,"[8582, 100, 254, 10373, 26484, 25, 47025, 42942, 422, 3294, 6097, 9217, 257, 3912, 286, 1262, 5022, 1040, 329, 4888, 11244, 13]",1.0,273,ml_signal,31,Inheritance from multiple classes indicates a pattern of using mixins for shared functionality.,,254,"    expected_open_pct = Column(Float, nullable=False)","[220, 220, 220, 2938, 62, 9654, 62, 79, 310, 796, 29201, 7, 43879, 11, 9242, 540, 28, 25101, 8]"
🧠 ML Signal: Use of SQLAlchemy ORM to define database table structure.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16363, 2348, 26599, 6375, 44, 284, 8160, 6831, 3084, 4645, 13]",1.0,284,ml_signal,33,Use of SQLAlchemy ORM to define database table structure.,,273,    sell_price = Column(Float),"[220, 220, 220, 3677, 62, 20888, 796, 29201, 7, 43879, 8]"
🧠 ML Signal: Use of JSON type in SQLAlchemy for storing complex data structures.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 19449, 2099, 287, 16363, 2348, 26599, 329, 23069, 3716, 1366, 8573, 13]",0.5,295,ml_signal,35,Use of JSON type in SQLAlchemy for storing complex data structures.,,284,    trading_reason = Column(String),"[220, 220, 220, 7313, 62, 41181, 796, 29201, 7, 10100, 8]"
⚠️ SAST Risk (Low): Ensure that the database schema is properly validated to prevent SQL injection.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 326, 262, 6831, 32815, 318, 6105, 31031, 284, 2948, 16363, 16954, 13]",0.5,306,sast_risk,35,Ensure that the database schema is properly validated to prevent SQL injection.,Low,295,    trading_reason = Column(String),"[220, 220, 220, 7313, 62, 41181, 796, 29201, 7, 10100, 8]"
🧠 ML Signal: Use of __all__ to define public API of the module.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 11593, 439, 834, 284, 8160, 1171, 7824, 286, 262, 8265, 13]",1.0,317,ml_signal,35,Use of __all__ to define public API of the module.,,306,    trading_reason = Column(String),"[220, 220, 220, 7313, 62, 41181, 796, 29201, 7, 10100, 8]"
