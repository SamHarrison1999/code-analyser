annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Grouping imports from the same module in a single line improves readability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 17944, 422, 262, 976, 8265, 287, 257, 2060, 1627, 19575, 1100, 1799, 13]",1.0,9,best_practice,6,Grouping imports from the same module in a single line improves readability.,,0,"from pydantic import BaseModel, Field","[6738, 279, 5173, 5109, 1330, 7308, 17633, 11, 7663]"
‚úÖ Best Practice: Grouping imports from the same module in a single line improves readability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 17944, 422, 262, 976, 8265, 287, 257, 2060, 1627, 19575, 1100, 1799, 13]",1.0,20,best_practice,13,Grouping imports from the same module in a single line improves readability.,,9,from zvt.trader import TradingSignalType,"[6738, 1976, 36540, 13, 2213, 5067, 1330, 25469, 11712, 282, 6030]"
üß† ML Signal: Use of Pydantic BaseModel for data validation and serialization,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 350, 5173, 5109, 7308, 17633, 329, 1366, 21201, 290, 11389, 1634]",1.0,31,ml_signal,14,Use of Pydantic BaseModel for data validation and serialization,,20,from zvt.trading.common import ExecutionStatus,"[6738, 1976, 36540, 13, 2213, 4980, 13, 11321, 1330, 37497, 19580]"
"üß† ML Signal: List of strings for entity IDs, common pattern for handling multiple identifiers","[8582, 100, 254, 10373, 26484, 25, 7343, 286, 13042, 329, 9312, 32373, 11, 2219, 3912, 329, 9041, 3294, 42814]",1.0,51,ml_signal,16,"List of strings for entity IDs, common pattern for handling multiple identifiers",,31,"from zvt.utils.time_utils import tomorrow_date, to_pd_timestamp","[6738, 1976, 36540, 13, 26791, 13, 2435, 62, 26791, 1330, 9439, 62, 4475, 11, 284, 62, 30094, 62, 16514, 27823]"
‚úÖ Best Practice: Default value for data_provider improves usability and reduces errors,"[26486, 227, 6705, 19939, 25, 15161, 1988, 329, 1366, 62, 15234, 1304, 19575, 42863, 290, 12850, 8563]",1.0,51,best_practice,18,Default value for data_provider improves usability and reduces errors,,51,,[]
‚ö†Ô∏è SAST Risk (Low): Potential timezone issues with datetime defaults,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 640, 11340, 2428, 351, 4818, 8079, 26235]",1.0,62,sast_risk,20,Potential timezone issues with datetime defaults,Low,51,    entity_ids: List[str],"[220, 220, 220, 9312, 62, 2340, 25, 7343, 58, 2536, 60]"
‚úÖ Best Practice: Use of Field with default value for start_timestamp ensures consistent initialization,"[26486, 227, 6705, 19939, 25, 5765, 286, 7663, 351, 4277, 1988, 329, 923, 62, 16514, 27823, 19047, 6414, 37588]",0.5,79,best_practice,21,Use of Field with default value for start_timestamp ensures consistent initialization,,62,"    data_provider: str = Field(default=""qmt"")","[220, 220, 220, 1366, 62, 15234, 1304, 25, 965, 796, 7663, 7, 12286, 2625, 80, 16762, 4943]"
‚úÖ Best Practice: Use of Optional for end_timestamp indicates that it can be None,"[26486, 227, 6705, 19939, 25, 5765, 286, 32233, 329, 886, 62, 16514, 27823, 9217, 326, 340, 460, 307, 6045]",1.0,99,best_practice,23,Use of Optional for end_timestamp indicates that it can be None,,79,    end_timestamp: Optional[datetime] = Field(default=None),"[220, 220, 220, 886, 62, 16514, 27823, 25, 32233, 58, 19608, 8079, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
‚úÖ Best Practice: Default value for level provides a sensible default for interval level,"[26486, 227, 6705, 19939, 25, 15161, 1988, 329, 1241, 3769, 257, 20586, 4277, 329, 16654, 1241]",0.5,120,best_practice,25,Default value for level provides a sensible default for interval level,,99,    adjust_type: AdjustType = Field(default=AdjustType.qfq),"[220, 220, 220, 4532, 62, 4906, 25, 20292, 6030, 796, 7663, 7, 12286, 28, 39668, 6030, 13, 80, 69, 80, 8]"
‚úÖ Best Practice: Default value for adjust_type provides a sensible default for adjustment type,"[26486, 227, 6705, 19939, 25, 15161, 1988, 329, 4532, 62, 4906, 3769, 257, 20586, 4277, 329, 15068, 2099]",0.5,120,best_practice,27,Default value for adjust_type provides a sensible default for adjustment type,,120,,[]
‚úÖ Best Practice: Class should inherit from BaseModel for data validation and parsing,"[26486, 227, 6705, 19939, 25, 5016, 815, 16955, 422, 7308, 17633, 329, 1366, 21201, 290, 32096]",1.0,137,best_practice,21,Class should inherit from BaseModel for data validation and parsing,,120,"    data_provider: str = Field(default=""qmt"")","[220, 220, 220, 1366, 62, 15234, 1304, 25, 965, 796, 7663, 7, 12286, 2625, 80, 16762, 4943]"
"üß† ML Signal: Use of string type for entity_id, indicating unique identifiers","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4731, 2099, 329, 9312, 62, 312, 11, 12739, 3748, 42814]",0.5,157,ml_signal,23,"Use of string type for entity_id, indicating unique identifiers",,137,    end_timestamp: Optional[datetime] = Field(default=None),"[220, 220, 220, 886, 62, 16514, 27823, 25, 32233, 58, 19608, 8079, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
"üß† ML Signal: Use of string type for code, indicating stock or asset codes","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4731, 2099, 329, 2438, 11, 12739, 4283, 393, 11171, 12416]",0.5,178,ml_signal,25,"Use of string type for code, indicating stock or asset codes",,157,    adjust_type: AdjustType = Field(default=AdjustType.qfq),"[220, 220, 220, 4532, 62, 4906, 25, 20292, 6030, 796, 7663, 7, 12286, 28, 39668, 6030, 13, 80, 69, 80, 8]"
"üß† ML Signal: Use of string type for name, indicating descriptive labels","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4731, 2099, 329, 1438, 11, 12739, 35644, 14722]",0.5,178,ml_signal,27,"Use of string type for name, indicating descriptive labels",,178,,[]
‚úÖ Best Practice: Default values for fields improve usability and reduce errors,"[26486, 227, 6705, 19939, 25, 15161, 3815, 329, 7032, 2987, 42863, 290, 4646, 8563]",0.5,186,best_practice,29,Default values for fields improve usability and reduce errors,,178,    entity_id: str,"[220, 220, 220, 9312, 62, 312, 25, 965]"
‚ö†Ô∏è SAST Risk (Low): Type hinting without initialization can lead to runtime errors if not handled properly,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5994, 9254, 278, 1231, 37588, 460, 1085, 284, 19124, 8563, 611, 407, 12118, 6105]",0.5,192,sast_risk,31,Type hinting without initialization can lead to runtime errors if not handled properly,Low,186,    name: str,"[220, 220, 220, 1438, 25, 965]"
üß† ML Signal: Use of Pydantic BaseModel for data validation and model definition,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 350, 5173, 5109, 7308, 17633, 329, 1366, 21201, 290, 2746, 6770]",1.0,192,ml_signal,27,Use of Pydantic BaseModel for data validation and model definition,,192,,[]
üß† ML Signal: List of strings indicating entity identifiers,"[8582, 100, 254, 10373, 26484, 25, 7343, 286, 13042, 12739, 9312, 42814]",1.0,200,ml_signal,29,List of strings indicating entity identifiers,,192,    entity_id: str,"[220, 220, 220, 9312, 62, 312, 25, 965]"
üß† ML Signal: Default value for data_provider indicating a common or preferred provider,"[8582, 100, 254, 10373, 26484, 25, 15161, 1988, 329, 1366, 62, 15234, 1304, 12739, 257, 2219, 393, 9871, 10131]",1.0,206,ml_signal,31,Default value for data_provider indicating a common or preferred provider,,200,    name: str,"[220, 220, 220, 1438, 25, 965]"
üß† ML Signal: Default value for days_count indicating a common or preferred time range,"[8582, 100, 254, 10373, 26484, 25, 15161, 1988, 329, 1528, 62, 9127, 12739, 257, 2219, 393, 9871, 640, 2837]",1.0,212,ml_signal,33,Default value for days_count indicating a common or preferred time range,,206,    datas: List,"[220, 220, 220, 19395, 25, 7343]"
‚úÖ Best Practice: Use of type annotations for class attributes improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 1398, 12608, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,235,best_practice,32,Use of type annotations for class attributes improves code readability and maintainability.,,212,    level: IntervalLevel = Field(default=IntervalLevel.LEVEL_1DAY),"[220, 220, 220, 1241, 25, 4225, 2100, 4971, 796, 7663, 7, 12286, 28, 9492, 2100, 4971, 13, 2538, 18697, 62, 16, 26442, 8]"
‚úÖ Best Practice: Use of type annotations for class attributes improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 1398, 12608, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,235,best_practice,34,Use of type annotations for class attributes improves code readability and maintainability.,,235,,[]
‚úÖ Best Practice: Use of type annotations for class attributes improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 1398, 12608, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,243,best_practice,36,Use of type annotations for class attributes improves code readability and maintainability.,,235,class TSRequestModel(BaseModel):,"[4871, 26136, 18453, 17633, 7, 14881, 17633, 2599]"
"‚ö†Ô∏è SAST Risk (Low): The type for 'datas' is not fully specified, which could lead to unexpected behavior if not handled properly.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 383, 2099, 329, 705, 19608, 292, 6, 318, 407, 3938, 7368, 11, 543, 714, 1085, 284, 10059, 4069, 611, 407, 12118, 6105, 13]",0.5,260,sast_risk,38,"The type for 'datas' is not fully specified, which could lead to unexpected behavior if not handled properly.",Low,243,"    data_provider: str = Field(default=""qmt"")","[220, 220, 220, 1366, 62, 15234, 1304, 25, 965, 796, 7663, 7, 12286, 2625, 80, 16762, 4943]"
‚úÖ Best Practice: Inheriting from BaseModel provides data validation and serialization features.,"[26486, 227, 6705, 19939, 25, 47025, 1780, 422, 7308, 17633, 3769, 1366, 21201, 290, 11389, 1634, 3033, 13]",0.5,268,best_practice,36,Inheriting from BaseModel provides data validation and serialization features.,,260,class TSRequestModel(BaseModel):,"[4871, 26136, 18453, 17633, 7, 14881, 17633, 2599]"
‚úÖ Best Practice: Using type annotations for class attributes improves code readability and type checking.,"[26486, 227, 6705, 19939, 25, 8554, 2099, 37647, 329, 1398, 12608, 19575, 2438, 1100, 1799, 290, 2099, 10627, 13]",0.5,285,best_practice,38,Using type annotations for class attributes improves code readability and type checking.,,268,"    data_provider: str = Field(default=""qmt"")","[220, 220, 220, 1366, 62, 15234, 1304, 25, 965, 796, 7663, 7, 12286, 2625, 80, 16762, 4943]"
‚úÖ Best Practice: Using Optional for fields that can be None improves code clarity and type safety.,"[26486, 227, 6705, 19939, 25, 8554, 32233, 329, 7032, 326, 460, 307, 6045, 19575, 2438, 16287, 290, 2099, 3747, 13]",0.5,291,best_practice,46,Using Optional for fields that can be None improves code clarity and type safety.,,285,    datas: List,"[220, 220, 220, 19395, 25, 7343]"
‚úÖ Best Practice: Using Optional for fields that can be None improves code clarity and type safety.,"[26486, 227, 6705, 19939, 25, 8554, 32233, 329, 7032, 326, 460, 307, 6045, 19575, 2438, 16287, 290, 2099, 3747, 13]",0.5,291,best_practice,48,Using Optional for fields that can be None improves code clarity and type safety.,,291,,[]
‚úÖ Best Practice: Inheriting from a custom model class suggests a structured approach to model definition,"[26486, 227, 6705, 19939, 25, 47025, 1780, 422, 257, 2183, 2746, 1398, 5644, 257, 20793, 3164, 284, 2746, 6770]",0.5,297,best_practice,46,Inheriting from a custom model class suggests a structured approach to model definition,,291,    datas: List,"[220, 220, 220, 19395, 25, 7343]"
‚úÖ Best Practice: Using Optional type hints improves code readability and indicates that the field can be None,"[26486, 227, 6705, 19939, 25, 8554, 32233, 2099, 20269, 19575, 2438, 1100, 1799, 290, 9217, 326, 262, 2214, 460, 307, 6045]",0.5,297,best_practice,48,Using Optional type hints improves code readability and indicates that the field can be None,,297,,[]
‚úÖ Best Practice: Using Optional type hints improves code readability and indicates that the field can be None,"[26486, 227, 6705, 19939, 25, 8554, 32233, 2099, 20269, 19575, 2438, 1100, 1799, 290, 9217, 326, 262, 2214, 460, 307, 6045]",0.5,310,best_practice,50,Using Optional type hints improves code readability and indicates that the field can be None,,297,    #: UNIXÊó∂Èó¥Êà≥,"[220, 220, 220, 1303, 25, 4725, 10426, 33768, 114, 29785, 112, 22755, 111]"
‚úÖ Best Practice: Using List type hint provides clarity on the expected data structure,"[26486, 227, 6705, 19939, 25, 8554, 7343, 2099, 9254, 3769, 16287, 319, 262, 2938, 1366, 4645]",0.5,316,best_practice,51,Using List type hint provides clarity on the expected data structure,,310,    time: int,"[220, 220, 220, 640, 25, 493]"
‚úÖ Best Practice: Use of Optional and default value for main_tags improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 32233, 290, 4277, 1988, 329, 1388, 62, 31499, 19575, 2438, 1100, 1799, 290, 5529, 1799]",0.5,322,best_practice,51,Use of Optional and default value for main_tags improves code readability and maintainability,,316,    time: int,"[220, 220, 220, 640, 25, 493]"
‚úÖ Best Practice: Use of field_validator decorator for input validation,"[26486, 227, 6705, 19939, 25, 5765, 286, 2214, 62, 12102, 1352, 11705, 1352, 329, 5128, 21201]",0.5,335,best_practice,54,Use of field_validator decorator for input validation,,322,    #: Ë∑åÂÅúÊï∞,"[220, 220, 220, 1303, 25, 5525, 115, 234, 161, 223, 250, 46763, 108]"
‚úÖ Best Practice: Use of class method decorator for methods that don't modify class state,"[26486, 227, 6705, 19939, 25, 5765, 286, 1398, 2446, 11705, 1352, 329, 5050, 326, 836, 470, 13096, 1398, 1181]",0.5,348,best_practice,54,Use of class method decorator for methods that don't modify class state,,335,    #: Ë∑åÂÅúÊï∞,"[220, 220, 220, 1303, 25, 5525, 115, 234, 161, 223, 250, 46763, 108]"
‚úÖ Best Practice: Clear and descriptive variable naming,"[26486, 227, 6705, 19939, 25, 11459, 290, 35644, 7885, 19264]",0.5,360,best_practice,56,Clear and descriptive variable naming,,348,    #: ‰∏äÊ∂®Êï∞,"[220, 220, 220, 1303, 25, 220, 41468, 162, 114, 101, 46763, 108]"
üß† ML Signal: Pattern of checking membership in a list or collection,"[8582, 100, 254, 10373, 26484, 25, 23939, 286, 10627, 9931, 287, 257, 1351, 393, 4947]",1.0,368,ml_signal,57,Pattern of checking membership in a list or collection,,360,    up_count: int,"[220, 220, 220, 510, 62, 9127, 25, 493]"
‚ö†Ô∏è SAST Risk (Low): Potential information disclosure through error messages,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 1321, 13019, 832, 4049, 6218]",1.0,376,sast_risk,59,Potential information disclosure through error messages,Low,368,    down_count: int,"[220, 220, 220, 866, 62, 9127, 25, 493]"
‚úÖ Best Practice: Class should inherit from a base class to ensure consistent behavior and structure,"[26486, 227, 6705, 19939, 25, 5016, 815, 16955, 422, 257, 2779, 1398, 284, 4155, 6414, 4069, 290, 4645]",1.0,389,best_practice,58,Class should inherit from a base class to ensure consistent behavior and structure,,376,    #: ‰∏ãË∑åÊï∞,"[220, 220, 220, 1303, 25, 220, 10310, 233, 164, 115, 234, 46763, 108]"
‚úÖ Best Practice: Type hinting for attributes improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5994, 9254, 278, 329, 12608, 19575, 2438, 1100, 1799, 290, 5529, 1799]",0.5,399,best_practice,60,Type hinting for attributes improves code readability and maintainability,,389,    #: Ê∂®ÂπÖ,"[220, 220, 220, 1303, 25, 10545, 114, 101, 33176, 227]"
‚úÖ Best Practice: Type hinting for attributes improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5994, 9254, 278, 329, 12608, 19575, 2438, 1100, 1799, 290, 5529, 1799]",0.5,412,best_practice,62,Type hinting for attributes improves code readability and maintainability,,399,    #: Êàê‰∫§È¢ù,"[220, 220, 220, 1303, 25, 10545, 230, 238, 12859, 97, 165, 95, 251]"
üß† ML Signal: Use of Optional fields indicates handling of missing or default values,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32233, 7032, 9217, 9041, 286, 4814, 393, 4277, 3815]",1.0,421,ml_signal,61,Use of Optional fields indicates handling of missing or default values,,412,    change_pct: float,"[220, 220, 220, 1487, 62, 79, 310, 25, 12178]"
‚úÖ Best Practice: Use of Optional and default values improves code robustness and readability,"[26486, 227, 6705, 19939, 25, 5765, 286, 32233, 290, 4277, 3815, 19575, 2438, 12373, 1108, 290, 1100, 1799]",1.0,434,best_practice,62,Use of Optional and default values improves code robustness and readability,,421,    #: Êàê‰∫§È¢ù,"[220, 220, 220, 1303, 25, 10545, 230, 238, 12859, 97, 165, 95, 251]"
üß† ML Signal: Use of Optional fields indicates handling of missing or default values,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32233, 7032, 9217, 9041, 286, 4814, 393, 4277, 3815]",1.0,451,ml_signal,64,Use of Optional fields indicates handling of missing or default values,,434,    #: Êò®Êó•Êàê‰∫§È¢ù,"[220, 220, 220, 1303, 25, 10545, 246, 101, 33768, 98, 22755, 238, 12859, 97, 165, 95, 251]"
üß† ML Signal: Use of Optional fields indicates handling of missing or default values,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32233, 7032, 9217, 9041, 286, 4814, 393, 4277, 3815]",1.0,462,ml_signal,66,Use of Optional fields indicates handling of missing or default values,,451,    #: ÂêåÊØî,"[220, 220, 220, 1303, 25, 10263, 238, 234, 162, 107, 242]"
üß† ML Signal: Use of Optional fields indicates handling of missing or default values,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32233, 7032, 9217, 9041, 286, 4814, 393, 4277, 3815]",1.0,462,ml_signal,68,Use of Optional fields indicates handling of missing or default values,,462,,[]
‚úÖ Best Practice: Setting a default value for limit ensures consistent behavior,"[26486, 227, 6705, 19939, 25, 25700, 257, 4277, 1988, 329, 4179, 19047, 6414, 4069]",0.5,472,best_practice,70,Setting a default value for limit ensures consistent behavior,,462,class QueryStockQuoteSettingModel(CustomModel):,"[4871, 43301, 26207, 25178, 34149, 17633, 7, 15022, 17633, 2599]"
üß† ML Signal: Use of Optional fields indicates handling of missing or default values,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32233, 7032, 9217, 9041, 286, 4814, 393, 4277, 3815]",1.0,492,ml_signal,72,Use of Optional fields indicates handling of missing or default values,,472,    main_tags: Optional[List[str]] = Field(default=None),"[220, 220, 220, 1388, 62, 31499, 25, 32233, 58, 8053, 58, 2536, 11907, 796, 7663, 7, 12286, 28, 14202, 8]"
üß† ML Signal: Use of Optional fields indicates handling of missing or default values,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32233, 7032, 9217, 9041, 286, 4814, 393, 4277, 3815]",1.0,492,ml_signal,74,Use of Optional fields indicates handling of missing or default values,,492,,[]
"üß† ML Signal: Definition of a data model class, useful for understanding data structures in ML models","[8582, 100, 254, 10373, 26484, 25, 30396, 286, 257, 1366, 2746, 1398, 11, 4465, 329, 4547, 1366, 8573, 287, 10373, 4981]",0.5,492,ml_signal,68,"Definition of a data model class, useful for understanding data structures in ML models",,492,,[]
"üß† ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2099, 37647, 329, 12608, 11, 5419, 287, 4547, 1366, 3858, 329, 10373, 3033]",0.5,502,ml_signal,70,"Use of type annotations for attributes, helps in understanding data types for ML features",,492,class QueryStockQuoteSettingModel(CustomModel):,"[4871, 43301, 26207, 25178, 34149, 17633, 7, 15022, 17633, 2599]"
"üß† ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2099, 37647, 329, 12608, 11, 5419, 287, 4547, 1366, 3858, 329, 10373, 3033]",0.5,522,ml_signal,72,"Use of type annotations for attributes, helps in understanding data types for ML features",,502,    main_tags: Optional[List[str]] = Field(default=None),"[220, 220, 220, 1388, 62, 31499, 25, 32233, 58, 8053, 58, 2536, 11907, 796, 7663, 7, 12286, 28, 14202, 8]"
"üß† ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2099, 37647, 329, 12608, 11, 5419, 287, 4547, 1366, 3858, 329, 10373, 3033]",0.5,522,ml_signal,74,"Use of type annotations for attributes, helps in understanding data types for ML features",,522,,[]
"üß† ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2099, 37647, 329, 12608, 11, 5419, 287, 4547, 1366, 3858, 329, 10373, 3033]",0.5,532,ml_signal,76,"Use of type annotations for attributes, helps in understanding data types for ML features",,522,    stock_pool_name: str,"[220, 220, 220, 4283, 62, 7742, 62, 3672, 25, 965]"
"üß† ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2099, 37647, 329, 12608, 11, 5419, 287, 4547, 1366, 3858, 329, 10373, 3033]",0.5,532,ml_signal,78,"Use of type annotations for attributes, helps in understanding data types for ML features",,532,,[]
"üß† ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2099, 37647, 329, 12608, 11, 5419, 287, 4547, 1366, 3858, 329, 10373, 3033]",0.5,538,ml_signal,80,"Use of type annotations for attributes, helps in understanding data types for ML features",,532,    @classmethod,"[220, 220, 220, 2488, 4871, 24396]"
"üß† ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2099, 37647, 329, 12608, 11, 5419, 287, 4547, 1366, 3858, 329, 10373, 3033]",0.5,557,ml_signal,82,"Use of type annotations for attributes, helps in understanding data types for ML features",,538,        if v not in get_stock_pool_names():,"[220, 220, 220, 220, 220, 220, 220, 611, 410, 407, 287, 651, 62, 13578, 62, 7742, 62, 14933, 33529]"
"üß† ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2099, 37647, 329, 12608, 11, 5419, 287, 4547, 1366, 3858, 329, 10373, 3033]",0.5,566,ml_signal,84,"Use of type annotations for attributes, helps in understanding data types for ML features",,557,        return v,"[220, 220, 220, 220, 220, 220, 220, 1441, 410]"
"üß† ML Signal: Use of Optional type for attributes, indicates nullable fields in data models","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32233, 2099, 329, 12608, 11, 9217, 9242, 540, 7032, 287, 1366, 4981]",0.5,566,ml_signal,86,"Use of Optional type for attributes, indicates nullable fields in data models",,566,,[]
"üß† ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2099, 37647, 329, 12608, 11, 5419, 287, 4547, 1366, 3858, 329, 10373, 3033]",0.5,576,ml_signal,88,"Use of type annotations for attributes, helps in understanding data types for ML features",,566,    stock_pool_name: str,"[220, 220, 220, 4283, 62, 7742, 62, 3672, 25, 965]"
"üß† ML Signal: Use of Optional type for attributes, indicates nullable fields in data models","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32233, 2099, 329, 12608, 11, 9217, 9242, 540, 7032, 287, 1366, 4981]",0.5,576,ml_signal,90,"Use of Optional type for attributes, indicates nullable fields in data models",,576,,[]
"üß† ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2099, 37647, 329, 12608, 11, 5419, 287, 4547, 1366, 3858, 329, 10373, 3033]",0.5,585,ml_signal,92,"Use of type annotations for attributes, helps in understanding data types for ML features",,576,class QueryStockQuoteModel(CustomModel):,"[4871, 43301, 26207, 25178, 17633, 7, 15022, 17633, 2599]"
"üß† ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2099, 37647, 329, 12608, 11, 5419, 287, 4547, 1366, 3858, 329, 10373, 3033]",0.5,603,ml_signal,94,"Use of type annotations for attributes, helps in understanding data types for ML features",,585,    main_tag: Optional[str] = Field(default=None),"[220, 220, 220, 1388, 62, 12985, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
"üß† ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2099, 37647, 329, 12608, 11, 5419, 287, 4547, 1366, 3858, 329, 10373, 3033]",0.5,623,ml_signal,96,"Use of type annotations for attributes, helps in understanding data types for ML features",,603,    stock_pool_name: Optional[str] = Field(default=None),"[220, 220, 220, 4283, 62, 7742, 62, 3672, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
"üß† ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2099, 37647, 329, 12608, 11, 5419, 287, 4547, 1366, 3858, 329, 10373, 3033]",0.5,636,ml_signal,98,"Use of type annotations for attributes, helps in understanding data types for ML features",,623,    limit: int = Field(default=100),"[220, 220, 220, 4179, 25, 493, 796, 7663, 7, 12286, 28, 3064, 8]"
"üß† ML Signal: Use of Optional type for attributes, indicates nullable fields in data models","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32233, 2099, 329, 12608, 11, 9217, 9242, 540, 7032, 287, 1366, 4981]",0.5,659,ml_signal,100,"Use of Optional type for attributes, indicates nullable fields in data models",,636,"    order_by_field: Optional[str] = Field(default=""change_pct"")","[220, 220, 220, 1502, 62, 1525, 62, 3245, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 2625, 3803, 62, 79, 310, 4943]"
"üß† ML Signal: Use of Union type for attributes, indicates multiple possible types for a field","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4479, 2099, 329, 12608, 11, 9217, 3294, 1744, 3858, 329, 257, 2214]",0.5,659,ml_signal,102,"Use of Union type for attributes, indicates multiple possible types for a field",,659,,[]
"üß† ML Signal: Use of Union type for attributes, indicates multiple possible types for a field","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4479, 2099, 329, 12608, 11, 9217, 3294, 1744, 3858, 329, 257, 2214]",0.5,669,ml_signal,104,"Use of Union type for attributes, indicates multiple possible types for a field",,659,    #: ‰ª£Á†Å,"[220, 220, 220, 1303, 25, 220, 47987, 163, 254, 223]"
‚úÖ Best Practice: Class definition should inherit from a base class for consistency and potential reuse,"[26486, 227, 6705, 19939, 25, 5016, 6770, 815, 16955, 422, 257, 2779, 1398, 329, 15794, 290, 2785, 32349]",0.5,678,best_practice,87,Class definition should inherit from a base class for consistency and potential reuse,,669,class QueryTagQuoteModel(CustomModel):,"[4871, 43301, 24835, 25178, 17633, 7, 15022, 17633, 2599]"
‚úÖ Best Practice: Use of type annotations for class attributes improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 1398, 12608, 19575, 2438, 1100, 1799, 290, 5529, 1799]",1.0,689,best_practice,89,Use of type annotations for class attributes improves code readability and maintainability,,678,    main_tags: List[str],"[220, 220, 220, 1388, 62, 31499, 25, 7343, 58, 2536, 60]"
‚úÖ Best Practice: Use of type annotations for class attributes improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 1398, 12608, 19575, 2438, 1100, 1799, 290, 5529, 1799]",1.0,689,best_practice,91,Use of type annotations for class attributes improves code readability and maintainability,,689,,[]
‚úÖ Best Practice: Use of type annotations for class attributes improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 1398, 12608, 19575, 2438, 1100, 1799, 290, 5529, 1799]",1.0,689,best_practice,93,Use of type annotations for class attributes improves code readability and maintainability,,689,,[]
‚úÖ Best Practice: Use of type annotations for class attributes improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 1398, 12608, 19575, 2438, 1100, 1799, 290, 5529, 1799]",1.0,709,best_practice,95,Use of type annotations for class attributes improves code readability and maintainability,,689,    entity_ids: Optional[List[str]] = Field(default=None),"[220, 220, 220, 9312, 62, 2340, 25, 32233, 58, 8053, 58, 2536, 11907, 796, 7663, 7, 12286, 28, 14202, 8]"
‚úÖ Best Practice: Use of type annotations for class attributes improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 1398, 12608, 19575, 2438, 1100, 1799, 290, 5529, 1799]",1.0,722,best_practice,97,Use of type annotations for class attributes improves code readability and maintainability,,709,"    # the amount is not huge, just ignore now","[220, 220, 220, 1303, 262, 2033, 318, 407, 3236, 11, 655, 8856, 783]"
‚úÖ Best Practice: Use of type annotations for class attributes improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 1398, 12608, 19575, 2438, 1100, 1799, 290, 5529, 1799]",1.0,748,best_practice,99,Use of type annotations for class attributes improves code readability and maintainability,,722,    order_by_type: Optional[OrderByType] = Field(default=OrderByType.desc),"[220, 220, 220, 1502, 62, 1525, 62, 4906, 25, 32233, 58, 18743, 3886, 6030, 60, 796, 7663, 7, 12286, 28, 18743, 3886, 6030, 13, 20147, 8]"
‚úÖ Best Practice: Use of type annotations for class attributes improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 1398, 12608, 19575, 2438, 1100, 1799, 290, 5529, 1799]",1.0,748,best_practice,101,Use of type annotations for class attributes improves code readability and maintainability,,748,,[]
‚úÖ Best Practice: Use of type annotations for class attributes improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 1398, 12608, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,768,best_practice,96,Use of type annotations for class attributes improves code readability and maintainability.,,748,    stock_pool_name: Optional[str] = Field(default=None),"[220, 220, 220, 4283, 62, 7742, 62, 3672, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
‚úÖ Best Practice: Use of type annotations for complex types like lists enhances code clarity.,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 3716, 3858, 588, 8341, 32479, 2438, 16287, 13]",0.5,777,best_practice,103,Use of type annotations for complex types like lists enhances code clarity.,,768,class StockQuoteModel(MixinModel):,"[4871, 10500, 25178, 17633, 7, 35608, 259, 17633, 2599]"
üß† ML Signal: Use of stock identifiers and trading details can indicate a financial trading application,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4283, 42814, 290, 7313, 3307, 460, 7603, 257, 3176, 7313, 3586]",1.0,787,ml_signal,104,Use of stock identifiers and trading details can indicate a financial trading application,,777,    #: ‰ª£Á†Å,"[220, 220, 220, 1303, 25, 220, 47987, 163, 254, 223]"
üß† ML Signal: Use of stock identifiers and trading details can indicate a financial trading application,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4283, 42814, 290, 7313, 3307, 460, 7603, 257, 3176, 7313, 3586]",1.0,797,ml_signal,106,Use of stock identifiers and trading details can indicate a financial trading application,,787,    #: ÂêçÂ≠ó,"[220, 220, 220, 1303, 25, 10263, 238, 235, 27764, 245]"
üß† ML Signal: Use of stock identifiers and trading details can indicate a financial trading application,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4283, 42814, 290, 7313, 3307, 460, 7603, 257, 3176, 7313, 3586]",1.0,797,ml_signal,108,Use of stock identifiers and trading details can indicate a financial trading application,,797,,[]
üß† ML Signal: Use of trading_date can indicate time-based operations or predictions,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 7313, 62, 4475, 460, 7603, 640, 12, 3106, 4560, 393, 16277]",0.5,803,ml_signal,110,Use of trading_date can indicate time-based operations or predictions,,797,    time: int,"[220, 220, 220, 640, 25, 493]"
üß† ML Signal: Use of expected_open_pct can indicate predictive modeling for stock prices,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2938, 62, 9654, 62, 79, 310, 460, 7603, 33344, 21128, 329, 4283, 4536]",0.5,809,ml_signal,112,Use of expected_open_pct can indicate predictive modeling for stock prices,,803,    price: float,"[220, 220, 220, 2756, 25, 12178]"
üß† ML Signal: Optional buy_price suggests conditional trading strategies,"[8582, 100, 254, 10373, 26484, 25, 32233, 2822, 62, 20888, 5644, 26340, 7313, 10064]",0.5,818,ml_signal,114,Optional buy_price suggests conditional trading strategies,,809,    change_pct: float,"[220, 220, 220, 1487, 62, 79, 310, 25, 12178]"
üß† ML Signal: Optional sell_price suggests conditional trading strategies,"[8582, 100, 254, 10373, 26484, 25, 32233, 3677, 62, 20888, 5644, 26340, 7313, 10064]",0.5,824,ml_signal,116,Optional sell_price suggests conditional trading strategies,,818,    turnover: float,"[220, 220, 220, 25079, 25, 12178]"
üß† ML Signal: Use of trading_reason can indicate decision-making processes in trading,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 7313, 62, 41181, 460, 7603, 2551, 12, 8601, 7767, 287, 7313]",0.5,832,ml_signal,118,Use of trading_reason can indicate decision-making processes in trading,,824,    turnover_rate: float,"[220, 220, 220, 25079, 62, 4873, 25, 12178]"
üß† ML Signal: Use of trading_signal_type can indicate categorization of trading strategies,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 7313, 62, 12683, 282, 62, 4906, 460, 7603, 17851, 1634, 286, 7313, 10064]",0.5,842,ml_signal,120,Use of trading_signal_type can indicate categorization of trading strategies,,832,    is_limit_up: bool,"[220, 220, 220, 318, 62, 32374, 62, 929, 25, 20512]"
üß† ML Signal: Default status indicates initial state management in trading execution,"[8582, 100, 254, 10373, 26484, 25, 15161, 3722, 9217, 4238, 1181, 4542, 287, 7313, 9706]",0.5,862,ml_signal,122,Default status indicates initial state management in trading execution,,842,    limit_up_amount: Optional[float] = Field(default=None),"[220, 220, 220, 4179, 62, 929, 62, 17287, 25, 32233, 58, 22468, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
‚úÖ Best Practice: Use of default values for fields improves model robustness,"[26486, 227, 6705, 19939, 25, 5765, 286, 4277, 3815, 329, 7032, 19575, 2746, 12373, 1108]",0.5,882,best_practice,122,Use of default values for fields improves model robustness,,862,    limit_up_amount: Optional[float] = Field(default=None),"[220, 220, 220, 4179, 62, 929, 62, 17287, 25, 32233, 58, 22468, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
üß† ML Signal: Optional review suggests post-trade analysis or feedback mechanisms,"[8582, 100, 254, 10373, 26484, 25, 32233, 2423, 5644, 1281, 12, 25351, 3781, 393, 7538, 11701]",0.5,901,ml_signal,125,Optional review suggests post-trade analysis or feedback mechanisms,,882,    #: Â∞ÅË∑åÂÅúÈáëÈ¢ù,"[220, 220, 220, 1303, 25, 10263, 108, 223, 164, 115, 234, 161, 223, 250, 34932, 239, 165, 95, 251]"
‚úÖ Best Practice: Use of field_validator to ensure data integrity for trading_date,"[26486, 227, 6705, 19939, 25, 5765, 286, 2214, 62, 12102, 1352, 284, 4155, 1366, 11540, 329, 7313, 62, 4475]",1.0,921,best_practice,122,Use of field_validator to ensure data integrity for trading_date,,901,    limit_up_amount: Optional[float] = Field(default=None),"[220, 220, 220, 4179, 62, 929, 62, 17287, 25, 32233, 58, 22468, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
‚úÖ Best Practice: Use of type hints for function parameters and return type,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 20269, 329, 2163, 10007, 290, 1441, 2099]",1.0,940,best_practice,125,Use of type hints for function parameters and return type,,921,    #: Â∞ÅË∑åÂÅúÈáëÈ¢ù,"[220, 220, 220, 1303, 25, 10263, 108, 223, 164, 115, 234, 161, 223, 250, 34932, 239, 165, 95, 251]"
üß† ML Signal: Use of a utility function to convert string to timestamp,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 10361, 2163, 284, 10385, 4731, 284, 41033]",1.0,958,ml_signal,127,Use of a utility function to convert string to timestamp,,940,    #: 5Êå°ÂçñÂçïÈáëÈ¢ù,"[220, 220, 220, 1303, 25, 642, 162, 234, 94, 39355, 244, 39355, 243, 34932, 239, 165, 95, 251]"
‚ö†Ô∏è SAST Risk (Low): Potential timezone issues if to_pd_timestamp does not handle timezones,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 640, 11340, 2428, 611, 284, 62, 30094, 62, 16514, 27823, 857, 407, 5412, 640, 89, 1952]",1.0,966,sast_risk,128,Potential timezone issues if to_pd_timestamp does not handle timezones,Low,958,    ask_amount: float,"[220, 220, 220, 1265, 62, 17287, 25, 12178]"
‚ö†Ô∏è SAST Risk (Low): Error message may expose sensitive information if not handled properly,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 13047, 3275, 743, 15651, 8564, 1321, 611, 407, 12118, 6105]",1.0,974,sast_risk,130,Error message may expose sensitive information if not handled properly,Low,966,    bid_amount: float,"[220, 220, 220, 8406, 62, 17287, 25, 12178]"
‚úÖ Best Practice: Returning the validated input value,"[26486, 227, 6705, 19939, 25, 42882, 262, 31031, 5128, 1988]",1.0,989,best_practice,131,Returning the validated input value,,974,    #: ÊµÅÈÄöÂ∏ÇÂÄº,"[220, 220, 220, 1303, 25, 10545, 113, 223, 34460, 248, 30585, 224, 161, 222, 120]"
üß† ML Signal: Inheritance from BaseModel suggests usage of a data validation library like Pydantic.,"[8582, 100, 254, 10373, 26484, 25, 47025, 42942, 422, 7308, 17633, 5644, 8748, 286, 257, 1366, 21201, 5888, 588, 350, 5173, 5109, 13]",0.5,997,ml_signal,130,Inheritance from BaseModel suggests usage of a data validation library like Pydantic.,,989,    bid_amount: float,"[220, 220, 220, 8406, 62, 17287, 25, 12178]"
‚úÖ Best Practice: Use of __all__ to define public API of the module.,"[26486, 227, 6705, 19939, 25, 5765, 286, 11593, 439, 834, 284, 8160, 1171, 7824, 286, 262, 8265, 13]",0.5,1012,best_practice,131,Use of __all__ to define public API of the module.,,997,    #: ÊµÅÈÄöÂ∏ÇÂÄº,"[220, 220, 220, 1303, 25, 10545, 113, 223, 34460, 248, 30585, 224, 161, 222, 120]"
