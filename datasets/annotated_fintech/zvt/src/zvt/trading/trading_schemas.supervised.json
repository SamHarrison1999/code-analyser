[
  {
    "line": 4,
    "text": "from sqlalchemy.orm import declarative_base",
    "annotation": "\u2705 Best Practice: Grouping related imports together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      44161,
      282,
      26599,
      13,
      579,
      1330,
      2377,
      283,
      876,
      62,
      8692
    ],
    "start_token": 0,
    "end_token": 12,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      3519,
      17944,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping related imports together improves readability."
  },
  {
    "line": 7,
    "text": "from zvt.contract.register import register_schema",
    "annotation": "\u2705 Best Practice: Naming convention for base classes should be consistent and descriptive.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      28484,
      13,
      30238,
      1330,
      7881,
      62,
      15952,
      2611
    ],
    "start_token": 12,
    "end_token": 24,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      399,
      3723,
      9831,
      329,
      2779,
      6097,
      815,
      307,
      6414,
      290,
      35644,
      13
    ],
    "label": "best_practice",
    "reason": "Naming convention for base classes should be consistent and descriptive."
  },
  {
    "line": 8,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of class-level variable for table name improves maintainability and readability.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 24,
    "end_token": 24,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      1398,
      12,
      5715,
      7885,
      329,
      3084,
      1438,
      19575,
      5529,
      1799,
      290,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Use of class-level variable for table name improves maintainability and readability."
  },
  {
    "line": 10,
    "text": "",
    "annotation": "\u2705 Best Practice: Defining columns with types improves readability and ensures correct data handling.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 24,
    "end_token": 24,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      3191,
      15180,
      351,
      3858,
      19575,
      1100,
      1799,
      290,
      19047,
      3376,
      1366,
      9041,
      13
    ],
    "label": "best_practice",
    "reason": "Defining columns with types improves readability and ensures correct data handling."
  },
  {
    "line": 12,
    "text": "class TagQuoteStats(Mixin, TradingBase):",
    "annotation": "\u2705 Best Practice: Defining columns with types improves readability and ensures correct data handling.",
    "confidence": 0.5,
    "tokens": [
      4871,
      17467,
      25178,
      29668,
      7,
      35608,
      259,
      11,
      25469,
      14881,
      2599
    ],
    "start_token": 24,
    "end_token": 35,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      3191,
      15180,
      351,
      3858,
      19575,
      1100,
      1799,
      290,
      19047,
      3376,
      1366,
      9041,
      13
    ],
    "label": "best_practice",
    "reason": "Defining columns with types improves readability and ensures correct data handling."
  },
  {
    "line": 14,
    "text": "    stock_pool_name = Column(String)",
    "annotation": "\u2705 Best Practice: Defining columns with types improves readability and ensures correct data handling.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      4283,
      62,
      7742,
      62,
      3672,
      796,
      29201,
      7,
      10100,
      8
    ],
    "start_token": 35,
    "end_token": 48,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      3191,
      15180,
      351,
      3858,
      19575,
      1100,
      1799,
      290,
      19047,
      3376,
      1366,
      9041,
      13
    ],
    "label": "best_practice",
    "reason": "Defining columns with types improves readability and ensures correct data handling."
  },
  {
    "line": 16,
    "text": "    limit_up_count = Column(Integer)",
    "annotation": "\u2705 Best Practice: Defining columns with types improves readability and ensures correct data handling.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      4179,
      62,
      929,
      62,
      9127,
      796,
      29201,
      7,
      46541,
      8
    ],
    "start_token": 48,
    "end_token": 61,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      3191,
      15180,
      351,
      3858,
      19575,
      1100,
      1799,
      290,
      19047,
      3376,
      1366,
      9041,
      13
    ],
    "label": "best_practice",
    "reason": "Defining columns with types improves readability and ensures correct data handling."
  },
  {
    "line": 18,
    "text": "    up_count = Column(Integer)",
    "annotation": "\u2705 Best Practice: Defining columns with types improves readability and ensures correct data handling.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      510,
      62,
      9127,
      796,
      29201,
      7,
      46541,
      8
    ],
    "start_token": 61,
    "end_token": 72,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      3191,
      15180,
      351,
      3858,
      19575,
      1100,
      1799,
      290,
      19047,
      3376,
      1366,
      9041,
      13
    ],
    "label": "best_practice",
    "reason": "Defining columns with types improves readability and ensures correct data handling."
  },
  {
    "line": 20,
    "text": "    change_pct = Column(Float)",
    "annotation": "\u2705 Best Practice: Defining columns with types improves readability and ensures correct data handling.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1487,
      62,
      79,
      310,
      796,
      29201,
      7,
      43879,
      8
    ],
    "start_token": 72,
    "end_token": 84,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      3191,
      15180,
      351,
      3858,
      19575,
      1100,
      1799,
      290,
      19047,
      3376,
      1366,
      9041,
      13
    ],
    "label": "best_practice",
    "reason": "Defining columns with types improves readability and ensures correct data handling."
  },
  {
    "line": 22,
    "text": "",
    "annotation": "\u2705 Best Practice: Defining columns with types improves readability and ensures correct data handling.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 84,
    "end_token": 84,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      3191,
      15180,
      351,
      3858,
      19575,
      1100,
      1799,
      290,
      19047,
      3376,
      1366,
      9041,
      13
    ],
    "label": "best_practice",
    "reason": "Defining columns with types improves readability and ensures correct data handling."
  },
  {
    "line": 24,
    "text": "class TradingPlan(TradingBase, Mixin):",
    "annotation": "\u2705 Best Practice: Defining columns with types improves readability and ensures correct data handling.",
    "confidence": 0.5,
    "tokens": [
      4871,
      25469,
      20854,
      7,
      2898,
      4980,
      14881,
      11,
      15561,
      259,
      2599
    ],
    "start_token": 84,
    "end_token": 95,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      3191,
      15180,
      351,
      3858,
      19575,
      1100,
      1799,
      290,
      19047,
      3376,
      1366,
      9041,
      13
    ],
    "label": "best_practice",
    "reason": "Defining columns with types improves readability and ensures correct data handling."
  },
  {
    "line": 17,
    "text": "    limit_down_count = Column(Integer)",
    "annotation": "\ud83e\udde0 ML Signal: Inheritance from TradingBase and Mixin indicates a pattern for extending functionality",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      4179,
      62,
      2902,
      62,
      9127,
      796,
      29201,
      7,
      46541,
      8
    ],
    "start_token": 95,
    "end_token": 108,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47025,
      42942,
      422,
      25469,
      14881,
      290,
      15561,
      259,
      9217,
      257,
      3912,
      329,
      16610,
      11244
    ],
    "label": "ml_signal",
    "reason": "Inheritance from TradingBase and Mixin indicates a pattern for extending functionality"
  },
  {
    "line": 19,
    "text": "    down_count = Column(Integer)",
    "annotation": "\ud83e\udde0 ML Signal: Use of __tablename__ suggests ORM pattern for database interaction",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      866,
      62,
      9127,
      796,
      29201,
      7,
      46541,
      8
    ],
    "start_token": 108,
    "end_token": 119,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      11593,
      8658,
      11925,
      480,
      834,
      5644,
      6375,
      44,
      3912,
      329,
      6831,
      10375
    ],
    "label": "ml_signal",
    "reason": "Use of __tablename__ suggests ORM pattern for database interaction"
  },
  {
    "line": 21,
    "text": "    turnover = Column(Float)",
    "annotation": "\ud83e\udde0 ML Signal: Column definitions indicate a pattern for database schema design",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      25079,
      796,
      29201,
      7,
      43879,
      8
    ],
    "start_token": 119,
    "end_token": 128,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29201,
      17336,
      7603,
      257,
      3912,
      329,
      6831,
      32815,
      1486
    ],
    "label": "ml_signal",
    "reason": "Column definitions indicate a pattern for database schema design"
  },
  {
    "line": 23,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Column definitions indicate a pattern for database schema design",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 128,
    "end_token": 128,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29201,
      17336,
      7603,
      257,
      3912,
      329,
      6831,
      32815,
      1486
    ],
    "label": "ml_signal",
    "reason": "Column definitions indicate a pattern for database schema design"
  },
  {
    "line": 25,
    "text": "    __tablename__ = \"trading_plan\"",
    "annotation": "\ud83e\udde0 ML Signal: Column definitions indicate a pattern for database schema design",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      11593,
      8658,
      11925,
      480,
      834,
      796,
      366,
      2213,
      4980,
      62,
      11578,
      1
    ],
    "start_token": 128,
    "end_token": 143,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29201,
      17336,
      7603,
      257,
      3912,
      329,
      6831,
      32815,
      1486
    ],
    "label": "ml_signal",
    "reason": "Column definitions indicate a pattern for database schema design"
  },
  {
    "line": 27,
    "text": "    stock_code = Column(String)",
    "annotation": "\ud83e\udde0 ML Signal: Column definitions indicate a pattern for database schema design",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      4283,
      62,
      8189,
      796,
      29201,
      7,
      10100,
      8
    ],
    "start_token": 143,
    "end_token": 154,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29201,
      17336,
      7603,
      257,
      3912,
      329,
      6831,
      32815,
      1486
    ],
    "label": "ml_signal",
    "reason": "Column definitions indicate a pattern for database schema design"
  },
  {
    "line": 29,
    "text": "    trading_date = Column(DateTime)",
    "annotation": "\ud83e\udde0 ML Signal: Column definitions indicate a pattern for database schema design",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      7313,
      62,
      4475,
      796,
      29201,
      7,
      10430,
      7575,
      8
    ],
    "start_token": 154,
    "end_token": 166,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29201,
      17336,
      7603,
      257,
      3912,
      329,
      6831,
      32815,
      1486
    ],
    "label": "ml_signal",
    "reason": "Column definitions indicate a pattern for database schema design"
  },
  {
    "line": 30,
    "text": "    # \u9884\u671f\u5f00\u76d8\u6da8\u8dcc\u5e45",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Nullable=False on expected_open_pct could lead to integrity errors if not handled",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      16268,
      95,
      226,
      17312,
      253,
      28156,
      222,
      33566,
      246,
      162,
      114,
      101,
      164,
      115,
      234,
      33176,
      227
    ],
    "start_token": 166,
    "end_token": 187,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      35886,
      540,
      28,
      25101,
      319,
      2938,
      62,
      9654,
      62,
      79,
      310,
      714,
      1085,
      284,
      11540,
      8563,
      611,
      407,
      12118
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Nullable=False on expected_open_pct could lead to integrity errors if not handled"
  },
  {
    "line": 32,
    "text": "    buy_price = Column(Float)",
    "annotation": "\ud83e\udde0 ML Signal: Column definitions indicate a pattern for database schema design",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      2822,
      62,
      20888,
      796,
      29201,
      7,
      43879,
      8
    ],
    "start_token": 187,
    "end_token": 198,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29201,
      17336,
      7603,
      257,
      3912,
      329,
      6831,
      32815,
      1486
    ],
    "label": "ml_signal",
    "reason": "Column definitions indicate a pattern for database schema design"
  },
  {
    "line": 34,
    "text": "    # \u64cd\u4f5c\u7406\u7531",
    "annotation": "\ud83e\udde0 ML Signal: Column definitions indicate a pattern for database schema design",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      10545,
      241,
      235,
      43291,
      49426,
      228,
      18796,
      109
    ],
    "start_token": 198,
    "end_token": 210,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29201,
      17336,
      7603,
      257,
      3912,
      329,
      6831,
      32815,
      1486
    ],
    "label": "ml_signal",
    "reason": "Column definitions indicate a pattern for database schema design"
  },
  {
    "line": 35,
    "text": "    trading_reason = Column(String)",
    "annotation": "\ud83e\udde0 ML Signal: Column definitions indicate a pattern for database schema design",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      7313,
      62,
      41181,
      796,
      29201,
      7,
      10100,
      8
    ],
    "start_token": 210,
    "end_token": 221,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29201,
      17336,
      7603,
      257,
      3912,
      329,
      6831,
      32815,
      1486
    ],
    "label": "ml_signal",
    "reason": "Column definitions indicate a pattern for database schema design"
  },
  {
    "line": 35,
    "text": "    trading_reason = Column(String)",
    "annotation": "\ud83e\udde0 ML Signal: Column definitions indicate a pattern for database schema design",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      7313,
      62,
      41181,
      796,
      29201,
      7,
      10100,
      8
    ],
    "start_token": 221,
    "end_token": 232,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29201,
      17336,
      7603,
      257,
      3912,
      329,
      6831,
      32815,
      1486
    ],
    "label": "ml_signal",
    "reason": "Column definitions indicate a pattern for database schema design"
  },
  {
    "line": 35,
    "text": "    trading_reason = Column(String)",
    "annotation": "\ud83e\udde0 ML Signal: Column definitions indicate a pattern for database schema design",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      7313,
      62,
      41181,
      796,
      29201,
      7,
      10100,
      8
    ],
    "start_token": 232,
    "end_token": 243,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29201,
      17336,
      7603,
      257,
      3912,
      329,
      6831,
      32815,
      1486
    ],
    "label": "ml_signal",
    "reason": "Column definitions indicate a pattern for database schema design"
  },
  {
    "line": 35,
    "text": "    trading_reason = Column(String)",
    "annotation": "\ud83e\udde0 ML Signal: Column definitions indicate a pattern for database schema design",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      7313,
      62,
      41181,
      796,
      29201,
      7,
      10100,
      8
    ],
    "start_token": 243,
    "end_token": 254,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29201,
      17336,
      7603,
      257,
      3912,
      329,
      6831,
      32815,
      1486
    ],
    "label": "ml_signal",
    "reason": "Column definitions indicate a pattern for database schema design"
  },
  {
    "line": 31,
    "text": "    expected_open_pct = Column(Float, nullable=False)",
    "annotation": "\ud83e\udde0 ML Signal: Inheritance from multiple classes indicates a pattern of using mixins for shared functionality.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      2938,
      62,
      9654,
      62,
      79,
      310,
      796,
      29201,
      7,
      43879,
      11,
      9242,
      540,
      28,
      25101,
      8
    ],
    "start_token": 254,
    "end_token": 273,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47025,
      42942,
      422,
      3294,
      6097,
      9217,
      257,
      3912,
      286,
      1262,
      5022,
      1040,
      329,
      4888,
      11244,
      13
    ],
    "label": "ml_signal",
    "reason": "Inheritance from multiple classes indicates a pattern of using mixins for shared functionality."
  },
  {
    "line": 33,
    "text": "    sell_price = Column(Float)",
    "annotation": "\ud83e\udde0 ML Signal: Use of SQLAlchemy ORM to define database table structure.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      3677,
      62,
      20888,
      796,
      29201,
      7,
      43879,
      8
    ],
    "start_token": 273,
    "end_token": 284,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      16363,
      2348,
      26599,
      6375,
      44,
      284,
      8160,
      6831,
      3084,
      4645,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of SQLAlchemy ORM to define database table structure."
  },
  {
    "line": 35,
    "text": "    trading_reason = Column(String)",
    "annotation": "\ud83e\udde0 ML Signal: Use of JSON type in SQLAlchemy for storing complex data structures.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      7313,
      62,
      41181,
      796,
      29201,
      7,
      10100,
      8
    ],
    "start_token": 284,
    "end_token": 295,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      19449,
      2099,
      287,
      16363,
      2348,
      26599,
      329,
      23069,
      3716,
      1366,
      8573,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of JSON type in SQLAlchemy for storing complex data structures."
  },
  {
    "line": 35,
    "text": "    trading_reason = Column(String)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Ensure that the database schema is properly validated to prevent SQL injection.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      7313,
      62,
      41181,
      796,
      29201,
      7,
      10100,
      8
    ],
    "start_token": 295,
    "end_token": 306,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      48987,
      326,
      262,
      6831,
      32815,
      318,
      6105,
      31031,
      284,
      2948,
      16363,
      16954,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Ensure that the database schema is properly validated to prevent SQL injection."
  },
  {
    "line": 35,
    "text": "    trading_reason = Column(String)",
    "annotation": "\ud83e\udde0 ML Signal: Use of __all__ to define public API of the module.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      7313,
      62,
      41181,
      796,
      29201,
      7,
      10100,
      8
    ],
    "start_token": 306,
    "end_token": 317,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of __all__ to define public API of the module."
  }
]