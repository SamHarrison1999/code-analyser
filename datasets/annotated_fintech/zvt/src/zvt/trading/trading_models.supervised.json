[
  {
    "line": 6,
    "text": "from pydantic import BaseModel, Field",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module in a single line improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      279,
      5173,
      5109,
      1330,
      7308,
      17633,
      11,
      7663
    ],
    "start_token": 0,
    "end_token": 9,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      287,
      257,
      2060,
      1627,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module in a single line improves readability."
  },
  {
    "line": 13,
    "text": "from zvt.trader import TradingSignalType",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module in a single line improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      2213,
      5067,
      1330,
      25469,
      11712,
      282,
      6030
    ],
    "start_token": 9,
    "end_token": 20,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      287,
      257,
      2060,
      1627,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module in a single line improves readability."
  },
  {
    "line": 14,
    "text": "from zvt.trading.common import ExecutionStatus",
    "annotation": "\ud83e\udde0 ML Signal: Use of Pydantic BaseModel for data validation and serialization",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      2213,
      4980,
      13,
      11321,
      1330,
      37497,
      19580
    ],
    "start_token": 20,
    "end_token": 31,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      350,
      5173,
      5109,
      7308,
      17633,
      329,
      1366,
      21201,
      290,
      11389,
      1634
    ],
    "label": "ml_signal",
    "reason": "Use of Pydantic BaseModel for data validation and serialization"
  },
  {
    "line": 16,
    "text": "from zvt.utils.time_utils import tomorrow_date, to_pd_timestamp",
    "annotation": "\ud83e\udde0 ML Signal: List of strings for entity IDs, common pattern for handling multiple identifiers",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      2435,
      62,
      26791,
      1330,
      9439,
      62,
      4475,
      11,
      284,
      62,
      30094,
      62,
      16514,
      27823
    ],
    "start_token": 31,
    "end_token": 51,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7343,
      286,
      13042,
      329,
      9312,
      32373,
      11,
      2219,
      3912,
      329,
      9041,
      3294,
      42814
    ],
    "label": "ml_signal",
    "reason": "List of strings for entity IDs, common pattern for handling multiple identifiers"
  },
  {
    "line": 18,
    "text": "",
    "annotation": "\u2705 Best Practice: Default value for data_provider improves usability and reduces errors",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 51,
    "end_token": 51,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      15161,
      1988,
      329,
      1366,
      62,
      15234,
      1304,
      19575,
      42863,
      290,
      12850,
      8563
    ],
    "label": "best_practice",
    "reason": "Default value for data_provider improves usability and reduces errors"
  },
  {
    "line": 20,
    "text": "    entity_ids: List[str]",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential timezone issues with datetime defaults",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      2340,
      25,
      7343,
      58,
      2536,
      60
    ],
    "start_token": 51,
    "end_token": 62,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      640,
      11340,
      2428,
      351,
      4818,
      8079,
      26235
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential timezone issues with datetime defaults"
  },
  {
    "line": 21,
    "text": "    data_provider: str = Field(default=\"qmt\")",
    "annotation": "\u2705 Best Practice: Use of Field with default value for start_timestamp ensures consistent initialization",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1366,
      62,
      15234,
      1304,
      25,
      965,
      796,
      7663,
      7,
      12286,
      2625,
      80,
      16762,
      4943
    ],
    "start_token": 62,
    "end_token": 79,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      7663,
      351,
      4277,
      1988,
      329,
      923,
      62,
      16514,
      27823,
      19047,
      6414,
      37588
    ],
    "label": "best_practice",
    "reason": "Use of Field with default value for start_timestamp ensures consistent initialization"
  },
  {
    "line": 23,
    "text": "    end_timestamp: Optional[datetime] = Field(default=None)",
    "annotation": "\u2705 Best Practice: Use of Optional for end_timestamp indicates that it can be None",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      886,
      62,
      16514,
      27823,
      25,
      32233,
      58,
      19608,
      8079,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 79,
    "end_token": 99,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      32233,
      329,
      886,
      62,
      16514,
      27823,
      9217,
      326,
      340,
      460,
      307,
      6045
    ],
    "label": "best_practice",
    "reason": "Use of Optional for end_timestamp indicates that it can be None"
  },
  {
    "line": 25,
    "text": "    adjust_type: AdjustType = Field(default=AdjustType.qfq)",
    "annotation": "\u2705 Best Practice: Default value for level provides a sensible default for interval level",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      4532,
      62,
      4906,
      25,
      20292,
      6030,
      796,
      7663,
      7,
      12286,
      28,
      39668,
      6030,
      13,
      80,
      69,
      80,
      8
    ],
    "start_token": 99,
    "end_token": 120,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      15161,
      1988,
      329,
      1241,
      3769,
      257,
      20586,
      4277,
      329,
      16654,
      1241
    ],
    "label": "best_practice",
    "reason": "Default value for level provides a sensible default for interval level"
  },
  {
    "line": 27,
    "text": "",
    "annotation": "\u2705 Best Practice: Default value for adjust_type provides a sensible default for adjustment type",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 120,
    "end_token": 120,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      15161,
      1988,
      329,
      4532,
      62,
      4906,
      3769,
      257,
      20586,
      4277,
      329,
      15068,
      2099
    ],
    "label": "best_practice",
    "reason": "Default value for adjust_type provides a sensible default for adjustment type"
  },
  {
    "line": 21,
    "text": "    data_provider: str = Field(default=\"qmt\")",
    "annotation": "\u2705 Best Practice: Class should inherit from BaseModel for data validation and parsing",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1366,
      62,
      15234,
      1304,
      25,
      965,
      796,
      7663,
      7,
      12286,
      2625,
      80,
      16762,
      4943
    ],
    "start_token": 120,
    "end_token": 137,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      815,
      16955,
      422,
      7308,
      17633,
      329,
      1366,
      21201,
      290,
      32096
    ],
    "label": "best_practice",
    "reason": "Class should inherit from BaseModel for data validation and parsing"
  },
  {
    "line": 23,
    "text": "    end_timestamp: Optional[datetime] = Field(default=None)",
    "annotation": "\ud83e\udde0 ML Signal: Use of string type for entity_id, indicating unique identifiers",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      886,
      62,
      16514,
      27823,
      25,
      32233,
      58,
      19608,
      8079,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 137,
    "end_token": 157,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4731,
      2099,
      329,
      9312,
      62,
      312,
      11,
      12739,
      3748,
      42814
    ],
    "label": "ml_signal",
    "reason": "Use of string type for entity_id, indicating unique identifiers"
  },
  {
    "line": 25,
    "text": "    adjust_type: AdjustType = Field(default=AdjustType.qfq)",
    "annotation": "\ud83e\udde0 ML Signal: Use of string type for code, indicating stock or asset codes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      4532,
      62,
      4906,
      25,
      20292,
      6030,
      796,
      7663,
      7,
      12286,
      28,
      39668,
      6030,
      13,
      80,
      69,
      80,
      8
    ],
    "start_token": 157,
    "end_token": 178,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4731,
      2099,
      329,
      2438,
      11,
      12739,
      4283,
      393,
      11171,
      12416
    ],
    "label": "ml_signal",
    "reason": "Use of string type for code, indicating stock or asset codes"
  },
  {
    "line": 27,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of string type for name, indicating descriptive labels",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 178,
    "end_token": 178,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4731,
      2099,
      329,
      1438,
      11,
      12739,
      35644,
      14722
    ],
    "label": "ml_signal",
    "reason": "Use of string type for name, indicating descriptive labels"
  },
  {
    "line": 29,
    "text": "    entity_id: str",
    "annotation": "\u2705 Best Practice: Default values for fields improve usability and reduce errors",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      312,
      25,
      965
    ],
    "start_token": 178,
    "end_token": 186,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      15161,
      3815,
      329,
      7032,
      2987,
      42863,
      290,
      4646,
      8563
    ],
    "label": "best_practice",
    "reason": "Default values for fields improve usability and reduce errors"
  },
  {
    "line": 31,
    "text": "    name: str",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Type hinting without initialization can lead to runtime errors if not handled properly",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1438,
      25,
      965
    ],
    "start_token": 186,
    "end_token": 192,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5994,
      9254,
      278,
      1231,
      37588,
      460,
      1085,
      284,
      19124,
      8563,
      611,
      407,
      12118,
      6105
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Type hinting without initialization can lead to runtime errors if not handled properly"
  },
  {
    "line": 27,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of Pydantic BaseModel for data validation and model definition",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 192,
    "end_token": 192,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      350,
      5173,
      5109,
      7308,
      17633,
      329,
      1366,
      21201,
      290,
      2746,
      6770
    ],
    "label": "ml_signal",
    "reason": "Use of Pydantic BaseModel for data validation and model definition"
  },
  {
    "line": 29,
    "text": "    entity_id: str",
    "annotation": "\ud83e\udde0 ML Signal: List of strings indicating entity identifiers",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      312,
      25,
      965
    ],
    "start_token": 192,
    "end_token": 200,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7343,
      286,
      13042,
      12739,
      9312,
      42814
    ],
    "label": "ml_signal",
    "reason": "List of strings indicating entity identifiers"
  },
  {
    "line": 31,
    "text": "    name: str",
    "annotation": "\ud83e\udde0 ML Signal: Default value for data_provider indicating a common or preferred provider",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1438,
      25,
      965
    ],
    "start_token": 200,
    "end_token": 206,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15161,
      1988,
      329,
      1366,
      62,
      15234,
      1304,
      12739,
      257,
      2219,
      393,
      9871,
      10131
    ],
    "label": "ml_signal",
    "reason": "Default value for data_provider indicating a common or preferred provider"
  },
  {
    "line": 33,
    "text": "    datas: List",
    "annotation": "\ud83e\udde0 ML Signal: Default value for days_count indicating a common or preferred time range",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      19395,
      25,
      7343
    ],
    "start_token": 206,
    "end_token": 212,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15161,
      1988,
      329,
      1528,
      62,
      9127,
      12739,
      257,
      2219,
      393,
      9871,
      640,
      2837
    ],
    "label": "ml_signal",
    "reason": "Default value for days_count indicating a common or preferred time range"
  },
  {
    "line": 32,
    "text": "    level: IntervalLevel = Field(default=IntervalLevel.LEVEL_1DAY)",
    "annotation": "\u2705 Best Practice: Use of type annotations for class attributes improves code readability and maintainability.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1241,
      25,
      4225,
      2100,
      4971,
      796,
      7663,
      7,
      12286,
      28,
      9492,
      2100,
      4971,
      13,
      2538,
      18697,
      62,
      16,
      26442,
      8
    ],
    "start_token": 212,
    "end_token": 235,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      1398,
      12608,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Use of type annotations for class attributes improves code readability and maintainability."
  },
  {
    "line": 34,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of type annotations for class attributes improves code readability and maintainability.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 235,
    "end_token": 235,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      1398,
      12608,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Use of type annotations for class attributes improves code readability and maintainability."
  },
  {
    "line": 36,
    "text": "class TSRequestModel(BaseModel):",
    "annotation": "\u2705 Best Practice: Use of type annotations for class attributes improves code readability and maintainability.",
    "confidence": 1.0,
    "tokens": [
      4871,
      26136,
      18453,
      17633,
      7,
      14881,
      17633,
      2599
    ],
    "start_token": 235,
    "end_token": 243,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      1398,
      12608,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Use of type annotations for class attributes improves code readability and maintainability."
  },
  {
    "line": 38,
    "text": "    data_provider: str = Field(default=\"qmt\")",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): The type for 'datas' is not fully specified, which could lead to unexpected behavior if not handled properly.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1366,
      62,
      15234,
      1304,
      25,
      965,
      796,
      7663,
      7,
      12286,
      2625,
      80,
      16762,
      4943
    ],
    "start_token": 243,
    "end_token": 260,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      383,
      2099,
      329,
      705,
      19608,
      292,
      6,
      318,
      407,
      3938,
      7368,
      11,
      543,
      714,
      1085,
      284,
      10059,
      4069,
      611,
      407,
      12118,
      6105,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "The type for 'datas' is not fully specified, which could lead to unexpected behavior if not handled properly."
  },
  {
    "line": 36,
    "text": "class TSRequestModel(BaseModel):",
    "annotation": "\u2705 Best Practice: Inheriting from BaseModel provides data validation and serialization features.",
    "confidence": 0.5,
    "tokens": [
      4871,
      26136,
      18453,
      17633,
      7,
      14881,
      17633,
      2599
    ],
    "start_token": 260,
    "end_token": 268,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      47025,
      1780,
      422,
      7308,
      17633,
      3769,
      1366,
      21201,
      290,
      11389,
      1634,
      3033,
      13
    ],
    "label": "best_practice",
    "reason": "Inheriting from BaseModel provides data validation and serialization features."
  },
  {
    "line": 38,
    "text": "    data_provider: str = Field(default=\"qmt\")",
    "annotation": "\u2705 Best Practice: Using type annotations for class attributes improves code readability and type checking.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1366,
      62,
      15234,
      1304,
      25,
      965,
      796,
      7663,
      7,
      12286,
      2625,
      80,
      16762,
      4943
    ],
    "start_token": 268,
    "end_token": 285,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      2099,
      37647,
      329,
      1398,
      12608,
      19575,
      2438,
      1100,
      1799,
      290,
      2099,
      10627,
      13
    ],
    "label": "best_practice",
    "reason": "Using type annotations for class attributes improves code readability and type checking."
  },
  {
    "line": 46,
    "text": "    datas: List",
    "annotation": "\u2705 Best Practice: Using Optional for fields that can be None improves code clarity and type safety.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      19395,
      25,
      7343
    ],
    "start_token": 285,
    "end_token": 291,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      32233,
      329,
      7032,
      326,
      460,
      307,
      6045,
      19575,
      2438,
      16287,
      290,
      2099,
      3747,
      13
    ],
    "label": "best_practice",
    "reason": "Using Optional for fields that can be None improves code clarity and type safety."
  },
  {
    "line": 48,
    "text": "",
    "annotation": "\u2705 Best Practice: Using Optional for fields that can be None improves code clarity and type safety.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 291,
    "end_token": 291,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      32233,
      329,
      7032,
      326,
      460,
      307,
      6045,
      19575,
      2438,
      16287,
      290,
      2099,
      3747,
      13
    ],
    "label": "best_practice",
    "reason": "Using Optional for fields that can be None improves code clarity and type safety."
  },
  {
    "line": 46,
    "text": "    datas: List",
    "annotation": "\u2705 Best Practice: Inheriting from a custom model class suggests a structured approach to model definition",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      19395,
      25,
      7343
    ],
    "start_token": 291,
    "end_token": 297,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      47025,
      1780,
      422,
      257,
      2183,
      2746,
      1398,
      5644,
      257,
      20793,
      3164,
      284,
      2746,
      6770
    ],
    "label": "best_practice",
    "reason": "Inheriting from a custom model class suggests a structured approach to model definition"
  },
  {
    "line": 48,
    "text": "",
    "annotation": "\u2705 Best Practice: Using Optional type hints improves code readability and indicates that the field can be None",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 297,
    "end_token": 297,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      32233,
      2099,
      20269,
      19575,
      2438,
      1100,
      1799,
      290,
      9217,
      326,
      262,
      2214,
      460,
      307,
      6045
    ],
    "label": "best_practice",
    "reason": "Using Optional type hints improves code readability and indicates that the field can be None"
  },
  {
    "line": 50,
    "text": "    #: UNIX\u65f6\u95f4\u6233",
    "annotation": "\u2705 Best Practice: Using Optional type hints improves code readability and indicates that the field can be None",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      4725,
      10426,
      33768,
      114,
      29785,
      112,
      22755,
      111
    ],
    "start_token": 297,
    "end_token": 310,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      32233,
      2099,
      20269,
      19575,
      2438,
      1100,
      1799,
      290,
      9217,
      326,
      262,
      2214,
      460,
      307,
      6045
    ],
    "label": "best_practice",
    "reason": "Using Optional type hints improves code readability and indicates that the field can be None"
  },
  {
    "line": 51,
    "text": "    time: int",
    "annotation": "\u2705 Best Practice: Using List type hint provides clarity on the expected data structure",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      640,
      25,
      493
    ],
    "start_token": 310,
    "end_token": 316,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      7343,
      2099,
      9254,
      3769,
      16287,
      319,
      262,
      2938,
      1366,
      4645
    ],
    "label": "best_practice",
    "reason": "Using List type hint provides clarity on the expected data structure"
  },
  {
    "line": 51,
    "text": "    time: int",
    "annotation": "\u2705 Best Practice: Use of Optional and default value for main_tags improves code readability and maintainability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      640,
      25,
      493
    ],
    "start_token": 316,
    "end_token": 322,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      32233,
      290,
      4277,
      1988,
      329,
      1388,
      62,
      31499,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of Optional and default value for main_tags improves code readability and maintainability"
  },
  {
    "line": 54,
    "text": "    #: \u8dcc\u505c\u6570",
    "annotation": "\u2705 Best Practice: Use of field_validator decorator for input validation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      5525,
      115,
      234,
      161,
      223,
      250,
      46763,
      108
    ],
    "start_token": 322,
    "end_token": 335,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2214,
      62,
      12102,
      1352,
      11705,
      1352,
      329,
      5128,
      21201
    ],
    "label": "best_practice",
    "reason": "Use of field_validator decorator for input validation"
  },
  {
    "line": 54,
    "text": "    #: \u8dcc\u505c\u6570",
    "annotation": "\u2705 Best Practice: Use of class method decorator for methods that don't modify class state",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      5525,
      115,
      234,
      161,
      223,
      250,
      46763,
      108
    ],
    "start_token": 335,
    "end_token": 348,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      1398,
      2446,
      11705,
      1352,
      329,
      5050,
      326,
      836,
      470,
      13096,
      1398,
      1181
    ],
    "label": "best_practice",
    "reason": "Use of class method decorator for methods that don't modify class state"
  },
  {
    "line": 56,
    "text": "    #: \u4e0a\u6da8\u6570",
    "annotation": "\u2705 Best Practice: Clear and descriptive variable naming",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      220,
      41468,
      162,
      114,
      101,
      46763,
      108
    ],
    "start_token": 348,
    "end_token": 360,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11459,
      290,
      35644,
      7885,
      19264
    ],
    "label": "best_practice",
    "reason": "Clear and descriptive variable naming"
  },
  {
    "line": 57,
    "text": "    up_count: int",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of checking membership in a list or collection",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      510,
      62,
      9127,
      25,
      493
    ],
    "start_token": 360,
    "end_token": 368,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      10627,
      9931,
      287,
      257,
      1351,
      393,
      4947
    ],
    "label": "ml_signal",
    "reason": "Pattern of checking membership in a list or collection"
  },
  {
    "line": 59,
    "text": "    down_count: int",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential information disclosure through error messages",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      866,
      62,
      9127,
      25,
      493
    ],
    "start_token": 368,
    "end_token": 376,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      1321,
      13019,
      832,
      4049,
      6218
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential information disclosure through error messages"
  },
  {
    "line": 58,
    "text": "    #: \u4e0b\u8dcc\u6570",
    "annotation": "\u2705 Best Practice: Class should inherit from a base class to ensure consistent behavior and structure",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      220,
      10310,
      233,
      164,
      115,
      234,
      46763,
      108
    ],
    "start_token": 376,
    "end_token": 389,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      815,
      16955,
      422,
      257,
      2779,
      1398,
      284,
      4155,
      6414,
      4069,
      290,
      4645
    ],
    "label": "best_practice",
    "reason": "Class should inherit from a base class to ensure consistent behavior and structure"
  },
  {
    "line": 60,
    "text": "    #: \u6da8\u5e45",
    "annotation": "\u2705 Best Practice: Type hinting for attributes improves code readability and maintainability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10545,
      114,
      101,
      33176,
      227
    ],
    "start_token": 389,
    "end_token": 399,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      12608,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting for attributes improves code readability and maintainability"
  },
  {
    "line": 62,
    "text": "    #: \u6210\u4ea4\u989d",
    "annotation": "\u2705 Best Practice: Type hinting for attributes improves code readability and maintainability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10545,
      230,
      238,
      12859,
      97,
      165,
      95,
      251
    ],
    "start_token": 399,
    "end_token": 412,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      12608,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting for attributes improves code readability and maintainability"
  },
  {
    "line": 61,
    "text": "    change_pct: float",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional fields indicates handling of missing or default values",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1487,
      62,
      79,
      310,
      25,
      12178
    ],
    "start_token": 412,
    "end_token": 421,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      7032,
      9217,
      9041,
      286,
      4814,
      393,
      4277,
      3815
    ],
    "label": "ml_signal",
    "reason": "Use of Optional fields indicates handling of missing or default values"
  },
  {
    "line": 62,
    "text": "    #: \u6210\u4ea4\u989d",
    "annotation": "\u2705 Best Practice: Use of Optional and default values improves code robustness and readability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10545,
      230,
      238,
      12859,
      97,
      165,
      95,
      251
    ],
    "start_token": 421,
    "end_token": 434,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      32233,
      290,
      4277,
      3815,
      19575,
      2438,
      12373,
      1108,
      290,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of Optional and default values improves code robustness and readability"
  },
  {
    "line": 64,
    "text": "    #: \u6628\u65e5\u6210\u4ea4\u989d",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional fields indicates handling of missing or default values",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10545,
      246,
      101,
      33768,
      98,
      22755,
      238,
      12859,
      97,
      165,
      95,
      251
    ],
    "start_token": 434,
    "end_token": 451,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      7032,
      9217,
      9041,
      286,
      4814,
      393,
      4277,
      3815
    ],
    "label": "ml_signal",
    "reason": "Use of Optional fields indicates handling of missing or default values"
  },
  {
    "line": 66,
    "text": "    #: \u540c\u6bd4",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional fields indicates handling of missing or default values",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10263,
      238,
      234,
      162,
      107,
      242
    ],
    "start_token": 451,
    "end_token": 462,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      7032,
      9217,
      9041,
      286,
      4814,
      393,
      4277,
      3815
    ],
    "label": "ml_signal",
    "reason": "Use of Optional fields indicates handling of missing or default values"
  },
  {
    "line": 68,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional fields indicates handling of missing or default values",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 462,
    "end_token": 462,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      7032,
      9217,
      9041,
      286,
      4814,
      393,
      4277,
      3815
    ],
    "label": "ml_signal",
    "reason": "Use of Optional fields indicates handling of missing or default values"
  },
  {
    "line": 70,
    "text": "class QueryStockQuoteSettingModel(CustomModel):",
    "annotation": "\u2705 Best Practice: Setting a default value for limit ensures consistent behavior",
    "confidence": 0.5,
    "tokens": [
      4871,
      43301,
      26207,
      25178,
      34149,
      17633,
      7,
      15022,
      17633,
      2599
    ],
    "start_token": 462,
    "end_token": 472,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      25700,
      257,
      4277,
      1988,
      329,
      4179,
      19047,
      6414,
      4069
    ],
    "label": "best_practice",
    "reason": "Setting a default value for limit ensures consistent behavior"
  },
  {
    "line": 72,
    "text": "    main_tags: Optional[List[str]] = Field(default=None)",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional fields indicates handling of missing or default values",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1388,
      62,
      31499,
      25,
      32233,
      58,
      8053,
      58,
      2536,
      11907,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 472,
    "end_token": 492,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      7032,
      9217,
      9041,
      286,
      4814,
      393,
      4277,
      3815
    ],
    "label": "ml_signal",
    "reason": "Use of Optional fields indicates handling of missing or default values"
  },
  {
    "line": 74,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional fields indicates handling of missing or default values",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 492,
    "end_token": 492,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      7032,
      9217,
      9041,
      286,
      4814,
      393,
      4277,
      3815
    ],
    "label": "ml_signal",
    "reason": "Use of Optional fields indicates handling of missing or default values"
  },
  {
    "line": 68,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Definition of a data model class, useful for understanding data structures in ML models",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 492,
    "end_token": 492,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      30396,
      286,
      257,
      1366,
      2746,
      1398,
      11,
      4465,
      329,
      4547,
      1366,
      8573,
      287,
      10373,
      4981
    ],
    "label": "ml_signal",
    "reason": "Definition of a data model class, useful for understanding data structures in ML models"
  },
  {
    "line": 70,
    "text": "class QueryStockQuoteSettingModel(CustomModel):",
    "annotation": "\ud83e\udde0 ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features",
    "confidence": 0.5,
    "tokens": [
      4871,
      43301,
      26207,
      25178,
      34149,
      17633,
      7,
      15022,
      17633,
      2599
    ],
    "start_token": 492,
    "end_token": 502,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      12608,
      11,
      5419,
      287,
      4547,
      1366,
      3858,
      329,
      10373,
      3033
    ],
    "label": "ml_signal",
    "reason": "Use of type annotations for attributes, helps in understanding data types for ML features"
  },
  {
    "line": 72,
    "text": "    main_tags: Optional[List[str]] = Field(default=None)",
    "annotation": "\ud83e\udde0 ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1388,
      62,
      31499,
      25,
      32233,
      58,
      8053,
      58,
      2536,
      11907,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 502,
    "end_token": 522,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      12608,
      11,
      5419,
      287,
      4547,
      1366,
      3858,
      329,
      10373,
      3033
    ],
    "label": "ml_signal",
    "reason": "Use of type annotations for attributes, helps in understanding data types for ML features"
  },
  {
    "line": 74,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 522,
    "end_token": 522,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      12608,
      11,
      5419,
      287,
      4547,
      1366,
      3858,
      329,
      10373,
      3033
    ],
    "label": "ml_signal",
    "reason": "Use of type annotations for attributes, helps in understanding data types for ML features"
  },
  {
    "line": 76,
    "text": "    stock_pool_name: str",
    "annotation": "\ud83e\udde0 ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      4283,
      62,
      7742,
      62,
      3672,
      25,
      965
    ],
    "start_token": 522,
    "end_token": 532,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      12608,
      11,
      5419,
      287,
      4547,
      1366,
      3858,
      329,
      10373,
      3033
    ],
    "label": "ml_signal",
    "reason": "Use of type annotations for attributes, helps in understanding data types for ML features"
  },
  {
    "line": 78,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 532,
    "end_token": 532,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      12608,
      11,
      5419,
      287,
      4547,
      1366,
      3858,
      329,
      10373,
      3033
    ],
    "label": "ml_signal",
    "reason": "Use of type annotations for attributes, helps in understanding data types for ML features"
  },
  {
    "line": 80,
    "text": "    @classmethod",
    "annotation": "\ud83e\udde0 ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2488,
      4871,
      24396
    ],
    "start_token": 532,
    "end_token": 538,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      12608,
      11,
      5419,
      287,
      4547,
      1366,
      3858,
      329,
      10373,
      3033
    ],
    "label": "ml_signal",
    "reason": "Use of type annotations for attributes, helps in understanding data types for ML features"
  },
  {
    "line": 82,
    "text": "        if v not in get_stock_pool_names():",
    "annotation": "\ud83e\udde0 ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      410,
      407,
      287,
      651,
      62,
      13578,
      62,
      7742,
      62,
      14933,
      33529
    ],
    "start_token": 538,
    "end_token": 557,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      12608,
      11,
      5419,
      287,
      4547,
      1366,
      3858,
      329,
      10373,
      3033
    ],
    "label": "ml_signal",
    "reason": "Use of type annotations for attributes, helps in understanding data types for ML features"
  },
  {
    "line": 84,
    "text": "        return v",
    "annotation": "\ud83e\udde0 ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      410
    ],
    "start_token": 557,
    "end_token": 566,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      12608,
      11,
      5419,
      287,
      4547,
      1366,
      3858,
      329,
      10373,
      3033
    ],
    "label": "ml_signal",
    "reason": "Use of type annotations for attributes, helps in understanding data types for ML features"
  },
  {
    "line": 86,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional type for attributes, indicates nullable fields in data models",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 566,
    "end_token": 566,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      2099,
      329,
      12608,
      11,
      9217,
      9242,
      540,
      7032,
      287,
      1366,
      4981
    ],
    "label": "ml_signal",
    "reason": "Use of Optional type for attributes, indicates nullable fields in data models"
  },
  {
    "line": 88,
    "text": "    stock_pool_name: str",
    "annotation": "\ud83e\udde0 ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      4283,
      62,
      7742,
      62,
      3672,
      25,
      965
    ],
    "start_token": 566,
    "end_token": 576,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      12608,
      11,
      5419,
      287,
      4547,
      1366,
      3858,
      329,
      10373,
      3033
    ],
    "label": "ml_signal",
    "reason": "Use of type annotations for attributes, helps in understanding data types for ML features"
  },
  {
    "line": 90,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional type for attributes, indicates nullable fields in data models",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 576,
    "end_token": 576,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      2099,
      329,
      12608,
      11,
      9217,
      9242,
      540,
      7032,
      287,
      1366,
      4981
    ],
    "label": "ml_signal",
    "reason": "Use of Optional type for attributes, indicates nullable fields in data models"
  },
  {
    "line": 92,
    "text": "class QueryStockQuoteModel(CustomModel):",
    "annotation": "\ud83e\udde0 ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features",
    "confidence": 0.5,
    "tokens": [
      4871,
      43301,
      26207,
      25178,
      17633,
      7,
      15022,
      17633,
      2599
    ],
    "start_token": 576,
    "end_token": 585,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      12608,
      11,
      5419,
      287,
      4547,
      1366,
      3858,
      329,
      10373,
      3033
    ],
    "label": "ml_signal",
    "reason": "Use of type annotations for attributes, helps in understanding data types for ML features"
  },
  {
    "line": 94,
    "text": "    main_tag: Optional[str] = Field(default=None)",
    "annotation": "\ud83e\udde0 ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1388,
      62,
      12985,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 585,
    "end_token": 603,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      12608,
      11,
      5419,
      287,
      4547,
      1366,
      3858,
      329,
      10373,
      3033
    ],
    "label": "ml_signal",
    "reason": "Use of type annotations for attributes, helps in understanding data types for ML features"
  },
  {
    "line": 96,
    "text": "    stock_pool_name: Optional[str] = Field(default=None)",
    "annotation": "\ud83e\udde0 ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      4283,
      62,
      7742,
      62,
      3672,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 603,
    "end_token": 623,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      12608,
      11,
      5419,
      287,
      4547,
      1366,
      3858,
      329,
      10373,
      3033
    ],
    "label": "ml_signal",
    "reason": "Use of type annotations for attributes, helps in understanding data types for ML features"
  },
  {
    "line": 98,
    "text": "    limit: int = Field(default=100)",
    "annotation": "\ud83e\udde0 ML Signal: Use of type annotations for attributes, helps in understanding data types for ML features",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      4179,
      25,
      493,
      796,
      7663,
      7,
      12286,
      28,
      3064,
      8
    ],
    "start_token": 623,
    "end_token": 636,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      12608,
      11,
      5419,
      287,
      4547,
      1366,
      3858,
      329,
      10373,
      3033
    ],
    "label": "ml_signal",
    "reason": "Use of type annotations for attributes, helps in understanding data types for ML features"
  },
  {
    "line": 100,
    "text": "    order_by_field: Optional[str] = Field(default=\"change_pct\")",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional type for attributes, indicates nullable fields in data models",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1502,
      62,
      1525,
      62,
      3245,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      2625,
      3803,
      62,
      79,
      310,
      4943
    ],
    "start_token": 636,
    "end_token": 659,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      2099,
      329,
      12608,
      11,
      9217,
      9242,
      540,
      7032,
      287,
      1366,
      4981
    ],
    "label": "ml_signal",
    "reason": "Use of Optional type for attributes, indicates nullable fields in data models"
  },
  {
    "line": 102,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of Union type for attributes, indicates multiple possible types for a field",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 659,
    "end_token": 659,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4479,
      2099,
      329,
      12608,
      11,
      9217,
      3294,
      1744,
      3858,
      329,
      257,
      2214
    ],
    "label": "ml_signal",
    "reason": "Use of Union type for attributes, indicates multiple possible types for a field"
  },
  {
    "line": 104,
    "text": "    #: \u4ee3\u7801",
    "annotation": "\ud83e\udde0 ML Signal: Use of Union type for attributes, indicates multiple possible types for a field",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      220,
      47987,
      163,
      254,
      223
    ],
    "start_token": 659,
    "end_token": 669,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4479,
      2099,
      329,
      12608,
      11,
      9217,
      3294,
      1744,
      3858,
      329,
      257,
      2214
    ],
    "label": "ml_signal",
    "reason": "Use of Union type for attributes, indicates multiple possible types for a field"
  },
  {
    "line": 87,
    "text": "class QueryTagQuoteModel(CustomModel):",
    "annotation": "\u2705 Best Practice: Class definition should inherit from a base class for consistency and potential reuse",
    "confidence": 0.5,
    "tokens": [
      4871,
      43301,
      24835,
      25178,
      17633,
      7,
      15022,
      17633,
      2599
    ],
    "start_token": 669,
    "end_token": 678,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      6770,
      815,
      16955,
      422,
      257,
      2779,
      1398,
      329,
      15794,
      290,
      2785,
      32349
    ],
    "label": "best_practice",
    "reason": "Class definition should inherit from a base class for consistency and potential reuse"
  },
  {
    "line": 89,
    "text": "    main_tags: List[str]",
    "annotation": "\u2705 Best Practice: Use of type annotations for class attributes improves code readability and maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1388,
      62,
      31499,
      25,
      7343,
      58,
      2536,
      60
    ],
    "start_token": 678,
    "end_token": 689,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      1398,
      12608,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of type annotations for class attributes improves code readability and maintainability"
  },
  {
    "line": 91,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of type annotations for class attributes improves code readability and maintainability",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 689,
    "end_token": 689,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      1398,
      12608,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of type annotations for class attributes improves code readability and maintainability"
  },
  {
    "line": 93,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of type annotations for class attributes improves code readability and maintainability",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 689,
    "end_token": 689,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      1398,
      12608,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of type annotations for class attributes improves code readability and maintainability"
  },
  {
    "line": 95,
    "text": "    entity_ids: Optional[List[str]] = Field(default=None)",
    "annotation": "\u2705 Best Practice: Use of type annotations for class attributes improves code readability and maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      2340,
      25,
      32233,
      58,
      8053,
      58,
      2536,
      11907,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 689,
    "end_token": 709,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      1398,
      12608,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of type annotations for class attributes improves code readability and maintainability"
  },
  {
    "line": 97,
    "text": "    # the amount is not huge, just ignore now",
    "annotation": "\u2705 Best Practice: Use of type annotations for class attributes improves code readability and maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      262,
      2033,
      318,
      407,
      3236,
      11,
      655,
      8856,
      783
    ],
    "start_token": 709,
    "end_token": 722,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      1398,
      12608,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of type annotations for class attributes improves code readability and maintainability"
  },
  {
    "line": 99,
    "text": "    order_by_type: Optional[OrderByType] = Field(default=OrderByType.desc)",
    "annotation": "\u2705 Best Practice: Use of type annotations for class attributes improves code readability and maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1502,
      62,
      1525,
      62,
      4906,
      25,
      32233,
      58,
      18743,
      3886,
      6030,
      60,
      796,
      7663,
      7,
      12286,
      28,
      18743,
      3886,
      6030,
      13,
      20147,
      8
    ],
    "start_token": 722,
    "end_token": 748,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      1398,
      12608,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of type annotations for class attributes improves code readability and maintainability"
  },
  {
    "line": 101,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of type annotations for class attributes improves code readability and maintainability",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 748,
    "end_token": 748,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      1398,
      12608,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of type annotations for class attributes improves code readability and maintainability"
  },
  {
    "line": 96,
    "text": "    stock_pool_name: Optional[str] = Field(default=None)",
    "annotation": "\u2705 Best Practice: Use of type annotations for class attributes improves code readability and maintainability.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      4283,
      62,
      7742,
      62,
      3672,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 748,
    "end_token": 768,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      1398,
      12608,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Use of type annotations for class attributes improves code readability and maintainability."
  },
  {
    "line": 103,
    "text": "class StockQuoteModel(MixinModel):",
    "annotation": "\u2705 Best Practice: Use of type annotations for complex types like lists enhances code clarity.",
    "confidence": 0.5,
    "tokens": [
      4871,
      10500,
      25178,
      17633,
      7,
      35608,
      259,
      17633,
      2599
    ],
    "start_token": 768,
    "end_token": 777,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      3716,
      3858,
      588,
      8341,
      32479,
      2438,
      16287,
      13
    ],
    "label": "best_practice",
    "reason": "Use of type annotations for complex types like lists enhances code clarity."
  },
  {
    "line": 104,
    "text": "    #: \u4ee3\u7801",
    "annotation": "\ud83e\udde0 ML Signal: Use of stock identifiers and trading details can indicate a financial trading application",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      220,
      47987,
      163,
      254,
      223
    ],
    "start_token": 777,
    "end_token": 787,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4283,
      42814,
      290,
      7313,
      3307,
      460,
      7603,
      257,
      3176,
      7313,
      3586
    ],
    "label": "ml_signal",
    "reason": "Use of stock identifiers and trading details can indicate a financial trading application"
  },
  {
    "line": 106,
    "text": "    #: \u540d\u5b57",
    "annotation": "\ud83e\udde0 ML Signal: Use of stock identifiers and trading details can indicate a financial trading application",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10263,
      238,
      235,
      27764,
      245
    ],
    "start_token": 787,
    "end_token": 797,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4283,
      42814,
      290,
      7313,
      3307,
      460,
      7603,
      257,
      3176,
      7313,
      3586
    ],
    "label": "ml_signal",
    "reason": "Use of stock identifiers and trading details can indicate a financial trading application"
  },
  {
    "line": 108,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of stock identifiers and trading details can indicate a financial trading application",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 797,
    "end_token": 797,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4283,
      42814,
      290,
      7313,
      3307,
      460,
      7603,
      257,
      3176,
      7313,
      3586
    ],
    "label": "ml_signal",
    "reason": "Use of stock identifiers and trading details can indicate a financial trading application"
  },
  {
    "line": 110,
    "text": "    time: int",
    "annotation": "\ud83e\udde0 ML Signal: Use of trading_date can indicate time-based operations or predictions",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      640,
      25,
      493
    ],
    "start_token": 797,
    "end_token": 803,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      7313,
      62,
      4475,
      460,
      7603,
      640,
      12,
      3106,
      4560,
      393,
      16277
    ],
    "label": "ml_signal",
    "reason": "Use of trading_date can indicate time-based operations or predictions"
  },
  {
    "line": 112,
    "text": "    price: float",
    "annotation": "\ud83e\udde0 ML Signal: Use of expected_open_pct can indicate predictive modeling for stock prices",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2756,
      25,
      12178
    ],
    "start_token": 803,
    "end_token": 809,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2938,
      62,
      9654,
      62,
      79,
      310,
      460,
      7603,
      33344,
      21128,
      329,
      4283,
      4536
    ],
    "label": "ml_signal",
    "reason": "Use of expected_open_pct can indicate predictive modeling for stock prices"
  },
  {
    "line": 114,
    "text": "    change_pct: float",
    "annotation": "\ud83e\udde0 ML Signal: Optional buy_price suggests conditional trading strategies",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1487,
      62,
      79,
      310,
      25,
      12178
    ],
    "start_token": 809,
    "end_token": 818,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      32233,
      2822,
      62,
      20888,
      5644,
      26340,
      7313,
      10064
    ],
    "label": "ml_signal",
    "reason": "Optional buy_price suggests conditional trading strategies"
  },
  {
    "line": 116,
    "text": "    turnover: float",
    "annotation": "\ud83e\udde0 ML Signal: Optional sell_price suggests conditional trading strategies",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      25079,
      25,
      12178
    ],
    "start_token": 818,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      32233,
      3677,
      62,
      20888,
      5644,
      26340,
      7313,
      10064
    ],
    "label": "ml_signal",
    "reason": "Optional sell_price suggests conditional trading strategies"
  },
  {
    "line": 118,
    "text": "    turnover_rate: float",
    "annotation": "\ud83e\udde0 ML Signal: Use of trading_reason can indicate decision-making processes in trading",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      25079,
      62,
      4873,
      25,
      12178
    ],
    "start_token": 824,
    "end_token": 832,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      7313,
      62,
      41181,
      460,
      7603,
      2551,
      12,
      8601,
      7767,
      287,
      7313
    ],
    "label": "ml_signal",
    "reason": "Use of trading_reason can indicate decision-making processes in trading"
  },
  {
    "line": 120,
    "text": "    is_limit_up: bool",
    "annotation": "\ud83e\udde0 ML Signal: Use of trading_signal_type can indicate categorization of trading strategies",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      318,
      62,
      32374,
      62,
      929,
      25,
      20512
    ],
    "start_token": 832,
    "end_token": 842,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      7313,
      62,
      12683,
      282,
      62,
      4906,
      460,
      7603,
      17851,
      1634,
      286,
      7313,
      10064
    ],
    "label": "ml_signal",
    "reason": "Use of trading_signal_type can indicate categorization of trading strategies"
  },
  {
    "line": 122,
    "text": "    limit_up_amount: Optional[float] = Field(default=None)",
    "annotation": "\ud83e\udde0 ML Signal: Default status indicates initial state management in trading execution",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      4179,
      62,
      929,
      62,
      17287,
      25,
      32233,
      58,
      22468,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 842,
    "end_token": 862,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15161,
      3722,
      9217,
      4238,
      1181,
      4542,
      287,
      7313,
      9706
    ],
    "label": "ml_signal",
    "reason": "Default status indicates initial state management in trading execution"
  },
  {
    "line": 122,
    "text": "    limit_up_amount: Optional[float] = Field(default=None)",
    "annotation": "\u2705 Best Practice: Use of default values for fields improves model robustness",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      4179,
      62,
      929,
      62,
      17287,
      25,
      32233,
      58,
      22468,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 862,
    "end_token": 882,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      4277,
      3815,
      329,
      7032,
      19575,
      2746,
      12373,
      1108
    ],
    "label": "best_practice",
    "reason": "Use of default values for fields improves model robustness"
  },
  {
    "line": 125,
    "text": "    #: \u5c01\u8dcc\u505c\u91d1\u989d",
    "annotation": "\ud83e\udde0 ML Signal: Optional review suggests post-trade analysis or feedback mechanisms",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10263,
      108,
      223,
      164,
      115,
      234,
      161,
      223,
      250,
      34932,
      239,
      165,
      95,
      251
    ],
    "start_token": 882,
    "end_token": 901,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      32233,
      2423,
      5644,
      1281,
      12,
      25351,
      3781,
      393,
      7538,
      11701
    ],
    "label": "ml_signal",
    "reason": "Optional review suggests post-trade analysis or feedback mechanisms"
  },
  {
    "line": 122,
    "text": "    limit_up_amount: Optional[float] = Field(default=None)",
    "annotation": "\u2705 Best Practice: Use of field_validator to ensure data integrity for trading_date",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      4179,
      62,
      929,
      62,
      17287,
      25,
      32233,
      58,
      22468,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 901,
    "end_token": 921,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2214,
      62,
      12102,
      1352,
      284,
      4155,
      1366,
      11540,
      329,
      7313,
      62,
      4475
    ],
    "label": "best_practice",
    "reason": "Use of field_validator to ensure data integrity for trading_date"
  },
  {
    "line": 125,
    "text": "    #: \u5c01\u8dcc\u505c\u91d1\u989d",
    "annotation": "\u2705 Best Practice: Use of type hints for function parameters and return type",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10263,
      108,
      223,
      164,
      115,
      234,
      161,
      223,
      250,
      34932,
      239,
      165,
      95,
      251
    ],
    "start_token": 921,
    "end_token": 940,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      20269,
      329,
      2163,
      10007,
      290,
      1441,
      2099
    ],
    "label": "best_practice",
    "reason": "Use of type hints for function parameters and return type"
  },
  {
    "line": 127,
    "text": "    #: 5\u6321\u5356\u5355\u91d1\u989d",
    "annotation": "\ud83e\udde0 ML Signal: Use of a utility function to convert string to timestamp",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      642,
      162,
      234,
      94,
      39355,
      244,
      39355,
      243,
      34932,
      239,
      165,
      95,
      251
    ],
    "start_token": 940,
    "end_token": 958,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      10361,
      2163,
      284,
      10385,
      4731,
      284,
      41033
    ],
    "label": "ml_signal",
    "reason": "Use of a utility function to convert string to timestamp"
  },
  {
    "line": 128,
    "text": "    ask_amount: float",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential timezone issues if to_pd_timestamp does not handle timezones",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1265,
      62,
      17287,
      25,
      12178
    ],
    "start_token": 958,
    "end_token": 966,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      640,
      11340,
      2428,
      611,
      284,
      62,
      30094,
      62,
      16514,
      27823,
      857,
      407,
      5412,
      640,
      89,
      1952
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential timezone issues if to_pd_timestamp does not handle timezones"
  },
  {
    "line": 130,
    "text": "    bid_amount: float",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Error message may expose sensitive information if not handled properly",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      8406,
      62,
      17287,
      25,
      12178
    ],
    "start_token": 966,
    "end_token": 974,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      13047,
      3275,
      743,
      15651,
      8564,
      1321,
      611,
      407,
      12118,
      6105
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Error message may expose sensitive information if not handled properly"
  },
  {
    "line": 131,
    "text": "    #: \u6d41\u901a\u5e02\u503c",
    "annotation": "\u2705 Best Practice: Returning the validated input value",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10545,
      113,
      223,
      34460,
      248,
      30585,
      224,
      161,
      222,
      120
    ],
    "start_token": 974,
    "end_token": 989,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      42882,
      262,
      31031,
      5128,
      1988
    ],
    "label": "best_practice",
    "reason": "Returning the validated input value"
  },
  {
    "line": 130,
    "text": "    bid_amount: float",
    "annotation": "\ud83e\udde0 ML Signal: Inheritance from BaseModel suggests usage of a data validation library like Pydantic.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      8406,
      62,
      17287,
      25,
      12178
    ],
    "start_token": 989,
    "end_token": 997,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47025,
      42942,
      422,
      7308,
      17633,
      5644,
      8748,
      286,
      257,
      1366,
      21201,
      5888,
      588,
      350,
      5173,
      5109,
      13
    ],
    "label": "ml_signal",
    "reason": "Inheritance from BaseModel suggests usage of a data validation library like Pydantic."
  },
  {
    "line": 131,
    "text": "    #: \u6d41\u901a\u5e02\u503c",
    "annotation": "\u2705 Best Practice: Use of __all__ to define public API of the module.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      10545,
      113,
      223,
      34460,
      248,
      30585,
      224,
      161,
      222,
      120
    ],
    "start_token": 997,
    "end_token": 1012,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265,
      13
    ],
    "label": "best_practice",
    "reason": "Use of __all__ to define public API of the module."
  }
]