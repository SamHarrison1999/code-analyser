[
  {
    "line": 7,
    "text": "from zvt.contract import IntervalLevel",
    "annotation": "\ud83e\udde0 ML Signal: Use of Pydantic BaseModel for data validation and serialization",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      28484,
      1330,
      4225,
      2100,
      4971
    ],
    "start_token": 0,
    "end_token": 9,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      350,
      5173,
      5109,
      7308,
      17633,
      329,
      1366,
      21201,
      290,
      11389,
      1634
    ],
    "label": "ml_signal",
    "reason": "Use of Pydantic BaseModel for data validation and serialization"
  },
  {
    "line": 9,
    "text": "from zvt.utils.time_utils import date_time_by_interval, current_date",
    "annotation": "\ud83e\udde0 ML Signal: Use of type annotations for model attributes",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      2435,
      62,
      26791,
      1330,
      3128,
      62,
      2435,
      62,
      1525,
      62,
      3849,
      2100,
      11,
      1459,
      62,
      4475
    ],
    "start_token": 9,
    "end_token": 31,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      2746,
      12608
    ],
    "label": "ml_signal",
    "reason": "Use of type annotations for model attributes"
  },
  {
    "line": 11,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional for nullable fields",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 31,
    "end_token": 31,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      329,
      9242,
      540,
      7032
    ],
    "label": "ml_signal",
    "reason": "Use of Optional for nullable fields"
  },
  {
    "line": 13,
    "text": "    factor_name: str",
    "annotation": "\ud83e\udde0 ML Signal: Use of default values in Pydantic models",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      5766,
      62,
      3672,
      25,
      965
    ],
    "start_token": 31,
    "end_token": 39,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      3815,
      287,
      350,
      5173,
      5109,
      4981
    ],
    "label": "ml_signal",
    "reason": "Use of default values in Pydantic models"
  },
  {
    "line": 15,
    "text": "    data_provider: str = Field(default=\"em\")",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential timezone issues with datetime defaults",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1366,
      62,
      15234,
      1304,
      25,
      965,
      796,
      7663,
      7,
      12286,
      2625,
      368,
      4943
    ],
    "start_token": 39,
    "end_token": 55,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      640,
      11340,
      2428,
      351,
      4818,
      8079,
      26235
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential timezone issues with datetime defaults"
  },
  {
    "line": 16,
    "text": "    start_timestamp: datetime = Field(default=date_time_by_interval(current_date(), -365))",
    "annotation": "\ud83e\udde0 ML Signal: Use of Field for default values and validation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      923,
      62,
      16514,
      27823,
      25,
      4818,
      8079,
      796,
      7663,
      7,
      12286,
      28,
      4475,
      62,
      2435,
      62,
      1525,
      62,
      3849,
      2100,
      7,
      14421,
      62,
      4475,
      22784,
      532,
      24760,
      4008
    ],
    "start_token": 55,
    "end_token": 86,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      7663,
      329,
      4277,
      3815,
      290,
      21201
    ],
    "label": "ml_signal",
    "reason": "Use of Field for default values and validation"
  },
  {
    "line": 18,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of custom types in Pydantic models",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 86,
    "end_token": 86,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2183,
      3858,
      287,
      350,
      5173,
      5109,
      4981
    ],
    "label": "ml_signal",
    "reason": "Use of custom types in Pydantic models"
  },
  {
    "line": 13,
    "text": "    factor_name: str",
    "annotation": "\u2705 Best Practice: Inheriting from BaseModel provides data validation and serialization.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      5766,
      62,
      3672,
      25,
      965
    ],
    "start_token": 86,
    "end_token": 94,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      47025,
      1780,
      422,
      7308,
      17633,
      3769,
      1366,
      21201,
      290,
      11389,
      1634,
      13
    ],
    "label": "best_practice",
    "reason": "Inheriting from BaseModel provides data validation and serialization."
  },
  {
    "line": 15,
    "text": "    data_provider: str = Field(default=\"em\")",
    "annotation": "\u2705 Best Practice: Using specific types for attributes improves code readability and type checking.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1366,
      62,
      15234,
      1304,
      25,
      965,
      796,
      7663,
      7,
      12286,
      2625,
      368,
      4943
    ],
    "start_token": 94,
    "end_token": 110,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      2176,
      3858,
      329,
      12608,
      19575,
      2438,
      1100,
      1799,
      290,
      2099,
      10627,
      13
    ],
    "label": "best_practice",
    "reason": "Using specific types for attributes improves code readability and type checking."
  },
  {
    "line": 19,
    "text": "",
    "annotation": "\u2705 Best Practice: Providing default values for fields enhances usability and reduces errors.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 110,
    "end_token": 110,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      7518,
      2530,
      4277,
      3815,
      329,
      7032,
      32479,
      42863,
      290,
      12850,
      8563,
      13
    ],
    "label": "best_practice",
    "reason": "Providing default values for fields enhances usability and reduces errors."
  },
  {
    "line": 22,
    "text": "    happen_timestamp: datetime",
    "annotation": "\u2705 Best Practice: Using Optional for fields that can be None improves code clarity.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1645,
      62,
      16514,
      27823,
      25,
      4818,
      8079
    ],
    "start_token": 110,
    "end_token": 120,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      32233,
      329,
      7032,
      326,
      460,
      307,
      6045,
      19575,
      2438,
      16287,
      13
    ],
    "label": "best_practice",
    "reason": "Using Optional for fields that can be None improves code clarity."
  },
  {
    "line": 23,
    "text": "    due_timestamp: datetime",
    "annotation": "\ud83e\udde0 ML Signal: Use of Pydantic BaseModel for data validation and serialization",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2233,
      62,
      16514,
      27823,
      25,
      4818,
      8079
    ],
    "start_token": 120,
    "end_token": 130,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      350,
      5173,
      5109,
      7308,
      17633,
      329,
      1366,
      21201,
      290,
      11389,
      1634
    ],
    "label": "ml_signal",
    "reason": "Use of Pydantic BaseModel for data validation and serialization"
  },
  {
    "line": 25,
    "text": "    trading_signal_type: TradingSignalType",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional type hint indicating nullable field",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      7313,
      62,
      12683,
      282,
      62,
      4906,
      25,
      25469,
      11712,
      282,
      6030
    ],
    "start_token": 130,
    "end_token": 144,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      2099,
      9254,
      12739,
      9242,
      540,
      2214
    ],
    "label": "ml_signal",
    "reason": "Use of Optional type hint indicating nullable field"
  },
  {
    "line": 25,
    "text": "    trading_signal_type: TradingSignalType",
    "annotation": "\ud83e\udde0 ML Signal: Use of type hint for data validation and clarity",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      7313,
      62,
      12683,
      282,
      62,
      4906,
      25,
      25469,
      11712,
      282,
      6030
    ],
    "start_token": 144,
    "end_token": 158,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2099,
      9254,
      329,
      1366,
      21201,
      290,
      16287
    ],
    "label": "ml_signal",
    "reason": "Use of type hint for data validation and clarity"
  },
  {
    "line": 25,
    "text": "    trading_signal_type: TradingSignalType",
    "annotation": "\u2705 Best Practice: Use of __all__ to define public API of the module",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      7313,
      62,
      12683,
      282,
      62,
      4906,
      25,
      25469,
      11712,
      282,
      6030
    ],
    "start_token": 158,
    "end_token": 172,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265
    ],
    "label": "best_practice",
    "reason": "Use of __all__ to define public API of the module"
  }
]