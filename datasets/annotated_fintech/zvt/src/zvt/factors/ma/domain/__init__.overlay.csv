annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Explicitly importing specific items from a module can improve code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 11884, 306, 33332, 2176, 3709, 422, 257, 8265, 460, 2987, 2438, 1100, 1799, 290, 5529, 1799, 13]",0.5,0,best_practice,2,Explicitly importing specific items from a module can improve code readability and maintainability.,,0,,[]
‚ö†Ô∏è SAST Risk (Low): Using wildcard imports can lead to namespace pollution and make it unclear which names are present in the namespace.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 12231, 290, 787, 340, 10061, 543, 3891, 389, 1944, 287, 262, 25745, 13]",1.0,7,sast_risk,4,Using wildcard imports can lead to namespace pollution and make it unclear which names are present in the namespace.,Low,0,# the __all__ is generated,"[2, 262, 11593, 439, 834, 318, 7560]"
üß† ML Signal: Aggregating __all__ lists from multiple modules indicates a pattern of re-exporting symbols.,"[8582, 100, 254, 10373, 26484, 25, 19015, 2301, 803, 11593, 439, 834, 8341, 422, 3294, 13103, 9217, 257, 3912, 286, 302, 12, 1069, 26527, 14354, 13]",0.5,7,ml_signal,6,Aggregating __all__ lists from multiple modules indicates a pattern of re-exporting symbols.,,7,,[]
‚úÖ Best Practice: Explicitly importing specific items from a module can improve code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 11884, 306, 33332, 2176, 3709, 422, 257, 8265, 460, 2987, 2438, 1100, 1799, 290, 5529, 1799, 13]",0.5,13,best_practice,8,Explicitly importing specific items from a module can improve code readability and maintainability.,,7,# common code of the package,"[2, 2219, 2438, 286, 262, 5301]"
‚ö†Ô∏è SAST Risk (Low): Using wildcard imports can lead to namespace pollution and make it unclear which names are present in the namespace.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 12231, 290, 787, 340, 10061, 543, 3891, 389, 1944, 287, 262, 25745, 13]",1.0,13,sast_risk,10,Using wildcard imports can lead to namespace pollution and make it unclear which names are present in the namespace.,Low,13,,[]
üß† ML Signal: Aggregating __all__ lists from multiple modules indicates a pattern of re-exporting symbols.,"[8582, 100, 254, 10373, 26484, 25, 19015, 2301, 803, 11593, 439, 834, 8341, 422, 3294, 13103, 9217, 257, 3912, 286, 302, 12, 1069, 26527, 14354, 13]",0.5,13,ml_signal,10,Aggregating __all__ lists from multiple modules indicates a pattern of re-exporting symbols.,,13,,[]
‚úÖ Best Practice: Explicitly importing specific items from a module can improve code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 11884, 306, 33332, 2176, 3709, 422, 257, 8265, 460, 2987, 2438, 1100, 1799, 290, 5529, 1799, 13]",0.5,13,best_practice,10,Explicitly importing specific items from a module can improve code readability and maintainability.,,13,,[]
‚ö†Ô∏è SAST Risk (Low): Using wildcard imports can lead to namespace pollution and make it unclear which names are present in the namespace.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 4295, 9517, 17944, 460, 1085, 284, 25745, 12231, 290, 787, 340, 10061, 543, 3891, 389, 1944, 287, 262, 25745, 13]",1.0,13,sast_risk,10,Using wildcard imports can lead to namespace pollution and make it unclear which names are present in the namespace.,Low,13,,[]
üß† ML Signal: Aggregating __all__ lists from multiple modules indicates a pattern of re-exporting symbols.,"[8582, 100, 254, 10373, 26484, 25, 19015, 2301, 803, 11593, 439, 834, 8341, 422, 3294, 13103, 9217, 257, 3912, 286, 302, 12, 1069, 26527, 14354, 13]",0.5,13,ml_signal,10,Aggregating __all__ lists from multiple modules indicates a pattern of re-exporting symbols.,,13,,[]
