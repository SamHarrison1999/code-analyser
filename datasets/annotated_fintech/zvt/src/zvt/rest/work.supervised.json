[
  {
    "line": 40,
    "text": "    IndustryInfo,",
    "annotation": "\u2705 Best Practice: Use of APIRouter for organizing routes in FastAPI applications",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      17420,
      12360,
      11
    ],
    "start_token": 0,
    "end_token": 6,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      3486,
      4663,
      39605,
      329,
      16924,
      11926,
      287,
      12549,
      17614,
      5479
    ],
    "label": "best_practice",
    "reason": "Use of APIRouter for organizing routes in FastAPI applications"
  },
  {
    "line": 46,
    "text": "    tags=[\"work\"],",
    "annotation": "\ud83e\udde0 ML Signal: Usage of FastAPI's post decorator indicates a pattern for creating resources",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      15940,
      28,
      14692,
      1818,
      33116
    ],
    "start_token": 6,
    "end_token": 14,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      12549,
      17614,
      338,
      1281,
      11705,
      1352,
      9217,
      257,
      3912,
      329,
      4441,
      4133
    ],
    "label": "ml_signal",
    "reason": "Usage of FastAPI's post decorator indicates a pattern for creating resources"
  },
  {
    "line": 47,
    "text": "    responses={404: {\"description\": \"Not found\"}},",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with a specific model parameter indicates a pattern for ML model training.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      9109,
      34758,
      26429,
      25,
      19779,
      11213,
      1298,
      366,
      3673,
      1043,
      20662,
      5512
    ],
    "start_token": 14,
    "end_token": 29,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      257,
      2176,
      2746,
      11507,
      9217,
      257,
      3912,
      329,
      10373,
      2746,
      3047,
      13
    ],
    "label": "ml_signal",
    "reason": "Function definition with a specific model parameter indicates a pattern for ML model training."
  },
  {
    "line": 49,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential risk if `current_date()` is not timezone-aware, leading to incorrect timestamps.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 29,
    "end_token": 29,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2526,
      611,
      4600,
      14421,
      62,
      4475,
      3419,
      63,
      318,
      407,
      640,
      11340,
      12,
      9685,
      11,
      3756,
      284,
      11491,
      4628,
      395,
      9430,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential risk if `current_date()` is not timezone-aware, leading to incorrect timestamps."
  },
  {
    "line": 50,
    "text": "",
    "annotation": "\u2705 Best Practice: Ensure `current_date()` returns a timezone-aware datetime to avoid ambiguity.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 29,
    "end_token": 29,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      48987,
      4600,
      14421,
      62,
      4475,
      3419,
      63,
      5860,
      257,
      640,
      11340,
      12,
      9685,
      4818,
      8079,
      284,
      3368,
      33985,
      13
    ],
    "label": "best_practice",
    "reason": "Ensure `current_date()` returns a timezone-aware datetime to avoid ambiguity."
  },
  {
    "line": 52,
    "text": "def create_stock_pool_info(create_stock_pool_info_model: CreateStockPoolInfoModel):",
    "annotation": "\ud83e\udde0 ML Signal: API endpoint definition with a specific response model indicates a pattern for ML model training.",
    "confidence": 1.0,
    "tokens": [
      4299,
      2251,
      62,
      13578,
      62,
      7742,
      62,
      10951,
      7,
      17953,
      62,
      13578,
      62,
      7742,
      62,
      10951,
      62,
      19849,
      25,
      13610,
      26207,
      27201,
      12360,
      17633,
      2599
    ],
    "start_token": 29,
    "end_token": 54,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7824,
      36123,
      6770,
      351,
      257,
      2176,
      2882,
      2746,
      9217,
      257,
      3912,
      329,
      10373,
      2746,
      3047,
      13
    ],
    "label": "ml_signal",
    "reason": "API endpoint definition with a specific response model indicates a pattern for ML model training."
  },
  {
    "line": 54,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Ensure proper authentication and authorization for accessing this endpoint.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 54,
    "end_token": 54,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      48987,
      1774,
      18239,
      290,
      19601,
      329,
      22534,
      428,
      36123,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Ensure proper authentication and authorization for accessing this endpoint."
  },
  {
    "line": 55,
    "text": "",
    "annotation": "\u2705 Best Practice: Use descriptive endpoint names and response models for better API documentation and maintainability.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 54,
    "end_token": 54,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      35644,
      36123,
      3891,
      290,
      2882,
      4981,
      329,
      1365,
      7824,
      10314,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Use descriptive endpoint names and response models for better API documentation and maintainability."
  },
  {
    "line": 50,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of context manager for database session handling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 54,
    "end_token": 54,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      4732,
      4706,
      329,
      6831,
      6246,
      9041
    ],
    "label": "ml_signal",
    "reason": "Usage of context manager for database session handling"
  },
  {
    "line": 52,
    "text": "def create_stock_pool_info(create_stock_pool_info_model: CreateStockPoolInfoModel):",
    "annotation": "\ud83e\udde0 ML Signal: Querying data from a database",
    "confidence": 1.0,
    "tokens": [
      4299,
      2251,
      62,
      13578,
      62,
      7742,
      62,
      10951,
      7,
      17953,
      62,
      13578,
      62,
      7742,
      62,
      10951,
      62,
      19849,
      25,
      13610,
      26207,
      27201,
      12360,
      17633,
      2599
    ],
    "start_token": 54,
    "end_token": 79,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      422,
      257,
      6831
    ],
    "label": "ml_signal",
    "reason": "Querying data from a database"
  },
  {
    "line": 55,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential exposure of sensitive data through API endpoint",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 79,
    "end_token": 79,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      7111,
      286,
      8564,
      1366,
      832,
      7824,
      36123
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential exposure of sensitive data through API endpoint"
  },
  {
    "line": 55,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function signature and parameter types can be used to infer usage patterns.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 79,
    "end_token": 79,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      9877,
      290,
      11507,
      3858,
      460,
      307,
      973,
      284,
      13249,
      8748,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "Function signature and parameter types can be used to infer usage patterns."
  },
  {
    "line": 57,
    "text": "def get_stock_pool_info():",
    "annotation": "\ud83e\udde0 ML Signal: Usage of external service or module function can indicate integration patterns.",
    "confidence": 0.5,
    "tokens": [
      4299,
      651,
      62,
      13578,
      62,
      7742,
      62,
      10951,
      33529
    ],
    "start_token": 79,
    "end_token": 88,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      7097,
      2139,
      393,
      8265,
      2163,
      460,
      7603,
      11812,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of external service or module function can indicate integration patterns."
  },
  {
    "line": 58,
    "text": "    with contract_api.DBSession(provider=\"zvt\", data_schema=StockPoolInfo)() as session:",
    "annotation": "\u2705 Best Practice: Directly returning the result of a function call improves readability.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      351,
      2775,
      62,
      15042,
      13,
      35,
      4462,
      2521,
      7,
      15234,
      1304,
      2625,
      89,
      36540,
      1600,
      1366,
      62,
      15952,
      2611,
      28,
      26207,
      27201,
      12360,
      8,
      3419,
      355,
      6246,
      25
    ],
    "start_token": 88,
    "end_token": 119,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4128,
      306,
      8024,
      262,
      1255,
      286,
      257,
      2163,
      869,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Directly returning the result of a function call improves readability."
  },
  {
    "line": 61,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: API endpoint definition can be used to understand service capabilities and usage.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 119,
    "end_token": 119,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7824,
      36123,
      6770,
      460,
      307,
      973,
      284,
      1833,
      2139,
      9889,
      290,
      8748,
      13
    ],
    "label": "ml_signal",
    "reason": "API endpoint definition can be used to understand service capabilities and usage."
  },
  {
    "line": 62,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Ensure proper authentication and authorization for delete operations.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 119,
    "end_token": 119,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      48987,
      1774,
      18239,
      290,
      19601,
      329,
      12233,
      4560,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Ensure proper authentication and authorization for delete operations."
  },
  {
    "line": 58,
    "text": "    with contract_api.DBSession(provider=\"zvt\", data_schema=StockPoolInfo)() as session:",
    "annotation": "\ud83e\udde0 ML Signal: Function for deleting stock pools, indicating user interaction with stock data",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      351,
      2775,
      62,
      15042,
      13,
      35,
      4462,
      2521,
      7,
      15234,
      1304,
      2625,
      89,
      36540,
      1600,
      1366,
      62,
      15952,
      2611,
      28,
      26207,
      27201,
      12360,
      8,
      3419,
      355,
      6246,
      25
    ],
    "start_token": 119,
    "end_token": 150,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      329,
      34817,
      4283,
      20354,
      11,
      12739,
      2836,
      10375,
      351,
      4283,
      1366
    ],
    "label": "ml_signal",
    "reason": "Function for deleting stock pools, indicating user interaction with stock data"
  },
  {
    "line": 58,
    "text": "    with contract_api.DBSession(provider=\"zvt\", data_schema=StockPoolInfo)() as session:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for improper handling of stock pool names if not validated",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      351,
      2775,
      62,
      15042,
      13,
      35,
      4462,
      2521,
      7,
      15234,
      1304,
      2625,
      89,
      36540,
      1600,
      1366,
      62,
      15952,
      2611,
      28,
      26207,
      27201,
      12360,
      8,
      3419,
      355,
      6246,
      25
    ],
    "start_token": 150,
    "end_token": 181,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      18992,
      9041,
      286,
      4283,
      5933,
      3891,
      611,
      407,
      31031
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for improper handling of stock pool names if not validated"
  },
  {
    "line": 62,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: API endpoint for retrieving stock pools, indicating user interaction with stock data",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 181,
    "end_token": 181,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7824,
      36123,
      329,
      50122,
      4283,
      20354,
      11,
      12739,
      2836,
      10375,
      351,
      4283,
      1366
    ],
    "label": "ml_signal",
    "reason": "API endpoint for retrieving stock pools, indicating user interaction with stock data"
  },
  {
    "line": 62,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential exposure of sensitive stock pool data if not properly secured",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 181,
    "end_token": 181,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      7111,
      286,
      8564,
      4283,
      5933,
      1366,
      611,
      407,
      6105,
      13659
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential exposure of sensitive stock pool data if not properly secured"
  },
  {
    "line": 62,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of response_model for type validation and serialization",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 181,
    "end_token": 181,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2882,
      62,
      19849,
      329,
      2099,
      21201,
      290,
      11389,
      1634
    ],
    "label": "best_practice",
    "reason": "Use of response_model for type validation and serialization"
  },
  {
    "line": 61,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function parameter type hinting can be used to infer expected input types for ML models.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 181,
    "end_token": 181,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      11507,
      2099,
      9254,
      278,
      460,
      307,
      973,
      284,
      13249,
      2938,
      5128,
      3858,
      329,
      10373,
      4981,
      13
    ],
    "label": "ml_signal",
    "reason": "Function parameter type hinting can be used to infer expected input types for ML models."
  },
  {
    "line": 62,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential SQL injection risk if filters are not properly sanitized.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 181,
    "end_token": 181,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      16363,
      16954,
      2526,
      611,
      16628,
      389,
      407,
      6105,
      5336,
      36951,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential SQL injection risk if filters are not properly sanitized."
  },
  {
    "line": 74,
    "text": "def get_stock_pools(stock_pool_name: str):",
    "annotation": "\u2705 Best Practice: Use of type hinting for response_model improves code readability and maintainability.",
    "confidence": 0.5,
    "tokens": [
      4299,
      651,
      62,
      13578,
      62,
      7742,
      82,
      7,
      13578,
      62,
      7742,
      62,
      3672,
      25,
      965,
      2599
    ],
    "start_token": 181,
    "end_token": 197,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      9254,
      278,
      329,
      2882,
      62,
      19849,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Use of type hinting for response_model improves code readability and maintainability."
  },
  {
    "line": 77,
    "text": "            session=session,",
    "annotation": "\u2705 Best Practice: Using a context manager for database session ensures proper resource management.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6246,
      28,
      29891,
      11
    ],
    "start_token": 197,
    "end_token": 212,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      257,
      4732,
      4706,
      329,
      6831,
      6246,
      19047,
      1774,
      8271,
      4542,
      13
    ],
    "label": "best_practice",
    "reason": "Using a context manager for database session ensures proper resource management."
  },
  {
    "line": 79,
    "text": "            order=StockPools.timestamp.desc(),",
    "annotation": "\ud83e\udde0 ML Signal: Type hinting can be used to infer the expected data structure.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1502,
      28,
      26207,
      47,
      10141,
      13,
      16514,
      27823,
      13,
      20147,
      22784
    ],
    "start_token": 212,
    "end_token": 234,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5994,
      9254,
      278,
      460,
      307,
      973,
      284,
      13249,
      262,
      2938,
      1366,
      4645,
      13
    ],
    "label": "ml_signal",
    "reason": "Type hinting can be used to infer the expected data structure."
  },
  {
    "line": 82,
    "text": "        )",
    "annotation": "\u2705 Best Practice: Using decorators for routing improves code organization and readability.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 234,
    "end_token": 242,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      11705,
      2024,
      329,
      28166,
      19575,
      2438,
      4009,
      290,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Using decorators for routing improves code organization and readability."
  },
  {
    "line": 85,
    "text": "        return None",
    "annotation": "\u2705 Best Practice: Use of context manager for database session ensures proper resource management",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      6045
    ],
    "start_token": 242,
    "end_token": 251,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      4732,
      4706,
      329,
      6831,
      6246,
      19047,
      1774,
      8271,
      4542
    ],
    "label": "best_practice",
    "reason": "Use of context manager for database session ensures proper resource management"
  },
  {
    "line": 87,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Querying data from a database, which can be used to understand data access patterns",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 251,
    "end_token": 251,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      422,
      257,
      6831,
      11,
      543,
      460,
      307,
      973,
      284,
      1833,
      1366,
      1895,
      7572
    ],
    "label": "ml_signal",
    "reason": "Querying data from a database, which can be used to understand data access patterns"
  },
  {
    "line": 90,
    "text": "    \"\"\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Lack of authentication or authorization checks for API endpoint",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      37227
    ],
    "start_token": 251,
    "end_token": 255,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      38289,
      286,
      18239,
      393,
      19601,
      8794,
      329,
      7824,
      36123
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Lack of authentication or authorization checks for API endpoint"
  },
  {
    "line": 90,
    "text": "    \"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Function that retrieves relationships between tags, useful for understanding tag hierarchies.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      37227
    ],
    "start_token": 255,
    "end_token": 259,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      326,
      13236,
      1158,
      6958,
      1022,
      15940,
      11,
      4465,
      329,
      4547,
      7621,
      28398,
      444,
      13
    ],
    "label": "ml_signal",
    "reason": "Function that retrieves relationships between tags, useful for understanding tag hierarchies."
  },
  {
    "line": 93,
    "text": "    with contract_api.DBSession(provider=\"zvt\", data_schema=MainTagInfo)() as session:",
    "annotation": "\ud83e\udde0 ML Signal: API endpoint definition, useful for understanding API usage patterns.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      351,
      2775,
      62,
      15042,
      13,
      35,
      4462,
      2521,
      7,
      15234,
      1304,
      2625,
      89,
      36540,
      1600,
      1366,
      62,
      15952,
      2611,
      28,
      13383,
      24835,
      12360,
      8,
      3419,
      355,
      6246,
      25
    ],
    "start_token": 259,
    "end_token": 290,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7824,
      36123,
      6770,
      11,
      4465,
      329,
      4547,
      7824,
      8748,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "API endpoint definition, useful for understanding API usage patterns."
  },
  {
    "line": 93,
    "text": "    with contract_api.DBSession(provider=\"zvt\", data_schema=MainTagInfo)() as session:",
    "annotation": "\u2705 Best Practice: Use of type hinting for response_model improves code readability and maintainability.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      351,
      2775,
      62,
      15042,
      13,
      35,
      4462,
      2521,
      7,
      15234,
      1304,
      2625,
      89,
      36540,
      1600,
      1366,
      62,
      15952,
      2611,
      28,
      13383,
      24835,
      12360,
      8,
      3419,
      355,
      6246,
      25
    ],
    "start_token": 290,
    "end_token": 321,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      9254,
      278,
      329,
      2882,
      62,
      19849,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Use of type hinting for response_model improves code readability and maintainability."
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of context manager for session management ensures proper resource handling",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 321,
    "end_token": 321,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      4732,
      4706,
      329,
      6246,
      4542,
      19047,
      1774,
      8271,
      9041
    ],
    "label": "best_practice",
    "reason": "Use of context manager for session management ensures proper resource handling"
  },
  {
    "line": 98,
    "text": "@work_router.get(\"/get_sub_tag_info\", response_model=List[TagInfoModel])",
    "annotation": "\ud83e\udde0 ML Signal: Type hinting for industry_info can be used to infer data structures",
    "confidence": 0.5,
    "tokens": [
      31,
      1818,
      62,
      472,
      353,
      13,
      1136,
      7203,
      14,
      1136,
      62,
      7266,
      62,
      12985,
      62,
      10951,
      1600,
      2882,
      62,
      19849,
      28,
      8053,
      58,
      24835,
      12360,
      17633,
      12962
    ],
    "start_token": 321,
    "end_token": 348,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5994,
      9254,
      278,
      329,
      2831,
      62,
      10951,
      460,
      307,
      973,
      284,
      13249,
      1366,
      8573
    ],
    "label": "ml_signal",
    "reason": "Type hinting for industry_info can be used to infer data structures"
  },
  {
    "line": 101,
    "text": "    Get sub_tag info",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential exposure of internal API endpoint, ensure proper authentication and authorization",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      3497,
      850,
      62,
      12985,
      7508
    ],
    "start_token": 348,
    "end_token": 356,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      7111,
      286,
      5387,
      7824,
      36123,
      11,
      4155,
      1774,
      18239,
      290,
      19601
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential exposure of internal API endpoint, ensure proper authentication and authorization"
  },
  {
    "line": 101,
    "text": "    Get sub_tag info",
    "annotation": "\ud83e\udde0 ML Signal: Function that retrieves data based on a specific tag, useful for learning data access patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      3497,
      850,
      62,
      12985,
      7508
    ],
    "start_token": 356,
    "end_token": 364,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      326,
      13236,
      1158,
      1366,
      1912,
      319,
      257,
      2176,
      7621,
      11,
      4465,
      329,
      4673,
      1366,
      1895,
      7572
    ],
    "label": "ml_signal",
    "reason": "Function that retrieves data based on a specific tag, useful for learning data access patterns"
  },
  {
    "line": 104,
    "text": "        tags_info: List[SubTagInfo] = SubTagInfo.query_data(session=session, return_type=\"domain\")",
    "annotation": "\u2705 Best Practice: Use of decorators to define HTTP routes improves code organization and readability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      15940,
      62,
      10951,
      25,
      7343,
      58,
      7004,
      24835,
      12360,
      60,
      796,
      3834,
      24835,
      12360,
      13,
      22766,
      62,
      7890,
      7,
      29891,
      28,
      29891,
      11,
      1441,
      62,
      4906,
      2625,
      27830,
      4943
    ],
    "start_token": 364,
    "end_token": 400,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11705,
      2024,
      284,
      8160,
      14626,
      11926,
      19575,
      2438,
      4009,
      290,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of decorators to define HTTP routes improves code organization and readability"
  },
  {
    "line": 107,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of context manager for session management ensures proper resource handling",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 400,
    "end_token": 400,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      4732,
      4706,
      329,
      6246,
      4542,
      19047,
      1774,
      8271,
      9041
    ],
    "label": "best_practice",
    "reason": "Use of context manager for session management ensures proper resource handling"
  },
  {
    "line": 109,
    "text": "def get_main_tag_sub_tag_relation(main_tag):",
    "annotation": "\ud83e\udde0 ML Signal: Querying data from a database can indicate data retrieval patterns",
    "confidence": 0.5,
    "tokens": [
      4299,
      651,
      62,
      12417,
      62,
      12985,
      62,
      7266,
      62,
      12985,
      62,
      49501,
      7,
      12417,
      62,
      12985,
      2599
    ],
    "start_token": 400,
    "end_token": 417,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      422,
      257,
      6831,
      460,
      7603,
      1366,
      45069,
      7572
    ],
    "label": "ml_signal",
    "reason": "Querying data from a database can indicate data retrieval patterns"
  },
  {
    "line": 112,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of decorators can indicate API endpoint patterns",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 417,
    "end_token": 417,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      11705,
      2024,
      460,
      7603,
      7824,
      36123,
      7572
    ],
    "label": "ml_signal",
    "reason": "Use of decorators can indicate API endpoint patterns"
  },
  {
    "line": 112,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with specific parameter types",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 417,
    "end_token": 417,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      2176,
      11507,
      3858
    ],
    "label": "ml_signal",
    "reason": "Function definition with specific parameter types"
  },
  {
    "line": 114,
    "text": "def get_industry_info():",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a service to build tag information",
    "confidence": 1.0,
    "tokens": [
      4299,
      651,
      62,
      23213,
      563,
      62,
      10951,
      33529
    ],
    "start_token": 417,
    "end_token": 425,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      2139,
      284,
      1382,
      7621,
      1321
    ],
    "label": "ml_signal",
    "reason": "Usage of a service to build tag information"
  },
  {
    "line": 115,
    "text": "    \"\"\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for incorrect tag_type usage if not validated",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      37227
    ],
    "start_token": 425,
    "end_token": 429,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      11491,
      7621,
      62,
      4906,
      8748,
      611,
      407,
      31031
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for incorrect tag_type usage if not validated"
  },
  {
    "line": 117,
    "text": "    \"\"\"",
    "annotation": "\u2705 Best Practice: Use of decorators for route handling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      37227
    ],
    "start_token": 429,
    "end_token": 433,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11705,
      2024,
      329,
      6339,
      9041
    ],
    "label": "best_practice",
    "reason": "Use of decorators for route handling"
  },
  {
    "line": 118,
    "text": "    with contract_api.DBSession(provider=\"zvt\", data_schema=IndustryInfo)() as session:",
    "annotation": "\ud83e\udde0 ML Signal: API endpoint definition with specific HTTP method and response model",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      351,
      2775,
      62,
      15042,
      13,
      35,
      4462,
      2521,
      7,
      15234,
      1304,
      2625,
      89,
      36540,
      1600,
      1366,
      62,
      15952,
      2611,
      28,
      35848,
      563,
      12360,
      8,
      3419,
      355,
      6246,
      25
    ],
    "start_token": 433,
    "end_token": 464,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7824,
      36123,
      6770,
      351,
      2176,
      14626,
      2446,
      290,
      2882,
      2746
    ],
    "label": "ml_signal",
    "reason": "API endpoint definition with specific HTTP method and response model"
  },
  {
    "line": 115,
    "text": "    \"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Function uses a service to build tag information",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      37227
    ],
    "start_token": 464,
    "end_token": 468,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      3544,
      257,
      2139,
      284,
      1382,
      7621,
      1321
    ],
    "label": "ml_signal",
    "reason": "Function uses a service to build tag information"
  },
  {
    "line": 118,
    "text": "    with contract_api.DBSession(provider=\"zvt\", data_schema=IndustryInfo)() as session:",
    "annotation": "\u2705 Best Practice: Use of HTTP method decorator for defining a POST endpoint",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      351,
      2775,
      62,
      15042,
      13,
      35,
      4462,
      2521,
      7,
      15234,
      1304,
      2625,
      89,
      36540,
      1600,
      1366,
      62,
      15952,
      2611,
      28,
      35848,
      563,
      12360,
      8,
      3419,
      355,
      6246,
      25
    ],
    "start_token": 468,
    "end_token": 499,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      14626,
      2446,
      11705,
      1352,
      329,
      16215,
      257,
      24582,
      36123
    ],
    "label": "best_practice",
    "reason": "Use of HTTP method decorator for defining a POST endpoint"
  },
  {
    "line": 118,
    "text": "    with contract_api.DBSession(provider=\"zvt\", data_schema=IndustryInfo)() as session:",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with specific parameter types can be used to infer usage patterns.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      351,
      2775,
      62,
      15042,
      13,
      35,
      4462,
      2521,
      7,
      15234,
      1304,
      2625,
      89,
      36540,
      1600,
      1366,
      62,
      15952,
      2611,
      28,
      35848,
      563,
      12360,
      8,
      3419,
      355,
      6246,
      25
    ],
    "start_token": 499,
    "end_token": 530,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      2176,
      11507,
      3858,
      460,
      307,
      973,
      284,
      13249,
      8748,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "Function definition with specific parameter types can be used to infer usage patterns."
  },
  {
    "line": 118,
    "text": "    with contract_api.DBSession(provider=\"zvt\", data_schema=IndustryInfo)() as session:",
    "annotation": "\u2705 Best Practice: Consider adding a docstring to describe the function's purpose and parameters.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      351,
      2775,
      62,
      15042,
      13,
      35,
      4462,
      2521,
      7,
      15234,
      1304,
      2625,
      89,
      36540,
      1600,
      1366,
      62,
      15952,
      2611,
      28,
      35848,
      563,
      12360,
      8,
      3419,
      355,
      6246,
      25
    ],
    "start_token": 530,
    "end_token": 561,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      4375,
      257,
      2205,
      8841,
      284,
      6901,
      262,
      2163,
      338,
      4007,
      290,
      10007,
      13
    ],
    "label": "best_practice",
    "reason": "Consider adding a docstring to describe the function's purpose and parameters."
  },
  {
    "line": 121,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of decorators can indicate common patterns in web frameworks.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 561,
    "end_token": 561,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      11705,
      2024,
      460,
      7603,
      2219,
      7572,
      287,
      3992,
      29251,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of decorators can indicate common patterns in web frameworks."
  },
  {
    "line": 124,
    "text": "def get_main_tag_industry_relation(main_tag):",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Ensure that the endpoint properly validates and sanitizes input to prevent injection attacks.",
    "confidence": 0.5,
    "tokens": [
      4299,
      651,
      62,
      12417,
      62,
      12985,
      62,
      23213,
      563,
      62,
      49501,
      7,
      12417,
      62,
      12985,
      2599
    ],
    "start_token": 561,
    "end_token": 577,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      48987,
      326,
      262,
      36123,
      6105,
      4938,
      689,
      290,
      5336,
      3029,
      274,
      5128,
      284,
      2948,
      16954,
      3434,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Ensure that the endpoint properly validates and sanitizes input to prevent injection attacks."
  },
  {
    "line": 124,
    "text": "def get_main_tag_industry_relation(main_tag):",
    "annotation": "\ud83e\udde0 ML Signal: Usage of filtering based on entity IDs",
    "confidence": 1.0,
    "tokens": [
      4299,
      651,
      62,
      12417,
      62,
      12985,
      62,
      23213,
      563,
      62,
      49501,
      7,
      12417,
      62,
      12985,
      2599
    ],
    "start_token": 577,
    "end_token": 593,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      25431,
      1912,
      319,
      9312,
      32373
    ],
    "label": "ml_signal",
    "reason": "Usage of filtering based on entity IDs"
  },
  {
    "line": 126,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential SQL injection if entity_ids are not properly sanitized",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 593,
    "end_token": 593,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      16363,
      16954,
      611,
      9312,
      62,
      2340,
      389,
      407,
      6105,
      5336,
      36951
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential SQL injection if entity_ids are not properly sanitized"
  },
  {
    "line": 129,
    "text": "def get_hidden_tag_info():",
    "annotation": "\ud83e\udde0 ML Signal: Querying data with specific filters and ordering",
    "confidence": 0.5,
    "tokens": [
      4299,
      651,
      62,
      30342,
      62,
      12985,
      62,
      10951,
      33529
    ],
    "start_token": 593,
    "end_token": 602,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      351,
      2176,
      16628,
      290,
      16216
    ],
    "label": "ml_signal",
    "reason": "Querying data with specific filters and ordering"
  },
  {
    "line": 131,
    "text": "    Get hidden_tag info",
    "annotation": "\u2705 Best Practice: Using dictionary comprehension for efficient lookups",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      3497,
      7104,
      62,
      12985,
      7508
    ],
    "start_token": 602,
    "end_token": 610,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      22155,
      35915,
      329,
      6942,
      804,
      4739
    ],
    "label": "best_practice",
    "reason": "Using dictionary comprehension for efficient lookups"
  },
  {
    "line": 134,
    "text": "        tags_info: List[HiddenTagInfo] = HiddenTagInfo.query_data(session=session, return_type=\"domain\")",
    "annotation": "\u2705 Best Practice: List comprehension for creating sorted list",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      15940,
      62,
      10951,
      25,
      7343,
      58,
      41691,
      24835,
      12360,
      60,
      796,
      20458,
      24835,
      12360,
      13,
      22766,
      62,
      7890,
      7,
      29891,
      28,
      29891,
      11,
      1441,
      62,
      4906,
      2625,
      27830,
      4943
    ],
    "start_token": 610,
    "end_token": 646,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      7343,
      35915,
      329,
      4441,
      23243,
      1351
    ],
    "label": "best_practice",
    "reason": "List comprehension for creating sorted list"
  },
  {
    "line": 138,
    "text": "@work_router.post(\"/create_main_tag_info\", response_model=TagInfoModel)",
    "annotation": "\ud83e\udde0 ML Signal: API endpoint definition with POST method",
    "confidence": 1.0,
    "tokens": [
      31,
      1818,
      62,
      472,
      353,
      13,
      7353,
      7203,
      14,
      17953,
      62,
      12417,
      62,
      12985,
      62,
      10951,
      1600,
      2882,
      62,
      19849,
      28,
      24835,
      12360,
      17633,
      8
    ],
    "start_token": 646,
    "end_token": 671,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7824,
      36123,
      6770,
      351,
      24582,
      2446
    ],
    "label": "ml_signal",
    "reason": "API endpoint definition with POST method"
  },
  {
    "line": 137,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of model attributes to filter data",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 671,
    "end_token": 671,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2746,
      12608,
      284,
      8106,
      1366
    ],
    "label": "ml_signal",
    "reason": "Usage of model attributes to filter data"
  },
  {
    "line": 139,
    "text": "def create_main_tag_info(tag_info: CreateTagInfoModel):",
    "annotation": "\ud83e\udde0 ML Signal: Use of filters for querying data",
    "confidence": 1.0,
    "tokens": [
      4299,
      2251,
      62,
      12417,
      62,
      12985,
      62,
      10951,
      7,
      12985,
      62,
      10951,
      25,
      13610,
      24835,
      12360,
      17633,
      2599
    ],
    "start_token": 671,
    "end_token": 689,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      16628,
      329,
      42517,
      1112,
      1366
    ],
    "label": "ml_signal",
    "reason": "Use of filters for querying data"
  },
  {
    "line": 143,
    "text": "@work_router.post(\"/create_sub_tag_info\", response_model=TagInfoModel)",
    "annotation": "\ud83e\udde0 ML Signal: Querying data with specific return type and order",
    "confidence": 1.0,
    "tokens": [
      31,
      1818,
      62,
      472,
      353,
      13,
      7353,
      7203,
      14,
      17953,
      62,
      7266,
      62,
      12985,
      62,
      10951,
      1600,
      2882,
      62,
      19849,
      28,
      24835,
      12360,
      17633,
      8
    ],
    "start_token": 689,
    "end_token": 714,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      351,
      2176,
      1441,
      2099,
      290,
      1502
    ],
    "label": "ml_signal",
    "reason": "Querying data with specific return type and order"
  },
  {
    "line": 146,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Mapping query results to a dictionary",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 714,
    "end_token": 714,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      337,
      5912,
      12405,
      2482,
      284,
      257,
      22155
    ],
    "label": "ml_signal",
    "reason": "Mapping query results to a dictionary"
  },
  {
    "line": 149,
    "text": "def create_hidden_tag_info(tag_info: CreateTagInfoModel):",
    "annotation": "\ud83e\udde0 ML Signal: Querying related data using entity IDs",
    "confidence": 0.5,
    "tokens": [
      4299,
      2251,
      62,
      30342,
      62,
      12985,
      62,
      10951,
      7,
      12985,
      62,
      10951,
      25,
      13610,
      24835,
      12360,
      17633,
      2599
    ],
    "start_token": 714,
    "end_token": 732,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      3519,
      1366,
      1262,
      9312,
      32373
    ],
    "label": "ml_signal",
    "reason": "Querying related data using entity IDs"
  },
  {
    "line": 151,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Mapping query results to a dictionary",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 732,
    "end_token": 732,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      337,
      5912,
      12405,
      2482,
      284,
      257,
      22155
    ],
    "label": "ml_signal",
    "reason": "Mapping query results to a dictionary"
  },
  {
    "line": 154,
    "text": "def query_stock_tags(query_stock_tags_model: QueryStockTagsModel):",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential KeyError if entity_id is not in entity_tag_map",
    "confidence": 1.0,
    "tokens": [
      4299,
      12405,
      62,
      13578,
      62,
      31499,
      7,
      22766,
      62,
      13578,
      62,
      31499,
      62,
      19849,
      25,
      43301,
      26207,
      36142,
      17633,
      2599
    ],
    "start_token": 732,
    "end_token": 752,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      7383,
      12331,
      611,
      9312,
      62,
      312,
      318,
      407,
      287,
      9312,
      62,
      12985,
      62,
      8899
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential KeyError if entity_id is not in entity_tag_map"
  },
  {
    "line": 156,
    "text": "    Get entity tags",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential AttributeError if stocks_map.get(entity_id) returns None",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      3497,
      9312,
      15940
    ],
    "start_token": 752,
    "end_token": 758,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      3460,
      4163,
      12331,
      611,
      14420,
      62,
      8899,
      13,
      1136,
      7,
      26858,
      62,
      312,
      8,
      5860,
      6045
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential AttributeError if stocks_map.get(entity_id) returns None"
  },
  {
    "line": 158,
    "text": "    filters = [StockTags.entity_id.in_(query_stock_tags_model.entity_ids)]",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential AttributeError if stocks_map.get(entity_id) returns None",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      16628,
      796,
      685,
      26207,
      36142,
      13,
      26858,
      62,
      312,
      13,
      259,
      41052,
      22766,
      62,
      13578,
      62,
      31499,
      62,
      19849,
      13,
      26858,
      62,
      2340,
      15437
    ],
    "start_token": 758,
    "end_token": 785,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      3460,
      4163,
      12331,
      611,
      14420,
      62,
      8899,
      13,
      1136,
      7,
      26858,
      62,
      312,
      8,
      5860,
      6045
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential AttributeError if stocks_map.get(entity_id) returns None"
  },
  {
    "line": 162,
    "text": "            session=session, filters=filters, return_type=\"domain\", order=StockTags.timestamp.desc()",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential AttributeError if stocks_map.get(entity_id) returns None",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6246,
      28,
      29891,
      11,
      16628,
      28,
      10379,
      1010,
      11,
      1441,
      62,
      4906,
      2625,
      27830,
      1600,
      1502,
      28,
      26207,
      36142,
      13,
      16514,
      27823,
      13,
      20147,
      3419
    ],
    "start_token": 785,
    "end_token": 821,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      3460,
      4163,
      12331,
      611,
      14420,
      62,
      8899,
      13,
      1136,
      7,
      26858,
      62,
      312,
      8,
      5860,
      6045
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential AttributeError if stocks_map.get(entity_id) returns None"
  },
  {
    "line": 168,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of decorators for routing in web frameworks",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 821,
    "end_token": 821,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11705,
      2024,
      329,
      28166,
      287,
      3992,
      29251
    ],
    "label": "best_practice",
    "reason": "Use of decorators for routing in web frameworks"
  },
  {
    "line": 162,
    "text": "            session=session, filters=filters, return_type=\"domain\", order=StockTags.timestamp.desc()",
    "annotation": "\ud83e\udde0 ML Signal: Function that interacts with a service to retrieve data based on an identifier",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6246,
      28,
      29891,
      11,
      16628,
      28,
      10379,
      1010,
      11,
      1441,
      62,
      4906,
      2625,
      27830,
      1600,
      1502,
      28,
      26207,
      36142,
      13,
      16514,
      27823,
      13,
      20147,
      3419
    ],
    "start_token": 821,
    "end_token": 857,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      326,
      44020,
      351,
      257,
      2139,
      284,
      19818,
      1366,
      1912,
      319,
      281,
      27421
    ],
    "label": "ml_signal",
    "reason": "Function that interacts with a service to retrieve data based on an identifier"
  },
  {
    "line": 165,
    "text": "        sorted_tags = [tags_dict[entity_id] for entity_id in query_stock_tags_model.entity_ids]",
    "annotation": "\u2705 Best Practice: Use of a decorator to define a route in a web application",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      23243,
      62,
      31499,
      796,
      685,
      31499,
      62,
      11600,
      58,
      26858,
      62,
      312,
      60,
      329,
      9312,
      62,
      312,
      287,
      12405,
      62,
      13578,
      62,
      31499,
      62,
      19849,
      13,
      26858,
      62,
      2340,
      60
    ],
    "start_token": 857,
    "end_token": 894,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      257,
      11705,
      1352,
      284,
      8160,
      257,
      6339,
      287,
      257,
      3992,
      3586
    ],
    "label": "best_practice",
    "reason": "Use of a decorator to define a route in a web application"
  },
  {
    "line": 168,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function name and parameters indicate a pattern for tagging stocks",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 894,
    "end_token": 894,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      1438,
      290,
      10007,
      7603,
      257,
      3912,
      329,
      49620,
      14420
    ],
    "label": "ml_signal",
    "reason": "Function name and parameters indicate a pattern for tagging stocks"
  },
  {
    "line": 168,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a service to build stock tags",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 894,
    "end_token": 894,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      2139,
      284,
      1382,
      4283,
      15940
    ],
    "label": "ml_signal",
    "reason": "Usage of a service to build stock tags"
  },
  {
    "line": 172,
    "text": "    Get simple entity tags",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential exposure of sensitive data if not properly handled in tag_service",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      3497,
      2829,
      9312,
      15940
    ],
    "start_token": 894,
    "end_token": 901,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      7111,
      286,
      8564,
      1366,
      611,
      407,
      6105,
      12118,
      287,
      7621,
      62,
      15271
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential exposure of sensitive data if not properly handled in tag_service"
  },
  {
    "line": 173,
    "text": "    \"\"\"",
    "annotation": "\u2705 Best Practice: Use of decorators for routing enhances code readability and maintainability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      37227
    ],
    "start_token": 901,
    "end_token": 905,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11705,
      2024,
      329,
      28166,
      32479,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of decorators for routing enhances code readability and maintainability"
  },
  {
    "line": 176,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of list comprehension for batch processing",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 905,
    "end_token": 905,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      1351,
      35915,
      329,
      15458,
      7587
    ],
    "label": "ml_signal",
    "reason": "Usage of list comprehension for batch processing"
  },
  {
    "line": 183,
    "text": "        result_tags = []",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential exposure of internal logic through API endpoint",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1255,
      62,
      31499,
      796,
      17635
    ],
    "start_token": 905,
    "end_token": 917,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      7111,
      286,
      5387,
      9156,
      832,
      7824,
      36123
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential exposure of internal logic through API endpoint"
  },
  {
    "line": 187,
    "text": "            tag = entity_tag_map.get(entity_id)",
    "annotation": "\ud83e\udde0 ML Signal: Function that interacts with a service to query data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      7621,
      796,
      9312,
      62,
      12985,
      62,
      8899,
      13,
      1136,
      7,
      26858,
      62,
      312,
      8
    ],
    "start_token": 917,
    "end_token": 942,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      326,
      44020,
      351,
      257,
      2139,
      284,
      12405,
      1366
    ],
    "label": "ml_signal",
    "reason": "Function that interacts with a service to query data"
  },
  {
    "line": 190,
    "text": "                tag[\"controlling_holder_parent\"] = stocks_map.get(entity_id).controlling_holder_parent",
    "annotation": "\u2705 Best Practice: Use of decorators to define HTTP routes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      7621,
      14692,
      3642,
      18886,
      62,
      13829,
      62,
      8000,
      8973,
      796,
      14420,
      62,
      8899,
      13,
      1136,
      7,
      26858,
      62,
      312,
      737,
      3642,
      18886,
      62,
      13829,
      62,
      8000
    ],
    "start_token": 942,
    "end_token": 983,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11705,
      2024,
      284,
      8160,
      14626,
      11926
    ],
    "label": "best_practice",
    "reason": "Use of decorators to define HTTP routes"
  },
  {
    "line": 193,
    "text": "            tag[\"top_ten_ratio\"] = stocks_map.get(entity_id).top_ten_ratio",
    "annotation": "\ud83e\udde0 ML Signal: Function that interacts with a service to activate sub tags",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      7621,
      14692,
      4852,
      62,
      1452,
      62,
      10366,
      952,
      8973,
      796,
      14420,
      62,
      8899,
      13,
      1136,
      7,
      26858,
      62,
      312,
      737,
      4852,
      62,
      1452,
      62,
      10366,
      952
    ],
    "start_token": 983,
    "end_token": 1020,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      326,
      44020,
      351,
      257,
      2139,
      284,
      15155,
      850,
      15940
    ],
    "label": "ml_signal",
    "reason": "Function that interacts with a service to activate sub tags"
  },
  {
    "line": 196,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of decorators to define HTTP endpoints",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1020,
    "end_token": 1020,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11705,
      2024,
      284,
      8160,
      14626,
      886,
      13033
    ],
    "label": "best_practice",
    "reason": "Use of decorators to define HTTP endpoints"
  },
  {
    "line": 196,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function parameter type hinting indicates expected input data structure",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1020,
    "end_token": 1020,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      11507,
      2099,
      9254,
      278,
      9217,
      2938,
      5128,
      1366,
      4645
    ],
    "label": "ml_signal",
    "reason": "Function parameter type hinting indicates expected input data structure"
  },
  {
    "line": 200,
    "text": "    \"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Use of decorator for HTTP POST request indicates API endpoint definition",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      37227
    ],
    "start_token": 1020,
    "end_token": 1024,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      11705,
      1352,
      329,
      14626,
      24582,
      2581,
      9217,
      7824,
      36123,
      6770
    ],
    "label": "ml_signal",
    "reason": "Use of decorator for HTTP POST request indicates API endpoint definition"
  },
  {
    "line": 201,
    "text": "    Get stock tag options",
    "annotation": "\u2705 Best Practice: Use of response_model for type hinting the expected response type",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      3497,
      4283,
      7621,
      3689
    ],
    "start_token": 1024,
    "end_token": 1031,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2882,
      62,
      19849,
      329,
      2099,
      9254,
      278,
      262,
      2938,
      2882,
      2099
    ],
    "label": "best_practice",
    "reason": "Use of response_model for type hinting the expected response type"
  },
  {
    "line": 199,
    "text": "def get_stock_tag_options(entity_id: str):",
    "annotation": "\ud83e\udde0 ML Signal: Function interacting with a service to build and activate relations",
    "confidence": 0.5,
    "tokens": [
      4299,
      651,
      62,
      13578,
      62,
      12985,
      62,
      25811,
      7,
      26858,
      62,
      312,
      25,
      965,
      2599
    ],
    "start_token": 1031,
    "end_token": 1046,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      24986,
      351,
      257,
      2139,
      284,
      1382,
      290,
      15155,
      2316
    ],
    "label": "ml_signal",
    "reason": "Function interacting with a service to build and activate relations"
  },
  {
    "line": 201,
    "text": "    Get stock tag options",
    "annotation": "\ud83e\udde0 ML Signal: Function call pattern for activating a list",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      3497,
      4283,
      7621,
      3689
    ],
    "start_token": 1046,
    "end_token": 1053,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      3912,
      329,
      35795,
      257,
      1351
    ],
    "label": "ml_signal",
    "reason": "Function call pattern for activating a list"
  },
  {
    "line": 203,
    "text": "    return tag_service.get_stock_tag_options(entity_id=entity_id)",
    "annotation": "\u2705 Best Practice: Explicit return value for clarity",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1441,
      7621,
      62,
      15271,
      13,
      1136,
      62,
      13578,
      62,
      12985,
      62,
      25811,
      7,
      26858,
      62,
      312,
      28,
      26858,
      62,
      312,
      8
    ],
    "start_token": 1053,
    "end_token": 1077,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11884,
      1441,
      1988,
      329,
      16287
    ],
    "label": "best_practice",
    "reason": "Explicit return value for clarity"
  },
  {
    "line": 205,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of decorators for routing in web frameworks",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1077,
    "end_token": 1077,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11705,
      2024,
      329,
      28166,
      287,
      3992,
      29251
    ],
    "label": "best_practice",
    "reason": "Use of decorators for routing in web frameworks"
  },
  {
    "line": 204,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function parameter type hinting indicates expected input types",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1077,
    "end_token": 1077,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      11507,
      2099,
      9254,
      278,
      9217,
      2938,
      5128,
      3858
    ],
    "label": "ml_signal",
    "reason": "Function parameter type hinting indicates expected input types"
  },
  {
    "line": 205,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Return value is a constant string, indicating a success message pattern",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1077,
    "end_token": 1077,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8229,
      1988,
      318,
      257,
      6937,
      4731,
      11,
      12739,
      257,
      1943,
      3275,
      3912
    ],
    "label": "ml_signal",
    "reason": "Return value is a constant string, indicating a success message pattern"
  },
  {
    "line": 208,
    "text": "    \"\"\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential exposure of sensitive operations via HTTP POST without authentication",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      37227
    ],
    "start_token": 1077,
    "end_token": 1081,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      7111,
      286,
      8564,
      4560,
      2884,
      14626,
      24582,
      1231,
      18239
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential exposure of sensitive operations via HTTP POST without authentication"
  },
  {
    "line": 207,
    "text": "def set_stock_tags(set_stock_tags_model: SetStockTagsModel):",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with a specific model parameter indicates a pattern for ML model training",
    "confidence": 0.5,
    "tokens": [
      4299,
      900,
      62,
      13578,
      62,
      31499,
      7,
      2617,
      62,
      13578,
      62,
      31499,
      62,
      19849,
      25,
      5345,
      26207,
      36142,
      17633,
      2599
    ],
    "start_token": 1081,
    "end_token": 1101,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      257,
      2176,
      2746,
      11507,
      9217,
      257,
      3912,
      329,
      10373,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Function definition with a specific model parameter indicates a pattern for ML model training"
  },
  {
    "line": 208,
    "text": "    \"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a service method with a model parameter can indicate a pattern for ML model training",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      37227
    ],
    "start_token": 1101,
    "end_token": 1105,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      2139,
      2446,
      351,
      257,
      2746,
      11507,
      460,
      7603,
      257,
      3912,
      329,
      10373,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Usage of a service method with a model parameter can indicate a pattern for ML model training"
  },
  {
    "line": 211,
    "text": "    return tag_service.build_stock_tags(",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): HTTP DELETE method can potentially lead to data loss if not handled properly",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1441,
      7621,
      62,
      15271,
      13,
      11249,
      62,
      13578,
      62,
      31499,
      7
    ],
    "start_token": 1105,
    "end_token": 1119,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      14626,
      5550,
      2538,
      9328,
      2446,
      460,
      6196,
      1085,
      284,
      1366,
      2994,
      611,
      407,
      12118,
      6105
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "HTTP DELETE method can potentially lead to data loss if not handled properly"
  },
  {
    "line": 211,
    "text": "    return tag_service.build_stock_tags(",
    "annotation": "\ud83e\udde0 ML Signal: Decorator usage with specific HTTP method and response model can be used for ML model training",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1441,
      7621,
      62,
      15271,
      13,
      11249,
      62,
      13578,
      62,
      31499,
      7
    ],
    "start_token": 1119,
    "end_token": 1133,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      4280,
      273,
      1352,
      8748,
      351,
      2176,
      14626,
      2446,
      290,
      2882,
      2746,
      460,
      307,
      973,
      329,
      10373,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Decorator usage with specific HTTP method and response model can be used for ML model training"
  },
  {
    "line": 210,
    "text": "    \"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Function with a single responsibility, indicating a clear and focused design",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      37227
    ],
    "start_token": 1133,
    "end_token": 1137,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      351,
      257,
      2060,
      5798,
      11,
      12739,
      257,
      1598,
      290,
      5670,
      1486
    ],
    "label": "ml_signal",
    "reason": "Function with a single responsibility, indicating a clear and focused design"
  },
  {
    "line": 211,
    "text": "    return tag_service.build_stock_tags(",
    "annotation": "\u2705 Best Practice: Use of type hinting for function parameters",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1441,
      7621,
      62,
      15271,
      13,
      11249,
      62,
      13578,
      62,
      31499,
      7
    ],
    "start_token": 1137,
    "end_token": 1151,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      9254,
      278,
      329,
      2163,
      10007
    ],
    "label": "best_practice",
    "reason": "Use of type hinting for function parameters"
  },
  {
    "line": 211,
    "text": "    return tag_service.build_stock_tags(",
    "annotation": "\ud83e\udde0 ML Signal: Delegating functionality to a service, indicating a separation of concerns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1441,
      7621,
      62,
      15271,
      13,
      11249,
      62,
      13578,
      62,
      31499,
      7
    ],
    "start_token": 1151,
    "end_token": 1165,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      1024,
      1455,
      803,
      11244,
      284,
      257,
      2139,
      11,
      12739,
      257,
      14139,
      286,
      4786
    ],
    "label": "ml_signal",
    "reason": "Delegating functionality to a service, indicating a separation of concerns"
  },
  {
    "line": 211,
    "text": "    return tag_service.build_stock_tags(",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential risk if tag_service is not properly validated or sanitized",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1441,
      7621,
      62,
      15271,
      13,
      11249,
      62,
      13578,
      62,
      31499,
      7
    ],
    "start_token": 1165,
    "end_token": 1179,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2526,
      611,
      7621,
      62,
      15271,
      318,
      407,
      6105,
      31031,
      393,
      5336,
      36951
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential risk if tag_service is not properly validated or sanitized"
  }
]