[
  {
    "line": 25,
    "text": ")",
    "annotation": "\u2705 Best Practice: Use of APIRouter for organizing routes in FastAPI applications",
    "confidence": 1.0,
    "tokens": [
      8
    ],
    "start_token": 0,
    "end_token": 1,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      3486,
      4663,
      39605,
      329,
      16924,
      11926,
      287,
      12549,
      17614,
      5479
    ],
    "label": "best_practice",
    "reason": "Use of APIRouter for organizing routes in FastAPI applications"
  },
  {
    "line": 32,
    "text": ")",
    "annotation": "\u2705 Best Practice: Use of type hinting for response_model improves code readability and maintainability",
    "confidence": 1.0,
    "tokens": [
      8
    ],
    "start_token": 1,
    "end_token": 2,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      9254,
      278,
      329,
      2882,
      62,
      19849,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of type hinting for response_model improves code readability and maintainability"
  },
  {
    "line": 32,
    "text": ")",
    "annotation": "\ud83e\udde0 ML Signal: Function that interacts with a service to query data",
    "confidence": 1.0,
    "tokens": [
      8
    ],
    "start_token": 2,
    "end_token": 3,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      326,
      44020,
      351,
      257,
      2139,
      284,
      12405,
      1366
    ],
    "label": "ml_signal",
    "reason": "Function that interacts with a service to query data"
  },
  {
    "line": 35,
    "text": "@trading_router.post(\"/query_kdata\", response_model=Optional[List[KdataModel]])",
    "annotation": "\u2705 Best Practice: Use of type hinting for response_model improves code readability and maintainability",
    "confidence": 0.5,
    "tokens": [
      31,
      2213,
      4980,
      62,
      472,
      353,
      13,
      7353,
      7203,
      14,
      22766,
      62,
      74,
      7890,
      1600,
      2882,
      62,
      19849,
      28,
      30719,
      58,
      8053,
      58,
      42,
      7890,
      17633,
      11907,
      8
    ],
    "start_token": 3,
    "end_token": 31,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      9254,
      278,
      329,
      2882,
      62,
      19849,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of type hinting for response_model improves code readability and maintainability"
  },
  {
    "line": 35,
    "text": "@trading_router.post(\"/query_kdata\", response_model=Optional[List[KdataModel]])",
    "annotation": "\ud83e\udde0 ML Signal: Function that interacts with a service, indicating a pattern of service usage.",
    "confidence": 0.5,
    "tokens": [
      31,
      2213,
      4980,
      62,
      472,
      353,
      13,
      7353,
      7203,
      14,
      22766,
      62,
      74,
      7890,
      1600,
      2882,
      62,
      19849,
      28,
      30719,
      58,
      8053,
      58,
      42,
      7890,
      17633,
      11907,
      8
    ],
    "start_token": 31,
    "end_token": 59,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      326,
      44020,
      351,
      257,
      2139,
      11,
      12739,
      257,
      3912,
      286,
      2139,
      8748,
      13
    ],
    "label": "ml_signal",
    "reason": "Function that interacts with a service, indicating a pattern of service usage."
  },
  {
    "line": 38,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function returning a service call result, indicating a pattern of service interaction",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 59,
    "end_token": 59,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      8024,
      257,
      2139,
      869,
      1255,
      11,
      12739,
      257,
      3912,
      286,
      2139,
      10375
    ],
    "label": "ml_signal",
    "reason": "Function returning a service call result, indicating a pattern of service interaction"
  },
  {
    "line": 41,
    "text": "def query_kdata(ts_request_model: TSRequestModel):",
    "annotation": "\u2705 Best Practice: Use of a decorator to define a route in a web framework",
    "confidence": 1.0,
    "tokens": [
      4299,
      12405,
      62,
      74,
      7890,
      7,
      912,
      62,
      25927,
      62,
      19849,
      25,
      26136,
      18453,
      17633,
      2599
    ],
    "start_token": 59,
    "end_token": 75,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      257,
      11705,
      1352,
      284,
      8160,
      257,
      6339,
      287,
      257,
      3992,
      9355
    ],
    "label": "best_practice",
    "reason": "Use of a decorator to define a route in a web framework"
  },
  {
    "line": 41,
    "text": "def query_kdata(ts_request_model: TSRequestModel):",
    "annotation": "\ud83e\udde0 ML Signal: Use of context manager for database session handling",
    "confidence": 1.0,
    "tokens": [
      4299,
      12405,
      62,
      74,
      7890,
      7,
      912,
      62,
      25927,
      62,
      19849,
      25,
      26136,
      18453,
      17633,
      2599
    ],
    "start_token": 75,
    "end_token": 91,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4732,
      4706,
      329,
      6831,
      6246,
      9041
    ],
    "label": "ml_signal",
    "reason": "Use of context manager for database session handling"
  },
  {
    "line": 42,
    "text": "    return trading_service.query_ts(ts_request_model)",
    "annotation": "\ud83e\udde0 ML Signal: Querying data from a database",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1441,
      7313,
      62,
      15271,
      13,
      22766,
      62,
      912,
      7,
      912,
      62,
      25927,
      62,
      19849,
      8
    ],
    "start_token": 91,
    "end_token": 109,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      422,
      257,
      6831
    ],
    "label": "ml_signal",
    "reason": "Querying data from a database"
  },
  {
    "line": 50,
    "text": "@trading_router.get(\"/get_query_stock_quote_setting\", response_model=Optional[QueryStockQuoteSettingModel])",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential exposure of sensitive data through API endpoint",
    "confidence": 1.0,
    "tokens": [
      31,
      2213,
      4980,
      62,
      472,
      353,
      13,
      1136,
      7203,
      14,
      1136,
      62,
      22766,
      62,
      13578,
      62,
      22708,
      62,
      33990,
      1600,
      2882,
      62,
      19849,
      28,
      30719,
      58,
      20746,
      26207,
      25178,
      34149,
      17633,
      12962
    ],
    "start_token": 109,
    "end_token": 141,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      7111,
      286,
      8564,
      1366,
      832,
      7824,
      36123
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential exposure of sensitive data through API endpoint"
  },
  {
    "line": 50,
    "text": "@trading_router.get(\"/get_query_stock_quote_setting\", response_model=Optional[QueryStockQuoteSettingModel])",
    "annotation": "\ud83e\udde0 ML Signal: Function uses a service to build a query, indicating a pattern of service delegation",
    "confidence": 0.5,
    "tokens": [
      31,
      2213,
      4980,
      62,
      472,
      353,
      13,
      1136,
      7203,
      14,
      1136,
      62,
      22766,
      62,
      13578,
      62,
      22708,
      62,
      33990,
      1600,
      2882,
      62,
      19849,
      28,
      30719,
      58,
      20746,
      26207,
      25178,
      34149,
      17633,
      12962
    ],
    "start_token": 141,
    "end_token": 173,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      3544,
      257,
      2139,
      284,
      1382,
      257,
      12405,
      11,
      12739,
      257,
      3912,
      286,
      2139,
      22635
    ],
    "label": "ml_signal",
    "reason": "Function uses a service to build a query, indicating a pattern of service delegation"
  },
  {
    "line": 53,
    "text": "        query_setting: List[QueryStockQuoteSetting] = QueryStockQuoteSetting.query_data(",
    "annotation": "\u2705 Best Practice: Use of decorators to define HTTP endpoints improves code organization and readability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      12405,
      62,
      33990,
      25,
      7343,
      58,
      20746,
      26207,
      25178,
      34149,
      60,
      796,
      43301,
      26207,
      25178,
      34149,
      13,
      22766,
      62,
      7890,
      7
    ],
    "start_token": 173,
    "end_token": 201,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11705,
      2024,
      284,
      8160,
      14626,
      886,
      13033,
      19575,
      2438,
      4009,
      290,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of decorators to define HTTP endpoints improves code organization and readability"
  },
  {
    "line": 53,
    "text": "        query_setting: List[QueryStockQuoteSetting] = QueryStockQuoteSetting.query_data(",
    "annotation": "\ud83e\udde0 ML Signal: Function uses a service to query data, indicating a pattern of data retrieval.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      12405,
      62,
      33990,
      25,
      7343,
      58,
      20746,
      26207,
      25178,
      34149,
      60,
      796,
      43301,
      26207,
      25178,
      34149,
      13,
      22766,
      62,
      7890,
      7
    ],
    "start_token": 201,
    "end_token": 229,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      3544,
      257,
      2139,
      284,
      12405,
      1366,
      11,
      12739,
      257,
      3912,
      286,
      1366,
      45069,
      13
    ],
    "label": "ml_signal",
    "reason": "Function uses a service to query data, indicating a pattern of data retrieval."
  },
  {
    "line": 56,
    "text": "        if query_setting:",
    "annotation": "\u2705 Best Practice: Use of decorators to define HTTP endpoints improves code organization and readability.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      12405,
      62,
      33990,
      25
    ],
    "start_token": 229,
    "end_token": 241,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11705,
      2024,
      284,
      8160,
      14626,
      886,
      13033,
      19575,
      2438,
      4009,
      290,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Use of decorators to define HTTP endpoints improves code organization and readability."
  },
  {
    "line": 56,
    "text": "        if query_setting:",
    "annotation": "\ud83e\udde0 ML Signal: Function signature indicates a pattern of querying stock quotes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      12405,
      62,
      33990,
      25
    ],
    "start_token": 241,
    "end_token": 253,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      9877,
      9217,
      257,
      3912,
      286,
      42517,
      1112,
      4283,
      13386
    ],
    "label": "ml_signal",
    "reason": "Function signature indicates a pattern of querying stock quotes"
  },
  {
    "line": 58,
    "text": "        return None",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a service to query stock quotes, indicating a common pattern in trading applications",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      6045
    ],
    "start_token": 253,
    "end_token": 262,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      2139,
      284,
      12405,
      4283,
      13386,
      11,
      12739,
      257,
      2219,
      3912,
      287,
      7313,
      5479
    ],
    "label": "ml_signal",
    "reason": "Usage of a service to query stock quotes, indicating a common pattern in trading applications"
  },
  {
    "line": 61,
    "text": "@trading_router.post(\"/build_query_stock_quote_setting\", response_model=QueryStockQuoteSettingModel)",
    "annotation": "\ud83e\udde0 ML Signal: Endpoint definition for building a trading plan, useful for identifying API usage patterns",
    "confidence": 0.5,
    "tokens": [
      31,
      2213,
      4980,
      62,
      472,
      353,
      13,
      7353,
      7203,
      14,
      11249,
      62,
      22766,
      62,
      13578,
      62,
      22708,
      62,
      33990,
      1600,
      2882,
      62,
      19849,
      28,
      20746,
      26207,
      25178,
      34149,
      17633,
      8
    ],
    "start_token": 262,
    "end_token": 292,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5268,
      4122,
      6770,
      329,
      2615,
      257,
      7313,
      1410,
      11,
      4465,
      329,
      13720,
      7824,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Endpoint definition for building a trading plan, useful for identifying API usage patterns"
  },
  {
    "line": 62,
    "text": "def build_query_stock_quote_setting(build_query_stock_quote_setting_model: BuildQueryStockQuoteSettingModel):",
    "annotation": "\u2705 Best Practice: Use of decorators for defining API endpoints improves code readability and organization",
    "confidence": 0.5,
    "tokens": [
      4299,
      1382,
      62,
      22766,
      62,
      13578,
      62,
      22708,
      62,
      33990,
      7,
      11249,
      62,
      22766,
      62,
      13578,
      62,
      22708,
      62,
      33990,
      62,
      19849,
      25,
      10934,
      20746,
      26207,
      25178,
      34149,
      17633,
      2599
    ],
    "start_token": 292,
    "end_token": 322,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11705,
      2024,
      329,
      16215,
      7824,
      886,
      13033,
      19575,
      2438,
      1100,
      1799,
      290,
      4009
    ],
    "label": "best_practice",
    "reason": "Use of decorators for defining API endpoints improves code readability and organization"
  },
  {
    "line": 59,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function signature indicates a pattern of using service classes for business logic",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 322,
    "end_token": 322,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      9877,
      9217,
      257,
      3912,
      286,
      1262,
      2139,
      6097,
      329,
      1597,
      9156
    ],
    "label": "ml_signal",
    "reason": "Function signature indicates a pattern of using service classes for business logic"
  },
  {
    "line": 62,
    "text": "def build_query_stock_quote_setting(build_query_stock_quote_setting_model: BuildQueryStockQuoteSettingModel):",
    "annotation": "\u2705 Best Practice: Use of decorators for routing improves code organization and readability",
    "confidence": 1.0,
    "tokens": [
      4299,
      1382,
      62,
      22766,
      62,
      13578,
      62,
      22708,
      62,
      33990,
      7,
      11249,
      62,
      22766,
      62,
      13578,
      62,
      22708,
      62,
      33990,
      62,
      19849,
      25,
      10934,
      20746,
      26207,
      25178,
      34149,
      17633,
      2599
    ],
    "start_token": 322,
    "end_token": 352,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11705,
      2024,
      329,
      28166,
      19575,
      2438,
      4009,
      290,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of decorators for routing improves code organization and readability"
  },
  {
    "line": 62,
    "text": "def build_query_stock_quote_setting(build_query_stock_quote_setting_model: BuildQueryStockQuoteSettingModel):",
    "annotation": "\ud83e\udde0 ML Signal: Function that interacts with a service to query trading plans",
    "confidence": 1.0,
    "tokens": [
      4299,
      1382,
      62,
      22766,
      62,
      13578,
      62,
      22708,
      62,
      33990,
      7,
      11249,
      62,
      22766,
      62,
      13578,
      62,
      22708,
      62,
      33990,
      62,
      19849,
      25,
      10934,
      20746,
      26207,
      25178,
      34149,
      17633,
      2599
    ],
    "start_token": 352,
    "end_token": 382,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      326,
      44020,
      351,
      257,
      2139,
      284,
      12405,
      7313,
      3352
    ],
    "label": "ml_signal",
    "reason": "Function that interacts with a service to query trading plans"
  },
  {
    "line": 65,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of decorators to define HTTP endpoints",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 382,
    "end_token": 382,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11705,
      2024,
      284,
      8160,
      14626,
      886,
      13033
    ],
    "label": "best_practice",
    "reason": "Use of decorators to define HTTP endpoints"
  },
  {
    "line": 64,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function definition for retrieving current trading plan",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 382,
    "end_token": 382,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      329,
      50122,
      1459,
      7313,
      1410
    ],
    "label": "ml_signal",
    "reason": "Function definition for retrieving current trading plan"
  },
  {
    "line": 65,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of trading_service to get trading plan",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 382,
    "end_token": 382,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      7313,
      62,
      15271,
      284,
      651,
      7313,
      1410
    ],
    "label": "ml_signal",
    "reason": "Usage of trading_service to get trading plan"
  },
  {
    "line": 68,
    "text": "    return trading_service.query_tag_quotes(query_tag_quote_model)",
    "annotation": "\u2705 Best Practice: Use of decorator for defining a route in a web application",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1441,
      7313,
      62,
      15271,
      13,
      22766,
      62,
      12985,
      62,
      421,
      6421,
      7,
      22766,
      62,
      12985,
      62,
      22708,
      62,
      19849,
      8
    ],
    "start_token": 382,
    "end_token": 405,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11705,
      1352,
      329,
      16215,
      257,
      6339,
      287,
      257,
      3992,
      3586
    ],
    "label": "best_practice",
    "reason": "Use of decorator for defining a route in a web application"
  },
  {
    "line": 68,
    "text": "    return trading_service.query_tag_quotes(query_tag_quote_model)",
    "annotation": "\ud83e\udde0 ML Signal: Function that retrieves trading plans, indicating user interest in trading activities",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1441,
      7313,
      62,
      15271,
      13,
      22766,
      62,
      12985,
      62,
      421,
      6421,
      7,
      22766,
      62,
      12985,
      62,
      22708,
      62,
      19849,
      8
    ],
    "start_token": 405,
    "end_token": 428,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      326,
      13236,
      1158,
      7313,
      3352,
      11,
      12739,
      2836,
      1393,
      287,
      7313,
      4568
    ],
    "label": "ml_signal",
    "reason": "Function that retrieves trading plans, indicating user interest in trading activities"
  },
  {
    "line": 71,
    "text": "@trading_router.post(\"/query_stock_quotes\", response_model=Optional[StockQuoteStatsModel])",
    "annotation": "\u2705 Best Practice: Use of decorators to define HTTP endpoints in a web framework",
    "confidence": 1.0,
    "tokens": [
      31,
      2213,
      4980,
      62,
      472,
      353,
      13,
      7353,
      7203,
      14,
      22766,
      62,
      13578,
      62,
      421,
      6421,
      1600,
      2882,
      62,
      19849,
      28,
      30719,
      58,
      26207,
      25178,
      29668,
      17633,
      12962
    ],
    "start_token": 428,
    "end_token": 456,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11705,
      2024,
      284,
      8160,
      14626,
      886,
      13033,
      287,
      257,
      3992,
      9355
    ],
    "label": "best_practice",
    "reason": "Use of decorators to define HTTP endpoints in a web framework"
  },
  {
    "line": 71,
    "text": "@trading_router.post(\"/query_stock_quotes\", response_model=Optional[StockQuoteStatsModel])",
    "annotation": "\ud83e\udde0 ML Signal: Conditional import based on platform, indicating platform-specific behavior",
    "confidence": 0.5,
    "tokens": [
      31,
      2213,
      4980,
      62,
      472,
      353,
      13,
      7353,
      7203,
      14,
      22766,
      62,
      13578,
      62,
      421,
      6421,
      1600,
      2882,
      62,
      19849,
      28,
      30719,
      58,
      26207,
      25178,
      29668,
      17633,
      12962
    ],
    "start_token": 456,
    "end_token": 484,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      1330,
      1912,
      319,
      3859,
      11,
      12739,
      3859,
      12,
      11423,
      4069
    ],
    "label": "ml_signal",
    "reason": "Conditional import based on platform, indicating platform-specific behavior"
  },
  {
    "line": 73,
    "text": "    return trading_service.query_stock_quotes(query_stock_quote_model)",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Dynamic import based on condition, could lead to import errors or security issues",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1441,
      7313,
      62,
      15271,
      13,
      22766,
      62,
      13578,
      62,
      421,
      6421,
      7,
      22766,
      62,
      13578,
      62,
      22708,
      62,
      19849,
      8
    ],
    "start_token": 484,
    "end_token": 507,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      26977,
      1330,
      1912,
      319,
      4006,
      11,
      714,
      1085,
      284,
      1330,
      8563,
      393,
      2324,
      2428
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Dynamic import based on condition, could lead to import errors or security issues"
  },
  {
    "line": 75,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Platform-specific method call, indicating usage pattern for Windows",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 507,
    "end_token": 507,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      19193,
      12,
      11423,
      2446,
      869,
      11,
      12739,
      8748,
      3912,
      329,
      3964
    ],
    "label": "ml_signal",
    "reason": "Platform-specific method call, indicating usage pattern for Windows"
  },
  {
    "line": 78,
    "text": "    return trading_service.build_trading_plan(build_trading_plan_model)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Generic exception message, could be more informative",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1441,
      7313,
      62,
      15271,
      13,
      11249,
      62,
      2213,
      4980,
      62,
      11578,
      7,
      11249,
      62,
      2213,
      4980,
      62,
      11578,
      62,
      19849,
      8
    ],
    "start_token": 507,
    "end_token": 531,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      42044,
      6631,
      3275,
      11,
      714,
      307,
      517,
      30304
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Generic exception message, could be more informative"
  },
  {
    "line": 80,
    "text": "",
    "annotation": "\u2705 Best Practice: Decorator usage for route definition, improves code organization and readability",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 531,
    "end_token": 531,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4280,
      273,
      1352,
      8748,
      329,
      6339,
      6770,
      11,
      19575,
      2438,
      4009,
      290,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Decorator usage for route definition, improves code organization and readability"
  },
  {
    "line": 77,
    "text": "def build_trading_plan(build_trading_plan_model: BuildTradingPlanModel):",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with specific parameter type hints",
    "confidence": 1.0,
    "tokens": [
      4299,
      1382,
      62,
      2213,
      4980,
      62,
      11578,
      7,
      11249,
      62,
      2213,
      4980,
      62,
      11578,
      62,
      19849,
      25,
      10934,
      2898,
      4980,
      20854,
      17633,
      2599
    ],
    "start_token": 531,
    "end_token": 554,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      2176,
      11507,
      2099,
      20269
    ],
    "label": "ml_signal",
    "reason": "Function definition with specific parameter type hints"
  },
  {
    "line": 79,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Checking for platform-specific conditions",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 554,
    "end_token": 554,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      3859,
      12,
      11423,
      3403
    ],
    "label": "ml_signal",
    "reason": "Checking for platform-specific conditions"
  },
  {
    "line": 80,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Dynamic import based on platform condition",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 554,
    "end_token": 554,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      26977,
      1330,
      1912,
      319,
      3859,
      4006
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Dynamic import based on platform condition"
  },
  {
    "line": 82,
    "text": "def query_trading_plan(query_trading_plan_model: QueryTradingPlanModel):",
    "annotation": "\ud83e\udde0 ML Signal: Platform-specific method call",
    "confidence": 0.5,
    "tokens": [
      4299,
      12405,
      62,
      2213,
      4980,
      62,
      11578,
      7,
      22766,
      62,
      2213,
      4980,
      62,
      11578,
      62,
      19849,
      25,
      43301,
      2898,
      4980,
      20854,
      17633,
      2599
    ],
    "start_token": 554,
    "end_token": 577,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      19193,
      12,
      11423,
      2446,
      869
    ],
    "label": "ml_signal",
    "reason": "Platform-specific method call"
  },
  {
    "line": 82,
    "text": "def query_trading_plan(query_trading_plan_model: QueryTradingPlanModel):",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Generic exception handling with HTTP status code",
    "confidence": 0.5,
    "tokens": [
      4299,
      12405,
      62,
      2213,
      4980,
      62,
      11578,
      7,
      22766,
      62,
      2213,
      4980,
      62,
      11578,
      62,
      19849,
      25,
      43301,
      2898,
      4980,
      20854,
      17633,
      2599
    ],
    "start_token": 577,
    "end_token": 600,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      42044,
      6631,
      9041,
      351,
      14626,
      3722,
      2438
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Generic exception handling with HTTP status code"
  }
]