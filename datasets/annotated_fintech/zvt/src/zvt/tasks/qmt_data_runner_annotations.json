[
  {
    "line": 11,
    "text": "from zvt.recorders.qmt.meta import QMTStockRecorder",
    "annotation": "\u2705 Best Practice: Use of logging module for logging is a good practice for tracking and debugging.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      8344,
      6361,
      13,
      80,
      16762,
      13,
      28961,
      1330,
      1195,
      13752,
      26207,
      6690,
      2875
    ],
    "start_token": 0,
    "end_token": 17,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      18931,
      8265,
      329,
      18931,
      318,
      257,
      922,
      3357,
      329,
      9646,
      290,
      28769,
      13
    ],
    "label": "best_practice",
    "reason": "Use of logging module for logging is a good practice for tracking and debugging."
  },
  {
    "line": 11,
    "text": "from zvt.recorders.qmt.meta import QMTStockRecorder",
    "annotation": "\ud83e\udde0 ML Signal: Function with a boolean parameter indicating optional behavior",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      8344,
      6361,
      13,
      80,
      16762,
      13,
      28961,
      1330,
      1195,
      13752,
      26207,
      6690,
      2875
    ],
    "start_token": 17,
    "end_token": 34,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      351,
      257,
      25131,
      11507,
      12739,
      11902,
      4069
    ],
    "label": "ml_signal",
    "reason": "Function with a boolean parameter indicating optional behavior"
  },
  {
    "line": 14,
    "text": "logger = logging.getLogger(__name__)",
    "annotation": "\ud83e\udde0 ML Signal: External library function call, indicating dependency on xtdata",
    "confidence": 1.0,
    "tokens": [
      6404,
      1362,
      796,
      18931,
      13,
      1136,
      11187,
      1362,
      7,
      834,
      3672,
      834,
      8
    ],
    "start_token": 34,
    "end_token": 47,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      34579,
      5888,
      2163,
      869,
      11,
      12739,
      20203,
      319,
      220,
      742,
      7890
    ],
    "label": "ml_signal",
    "reason": "External library function call, indicating dependency on xtdata"
  },
  {
    "line": 16,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function call to retrieve stock codes, indicating data retrieval pattern",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 47,
    "end_token": 47,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      284,
      19818,
      4283,
      12416,
      11,
      12739,
      1366,
      45069,
      3912
    ],
    "label": "ml_signal",
    "reason": "Function call to retrieve stock codes, indicating data retrieval pattern"
  },
  {
    "line": 18,
    "text": "    period = \"1d\"",
    "annotation": "\u2705 Best Practice: Sorting data for consistent processing",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      2278,
      796,
      366,
      16,
      67,
      1
    ],
    "start_token": 47,
    "end_token": 56,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      311,
      24707,
      1366,
      329,
      6414,
      7587
    ],
    "label": "best_practice",
    "reason": "Sorting data for consistent processing"
  },
  {
    "line": 20,
    "text": "    stock_codes = get_qmt_stocks()",
    "annotation": "\ud83e\udde0 ML Signal: Counting elements in a list, indicating data size measurement",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      4283,
      62,
      40148,
      796,
      651,
      62,
      80,
      16762,
      62,
      29522,
      3419
    ],
    "start_token": 56,
    "end_token": 70,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2764,
      278,
      4847,
      287,
      257,
      1351,
      11,
      12739,
      1366,
      2546,
      15558
    ],
    "label": "ml_signal",
    "reason": "Counting elements in a list, indicating data size measurement"
  },
  {
    "line": 22,
    "text": "    count = len(stock_codes)",
    "annotation": "\ud83e\udde0 ML Signal: Use of a dictionary to track status, indicating state management pattern",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      954,
      796,
      18896,
      7,
      13578,
      62,
      40148,
      8
    ],
    "start_token": 70,
    "end_token": 81,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      22155,
      284,
      2610,
      3722,
      11,
      12739,
      1181,
      4542,
      3912
    ],
    "label": "ml_signal",
    "reason": "Use of a dictionary to track status, indicating state management pattern"
  },
  {
    "line": 19,
    "text": "    xtdata.download_sector_data()",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Default argument value is mutable, which can lead to unexpected behavior",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      742,
      7890,
      13,
      15002,
      62,
      34914,
      62,
      7890,
      3419
    ],
    "start_token": 81,
    "end_token": 94,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      15161,
      4578,
      1988,
      318,
      4517,
      540,
      11,
      543,
      460,
      1085,
      284,
      10059,
      4069
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Default argument value is mutable, which can lead to unexpected behavior"
  },
  {
    "line": 28,
    "text": "        total = data[\"total\"]",
    "annotation": "\ud83e\udde0 ML Signal: Usage of callback pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2472,
      796,
      1366,
      14692,
      23350,
      8973
    ],
    "start_token": 94,
    "end_token": 107,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      23838,
      3912
    ],
    "label": "ml_signal",
    "reason": "Usage of callback pattern"
  },
  {
    "line": 40,
    "text": "        if download_status[\"ok\"]:",
    "annotation": "\ud83e\udde0 ML Signal: Usage of custom recorder classes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      4321,
      62,
      13376,
      14692,
      482,
      1,
      5974
    ],
    "start_token": 107,
    "end_token": 122,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2183,
      38156,
      6097
    ],
    "label": "ml_signal",
    "reason": "Usage of custom recorder classes"
  },
  {
    "line": 43,
    "text": "        cost_time = time.time() - start_time",
    "annotation": "\ud83e\udde0 ML Signal: Usage of custom recorder classes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1575,
      62,
      2435,
      796,
      640,
      13,
      2435,
      3419,
      532,
      923,
      62,
      2435
    ],
    "start_token": 122,
    "end_token": 141,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2183,
      38156,
      6097
    ],
    "label": "ml_signal",
    "reason": "Usage of custom recorder classes"
  },
  {
    "line": 44,
    "text": "        if cost_time >= 60 * 30:",
    "annotation": "\ud83e\udde0 ML Signal: Usage of callback pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      1575,
      62,
      2435,
      18189,
      3126,
      1635,
      1542,
      25
    ],
    "start_token": 141,
    "end_token": 157,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      23838,
      3912
    ],
    "label": "ml_signal",
    "reason": "Usage of callback pattern"
  },
  {
    "line": 69,
    "text": "            for col in records:",
    "annotation": "\u2705 Best Practice: Use of logging for tracking execution",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      329,
      951,
      287,
      4406,
      25
    ],
    "start_token": 157,
    "end_token": 173,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      18931,
      329,
      9646,
      9706
    ],
    "label": "best_practice",
    "reason": "Use of logging for tracking execution"
  },
  {
    "line": 70,
    "text": "                df = records[col].T",
    "annotation": "\ud83e\udde0 ML Signal: Usage of scheduling pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      796,
      4406,
      58,
      4033,
      4083,
      51
    ],
    "start_token": 173,
    "end_token": 195,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      26925,
      3912
    ],
    "label": "ml_signal",
    "reason": "Usage of scheduling pattern"
  },
  {
    "line": 70,
    "text": "                df = records[col].T",
    "annotation": "\ud83e\udde0 ML Signal: Usage of scheduling pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      796,
      4406,
      58,
      4033,
      4083,
      51
    ],
    "start_token": 195,
    "end_token": 217,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      26925,
      3912
    ],
    "label": "ml_signal",
    "reason": "Usage of scheduling pattern"
  },
  {
    "line": 70,
    "text": "                df = records[col].T",
    "annotation": "\ud83e\udde0 ML Signal: Usage of cron scheduling",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      796,
      4406,
      58,
      4033,
      4083,
      51
    ],
    "start_token": 217,
    "end_token": 239,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      1067,
      261,
      26925
    ],
    "label": "ml_signal",
    "reason": "Usage of cron scheduling"
  },
  {
    "line": 70,
    "text": "                df = records[col].T",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Accessing protected member _thread of an object",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      796,
      4406,
      58,
      4033,
      4083,
      51
    ],
    "start_token": 239,
    "end_token": 261,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      8798,
      278,
      6861,
      2888,
      4808,
      16663,
      286,
      281,
      2134
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Accessing protected member _thread of an object"
  }
]