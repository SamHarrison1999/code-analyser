annotation,annotation_tokens,confidence,end_token,label,line,reason,start_token,text,tokens
âœ… Best Practice: Custom exception class for module-specific errors,"[26486, 227, 6705, 19939, 25, 8562, 6631, 1398, 329, 8265, 12, 11423, 8563]",1.0,13,best_practice,1,Custom exception class for module-specific errors,0,# -*- coding: utf-8 -*-,"[2, 532, 9, 12, 19617, 25, 3384, 69, 12, 23, 532, 9, 12]"
âœ… Best Practice: Define custom exception classes for specific error handling,"[26486, 227, 6705, 19939, 25, 2896, 500, 2183, 6631, 6097, 329, 2176, 4049, 9041]",1.0,13,best_practice,4,Define custom exception classes for specific error handling,13,,[]
âœ… Best Practice: Default parameter values improve function usability and flexibility,"[26486, 227, 6705, 19939, 25, 15161, 11507, 3815, 2987, 2163, 42863, 290, 13688]",1.0,17,best_practice,5,Default parameter values improve function usability and flexibility,13,    pass,"[220, 220, 220, 1208]"
ðŸ§  ML Signal: Storing error messages in instance variables is a common pattern,"[8582, 100, 254, 10373, 26484, 25, 520, 3255, 4049, 6218, 287, 4554, 9633, 318, 257, 2219, 3912]",0.5,17,ml_signal,7,Storing error messages in instance variables is a common pattern,17,,[]
âœ… Best Practice: Custom exception class for specific error handling,"[26486, 227, 6705, 19939, 25, 8562, 6631, 1398, 329, 2176, 4049, 9041]",1.0,17,best_practice,7,Custom exception class for specific error handling,17,,[]
âœ… Best Practice: Use of default parameter value for flexibility,"[26486, 227, 6705, 19939, 25, 5765, 286, 4277, 11507, 1988, 329, 13688]",1.0,27,best_practice,8,Use of default parameter value for flexibility,17,class InvalidOrderParamError(TraderError):,"[4871, 17665, 18743, 22973, 12331, 7, 2898, 5067, 12331, 2599]"
ðŸ§  ML Signal: Storing a parameter value in an instance variable,"[8582, 100, 254, 10373, 26484, 25, 520, 3255, 257, 11507, 1988, 287, 281, 4554, 7885]",1.0,39,ml_signal,10,Storing a parameter value in an instance variable,27,        self.message = message,"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 20500, 796, 3275]"
âœ… Best Practice: Define a custom exception class for specific error handling,"[26486, 227, 6705, 19939, 25, 2896, 500, 257, 2183, 6631, 1398, 329, 2176, 4049, 9041]",0.5,39,best_practice,11,Define a custom exception class for specific error handling,39,,[]
âœ… Best Practice: Use of default parameter value for flexibility and ease of use,"[26486, 227, 6705, 19939, 25, 5765, 286, 4277, 11507, 1988, 329, 13688, 290, 10152, 286, 779]",1.0,39,best_practice,12,Use of default parameter value for flexibility and ease of use,39,,[]
"ðŸ§  ML Signal: Storing a parameter as an instance attribute, common pattern in class initializers","[8582, 100, 254, 10373, 26484, 25, 520, 3255, 257, 11507, 355, 281, 4554, 11688, 11, 2219, 3912, 287, 1398, 4238, 11341]",0.5,56,ml_signal,14,"Storing a parameter as an instance attribute, common pattern in class initializers",39,"    def __init__(self, message=""not enough money""):","[220, 220, 220, 825, 11593, 15003, 834, 7, 944, 11, 3275, 2625, 1662, 1576, 1637, 1, 2599]"
âœ… Best Practice: Custom exception class for specific error handling,"[26486, 227, 6705, 19939, 25, 8562, 6631, 1398, 329, 2176, 4049, 9041]",1.0,66,best_practice,13,Custom exception class for specific error handling,56,class NotEnoughMoneyError(TraderError):,"[4871, 1892, 47323, 26788, 12331, 7, 2898, 5067, 12331, 2599]"
âœ… Best Practice: Provide a default value for the parameter to ensure the function can be called without arguments.,"[26486, 227, 6705, 19939, 25, 44290, 257, 4277, 1988, 329, 262, 11507, 284, 4155, 262, 2163, 460, 307, 1444, 1231, 7159, 13]",0.5,83,best_practice,14,Provide a default value for the parameter to ensure the function can be called without arguments.,66,"    def __init__(self, message=""not enough money""):","[220, 220, 220, 825, 11593, 15003, 834, 7, 944, 11, 3275, 2625, 1662, 1576, 1637, 1, 2599]"
ðŸ§  ML Signal: Storing a parameter value in an instance variable is a common pattern.,"[8582, 100, 254, 10373, 26484, 25, 520, 3255, 257, 11507, 1988, 287, 281, 4554, 7885, 318, 257, 2219, 3912, 13]",0.5,83,ml_signal,16,Storing a parameter value in an instance variable is a common pattern.,83,,[]
âœ… Best Practice: Default argument values should be immutable to avoid unexpected behavior.,"[26486, 227, 6705, 19939, 25, 15161, 4578, 3815, 815, 307, 40139, 284, 3368, 10059, 4069, 13]",1.0,83,best_practice,17,Default argument values should be immutable to avoid unexpected behavior.,83,,[]
âœ… Best Practice: Storing the message in an instance variable for later use.,"[26486, 227, 6705, 19939, 25, 520, 3255, 262, 3275, 287, 281, 4554, 7885, 329, 1568, 779, 13]",1.0,100,best_practice,19,Storing the message in an instance variable for later use.,83,"    def __init__(self, message=""not enough position""):","[220, 220, 220, 825, 11593, 15003, 834, 7, 944, 11, 3275, 2625, 1662, 1576, 2292, 1, 2599]"
âœ… Best Practice: Using __all__ to define the public API of the module.,"[26486, 227, 6705, 19939, 25, 8554, 11593, 439, 834, 284, 8160, 262, 1171, 7824, 286, 262, 8265, 13]",1.0,117,best_practice,19,Using __all__ to define the public API of the module.,100,"    def __init__(self, message=""not enough position""):","[220, 220, 220, 825, 11593, 15003, 834, 7, 944, 11, 3275, 2625, 1662, 1576, 2292, 1, 2599]"
