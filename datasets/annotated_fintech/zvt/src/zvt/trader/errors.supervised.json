[
  {
    "line": 1,
    "text": "# -*- coding: utf-8 -*-",
    "annotation": "\u2705 Best Practice: Custom exception class for module-specific errors",
    "confidence": 1.0,
    "tokens": [
      2,
      532,
      9,
      12,
      19617,
      25,
      3384,
      69,
      12,
      23,
      532,
      9,
      12
    ],
    "start_token": 0,
    "end_token": 13,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8562,
      6631,
      1398,
      329,
      8265,
      12,
      11423,
      8563
    ],
    "label": "best_practice",
    "reason": "Custom exception class for module-specific errors"
  },
  {
    "line": 4,
    "text": "",
    "annotation": "\u2705 Best Practice: Define custom exception classes for specific error handling",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 13,
    "end_token": 13,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      500,
      2183,
      6631,
      6097,
      329,
      2176,
      4049,
      9041
    ],
    "label": "best_practice",
    "reason": "Define custom exception classes for specific error handling"
  },
  {
    "line": 5,
    "text": "    pass",
    "annotation": "\u2705 Best Practice: Default parameter values improve function usability and flexibility",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1208
    ],
    "start_token": 13,
    "end_token": 17,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      15161,
      11507,
      3815,
      2987,
      2163,
      42863,
      290,
      13688
    ],
    "label": "best_practice",
    "reason": "Default parameter values improve function usability and flexibility"
  },
  {
    "line": 7,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Storing error messages in instance variables is a common pattern",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 17,
    "end_token": 17,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      520,
      3255,
      4049,
      6218,
      287,
      4554,
      9633,
      318,
      257,
      2219,
      3912
    ],
    "label": "ml_signal",
    "reason": "Storing error messages in instance variables is a common pattern"
  },
  {
    "line": 7,
    "text": "",
    "annotation": "\u2705 Best Practice: Custom exception class for specific error handling",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 17,
    "end_token": 17,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8562,
      6631,
      1398,
      329,
      2176,
      4049,
      9041
    ],
    "label": "best_practice",
    "reason": "Custom exception class for specific error handling"
  },
  {
    "line": 8,
    "text": "class InvalidOrderParamError(TraderError):",
    "annotation": "\u2705 Best Practice: Use of default parameter value for flexibility",
    "confidence": 1.0,
    "tokens": [
      4871,
      17665,
      18743,
      22973,
      12331,
      7,
      2898,
      5067,
      12331,
      2599
    ],
    "start_token": 17,
    "end_token": 27,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      4277,
      11507,
      1988,
      329,
      13688
    ],
    "label": "best_practice",
    "reason": "Use of default parameter value for flexibility"
  },
  {
    "line": 10,
    "text": "        self.message = message",
    "annotation": "\ud83e\udde0 ML Signal: Storing a parameter value in an instance variable",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      20500,
      796,
      3275
    ],
    "start_token": 27,
    "end_token": 39,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      520,
      3255,
      257,
      11507,
      1988,
      287,
      281,
      4554,
      7885
    ],
    "label": "ml_signal",
    "reason": "Storing a parameter value in an instance variable"
  },
  {
    "line": 11,
    "text": "",
    "annotation": "\u2705 Best Practice: Define a custom exception class for specific error handling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 39,
    "end_token": 39,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      500,
      257,
      2183,
      6631,
      1398,
      329,
      2176,
      4049,
      9041
    ],
    "label": "best_practice",
    "reason": "Define a custom exception class for specific error handling"
  },
  {
    "line": 12,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of default parameter value for flexibility and ease of use",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 39,
    "end_token": 39,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      4277,
      11507,
      1988,
      329,
      13688,
      290,
      10152,
      286,
      779
    ],
    "label": "best_practice",
    "reason": "Use of default parameter value for flexibility and ease of use"
  },
  {
    "line": 14,
    "text": "    def __init__(self, message=\"not enough money\"):",
    "annotation": "\ud83e\udde0 ML Signal: Storing a parameter as an instance attribute, common pattern in class initializers",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      11593,
      15003,
      834,
      7,
      944,
      11,
      3275,
      2625,
      1662,
      1576,
      1637,
      1,
      2599
    ],
    "start_token": 39,
    "end_token": 56,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      520,
      3255,
      257,
      11507,
      355,
      281,
      4554,
      11688,
      11,
      2219,
      3912,
      287,
      1398,
      4238,
      11341
    ],
    "label": "ml_signal",
    "reason": "Storing a parameter as an instance attribute, common pattern in class initializers"
  },
  {
    "line": 13,
    "text": "class NotEnoughMoneyError(TraderError):",
    "annotation": "\u2705 Best Practice: Custom exception class for specific error handling",
    "confidence": 1.0,
    "tokens": [
      4871,
      1892,
      47323,
      26788,
      12331,
      7,
      2898,
      5067,
      12331,
      2599
    ],
    "start_token": 56,
    "end_token": 66,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8562,
      6631,
      1398,
      329,
      2176,
      4049,
      9041
    ],
    "label": "best_practice",
    "reason": "Custom exception class for specific error handling"
  },
  {
    "line": 14,
    "text": "    def __init__(self, message=\"not enough money\"):",
    "annotation": "\u2705 Best Practice: Provide a default value for the parameter to ensure the function can be called without arguments.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      11593,
      15003,
      834,
      7,
      944,
      11,
      3275,
      2625,
      1662,
      1576,
      1637,
      1,
      2599
    ],
    "start_token": 66,
    "end_token": 83,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      44290,
      257,
      4277,
      1988,
      329,
      262,
      11507,
      284,
      4155,
      262,
      2163,
      460,
      307,
      1444,
      1231,
      7159,
      13
    ],
    "label": "best_practice",
    "reason": "Provide a default value for the parameter to ensure the function can be called without arguments."
  },
  {
    "line": 16,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Storing a parameter value in an instance variable is a common pattern.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 83,
    "end_token": 83,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      520,
      3255,
      257,
      11507,
      1988,
      287,
      281,
      4554,
      7885,
      318,
      257,
      2219,
      3912,
      13
    ],
    "label": "ml_signal",
    "reason": "Storing a parameter value in an instance variable is a common pattern."
  },
  {
    "line": 17,
    "text": "",
    "annotation": "\u2705 Best Practice: Default argument values should be immutable to avoid unexpected behavior.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 83,
    "end_token": 83,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      15161,
      4578,
      3815,
      815,
      307,
      40139,
      284,
      3368,
      10059,
      4069,
      13
    ],
    "label": "best_practice",
    "reason": "Default argument values should be immutable to avoid unexpected behavior."
  },
  {
    "line": 19,
    "text": "    def __init__(self, message=\"not enough position\"):",
    "annotation": "\u2705 Best Practice: Storing the message in an instance variable for later use.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      11593,
      15003,
      834,
      7,
      944,
      11,
      3275,
      2625,
      1662,
      1576,
      2292,
      1,
      2599
    ],
    "start_token": 83,
    "end_token": 100,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      520,
      3255,
      262,
      3275,
      287,
      281,
      4554,
      7885,
      329,
      1568,
      779,
      13
    ],
    "label": "best_practice",
    "reason": "Storing the message in an instance variable for later use."
  },
  {
    "line": 19,
    "text": "    def __init__(self, message=\"not enough position\"):",
    "annotation": "\u2705 Best Practice: Using __all__ to define the public API of the module.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      11593,
      15003,
      834,
      7,
      944,
      11,
      3275,
      2625,
      1662,
      1576,
      2292,
      1,
      2599
    ],
    "start_token": 100,
    "end_token": 117,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      11593,
      439,
      834,
      284,
      8160,
      262,
      1171,
      7824,
      286,
      262,
      8265,
      13
    ],
    "label": "best_practice",
    "reason": "Using __all__ to define the public API of the module."
  }
]