[
  {
    "line": 4,
    "text": "from sqlalchemy.orm import relationship",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 0.5,
    "tokens": [
      6738,
      44161,
      282,
      26599,
      13,
      579,
      1330,
      2776
    ],
    "start_token": 0,
    "end_token": 8,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 8,
    "text": "from zvt.utils.decorator import to_string",
    "annotation": "\u2705 Best Practice: Naming convention for base classes should be consistent and descriptive.",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      12501,
      273,
      1352,
      1330,
      284,
      62,
      8841
    ],
    "start_token": 8,
    "end_token": 21,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      399,
      3723,
      9831,
      329,
      2779,
      6097,
      815,
      307,
      6414,
      290,
      35644,
      13
    ],
    "label": "best_practice",
    "reason": "Naming convention for base classes should be consistent and descriptive."
  },
  {
    "line": 12,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of a class variable to define the table name for ORM mapping",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 21,
    "end_token": 21,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      257,
      1398,
      7885,
      284,
      8160,
      262,
      3084,
      1438,
      329,
      6375,
      44,
      16855
    ],
    "label": "best_practice",
    "reason": "Use of a class variable to define the table name for ORM mapping"
  },
  {
    "line": 14,
    "text": "    \"\"\"",
    "annotation": "\u2705 Best Practice: Use of Column with String type and length for database schema definition",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      37227
    ],
    "start_token": 21,
    "end_token": 25,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      29201,
      351,
      10903,
      2099,
      290,
      4129,
      329,
      6831,
      32815,
      6770
    ],
    "label": "best_practice",
    "reason": "Use of Column with String type and length for database schema definition"
  },
  {
    "line": 16,
    "text": "    \"\"\"",
    "annotation": "\u2705 Best Practice: Use of Column with String type and length for database schema definition",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      37227
    ],
    "start_token": 25,
    "end_token": 29,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      29201,
      351,
      10903,
      2099,
      290,
      4129,
      329,
      6831,
      32815,
      6770
    ],
    "label": "best_practice",
    "reason": "Use of Column with String type and length for database schema definition"
  },
  {
    "line": 18,
    "text": "    __tablename__ = \"trader_info\"",
    "annotation": "\u2705 Best Practice: Use of Column with DateTime type for database schema definition",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      11593,
      8658,
      11925,
      480,
      834,
      796,
      366,
      2213,
      5067,
      62,
      10951,
      1
    ],
    "start_token": 29,
    "end_token": 44,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      29201,
      351,
      7536,
      7575,
      2099,
      329,
      6831,
      32815,
      6770
    ],
    "label": "best_practice",
    "reason": "Use of Column with DateTime type for database schema definition"
  },
  {
    "line": 20,
    "text": "    trader_name = Column(String(length=128))",
    "annotation": "\u2705 Best Practice: Use of Column with DateTime type for database schema definition",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      31791,
      62,
      3672,
      796,
      29201,
      7,
      10100,
      7,
      13664,
      28,
      12762,
      4008
    ],
    "start_token": 44,
    "end_token": 59,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      29201,
      351,
      7536,
      7575,
      2099,
      329,
      6831,
      32815,
      6770
    ],
    "label": "best_practice",
    "reason": "Use of Column with DateTime type for database schema definition"
  },
  {
    "line": 21,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of Column with String type and length for database schema definition",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 59,
    "end_token": 59,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      29201,
      351,
      10903,
      2099,
      290,
      4129,
      329,
      6831,
      32815,
      6770
    ],
    "label": "best_practice",
    "reason": "Use of Column with String type and length for database schema definition"
  },
  {
    "line": 24,
    "text": "    end_timestamp = Column(DateTime)",
    "annotation": "\u2705 Best Practice: Use of Column with String type and length for database schema definition",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      886,
      62,
      16514,
      27823,
      796,
      29201,
      7,
      10430,
      7575,
      8
    ],
    "start_token": 59,
    "end_token": 72,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      29201,
      351,
      10903,
      2099,
      290,
      4129,
      329,
      6831,
      32815,
      6770
    ],
    "label": "best_practice",
    "reason": "Use of Column with String type and length for database schema definition"
  },
  {
    "line": 27,
    "text": "    real_time = Column(Boolean)",
    "annotation": "\u2705 Best Practice: Use of Column with Boolean type for database schema definition",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1103,
      62,
      2435,
      796,
      29201,
      7,
      46120,
      13087,
      8
    ],
    "start_token": 72,
    "end_token": 84,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      29201,
      351,
      41146,
      2099,
      329,
      6831,
      32815,
      6770
    ],
    "label": "best_practice",
    "reason": "Use of Column with Boolean type for database schema definition"
  },
  {
    "line": 28,
    "text": "    kdata_use_begin_time = Column(Boolean)",
    "annotation": "\u2705 Best Practice: Use of Column with Boolean type for database schema definition",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      479,
      7890,
      62,
      1904,
      62,
      27471,
      62,
      2435,
      796,
      29201,
      7,
      46120,
      13087,
      8
    ],
    "start_token": 84,
    "end_token": 101,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      29201,
      351,
      41146,
      2099,
      329,
      6831,
      32815,
      6770
    ],
    "label": "best_practice",
    "reason": "Use of Column with Boolean type for database schema definition"
  },
  {
    "line": 30,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of Column with String type and length for database schema definition",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 101,
    "end_token": 101,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      29201,
      351,
      10903,
      2099,
      290,
      4129,
      329,
      6831,
      32815,
      6770
    ],
    "label": "best_practice",
    "reason": "Use of Column with String type and length for database schema definition"
  },
  {
    "line": 32,
    "text": "@to_string",
    "annotation": "\ud83e\udde0 ML Signal: Use of decorator pattern to enhance or modify class behavior",
    "confidence": 1.0,
    "tokens": [
      31,
      1462,
      62,
      8841
    ],
    "start_token": 101,
    "end_token": 105,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      11705,
      1352,
      3912,
      284,
      9494,
      393,
      13096,
      1398,
      4069
    ],
    "label": "ml_signal",
    "reason": "Use of decorator pattern to enhance or modify class behavior"
  },
  {
    "line": 27,
    "text": "    real_time = Column(Boolean)",
    "annotation": "\u2705 Best Practice: Define a clear and descriptive table name for ORM mapping",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1103,
      62,
      2435,
      796,
      29201,
      7,
      46120,
      13087,
      8
    ],
    "start_token": 105,
    "end_token": 117,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      500,
      257,
      1598,
      290,
      35644,
      3084,
      1438,
      329,
      6375,
      44,
      16855
    ],
    "label": "best_practice",
    "reason": "Define a clear and descriptive table name for ORM mapping"
  },
  {
    "line": 29,
    "text": "    kdata_adjust_type = Column(String(length=32))",
    "annotation": "\ud83e\udde0 ML Signal: Usage of financial attributes for account statistics",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      479,
      7890,
      62,
      23032,
      62,
      4906,
      796,
      29201,
      7,
      10100,
      7,
      13664,
      28,
      2624,
      4008
    ],
    "start_token": 117,
    "end_token": 135,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      3176,
      12608,
      329,
      1848,
      7869
    ],
    "label": "ml_signal",
    "reason": "Usage of financial attributes for account statistics"
  },
  {
    "line": 31,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of trader name as a string attribute",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 135,
    "end_token": 135,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      31791,
      1438,
      355,
      257,
      4731,
      11688
    ],
    "label": "ml_signal",
    "reason": "Usage of trader name as a string attribute"
  },
  {
    "line": 33,
    "text": "class AccountStats(TraderBase, Mixin):",
    "annotation": "\ud83e\udde0 ML Signal: Usage of cash as a financial attribute",
    "confidence": 0.5,
    "tokens": [
      4871,
      10781,
      29668,
      7,
      2898,
      5067,
      14881,
      11,
      15561,
      259,
      2599
    ],
    "start_token": 135,
    "end_token": 146,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      5003,
      355,
      257,
      3176,
      11688
    ],
    "label": "ml_signal",
    "reason": "Usage of cash as a financial attribute"
  },
  {
    "line": 35,
    "text": "    account stats of every day",
    "annotation": "\ud83e\udde0 ML Signal: Relationship mapping to another table, indicating a one-to-many or many-to-many relationship",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1848,
      9756,
      286,
      790,
      1110
    ],
    "start_token": 146,
    "end_token": 154,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39771,
      16855,
      284,
      1194,
      3084,
      11,
      12739,
      257,
      530,
      12,
      1462,
      12,
      21834,
      393,
      867,
      12,
      1462,
      12,
      21834,
      2776
    ],
    "label": "ml_signal",
    "reason": "Relationship mapping to another table, indicating a one-to-many or many-to-many relationship"
  },
  {
    "line": 37,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of value as a financial attribute",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 154,
    "end_token": 154,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      1988,
      355,
      257,
      3176,
      11688
    ],
    "label": "ml_signal",
    "reason": "Usage of value as a financial attribute"
  },
  {
    "line": 39,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of all_value as a financial attribute",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 154,
    "end_token": 154,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      477,
      62,
      8367,
      355,
      257,
      3176,
      11688
    ],
    "label": "ml_signal",
    "reason": "Usage of all_value as a financial attribute"
  },
  {
    "line": 41,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of profit as a financial attribute",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 154,
    "end_token": 154,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      7630,
      355,
      257,
      3176,
      11688
    ],
    "label": "ml_signal",
    "reason": "Usage of profit as a financial attribute"
  },
  {
    "line": 43,
    "text": "    trader_name = Column(String(length=128))",
    "annotation": "\ud83e\udde0 ML Signal: Usage of profit_rate as a financial attribute",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      31791,
      62,
      3672,
      796,
      29201,
      7,
      10100,
      7,
      13664,
      28,
      12762,
      4008
    ],
    "start_token": 154,
    "end_token": 169,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      7630,
      62,
      4873,
      355,
      257,
      3176,
      11688
    ],
    "label": "ml_signal",
    "reason": "Usage of profit_rate as a financial attribute"
  },
  {
    "line": 45,
    "text": "    cash = Column(Float)",
    "annotation": "\ud83e\udde0 ML Signal: Usage of closing as a boolean attribute to indicate state",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      5003,
      796,
      29201,
      7,
      43879,
      8
    ],
    "start_token": 169,
    "end_token": 178,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      9605,
      355,
      257,
      25131,
      11688,
      284,
      7603,
      1181
    ],
    "label": "ml_signal",
    "reason": "Usage of closing as a boolean attribute to indicate state"
  },
  {
    "line": 37,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Inheritance from TraderBase and Mixin indicates a pattern of using mixins for shared functionality",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 178,
    "end_token": 178,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47025,
      42942,
      422,
      41956,
      14881,
      290,
      15561,
      259,
      9217,
      257,
      3912,
      286,
      1262,
      5022,
      1040,
      329,
      4888,
      11244
    ],
    "label": "ml_signal",
    "reason": "Inheritance from TraderBase and Mixin indicates a pattern of using mixins for shared functionality"
  },
  {
    "line": 39,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of __tablename__ suggests ORM pattern for database table mapping",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 178,
    "end_token": 178,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      11593,
      8658,
      11925,
      480,
      834,
      5644,
      6375,
      44,
      3912,
      329,
      6831,
      3084,
      16855
    ],
    "label": "ml_signal",
    "reason": "Use of __tablename__ suggests ORM pattern for database table mapping"
  },
  {
    "line": 41,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of Column and String indicates ORM pattern for defining database schema",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 178,
    "end_token": 178,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      29201,
      290,
      10903,
      9217,
      6375,
      44,
      3912,
      329,
      16215,
      6831,
      32815
    ],
    "label": "ml_signal",
    "reason": "Use of Column and String indicates ORM pattern for defining database schema"
  },
  {
    "line": 43,
    "text": "    trader_name = Column(String(length=128))",
    "annotation": "\ud83e\udde0 ML Signal: Use of ForeignKey indicates a relational database pattern",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      31791,
      62,
      3672,
      796,
      29201,
      7,
      10100,
      7,
      13664,
      28,
      12762,
      4008
    ],
    "start_token": 178,
    "end_token": 193,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      8708,
      9218,
      9217,
      257,
      50126,
      6831,
      3912
    ],
    "label": "ml_signal",
    "reason": "Use of ForeignKey indicates a relational database pattern"
  },
  {
    "line": 45,
    "text": "    cash = Column(Float)",
    "annotation": "\ud83e\udde0 ML Signal: Use of relationship indicates ORM pattern for defining relationships between tables",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      5003,
      796,
      29201,
      7,
      43879,
      8
    ],
    "start_token": 193,
    "end_token": 202,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2776,
      9217,
      6375,
      44,
      3912,
      329,
      16215,
      6958,
      1022,
      8893
    ],
    "label": "ml_signal",
    "reason": "Use of relationship indicates ORM pattern for defining relationships between tables"
  },
  {
    "line": 47,
    "text": "    positions = relationship(\"Position\", back_populates=\"account_stats\")",
    "annotation": "\ud83e\udde0 ML Signal: Use of Float for financial data suggests a pattern of handling monetary values",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6116,
      796,
      2776,
      7203,
      26545,
      1600,
      736,
      62,
      12924,
      15968,
      2625,
      23317,
      62,
      34242,
      4943
    ],
    "start_token": 202,
    "end_token": 220,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      48436,
      329,
      3176,
      1366,
      5644,
      257,
      3912,
      286,
      9041,
      15331,
      3815
    ],
    "label": "ml_signal",
    "reason": "Use of Float for financial data suggests a pattern of handling monetary values"
  },
  {
    "line": 49,
    "text": "    value = Column(Float)",
    "annotation": "\ud83e\udde0 ML Signal: Use of Float for financial data suggests a pattern of handling monetary values",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1988,
      796,
      29201,
      7,
      43879,
      8
    ],
    "start_token": 220,
    "end_token": 229,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      48436,
      329,
      3176,
      1366,
      5644,
      257,
      3912,
      286,
      9041,
      15331,
      3815
    ],
    "label": "ml_signal",
    "reason": "Use of Float for financial data suggests a pattern of handling monetary values"
  },
  {
    "line": 51,
    "text": "    all_value = Column(Float)",
    "annotation": "\ud83e\udde0 ML Signal: Use of Float for financial data suggests a pattern of handling monetary values",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      477,
      62,
      8367,
      796,
      29201,
      7,
      43879,
      8
    ],
    "start_token": 229,
    "end_token": 240,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      48436,
      329,
      3176,
      1366,
      5644,
      257,
      3912,
      286,
      9041,
      15331,
      3815
    ],
    "label": "ml_signal",
    "reason": "Use of Float for financial data suggests a pattern of handling monetary values"
  },
  {
    "line": 53,
    "text": "    #: \u76c8\u4e8f",
    "annotation": "\ud83e\udde0 ML Signal: Use of Float for financial data suggests a pattern of handling monetary values",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      13328,
      249,
      230,
      12859,
      237
    ],
    "start_token": 240,
    "end_token": 250,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      48436,
      329,
      3176,
      1366,
      5644,
      257,
      3912,
      286,
      9041,
      15331,
      3815
    ],
    "label": "ml_signal",
    "reason": "Use of Float for financial data suggests a pattern of handling monetary values"
  },
  {
    "line": 55,
    "text": "    #: \u76c8\u4e8f\u6bd4\u4f8b",
    "annotation": "\ud83e\udde0 ML Signal: Use of Float for financial data suggests a pattern of handling monetary values",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      13328,
      249,
      230,
      12859,
      237,
      162,
      107,
      242,
      160,
      122,
      233
    ],
    "start_token": 250,
    "end_token": 266,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      48436,
      329,
      3176,
      1366,
      5644,
      257,
      3912,
      286,
      9041,
      15331,
      3815
    ],
    "label": "ml_signal",
    "reason": "Use of Float for financial data suggests a pattern of handling monetary values"
  },
  {
    "line": 57,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of Float for financial data suggests a pattern of handling monetary values",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 266,
    "end_token": 266,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      48436,
      329,
      3176,
      1366,
      5644,
      257,
      3912,
      286,
      9041,
      15331,
      3815
    ],
    "label": "ml_signal",
    "reason": "Use of Float for financial data suggests a pattern of handling monetary values"
  },
  {
    "line": 59,
    "text": "    closing = Column(Boolean)",
    "annotation": "\ud83e\udde0 ML Signal: Use of Float for financial data suggests a pattern of handling monetary values",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      9605,
      796,
      29201,
      7,
      46120,
      13087,
      8
    ],
    "start_token": 266,
    "end_token": 276,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      48436,
      329,
      3176,
      1366,
      5644,
      257,
      3912,
      286,
      9041,
      15331,
      3815
    ],
    "label": "ml_signal",
    "reason": "Use of Float for financial data suggests a pattern of handling monetary values"
  },
  {
    "line": 61,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of Float for financial data suggests a pattern of handling monetary values",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 276,
    "end_token": 276,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      48436,
      329,
      3176,
      1366,
      5644,
      257,
      3912,
      286,
      9041,
      15331,
      3815
    ],
    "label": "ml_signal",
    "reason": "Use of Float for financial data suggests a pattern of handling monetary values"
  },
  {
    "line": 61,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of Float for financial data suggests a pattern of handling monetary values",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 276,
    "end_token": 276,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      48436,
      329,
      3176,
      1366,
      5644,
      257,
      3912,
      286,
      9041,
      15331,
      3815
    ],
    "label": "ml_signal",
    "reason": "Use of Float for financial data suggests a pattern of handling monetary values"
  },
  {
    "line": 61,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of Integer for timestamps suggests a pattern of handling time-related data",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 276,
    "end_token": 276,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      34142,
      329,
      4628,
      395,
      9430,
      5644,
      257,
      3912,
      286,
      9041,
      640,
      12,
      5363,
      1366
    ],
    "label": "ml_signal",
    "reason": "Use of Integer for timestamps suggests a pattern of handling time-related data"
  },
  {
    "line": 53,
    "text": "    #: \u76c8\u4e8f",
    "annotation": "\u2705 Best Practice: Use of __tablename__ for ORM class to specify the database table name",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      13328,
      249,
      230,
      12859,
      237
    ],
    "start_token": 276,
    "end_token": 286,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      8658,
      11925,
      480,
      834,
      329,
      6375,
      44,
      1398,
      284,
      11986,
      262,
      6831,
      3084,
      1438
    ],
    "label": "best_practice",
    "reason": "Use of __tablename__ for ORM class to specify the database table name"
  },
  {
    "line": 55,
    "text": "    #: \u76c8\u4e8f\u6bd4\u4f8b",
    "annotation": "\u2705 Best Practice: Use of Column with String type for trader_name ensures proper database schema definition",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      25,
      13328,
      249,
      230,
      12859,
      237,
      162,
      107,
      242,
      160,
      122,
      233
    ],
    "start_token": 286,
    "end_token": 302,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      29201,
      351,
      10903,
      2099,
      329,
      31791,
      62,
      3672,
      19047,
      1774,
      6831,
      32815,
      6770
    ],
    "label": "best_practice",
    "reason": "Use of Column with String type for trader_name ensures proper database schema definition"
  },
  {
    "line": 57,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of Column with Float type for order_price ensures proper database schema definition",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 302,
    "end_token": 302,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      29201,
      351,
      48436,
      2099,
      329,
      1502,
      62,
      20888,
      19047,
      1774,
      6831,
      32815,
      6770
    ],
    "label": "best_practice",
    "reason": "Use of Column with Float type for order_price ensures proper database schema definition"
  },
  {
    "line": 59,
    "text": "    closing = Column(Boolean)",
    "annotation": "\u2705 Best Practice: Use of Column with Float type for order_amount ensures proper database schema definition",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      9605,
      796,
      29201,
      7,
      46120,
      13087,
      8
    ],
    "start_token": 302,
    "end_token": 312,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      29201,
      351,
      48436,
      2099,
      329,
      1502,
      62,
      17287,
      19047,
      1774,
      6831,
      32815,
      6770
    ],
    "label": "best_practice",
    "reason": "Use of Column with Float type for order_amount ensures proper database schema definition"
  },
  {
    "line": 61,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of Column with String type for order_type ensures proper database schema definition",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 312,
    "end_token": 312,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      29201,
      351,
      10903,
      2099,
      329,
      1502,
      62,
      4906,
      19047,
      1774,
      6831,
      32815,
      6770
    ],
    "label": "best_practice",
    "reason": "Use of Column with String type for order_type ensures proper database schema definition"
  },
  {
    "line": 61,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of Column with String type for status ensures proper database schema definition",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 312,
    "end_token": 312,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      29201,
      351,
      10903,
      2099,
      329,
      3722,
      19047,
      1774,
      6831,
      32815,
      6770
    ],
    "label": "best_practice",
    "reason": "Use of Column with String type for status ensures proper database schema definition"
  },
  {
    "line": 61,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of Column with String type for level ensures proper database schema definition",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 312,
    "end_token": 312,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      29201,
      351,
      10903,
      2099,
      329,
      1241,
      19047,
      1774,
      6831,
      32815,
      6770
    ],
    "label": "best_practice",
    "reason": "Use of Column with String type for level ensures proper database schema definition"
  },
  {
    "line": 61,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: register_schema function call indicates a pattern for setting up database schemas",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 312,
    "end_token": 312,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7881,
      62,
      15952,
      2611,
      2163,
      869,
      9217,
      257,
      3912,
      329,
      4634,
      510,
      6831,
      3897,
      5356
    ],
    "label": "ml_signal",
    "reason": "register_schema function call indicates a pattern for setting up database schemas"
  },
  {
    "line": 61,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of __all__ to define public API of the module",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 312,
    "end_token": 312,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265
    ],
    "label": "best_practice",
    "reason": "Use of __all__ to define public API of the module"
  }
]