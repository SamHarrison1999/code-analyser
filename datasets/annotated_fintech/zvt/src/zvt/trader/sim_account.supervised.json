[
  {
    "line": 4,
    "text": "from typing import List, Optional",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      19720,
      1330,
      7343,
      11,
      32233
    ],
    "start_token": 0,
    "end_token": 6,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 6,
    "text": "from zvt.api.kdata import get_kdata, get_kdata_schema",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      15042,
      13,
      74,
      7890,
      1330,
      651,
      62,
      74,
      7890,
      11,
      651,
      62,
      74,
      7890,
      62,
      15952,
      2611
    ],
    "start_token": 6,
    "end_token": 27,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 8,
    "text": "from zvt.contract.api import get_db_session, decode_entity_id",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      28484,
      13,
      15042,
      1330,
      651,
      62,
      9945,
      62,
      29891,
      11,
      36899,
      62,
      26858,
      62,
      312
    ],
    "start_token": 27,
    "end_token": 46,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 8,
    "text": "from zvt.contract.api import get_db_session, decode_entity_id",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      28484,
      13,
      15042,
      1330,
      651,
      62,
      9945,
      62,
      29891,
      11,
      36899,
      62,
      26858,
      62,
      312
    ],
    "start_token": 46,
    "end_token": 65,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 15,
    "text": "    WrongKdataError,",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      28843,
      42,
      7890,
      12331,
      11
    ],
    "start_token": 65,
    "end_token": 73,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 20,
    "text": "from zvt.utils.pd_utils import pd_is_not_null",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      30094,
      62,
      26791,
      1330,
      279,
      67,
      62,
      271,
      62,
      1662,
      62,
      8423
    ],
    "start_token": 73,
    "end_token": 91,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 22,
    "text": "from zvt.utils.utils import fill_domain_from_dict",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      26791,
      1330,
      6070,
      62,
      27830,
      62,
      6738,
      62,
      11600
    ],
    "start_token": 91,
    "end_token": 106,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 22,
    "text": "from zvt.utils.utils import fill_domain_from_dict",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      26791,
      1330,
      6070,
      62,
      27830,
      62,
      6738,
      62,
      11600
    ],
    "start_token": 106,
    "end_token": 121,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 22,
    "text": "from zvt.utils.utils import fill_domain_from_dict",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      26791,
      1330,
      6070,
      62,
      27830,
      62,
      6738,
      62,
      11600
    ],
    "start_token": 121,
    "end_token": 136,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 22,
    "text": "from zvt.utils.utils import fill_domain_from_dict",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      26791,
      1330,
      6070,
      62,
      27830,
      62,
      6738,
      62,
      11600
    ],
    "start_token": 136,
    "end_token": 151,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 22,
    "text": "from zvt.utils.utils import fill_domain_from_dict",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      26791,
      1330,
      6070,
      62,
      27830,
      62,
      6738,
      62,
      11600
    ],
    "start_token": 151,
    "end_token": 166,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 39,
    "text": "        keep_history=False,",
    "annotation": "\u2705 Best Practice: Use of logging for tracking and debugging",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1394,
      62,
      23569,
      28,
      25101,
      11
    ],
    "start_token": 166,
    "end_token": 179,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      18931,
      329,
      9646,
      290,
      28769
    ],
    "label": "best_practice",
    "reason": "Use of logging for tracking and debugging"
  },
  {
    "line": 41,
    "text": "        kdata_use_begin_time=False,",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of entity schema, indicating a pattern of object-oriented design",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      479,
      7890,
      62,
      1904,
      62,
      27471,
      62,
      2435,
      28,
      25101,
      11
    ],
    "start_token": 179,
    "end_token": 197,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      9312,
      32815,
      11,
      12739,
      257,
      3912,
      286,
      2134,
      12,
      17107,
      1486
    ],
    "label": "ml_signal",
    "reason": "Initialization of entity schema, indicating a pattern of object-oriented design"
  },
  {
    "line": 43,
    "text": "        self.logger = logging.getLogger(self.__class__.__name__)",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of financial parameters, useful for financial model training",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      6404,
      1362,
      796,
      18931,
      13,
      1136,
      11187,
      1362,
      7,
      944,
      13,
      834,
      4871,
      834,
      13,
      834,
      3672,
      834,
      8
    ],
    "start_token": 197,
    "end_token": 225,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      3176,
      10007,
      11,
      4465,
      329,
      3176,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Initialization of financial parameters, useful for financial model training"
  },
  {
    "line": 45,
    "text": "        self.entity_schema = entity_schema",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of financial parameters, useful for financial model training",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      26858,
      62,
      15952,
      2611,
      796,
      9312,
      62,
      15952,
      2611
    ],
    "start_token": 225,
    "end_token": 243,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      3176,
      10007,
      11,
      4465,
      329,
      3176,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Initialization of financial parameters, useful for financial model training"
  },
  {
    "line": 47,
    "text": "        self.buy_cost = buy_cost",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of financial parameters, useful for financial model training",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      17846,
      62,
      15805,
      796,
      2822,
      62,
      15805
    ],
    "start_token": 243,
    "end_token": 259,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      3176,
      10007,
      11,
      4465,
      329,
      3176,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Initialization of financial parameters, useful for financial model training"
  },
  {
    "line": 49,
    "text": "        self.slippage = slippage",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of financial parameters, useful for financial model training",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      6649,
      3974,
      496,
      796,
      1017,
      3974,
      496
    ],
    "start_token": 259,
    "end_token": 275,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      3176,
      10007,
      11,
      4465,
      329,
      3176,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Initialization of financial parameters, useful for financial model training"
  },
  {
    "line": 51,
    "text": "        self.adjust_type = adjust_type",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of mode settings, indicating a pattern of configurable behavior",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      23032,
      62,
      4906,
      796,
      4532,
      62,
      4906
    ],
    "start_token": 275,
    "end_token": 291,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      4235,
      6460,
      11,
      12739,
      257,
      3912,
      286,
      4566,
      11970,
      4069
    ],
    "label": "ml_signal",
    "reason": "Initialization of mode settings, indicating a pattern of configurable behavior"
  },
  {
    "line": 53,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of adjustment type, indicating a pattern of configurable behavior",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 291,
    "end_token": 291,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      15068,
      2099,
      11,
      12739,
      257,
      3912,
      286,
      4566,
      11970,
      4069
    ],
    "label": "ml_signal",
    "reason": "Initialization of adjustment type, indicating a pattern of configurable behavior"
  },
  {
    "line": 55,
    "text": "        self.provider = provider",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of trader name, indicating a pattern of user-specific configuration",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      15234,
      1304,
      796,
      10131
    ],
    "start_token": 291,
    "end_token": 304,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      31791,
      1438,
      11,
      12739,
      257,
      3912,
      286,
      2836,
      12,
      11423,
      8398
    ],
    "label": "ml_signal",
    "reason": "Initialization of trader name, indicating a pattern of user-specific configuration"
  },
  {
    "line": 56,
    "text": "        self.level = level",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential risk if `get_db_session` is not properly secured",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      5715,
      796,
      1241
    ],
    "start_token": 304,
    "end_token": 316,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2526,
      611,
      4600,
      1136,
      62,
      9945,
      62,
      29891,
      63,
      318,
      407,
      6105,
      13659
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential risk if `get_db_session` is not properly secured"
  },
  {
    "line": 60,
    "text": "        self.kdata_use_begin_time = kdata_use_begin_time",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of provider, indicating a pattern of external data source usage",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      74,
      7890,
      62,
      1904,
      62,
      27471,
      62,
      2435,
      796,
      479,
      7890,
      62,
      1904,
      62,
      27471,
      62,
      2435
    ],
    "start_token": 316,
    "end_token": 342,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      10131,
      11,
      12739,
      257,
      3912,
      286,
      7097,
      1366,
      2723,
      8748
    ],
    "label": "ml_signal",
    "reason": "Initialization of provider, indicating a pattern of external data source usage"
  },
  {
    "line": 61,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of level, indicating a pattern of configurable behavior",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 342,
    "end_token": 342,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      1241,
      11,
      12739,
      257,
      3912,
      286,
      4566,
      11970,
      4069
    ],
    "label": "ml_signal",
    "reason": "Initialization of level, indicating a pattern of configurable behavior"
  },
  {
    "line": 63,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of timestamp, indicating a pattern of time-based operations",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 342,
    "end_token": 342,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      41033,
      11,
      12739,
      257,
      3912,
      286,
      640,
      12,
      3106,
      4560
    ],
    "label": "ml_signal",
    "reason": "Initialization of timestamp, indicating a pattern of time-based operations"
  },
  {
    "line": 65,
    "text": "            f\"init_account,holding size:{len(self.account.positions)} profit:{self.account.profit} input_money:{self.account.input_money} \"",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of history settings, indicating a pattern of data retention configuration",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      277,
      1,
      15003,
      62,
      23317,
      11,
      19216,
      2546,
      29164,
      11925,
      7,
      944,
      13,
      23317,
      13,
      1930,
      1756,
      38165,
      7630,
      29164,
      944,
      13,
      23317,
      13,
      9183,
      92,
      5128,
      62,
      26316,
      29164,
      944,
      13,
      23317,
      13,
      15414,
      62,
      26316,
      92,
      366
    ],
    "start_token": 342,
    "end_token": 392,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      2106,
      6460,
      11,
      12739,
      257,
      3912,
      286,
      1366,
      21545,
      8398
    ],
    "label": "ml_signal",
    "reason": "Initialization of history settings, indicating a pattern of data retention configuration"
  },
  {
    "line": 67,
    "text": "        )",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of real-time settings, indicating a pattern of real-time processing",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 392,
    "end_token": 400,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      1103,
      12,
      2435,
      6460,
      11,
      12739,
      257,
      3912,
      286,
      1103,
      12,
      2435,
      7587
    ],
    "label": "ml_signal",
    "reason": "Initialization of real-time settings, indicating a pattern of real-time processing"
  },
  {
    "line": 69,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of data usage settings, indicating a pattern of data processing configuration",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 400,
    "end_token": 400,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      1366,
      8748,
      6460,
      11,
      12739,
      257,
      3912,
      286,
      1366,
      7587,
      8398
    ],
    "label": "ml_signal",
    "reason": "Initialization of data usage settings, indicating a pattern of data processing configuration"
  },
  {
    "line": 71,
    "text": "        self.account.input_money += money",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of account, indicating a pattern of financial account management",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      23317,
      13,
      15414,
      62,
      26316,
      15853,
      1637
    ],
    "start_token": 400,
    "end_token": 416,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      1848,
      11,
      12739,
      257,
      3912,
      286,
      3176,
      1848,
      4542
    ],
    "label": "ml_signal",
    "reason": "Initialization of account, indicating a pattern of financial account management"
  },
  {
    "line": 73,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of formatted strings for clear and informative logging",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 416,
    "end_token": 416,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      39559,
      13042,
      329,
      1598,
      290,
      30304,
      18931
    ],
    "label": "best_practice",
    "reason": "Use of formatted strings for clear and informative logging"
  },
  {
    "line": 77,
    "text": "        if trader_info:",
    "annotation": "\u2705 Best Practice: Use of logging for tracking and debugging",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      31791,
      62,
      10951,
      25
    ],
    "start_token": 416,
    "end_token": 428,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      18931,
      329,
      9646,
      290,
      28769
    ],
    "label": "best_practice",
    "reason": "Use of logging for tracking and debugging"
  },
  {
    "line": 62,
    "text": "        self.account = self.init_account()",
    "annotation": "\ud83e\udde0 ML Signal: Default parameter value usage",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      23317,
      796,
      2116,
      13,
      15003,
      62,
      23317,
      3419
    ],
    "start_token": 428,
    "end_token": 445,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15161,
      11507,
      1988,
      8748
    ],
    "label": "ml_signal",
    "reason": "Default parameter value usage"
  },
  {
    "line": 64,
    "text": "        account_info = (",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for integer overflow if 'money' is very large",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1848,
      62,
      10951,
      796,
      357
    ],
    "start_token": 445,
    "end_token": 457,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      18253,
      30343,
      611,
      705,
      26316,
      6,
      318,
      845,
      1588
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for integer overflow if 'money' is very large"
  },
  {
    "line": 66,
    "text": "            f\"cash:{self.account.cash} value:{self.account.value} all_value:{self.account.all_value}\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for integer overflow if 'money' is very large",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      277,
      1,
      30350,
      29164,
      944,
      13,
      23317,
      13,
      30350,
      92,
      1988,
      29164,
      944,
      13,
      23317,
      13,
      8367,
      92,
      477,
      62,
      8367,
      29164,
      944,
      13,
      23317,
      13,
      439,
      62,
      8367,
      36786
    ],
    "start_token": 457,
    "end_token": 498,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      18253,
      30343,
      611,
      705,
      26316,
      6,
      318,
      845,
      1588
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for integer overflow if 'money' is very large"
  },
  {
    "line": 65,
    "text": "            f\"init_account,holding size:{len(self.account.positions)} profit:{self.account.profit} input_money:{self.account.input_money} \"",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a function to clear account data, indicating a reset or cleanup operation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      277,
      1,
      15003,
      62,
      23317,
      11,
      19216,
      2546,
      29164,
      11925,
      7,
      944,
      13,
      23317,
      13,
      1930,
      1756,
      38165,
      7630,
      29164,
      944,
      13,
      23317,
      13,
      9183,
      92,
      5128,
      62,
      26316,
      29164,
      944,
      13,
      23317,
      13,
      15414,
      62,
      26316,
      92,
      366
    ],
    "start_token": 498,
    "end_token": 548,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      2163,
      284,
      1598,
      1848,
      1366,
      11,
      12739,
      257,
      13259,
      393,
      27425,
      4905
    ],
    "label": "ml_signal",
    "reason": "Usage of a function to clear account data, indicating a reset or cleanup operation"
  },
  {
    "line": 68,
    "text": "        self.logger.info(account_info)",
    "annotation": "\ud83e\udde0 ML Signal: Logging a warning message, indicating an important event or state",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      6404,
      1362,
      13,
      10951,
      7,
      23317,
      62,
      10951,
      8
    ],
    "start_token": 548,
    "end_token": 566,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      257,
      6509,
      3275,
      11,
      12739,
      281,
      1593,
      1785,
      393,
      1181
    ],
    "label": "ml_signal",
    "reason": "Logging a warning message, indicating an important event or state"
  },
  {
    "line": 69,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential information disclosure through logging sensitive trader information",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 566,
    "end_token": 566,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      1321,
      13019,
      832,
      18931,
      8564,
      31791,
      1321
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential information disclosure through logging sensitive trader information"
  },
  {
    "line": 71,
    "text": "        self.account.input_money += money",
    "annotation": "\ud83e\udde0 ML Signal: Function call to clear trader data, indicating data modification or deletion",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      23317,
      13,
      15414,
      62,
      26316,
      15853,
      1637
    ],
    "start_token": 566,
    "end_token": 582,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      284,
      1598,
      31791,
      1366,
      11,
      12739,
      1366,
      17613,
      393,
      39948
    ],
    "label": "ml_signal",
    "reason": "Function call to clear trader data, indicating data modification or deletion"
  },
  {
    "line": 72,
    "text": "        self.account.cash += money",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Risk of unintended data loss or corruption when clearing trader data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      23317,
      13,
      30350,
      15853,
      1637
    ],
    "start_token": 582,
    "end_token": 596,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      19602,
      286,
      30261,
      1366,
      2994,
      393,
      9253,
      618,
      17304,
      31791,
      1366
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Risk of unintended data loss or corruption when clearing trader data"
  },
  {
    "line": 70,
    "text": "    def input_money(self, money=1000000):",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on a boolean flag (self.keep_history) can indicate different user preferences or modes of operation.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      5128,
      62,
      26316,
      7,
      944,
      11,
      1637,
      28,
      16,
      10535,
      2599
    ],
    "start_token": 596,
    "end_token": 611,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      257,
      25131,
      6056,
      357,
      944,
      13,
      14894,
      62,
      23569,
      8,
      460,
      7603,
      1180,
      2836,
      15387,
      393,
      12881,
      286,
      4905,
      13
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on a boolean flag (self.keep_history) can indicate different user preferences or modes of operation."
  },
  {
    "line": 72,
    "text": "        self.account.cash += money",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential data loss if clear_account() removes important data without confirmation.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      23317,
      13,
      30350,
      15853,
      1637
    ],
    "start_token": 611,
    "end_token": 625,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      1366,
      2994,
      611,
      1598,
      62,
      23317,
      3419,
      20694,
      1593,
      1366,
      1231,
      12641,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential data loss if clear_account() removes important data without confirmation."
  },
  {
    "line": 75,
    "text": "        trader_info = get_trader_info(session=self.session, trader_name=self.trader_name, return_type=\"domain\", limit=1)",
    "annotation": "\ud83e\udde0 ML Signal: Loading existing account data suggests a pattern of resuming or continuing previous sessions.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      31791,
      62,
      10951,
      796,
      651,
      62,
      2213,
      5067,
      62,
      10951,
      7,
      29891,
      28,
      944,
      13,
      29891,
      11,
      31791,
      62,
      3672,
      28,
      944,
      13,
      2213,
      5067,
      62,
      3672,
      11,
      1441,
      62,
      4906,
      2625,
      27830,
      1600,
      4179,
      28,
      16,
      8
    ],
    "start_token": 625,
    "end_token": 670,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      12320,
      4683,
      1848,
      1366,
      5644,
      257,
      3912,
      286,
      581,
      12595,
      393,
      8282,
      2180,
      10991,
      13
    ],
    "label": "ml_signal",
    "reason": "Loading existing account data suggests a pattern of resuming or continuing previous sessions."
  },
  {
    "line": 77,
    "text": "        if trader_info:",
    "annotation": "\ud83e\udde0 ML Signal: Use of dynamic entity type naming can indicate flexible or dynamic schema usage.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      31791,
      62,
      10951,
      25
    ],
    "start_token": 670,
    "end_token": 682,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      8925,
      9312,
      2099,
      19264,
      460,
      7603,
      12846,
      393,
      8925,
      32815,
      8748,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of dynamic entity type naming can indicate flexible or dynamic schema usage."
  },
  {
    "line": 92,
    "text": "        # init trader info",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Direct database session manipulation without error handling can lead to unhandled exceptions.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      2315,
      31791,
      7508
    ],
    "start_token": 682,
    "end_token": 693,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      4128,
      6831,
      6246,
      17512,
      1231,
      4049,
      9041,
      460,
      1085,
      284,
      555,
      38788,
      13269,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Direct database session manipulation without error handling can lead to unhandled exceptions."
  },
  {
    "line": 92,
    "text": "        # init trader info",
    "annotation": "\ud83e\udde0 ML Signal: Returning a new account with initial values can indicate a pattern of initializing or resetting state.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      2315,
      31791,
      7508
    ],
    "start_token": 693,
    "end_token": 704,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      42882,
      257,
      649,
      1848,
      351,
      4238,
      3815,
      460,
      7603,
      257,
      3912,
      286,
      4238,
      2890,
      393,
      13259,
      889,
      1181,
      13
    ],
    "label": "ml_signal",
    "reason": "Returning a new account with initial values can indicate a pattern of initializing or resetting state."
  },
  {
    "line": 103,
    "text": "            real_time=self.real_time,",
    "annotation": "\ud83e\udde0 ML Signal: Use of query with filters and ordering",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1103,
      62,
      2435,
      28,
      944,
      13,
      5305,
      62,
      2435,
      11
    ],
    "start_token": 704,
    "end_token": 725,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      12405,
      351,
      16628,
      290,
      16216
    ],
    "label": "ml_signal",
    "reason": "Use of query with filters and ordering"
  },
  {
    "line": 112,
    "text": "            timestamp=self.start_timestamp,",
    "annotation": "\u2705 Best Practice: Type hinting for better readability and maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      41033,
      28,
      944,
      13,
      9688,
      62,
      16514,
      27823,
      11
    ],
    "start_token": 725,
    "end_token": 745,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      1365,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting for better readability and maintainability"
  },
  {
    "line": 114,
    "text": "            cash=self.base_capital,",
    "annotation": "\u2705 Best Practice: Use of from_orm for converting ORM objects to models",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      5003,
      28,
      944,
      13,
      8692,
      62,
      27544,
      11
    ],
    "start_token": 745,
    "end_token": 764,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      422,
      62,
      579,
      329,
      23202,
      6375,
      44,
      5563,
      284,
      4981
    ],
    "label": "best_practice",
    "reason": "Use of from_orm for converting ORM objects to models"
  },
  {
    "line": 117,
    "text": "            value=0,",
    "annotation": "\u2705 Best Practice: Use of helper function to fill domain object from a dictionary",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1988,
      28,
      15,
      11
    ],
    "start_token": 764,
    "end_token": 779,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      31904,
      2163,
      284,
      6070,
      7386,
      2134,
      422,
      257,
      22155
    ],
    "label": "best_practice",
    "reason": "Use of helper function to fill domain object from a dictionary"
  },
  {
    "line": 119,
    "text": "        )",
    "annotation": "\u2705 Best Practice: Type hinting for better readability and maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 779,
    "end_token": 787,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      1365,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting for better readability and maintainability"
  },
  {
    "line": 122,
    "text": "        records = AccountStats.query_data(",
    "annotation": "\u2705 Best Practice: Use of from_orm for converting ORM objects to models",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4406,
      796,
      10781,
      29668,
      13,
      22766,
      62,
      7890,
      7
    ],
    "start_token": 787,
    "end_token": 803,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      422,
      62,
      579,
      329,
      23202,
      6375,
      44,
      5563,
      284,
      4981
    ],
    "label": "best_practice",
    "reason": "Use of from_orm for converting ORM objects to models"
  },
  {
    "line": 124,
    "text": "            order=AccountStats.timestamp.desc(),",
    "annotation": "\ud83e\udde0 ML Signal: Logging of current position for debugging",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1502,
      28,
      30116,
      29668,
      13,
      16514,
      27823,
      13,
      20147,
      22784
    ],
    "start_token": 803,
    "end_token": 824,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      286,
      1459,
      2292,
      329,
      28769
    ],
    "label": "ml_signal",
    "reason": "Logging of current position for debugging"
  },
  {
    "line": 127,
    "text": "        )",
    "annotation": "\u2705 Best Practice: Use of helper function to fill domain object from a dictionary",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 824,
    "end_token": 832,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      31904,
      2163,
      284,
      6070,
      7386,
      2134,
      422,
      257,
      22155
    ],
    "label": "best_practice",
    "reason": "Use of helper function to fill domain object from a dictionary"
  },
  {
    "line": 125,
    "text": "            limit=1,",
    "annotation": "\ud83e\udde0 ML Signal: Logging usage pattern for tracking events",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4179,
      28,
      16,
      11
    ],
    "start_token": 832,
    "end_token": 847,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      8748,
      3912,
      329,
      9646,
      2995
    ],
    "label": "ml_signal",
    "reason": "Logging usage pattern for tracking events"
  },
  {
    "line": 127,
    "text": "        )",
    "annotation": "\u2705 Best Practice: Check if the timestamp is the same as the start timestamp",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 847,
    "end_token": 855,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      611,
      262,
      41033,
      318,
      262,
      976,
      355,
      262,
      923,
      41033
    ],
    "label": "best_practice",
    "reason": "Check if the timestamp is the same as the start timestamp"
  },
  {
    "line": 130,
    "text": "        latest_record: AccountStats = records[0]",
    "annotation": "\ud83e\udde0 ML Signal: Account loading pattern when trading opens",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3452,
      62,
      22105,
      25,
      10781,
      29668,
      796,
      4406,
      58,
      15,
      60
    ],
    "start_token": 855,
    "end_token": 873,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      10781,
      11046,
      3912,
      618,
      7313,
      9808
    ],
    "label": "ml_signal",
    "reason": "Account loading pattern when trading opens"
  },
  {
    "line": 129,
    "text": "            return self.account",
    "annotation": "\u2705 Best Practice: Define a docstring to describe the purpose and parameters of the function",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      2116,
      13,
      23317
    ],
    "start_token": 873,
    "end_token": 888,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2896,
      500,
      257,
      2205,
      8841,
      284,
      6901,
      262,
      4007,
      290,
      10007,
      286,
      262,
      2163
    ],
    "label": "best_practice",
    "reason": "Define a docstring to describe the purpose and parameters of the function"
  },
  {
    "line": 131,
    "text": "",
    "annotation": "\u2705 Best Practice: Consider logging the error for better traceability and debugging",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 888,
    "end_token": 888,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      18931,
      262,
      4049,
      329,
      1365,
      12854,
      1799,
      290,
      28769
    ],
    "label": "best_practice",
    "reason": "Consider logging the error for better traceability and debugging"
  },
  {
    "line": 131,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Method definition with a timestamp parameter, indicating time-based event handling",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 888,
    "end_token": 888,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      6770,
      351,
      257,
      41033,
      11507,
      11,
      12739,
      640,
      12,
      3106,
      1785,
      9041
    ],
    "label": "ml_signal",
    "reason": "Method definition with a timestamp parameter, indicating time-based event handling"
  },
  {
    "line": 134,
    "text": "        account = AccountStats()",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over a list of objects to process each one",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1848,
      796,
      10781,
      29668,
      3419
    ],
    "start_token": 888,
    "end_token": 900,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      257,
      1351,
      286,
      5563,
      284,
      1429,
      1123,
      530
    ],
    "label": "ml_signal",
    "reason": "Iterating over a list of objects to process each one"
  },
  {
    "line": 136,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Method call pattern for handling individual items",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 900,
    "end_token": 900,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      869,
      3912,
      329,
      9041,
      1981,
      3709
    ],
    "label": "ml_signal",
    "reason": "Method call pattern for handling individual items"
  },
  {
    "line": 140,
    "text": "            self.logger.debug(\"current position:{}\".format(position_model))",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Catching broad exceptions can hide specific error types",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      6404,
      1362,
      13,
      24442,
      7203,
      14421,
      2292,
      29164,
      92,
      1911,
      18982,
      7,
      9150,
      62,
      19849,
      4008
    ],
    "start_token": 900,
    "end_token": 929,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      327,
      19775,
      3154,
      13269,
      460,
      7808,
      2176,
      4049,
      3858
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Catching broad exceptions can hide specific error types"
  },
  {
    "line": 141,
    "text": "            position = Position()",
    "annotation": "\ud83e\udde0 ML Signal: Logging exceptions for error tracking",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2292,
      796,
      23158,
      3419
    ],
    "start_token": 929,
    "end_token": 944,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      13269,
      329,
      4049,
      9646
    ],
    "label": "ml_signal",
    "reason": "Logging exceptions for error tracking"
  },
  {
    "line": 143,
    "text": "            positions.append(position)",
    "annotation": "\ud83e\udde0 ML Signal: Error handling pattern with additional context",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6116,
      13,
      33295,
      7,
      9150,
      8
    ],
    "start_token": 944,
    "end_token": 961,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      13047,
      9041,
      3912,
      351,
      3224,
      4732
    ],
    "label": "ml_signal",
    "reason": "Error handling pattern with additional context"
  },
  {
    "line": 143,
    "text": "            positions.append(position)",
    "annotation": "\ud83e\udde0 ML Signal: Mapping trading signal type to order type",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6116,
      13,
      33295,
      7,
      9150,
      8
    ],
    "start_token": 961,
    "end_token": 978,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      337,
      5912,
      7313,
      6737,
      2099,
      284,
      1502,
      2099
    ],
    "label": "ml_signal",
    "reason": "Mapping trading signal type to order type"
  },
  {
    "line": 147,
    "text": "        return account",
    "annotation": "\ud83e\udde0 ML Signal: Fetching kdata based on trading signal parameters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      1848
    ],
    "start_token": 978,
    "end_token": 987,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      376,
      7569,
      278,
      479,
      7890,
      1912,
      319,
      7313,
      6737,
      10007
    ],
    "label": "ml_signal",
    "reason": "Fetching kdata based on trading signal parameters"
  },
  {
    "line": 159,
    "text": "        pass",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Generic exception handling",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1208
    ],
    "start_token": 987,
    "end_token": 995,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      42044,
      6631,
      9041
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Generic exception handling"
  },
  {
    "line": 163,
    "text": "            try:",
    "annotation": "\ud83e\udde0 ML Signal: Decoding entity ID from kdata",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1949,
      25
    ],
    "start_token": 995,
    "end_token": 1008,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      4280,
      7656,
      9312,
      4522,
      422,
      479,
      7890
    ],
    "label": "ml_signal",
    "reason": "Decoding entity ID from kdata"
  },
  {
    "line": 171,
    "text": "        happen_timestamp = trading_signal.happen_timestamp",
    "annotation": "\ud83e\udde0 ML Signal: Ordering by position percentage",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1645,
      62,
      16514,
      27823,
      796,
      7313,
      62,
      12683,
      282,
      13,
      71,
      1324,
      268,
      62,
      16514,
      27823
    ],
    "start_token": 1008,
    "end_token": 1031,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8284,
      278,
      416,
      2292,
      5873
    ],
    "label": "ml_signal",
    "reason": "Ordering by position percentage"
  },
  {
    "line": 179,
    "text": "                    level=trading_level,",
    "annotation": "\ud83e\udde0 ML Signal: Ordering by money amount",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1241,
      28,
      2213,
      4980,
      62,
      5715,
      11
    ],
    "start_token": 1031,
    "end_token": 1057,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8284,
      278,
      416,
      1637,
      2033
    ],
    "label": "ml_signal",
    "reason": "Ordering by money amount"
  },
  {
    "line": 188,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Ordering by amount",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 1057,
    "end_token": 1057,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8284,
      278,
      416,
      2033
    ],
    "label": "ml_signal",
    "reason": "Ordering by amount"
  },
  {
    "line": 196,
    "text": "                        self.order_by_position_pct(",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Assertion used for control flow",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      2875,
      62,
      1525,
      62,
      9150,
      62,
      79,
      310,
      7
    ],
    "start_token": 1057,
    "end_token": 1091,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      2195,
      861,
      295,
      973,
      329,
      1630,
      5202
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Assertion used for control flow"
  },
  {
    "line": 196,
    "text": "                        self.order_by_position_pct(",
    "annotation": "\u2705 Best Practice: Logging warnings for ignored signals",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      2875,
      62,
      1525,
      62,
      9150,
      62,
      79,
      310,
      7
    ],
    "start_token": 1091,
    "end_token": 1125,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5972,
      2667,
      14601,
      329,
      9514,
      10425
    ],
    "label": "best_practice",
    "reason": "Logging warnings for ignored signals"
  },
  {
    "line": 206,
    "text": "                            order_price=the_price,",
    "annotation": "\u2705 Best Practice: Logging warnings for ignored signals",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1502,
      62,
      20888,
      28,
      1169,
      62,
      20888,
      11
    ],
    "start_token": 1125,
    "end_token": 1160,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5972,
      2667,
      14601,
      329,
      9514,
      10425
    ],
    "label": "best_practice",
    "reason": "Logging warnings for ignored signals"
  },
  {
    "line": 202,
    "text": "                        )",
    "annotation": "\ud83e\udde0 ML Signal: Logging usage pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 1160,
    "end_token": 1184,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      8748,
      3912
    ],
    "label": "ml_signal",
    "reason": "Logging usage pattern"
  },
  {
    "line": 203,
    "text": "                    elif trading_signal.order_money:",
    "annotation": "\u2705 Best Practice: List comprehension for filtering positions",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1288,
      361,
      7313,
      62,
      12683,
      282,
      13,
      2875,
      62,
      26316,
      25
    ],
    "start_token": 1184,
    "end_token": 1214,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      7343,
      35915,
      329,
      25431,
      6116
    ],
    "label": "best_practice",
    "reason": "List comprehension for filtering positions"
  },
  {
    "line": 208,
    "text": "                            order_money=trading_signal.order_money,",
    "annotation": "\ud83e\udde0 ML Signal: ID generation pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1502,
      62,
      26316,
      28,
      2213,
      4980,
      62,
      12683,
      282,
      13,
      2875,
      62,
      26316,
      11
    ],
    "start_token": 1214,
    "end_token": 1255,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      4522,
      5270,
      3912
    ],
    "label": "ml_signal",
    "reason": "ID generation pattern"
  },
  {
    "line": 212,
    "text": "                        self.order_by_amount(",
    "annotation": "\ud83e\udde0 ML Signal: Entity decoding pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      2875,
      62,
      1525,
      62,
      17287,
      7
    ],
    "start_token": 1255,
    "end_token": 1286,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20885,
      39938,
      3912
    ],
    "label": "ml_signal",
    "reason": "Entity decoding pattern"
  },
  {
    "line": 212,
    "text": "                        self.order_by_amount(",
    "annotation": "\ud83e\udde0 ML Signal: Schema retrieval pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      2875,
      62,
      1525,
      62,
      17287,
      7
    ],
    "start_token": 1286,
    "end_token": 1317,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      10011,
      2611,
      45069,
      3912
    ],
    "label": "ml_signal",
    "reason": "Schema retrieval pattern"
  },
  {
    "line": 221,
    "text": "                else:",
    "annotation": "\ud83e\udde0 ML Signal: Data fetching pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 1317,
    "end_token": 1334,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6060,
      21207,
      278,
      3912
    ],
    "label": "ml_signal",
    "reason": "Data fetching pattern"
  },
  {
    "line": 238,
    "text": "        self.account.positions = [",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential division by zero if position.long_amount is zero",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      23317,
      13,
      1930,
      1756,
      796,
      685
    ],
    "start_token": 1334,
    "end_token": 1349,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      7297,
      416,
      6632,
      611,
      2292,
      13,
      6511,
      62,
      17287,
      318,
      6632
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential division by zero if position.long_amount is zero"
  },
  {
    "line": 241,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential division by zero if position.long_amount is zero",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1349,
    "end_token": 1349,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      7297,
      416,
      6632,
      611,
      2292,
      13,
      6511,
      62,
      17287,
      318,
      6632
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential division by zero if position.long_amount is zero"
  },
  {
    "line": 243,
    "text": "        the_id = \"{}_{}\".format(self.trader_name, to_time_str(timestamp, TIME_FORMAT_ISO8601))",
    "annotation": "\ud83e\udde0 ML Signal: Logging usage pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      262,
      62,
      312,
      796,
      45144,
      92,
      23330,
      92,
      1911,
      18982,
      7,
      944,
      13,
      2213,
      5067,
      62,
      3672,
      11,
      284,
      62,
      2435,
      62,
      2536,
      7,
      16514,
      27823,
      11,
      20460,
      62,
      21389,
      1404,
      62,
      40734,
      4521,
      486,
      4008
    ],
    "start_token": 1349,
    "end_token": 1392,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      8748,
      3912
    ],
    "label": "ml_signal",
    "reason": "Logging usage pattern"
  },
  {
    "line": 247,
    "text": "        for position in self.account.positions:",
    "annotation": "\ud83e\udde0 ML Signal: ID generation pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      329,
      2292,
      287,
      2116,
      13,
      23317,
      13,
      1930,
      1756,
      25
    ],
    "start_token": 1392,
    "end_token": 1409,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      4522,
      5270,
      3912
    ],
    "label": "ml_signal",
    "reason": "ID generation pattern"
  },
  {
    "line": 251,
    "text": "            kdata = get_kdata(",
    "annotation": "\ud83e\udde0 ML Signal: Timestamp conversion pattern",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      479,
      7890,
      796,
      651,
      62,
      74,
      7890,
      7
    ],
    "start_token": 1409,
    "end_token": 1428,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5045,
      27823,
      11315,
      3912
    ],
    "label": "ml_signal",
    "reason": "Timestamp conversion pattern"
  },
  {
    "line": 257,
    "text": "                limit=1,",
    "annotation": "\ud83e\udde0 ML Signal: Timestamp conversion pattern",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4179,
      28,
      16,
      11
    ],
    "start_token": 1428,
    "end_token": 1447,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5045,
      27823,
      11315,
      3912
    ],
    "label": "ml_signal",
    "reason": "Timestamp conversion pattern"
  },
  {
    "line": 257,
    "text": "                limit=1,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential division by zero if self.account.input_money is zero",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4179,
      28,
      16,
      11
    ],
    "start_token": 1447,
    "end_token": 1466,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      7297,
      416,
      6632,
      611,
      2116,
      13,
      23317,
      13,
      15414,
      62,
      26316,
      318,
      6632
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential division by zero if self.account.input_money is zero"
  },
  {
    "line": 263,
    "text": "            position.available_long = position.long_amount",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential SQL injection if self.account contains untrusted data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2292,
      13,
      15182,
      62,
      6511,
      796,
      2292,
      13,
      6511,
      62,
      17287
    ],
    "start_token": 1466,
    "end_token": 1488,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      16363,
      16954,
      611,
      2116,
      13,
      23317,
      4909,
      1418,
      81,
      8459,
      1366
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential SQL injection if self.account contains untrusted data"
  },
  {
    "line": 264,
    "text": "            position.available_short = position.short_amount",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential SQL injection if self.account contains untrusted data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2292,
      13,
      15182,
      62,
      19509,
      796,
      2292,
      13,
      19509,
      62,
      17287
    ],
    "start_token": 1488,
    "end_token": 1510,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      16363,
      16954,
      611,
      2116,
      13,
      23317,
      4909,
      1418,
      81,
      8459,
      1366
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential SQL injection if self.account contains untrusted data"
  },
  {
    "line": 266,
    "text": "            if closing_price:",
    "annotation": "\ud83e\udde0 ML Signal: Logging usage pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      9605,
      62,
      20888,
      25
    ],
    "start_token": 1510,
    "end_token": 1526,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      8748,
      3912
    ],
    "label": "ml_signal",
    "reason": "Logging usage pattern"
  },
  {
    "line": 268,
    "text": "                    position.value = position.long_amount * closing_price",
    "annotation": "\ud83e\udde0 ML Signal: Logging usage pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2292,
      13,
      8367,
      796,
      2292,
      13,
      6511,
      62,
      17287,
      1635,
      9605,
      62,
      20888
    ],
    "start_token": 1526,
    "end_token": 1558,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      8748,
      3912
    ],
    "label": "ml_signal",
    "reason": "Logging usage pattern"
  },
  {
    "line": 263,
    "text": "            position.available_long = position.long_amount",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over a list to find an item by attribute",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2292,
      13,
      15182,
      62,
      6511,
      796,
      2292,
      13,
      6511,
      62,
      17287
    ],
    "start_token": 1558,
    "end_token": 1580,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      257,
      1351,
      284,
      1064,
      281,
      2378,
      416,
      11688
    ],
    "label": "ml_signal",
    "reason": "Iterating over a list to find an item by attribute"
  },
  {
    "line": 265,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Checking for equality with an entity ID",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 1580,
    "end_token": 1580,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      10537,
      351,
      281,
      9312,
      4522
    ],
    "label": "ml_signal",
    "reason": "Checking for equality with an entity ID"
  },
  {
    "line": 268,
    "text": "                    position.value = position.long_amount * closing_price",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on a boolean flag",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2292,
      13,
      8367,
      796,
      2292,
      13,
      6511,
      62,
      17287,
      1635,
      9605,
      62,
      20888
    ],
    "start_token": 1580,
    "end_token": 1612,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      257,
      25131,
      6056
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on a boolean flag"
  },
  {
    "line": 268,
    "text": "                    position.value = position.long_amount * closing_price",
    "annotation": "\ud83e\udde0 ML Signal: Method call to retrieve trading information",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2292,
      13,
      8367,
      796,
      2292,
      13,
      6511,
      62,
      17287,
      1635,
      9605,
      62,
      20888
    ],
    "start_token": 1612,
    "end_token": 1644,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      869,
      284,
      19818,
      7313,
      1321
    ],
    "label": "ml_signal",
    "reason": "Method call to retrieve trading information"
  },
  {
    "line": 268,
    "text": "                    position.value = position.long_amount * closing_price",
    "annotation": "\ud83e\udde0 ML Signal: Creating a new Position object with default values",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2292,
      13,
      8367,
      796,
      2292,
      13,
      6511,
      62,
      17287,
      1635,
      9605,
      62,
      20888
    ],
    "start_token": 1644,
    "end_token": 1676,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      30481,
      257,
      649,
      23158,
      2134,
      351,
      4277,
      3815
    ],
    "label": "ml_signal",
    "reason": "Creating a new Position object with default values"
  },
  {
    "line": 286,
    "text": "            )",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Directly modifying a list attribute of an object",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 1676,
    "end_token": 1688,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      4128,
      306,
      30620,
      257,
      1351,
      11688,
      286,
      281,
      2134
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Directly modifying a list attribute of an object"
  },
  {
    "line": 284,
    "text": "            position.id = \"{}_{}_{}\".format(",
    "annotation": "\ud83e\udde0 ML Signal: Method accessing an instance attribute",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2292,
      13,
      312,
      796,
      45144,
      92,
      23330,
      92,
      23330,
      92,
      1911,
      18982,
      7
    ],
    "start_token": 1688,
    "end_token": 1712,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      22534,
      281,
      4554,
      11688
    ],
    "label": "ml_signal",
    "reason": "Method accessing an instance attribute"
  },
  {
    "line": 286,
    "text": "            )",
    "annotation": "\ud83e\udde0 ML Signal: Returning an instance attribute",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 1712,
    "end_token": 1724,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      42882,
      281,
      4554,
      11688
    ],
    "label": "ml_signal",
    "reason": "Returning an instance attribute"
  },
  {
    "line": 299,
    "text": "        account_info = (",
    "annotation": "\u2705 Best Practice: Use of enum for order_type improves code readability and reduces errors.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1848,
      62,
      10951,
      796,
      357
    ],
    "start_token": 1724,
    "end_token": 1736,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      33829,
      329,
      1502,
      62,
      4906,
      19575,
      2438,
      1100,
      1799,
      290,
      12850,
      8563,
      13
    ],
    "label": "best_practice",
    "reason": "Use of enum for order_type improves code readability and reduces errors."
  },
  {
    "line": 301,
    "text": "            f\"cash:{self.account.cash} value:{self.account.value} all_value:{self.account.all_value}\"",
    "annotation": "\u2705 Best Practice: Calculating need_money in a separate variable improves readability.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      277,
      1,
      30350,
      29164,
      944,
      13,
      23317,
      13,
      30350,
      92,
      1988,
      29164,
      944,
      13,
      23317,
      13,
      8367,
      92,
      477,
      62,
      8367,
      29164,
      944,
      13,
      23317,
      13,
      439,
      62,
      8367,
      36786
    ],
    "start_token": 1736,
    "end_token": 1777,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      27131,
      803,
      761,
      62,
      26316,
      287,
      257,
      4553,
      7885,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Calculating need_money in a separate variable improves readability."
  },
  {
    "line": 303,
    "text": "        self.logger.info(account_info)",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential for negative cash balance if not handled properly.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      6404,
      1362,
      13,
      10951,
      7,
      23317,
      62,
      10951,
      8
    ],
    "start_token": 1777,
    "end_token": 1795,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      329,
      4633,
      5003,
      5236,
      611,
      407,
      12118,
      6105,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential for negative cash balance if not handled properly."
  },
  {
    "line": 306,
    "text": "        \"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on rich_mode could indicate user behavior patterns.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 1795,
    "end_token": 1803,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      5527,
      62,
      14171,
      714,
      7603,
      2836,
      4069,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on rich_mode could indicate user behavior patterns."
  },
  {
    "line": 345,
    "text": "        :type current_position: Position",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of assert for control flow can be risky in production code.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1058,
      4906,
      1459,
      62,
      9150,
      25,
      23158
    ],
    "start_token": 1803,
    "end_token": 1817,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      6818,
      329,
      1630,
      5202,
      460,
      307,
      17564,
      287,
      3227,
      2438,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of assert for control flow can be risky in production code."
  },
  {
    "line": 345,
    "text": "        :type current_position: Position",
    "annotation": "\u2705 Best Practice: Use of format for string construction is clear and readable.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1058,
      4906,
      1459,
      62,
      9150,
      25,
      23158
    ],
    "start_token": 1817,
    "end_token": 1831,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      5794,
      329,
      4731,
      5103,
      318,
      1598,
      290,
      31744,
      13
    ],
    "label": "best_practice",
    "reason": "Use of format for string construction is clear and readable."
  },
  {
    "line": 363,
    "text": "            # \u8ba1\u7b97\u5e73\u5747\u4ef7",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Direct database operations without error handling can lead to data integrity issues.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      5525,
      106,
      94,
      163,
      106,
      245,
      33176,
      111,
      161,
      251,
      229,
      20015,
      115
    ],
    "start_token": 1831,
    "end_token": 1856,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      4128,
      6831,
      4560,
      1231,
      4049,
      9041,
      460,
      1085,
      284,
      1366,
      11540,
      2428,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Direct database operations without error handling can lead to data integrity issues."
  },
  {
    "line": 363,
    "text": "            # \u8ba1\u7b97\u5e73\u5747\u4ef7",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential floating-point precision issues with comparison",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      5525,
      106,
      94,
      163,
      106,
      245,
      33176,
      111,
      161,
      251,
      229,
      20015,
      115
    ],
    "start_token": 1856,
    "end_token": 1881,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      12462,
      12,
      4122,
      15440,
      2428,
      351,
      7208
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential floating-point precision issues with comparison"
  },
  {
    "line": 365,
    "text": "            if long_amount == 0:",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on object attributes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      890,
      62,
      17287,
      6624,
      657,
      25
    ],
    "start_token": 1881,
    "end_token": 1899,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      2134,
      12608
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on object attributes"
  },
  {
    "line": 367,
    "text": "            current_position.average_long_price = (",
    "annotation": "\ud83e\udde0 ML Signal: Method call based on condition",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1459,
      62,
      9150,
      13,
      23913,
      62,
      6511,
      62,
      20888,
      796,
      357
    ],
    "start_token": 1899,
    "end_token": 1921,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      869,
      1912,
      319,
      4006
    ],
    "label": "ml_signal",
    "reason": "Method call based on condition"
  },
  {
    "line": 370,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Custom exception handling without logging",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1921,
    "end_token": 1921,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      8562,
      6631,
      9041,
      1231,
      18931
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Custom exception handling without logging"
  },
  {
    "line": 372,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of descriptive variable names for readability",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1921,
    "end_token": 1921,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      35644,
      7885,
      3891,
      329,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of descriptive variable names for readability"
  },
  {
    "line": 374,
    "text": "                current_position.available_long += order_amount",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Integer division may lead to loss of precision",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1459,
      62,
      9150,
      13,
      15182,
      62,
      6511,
      15853,
      1502,
      62,
      17287
    ],
    "start_token": 1921,
    "end_token": 1947,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      34142,
      7297,
      743,
      1085,
      284,
      2994,
      286,
      15440
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Integer division may lead to loss of precision"
  },
  {
    "line": 376,
    "text": "        elif order_type == OrderType.order_short:",
    "annotation": "\u2705 Best Practice: Return statement for function output",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1288,
      361,
      1502,
      62,
      4906,
      6624,
      8284,
      6030,
      13,
      2875,
      62,
      19509,
      25
    ],
    "start_token": 1947,
    "end_token": 1967,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8229,
      2643,
      329,
      2163,
      5072
    ],
    "label": "best_practice",
    "reason": "Return statement for function output"
  },
  {
    "line": 372,
    "text": "",
    "annotation": "\u2705 Best Practice: Consider adding type hints for the return value for better readability and maintainability.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1967,
    "end_token": 1967,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      4375,
      2099,
      20269,
      329,
      262,
      1441,
      1988,
      329,
      1365,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Consider adding type hints for the return value for better readability and maintainability."
  },
  {
    "line": 374,
    "text": "                current_position.available_long += order_amount",
    "annotation": "\u2705 Best Practice: Use parentheses for clarity in complex expressions.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1459,
      62,
      9150,
      13,
      15182,
      62,
      6511,
      15853,
      1502,
      62,
      17287
    ],
    "start_token": 1967,
    "end_token": 1993,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      46672,
      329,
      16287,
      287,
      3716,
      14700,
      13
    ],
    "label": "best_practice",
    "reason": "Use parentheses for clarity in complex expressions."
  },
  {
    "line": 379,
    "text": "                if self.rich_mode:",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on a mode or flag can indicate different user behaviors or system states.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      2116,
      13,
      7527,
      62,
      14171,
      25
    ],
    "start_token": 1993,
    "end_token": 2015,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      257,
      4235,
      393,
      6056,
      460,
      7603,
      1180,
      2836,
      14301,
      393,
      1080,
      2585,
      13
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on a mode or flag can indicate different user behaviors or system states."
  },
  {
    "line": 384,
    "text": "            self.account.cash -= need_money",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Raising exceptions without handling them can lead to unhandled exceptions and potential crashes.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      23317,
      13,
      30350,
      48185,
      761,
      62,
      26316
    ],
    "start_token": 2015,
    "end_token": 2035,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      7567,
      1710,
      13269,
      1231,
      9041,
      606,
      460,
      1085,
      284,
      555,
      38788,
      13269,
      290,
      2785,
      17616,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Raising exceptions without handling them can lead to unhandled exceptions and potential crashes."
  },
  {
    "line": 388,
    "text": "                current_position.average_short_price * current_position.short_amount + current_price * order_amount",
    "annotation": "\ud83e\udde0 ML Signal: Different handling based on order type can indicate distinct user actions or system processes.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1459,
      62,
      9150,
      13,
      23913,
      62,
      19509,
      62,
      20888,
      1635,
      1459,
      62,
      9150,
      13,
      19509,
      62,
      17287,
      1343,
      1459,
      62,
      20888,
      1635,
      1502,
      62,
      17287
    ],
    "start_token": 2035,
    "end_token": 2075,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20615,
      9041,
      1912,
      319,
      1502,
      2099,
      460,
      7603,
      7310,
      2836,
      4028,
      393,
      1080,
      7767,
      13
    ],
    "label": "ml_signal",
    "reason": "Different handling based on order type can indicate distinct user actions or system processes."
  },
  {
    "line": 397,
    "text": "            self.account.cash += order_amount * current_price * (1 - self.slippage - self.sell_cost)",
    "annotation": "\u2705 Best Practice: Use math.floor for clarity and to avoid potential issues with integer division.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      23317,
      13,
      30350,
      15853,
      1502,
      62,
      17287,
      1635,
      1459,
      62,
      20888,
      1635,
      357,
      16,
      532,
      2116,
      13,
      6649,
      3974,
      496,
      532,
      2116,
      13,
      7255,
      62,
      15805,
      8
    ],
    "start_token": 2075,
    "end_token": 2115,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      10688,
      13,
      28300,
      329,
      16287,
      290,
      284,
      3368,
      2785,
      2428,
      351,
      18253,
      7297,
      13
    ],
    "label": "best_practice",
    "reason": "Use math.floor for clarity and to avoid potential issues with integer division."
  },
  {
    "line": 402,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Raising exceptions without handling them can lead to unhandled exceptions and potential crashes.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 2115,
    "end_token": 2115,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      7567,
      1710,
      13269,
      1231,
      9041,
      606,
      460,
      1085,
      284,
      555,
      38788,
      13269,
      290,
      2785,
      17616,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Raising exceptions without handling them can lead to unhandled exceptions and potential crashes."
  },
  {
    "line": 405,
    "text": "            self.account.cash -= order_amount * current_price * (1 + self.slippage + self.sell_cost)",
    "annotation": "\ud83e\udde0 ML Signal: Method for calculating order amount based on position percentage",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      23317,
      13,
      30350,
      48185,
      1502,
      62,
      17287,
      1635,
      1459,
      62,
      20888,
      1635,
      357,
      16,
      1343,
      2116,
      13,
      6649,
      3974,
      496,
      1343,
      2116,
      13,
      7255,
      62,
      15805,
      8
    ],
    "start_token": 2115,
    "end_token": 2155,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      329,
      26019,
      1502,
      2033,
      1912,
      319,
      2292,
      5873
    ],
    "label": "ml_signal",
    "reason": "Method for calculating order amount based on position percentage"
  },
  {
    "line": 408,
    "text": "            current_position.short_amount -= order_amount",
    "annotation": "\ud83e\udde0 ML Signal: Method for placing an order with a calculated amount",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1459,
      62,
      9150,
      13,
      19509,
      62,
      17287,
      48185,
      1502,
      62,
      17287
    ],
    "start_token": 2155,
    "end_token": 2177,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      329,
      12560,
      281,
      1502,
      351,
      257,
      10488,
      2033
    ],
    "label": "ml_signal",
    "reason": "Method for placing an order with a calculated amount"
  },
  {
    "line": 423,
    "text": "            order_type=order_type.value,",
    "annotation": "\u2705 Best Practice: Validate input parameters to ensure they meet expected criteria",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1502,
      62,
      4906,
      28,
      2875,
      62,
      4906,
      13,
      8367,
      11
    ],
    "start_token": 2177,
    "end_token": 2198,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      3254,
      20540,
      5128,
      10007,
      284,
      4155,
      484,
      1826,
      2938,
      9987
    ],
    "label": "best_practice",
    "reason": "Validate input parameters to ensure they meet expected criteria"
  },
  {
    "line": 425,
    "text": "            status=\"success\",",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for exception message to leak sensitive information",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3722,
      2625,
      13138,
      1600
    ],
    "start_token": 2198,
    "end_token": 2213,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      6631,
      3275,
      284,
      13044,
      8564,
      1321
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for exception message to leak sensitive information"
  },
  {
    "line": 426,
    "text": "        )",
    "annotation": "\ud83e\udde0 ML Signal: Calculation of order amount based on money and price",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 2213,
    "end_token": 2221,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2199,
      14902,
      286,
      1502,
      2033,
      1912,
      319,
      1637,
      290,
      2756
    ],
    "label": "ml_signal",
    "reason": "Calculation of order amount based on money and price"
  },
  {
    "line": 426,
    "text": "        )",
    "annotation": "\ud83e\udde0 ML Signal: Delegating order processing to another method",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 2221,
    "end_token": 2229,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      1024,
      1455,
      803,
      1502,
      7587,
      284,
      1194,
      2446
    ],
    "label": "ml_signal",
    "reason": "Delegating order processing to another method"
  },
  {
    "line": 441,
    "text": "        cost = order_price * (1 + self.slippage + self.buy_cost)",
    "annotation": "\ud83e\udde0 ML Signal: Usage of get_current_position with create_if_not_exist=True indicates a pattern of ensuring entity existence.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1575,
      796,
      1502,
      62,
      20888,
      1635,
      357,
      16,
      1343,
      2116,
      13,
      6649,
      3974,
      496,
      1343,
      2116,
      13,
      17846,
      62,
      15805,
      8
    ],
    "start_token": 2229,
    "end_token": 2257,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      651,
      62,
      14421,
      62,
      9150,
      351,
      2251,
      62,
      361,
      62,
      1662,
      62,
      38476,
      28,
      17821,
      9217,
      257,
      3912,
      286,
      13359,
      9312,
      6224,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of get_current_position with create_if_not_exist=True indicates a pattern of ensuring entity existence."
  },
  {
    "line": 444,
    "text": "        return order_amount",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for InvalidOrderError to be raised, which should be handled by the caller.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      1502,
      62,
      17287
    ],
    "start_token": 2257,
    "end_token": 2268,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      17665,
      18743,
      12331,
      284,
      307,
      4376,
      11,
      543,
      815,
      307,
      12118,
      416,
      262,
      24955,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for InvalidOrderError to be raised, which should be handled by the caller."
  },
  {
    "line": 447,
    "text": "        if order_type == OrderType.order_long or order_type == OrderType.order_short:",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of updating position based on order type and conditions.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      1502,
      62,
      4906,
      6624,
      8284,
      6030,
      13,
      2875,
      62,
      6511,
      393,
      1502,
      62,
      4906,
      6624,
      8284,
      6030,
      13,
      2875,
      62,
      19509,
      25
    ],
    "start_token": 2268,
    "end_token": 2298,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      19698,
      2292,
      1912,
      319,
      1502,
      2099,
      290,
      3403,
      13
    ],
    "label": "ml_signal",
    "reason": "Pattern of updating position based on order type and conditions."
  },
  {
    "line": 450,
    "text": "            order_amount = want_pay // cost",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for InvalidOrderError to be raised, which should be handled by the caller.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1502,
      62,
      17287,
      796,
      765,
      62,
      15577,
      3373,
      1575
    ],
    "start_token": 2298,
    "end_token": 2318,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      17665,
      18743,
      12331,
      284,
      307,
      4376,
      11,
      543,
      815,
      307,
      12118,
      416,
      262,
      24955,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for InvalidOrderError to be raised, which should be handled by the caller."
  },
  {
    "line": 452,
    "text": "            if order_amount < 1:",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of updating position based on order type and conditions.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      1502,
      62,
      17287,
      1279,
      352,
      25
    ],
    "start_token": 2318,
    "end_token": 2336,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      19698,
      2292,
      1912,
      319,
      1502,
      2099,
      290,
      3403,
      13
    ],
    "label": "ml_signal",
    "reason": "Pattern of updating position based on order type and conditions."
  },
  {
    "line": 457,
    "text": "                    raise NotEnoughMoneyError()",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of updating position based on order type and conditions.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      5298,
      1892,
      47323,
      26788,
      12331,
      3419
    ],
    "start_token": 2336,
    "end_token": 2361,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      19698,
      2292,
      1912,
      319,
      1502,
      2099,
      290,
      3403,
      13
    ],
    "label": "ml_signal",
    "reason": "Pattern of updating position based on order type and conditions."
  },
  {
    "line": 460,
    "text": "            current_position = self.get_current_position(entity_id=entity_id, create_if_not_exist=True)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for NotEnoughPositionError to be raised, which should be handled by the caller.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1459,
      62,
      9150,
      796,
      2116,
      13,
      1136,
      62,
      14421,
      62,
      9150,
      7,
      26858,
      62,
      312,
      28,
      26858,
      62,
      312,
      11,
      2251,
      62,
      361,
      62,
      1662,
      62,
      38476,
      28,
      17821,
      8
    ],
    "start_token": 2361,
    "end_token": 2402,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      1892,
      47323,
      26545,
      12331,
      284,
      307,
      4376,
      11,
      543,
      815,
      307,
      12118,
      416,
      262,
      24955,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for NotEnoughPositionError to be raised, which should be handled by the caller."
  },
  {
    "line": 460,
    "text": "            current_position = self.get_current_position(entity_id=entity_id, create_if_not_exist=True)",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of updating position based on order type and conditions.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1459,
      62,
      9150,
      796,
      2116,
      13,
      1136,
      62,
      14421,
      62,
      9150,
      7,
      26858,
      62,
      312,
      28,
      26858,
      62,
      312,
      11,
      2251,
      62,
      361,
      62,
      1662,
      62,
      38476,
      28,
      17821,
      8
    ],
    "start_token": 2402,
    "end_token": 2443,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      19698,
      2292,
      1912,
      319,
      1502,
      2099,
      290,
      3403,
      13
    ],
    "label": "ml_signal",
    "reason": "Pattern of updating position based on order type and conditions."
  },
  {
    "line": 460,
    "text": "            current_position = self.get_current_position(entity_id=entity_id, create_if_not_exist=True)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Generic Exception raised, should be more specific for better error handling.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1459,
      62,
      9150,
      796,
      2116,
      13,
      1136,
      62,
      14421,
      62,
      9150,
      7,
      26858,
      62,
      312,
      28,
      26858,
      62,
      312,
      11,
      2251,
      62,
      361,
      62,
      1662,
      62,
      38476,
      28,
      17821,
      8
    ],
    "start_token": 2443,
    "end_token": 2484,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      42044,
      35528,
      4376,
      11,
      815,
      307,
      517,
      2176,
      329,
      1365,
      4049,
      9041,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Generic Exception raised, should be more specific for better error handling."
  },
  {
    "line": 460,
    "text": "            current_position = self.get_current_position(entity_id=entity_id, create_if_not_exist=True)",
    "annotation": "\u2705 Best Practice: Use of __all__ to define public API of the module.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1459,
      62,
      9150,
      796,
      2116,
      13,
      1136,
      62,
      14421,
      62,
      9150,
      7,
      26858,
      62,
      312,
      28,
      26858,
      62,
      312,
      11,
      2251,
      62,
      361,
      62,
      1662,
      62,
      38476,
      28,
      17821,
      8
    ],
    "start_token": 2484,
    "end_token": 2525,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265,
      13
    ],
    "label": "best_practice",
    "reason": "Use of __all__ to define public API of the module."
  }
]