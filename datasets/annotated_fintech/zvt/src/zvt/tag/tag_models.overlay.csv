annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
✅ Best Practice: Importing specific functions or classes from a module improves code readability and avoids potential namespace conflicts.,"[26486, 227, 6705, 19939, 25, 17267, 278, 2176, 5499, 393, 6097, 422, 257, 8265, 19575, 2438, 1100, 1799, 290, 30940, 2785, 25745, 12333, 13]",1.0,11,best_practice,2,Importing specific functions or classes from a module improves code readability and avoids potential namespace conflicts.,,0,"from typing import Dict, Union, List, Optional","[6738, 19720, 1330, 360, 713, 11, 4479, 11, 7343, 11, 32233]"
✅ Best Practice: Importing specific functions or classes from a module improves code readability and avoids potential namespace conflicts.,"[26486, 227, 6705, 19939, 25, 17267, 278, 2176, 5499, 393, 6097, 422, 257, 8265, 19575, 2438, 1100, 1799, 290, 30940, 2785, 25745, 12333, 13]",1.0,22,best_practice,4,Importing specific functions or classes from a module improves code readability and avoids potential namespace conflicts.,,11,"from pydantic import field_validator, Field","[6738, 279, 5173, 5109, 1330, 2214, 62, 12102, 1352, 11, 7663]"
✅ Best Practice: Importing specific functions or classes from a module improves code readability and avoids potential namespace conflicts.,"[26486, 227, 6705, 19939, 25, 17267, 278, 2176, 5499, 393, 6097, 422, 257, 8265, 19575, 2438, 1100, 1799, 290, 30940, 2785, 25745, 12333, 13]",1.0,22,best_practice,6,Importing specific functions or classes from a module improves code readability and avoids potential namespace conflicts.,,22,,[]
✅ Best Practice: Importing specific functions or classes from a module improves code readability and avoids potential namespace conflicts.,"[26486, 227, 6705, 19939, 25, 17267, 278, 2176, 5499, 393, 6097, 422, 257, 8265, 19575, 2438, 1100, 1799, 290, 30940, 2785, 25745, 12333, 13]",1.0,44,best_practice,8,Importing specific functions or classes from a module improves code readability and avoids potential namespace conflicts.,,22,"from zvt.tag.common import StockPoolType, TagType, TagStatsQueryType, InsertMode","[6738, 1976, 36540, 13, 12985, 13, 11321, 1330, 10500, 27201, 6030, 11, 17467, 6030, 11, 17467, 29668, 20746, 6030, 11, 35835, 19076]"
✅ Best Practice: Importing specific functions or classes from a module improves code readability and avoids potential namespace conflicts.,"[26486, 227, 6705, 19939, 25, 17267, 278, 2176, 5499, 393, 6097, 422, 257, 8265, 19575, 2438, 1100, 1799, 290, 30940, 2785, 25745, 12333, 13]",1.0,44,best_practice,10,Importing specific functions or classes from a module improves code readability and avoids potential namespace conflicts.,,44,,[]
"🧠 ML Signal: Definition of a data model class, useful for understanding data structures","[8582, 100, 254, 10373, 26484, 25, 30396, 286, 257, 1366, 2746, 1398, 11, 4465, 329, 4547, 1366, 8573]",1.0,58,ml_signal,7,"Definition of a data model class, useful for understanding data structures",,44,"from zvt.contract.model import MixinModel, CustomModel","[6738, 1976, 36540, 13, 28484, 13, 19849, 1330, 15561, 259, 17633, 11, 8562, 17633]"
🧠 ML Signal: Usage of type annotations for class attributes,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 2099, 37647, 329, 1398, 12608]",1.0,75,ml_signal,9,Usage of type annotations for class attributes,,58,from zvt.tag.tag_utils import get_stock_pool_names,"[6738, 1976, 36540, 13, 12985, 13, 12985, 62, 26791, 1330, 651, 62, 13578, 62, 7742, 62, 14933]"
🧠 ML Signal: Use of Optional type hint indicating nullable fields,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32233, 2099, 9254, 12739, 9242, 540, 7032]",1.0,75,ml_signal,11,Use of Optional type hint indicating nullable fields,,75,,[]
✅ Best Practice: Use of Field with default value for optional fields,"[26486, 227, 6705, 19939, 25, 5765, 286, 7663, 351, 4277, 1988, 329, 11902, 7032]",0.5,84,best_practice,12,Use of Field with default value for optional fields,,75,class TagInfoModel(MixinModel):,"[4871, 17467, 12360, 17633, 7, 35608, 259, 17633, 2599]"
🧠 ML Signal: Use of Optional type hint indicating nullable fields,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32233, 2099, 9254, 12739, 9242, 540, 7032]",1.0,102,ml_signal,14,Use of Optional type hint indicating nullable fields,,84,    tag_reason: Optional[str] = Field(default=None),"[220, 220, 220, 7621, 62, 41181, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
✅ Best Practice: Use of Field with default value for optional fields,"[26486, 227, 6705, 19939, 25, 5765, 286, 7663, 351, 4277, 1988, 329, 11902, 7032]",0.5,120,best_practice,15,Use of Field with default value for optional fields,,102,    main_tag: Optional[str] = Field(default=None),"[220, 220, 220, 1388, 62, 12985, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
✅ Best Practice: Class should inherit from a base model to ensure consistent behavior and structure,"[26486, 227, 6705, 19939, 25, 5016, 815, 16955, 422, 257, 2779, 2746, 284, 4155, 6414, 4069, 290, 4645]",0.5,120,best_practice,11,Class should inherit from a base model to ensure consistent behavior and structure,,120,,[]
🧠 ML Signal: Use of type hints for attributes,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2099, 20269, 329, 12608]",0.5,126,ml_signal,13,Use of type hints for attributes,,120,    tag: str,"[220, 220, 220, 7621, 25, 965]"
🧠 ML Signal: Use of Optional type hint to indicate that the field can be None,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32233, 2099, 9254, 284, 7603, 326, 262, 2214, 460, 307, 6045]",1.0,144,ml_signal,15,Use of Optional type hint to indicate that the field can be None,,126,    main_tag: Optional[str] = Field(default=None),"[220, 220, 220, 1388, 62, 12985, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
✅ Best Practice: Use of Field with default value for optional fields,"[26486, 227, 6705, 19939, 25, 5765, 286, 7663, 351, 4277, 1988, 329, 11902, 7032]",0.5,144,best_practice,16,Use of Field with default value for optional fields,,144,,[]
🧠 ML Signal: Use of class attributes to define data model fields,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1398, 12608, 284, 8160, 1366, 2746, 7032]",0.5,162,ml_signal,15,Use of class attributes to define data model fields,,144,    main_tag: Optional[str] = Field(default=None),"[220, 220, 220, 1388, 62, 12985, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
🧠 ML Signal: Use of class attributes to define data model fields,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1398, 12608, 284, 8160, 1366, 2746, 7032]",0.5,162,ml_signal,17,Use of class attributes to define data model fields,,162,,[]
🧠 ML Signal: Use of class attributes to define data model fields,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1398, 12608, 284, 8160, 1366, 2746, 7032]",0.5,168,ml_signal,19,Use of class attributes to define data model fields,,162,    tag: str,"[220, 220, 220, 7621, 25, 965]"
✅ Best Practice: Type annotations improve code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5994, 37647, 2987, 2438, 1100, 1799, 290, 5529, 1799, 13]",0.5,174,best_practice,19,Type annotations improve code readability and maintainability.,,168,    tag: str,"[220, 220, 220, 7621, 25, 965]"
✅ Best Practice: Type annotations improve code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5994, 37647, 2987, 2438, 1100, 1799, 290, 5529, 1799, 13]",0.5,174,best_practice,21,Type annotations improve code readability and maintainability.,,174,,[]
✅ Best Practice: Class should inherit from a base class to ensure consistent behavior and attributes,"[26486, 227, 6705, 19939, 25, 5016, 815, 16955, 422, 257, 2779, 1398, 284, 4155, 6414, 4069, 290, 12608]",0.5,174,best_practice,21,Class should inherit from a base class to ensure consistent behavior and attributes,,174,,[]
✅ Best Practice: Type annotations improve code readability and help with static analysis,"[26486, 227, 6705, 19939, 25, 5994, 37647, 2987, 2438, 1100, 1799, 290, 1037, 351, 9037, 3781]",0.5,183,best_practice,23,Type annotations improve code readability and help with static analysis,,174,class IndustryInfoModel(MixinModel):,"[4871, 17420, 12360, 17633, 7, 35608, 259, 17633, 2599]"
✅ Best Practice: Type annotations improve code readability and help with static analysis,"[26486, 227, 6705, 19939, 25, 5994, 37647, 2987, 2438, 1100, 1799, 290, 1037, 351, 9037, 3781]",0.5,189,best_practice,25,Type annotations improve code readability and help with static analysis,,183,    description: str,"[220, 220, 220, 6764, 25, 965]"
✅ Best Practice: Class should inherit from a base class to ensure consistent behavior and structure,"[26486, 227, 6705, 19939, 25, 5016, 815, 16955, 422, 257, 2779, 1398, 284, 4155, 6414, 4069, 290, 4645]",0.5,197,best_practice,24,Class should inherit from a base class to ensure consistent behavior and structure,,189,    industry_name: str,"[220, 220, 220, 2831, 62, 3672, 25, 965]"
🧠 ML Signal: Usage of type annotations for class attributes,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 2099, 37647, 329, 1398, 12608]",0.5,204,ml_signal,26,Usage of type annotations for class attributes,,197,    # related main tag,"[220, 220, 220, 1303, 3519, 1388, 7621]"
🧠 ML Signal: Usage of type annotations for class attributes,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 2099, 37647, 329, 1398, 12608]",0.5,204,ml_signal,28,Usage of type annotations for class attributes,,204,,[]
🧠 ML Signal: Use of Optional and Union types indicates handling of nullable fields,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32233, 290, 4479, 3858, 9217, 9041, 286, 9242, 540, 7032]",1.0,212,ml_signal,27,Use of Optional and Union types indicates handling of nullable fields,,204,    main_tag: str,"[220, 220, 220, 1388, 62, 12985, 25, 965]"
✅ Best Practice: Use of Optional for fields that can be None improves code readability,"[26486, 227, 6705, 19939, 25, 5765, 286, 32233, 329, 7032, 326, 460, 307, 6045, 19575, 2438, 1100, 1799]",0.5,212,best_practice,28,Use of Optional for fields that can be None improves code readability,,212,,[]
🧠 ML Signal: Use of Optional and Union types indicates handling of nullable fields,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32233, 290, 4479, 3858, 9217, 9041, 286, 9242, 540, 7032]",1.0,223,ml_signal,30,Use of Optional and Union types indicates handling of nullable fields,,212,class MainTagIndustryRelation(CustomModel):,"[4871, 8774, 24835, 35848, 563, 6892, 341, 7, 15022, 17633, 2599]"
✅ Best Practice: Use of Optional for fields that can be None improves code readability,"[26486, 227, 6705, 19939, 25, 5765, 286, 32233, 329, 7032, 326, 460, 307, 6045, 19575, 2438, 1100, 1799]",0.5,231,best_practice,31,Use of Optional for fields that can be None improves code readability,,223,    main_tag: str,"[220, 220, 220, 1388, 62, 12985, 25, 965]"
🧠 ML Signal: Use of Dict type indicates key-value storage pattern,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 360, 713, 2099, 9217, 1994, 12, 8367, 6143, 3912]",1.0,231,ml_signal,33,Use of Dict type indicates key-value storage pattern,,231,,[]
🧠 ML Signal: Use of Optional and Union types indicates handling of nullable fields,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32233, 290, 4479, 3858, 9217, 9041, 286, 9242, 540, 7032]",1.0,242,ml_signal,35,Use of Optional and Union types indicates handling of nullable fields,,231,class MainTagSubTagRelation(CustomModel):,"[4871, 8774, 24835, 7004, 24835, 6892, 341, 7, 15022, 17633, 2599]"
✅ Best Practice: Use of Optional for fields that can be None improves code readability,"[26486, 227, 6705, 19939, 25, 5765, 286, 32233, 329, 7032, 326, 460, 307, 6045, 19575, 2438, 1100, 1799]",0.5,250,best_practice,36,Use of Optional for fields that can be None improves code readability,,242,    main_tag: str,"[220, 220, 220, 1388, 62, 12985, 25, 965]"
🧠 ML Signal: Use of Optional and Union types indicates handling of nullable fields,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32233, 290, 4479, 3858, 9217, 9041, 286, 9242, 540, 7032]",1.0,250,ml_signal,38,Use of Optional and Union types indicates handling of nullable fields,,250,,[]
✅ Best Practice: Use of Optional for fields that can be None improves code readability,"[26486, 227, 6705, 19939, 25, 5765, 286, 32233, 329, 7032, 326, 460, 307, 6045, 19575, 2438, 1100, 1799]",0.5,250,best_practice,39,Use of Optional for fields that can be None improves code readability,,250,,[]
🧠 ML Signal: Use of Union type indicates handling of multiple possible types,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4479, 2099, 9217, 9041, 286, 3294, 1744, 3858]",1.0,260,ml_signal,41,Use of Union type indicates handling of multiple possible types,,250,    current_main_tag: str,"[220, 220, 220, 1459, 62, 12417, 62, 12985, 25, 965]"
🧠 ML Signal: Use of Union type indicates handling of multiple possible types,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4479, 2099, 9217, 9041, 286, 3294, 1744, 3858]",1.0,260,ml_signal,43,Use of Union type indicates handling of multiple possible types,,260,,[]
🧠 ML Signal: Use of Union type indicates handling of multiple possible types,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4479, 2099, 9217, 9041, 286, 3294, 1744, 3858]",1.0,269,ml_signal,45,Use of Union type indicates handling of multiple possible types,,260,class StockTagsModel(MixinModel):,"[4871, 10500, 36142, 17633, 7, 35608, 259, 17633, 2599]"
🧠 ML Signal: Boolean flag indicating a user action or state,"[8582, 100, 254, 10373, 26484, 25, 41146, 6056, 12739, 257, 2836, 2223, 393, 1181]",1.0,289,ml_signal,47,Boolean flag indicating a user action or state,,269,    main_tag_reason: Optional[str] = Field(default=None),"[220, 220, 220, 1388, 62, 12985, 62, 41181, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
"🧠 ML Signal: Use of a custom model class, indicating a pattern for model definition","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 2183, 2746, 1398, 11, 12739, 257, 3912, 329, 2746, 6770]",1.0,302,ml_signal,37,"Use of a custom model class, indicating a pattern for model definition",,289,    sub_tag_list: List[str],"[220, 220, 220, 850, 62, 12985, 62, 4868, 25, 7343, 58, 2536, 60]"
"🧠 ML Signal: Use of entity_id as a string, common pattern for unique identifiers","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 9312, 62, 312, 355, 257, 4731, 11, 2219, 3912, 329, 3748, 42814]",1.0,302,ml_signal,39,"Use of entity_id as a string, common pattern for unique identifiers",,302,,[]
"🧠 ML Signal: Use of name as a string, common pattern for naming entities","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1438, 355, 257, 4731, 11, 2219, 3912, 329, 19264, 12066]",1.0,312,ml_signal,41,"Use of name as a string, common pattern for naming entities",,302,    current_main_tag: str,"[220, 220, 220, 1459, 62, 12417, 62, 12985, 25, 965]"
"🧠 ML Signal: Use of Optional and default values, indicating nullable fields","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32233, 290, 4277, 3815, 11, 12739, 9242, 540, 7032]",1.0,312,ml_signal,43,"Use of Optional and default values, indicating nullable fields",,312,,[]
"🧠 ML Signal: Use of Optional and default values, indicating nullable fields","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32233, 290, 4277, 3815, 11, 12739, 9242, 540, 7032]",1.0,321,ml_signal,45,"Use of Optional and default values, indicating nullable fields",,312,class StockTagsModel(MixinModel):,"[4871, 10500, 36142, 17633, 7, 35608, 259, 17633, 2599]"
"🧠 ML Signal: Use of dictionary to map tags, common pattern for key-value storage","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 22155, 284, 3975, 15940, 11, 2219, 3912, 329, 1994, 12, 8367, 6143]",1.0,341,ml_signal,47,"Use of dictionary to map tags, common pattern for key-value storage",,321,    main_tag_reason: Optional[str] = Field(default=None),"[220, 220, 220, 1388, 62, 12985, 62, 41181, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
"🧠 ML Signal: Use of Union for type flexibility, indicating optional fields","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4479, 329, 2099, 13688, 11, 12739, 11902, 7032]",1.0,341,ml_signal,49,"Use of Union for type flexibility, indicating optional fields",,341,,[]
"🧠 ML Signal: Use of Optional and default values, indicating nullable fields","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32233, 290, 4277, 3815, 11, 12739, 9242, 540, 7032]",1.0,361,ml_signal,51,"Use of Optional and default values, indicating nullable fields",,341,    sub_tag_reason: Optional[str] = Field(default=None),"[220, 220, 220, 850, 62, 12985, 62, 41181, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
"🧠 ML Signal: Use of Union for type flexibility, indicating optional fields","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4479, 329, 2099, 13688, 11, 12739, 11902, 7032]",1.0,361,ml_signal,53,"Use of Union for type flexibility, indicating optional fields",,361,,[]
"🧠 ML Signal: Use of Union for type flexibility, indicating optional fields","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4479, 329, 2099, 13688, 11, 12739, 11902, 7032]",1.0,379,ml_signal,55,"Use of Union for type flexibility, indicating optional fields",,361,"    hidden_tags: Union[Dict[str, str], None]","[220, 220, 220, 7104, 62, 31499, 25, 4479, 58, 35, 713, 58, 2536, 11, 965, 4357, 6045, 60]"
"🧠 ML Signal: Use of Optional and default values, indicating nullable fields","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32233, 290, 4277, 3815, 11, 12739, 9242, 540, 7032]",1.0,379,ml_signal,57,"Use of Optional and default values, indicating nullable fields",,379,,[]
"🧠 ML Signal: Use of Optional and default values, indicating nullable fields","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32233, 290, 4277, 3815, 11, 12739, 9242, 540, 7032]",1.0,388,ml_signal,59,"Use of Optional and default values, indicating nullable fields",,379,class SimpleStockTagsModel(CustomModel):,"[4871, 17427, 26207, 36142, 17633, 7, 15022, 17633, 2599]"
✅ Best Practice: Class should inherit from a base class to ensure consistent behavior and structure,"[26486, 227, 6705, 19939, 25, 5016, 815, 16955, 422, 257, 2779, 1398, 284, 4155, 6414, 4069, 290, 4645]",0.5,388,best_practice,49,Class should inherit from a base class to ensure consistent behavior and structure,,388,,[]
✅ Best Practice: Use of type hinting for better code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 9254, 278, 329, 1365, 2438, 1100, 1799, 290, 5529, 1799]",0.5,408,best_practice,51,Use of type hinting for better code readability and maintainability,,388,    sub_tag_reason: Optional[str] = Field(default=None),"[220, 220, 220, 850, 62, 12985, 62, 41181, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
"🧠 ML Signal: Use of a custom model class, which may indicate a pattern for model inheritance","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 2183, 2746, 1398, 11, 543, 743, 7603, 257, 3912, 329, 2746, 24155]",0.5,428,ml_signal,51,"Use of a custom model class, which may indicate a pattern for model inheritance",,408,    sub_tag_reason: Optional[str] = Field(default=None),"[220, 220, 220, 850, 62, 12985, 62, 41181, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
🧠 ML Signal: Use of List[str] suggests a pattern of handling multiple string identifiers,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 7343, 58, 2536, 60, 5644, 257, 3912, 286, 9041, 3294, 4731, 42814]",0.5,446,ml_signal,52,Use of List[str] suggests a pattern of handling multiple string identifiers,,428,"    sub_tags: Union[Dict[str, str], None]","[220, 220, 220, 850, 62, 31499, 25, 4479, 58, 35, 713, 58, 2536, 11, 965, 4357, 6045, 60]"
🧠 ML Signal: Use of entity_ids as a variable name may indicate a pattern of handling entity identifiers,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 9312, 62, 2340, 355, 257, 7885, 1438, 743, 7603, 257, 3912, 286, 9041, 9312, 42814]",0.5,466,ml_signal,54,Use of entity_ids as a variable name may indicate a pattern of handling entity identifiers,,446,"    active_hidden_tags: Union[Dict[str, str], None]","[220, 220, 220, 4075, 62, 30342, 62, 31499, 25, 4479, 58, 35, 713, 58, 2536, 11, 965, 4357, 6045, 60]"
🧠 ML Signal: Custom model class definition for data validation and serialization,"[8582, 100, 254, 10373, 26484, 25, 8562, 2746, 1398, 6770, 329, 1366, 21201, 290, 11389, 1634]",0.5,466,ml_signal,53,Custom model class definition for data validation and serialization,,466,,[]
🧠 ML Signal: List of entity IDs indicates batch processing,"[8582, 100, 254, 10373, 26484, 25, 7343, 286, 9312, 32373, 9217, 15458, 7587]",0.5,484,ml_signal,55,List of entity IDs indicates batch processing,,466,"    hidden_tags: Union[Dict[str, str], None]","[220, 220, 220, 7104, 62, 31499, 25, 4479, 58, 35, 713, 58, 2536, 11, 965, 4357, 6045, 60]"
🧠 ML Signal: Single tag applied to multiple entities,"[8582, 100, 254, 10373, 26484, 25, 14206, 7621, 5625, 284, 3294, 12066]",0.5,484,ml_signal,57,Single tag applied to multiple entities,,484,,[]
✅ Best Practice: Use of Optional for fields that can be None,"[26486, 227, 6705, 19939, 25, 5765, 286, 32233, 329, 7032, 326, 460, 307, 6045]",0.5,493,best_practice,59,Use of Optional for fields that can be None,,484,class SimpleStockTagsModel(CustomModel):,"[4871, 17427, 26207, 36142, 17633, 7, 15022, 17633, 2599]"
🧠 ML Signal: Use of custom type for tag_type indicates domain-specific logic,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2183, 2099, 329, 7621, 62, 4906, 9217, 7386, 12, 11423, 9156]",0.5,499,ml_signal,61,Use of custom type for tag_type indicates domain-specific logic,,493,    name: str,"[220, 220, 220, 1438, 25, 965]"
🧠 ML Signal: Use of a custom model class indicates a pattern for data modeling,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 2183, 2746, 1398, 9217, 257, 3912, 329, 1366, 21128]",0.5,499,ml_signal,58,Use of a custom model class indicates a pattern for data modeling,,499,,[]
🧠 ML Signal: Use of type annotations for data validation and model training,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2099, 37647, 329, 1366, 21201, 290, 2746, 3047]",1.0,507,ml_signal,60,Use of type annotations for data validation and model training,,499,    entity_id: str,"[220, 220, 220, 9312, 62, 312, 25, 965]"
🧠 ML Signal: Optional fields with default values indicate nullable or optional data patterns,"[8582, 100, 254, 10373, 26484, 25, 32233, 7032, 351, 4277, 3815, 7603, 9242, 540, 393, 11902, 1366, 7572]",0.5,525,ml_signal,62,Optional fields with default values indicate nullable or optional data patterns,,507,    main_tag: Optional[str] = Field(default=None),"[220, 220, 220, 1388, 62, 12985, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
🧠 ML Signal: Optional fields with default values indicate nullable or optional data patterns,"[8582, 100, 254, 10373, 26484, 25, 32233, 7032, 351, 4277, 3815, 7603, 9242, 540, 393, 11902, 1366, 7572]",0.5,539,ml_signal,64,Optional fields with default values indicate nullable or optional data patterns,,525,"    main_tags: Dict[str, str]","[220, 220, 220, 1388, 62, 31499, 25, 360, 713, 58, 2536, 11, 965, 60]"
🧠 ML Signal: Optional fields with default values indicate nullable or optional data patterns,"[8582, 100, 254, 10373, 26484, 25, 32233, 7032, 351, 4277, 3815, 7603, 9242, 540, 393, 11902, 1366, 7572]",0.5,559,ml_signal,66,Optional fields with default values indicate nullable or optional data patterns,,539,    sub_tag_reason: Optional[str] = Field(default=None),"[220, 220, 220, 850, 62, 12985, 62, 41181, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
🧠 ML Signal: Optional fields with default values indicate nullable or optional data patterns,"[8582, 100, 254, 10373, 26484, 25, 32233, 7032, 351, 4277, 3815, 7603, 9242, 540, 393, 11902, 1366, 7572]",0.5,579,ml_signal,68,Optional fields with default values indicate nullable or optional data patterns,,559,"    active_hidden_tags: Union[Dict[str, str], None]","[220, 220, 220, 4075, 62, 30342, 62, 31499, 25, 4479, 58, 35, 713, 58, 2536, 11, 965, 4357, 6045, 60]"
🧠 ML Signal: Optional fields with default values indicate nullable or optional data patterns,"[8582, 100, 254, 10373, 26484, 25, 32233, 7032, 351, 4277, 3815, 7603, 9242, 540, 393, 11902, 1366, 7572]",0.5,600,ml_signal,70,Optional fields with default values indicate nullable or optional data patterns,,579,    top_ten_ratio: Optional[float] = Field(default=None),"[220, 220, 220, 1353, 62, 1452, 62, 10366, 952, 25, 32233, 58, 22468, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
🧠 ML Signal: Use of Optional fields indicates nullable or optional data handling,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32233, 7032, 9217, 9242, 540, 393, 11902, 1366, 9041]",1.0,613,ml_signal,65,Use of Optional fields indicates nullable or optional data handling,,600,"    sub_tag: Union[str, None]","[220, 220, 220, 850, 62, 12985, 25, 4479, 58, 2536, 11, 6045, 60]"
✅ Best Practice: Use of Optional for fields that can be None improves code clarity,"[26486, 227, 6705, 19939, 25, 5765, 286, 32233, 329, 7032, 326, 460, 307, 6045, 19575, 2438, 16287]",1.0,633,best_practice,66,Use of Optional for fields that can be None improves code clarity,,613,    sub_tag_reason: Optional[str] = Field(default=None),"[220, 220, 220, 850, 62, 12985, 62, 41181, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
🧠 ML Signal: Use of Optional fields indicates nullable or optional data handling,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32233, 7032, 9217, 9242, 540, 393, 11902, 1366, 9041]",1.0,653,ml_signal,68,Use of Optional fields indicates nullable or optional data handling,,633,"    active_hidden_tags: Union[Dict[str, str], None]","[220, 220, 220, 4075, 62, 30342, 62, 31499, 25, 4479, 58, 35, 713, 58, 2536, 11, 965, 4357, 6045, 60]"
✅ Best Practice: Use of Optional for fields that can be None improves code clarity,"[26486, 227, 6705, 19939, 25, 5765, 286, 32233, 329, 7032, 326, 460, 307, 6045, 19575, 2438, 16287]",1.0,673,best_practice,69,Use of Optional for fields that can be None improves code clarity,,653,    controlling_holder_parent: Optional[str] = Field(default=None),"[220, 220, 220, 12755, 62, 13829, 62, 8000, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
🧠 ML Signal: Use of Optional fields indicates nullable or optional data handling,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32233, 7032, 9217, 9242, 540, 393, 11902, 1366, 9041]",1.0,673,ml_signal,71,Use of Optional fields indicates nullable or optional data handling,,673,,[]
✅ Best Practice: Use of Optional for fields that can be None improves code clarity,"[26486, 227, 6705, 19939, 25, 5765, 286, 32233, 329, 7032, 326, 460, 307, 6045, 19575, 2438, 16287]",1.0,673,best_practice,72,Use of Optional for fields that can be None improves code clarity,,673,,[]
🧠 ML Signal: Use of List to define a collection of items,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 7343, 284, 8160, 257, 4947, 286, 3709]",1.0,684,ml_signal,74,Use of List to define a collection of items,,673,    entity_ids: List[str],"[220, 220, 220, 9312, 62, 2340, 25, 7343, 58, 2536, 60]"
🧠 ML Signal: Use of List to define a collection of items,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 7343, 284, 8160, 257, 4947, 286, 3709]",1.0,684,ml_signal,76,Use of List to define a collection of items,,684,,[]
🧠 ML Signal: Use of List to define a collection of items,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 7343, 284, 8160, 257, 4947, 286, 3709]",1.0,695,ml_signal,78,Use of List to define a collection of items,,684,    entity_ids: List[str],"[220, 220, 220, 9312, 62, 2340, 25, 7343, 58, 2536, 60]"
"✅ Best Practice: Inheriting from CustomModel suggests a structured approach, likely using a framework like Pydantic for data validation.","[26486, 227, 6705, 19939, 25, 47025, 1780, 422, 8562, 17633, 5644, 257, 20793, 3164, 11, 1884, 1262, 257, 9355, 588, 350, 5173, 5109, 329, 1366, 21201, 13]",1.0,695,best_practice,72,"Inheriting from CustomModel suggests a structured approach, likely using a framework like Pydantic for data validation.",,695,,[]
🧠 ML Signal: The use of 'entity_id' as a string identifier can be a common pattern in data models.,"[8582, 100, 254, 10373, 26484, 25, 383, 779, 286, 705, 26858, 62, 312, 6, 355, 257, 4731, 27421, 460, 307, 257, 2219, 3912, 287, 1366, 4981, 13]",1.0,706,ml_signal,74,The use of 'entity_id' as a string identifier can be a common pattern in data models.,,695,    entity_ids: List[str],"[220, 220, 220, 9312, 62, 2340, 25, 7343, 58, 2536, 60]"
"🧠 ML Signal: 'main_tag' indicates a primary categorization, useful for classification tasks.","[8582, 100, 254, 10373, 26484, 25, 705, 12417, 62, 12985, 6, 9217, 257, 4165, 17851, 1634, 11, 4465, 329, 17923, 8861, 13]",1.0,706,ml_signal,76,"'main_tag' indicates a primary categorization, useful for classification tasks.",,706,,[]
✅ Best Practice: Using Optional and default values improves model flexibility and usability.,"[26486, 227, 6705, 19939, 25, 8554, 32233, 290, 4277, 3815, 19575, 2746, 13688, 290, 42863, 13]",1.0,717,best_practice,78,Using Optional and default values improves model flexibility and usability.,,706,    entity_ids: List[str],"[220, 220, 220, 9312, 62, 2340, 25, 7343, 58, 2536, 60]"
✅ Best Practice: Using Optional and default values improves model flexibility and usability.,"[26486, 227, 6705, 19939, 25, 8554, 32233, 290, 4277, 3815, 19575, 2746, 13688, 290, 42863, 13]",1.0,717,best_practice,80,Using Optional and default values improves model flexibility and usability.,,717,,[]
✅ Best Practice: Using Optional and default values improves model flexibility and usability.,"[26486, 227, 6705, 19939, 25, 8554, 32233, 290, 4277, 3815, 19575, 2746, 13688, 290, 42863, 13]",1.0,728,best_practice,82,Using Optional and default values improves model flexibility and usability.,,717,    entity_ids: List[str],"[220, 220, 220, 9312, 62, 2340, 25, 7343, 58, 2536, 60]"
✅ Best Practice: Using Optional and default values improves model flexibility and usability.,"[26486, 227, 6705, 19939, 25, 8554, 32233, 290, 4277, 3815, 19575, 2746, 13688, 290, 42863, 13]",1.0,746,best_practice,84,Using Optional and default values improves model flexibility and usability.,,728,    tag_reason: Optional[str] = Field(default=None),"[220, 220, 220, 7621, 62, 41181, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
"🧠 ML Signal: 'active_hidden_tags' as a dictionary can indicate dynamic or additional metadata, useful for feature engineering.","[8582, 100, 254, 10373, 26484, 25, 705, 5275, 62, 30342, 62, 31499, 6, 355, 257, 22155, 460, 7603, 8925, 393, 3224, 20150, 11, 4465, 329, 3895, 8705, 13]",0.5,755,ml_signal,85,"'active_hidden_tags' as a dictionary can indicate dynamic or additional metadata, useful for feature engineering.",,746,    tag_type: TagType,"[220, 220, 220, 7621, 62, 4906, 25, 17467, 6030]"
"✅ Best Practice: Class should inherit from object explicitly in Python 2 for clarity, though optional in Python 3","[26486, 227, 6705, 19939, 25, 5016, 815, 16955, 422, 2134, 11777, 287, 11361, 362, 329, 16287, 11, 996, 11902, 287, 11361, 513]",0.5,755,best_practice,79,"Class should inherit from object explicitly in Python 2 for clarity, though optional in Python 3",,755,,[]
✅ Best Practice: Type hinting improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5994, 9254, 278, 19575, 2438, 1100, 1799, 290, 5529, 1799]",0.5,766,best_practice,81,Type hinting improves code readability and maintainability,,755,class BatchSetStockTagsModel(CustomModel):,"[4871, 347, 963, 7248, 26207, 36142, 17633, 7, 15022, 17633, 2599]"
✅ Best Practice: Type hinting improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5994, 9254, 278, 19575, 2438, 1100, 1799, 290, 5529, 1799]",0.5,772,best_practice,83,Type hinting improves code readability and maintainability,,766,    tag: str,"[220, 220, 220, 7621, 25, 965]"
"🧠 ML Signal: Definition of a class, useful for understanding object-oriented patterns","[8582, 100, 254, 10373, 26484, 25, 30396, 286, 257, 1398, 11, 4465, 329, 4547, 2134, 12, 17107, 7572]",0.5,783,ml_signal,82,"Definition of a class, useful for understanding object-oriented patterns",,772,    entity_ids: List[str],"[220, 220, 220, 9312, 62, 2340, 25, 7343, 58, 2536, 60]"
"🧠 ML Signal: Use of type annotations, useful for type inference and model training","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2099, 37647, 11, 4465, 329, 2099, 32278, 290, 2746, 3047]",0.5,801,ml_signal,84,"Use of type annotations, useful for type inference and model training",,783,    tag_reason: Optional[str] = Field(default=None),"[220, 220, 220, 7621, 62, 41181, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
✅ Best Practice: Type annotations improve code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5994, 37647, 2987, 2438, 1100, 1799, 290, 5529, 1799]",0.5,810,best_practice,85,Type annotations improve code readability and maintainability,,801,    tag_type: TagType,"[220, 220, 220, 7621, 62, 4906, 25, 17467, 6030]"
"🧠 ML Signal: Use of type annotations, useful for type inference and model training","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2099, 37647, 11, 4465, 329, 2099, 32278, 290, 2746, 3047]",0.5,810,ml_signal,87,"Use of type annotations, useful for type inference and model training",,810,,[]
✅ Best Practice: Type annotations improve code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5994, 37647, 2987, 2438, 1100, 1799, 290, 5529, 1799]",0.5,810,best_practice,87,Type annotations improve code readability and maintainability,,810,,[]
🧠 ML Signal: Use of custom data types for model fields,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2183, 1366, 3858, 329, 2746, 7032]",1.0,810,ml_signal,86,Use of custom data types for model fields,,810,,[]
🧠 ML Signal: Use of standard data types for model fields,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 3210, 1366, 3858, 329, 2746, 7032]",1.0,810,ml_signal,87,Use of standard data types for model fields,,810,,[]
✅ Best Practice: Use of field validators to enforce data integrity,"[26486, 227, 6705, 19939, 25, 5765, 286, 2214, 4938, 2024, 284, 4605, 1366, 11540]",1.0,830,best_practice,90,Use of field validators to enforce data integrity,,810,    main_tag_reason: Optional[str] = Field(default=None),"[220, 220, 220, 1388, 62, 12985, 62, 41181, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
✅ Best Practice: Use of class method for validation logic,"[26486, 227, 6705, 19939, 25, 5765, 286, 1398, 2446, 329, 21201, 9156]",0.5,850,best_practice,92,Use of class method for validation logic,,830,    sub_tag_reason: Optional[str] = Field(default=None),"[220, 220, 220, 850, 62, 12985, 62, 41181, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
✅ Best Practice: Use of class method decorator for methods that don't modify class state,"[26486, 227, 6705, 19939, 25, 5765, 286, 1398, 2446, 11705, 1352, 329, 5050, 326, 836, 470, 13096, 1398, 1181]",0.5,870,best_practice,90,Use of class method decorator for methods that don't modify class state,,850,    main_tag_reason: Optional[str] = Field(default=None),"[220, 220, 220, 1388, 62, 12985, 62, 41181, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
✅ Best Practice: Clear and concise condition to check if a value exists in a list,"[26486, 227, 6705, 19939, 25, 11459, 290, 35327, 4006, 284, 2198, 611, 257, 1988, 7160, 287, 257, 1351]",0.5,890,best_practice,92,Clear and concise condition to check if a value exists in a list,,870,    sub_tag_reason: Optional[str] = Field(default=None),"[220, 220, 220, 850, 62, 12985, 62, 41181, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
⚠️ SAST Risk (Low): Potential information disclosure through error messages,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 1321, 13019, 832, 4049, 6218]",1.0,910,sast_risk,94,Potential information disclosure through error messages,Low,890,    hidden_tag_reason: Optional[str] = Field(default=None),"[220, 220, 220, 7104, 62, 12985, 62, 41181, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
🧠 ML Signal: Return statements can indicate function output patterns,"[8582, 100, 254, 10373, 26484, 25, 8229, 6299, 460, 7603, 2163, 5072, 7572]",0.5,910,ml_signal,96,Return statements can indicate function output patterns,,910,,[]
"🧠 ML Signal: Definition of a class, which could be used to identify class-based patterns","[8582, 100, 254, 10373, 26484, 25, 30396, 286, 257, 1398, 11, 543, 714, 307, 973, 284, 5911, 1398, 12, 3106, 7572]",1.0,930,ml_signal,94,"Definition of a class, which could be used to identify class-based patterns",,910,    hidden_tag_reason: Optional[str] = Field(default=None),"[220, 220, 220, 7104, 62, 12985, 62, 41181, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
"🧠 ML Signal: Use of type annotations, which can be used to infer data types and structures","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2099, 37647, 11, 543, 460, 307, 973, 284, 13249, 1366, 3858, 290, 8573]",1.0,930,ml_signal,96,"Use of type annotations, which can be used to infer data types and structures",,930,,[]
"🧠 ML Signal: Use of type annotations, which can be used to infer data types and structures","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2099, 37647, 11, 543, 460, 307, 973, 284, 13249, 1366, 3858, 290, 8573]",1.0,948,ml_signal,98,"Use of type annotations, which can be used to infer data types and structures",,930,    main_tag: Optional[str] = Field(default=None),"[220, 220, 220, 1388, 62, 12985, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
✅ Best Practice: Inheriting from a custom model class suggests a structured approach to data modeling,"[26486, 227, 6705, 19939, 25, 47025, 1780, 422, 257, 2183, 2746, 1398, 5644, 257, 20793, 3164, 284, 1366, 21128]",0.5,956,best_practice,97,Inheriting from a custom model class suggests a structured approach to data modeling,,948,class StockTagOptions(CustomModel):,"[4871, 10500, 24835, 29046, 7, 15022, 17633, 2599]"
✅ Best Practice: Type annotations improve code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5994, 37647, 2987, 2438, 1100, 1799, 290, 5529, 1799]",0.5,974,best_practice,99,Type annotations improve code readability and maintainability,,956,    sub_tag: Optional[str] = Field(default=None),"[220, 220, 220, 850, 62, 12985, 25, 32233, 58, 2536, 60, 796, 7663, 7, 12286, 28, 14202, 8]"
✅ Best Practice: Type annotations improve code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5994, 37647, 2987, 2438, 1100, 1799, 290, 5529, 1799]",0.5,999,best_practice,101,Type annotations improve code readability and maintainability,,974,"    active_hidden_tags: Optional[Dict[str, str]] = Field(default=None)","[220, 220, 220, 4075, 62, 30342, 62, 31499, 25, 32233, 58, 35, 713, 58, 2536, 11, 965, 11907, 796, 7663, 7, 12286, 28, 14202, 8]"
✅ Best Practice: Providing a default value for insert_mode enhances usability and reduces potential errors,"[26486, 227, 6705, 19939, 25, 7518, 2530, 257, 4277, 1988, 329, 7550, 62, 14171, 32479, 42863, 290, 12850, 2785, 8563]",0.5,1015,best_practice,103,Providing a default value for insert_mode enhances usability and reduces potential errors,,999,    sub_tag_options: List[CreateTagInfoModel],"[220, 220, 220, 850, 62, 12985, 62, 25811, 25, 7343, 58, 16447, 24835, 12360, 17633, 60]"
✅ Best Practice: Use of Optional type hint for better code readability and understanding of possible None values.,"[26486, 227, 6705, 19939, 25, 5765, 286, 32233, 2099, 9254, 329, 1365, 2438, 1100, 1799, 290, 4547, 286, 1744, 6045, 3815, 13]",1.0,1031,best_practice,102,Use of Optional type hint for better code readability and understanding of possible None values.,,1015,    main_tag_options: List[CreateTagInfoModel],"[220, 220, 220, 1388, 62, 12985, 62, 25811, 25, 7343, 58, 16447, 24835, 12360, 17633, 60]"
✅ Best Practice: Use of Optional type hint for better code readability and understanding of possible None values.,"[26486, 227, 6705, 19939, 25, 5765, 286, 32233, 2099, 9254, 329, 1365, 2438, 1100, 1799, 290, 4547, 286, 1744, 6045, 3815, 13]",1.0,1047,best_practice,104,Use of Optional type hint for better code readability and understanding of possible None values.,,1031,    hidden_tag_options: List[CreateTagInfoModel],"[220, 220, 220, 7104, 62, 12985, 62, 25811, 25, 7343, 58, 16447, 24835, 12360, 17633, 60]"
✅ Best Practice: Use of Optional type hint for better code readability and understanding of possible None values.,"[26486, 227, 6705, 19939, 25, 5765, 286, 32233, 2099, 9254, 329, 1365, 2438, 1100, 1799, 290, 4547, 286, 1744, 6045, 3815, 13]",1.0,1056,best_practice,107,Use of Optional type hint for better code readability and understanding of possible None values.,,1047,class SetStockTagsModel(CustomModel):,"[4871, 5345, 26207, 36142, 17633, 7, 15022, 17633, 2599]"
✅ Best Practice: Use of field_validator decorator to ensure data validation logic is encapsulated within the model.,"[26486, 227, 6705, 19939, 25, 5765, 286, 2214, 62, 12102, 1352, 11705, 1352, 284, 4155, 1366, 21201, 9156, 318, 32652, 4817, 1626, 262, 2746, 13]",0.5,1064,best_practice,109,Use of field_validator decorator to ensure data validation logic is encapsulated within the model.,,1056,    main_tag: str,"[220, 220, 220, 1388, 62, 12985, 25, 965]"
"🧠 ML Signal: Conditional logic based on field names, useful for learning validation patterns","[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9156, 1912, 319, 2214, 3891, 11, 4465, 329, 4673, 21201, 7572]",1.0,1072,ml_signal,108,"Conditional logic based on field names, useful for learning validation patterns",,1064,    entity_id: str,"[220, 220, 220, 9312, 62, 312, 25, 965]"
🧠 ML Signal: Use of kwargs to dynamically access other fields,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 479, 86, 22046, 284, 32366, 1895, 584, 7032]",1.0,1097,ml_signal,113,Use of kwargs to dynamically access other fields,,1072,"    active_hidden_tags: Optional[Dict[str, str]] = Field(default=None)","[220, 220, 220, 4075, 62, 30342, 62, 31499, 25, 32233, 58, 35, 713, 58, 2536, 11, 965, 11907, 796, 7663, 7, 12286, 28, 14202, 8]"
⚠️ SAST Risk (Low): Potential for logic error if field names change or are incorrect,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 9156, 4049, 611, 2214, 3891, 1487, 393, 389, 11491]",1.0,1111,sast_risk,115,Potential for logic error if field names change or are incorrect,Low,1097,"    # @field_validator(""main_tag"")","[220, 220, 220, 1303, 2488, 3245, 62, 12102, 1352, 7203, 12417, 62, 12985, 4943]"
✅ Best Practice: Use of field_validator decorator for validation logic,"[26486, 227, 6705, 19939, 25, 5765, 286, 2214, 62, 12102, 1352, 11705, 1352, 329, 21201, 9156]",1.0,1115,best_practice,121,Use of field_validator decorator for validation logic,,1111,    #,"[220, 220, 220, 1303]"
✅ Best Practice: Use of classmethod for validation logic that requires class context,"[26486, 227, 6705, 19939, 25, 5765, 286, 1398, 24396, 329, 21201, 9156, 326, 4433, 1398, 4732]",0.5,1122,best_practice,123,Use of classmethod for validation logic that requires class context,,1115,    # @classmethod,"[220, 220, 220, 1303, 2488, 4871, 24396]"
✅ Best Practice: Check if the input value is not None or empty before proceeding,"[26486, 227, 6705, 19939, 25, 6822, 611, 262, 5128, 1988, 318, 407, 6045, 393, 6565, 878, 18788]",1.0,1126,best_practice,121,Check if the input value is not None or empty before proceeding,,1122,    #,"[220, 220, 220, 1303]"
🧠 ML Signal: Pattern of checking membership in a list or collection,"[8582, 100, 254, 10373, 26484, 25, 23939, 286, 10627, 9931, 287, 257, 1351, 393, 4947]",0.5,1133,ml_signal,123,Pattern of checking membership in a list or collection,,1126,    # @classmethod,"[220, 220, 220, 1303, 2488, 4871, 24396]"
⚠️ SAST Risk (Low): Potential for a runtime error if get_stock_pool_names() returns a non-iterable,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 257, 19124, 4049, 611, 651, 62, 13578, 62, 7742, 62, 14933, 3419, 5860, 257, 1729, 12, 2676, 540]",1.0,1158,sast_risk,124,Potential for a runtime error if get_stock_pool_names() returns a non-iterable,Low,1133,"    # def sub_tag_must_be_in(cls, v: str) -> str:","[220, 220, 220, 1303, 825, 850, 62, 12985, 62, 27238, 62, 1350, 62, 259, 7, 565, 82, 11, 410, 25, 965, 8, 4613, 965, 25]"
⚠️ SAST Risk (Low): Error message may expose sensitive information about valid stock pool names,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 13047, 3275, 743, 15651, 8564, 1321, 546, 4938, 4283, 5933, 3891]",1.0,1195,sast_risk,126,Error message may expose sensitive information about valid stock pool names,Low,1158,"    #         raise ValueError(f""sub_tag: {v} must be created at sub_tag_info at first"")","[220, 220, 220, 1303, 220, 220, 220, 220, 220, 220, 220, 220, 5298, 11052, 12331, 7, 69, 1, 7266, 62, 12985, 25, 1391, 85, 92, 1276, 307, 2727, 379, 850, 62, 12985, 62, 10951, 379, 717, 4943]"
🧠 ML Signal: Use of Optional fields indicates handling of missing or nullable data,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 32233, 7032, 9217, 9041, 286, 4814, 393, 9242, 540, 1366]",1.0,1217,ml_signal,125,Use of Optional fields indicates handling of missing or nullable data,,1195,    #     if v and (v not in get_sub_tags()):,"[220, 220, 220, 1303, 220, 220, 220, 220, 611, 410, 290, 357, 85, 407, 287, 651, 62, 7266, 62, 31499, 3419, 2599]"
🧠 ML Signal: Use of Union type indicates handling of multiple data types,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4479, 2099, 9217, 9041, 286, 3294, 1366, 3858]",1.0,1254,ml_signal,126,Use of Union type indicates handling of multiple data types,,1217,"    #         raise ValueError(f""sub_tag: {v} must be created at sub_tag_info at first"")","[220, 220, 220, 1303, 220, 220, 220, 220, 220, 220, 220, 220, 5298, 11052, 12331, 7, 69, 1, 7266, 62, 12985, 25, 1391, 85, 92, 1276, 307, 2727, 379, 850, 62, 12985, 62, 10951, 379, 717, 4943]"
✅ Best Practice: Use of type annotations improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 19575, 2438, 1100, 1799, 290, 5529, 1799]",1.0,1264,best_practice,127,Use of type annotations improves code readability and maintainability,,1254,    #     return v,"[220, 220, 220, 1303, 220, 220, 220, 220, 1441, 410]"
✅ Best Practice: Use of Field with default values provides clarity on default behavior,"[26486, 227, 6705, 19939, 25, 5765, 286, 7663, 351, 4277, 3815, 3769, 16287, 319, 4277, 4069]",1.0,1268,best_practice,128,Use of Field with default values provides clarity on default behavior,,1264,    #,"[220, 220, 220, 1303]"
✅ Best Practice: Class definition should inherit from a base class for consistency and potential shared functionality,"[26486, 227, 6705, 19939, 25, 5016, 6770, 815, 16955, 422, 257, 2779, 1398, 329, 15794, 290, 2785, 4888, 11244]",0.5,1268,best_practice,143,Class definition should inherit from a base class for consistency and potential shared functionality,,1268,,[]
✅ Best Practice: Type annotations improve code readability and help with static analysis,"[26486, 227, 6705, 19939, 25, 5994, 37647, 2987, 2438, 1100, 1799, 290, 1037, 351, 9037, 3781]",0.5,1280,best_practice,145,Type annotations improve code readability and help with static analysis,,1268,    stock_pool_type: StockPoolType,"[220, 220, 220, 4283, 62, 7742, 62, 4906, 25, 10500, 27201, 6030]"
✅ Best Practice: Use of Optional and default values for fields increases flexibility and robustness,"[26486, 227, 6705, 19939, 25, 5765, 286, 32233, 290, 4277, 3815, 329, 7032, 5732, 13688, 290, 12373, 1108]",0.5,1280,best_practice,147,Use of Optional and default values for fields increases flexibility and robustness,,1280,,[]
✅ Best Practice: Use of Optional and default values for fields increases flexibility and robustness,"[26486, 227, 6705, 19939, 25, 5765, 286, 32233, 290, 4277, 3815, 329, 7032, 5732, 13688, 290, 12373, 1108]",0.5,1290,best_practice,149,Use of Optional and default values for fields increases flexibility and robustness,,1280,class CreateStockPoolInfoModel(CustomModel):,"[4871, 13610, 26207, 27201, 12360, 17633, 7, 15022, 17633, 2599]"
✅ Best Practice: Use of Optional and default values for fields increases flexibility and robustness,"[26486, 227, 6705, 19939, 25, 5765, 286, 32233, 290, 4277, 3815, 329, 7032, 5732, 13688, 290, 12373, 1108]",0.5,1300,best_practice,151,Use of Optional and default values for fields increases flexibility and robustness,,1290,    stock_pool_name: str,"[220, 220, 220, 4283, 62, 7742, 62, 3672, 25, 965]"
✅ Best Practice: Use of Optional and default values for fields increases flexibility and robustness,"[26486, 227, 6705, 19939, 25, 5765, 286, 32233, 290, 4277, 3815, 329, 7032, 5732, 13688, 290, 12373, 1108]",0.5,1315,best_practice,153,Use of Optional and default values for fields increases flexibility and robustness,,1300,"    @field_validator(""stock_pool_name"")","[220, 220, 220, 2488, 3245, 62, 12102, 1352, 7203, 13578, 62, 7742, 62, 3672, 4943]"
✅ Best Practice: Use of Optional and default values for fields increases flexibility and robustness,"[26486, 227, 6705, 19939, 25, 5765, 286, 32233, 290, 4277, 3815, 329, 7032, 5732, 13688, 290, 12373, 1108]",0.5,1338,best_practice,155,Use of Optional and default values for fields increases flexibility and robustness,,1315,"    def stock_pool_name_existed(cls, v: str) -> str:","[220, 220, 220, 825, 4283, 62, 7742, 62, 3672, 62, 1069, 6347, 7, 565, 82, 11, 410, 25, 965, 8, 4613, 965, 25]"
✅ Best Practice: Use of Optional and default values for fields increases flexibility and robustness,"[26486, 227, 6705, 19939, 25, 5765, 286, 32233, 290, 4277, 3815, 329, 7032, 5732, 13688, 290, 12373, 1108]",0.5,1356,best_practice,156,Use of Optional and default values for fields increases flexibility and robustness,,1338,        if v in get_stock_pool_names():,"[220, 220, 220, 220, 220, 220, 220, 611, 410, 287, 651, 62, 13578, 62, 7742, 62, 14933, 33529]"
✅ Best Practice: Use of Optional and default values for fields increases flexibility and robustness,"[26486, 227, 6705, 19939, 25, 5765, 286, 32233, 290, 4277, 3815, 329, 7032, 5732, 13688, 290, 12373, 1108]",0.5,1374,best_practice,156,Use of Optional and default values for fields increases flexibility and robustness,,1356,        if v in get_stock_pool_names():,"[220, 220, 220, 220, 220, 220, 220, 611, 410, 287, 651, 62, 13578, 62, 7742, 62, 14933, 33529]"
"✅ Best Practice: Class docstring is missing, consider adding one to describe the purpose of the class.","[26486, 227, 6705, 19939, 25, 5016, 2205, 8841, 318, 4814, 11, 2074, 4375, 530, 284, 6901, 262, 4007, 286, 262, 1398, 13]",0.5,1374,best_practice,152,"Class docstring is missing, consider adding one to describe the purpose of the class.",,1374,,[]
✅ Best Practice: Attribute type hinting improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 3460, 4163, 2099, 9254, 278, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,1380,best_practice,154,Attribute type hinting improves code readability and maintainability.,,1374,    @classmethod,"[220, 220, 220, 2488, 4871, 24396]"
✅ Best Practice: Type hinting improves code readability and helps with static analysis.,"[26486, 227, 6705, 19939, 25, 5994, 9254, 278, 19575, 2438, 1100, 1799, 290, 5419, 351, 9037, 3781, 13]",0.5,1403,best_practice,155,Type hinting improves code readability and helps with static analysis.,,1380,"    def stock_pool_name_existed(cls, v: str) -> str:","[220, 220, 220, 825, 4283, 62, 7742, 62, 3672, 62, 1069, 6347, 7, 565, 82, 11, 410, 25, 965, 8, 4613, 965, 25]"
✅ Best Practice: Using __all__ to define public API of the module improves maintainability and readability.,"[26486, 227, 6705, 19939, 25, 8554, 11593, 439, 834, 284, 8160, 1171, 7824, 286, 262, 8265, 19575, 5529, 1799, 290, 1100, 1799, 13]",0.5,1421,best_practice,156,Using __all__ to define public API of the module improves maintainability and readability.,,1403,        if v in get_stock_pool_names():,"[220, 220, 220, 220, 220, 220, 220, 611, 410, 287, 651, 62, 13578, 62, 7742, 62, 14933, 33529]"
