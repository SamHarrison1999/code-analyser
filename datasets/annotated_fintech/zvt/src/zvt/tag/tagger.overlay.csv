annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
"‚úÖ Best Practice: Grouping imports into standard library, third-party, and local application sections improves readability.","[26486, 227, 6705, 19939, 25, 4912, 278, 17944, 656, 3210, 5888, 11, 2368, 12, 10608, 11, 290, 1957, 3586, 9004, 19575, 1100, 1799, 13]",0.5,4,best_practice,3,"Grouping imports into standard library, third-party, and local application sections improves readability.",,0,from typing import Type,"[6738, 19720, 1330, 5994]"
‚úÖ Best Practice: Using a logger with __name__ ensures that the log messages are correctly associated with the module name.,"[26486, 227, 6705, 19939, 25, 8554, 257, 49706, 351, 11593, 3672, 834, 19047, 326, 262, 2604, 6218, 389, 9380, 3917, 351, 262, 8265, 1438, 13]",0.5,18,best_practice,11,Using a logger with __name__ ensures that the log messages are correctly associated with the module name.,,4,from zvt.tag.tag_schemas import StockTags,"[6738, 1976, 36540, 13, 12985, 13, 12985, 62, 1416, 4411, 292, 1330, 10500, 36142]"
‚úÖ Best Practice: Class should inherit from a base class to ensure consistent behavior and structure,"[26486, 227, 6705, 19939, 25, 5016, 815, 16955, 422, 257, 2779, 1398, 284, 4155, 6414, 4069, 290, 4645]",1.0,32,best_practice,11,Class should inherit from a base class to ensure consistent behavior and structure,,18,from zvt.tag.tag_schemas import StockTags,"[6738, 1976, 36540, 13, 12985, 13, 12985, 62, 1416, 4411, 292, 1330, 10500, 36142]"
‚úÖ Best Practice: Defining state_schema for the class to ensure consistent state management,"[26486, 227, 6705, 19939, 25, 2896, 3191, 1181, 62, 15952, 2611, 329, 262, 1398, 284, 4155, 6414, 1181, 4542]",0.5,45,best_practice,13,Defining state_schema for the class to ensure consistent state management,,32,logger = logging.getLogger(__name__),"[6404, 1362, 796, 18931, 13, 1136, 11187, 1362, 7, 834, 3672, 834, 8]"
‚úÖ Best Practice: Type hinting for entity_schema to improve code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5994, 9254, 278, 329, 9312, 62, 15952, 2611, 284, 2987, 2438, 1100, 1799, 290, 5529, 1799]",1.0,45,best_practice,15,Type hinting for entity_schema to improve code readability and maintainability,,45,,[]
‚úÖ Best Practice: Type hinting for data_schema to improve code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5994, 9254, 278, 329, 1366, 62, 15952, 2611, 284, 2987, 2438, 1100, 1799, 290, 5529, 1799]",1.0,56,best_practice,17,Type hinting for data_schema to improve code readability and maintainability,,45,    state_schema = TaggerState,"[220, 220, 220, 1181, 62, 15952, 2611, 796, 309, 7928, 9012]"
üß† ML Signal: Hardcoded start timestamp could be used to identify patterns or trends over time,"[8582, 100, 254, 10373, 26484, 25, 6912, 40976, 923, 41033, 714, 307, 973, 284, 5911, 7572, 393, 11257, 625, 640]",0.5,73,ml_signal,19,Hardcoded start timestamp could be used to identify patterns or trends over time,,56,    entity_schema: Type[TradableEntity] = None,"[220, 220, 220, 9312, 62, 15952, 2611, 25, 5994, 58, 2898, 324, 540, 32398, 60, 796, 6045]"
‚ö†Ô∏è SAST Risk (Low): Use of assert for runtime checks can be disabled with optimization flags,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 6818, 329, 19124, 8794, 460, 307, 10058, 351, 23989, 9701]",0.5,73,sast_risk,18,Use of assert for runtime checks can be disabled with optimization flags,Low,73,,[]
‚ö†Ô∏è SAST Risk (Low): Use of assert for runtime checks can be disabled with optimization flags,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 6818, 329, 19124, 8794, 460, 307, 10058, 351, 23989, 9701]",0.5,73,sast_risk,20,Use of assert for runtime checks can be disabled with optimization flags,Low,73,,[]
üß† ML Signal: Usage of a specific database session provider,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2176, 6831, 6246, 10131]",0.5,88,ml_signal,23,Usage of a specific database session provider,,73,"    start_timestamp = ""2018-01-01""","[220, 220, 220, 923, 62, 16514, 27823, 796, 366, 7908, 12, 486, 12, 486, 1]"
üß† ML Signal: Logging usage pattern for state management,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 8748, 3912, 329, 1181, 4542]",0.5,101,ml_signal,26,Logging usage pattern for state management,,88,        super().__init__(),"[220, 220, 220, 220, 220, 220, 220, 2208, 22446, 834, 15003, 834, 3419]"
üß† ML Signal: Logging usage pattern for tracking execution flow,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 8748, 3912, 329, 9646, 9706, 5202]",0.5,113,ml_signal,29,Logging usage pattern for tracking execution flow,,101,        self.force = force,"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 3174, 796, 2700]"
‚úÖ Best Practice: Method should have a docstring explaining its purpose,"[26486, 227, 6705, 19939, 25, 11789, 815, 423, 257, 2205, 8841, 11170, 663, 4007]",1.0,126,best_practice,26,Method should have a docstring explaining its purpose,,113,        super().__init__(),"[220, 220, 220, 220, 220, 220, 220, 2208, 22446, 834, 15003, 834, 3419]"
‚úÖ Best Practice: Consider providing a custom error message for clarity,"[26486, 227, 6705, 19939, 25, 12642, 4955, 257, 2183, 4049, 3275, 329, 16287]",0.5,143,best_practice,28,Consider providing a custom error message for clarity,,126,        assert self.data_schema is not None,"[220, 220, 220, 220, 220, 220, 220, 6818, 2116, 13, 7890, 62, 15952, 2611, 318, 407, 6045]"
‚úÖ Best Practice: Class definition should inherit from a base class to promote code reuse and maintainability,"[26486, 227, 6705, 19939, 25, 5016, 6770, 815, 16955, 422, 257, 2779, 1398, 284, 7719, 2438, 32349, 290, 5529, 1799]",0.5,160,best_practice,28,Class definition should inherit from a base class to promote code reuse and maintainability,,143,        assert self.data_schema is not None,"[220, 220, 220, 220, 220, 220, 220, 6818, 2116, 13, 7890, 62, 15952, 2611, 318, 407, 6045]"
‚úÖ Best Practice: Class attributes should be defined at the top of the class for better readability,"[26486, 227, 6705, 19939, 25, 5016, 12608, 815, 307, 5447, 379, 262, 1353, 286, 262, 1398, 329, 1365, 1100, 1799]",0.5,195,best_practice,30,Class attributes should be defined at the top of the class for better readability,,160,"        self.session = get_db_session(provider=""zvt"", data_schema=self.data_schema)","[220, 220, 220, 220, 220, 220, 220, 2116, 13, 29891, 796, 651, 62, 9945, 62, 29891, 7, 15234, 1304, 2625, 89, 36540, 1600, 1366, 62, 15952, 2611, 28, 944, 13, 7890, 62, 15952, 2611, 8]"
‚úÖ Best Practice: Class attributes should be defined at the top of the class for better readability,"[26486, 227, 6705, 19939, 25, 5016, 12608, 815, 307, 5447, 379, 262, 1353, 286, 262, 1398, 329, 1365, 1100, 1799]",0.5,220,best_practice,32,Class attributes should be defined at the top of the class for better readability,,195,"            logger.info(f""get start_timestamp from state"")","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 49706, 13, 10951, 7, 69, 1, 1136, 923, 62, 16514, 27823, 422, 1181, 4943]"
‚úÖ Best Practice: Method should be defined within a class,"[26486, 227, 6705, 19939, 25, 11789, 815, 307, 5447, 1626, 257, 1398]",0.5,237,best_practice,31,Method should be defined within a class,,220,        if self.state and not self.force:,"[220, 220, 220, 220, 220, 220, 220, 611, 2116, 13, 5219, 290, 407, 2116, 13, 3174, 25]"
‚úÖ Best Practice: Raising NotImplementedError is a common pattern for abstract methods,"[26486, 227, 6705, 19939, 25, 7567, 1710, 1892, 3546, 1154, 12061, 12331, 318, 257, 2219, 3912, 329, 12531, 5050]",0.5,264,best_practice,33,Raising NotImplementedError is a common pattern for abstract methods,,237,"            self.start_timestamp = self.state[""current_timestamp""]","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 9688, 62, 16514, 27823, 796, 2116, 13, 5219, 14692, 14421, 62, 16514, 27823, 8973]"
‚úÖ Best Practice: __all__ is used to define the public interface of the module,"[26486, 227, 6705, 19939, 25, 11593, 439, 834, 318, 973, 284, 8160, 262, 1171, 7071, 286, 262, 8265]",1.0,291,best_practice,33,__all__ is used to define the public interface of the module,,264,"            self.start_timestamp = self.state[""current_timestamp""]","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 9688, 62, 16514, 27823, 796, 2116, 13, 5219, 14692, 14421, 62, 16514, 27823, 8973]"
