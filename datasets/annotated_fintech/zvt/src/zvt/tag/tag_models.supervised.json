[
  {
    "line": 2,
    "text": "from typing import Dict, Union, List, Optional",
    "annotation": "\u2705 Best Practice: Importing specific functions or classes from a module improves code readability and avoids potential namespace conflicts.",
    "confidence": 1.0,
    "tokens": [
      6738,
      19720,
      1330,
      360,
      713,
      11,
      4479,
      11,
      7343,
      11,
      32233
    ],
    "start_token": 0,
    "end_token": 11,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      17267,
      278,
      2176,
      5499,
      393,
      6097,
      422,
      257,
      8265,
      19575,
      2438,
      1100,
      1799,
      290,
      30940,
      2785,
      25745,
      12333,
      13
    ],
    "label": "best_practice",
    "reason": "Importing specific functions or classes from a module improves code readability and avoids potential namespace conflicts."
  },
  {
    "line": 4,
    "text": "from pydantic import field_validator, Field",
    "annotation": "\u2705 Best Practice: Importing specific functions or classes from a module improves code readability and avoids potential namespace conflicts.",
    "confidence": 1.0,
    "tokens": [
      6738,
      279,
      5173,
      5109,
      1330,
      2214,
      62,
      12102,
      1352,
      11,
      7663
    ],
    "start_token": 11,
    "end_token": 22,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      17267,
      278,
      2176,
      5499,
      393,
      6097,
      422,
      257,
      8265,
      19575,
      2438,
      1100,
      1799,
      290,
      30940,
      2785,
      25745,
      12333,
      13
    ],
    "label": "best_practice",
    "reason": "Importing specific functions or classes from a module improves code readability and avoids potential namespace conflicts."
  },
  {
    "line": 6,
    "text": "",
    "annotation": "\u2705 Best Practice: Importing specific functions or classes from a module improves code readability and avoids potential namespace conflicts.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 22,
    "end_token": 22,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      17267,
      278,
      2176,
      5499,
      393,
      6097,
      422,
      257,
      8265,
      19575,
      2438,
      1100,
      1799,
      290,
      30940,
      2785,
      25745,
      12333,
      13
    ],
    "label": "best_practice",
    "reason": "Importing specific functions or classes from a module improves code readability and avoids potential namespace conflicts."
  },
  {
    "line": 8,
    "text": "from zvt.tag.common import StockPoolType, TagType, TagStatsQueryType, InsertMode",
    "annotation": "\u2705 Best Practice: Importing specific functions or classes from a module improves code readability and avoids potential namespace conflicts.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      12985,
      13,
      11321,
      1330,
      10500,
      27201,
      6030,
      11,
      17467,
      6030,
      11,
      17467,
      29668,
      20746,
      6030,
      11,
      35835,
      19076
    ],
    "start_token": 22,
    "end_token": 44,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      17267,
      278,
      2176,
      5499,
      393,
      6097,
      422,
      257,
      8265,
      19575,
      2438,
      1100,
      1799,
      290,
      30940,
      2785,
      25745,
      12333,
      13
    ],
    "label": "best_practice",
    "reason": "Importing specific functions or classes from a module improves code readability and avoids potential namespace conflicts."
  },
  {
    "line": 10,
    "text": "",
    "annotation": "\u2705 Best Practice: Importing specific functions or classes from a module improves code readability and avoids potential namespace conflicts.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 44,
    "end_token": 44,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      17267,
      278,
      2176,
      5499,
      393,
      6097,
      422,
      257,
      8265,
      19575,
      2438,
      1100,
      1799,
      290,
      30940,
      2785,
      25745,
      12333,
      13
    ],
    "label": "best_practice",
    "reason": "Importing specific functions or classes from a module improves code readability and avoids potential namespace conflicts."
  },
  {
    "line": 7,
    "text": "from zvt.contract.model import MixinModel, CustomModel",
    "annotation": "\ud83e\udde0 ML Signal: Definition of a data model class, useful for understanding data structures",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      28484,
      13,
      19849,
      1330,
      15561,
      259,
      17633,
      11,
      8562,
      17633
    ],
    "start_token": 44,
    "end_token": 58,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      30396,
      286,
      257,
      1366,
      2746,
      1398,
      11,
      4465,
      329,
      4547,
      1366,
      8573
    ],
    "label": "ml_signal",
    "reason": "Definition of a data model class, useful for understanding data structures"
  },
  {
    "line": 9,
    "text": "from zvt.tag.tag_utils import get_stock_pool_names",
    "annotation": "\ud83e\udde0 ML Signal: Usage of type annotations for class attributes",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      12985,
      13,
      12985,
      62,
      26791,
      1330,
      651,
      62,
      13578,
      62,
      7742,
      62,
      14933
    ],
    "start_token": 58,
    "end_token": 75,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2099,
      37647,
      329,
      1398,
      12608
    ],
    "label": "ml_signal",
    "reason": "Usage of type annotations for class attributes"
  },
  {
    "line": 11,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional type hint indicating nullable fields",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 75,
    "end_token": 75,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      2099,
      9254,
      12739,
      9242,
      540,
      7032
    ],
    "label": "ml_signal",
    "reason": "Use of Optional type hint indicating nullable fields"
  },
  {
    "line": 12,
    "text": "class TagInfoModel(MixinModel):",
    "annotation": "\u2705 Best Practice: Use of Field with default value for optional fields",
    "confidence": 0.5,
    "tokens": [
      4871,
      17467,
      12360,
      17633,
      7,
      35608,
      259,
      17633,
      2599
    ],
    "start_token": 75,
    "end_token": 84,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      7663,
      351,
      4277,
      1988,
      329,
      11902,
      7032
    ],
    "label": "best_practice",
    "reason": "Use of Field with default value for optional fields"
  },
  {
    "line": 14,
    "text": "    tag_reason: Optional[str] = Field(default=None)",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional type hint indicating nullable fields",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      7621,
      62,
      41181,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 84,
    "end_token": 102,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      2099,
      9254,
      12739,
      9242,
      540,
      7032
    ],
    "label": "ml_signal",
    "reason": "Use of Optional type hint indicating nullable fields"
  },
  {
    "line": 15,
    "text": "    main_tag: Optional[str] = Field(default=None)",
    "annotation": "\u2705 Best Practice: Use of Field with default value for optional fields",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1388,
      62,
      12985,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 102,
    "end_token": 120,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      7663,
      351,
      4277,
      1988,
      329,
      11902,
      7032
    ],
    "label": "best_practice",
    "reason": "Use of Field with default value for optional fields"
  },
  {
    "line": 11,
    "text": "",
    "annotation": "\u2705 Best Practice: Class should inherit from a base model to ensure consistent behavior and structure",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 120,
    "end_token": 120,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      815,
      16955,
      422,
      257,
      2779,
      2746,
      284,
      4155,
      6414,
      4069,
      290,
      4645
    ],
    "label": "best_practice",
    "reason": "Class should inherit from a base model to ensure consistent behavior and structure"
  },
  {
    "line": 13,
    "text": "    tag: str",
    "annotation": "\ud83e\udde0 ML Signal: Use of type hints for attributes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      7621,
      25,
      965
    ],
    "start_token": 120,
    "end_token": 126,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2099,
      20269,
      329,
      12608
    ],
    "label": "ml_signal",
    "reason": "Use of type hints for attributes"
  },
  {
    "line": 15,
    "text": "    main_tag: Optional[str] = Field(default=None)",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional type hint to indicate that the field can be None",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1388,
      62,
      12985,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 126,
    "end_token": 144,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      2099,
      9254,
      284,
      7603,
      326,
      262,
      2214,
      460,
      307,
      6045
    ],
    "label": "ml_signal",
    "reason": "Use of Optional type hint to indicate that the field can be None"
  },
  {
    "line": 16,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of Field with default value for optional fields",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 144,
    "end_token": 144,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      7663,
      351,
      4277,
      1988,
      329,
      11902,
      7032
    ],
    "label": "best_practice",
    "reason": "Use of Field with default value for optional fields"
  },
  {
    "line": 15,
    "text": "    main_tag: Optional[str] = Field(default=None)",
    "annotation": "\ud83e\udde0 ML Signal: Use of class attributes to define data model fields",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1388,
      62,
      12985,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 144,
    "end_token": 162,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1398,
      12608,
      284,
      8160,
      1366,
      2746,
      7032
    ],
    "label": "ml_signal",
    "reason": "Use of class attributes to define data model fields"
  },
  {
    "line": 17,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of class attributes to define data model fields",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 162,
    "end_token": 162,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1398,
      12608,
      284,
      8160,
      1366,
      2746,
      7032
    ],
    "label": "ml_signal",
    "reason": "Use of class attributes to define data model fields"
  },
  {
    "line": 19,
    "text": "    tag: str",
    "annotation": "\ud83e\udde0 ML Signal: Use of class attributes to define data model fields",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      7621,
      25,
      965
    ],
    "start_token": 162,
    "end_token": 168,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1398,
      12608,
      284,
      8160,
      1366,
      2746,
      7032
    ],
    "label": "ml_signal",
    "reason": "Use of class attributes to define data model fields"
  },
  {
    "line": 19,
    "text": "    tag: str",
    "annotation": "\u2705 Best Practice: Type annotations improve code readability and maintainability.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      7621,
      25,
      965
    ],
    "start_token": 168,
    "end_token": 174,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      37647,
      2987,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Type annotations improve code readability and maintainability."
  },
  {
    "line": 21,
    "text": "",
    "annotation": "\u2705 Best Practice: Type annotations improve code readability and maintainability.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 174,
    "end_token": 174,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      37647,
      2987,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Type annotations improve code readability and maintainability."
  },
  {
    "line": 21,
    "text": "",
    "annotation": "\u2705 Best Practice: Class should inherit from a base class to ensure consistent behavior and attributes",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 174,
    "end_token": 174,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      815,
      16955,
      422,
      257,
      2779,
      1398,
      284,
      4155,
      6414,
      4069,
      290,
      12608
    ],
    "label": "best_practice",
    "reason": "Class should inherit from a base class to ensure consistent behavior and attributes"
  },
  {
    "line": 23,
    "text": "class IndustryInfoModel(MixinModel):",
    "annotation": "\u2705 Best Practice: Type annotations improve code readability and help with static analysis",
    "confidence": 0.5,
    "tokens": [
      4871,
      17420,
      12360,
      17633,
      7,
      35608,
      259,
      17633,
      2599
    ],
    "start_token": 174,
    "end_token": 183,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      37647,
      2987,
      2438,
      1100,
      1799,
      290,
      1037,
      351,
      9037,
      3781
    ],
    "label": "best_practice",
    "reason": "Type annotations improve code readability and help with static analysis"
  },
  {
    "line": 25,
    "text": "    description: str",
    "annotation": "\u2705 Best Practice: Type annotations improve code readability and help with static analysis",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6764,
      25,
      965
    ],
    "start_token": 183,
    "end_token": 189,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      37647,
      2987,
      2438,
      1100,
      1799,
      290,
      1037,
      351,
      9037,
      3781
    ],
    "label": "best_practice",
    "reason": "Type annotations improve code readability and help with static analysis"
  },
  {
    "line": 24,
    "text": "    industry_name: str",
    "annotation": "\u2705 Best Practice: Class should inherit from a base class to ensure consistent behavior and structure",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2831,
      62,
      3672,
      25,
      965
    ],
    "start_token": 189,
    "end_token": 197,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      815,
      16955,
      422,
      257,
      2779,
      1398,
      284,
      4155,
      6414,
      4069,
      290,
      4645
    ],
    "label": "best_practice",
    "reason": "Class should inherit from a base class to ensure consistent behavior and structure"
  },
  {
    "line": 26,
    "text": "    # related main tag",
    "annotation": "\ud83e\udde0 ML Signal: Usage of type annotations for class attributes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      3519,
      1388,
      7621
    ],
    "start_token": 197,
    "end_token": 204,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2099,
      37647,
      329,
      1398,
      12608
    ],
    "label": "ml_signal",
    "reason": "Usage of type annotations for class attributes"
  },
  {
    "line": 28,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of type annotations for class attributes",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 204,
    "end_token": 204,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2099,
      37647,
      329,
      1398,
      12608
    ],
    "label": "ml_signal",
    "reason": "Usage of type annotations for class attributes"
  },
  {
    "line": 27,
    "text": "    main_tag: str",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional and Union types indicates handling of nullable fields",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1388,
      62,
      12985,
      25,
      965
    ],
    "start_token": 204,
    "end_token": 212,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      290,
      4479,
      3858,
      9217,
      9041,
      286,
      9242,
      540,
      7032
    ],
    "label": "ml_signal",
    "reason": "Use of Optional and Union types indicates handling of nullable fields"
  },
  {
    "line": 28,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of Optional for fields that can be None improves code readability",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 212,
    "end_token": 212,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      32233,
      329,
      7032,
      326,
      460,
      307,
      6045,
      19575,
      2438,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of Optional for fields that can be None improves code readability"
  },
  {
    "line": 30,
    "text": "class MainTagIndustryRelation(CustomModel):",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional and Union types indicates handling of nullable fields",
    "confidence": 1.0,
    "tokens": [
      4871,
      8774,
      24835,
      35848,
      563,
      6892,
      341,
      7,
      15022,
      17633,
      2599
    ],
    "start_token": 212,
    "end_token": 223,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      290,
      4479,
      3858,
      9217,
      9041,
      286,
      9242,
      540,
      7032
    ],
    "label": "ml_signal",
    "reason": "Use of Optional and Union types indicates handling of nullable fields"
  },
  {
    "line": 31,
    "text": "    main_tag: str",
    "annotation": "\u2705 Best Practice: Use of Optional for fields that can be None improves code readability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1388,
      62,
      12985,
      25,
      965
    ],
    "start_token": 223,
    "end_token": 231,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      32233,
      329,
      7032,
      326,
      460,
      307,
      6045,
      19575,
      2438,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of Optional for fields that can be None improves code readability"
  },
  {
    "line": 33,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of Dict type indicates key-value storage pattern",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 231,
    "end_token": 231,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      360,
      713,
      2099,
      9217,
      1994,
      12,
      8367,
      6143,
      3912
    ],
    "label": "ml_signal",
    "reason": "Use of Dict type indicates key-value storage pattern"
  },
  {
    "line": 35,
    "text": "class MainTagSubTagRelation(CustomModel):",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional and Union types indicates handling of nullable fields",
    "confidence": 1.0,
    "tokens": [
      4871,
      8774,
      24835,
      7004,
      24835,
      6892,
      341,
      7,
      15022,
      17633,
      2599
    ],
    "start_token": 231,
    "end_token": 242,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      290,
      4479,
      3858,
      9217,
      9041,
      286,
      9242,
      540,
      7032
    ],
    "label": "ml_signal",
    "reason": "Use of Optional and Union types indicates handling of nullable fields"
  },
  {
    "line": 36,
    "text": "    main_tag: str",
    "annotation": "\u2705 Best Practice: Use of Optional for fields that can be None improves code readability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1388,
      62,
      12985,
      25,
      965
    ],
    "start_token": 242,
    "end_token": 250,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      32233,
      329,
      7032,
      326,
      460,
      307,
      6045,
      19575,
      2438,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of Optional for fields that can be None improves code readability"
  },
  {
    "line": 38,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional and Union types indicates handling of nullable fields",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 250,
    "end_token": 250,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      290,
      4479,
      3858,
      9217,
      9041,
      286,
      9242,
      540,
      7032
    ],
    "label": "ml_signal",
    "reason": "Use of Optional and Union types indicates handling of nullable fields"
  },
  {
    "line": 39,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of Optional for fields that can be None improves code readability",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 250,
    "end_token": 250,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      32233,
      329,
      7032,
      326,
      460,
      307,
      6045,
      19575,
      2438,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of Optional for fields that can be None improves code readability"
  },
  {
    "line": 41,
    "text": "    current_main_tag: str",
    "annotation": "\ud83e\udde0 ML Signal: Use of Union type indicates handling of multiple possible types",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1459,
      62,
      12417,
      62,
      12985,
      25,
      965
    ],
    "start_token": 250,
    "end_token": 260,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4479,
      2099,
      9217,
      9041,
      286,
      3294,
      1744,
      3858
    ],
    "label": "ml_signal",
    "reason": "Use of Union type indicates handling of multiple possible types"
  },
  {
    "line": 43,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of Union type indicates handling of multiple possible types",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 260,
    "end_token": 260,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4479,
      2099,
      9217,
      9041,
      286,
      3294,
      1744,
      3858
    ],
    "label": "ml_signal",
    "reason": "Use of Union type indicates handling of multiple possible types"
  },
  {
    "line": 45,
    "text": "class StockTagsModel(MixinModel):",
    "annotation": "\ud83e\udde0 ML Signal: Use of Union type indicates handling of multiple possible types",
    "confidence": 1.0,
    "tokens": [
      4871,
      10500,
      36142,
      17633,
      7,
      35608,
      259,
      17633,
      2599
    ],
    "start_token": 260,
    "end_token": 269,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4479,
      2099,
      9217,
      9041,
      286,
      3294,
      1744,
      3858
    ],
    "label": "ml_signal",
    "reason": "Use of Union type indicates handling of multiple possible types"
  },
  {
    "line": 47,
    "text": "    main_tag_reason: Optional[str] = Field(default=None)",
    "annotation": "\ud83e\udde0 ML Signal: Boolean flag indicating a user action or state",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1388,
      62,
      12985,
      62,
      41181,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 269,
    "end_token": 289,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      41146,
      6056,
      12739,
      257,
      2836,
      2223,
      393,
      1181
    ],
    "label": "ml_signal",
    "reason": "Boolean flag indicating a user action or state"
  },
  {
    "line": 37,
    "text": "    sub_tag_list: List[str]",
    "annotation": "\ud83e\udde0 ML Signal: Use of a custom model class, indicating a pattern for model definition",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      12985,
      62,
      4868,
      25,
      7343,
      58,
      2536,
      60
    ],
    "start_token": 289,
    "end_token": 302,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      2183,
      2746,
      1398,
      11,
      12739,
      257,
      3912,
      329,
      2746,
      6770
    ],
    "label": "ml_signal",
    "reason": "Use of a custom model class, indicating a pattern for model definition"
  },
  {
    "line": 39,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of entity_id as a string, common pattern for unique identifiers",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 302,
    "end_token": 302,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      9312,
      62,
      312,
      355,
      257,
      4731,
      11,
      2219,
      3912,
      329,
      3748,
      42814
    ],
    "label": "ml_signal",
    "reason": "Use of entity_id as a string, common pattern for unique identifiers"
  },
  {
    "line": 41,
    "text": "    current_main_tag: str",
    "annotation": "\ud83e\udde0 ML Signal: Use of name as a string, common pattern for naming entities",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1459,
      62,
      12417,
      62,
      12985,
      25,
      965
    ],
    "start_token": 302,
    "end_token": 312,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1438,
      355,
      257,
      4731,
      11,
      2219,
      3912,
      329,
      19264,
      12066
    ],
    "label": "ml_signal",
    "reason": "Use of name as a string, common pattern for naming entities"
  },
  {
    "line": 43,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional and default values, indicating nullable fields",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 312,
    "end_token": 312,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      290,
      4277,
      3815,
      11,
      12739,
      9242,
      540,
      7032
    ],
    "label": "ml_signal",
    "reason": "Use of Optional and default values, indicating nullable fields"
  },
  {
    "line": 45,
    "text": "class StockTagsModel(MixinModel):",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional and default values, indicating nullable fields",
    "confidence": 1.0,
    "tokens": [
      4871,
      10500,
      36142,
      17633,
      7,
      35608,
      259,
      17633,
      2599
    ],
    "start_token": 312,
    "end_token": 321,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      290,
      4277,
      3815,
      11,
      12739,
      9242,
      540,
      7032
    ],
    "label": "ml_signal",
    "reason": "Use of Optional and default values, indicating nullable fields"
  },
  {
    "line": 47,
    "text": "    main_tag_reason: Optional[str] = Field(default=None)",
    "annotation": "\ud83e\udde0 ML Signal: Use of dictionary to map tags, common pattern for key-value storage",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1388,
      62,
      12985,
      62,
      41181,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 321,
    "end_token": 341,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      22155,
      284,
      3975,
      15940,
      11,
      2219,
      3912,
      329,
      1994,
      12,
      8367,
      6143
    ],
    "label": "ml_signal",
    "reason": "Use of dictionary to map tags, common pattern for key-value storage"
  },
  {
    "line": 49,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of Union for type flexibility, indicating optional fields",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 341,
    "end_token": 341,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4479,
      329,
      2099,
      13688,
      11,
      12739,
      11902,
      7032
    ],
    "label": "ml_signal",
    "reason": "Use of Union for type flexibility, indicating optional fields"
  },
  {
    "line": 51,
    "text": "    sub_tag_reason: Optional[str] = Field(default=None)",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional and default values, indicating nullable fields",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      12985,
      62,
      41181,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 341,
    "end_token": 361,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      290,
      4277,
      3815,
      11,
      12739,
      9242,
      540,
      7032
    ],
    "label": "ml_signal",
    "reason": "Use of Optional and default values, indicating nullable fields"
  },
  {
    "line": 53,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of Union for type flexibility, indicating optional fields",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 361,
    "end_token": 361,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4479,
      329,
      2099,
      13688,
      11,
      12739,
      11902,
      7032
    ],
    "label": "ml_signal",
    "reason": "Use of Union for type flexibility, indicating optional fields"
  },
  {
    "line": 55,
    "text": "    hidden_tags: Union[Dict[str, str], None]",
    "annotation": "\ud83e\udde0 ML Signal: Use of Union for type flexibility, indicating optional fields",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      7104,
      62,
      31499,
      25,
      4479,
      58,
      35,
      713,
      58,
      2536,
      11,
      965,
      4357,
      6045,
      60
    ],
    "start_token": 361,
    "end_token": 379,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4479,
      329,
      2099,
      13688,
      11,
      12739,
      11902,
      7032
    ],
    "label": "ml_signal",
    "reason": "Use of Union for type flexibility, indicating optional fields"
  },
  {
    "line": 57,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional and default values, indicating nullable fields",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 379,
    "end_token": 379,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      290,
      4277,
      3815,
      11,
      12739,
      9242,
      540,
      7032
    ],
    "label": "ml_signal",
    "reason": "Use of Optional and default values, indicating nullable fields"
  },
  {
    "line": 59,
    "text": "class SimpleStockTagsModel(CustomModel):",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional and default values, indicating nullable fields",
    "confidence": 1.0,
    "tokens": [
      4871,
      17427,
      26207,
      36142,
      17633,
      7,
      15022,
      17633,
      2599
    ],
    "start_token": 379,
    "end_token": 388,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      290,
      4277,
      3815,
      11,
      12739,
      9242,
      540,
      7032
    ],
    "label": "ml_signal",
    "reason": "Use of Optional and default values, indicating nullable fields"
  },
  {
    "line": 49,
    "text": "",
    "annotation": "\u2705 Best Practice: Class should inherit from a base class to ensure consistent behavior and structure",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 388,
    "end_token": 388,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      815,
      16955,
      422,
      257,
      2779,
      1398,
      284,
      4155,
      6414,
      4069,
      290,
      4645
    ],
    "label": "best_practice",
    "reason": "Class should inherit from a base class to ensure consistent behavior and structure"
  },
  {
    "line": 51,
    "text": "    sub_tag_reason: Optional[str] = Field(default=None)",
    "annotation": "\u2705 Best Practice: Use of type hinting for better code readability and maintainability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      12985,
      62,
      41181,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 388,
    "end_token": 408,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      9254,
      278,
      329,
      1365,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of type hinting for better code readability and maintainability"
  },
  {
    "line": 51,
    "text": "    sub_tag_reason: Optional[str] = Field(default=None)",
    "annotation": "\ud83e\udde0 ML Signal: Use of a custom model class, which may indicate a pattern for model inheritance",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      12985,
      62,
      41181,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 408,
    "end_token": 428,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      2183,
      2746,
      1398,
      11,
      543,
      743,
      7603,
      257,
      3912,
      329,
      2746,
      24155
    ],
    "label": "ml_signal",
    "reason": "Use of a custom model class, which may indicate a pattern for model inheritance"
  },
  {
    "line": 52,
    "text": "    sub_tags: Union[Dict[str, str], None]",
    "annotation": "\ud83e\udde0 ML Signal: Use of List[str] suggests a pattern of handling multiple string identifiers",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      31499,
      25,
      4479,
      58,
      35,
      713,
      58,
      2536,
      11,
      965,
      4357,
      6045,
      60
    ],
    "start_token": 428,
    "end_token": 446,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      7343,
      58,
      2536,
      60,
      5644,
      257,
      3912,
      286,
      9041,
      3294,
      4731,
      42814
    ],
    "label": "ml_signal",
    "reason": "Use of List[str] suggests a pattern of handling multiple string identifiers"
  },
  {
    "line": 54,
    "text": "    active_hidden_tags: Union[Dict[str, str], None]",
    "annotation": "\ud83e\udde0 ML Signal: Use of entity_ids as a variable name may indicate a pattern of handling entity identifiers",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      4075,
      62,
      30342,
      62,
      31499,
      25,
      4479,
      58,
      35,
      713,
      58,
      2536,
      11,
      965,
      4357,
      6045,
      60
    ],
    "start_token": 446,
    "end_token": 466,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      9312,
      62,
      2340,
      355,
      257,
      7885,
      1438,
      743,
      7603,
      257,
      3912,
      286,
      9041,
      9312,
      42814
    ],
    "label": "ml_signal",
    "reason": "Use of entity_ids as a variable name may indicate a pattern of handling entity identifiers"
  },
  {
    "line": 53,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Custom model class definition for data validation and serialization",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 466,
    "end_token": 466,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8562,
      2746,
      1398,
      6770,
      329,
      1366,
      21201,
      290,
      11389,
      1634
    ],
    "label": "ml_signal",
    "reason": "Custom model class definition for data validation and serialization"
  },
  {
    "line": 55,
    "text": "    hidden_tags: Union[Dict[str, str], None]",
    "annotation": "\ud83e\udde0 ML Signal: List of entity IDs indicates batch processing",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      7104,
      62,
      31499,
      25,
      4479,
      58,
      35,
      713,
      58,
      2536,
      11,
      965,
      4357,
      6045,
      60
    ],
    "start_token": 466,
    "end_token": 484,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7343,
      286,
      9312,
      32373,
      9217,
      15458,
      7587
    ],
    "label": "ml_signal",
    "reason": "List of entity IDs indicates batch processing"
  },
  {
    "line": 57,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Single tag applied to multiple entities",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 484,
    "end_token": 484,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      14206,
      7621,
      5625,
      284,
      3294,
      12066
    ],
    "label": "ml_signal",
    "reason": "Single tag applied to multiple entities"
  },
  {
    "line": 59,
    "text": "class SimpleStockTagsModel(CustomModel):",
    "annotation": "\u2705 Best Practice: Use of Optional for fields that can be None",
    "confidence": 0.5,
    "tokens": [
      4871,
      17427,
      26207,
      36142,
      17633,
      7,
      15022,
      17633,
      2599
    ],
    "start_token": 484,
    "end_token": 493,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      32233,
      329,
      7032,
      326,
      460,
      307,
      6045
    ],
    "label": "best_practice",
    "reason": "Use of Optional for fields that can be None"
  },
  {
    "line": 61,
    "text": "    name: str",
    "annotation": "\ud83e\udde0 ML Signal: Use of custom type for tag_type indicates domain-specific logic",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1438,
      25,
      965
    ],
    "start_token": 493,
    "end_token": 499,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2183,
      2099,
      329,
      7621,
      62,
      4906,
      9217,
      7386,
      12,
      11423,
      9156
    ],
    "label": "ml_signal",
    "reason": "Use of custom type for tag_type indicates domain-specific logic"
  },
  {
    "line": 58,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of a custom model class indicates a pattern for data modeling",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 499,
    "end_token": 499,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      2183,
      2746,
      1398,
      9217,
      257,
      3912,
      329,
      1366,
      21128
    ],
    "label": "ml_signal",
    "reason": "Use of a custom model class indicates a pattern for data modeling"
  },
  {
    "line": 60,
    "text": "    entity_id: str",
    "annotation": "\ud83e\udde0 ML Signal: Use of type annotations for data validation and model training",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      312,
      25,
      965
    ],
    "start_token": 499,
    "end_token": 507,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      1366,
      21201,
      290,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Use of type annotations for data validation and model training"
  },
  {
    "line": 62,
    "text": "    main_tag: Optional[str] = Field(default=None)",
    "annotation": "\ud83e\udde0 ML Signal: Optional fields with default values indicate nullable or optional data patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1388,
      62,
      12985,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 507,
    "end_token": 525,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      32233,
      7032,
      351,
      4277,
      3815,
      7603,
      9242,
      540,
      393,
      11902,
      1366,
      7572
    ],
    "label": "ml_signal",
    "reason": "Optional fields with default values indicate nullable or optional data patterns"
  },
  {
    "line": 64,
    "text": "    main_tags: Dict[str, str]",
    "annotation": "\ud83e\udde0 ML Signal: Optional fields with default values indicate nullable or optional data patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1388,
      62,
      31499,
      25,
      360,
      713,
      58,
      2536,
      11,
      965,
      60
    ],
    "start_token": 525,
    "end_token": 539,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      32233,
      7032,
      351,
      4277,
      3815,
      7603,
      9242,
      540,
      393,
      11902,
      1366,
      7572
    ],
    "label": "ml_signal",
    "reason": "Optional fields with default values indicate nullable or optional data patterns"
  },
  {
    "line": 66,
    "text": "    sub_tag_reason: Optional[str] = Field(default=None)",
    "annotation": "\ud83e\udde0 ML Signal: Optional fields with default values indicate nullable or optional data patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      12985,
      62,
      41181,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 539,
    "end_token": 559,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      32233,
      7032,
      351,
      4277,
      3815,
      7603,
      9242,
      540,
      393,
      11902,
      1366,
      7572
    ],
    "label": "ml_signal",
    "reason": "Optional fields with default values indicate nullable or optional data patterns"
  },
  {
    "line": 68,
    "text": "    active_hidden_tags: Union[Dict[str, str], None]",
    "annotation": "\ud83e\udde0 ML Signal: Optional fields with default values indicate nullable or optional data patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      4075,
      62,
      30342,
      62,
      31499,
      25,
      4479,
      58,
      35,
      713,
      58,
      2536,
      11,
      965,
      4357,
      6045,
      60
    ],
    "start_token": 559,
    "end_token": 579,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      32233,
      7032,
      351,
      4277,
      3815,
      7603,
      9242,
      540,
      393,
      11902,
      1366,
      7572
    ],
    "label": "ml_signal",
    "reason": "Optional fields with default values indicate nullable or optional data patterns"
  },
  {
    "line": 70,
    "text": "    top_ten_ratio: Optional[float] = Field(default=None)",
    "annotation": "\ud83e\udde0 ML Signal: Optional fields with default values indicate nullable or optional data patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1353,
      62,
      1452,
      62,
      10366,
      952,
      25,
      32233,
      58,
      22468,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 579,
    "end_token": 600,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      32233,
      7032,
      351,
      4277,
      3815,
      7603,
      9242,
      540,
      393,
      11902,
      1366,
      7572
    ],
    "label": "ml_signal",
    "reason": "Optional fields with default values indicate nullable or optional data patterns"
  },
  {
    "line": 65,
    "text": "    sub_tag: Union[str, None]",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional fields indicates nullable or optional data handling",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      12985,
      25,
      4479,
      58,
      2536,
      11,
      6045,
      60
    ],
    "start_token": 600,
    "end_token": 613,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      7032,
      9217,
      9242,
      540,
      393,
      11902,
      1366,
      9041
    ],
    "label": "ml_signal",
    "reason": "Use of Optional fields indicates nullable or optional data handling"
  },
  {
    "line": 66,
    "text": "    sub_tag_reason: Optional[str] = Field(default=None)",
    "annotation": "\u2705 Best Practice: Use of Optional for fields that can be None improves code clarity",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      12985,
      62,
      41181,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 613,
    "end_token": 633,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      32233,
      329,
      7032,
      326,
      460,
      307,
      6045,
      19575,
      2438,
      16287
    ],
    "label": "best_practice",
    "reason": "Use of Optional for fields that can be None improves code clarity"
  },
  {
    "line": 68,
    "text": "    active_hidden_tags: Union[Dict[str, str], None]",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional fields indicates nullable or optional data handling",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      4075,
      62,
      30342,
      62,
      31499,
      25,
      4479,
      58,
      35,
      713,
      58,
      2536,
      11,
      965,
      4357,
      6045,
      60
    ],
    "start_token": 633,
    "end_token": 653,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      7032,
      9217,
      9242,
      540,
      393,
      11902,
      1366,
      9041
    ],
    "label": "ml_signal",
    "reason": "Use of Optional fields indicates nullable or optional data handling"
  },
  {
    "line": 69,
    "text": "    controlling_holder_parent: Optional[str] = Field(default=None)",
    "annotation": "\u2705 Best Practice: Use of Optional for fields that can be None improves code clarity",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      12755,
      62,
      13829,
      62,
      8000,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 653,
    "end_token": 673,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      32233,
      329,
      7032,
      326,
      460,
      307,
      6045,
      19575,
      2438,
      16287
    ],
    "label": "best_practice",
    "reason": "Use of Optional for fields that can be None improves code clarity"
  },
  {
    "line": 71,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional fields indicates nullable or optional data handling",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 673,
    "end_token": 673,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      7032,
      9217,
      9242,
      540,
      393,
      11902,
      1366,
      9041
    ],
    "label": "ml_signal",
    "reason": "Use of Optional fields indicates nullable or optional data handling"
  },
  {
    "line": 72,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of Optional for fields that can be None improves code clarity",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 673,
    "end_token": 673,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      32233,
      329,
      7032,
      326,
      460,
      307,
      6045,
      19575,
      2438,
      16287
    ],
    "label": "best_practice",
    "reason": "Use of Optional for fields that can be None improves code clarity"
  },
  {
    "line": 74,
    "text": "    entity_ids: List[str]",
    "annotation": "\ud83e\udde0 ML Signal: Use of List to define a collection of items",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      2340,
      25,
      7343,
      58,
      2536,
      60
    ],
    "start_token": 673,
    "end_token": 684,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      7343,
      284,
      8160,
      257,
      4947,
      286,
      3709
    ],
    "label": "ml_signal",
    "reason": "Use of List to define a collection of items"
  },
  {
    "line": 76,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of List to define a collection of items",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 684,
    "end_token": 684,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      7343,
      284,
      8160,
      257,
      4947,
      286,
      3709
    ],
    "label": "ml_signal",
    "reason": "Use of List to define a collection of items"
  },
  {
    "line": 78,
    "text": "    entity_ids: List[str]",
    "annotation": "\ud83e\udde0 ML Signal: Use of List to define a collection of items",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      2340,
      25,
      7343,
      58,
      2536,
      60
    ],
    "start_token": 684,
    "end_token": 695,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      7343,
      284,
      8160,
      257,
      4947,
      286,
      3709
    ],
    "label": "ml_signal",
    "reason": "Use of List to define a collection of items"
  },
  {
    "line": 72,
    "text": "",
    "annotation": "\u2705 Best Practice: Inheriting from CustomModel suggests a structured approach, likely using a framework like Pydantic for data validation.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 695,
    "end_token": 695,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      47025,
      1780,
      422,
      8562,
      17633,
      5644,
      257,
      20793,
      3164,
      11,
      1884,
      1262,
      257,
      9355,
      588,
      350,
      5173,
      5109,
      329,
      1366,
      21201,
      13
    ],
    "label": "best_practice",
    "reason": "Inheriting from CustomModel suggests a structured approach, likely using a framework like Pydantic for data validation."
  },
  {
    "line": 74,
    "text": "    entity_ids: List[str]",
    "annotation": "\ud83e\udde0 ML Signal: The use of 'entity_id' as a string identifier can be a common pattern in data models.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      2340,
      25,
      7343,
      58,
      2536,
      60
    ],
    "start_token": 695,
    "end_token": 706,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      383,
      779,
      286,
      705,
      26858,
      62,
      312,
      6,
      355,
      257,
      4731,
      27421,
      460,
      307,
      257,
      2219,
      3912,
      287,
      1366,
      4981,
      13
    ],
    "label": "ml_signal",
    "reason": "The use of 'entity_id' as a string identifier can be a common pattern in data models."
  },
  {
    "line": 76,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: 'main_tag' indicates a primary categorization, useful for classification tasks.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 706,
    "end_token": 706,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      705,
      12417,
      62,
      12985,
      6,
      9217,
      257,
      4165,
      17851,
      1634,
      11,
      4465,
      329,
      17923,
      8861,
      13
    ],
    "label": "ml_signal",
    "reason": "'main_tag' indicates a primary categorization, useful for classification tasks."
  },
  {
    "line": 78,
    "text": "    entity_ids: List[str]",
    "annotation": "\u2705 Best Practice: Using Optional and default values improves model flexibility and usability.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      2340,
      25,
      7343,
      58,
      2536,
      60
    ],
    "start_token": 706,
    "end_token": 717,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      32233,
      290,
      4277,
      3815,
      19575,
      2746,
      13688,
      290,
      42863,
      13
    ],
    "label": "best_practice",
    "reason": "Using Optional and default values improves model flexibility and usability."
  },
  {
    "line": 80,
    "text": "",
    "annotation": "\u2705 Best Practice: Using Optional and default values improves model flexibility and usability.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 717,
    "end_token": 717,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      32233,
      290,
      4277,
      3815,
      19575,
      2746,
      13688,
      290,
      42863,
      13
    ],
    "label": "best_practice",
    "reason": "Using Optional and default values improves model flexibility and usability."
  },
  {
    "line": 82,
    "text": "    entity_ids: List[str]",
    "annotation": "\u2705 Best Practice: Using Optional and default values improves model flexibility and usability.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      2340,
      25,
      7343,
      58,
      2536,
      60
    ],
    "start_token": 717,
    "end_token": 728,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      32233,
      290,
      4277,
      3815,
      19575,
      2746,
      13688,
      290,
      42863,
      13
    ],
    "label": "best_practice",
    "reason": "Using Optional and default values improves model flexibility and usability."
  },
  {
    "line": 84,
    "text": "    tag_reason: Optional[str] = Field(default=None)",
    "annotation": "\u2705 Best Practice: Using Optional and default values improves model flexibility and usability.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      7621,
      62,
      41181,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 728,
    "end_token": 746,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      32233,
      290,
      4277,
      3815,
      19575,
      2746,
      13688,
      290,
      42863,
      13
    ],
    "label": "best_practice",
    "reason": "Using Optional and default values improves model flexibility and usability."
  },
  {
    "line": 85,
    "text": "    tag_type: TagType",
    "annotation": "\ud83e\udde0 ML Signal: 'active_hidden_tags' as a dictionary can indicate dynamic or additional metadata, useful for feature engineering.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      7621,
      62,
      4906,
      25,
      17467,
      6030
    ],
    "start_token": 746,
    "end_token": 755,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      705,
      5275,
      62,
      30342,
      62,
      31499,
      6,
      355,
      257,
      22155,
      460,
      7603,
      8925,
      393,
      3224,
      20150,
      11,
      4465,
      329,
      3895,
      8705,
      13
    ],
    "label": "ml_signal",
    "reason": "'active_hidden_tags' as a dictionary can indicate dynamic or additional metadata, useful for feature engineering."
  },
  {
    "line": 79,
    "text": "",
    "annotation": "\u2705 Best Practice: Class should inherit from object explicitly in Python 2 for clarity, though optional in Python 3",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 755,
    "end_token": 755,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      815,
      16955,
      422,
      2134,
      11777,
      287,
      11361,
      362,
      329,
      16287,
      11,
      996,
      11902,
      287,
      11361,
      513
    ],
    "label": "best_practice",
    "reason": "Class should inherit from object explicitly in Python 2 for clarity, though optional in Python 3"
  },
  {
    "line": 81,
    "text": "class BatchSetStockTagsModel(CustomModel):",
    "annotation": "\u2705 Best Practice: Type hinting improves code readability and maintainability",
    "confidence": 0.5,
    "tokens": [
      4871,
      347,
      963,
      7248,
      26207,
      36142,
      17633,
      7,
      15022,
      17633,
      2599
    ],
    "start_token": 755,
    "end_token": 766,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting improves code readability and maintainability"
  },
  {
    "line": 83,
    "text": "    tag: str",
    "annotation": "\u2705 Best Practice: Type hinting improves code readability and maintainability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      7621,
      25,
      965
    ],
    "start_token": 766,
    "end_token": 772,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting improves code readability and maintainability"
  },
  {
    "line": 82,
    "text": "    entity_ids: List[str]",
    "annotation": "\ud83e\udde0 ML Signal: Definition of a class, useful for understanding object-oriented patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      2340,
      25,
      7343,
      58,
      2536,
      60
    ],
    "start_token": 772,
    "end_token": 783,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      30396,
      286,
      257,
      1398,
      11,
      4465,
      329,
      4547,
      2134,
      12,
      17107,
      7572
    ],
    "label": "ml_signal",
    "reason": "Definition of a class, useful for understanding object-oriented patterns"
  },
  {
    "line": 84,
    "text": "    tag_reason: Optional[str] = Field(default=None)",
    "annotation": "\ud83e\udde0 ML Signal: Use of type annotations, useful for type inference and model training",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      7621,
      62,
      41181,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 783,
    "end_token": 801,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2099,
      37647,
      11,
      4465,
      329,
      2099,
      32278,
      290,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Use of type annotations, useful for type inference and model training"
  },
  {
    "line": 85,
    "text": "    tag_type: TagType",
    "annotation": "\u2705 Best Practice: Type annotations improve code readability and maintainability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      7621,
      62,
      4906,
      25,
      17467,
      6030
    ],
    "start_token": 801,
    "end_token": 810,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      37647,
      2987,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type annotations improve code readability and maintainability"
  },
  {
    "line": 87,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of type annotations, useful for type inference and model training",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 810,
    "end_token": 810,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2099,
      37647,
      11,
      4465,
      329,
      2099,
      32278,
      290,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Use of type annotations, useful for type inference and model training"
  },
  {
    "line": 87,
    "text": "",
    "annotation": "\u2705 Best Practice: Type annotations improve code readability and maintainability",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 810,
    "end_token": 810,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      37647,
      2987,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type annotations improve code readability and maintainability"
  },
  {
    "line": 86,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of custom data types for model fields",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 810,
    "end_token": 810,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2183,
      1366,
      3858,
      329,
      2746,
      7032
    ],
    "label": "ml_signal",
    "reason": "Use of custom data types for model fields"
  },
  {
    "line": 87,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of standard data types for model fields",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 810,
    "end_token": 810,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      3210,
      1366,
      3858,
      329,
      2746,
      7032
    ],
    "label": "ml_signal",
    "reason": "Use of standard data types for model fields"
  },
  {
    "line": 90,
    "text": "    main_tag_reason: Optional[str] = Field(default=None)",
    "annotation": "\u2705 Best Practice: Use of field validators to enforce data integrity",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1388,
      62,
      12985,
      62,
      41181,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 810,
    "end_token": 830,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2214,
      4938,
      2024,
      284,
      4605,
      1366,
      11540
    ],
    "label": "best_practice",
    "reason": "Use of field validators to enforce data integrity"
  },
  {
    "line": 92,
    "text": "    sub_tag_reason: Optional[str] = Field(default=None)",
    "annotation": "\u2705 Best Practice: Use of class method for validation logic",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      12985,
      62,
      41181,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 830,
    "end_token": 850,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      1398,
      2446,
      329,
      21201,
      9156
    ],
    "label": "best_practice",
    "reason": "Use of class method for validation logic"
  },
  {
    "line": 90,
    "text": "    main_tag_reason: Optional[str] = Field(default=None)",
    "annotation": "\u2705 Best Practice: Use of class method decorator for methods that don't modify class state",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1388,
      62,
      12985,
      62,
      41181,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 850,
    "end_token": 870,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      1398,
      2446,
      11705,
      1352,
      329,
      5050,
      326,
      836,
      470,
      13096,
      1398,
      1181
    ],
    "label": "best_practice",
    "reason": "Use of class method decorator for methods that don't modify class state"
  },
  {
    "line": 92,
    "text": "    sub_tag_reason: Optional[str] = Field(default=None)",
    "annotation": "\u2705 Best Practice: Clear and concise condition to check if a value exists in a list",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      12985,
      62,
      41181,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 870,
    "end_token": 890,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11459,
      290,
      35327,
      4006,
      284,
      2198,
      611,
      257,
      1988,
      7160,
      287,
      257,
      1351
    ],
    "label": "best_practice",
    "reason": "Clear and concise condition to check if a value exists in a list"
  },
  {
    "line": 94,
    "text": "    hidden_tag_reason: Optional[str] = Field(default=None)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential information disclosure through error messages",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      7104,
      62,
      12985,
      62,
      41181,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 890,
    "end_token": 910,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      1321,
      13019,
      832,
      4049,
      6218
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential information disclosure through error messages"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Return statements can indicate function output patterns",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 910,
    "end_token": 910,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8229,
      6299,
      460,
      7603,
      2163,
      5072,
      7572
    ],
    "label": "ml_signal",
    "reason": "Return statements can indicate function output patterns"
  },
  {
    "line": 94,
    "text": "    hidden_tag_reason: Optional[str] = Field(default=None)",
    "annotation": "\ud83e\udde0 ML Signal: Definition of a class, which could be used to identify class-based patterns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      7104,
      62,
      12985,
      62,
      41181,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 910,
    "end_token": 930,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      30396,
      286,
      257,
      1398,
      11,
      543,
      714,
      307,
      973,
      284,
      5911,
      1398,
      12,
      3106,
      7572
    ],
    "label": "ml_signal",
    "reason": "Definition of a class, which could be used to identify class-based patterns"
  },
  {
    "line": 96,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of type annotations, which can be used to infer data types and structures",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 930,
    "end_token": 930,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2099,
      37647,
      11,
      543,
      460,
      307,
      973,
      284,
      13249,
      1366,
      3858,
      290,
      8573
    ],
    "label": "ml_signal",
    "reason": "Use of type annotations, which can be used to infer data types and structures"
  },
  {
    "line": 98,
    "text": "    main_tag: Optional[str] = Field(default=None)",
    "annotation": "\ud83e\udde0 ML Signal: Use of type annotations, which can be used to infer data types and structures",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1388,
      62,
      12985,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 930,
    "end_token": 948,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2099,
      37647,
      11,
      543,
      460,
      307,
      973,
      284,
      13249,
      1366,
      3858,
      290,
      8573
    ],
    "label": "ml_signal",
    "reason": "Use of type annotations, which can be used to infer data types and structures"
  },
  {
    "line": 97,
    "text": "class StockTagOptions(CustomModel):",
    "annotation": "\u2705 Best Practice: Inheriting from a custom model class suggests a structured approach to data modeling",
    "confidence": 0.5,
    "tokens": [
      4871,
      10500,
      24835,
      29046,
      7,
      15022,
      17633,
      2599
    ],
    "start_token": 948,
    "end_token": 956,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      47025,
      1780,
      422,
      257,
      2183,
      2746,
      1398,
      5644,
      257,
      20793,
      3164,
      284,
      1366,
      21128
    ],
    "label": "best_practice",
    "reason": "Inheriting from a custom model class suggests a structured approach to data modeling"
  },
  {
    "line": 99,
    "text": "    sub_tag: Optional[str] = Field(default=None)",
    "annotation": "\u2705 Best Practice: Type annotations improve code readability and maintainability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      12985,
      25,
      32233,
      58,
      2536,
      60,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 956,
    "end_token": 974,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      37647,
      2987,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type annotations improve code readability and maintainability"
  },
  {
    "line": 101,
    "text": "    active_hidden_tags: Optional[Dict[str, str]] = Field(default=None)",
    "annotation": "\u2705 Best Practice: Type annotations improve code readability and maintainability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      4075,
      62,
      30342,
      62,
      31499,
      25,
      32233,
      58,
      35,
      713,
      58,
      2536,
      11,
      965,
      11907,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 974,
    "end_token": 999,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      37647,
      2987,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type annotations improve code readability and maintainability"
  },
  {
    "line": 103,
    "text": "    sub_tag_options: List[CreateTagInfoModel]",
    "annotation": "\u2705 Best Practice: Providing a default value for insert_mode enhances usability and reduces potential errors",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      12985,
      62,
      25811,
      25,
      7343,
      58,
      16447,
      24835,
      12360,
      17633,
      60
    ],
    "start_token": 999,
    "end_token": 1015,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      7518,
      2530,
      257,
      4277,
      1988,
      329,
      7550,
      62,
      14171,
      32479,
      42863,
      290,
      12850,
      2785,
      8563
    ],
    "label": "best_practice",
    "reason": "Providing a default value for insert_mode enhances usability and reduces potential errors"
  },
  {
    "line": 102,
    "text": "    main_tag_options: List[CreateTagInfoModel]",
    "annotation": "\u2705 Best Practice: Use of Optional type hint for better code readability and understanding of possible None values.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1388,
      62,
      12985,
      62,
      25811,
      25,
      7343,
      58,
      16447,
      24835,
      12360,
      17633,
      60
    ],
    "start_token": 1015,
    "end_token": 1031,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      32233,
      2099,
      9254,
      329,
      1365,
      2438,
      1100,
      1799,
      290,
      4547,
      286,
      1744,
      6045,
      3815,
      13
    ],
    "label": "best_practice",
    "reason": "Use of Optional type hint for better code readability and understanding of possible None values."
  },
  {
    "line": 104,
    "text": "    hidden_tag_options: List[CreateTagInfoModel]",
    "annotation": "\u2705 Best Practice: Use of Optional type hint for better code readability and understanding of possible None values.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      7104,
      62,
      12985,
      62,
      25811,
      25,
      7343,
      58,
      16447,
      24835,
      12360,
      17633,
      60
    ],
    "start_token": 1031,
    "end_token": 1047,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      32233,
      2099,
      9254,
      329,
      1365,
      2438,
      1100,
      1799,
      290,
      4547,
      286,
      1744,
      6045,
      3815,
      13
    ],
    "label": "best_practice",
    "reason": "Use of Optional type hint for better code readability and understanding of possible None values."
  },
  {
    "line": 107,
    "text": "class SetStockTagsModel(CustomModel):",
    "annotation": "\u2705 Best Practice: Use of Optional type hint for better code readability and understanding of possible None values.",
    "confidence": 1.0,
    "tokens": [
      4871,
      5345,
      26207,
      36142,
      17633,
      7,
      15022,
      17633,
      2599
    ],
    "start_token": 1047,
    "end_token": 1056,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      32233,
      2099,
      9254,
      329,
      1365,
      2438,
      1100,
      1799,
      290,
      4547,
      286,
      1744,
      6045,
      3815,
      13
    ],
    "label": "best_practice",
    "reason": "Use of Optional type hint for better code readability and understanding of possible None values."
  },
  {
    "line": 109,
    "text": "    main_tag: str",
    "annotation": "\u2705 Best Practice: Use of field_validator decorator to ensure data validation logic is encapsulated within the model.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1388,
      62,
      12985,
      25,
      965
    ],
    "start_token": 1056,
    "end_token": 1064,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2214,
      62,
      12102,
      1352,
      11705,
      1352,
      284,
      4155,
      1366,
      21201,
      9156,
      318,
      32652,
      4817,
      1626,
      262,
      2746,
      13
    ],
    "label": "best_practice",
    "reason": "Use of field_validator decorator to ensure data validation logic is encapsulated within the model."
  },
  {
    "line": 108,
    "text": "    entity_id: str",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on field names, useful for learning validation patterns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      9312,
      62,
      312,
      25,
      965
    ],
    "start_token": 1064,
    "end_token": 1072,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      2214,
      3891,
      11,
      4465,
      329,
      4673,
      21201,
      7572
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on field names, useful for learning validation patterns"
  },
  {
    "line": 113,
    "text": "    active_hidden_tags: Optional[Dict[str, str]] = Field(default=None)",
    "annotation": "\ud83e\udde0 ML Signal: Use of kwargs to dynamically access other fields",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      4075,
      62,
      30342,
      62,
      31499,
      25,
      32233,
      58,
      35,
      713,
      58,
      2536,
      11,
      965,
      11907,
      796,
      7663,
      7,
      12286,
      28,
      14202,
      8
    ],
    "start_token": 1072,
    "end_token": 1097,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      479,
      86,
      22046,
      284,
      32366,
      1895,
      584,
      7032
    ],
    "label": "ml_signal",
    "reason": "Use of kwargs to dynamically access other fields"
  },
  {
    "line": 115,
    "text": "    # @field_validator(\"main_tag\")",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for logic error if field names change or are incorrect",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      2488,
      3245,
      62,
      12102,
      1352,
      7203,
      12417,
      62,
      12985,
      4943
    ],
    "start_token": 1097,
    "end_token": 1111,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      9156,
      4049,
      611,
      2214,
      3891,
      1487,
      393,
      389,
      11491
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for logic error if field names change or are incorrect"
  },
  {
    "line": 121,
    "text": "    #",
    "annotation": "\u2705 Best Practice: Use of field_validator decorator for validation logic",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303
    ],
    "start_token": 1111,
    "end_token": 1115,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2214,
      62,
      12102,
      1352,
      11705,
      1352,
      329,
      21201,
      9156
    ],
    "label": "best_practice",
    "reason": "Use of field_validator decorator for validation logic"
  },
  {
    "line": 123,
    "text": "    # @classmethod",
    "annotation": "\u2705 Best Practice: Use of classmethod for validation logic that requires class context",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      2488,
      4871,
      24396
    ],
    "start_token": 1115,
    "end_token": 1122,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      1398,
      24396,
      329,
      21201,
      9156,
      326,
      4433,
      1398,
      4732
    ],
    "label": "best_practice",
    "reason": "Use of classmethod for validation logic that requires class context"
  },
  {
    "line": 121,
    "text": "    #",
    "annotation": "\u2705 Best Practice: Check if the input value is not None or empty before proceeding",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303
    ],
    "start_token": 1122,
    "end_token": 1126,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      611,
      262,
      5128,
      1988,
      318,
      407,
      6045,
      393,
      6565,
      878,
      18788
    ],
    "label": "best_practice",
    "reason": "Check if the input value is not None or empty before proceeding"
  },
  {
    "line": 123,
    "text": "    # @classmethod",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of checking membership in a list or collection",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      2488,
      4871,
      24396
    ],
    "start_token": 1126,
    "end_token": 1133,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      10627,
      9931,
      287,
      257,
      1351,
      393,
      4947
    ],
    "label": "ml_signal",
    "reason": "Pattern of checking membership in a list or collection"
  },
  {
    "line": 124,
    "text": "    # def sub_tag_must_be_in(cls, v: str) -> str:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for a runtime error if get_stock_pool_names() returns a non-iterable",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      825,
      850,
      62,
      12985,
      62,
      27238,
      62,
      1350,
      62,
      259,
      7,
      565,
      82,
      11,
      410,
      25,
      965,
      8,
      4613,
      965,
      25
    ],
    "start_token": 1133,
    "end_token": 1158,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      257,
      19124,
      4049,
      611,
      651,
      62,
      13578,
      62,
      7742,
      62,
      14933,
      3419,
      5860,
      257,
      1729,
      12,
      2676,
      540
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for a runtime error if get_stock_pool_names() returns a non-iterable"
  },
  {
    "line": 126,
    "text": "    #         raise ValueError(f\"sub_tag: {v} must be created at sub_tag_info at first\")",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Error message may expose sensitive information about valid stock pool names",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      5298,
      11052,
      12331,
      7,
      69,
      1,
      7266,
      62,
      12985,
      25,
      1391,
      85,
      92,
      1276,
      307,
      2727,
      379,
      850,
      62,
      12985,
      62,
      10951,
      379,
      717,
      4943
    ],
    "start_token": 1158,
    "end_token": 1195,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      13047,
      3275,
      743,
      15651,
      8564,
      1321,
      546,
      4938,
      4283,
      5933,
      3891
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Error message may expose sensitive information about valid stock pool names"
  },
  {
    "line": 125,
    "text": "    #     if v and (v not in get_sub_tags()):",
    "annotation": "\ud83e\udde0 ML Signal: Use of Optional fields indicates handling of missing or nullable data",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      220,
      220,
      220,
      220,
      611,
      410,
      290,
      357,
      85,
      407,
      287,
      651,
      62,
      7266,
      62,
      31499,
      3419,
      2599
    ],
    "start_token": 1195,
    "end_token": 1217,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      32233,
      7032,
      9217,
      9041,
      286,
      4814,
      393,
      9242,
      540,
      1366
    ],
    "label": "ml_signal",
    "reason": "Use of Optional fields indicates handling of missing or nullable data"
  },
  {
    "line": 126,
    "text": "    #         raise ValueError(f\"sub_tag: {v} must be created at sub_tag_info at first\")",
    "annotation": "\ud83e\udde0 ML Signal: Use of Union type indicates handling of multiple data types",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      5298,
      11052,
      12331,
      7,
      69,
      1,
      7266,
      62,
      12985,
      25,
      1391,
      85,
      92,
      1276,
      307,
      2727,
      379,
      850,
      62,
      12985,
      62,
      10951,
      379,
      717,
      4943
    ],
    "start_token": 1217,
    "end_token": 1254,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4479,
      2099,
      9217,
      9041,
      286,
      3294,
      1366,
      3858
    ],
    "label": "ml_signal",
    "reason": "Use of Union type indicates handling of multiple data types"
  },
  {
    "line": 127,
    "text": "    #     return v",
    "annotation": "\u2705 Best Practice: Use of type annotations improves code readability and maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      220,
      220,
      220,
      220,
      1441,
      410
    ],
    "start_token": 1254,
    "end_token": 1264,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      37647,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of type annotations improves code readability and maintainability"
  },
  {
    "line": 128,
    "text": "    #",
    "annotation": "\u2705 Best Practice: Use of Field with default values provides clarity on default behavior",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303
    ],
    "start_token": 1264,
    "end_token": 1268,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      7663,
      351,
      4277,
      3815,
      3769,
      16287,
      319,
      4277,
      4069
    ],
    "label": "best_practice",
    "reason": "Use of Field with default values provides clarity on default behavior"
  },
  {
    "line": 143,
    "text": "",
    "annotation": "\u2705 Best Practice: Class definition should inherit from a base class for consistency and potential shared functionality",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1268,
    "end_token": 1268,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      6770,
      815,
      16955,
      422,
      257,
      2779,
      1398,
      329,
      15794,
      290,
      2785,
      4888,
      11244
    ],
    "label": "best_practice",
    "reason": "Class definition should inherit from a base class for consistency and potential shared functionality"
  },
  {
    "line": 145,
    "text": "    stock_pool_type: StockPoolType",
    "annotation": "\u2705 Best Practice: Type annotations improve code readability and help with static analysis",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      4283,
      62,
      7742,
      62,
      4906,
      25,
      10500,
      27201,
      6030
    ],
    "start_token": 1268,
    "end_token": 1280,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      37647,
      2987,
      2438,
      1100,
      1799,
      290,
      1037,
      351,
      9037,
      3781
    ],
    "label": "best_practice",
    "reason": "Type annotations improve code readability and help with static analysis"
  },
  {
    "line": 147,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of Optional and default values for fields increases flexibility and robustness",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1280,
    "end_token": 1280,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      32233,
      290,
      4277,
      3815,
      329,
      7032,
      5732,
      13688,
      290,
      12373,
      1108
    ],
    "label": "best_practice",
    "reason": "Use of Optional and default values for fields increases flexibility and robustness"
  },
  {
    "line": 149,
    "text": "class CreateStockPoolInfoModel(CustomModel):",
    "annotation": "\u2705 Best Practice: Use of Optional and default values for fields increases flexibility and robustness",
    "confidence": 0.5,
    "tokens": [
      4871,
      13610,
      26207,
      27201,
      12360,
      17633,
      7,
      15022,
      17633,
      2599
    ],
    "start_token": 1280,
    "end_token": 1290,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      32233,
      290,
      4277,
      3815,
      329,
      7032,
      5732,
      13688,
      290,
      12373,
      1108
    ],
    "label": "best_practice",
    "reason": "Use of Optional and default values for fields increases flexibility and robustness"
  },
  {
    "line": 151,
    "text": "    stock_pool_name: str",
    "annotation": "\u2705 Best Practice: Use of Optional and default values for fields increases flexibility and robustness",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      4283,
      62,
      7742,
      62,
      3672,
      25,
      965
    ],
    "start_token": 1290,
    "end_token": 1300,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      32233,
      290,
      4277,
      3815,
      329,
      7032,
      5732,
      13688,
      290,
      12373,
      1108
    ],
    "label": "best_practice",
    "reason": "Use of Optional and default values for fields increases flexibility and robustness"
  },
  {
    "line": 153,
    "text": "    @field_validator(\"stock_pool_name\")",
    "annotation": "\u2705 Best Practice: Use of Optional and default values for fields increases flexibility and robustness",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2488,
      3245,
      62,
      12102,
      1352,
      7203,
      13578,
      62,
      7742,
      62,
      3672,
      4943
    ],
    "start_token": 1300,
    "end_token": 1315,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      32233,
      290,
      4277,
      3815,
      329,
      7032,
      5732,
      13688,
      290,
      12373,
      1108
    ],
    "label": "best_practice",
    "reason": "Use of Optional and default values for fields increases flexibility and robustness"
  },
  {
    "line": 155,
    "text": "    def stock_pool_name_existed(cls, v: str) -> str:",
    "annotation": "\u2705 Best Practice: Use of Optional and default values for fields increases flexibility and robustness",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      4283,
      62,
      7742,
      62,
      3672,
      62,
      1069,
      6347,
      7,
      565,
      82,
      11,
      410,
      25,
      965,
      8,
      4613,
      965,
      25
    ],
    "start_token": 1315,
    "end_token": 1338,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      32233,
      290,
      4277,
      3815,
      329,
      7032,
      5732,
      13688,
      290,
      12373,
      1108
    ],
    "label": "best_practice",
    "reason": "Use of Optional and default values for fields increases flexibility and robustness"
  },
  {
    "line": 156,
    "text": "        if v in get_stock_pool_names():",
    "annotation": "\u2705 Best Practice: Use of Optional and default values for fields increases flexibility and robustness",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      410,
      287,
      651,
      62,
      13578,
      62,
      7742,
      62,
      14933,
      33529
    ],
    "start_token": 1338,
    "end_token": 1356,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      32233,
      290,
      4277,
      3815,
      329,
      7032,
      5732,
      13688,
      290,
      12373,
      1108
    ],
    "label": "best_practice",
    "reason": "Use of Optional and default values for fields increases flexibility and robustness"
  },
  {
    "line": 156,
    "text": "        if v in get_stock_pool_names():",
    "annotation": "\u2705 Best Practice: Use of Optional and default values for fields increases flexibility and robustness",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      410,
      287,
      651,
      62,
      13578,
      62,
      7742,
      62,
      14933,
      33529
    ],
    "start_token": 1356,
    "end_token": 1374,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      32233,
      290,
      4277,
      3815,
      329,
      7032,
      5732,
      13688,
      290,
      12373,
      1108
    ],
    "label": "best_practice",
    "reason": "Use of Optional and default values for fields increases flexibility and robustness"
  },
  {
    "line": 152,
    "text": "",
    "annotation": "\u2705 Best Practice: Class docstring is missing, consider adding one to describe the purpose of the class.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1374,
    "end_token": 1374,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      2205,
      8841,
      318,
      4814,
      11,
      2074,
      4375,
      530,
      284,
      6901,
      262,
      4007,
      286,
      262,
      1398,
      13
    ],
    "label": "best_practice",
    "reason": "Class docstring is missing, consider adding one to describe the purpose of the class."
  },
  {
    "line": 154,
    "text": "    @classmethod",
    "annotation": "\u2705 Best Practice: Attribute type hinting improves code readability and maintainability.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      2488,
      4871,
      24396
    ],
    "start_token": 1374,
    "end_token": 1380,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      3460,
      4163,
      2099,
      9254,
      278,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Attribute type hinting improves code readability and maintainability."
  },
  {
    "line": 155,
    "text": "    def stock_pool_name_existed(cls, v: str) -> str:",
    "annotation": "\u2705 Best Practice: Type hinting improves code readability and helps with static analysis.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      4283,
      62,
      7742,
      62,
      3672,
      62,
      1069,
      6347,
      7,
      565,
      82,
      11,
      410,
      25,
      965,
      8,
      4613,
      965,
      25
    ],
    "start_token": 1380,
    "end_token": 1403,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      19575,
      2438,
      1100,
      1799,
      290,
      5419,
      351,
      9037,
      3781,
      13
    ],
    "label": "best_practice",
    "reason": "Type hinting improves code readability and helps with static analysis."
  },
  {
    "line": 156,
    "text": "        if v in get_stock_pool_names():",
    "annotation": "\u2705 Best Practice: Using __all__ to define public API of the module improves maintainability and readability.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      410,
      287,
      651,
      62,
      13578,
      62,
      7742,
      62,
      14933,
      33529
    ],
    "start_token": 1403,
    "end_token": 1421,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265,
      19575,
      5529,
      1799,
      290,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Using __all__ to define public API of the module improves maintainability and readability."
  }
]