[
  {
    "line": 5,
    "text": "import pandas as pd",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Importing all functions from a module can lead to namespace conflicts and may include unused functions.",
    "confidence": 1.0,
    "tokens": [
      11748,
      19798,
      292,
      355,
      279,
      67
    ],
    "start_token": 0,
    "end_token": 6,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      17267,
      278,
      477,
      5499,
      422,
      257,
      8265,
      460,
      1085,
      284,
      25745,
      12333,
      290,
      743,
      2291,
      21958,
      5499,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Importing all functions from a module can lead to namespace conflicts and may include unused functions."
  },
  {
    "line": 7,
    "text": "from sqlalchemy import func",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Importing with a wildcard can lead to namespace conflicts and may include unused functions.",
    "confidence": 1.0,
    "tokens": [
      6738,
      44161,
      282,
      26599,
      1330,
      25439
    ],
    "start_token": 6,
    "end_token": 12,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      17267,
      278,
      351,
      257,
      4295,
      9517,
      460,
      1085,
      284,
      25745,
      12333,
      290,
      743,
      2291,
      21958,
      5499,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Importing with a wildcard can lead to namespace conflicts and may include unused functions."
  },
  {
    "line": 9,
    "text": "import zvt.contract.api as contract_api",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Importing specific functions from a module is preferred for clarity and to avoid namespace pollution.",
    "confidence": 1.0,
    "tokens": [
      11748,
      1976,
      36540,
      13,
      28484,
      13,
      15042,
      355,
      2775,
      62,
      15042
    ],
    "start_token": 12,
    "end_token": 23,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      17267,
      278,
      2176,
      5499,
      422,
      257,
      8265,
      318,
      9871,
      329,
      16287,
      290,
      284,
      3368,
      25745,
      12231,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Importing specific functions from a module is preferred for clarity and to avoid namespace pollution."
  },
  {
    "line": 45,
    "text": "from zvt.utils.utils import fill_dict, compare_dicts, flatten_list",
    "annotation": "\u2705 Best Practice: Use of a logger is a good practice for tracking and debugging.",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      26791,
      1330,
      6070,
      62,
      11600,
      11,
      8996,
      62,
      11600,
      82,
      11,
      27172,
      268,
      62,
      4868
    ],
    "start_token": 23,
    "end_token": 44,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      257,
      49706,
      318,
      257,
      922,
      3357,
      329,
      9646,
      290,
      28769,
      13
    ],
    "label": "best_practice",
    "reason": "Use of a logger is a good practice for tracking and debugging."
  },
  {
    "line": 44,
    "text": "from zvt.utils.time_utils import to_pd_timestamp, to_time_str, current_date, now_pd_timestamp",
    "annotation": "\u2705 Best Practice: Function name is descriptive and follows naming conventions.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      2435,
      62,
      26791,
      1330,
      284,
      62,
      30094,
      62,
      16514,
      27823,
      11,
      284,
      62,
      2435,
      62,
      2536,
      11,
      1459,
      62,
      4475,
      11,
      783,
      62,
      30094,
      62,
      16514,
      27823
    ],
    "start_token": 44,
    "end_token": 77,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      15553,
      1438,
      318,
      35644,
      290,
      5679,
      19264,
      21396,
      13
    ],
    "label": "best_practice",
    "reason": "Function name is descriptive and follows naming conventions."
  },
  {
    "line": 45,
    "text": "from zvt.utils.utils import fill_dict, compare_dicts, flatten_list",
    "annotation": "\u2705 Best Practice: Using a single return statement for clarity.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      26791,
      1330,
      6070,
      62,
      11600,
      11,
      8996,
      62,
      11600,
      82,
      11,
      27172,
      268,
      62,
      4868
    ],
    "start_token": 77,
    "end_token": 98,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      257,
      2060,
      1441,
      2643,
      329,
      16287,
      13
    ],
    "label": "best_practice",
    "reason": "Using a single return statement for clarity."
  },
  {
    "line": 45,
    "text": "from zvt.utils.utils import fill_dict, compare_dicts, flatten_list",
    "annotation": "\u2705 Best Practice: Checking each attribute separately for better readability.",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      26791,
      1330,
      6070,
      62,
      11600,
      11,
      8996,
      62,
      11600,
      82,
      11,
      27172,
      268,
      62,
      4868
    ],
    "start_token": 98,
    "end_token": 119,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      39432,
      1123,
      11688,
      13869,
      329,
      1365,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Checking each attribute separately for better readability."
  },
  {
    "line": 53,
    "text": "        or stock_tags.main_tag_reason != set_stock_tags_model.main_tag_reason",
    "annotation": "\ud83e\udde0 ML Signal: Comparing dictionary structures, which could indicate data structure changes.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      393,
      4283,
      62,
      31499,
      13,
      12417,
      62,
      12985,
      62,
      41181,
      14512,
      900,
      62,
      13578,
      62,
      31499,
      62,
      19849,
      13,
      12417,
      62,
      12985,
      62,
      41181
    ],
    "start_token": 119,
    "end_token": 150,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3082,
      1723,
      22155,
      8573,
      11,
      543,
      714,
      7603,
      1366,
      4645,
      2458,
      13
    ],
    "label": "ml_signal",
    "reason": "Comparing dictionary structures, which could indicate data structure changes."
  },
  {
    "line": 55,
    "text": "        or stock_tags.sub_tag_reason != set_stock_tags_model.sub_tag_reason",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential SQL injection if entity_id is not properly sanitized",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      393,
      4283,
      62,
      31499,
      13,
      7266,
      62,
      12985,
      62,
      41181,
      14512,
      900,
      62,
      13578,
      62,
      31499,
      62,
      19849,
      13,
      7266,
      62,
      12985,
      62,
      41181
    ],
    "start_token": 150,
    "end_token": 181,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      16363,
      16954,
      611,
      9312,
      62,
      312,
      318,
      407,
      6105,
      5336,
      36951
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential SQL injection if entity_id is not properly sanitized"
  },
  {
    "line": 56,
    "text": "        or not compare_dicts(stock_tags.active_hidden_tags, set_stock_tags_model.active_hidden_tags)",
    "annotation": "\ud83e\udde0 ML Signal: Usage of query_data method to fetch data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      393,
      407,
      8996,
      62,
      11600,
      82,
      7,
      13578,
      62,
      31499,
      13,
      5275,
      62,
      30342,
      62,
      31499,
      11,
      900,
      62,
      13578,
      62,
      31499,
      62,
      19849,
      13,
      5275,
      62,
      30342,
      62,
      31499,
      8
    ],
    "start_token": 181,
    "end_token": 219,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      12405,
      62,
      7890,
      2446,
      284,
      21207,
      1366
    ],
    "label": "ml_signal",
    "reason": "Usage of query_data method to fetch data"
  },
  {
    "line": 71,
    "text": "        main_tag = None",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of creating tag options from data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1388,
      62,
      12985,
      796,
      6045
    ],
    "start_token": 219,
    "end_token": 231,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      4441,
      7621,
      3689,
      422,
      1366
    ],
    "label": "ml_signal",
    "reason": "Pattern of creating tag options from data"
  },
  {
    "line": 80,
    "text": "            if stock_tags.main_tags:",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of creating tag options from data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      4283,
      62,
      31499,
      13,
      12417,
      62,
      31499,
      25
    ],
    "start_token": 231,
    "end_token": 251,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      4441,
      7621,
      3689,
      422,
      1366
    ],
    "label": "ml_signal",
    "reason": "Pattern of creating tag options from data"
  },
  {
    "line": 87,
    "text": "                sub_tag_options = [",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of creating tag options from data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      850,
      62,
      12985,
      62,
      25811,
      796,
      685
    ],
    "start_token": 251,
    "end_token": 273,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      4441,
      7621,
      3689,
      422,
      1366
    ],
    "label": "ml_signal",
    "reason": "Pattern of creating tag options from data"
  },
  {
    "line": 90,
    "text": "                ]",
    "annotation": "\ud83e\udde0 ML Signal: Usage of query_data method to fetch data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2361
    ],
    "start_token": 273,
    "end_token": 289,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      12405,
      62,
      7890,
      2446,
      284,
      21207,
      1366
    ],
    "label": "ml_signal",
    "reason": "Usage of query_data method to fetch data"
  },
  {
    "line": 96,
    "text": "                hidden_tag_options = [",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of creating tag options from data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      7104,
      62,
      12985,
      62,
      25811,
      796,
      685
    ],
    "start_token": 289,
    "end_token": 311,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      4441,
      7621,
      3689,
      422,
      1366
    ],
    "label": "ml_signal",
    "reason": "Pattern of creating tag options from data"
  },
  {
    "line": 103,
    "text": "            main_tag = main_tags_info[0].tag",
    "annotation": "\ud83e\udde0 ML Signal: Usage of query_data method to fetch data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1388,
      62,
      12985,
      796,
      1388,
      62,
      31499,
      62,
      10951,
      58,
      15,
      4083,
      12985
    ],
    "start_token": 311,
    "end_token": 335,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      12405,
      62,
      7890,
      2446,
      284,
      21207,
      1366
    ],
    "label": "ml_signal",
    "reason": "Usage of query_data method to fetch data"
  },
  {
    "line": 104,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of creating tag options from data",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 335,
    "end_token": 335,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      4441,
      7621,
      3689,
      422,
      1366
    ],
    "label": "ml_signal",
    "reason": "Pattern of creating tag options from data"
  },
  {
    "line": 109,
    "text": "        ]",
    "annotation": "\ud83e\udde0 ML Signal: Usage of query_data method to fetch data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2361
    ],
    "start_token": 335,
    "end_token": 343,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      12405,
      62,
      7890,
      2446,
      284,
      21207,
      1366
    ],
    "label": "ml_signal",
    "reason": "Usage of query_data method to fetch data"
  },
  {
    "line": 114,
    "text": "        sub_tag_options = sub_tag_options + [",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of creating tag options from data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      850,
      62,
      12985,
      62,
      25811,
      796,
      850,
      62,
      12985,
      62,
      25811,
      1343,
      685
    ],
    "start_token": 343,
    "end_token": 363,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      4441,
      7621,
      3689,
      422,
      1366
    ],
    "label": "ml_signal",
    "reason": "Pattern of creating tag options from data"
  },
  {
    "line": 120,
    "text": "        hidden_tags_info: List[HiddenTagInfo] = HiddenTagInfo.query_data(session=session, return_type=\"domain\")",
    "annotation": "\u2705 Best Practice: Returning a structured data object for better maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      7104,
      62,
      31499,
      62,
      10951,
      25,
      7343,
      58,
      41691,
      24835,
      12360,
      60,
      796,
      20458,
      24835,
      12360,
      13,
      22766,
      62,
      7890,
      7,
      29891,
      28,
      29891,
      11,
      1441,
      62,
      4906,
      2625,
      27830,
      4943
    ],
    "start_token": 363,
    "end_token": 401,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      42882,
      257,
      20793,
      1366,
      2134,
      329,
      1365,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Returning a structured data object for better maintainability"
  },
  {
    "line": 120,
    "text": "        hidden_tags_info: List[HiddenTagInfo] = HiddenTagInfo.query_data(session=session, return_type=\"domain\")",
    "annotation": "\ud83e\udde0 ML Signal: Logging the model can be used to track usage patterns and model data.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      7104,
      62,
      31499,
      62,
      10951,
      25,
      7343,
      58,
      41691,
      24835,
      12360,
      60,
      796,
      20458,
      24835,
      12360,
      13,
      22766,
      62,
      7890,
      7,
      29891,
      28,
      29891,
      11,
      1441,
      62,
      4906,
      2625,
      27830,
      4943
    ],
    "start_token": 401,
    "end_token": 439,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      262,
      2746,
      460,
      307,
      973,
      284,
      2610,
      8748,
      7572,
      290,
      2746,
      1366,
      13
    ],
    "label": "ml_signal",
    "reason": "Logging the model can be used to track usage patterns and model data."
  },
  {
    "line": 125,
    "text": "        ]",
    "annotation": "\u2705 Best Practice: Checking for existence before creation prevents duplicates.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2361
    ],
    "start_token": 439,
    "end_token": 447,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      39432,
      329,
      6224,
      878,
      6282,
      15174,
      14184,
      16856,
      13
    ],
    "label": "best_practice",
    "reason": "Checking for existence before creation prevents duplicates."
  },
  {
    "line": 132,
    "text": "            sub_tag_options=sub_tag_options,",
    "annotation": "\u2705 Best Practice: Checking for existence before creation prevents duplicates.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      850,
      62,
      12985,
      62,
      25811,
      28,
      7266,
      62,
      12985,
      62,
      25811,
      11
    ],
    "start_token": 447,
    "end_token": 470,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      39432,
      329,
      6224,
      878,
      6282,
      15174,
      14184,
      16856,
      13
    ],
    "label": "best_practice",
    "reason": "Checking for existence before creation prevents duplicates."
  },
  {
    "line": 138,
    "text": "    set_stock_tags_model: SetStockTagsModel, timestamp: pd.Timestamp, set_by_user: bool, keep_current=False",
    "annotation": "\u2705 Best Practice: Checking for existence before creation prevents duplicates.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      900,
      62,
      13578,
      62,
      31499,
      62,
      19849,
      25,
      5345,
      26207,
      36142,
      17633,
      11,
      41033,
      25,
      279,
      67,
      13,
      14967,
      27823,
      11,
      900,
      62,
      1525,
      62,
      7220,
      25,
      20512,
      11,
      1394,
      62,
      14421,
      28,
      25101
    ],
    "start_token": 470,
    "end_token": 507,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      39432,
      329,
      6224,
      878,
      6282,
      15174,
      14184,
      16856,
      13
    ],
    "label": "best_practice",
    "reason": "Checking for existence before creation prevents duplicates."
  },
  {
    "line": 141,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Ensure the session is properly closed to prevent resource leaks.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 507,
    "end_token": 507,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      48987,
      262,
      6246,
      318,
      6105,
      4838,
      284,
      2948,
      8271,
      17316,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Ensure the session is properly closed to prevent resource leaks."
  },
  {
    "line": 148,
    "text": "    if set_stock_tags_model.sub_tag:",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Ensure query parameters are sanitized to prevent SQL injection.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      611,
      900,
      62,
      13578,
      62,
      31499,
      62,
      19849,
      13,
      7266,
      62,
      12985,
      25
    ],
    "start_token": 507,
    "end_token": 523,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      48987,
      12405,
      10007,
      389,
      5336,
      36951,
      284,
      2948,
      16363,
      16954,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Ensure query parameters are sanitized to prevent SQL injection."
  },
  {
    "line": 156,
    "text": "        for tag in set_stock_tags_model.active_hidden_tags:",
    "annotation": "\u2705 Best Practice: Logging decisions can help in debugging and understanding flow.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      329,
      7621,
      287,
      900,
      62,
      13578,
      62,
      31499,
      62,
      19849,
      13,
      5275,
      62,
      30342,
      62,
      31499,
      25
    ],
    "start_token": 523,
    "end_token": 547,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5972,
      2667,
      5370,
      460,
      1037,
      287,
      28769,
      290,
      4547,
      5202,
      13
    ],
    "label": "best_practice",
    "reason": "Logging decisions can help in debugging and understanding flow."
  },
  {
    "line": 190,
    "text": "                id=f\"{entity_id}_tags\",",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Ensure data integrity and handle exceptions during database operations.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4686,
      28,
      69,
      1,
      90,
      26858,
      62,
      312,
      92,
      62,
      31499,
      1600
    ],
    "start_token": 547,
    "end_token": 574,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      48987,
      1366,
      11540,
      290,
      5412,
      13269,
      1141,
      6831,
      4560,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Ensure data integrity and handle exceptions during database operations."
  },
  {
    "line": 192,
    "text": "                timestamp=timestamp,",
    "annotation": "\ud83e\udde0 ML Signal: Usage of conditional logic to determine tag reasons",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      41033,
      28,
      16514,
      27823,
      11
    ],
    "start_token": 574,
    "end_token": 594,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      26340,
      9156,
      284,
      5004,
      7621,
      3840
    ],
    "label": "ml_signal",
    "reason": "Usage of conditional logic to determine tag reasons"
  },
  {
    "line": 201,
    "text": "                current_stock_tags.sub_tag = set_stock_tags_model.sub_tag",
    "annotation": "\ud83e\udde0 ML Signal: Usage of conditional logic to determine tag reasons",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1459,
      62,
      13578,
      62,
      31499,
      13,
      7266,
      62,
      12985,
      796,
      900,
      62,
      13578,
      62,
      31499,
      62,
      19849,
      13,
      7266,
      62,
      12985
    ],
    "start_token": 594,
    "end_token": 630,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      26340,
      9156,
      284,
      5004,
      7621,
      3840
    ],
    "label": "ml_signal",
    "reason": "Usage of conditional logic to determine tag reasons"
  },
  {
    "line": 209,
    "text": "            sub_tags[set_stock_tags_model.sub_tag] = set_stock_tags_model.sub_tag_reason",
    "annotation": "\ud83e\udde0 ML Signal: Usage of conditional logic to determine tag reasons",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      850,
      62,
      31499,
      58,
      2617,
      62,
      13578,
      62,
      31499,
      62,
      19849,
      13,
      7266,
      62,
      12985,
      60,
      796,
      900,
      62,
      13578,
      62,
      31499,
      62,
      19849,
      13,
      7266,
      62,
      12985,
      62,
      41181
    ],
    "start_token": 630,
    "end_token": 671,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      26340,
      9156,
      284,
      5004,
      7621,
      3840
    ],
    "label": "ml_signal",
    "reason": "Usage of conditional logic to determine tag reasons"
  },
  {
    "line": 218,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of assert for control flow, which can be disabled in production",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 671,
    "end_token": 671,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      6818,
      329,
      1630,
      5202,
      11,
      543,
      460,
      307,
      10058,
      287,
      3227
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of assert for control flow, which can be disabled in production"
  },
  {
    "line": 227,
    "text": "    hidden_tag_reason = None",
    "annotation": "\u2705 Best Practice: Early return pattern improves code readability and reduces nesting.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      7104,
      62,
      12985,
      62,
      41181,
      796,
      6045
    ],
    "start_token": 671,
    "end_token": 681,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12556,
      1441,
      3912,
      19575,
      2438,
      1100,
      1799,
      290,
      12850,
      46282,
      13
    ],
    "label": "best_practice",
    "reason": "Early return pattern improves code readability and reduces nesting."
  },
  {
    "line": 230,
    "text": "        main_tag = tag",
    "annotation": "\ud83e\udde0 ML Signal: Usage of model to create another model instance.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1388,
      62,
      12985,
      796,
      7621
    ],
    "start_token": 681,
    "end_token": 693,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2746,
      284,
      2251,
      1194,
      2746,
      4554,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of model to create another model instance."
  },
  {
    "line": 232,
    "text": "            main_tag_reason = stock_tag.main_tags.get(main_tag, tag_reason)",
    "annotation": "\ud83e\udde0 ML Signal: Checking existence before creation is a common pattern.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1388,
      62,
      12985,
      62,
      41181,
      796,
      4283,
      62,
      12985,
      13,
      12417,
      62,
      31499,
      13,
      1136,
      7,
      12417,
      62,
      12985,
      11,
      7621,
      62,
      41181,
      8
    ],
    "start_token": 693,
    "end_token": 728,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      6224,
      878,
      6282,
      318,
      257,
      2219,
      3912,
      13
    ],
    "label": "ml_signal",
    "reason": "Checking existence before creation is a common pattern."
  },
  {
    "line": 234,
    "text": "            main_tag_reason = tag_reason",
    "annotation": "\ud83e\udde0 ML Signal: Conditional creation of resources based on existence check.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1388,
      62,
      12985,
      62,
      41181,
      796,
      7621,
      62,
      41181
    ],
    "start_token": 728,
    "end_token": 748,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      6282,
      286,
      4133,
      1912,
      319,
      6224,
      2198,
      13
    ],
    "label": "ml_signal",
    "reason": "Conditional creation of resources based on existence check."
  },
  {
    "line": 236,
    "text": "        sub_tag_reason = stock_tag.sub_tag_reason",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Ensure that the session is properly closed to avoid resource leaks.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      850,
      62,
      12985,
      62,
      41181,
      796,
      4283,
      62,
      12985,
      13,
      7266,
      62,
      12985,
      62,
      41181
    ],
    "start_token": 748,
    "end_token": 770,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      48987,
      326,
      262,
      6246,
      318,
      6105,
      4838,
      284,
      3368,
      8271,
      17316,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Ensure that the session is properly closed to avoid resource leaks."
  },
  {
    "line": 242,
    "text": "            sub_tag_reason = tag_reason",
    "annotation": "\ud83e\udde0 ML Signal: Querying data with specific filters.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      850,
      62,
      12985,
      62,
      41181,
      796,
      7621,
      62,
      41181
    ],
    "start_token": 770,
    "end_token": 790,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      351,
      2176,
      16628,
      13
    ],
    "label": "ml_signal",
    "reason": "Querying data with specific filters."
  },
  {
    "line": 250,
    "text": "            hidden_tag_reason = tag_reason",
    "annotation": "\ud83e\udde0 ML Signal: Querying data with specific filters.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      7104,
      62,
      12985,
      62,
      41181,
      796,
      7621,
      62,
      41181
    ],
    "start_token": 790,
    "end_token": 810,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      351,
      2176,
      16628,
      13
    ],
    "label": "ml_signal",
    "reason": "Querying data with specific filters."
  },
  {
    "line": 259,
    "text": "        assert False",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential SQL injection risk with dynamic queries.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6818,
      10352
    ],
    "start_token": 810,
    "end_token": 819,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      16363,
      16954,
      2526,
      351,
      8925,
      20743,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential SQL injection risk with dynamic queries."
  },
  {
    "line": 266,
    "text": "        hidden_tag=hidden_tag,",
    "annotation": "\ud83e\udde0 ML Signal: Building parameters for further processing.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      7104,
      62,
      12985,
      28,
      30342,
      62,
      12985,
      11
    ],
    "start_token": 819,
    "end_token": 834,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11819,
      10007,
      329,
      2252,
      7587,
      13
    ],
    "label": "ml_signal",
    "reason": "Building parameters for further processing."
  },
  {
    "line": 277,
    "text": "        build_tag_info(tag_info=tag_info, tag_type=batch_set_stock_tags_model.tag_type)",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on tag type.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1382,
      62,
      12985,
      62,
      10951,
      7,
      12985,
      62,
      10951,
      28,
      12985,
      62,
      10951,
      11,
      7621,
      62,
      4906,
      28,
      43501,
      62,
      2617,
      62,
      13578,
      62,
      31499,
      62,
      19849,
      13,
      12985,
      62,
      4906,
      8
    ],
    "start_token": 834,
    "end_token": 873,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      7621,
      2099,
      13
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on tag type."
  },
  {
    "line": 277,
    "text": "        build_tag_info(tag_info=tag_info, tag_type=batch_set_stock_tags_model.tag_type)",
    "annotation": "\ud83e\udde0 ML Signal: Model instantiation with multiple parameters.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1382,
      62,
      12985,
      62,
      10951,
      7,
      12985,
      62,
      10951,
      28,
      12985,
      62,
      10951,
      11,
      7621,
      62,
      4906,
      28,
      43501,
      62,
      2617,
      62,
      13578,
      62,
      31499,
      62,
      19849,
      13,
      12985,
      62,
      4906,
      8
    ],
    "start_token": 873,
    "end_token": 912,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9104,
      9113,
      3920,
      351,
      3294,
      10007,
      13
    ],
    "label": "ml_signal",
    "reason": "Model instantiation with multiple parameters."
  },
  {
    "line": 286,
    "text": "                session=session,",
    "annotation": "\ud83e\udde0 ML Signal: Function call with multiple parameters indicating complex logic.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6246,
      28,
      29891,
      11
    ],
    "start_token": 912,
    "end_token": 931,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      351,
      3294,
      10007,
      12739,
      3716,
      9156,
      13
    ],
    "label": "ml_signal",
    "reason": "Function call with multiple parameters indicating complex logic."
  },
  {
    "line": 295,
    "text": "                return_type=\"domain\",",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Ensure that the session is properly managed to avoid stale data.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      62,
      4906,
      2625,
      27830,
      1600
    ],
    "start_token": 931,
    "end_token": 952,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      48987,
      326,
      262,
      6246,
      318,
      6105,
      5257,
      284,
      3368,
      39985,
      1366,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Ensure that the session is properly managed to avoid stale data."
  },
  {
    "line": 291,
    "text": "            stock_tags: List[StockTags] = StockTags.query_data(",
    "annotation": "\u2705 Best Practice: Use of default mutable arguments (like lists) should be avoided; using None is a safer default.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4283,
      62,
      31499,
      25,
      7343,
      58,
      26207,
      36142,
      60,
      796,
      10500,
      36142,
      13,
      22766,
      62,
      7890,
      7
    ],
    "start_token": 952,
    "end_token": 980,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      4277,
      4517,
      540,
      7159,
      357,
      2339,
      8341,
      8,
      815,
      307,
      13941,
      26,
      1262,
      6045,
      318,
      257,
      14178,
      4277,
      13
    ],
    "label": "best_practice",
    "reason": "Use of default mutable arguments (like lists) should be avoided; using None is a safer default."
  },
  {
    "line": 292,
    "text": "                entity_ids=batch_set_stock_tags_model.entity_ids,",
    "annotation": "\ud83e\udde0 ML Signal: Function call with specific parameters, indicating a pattern of usage.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      62,
      2340,
      28,
      43501,
      62,
      2617,
      62,
      13578,
      62,
      31499,
      62,
      19849,
      13,
      26858,
      62,
      2340,
      11
    ],
    "start_token": 980,
    "end_token": 1013,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      351,
      2176,
      10007,
      11,
      12739,
      257,
      3912,
      286,
      8748,
      13
    ],
    "label": "ml_signal",
    "reason": "Function call with specific parameters, indicating a pattern of usage."
  },
  {
    "line": 297,
    "text": "        elif tag_type == TagType.hidden_tag:",
    "annotation": "\ud83e\udde0 ML Signal: Querying data from a database or data source.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1288,
      361,
      7621,
      62,
      4906,
      6624,
      17467,
      6030,
      13,
      30342,
      62,
      12985,
      25
    ],
    "start_token": 1013,
    "end_token": 1033,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      422,
      257,
      6831,
      393,
      1366,
      2723,
      13
    ],
    "label": "ml_signal",
    "reason": "Querying data from a database or data source."
  },
  {
    "line": 297,
    "text": "        elif tag_type == TagType.hidden_tag:",
    "annotation": "\ud83e\udde0 ML Signal: Conversion of data to a list, indicating a common data processing pattern.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1288,
      361,
      7621,
      62,
      4906,
      6624,
      17467,
      6030,
      13,
      30342,
      62,
      12985,
      25
    ],
    "start_token": 1033,
    "end_token": 1053,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      44101,
      286,
      1366,
      284,
      257,
      1351,
      11,
      12739,
      257,
      2219,
      1366,
      7587,
      3912,
      13
    ],
    "label": "ml_signal",
    "reason": "Conversion of data to a list, indicating a common data processing pattern."
  },
  {
    "line": 302,
    "text": "                filters=[func.json_extract(StockTags.active_hidden_tags, f'$.\"{hidden_tag}\"') == None],",
    "annotation": "\u2705 Best Practice: Type hinting for better code readability and maintainability.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      16628,
      41888,
      20786,
      13,
      17752,
      62,
      2302,
      974,
      7,
      26207,
      36142,
      13,
      5275,
      62,
      30342,
      62,
      31499,
      11,
      277,
      6,
      3,
      526,
      90,
      30342,
      62,
      12985,
      36786,
      11537,
      6624,
      6045,
      4357
    ],
    "start_token": 1053,
    "end_token": 1099,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      1365,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Type hinting for better code readability and maintainability."
  },
  {
    "line": 307,
    "text": "        for stock_tag in stock_tags:",
    "annotation": "\u2705 Best Practice: Dictionary comprehension for efficient mapping.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      329,
      4283,
      62,
      12985,
      287,
      4283,
      62,
      31499,
      25
    ],
    "start_token": 1099,
    "end_token": 1115,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      28261,
      35915,
      329,
      6942,
      16855,
      13
    ],
    "label": "best_practice",
    "reason": "Dictionary comprehension for efficient mapping."
  },
  {
    "line": 310,
    "text": "                tag=batch_set_stock_tags_model.tag,",
    "annotation": "\u2705 Best Practice: Type hinting for better code readability and maintainability.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      7621,
      28,
      43501,
      62,
      2617,
      62,
      13578,
      62,
      31499,
      62,
      19849,
      13,
      12985,
      11
    ],
    "start_token": 1115,
    "end_token": 1144,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      1365,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Type hinting for better code readability and maintainability."
  },
  {
    "line": 312,
    "text": "                stock_tag=stock_tag,",
    "annotation": "\ud83e\udde0 ML Signal: Logging information, useful for understanding code execution flow.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4283,
      62,
      12985,
      28,
      13578,
      62,
      12985,
      11
    ],
    "start_token": 1144,
    "end_token": 1167,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      1321,
      11,
      4465,
      329,
      4547,
      2438,
      9706,
      5202,
      13
    ],
    "label": "ml_signal",
    "reason": "Logging information, useful for understanding code execution flow."
  },
  {
    "line": 316,
    "text": "            else:",
    "annotation": "\ud83e\udde0 ML Signal: Logging information, useful for understanding code execution flow.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 1167,
    "end_token": 1180,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      1321,
      11,
      4465,
      329,
      4547,
      2438,
      9706,
      5202,
      13
    ],
    "label": "ml_signal",
    "reason": "Logging information, useful for understanding code execution flow."
  },
  {
    "line": 316,
    "text": "            else:",
    "annotation": "\u2705 Best Practice: Type hinting for better code readability and maintainability.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 1180,
    "end_token": 1193,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      1365,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Type hinting for better code readability and maintainability."
  },
  {
    "line": 316,
    "text": "            else:",
    "annotation": "\ud83e\udde0 ML Signal: Function call with specific parameters, indicating a pattern of usage.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 1193,
    "end_token": 1206,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      351,
      2176,
      10007,
      11,
      12739,
      257,
      3912,
      286,
      8748,
      13
    ],
    "label": "ml_signal",
    "reason": "Function call with specific parameters, indicating a pattern of usage."
  },
  {
    "line": 327,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function call with specific parameters, indicating a pattern of usage.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1206,
    "end_token": 1206,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      351,
      2176,
      10007,
      11,
      12739,
      257,
      3912,
      286,
      8748,
      13
    ],
    "label": "ml_signal",
    "reason": "Function call with specific parameters, indicating a pattern of usage."
  },
  {
    "line": 329,
    "text": "                set_stock_tags_model=set_stock_tags_model,",
    "annotation": "\u2705 Best Practice: Use of a data model for structured data handling.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      900,
      62,
      13578,
      62,
      31499,
      62,
      19849,
      28,
      2617,
      62,
      13578,
      62,
      31499,
      62,
      19849,
      11
    ],
    "start_token": 1206,
    "end_token": 1237,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      257,
      1366,
      2746,
      329,
      20793,
      1366,
      9041,
      13
    ],
    "label": "best_practice",
    "reason": "Use of a data model for structured data handling."
  },
  {
    "line": 338,
    "text": "def build_default_main_tag(entity_ids=None, force_rebuild=False):",
    "annotation": "\ud83e\udde0 ML Signal: Function call with specific parameters, indicating a pattern of usage.",
    "confidence": 0.5,
    "tokens": [
      4299,
      1382,
      62,
      12286,
      62,
      12417,
      62,
      12985,
      7,
      26858,
      62,
      2340,
      28,
      14202,
      11,
      2700,
      62,
      260,
      11249,
      28,
      25101,
      2599
    ],
    "start_token": 1237,
    "end_token": 1259,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      351,
      2176,
      10007,
      11,
      12739,
      257,
      3912,
      286,
      8748,
      13
    ],
    "label": "ml_signal",
    "reason": "Function call with specific parameters, indicating a pattern of usage."
  },
  {
    "line": 331,
    "text": "                set_by_user=True,",
    "annotation": "\ud83e\udde0 ML Signal: Default behavior when no entity_ids are provided",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      900,
      62,
      1525,
      62,
      7220,
      28,
      17821,
      11
    ],
    "start_token": 1259,
    "end_token": 1282,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15161,
      4069,
      618,
      645,
      9312,
      62,
      2340,
      389,
      2810
    ],
    "label": "ml_signal",
    "reason": "Default behavior when no entity_ids are provided"
  },
  {
    "line": 336,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over entity_ids to perform operations",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1282,
    "end_token": 1282,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      9312,
      62,
      2340,
      284,
      1620,
      4560
    ],
    "label": "ml_signal",
    "reason": "Iterating over entity_ids to perform operations"
  },
  {
    "line": 340,
    "text": "    build default main tag by industry",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Raising an exception without handling it",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1382,
      4277,
      1388,
      7621,
      416,
      2831
    ],
    "start_token": 1282,
    "end_token": 1291,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      7567,
      1710,
      281,
      6631,
      1231,
      9041,
      340
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Raising an exception without handling it"
  },
  {
    "line": 385,
    "text": "            set_by_user=False,",
    "annotation": "\u2705 Best Practice: Consider using a dictionary to map tag_type to data_schema for better scalability and readability.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      900,
      62,
      1525,
      62,
      7220,
      28,
      25101,
      11
    ],
    "start_token": 1291,
    "end_token": 1310,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      257,
      22155,
      284,
      3975,
      7621,
      62,
      4906,
      284,
      1366,
      62,
      15952,
      2611,
      329,
      1365,
      16578,
      1799,
      290,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Consider using a dictionary to map tag_type to data_schema for better scalability and readability."
  },
  {
    "line": 394,
    "text": "        )",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Using assert for control flow can be bypassed if Python is run with optimizations.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 1310,
    "end_token": 1318,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      8554,
      6818,
      329,
      1630,
      5202,
      460,
      307,
      17286,
      276,
      611,
      11361,
      318,
      1057,
      351,
      41446,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Using assert for control flow can be bypassed if Python is run with optimizations."
  },
  {
    "line": 395,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with specific parameters indicating a pattern for checking existence",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1318,
    "end_token": 1318,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      2176,
      10007,
      12739,
      257,
      3912,
      329,
      10627,
      6224
    ],
    "label": "ml_signal",
    "reason": "Function definition with specific parameters indicating a pattern for checking existence"
  },
  {
    "line": 397,
    "text": "        logger.info(f\"build sub tag for: {entity_id}\")",
    "annotation": "\ud83e\udde0 ML Signal: Dynamic schema retrieval based on tag type",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      49706,
      13,
      10951,
      7,
      69,
      1,
      11249,
      850,
      7621,
      329,
      25,
      1391,
      26858,
      62,
      312,
      92,
      4943
    ],
    "start_token": 1318,
    "end_token": 1342,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      26977,
      32815,
      45069,
      1912,
      319,
      7621,
      2099
    ],
    "label": "ml_signal",
    "reason": "Dynamic schema retrieval based on tag type"
  },
  {
    "line": 398,
    "text": "        datas = StockTags.query_data(entity_id=entity_id, limit=1, return_type=\"domain\")",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for SQL injection if `data_schema` is not properly sanitized",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      19395,
      796,
      10500,
      36142,
      13,
      22766,
      62,
      7890,
      7,
      26858,
      62,
      312,
      28,
      26858,
      62,
      312,
      11,
      4179,
      28,
      16,
      11,
      1441,
      62,
      4906,
      2625,
      27830,
      4943
    ],
    "start_token": 1342,
    "end_token": 1376,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      16363,
      16954,
      611,
      4600,
      7890,
      62,
      15952,
      2611,
      63,
      318,
      407,
      6105,
      5336,
      36951
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for SQL injection if `data_schema` is not properly sanitized"
  },
  {
    "line": 401,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Querying data with specific filters",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1376,
    "end_token": 1376,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      351,
      2176,
      16628
    ],
    "label": "ml_signal",
    "reason": "Querying data with specific filters"
  },
  {
    "line": 405,
    "text": "            logger.info(f\"keep current tags set by user for: {entity_id}\")",
    "annotation": "\u2705 Best Practice: Explicit check for truthiness",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      49706,
      13,
      10951,
      7,
      69,
      1,
      14894,
      1459,
      15940,
      900,
      416,
      2836,
      329,
      25,
      1391,
      26858,
      62,
      312,
      92,
      4943
    ],
    "start_token": 1376,
    "end_token": 1407,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11884,
      2198,
      329,
      3872,
      1272
    ],
    "label": "best_practice",
    "reason": "Explicit check for truthiness"
  },
  {
    "line": 408,
    "text": "        current_sub_tag = current_stock_tags.sub_tag",
    "annotation": "\u2705 Best Practice: Explicit return of False for clarity",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1459,
      62,
      7266,
      62,
      12985,
      796,
      1459,
      62,
      13578,
      62,
      31499,
      13,
      7266,
      62,
      12985
    ],
    "start_token": 1407,
    "end_token": 1429,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11884,
      1441,
      286,
      10352,
      329,
      16287
    ],
    "label": "best_practice",
    "reason": "Explicit return of False for clarity"
  },
  {
    "line": 408,
    "text": "        current_sub_tag = current_stock_tags.sub_tag",
    "annotation": "\ud83e\udde0 ML Signal: Checking for existence before creation is a common pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1459,
      62,
      7266,
      62,
      12985,
      796,
      1459,
      62,
      13578,
      62,
      31499,
      13,
      7266,
      62,
      12985
    ],
    "start_token": 1429,
    "end_token": 1451,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      6224,
      878,
      6282,
      318,
      257,
      2219,
      3912
    ],
    "label": "ml_signal",
    "reason": "Checking for existence before creation is a common pattern"
  },
  {
    "line": 410,
    "text": "        if current_sub_tag:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential information disclosure through error message",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      1459,
      62,
      7266,
      62,
      12985,
      25
    ],
    "start_token": 1451,
    "end_token": 1465,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      1321,
      13019,
      832,
      4049,
      3275
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential information disclosure through error message"
  },
  {
    "line": 412,
    "text": "            current_sub_tags = current_stock_tags.sub_tags.keys()",
    "annotation": "\ud83e\udde0 ML Signal: Dynamic schema retrieval based on type",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1459,
      62,
      7266,
      62,
      31499,
      796,
      1459,
      62,
      13578,
      62,
      31499,
      13,
      7266,
      62,
      31499,
      13,
      13083,
      3419
    ],
    "start_token": 1465,
    "end_token": 1494,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      26977,
      32815,
      45069,
      1912,
      319,
      2099
    ],
    "label": "ml_signal",
    "reason": "Dynamic schema retrieval based on type"
  },
  {
    "line": 414,
    "text": "",
    "annotation": "\u2705 Best Practice: Using context manager for database session ensures proper resource management",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 1494,
    "end_token": 1494,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      4732,
      4706,
      329,
      6831,
      6246,
      19047,
      1774,
      8271,
      4542
    ],
    "label": "best_practice",
    "reason": "Using context manager for database session ensures proper resource management"
  },
  {
    "line": 414,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of current timestamp for record creation",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 1494,
    "end_token": 1494,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1459,
      41033,
      329,
      1700,
      6282
    ],
    "label": "ml_signal",
    "reason": "Use of current timestamp for record creation"
  },
  {
    "line": 421,
    "text": "            filters=filters,",
    "annotation": "\ud83e\udde0 ML Signal: Hardcoded entity_id, could indicate a default or admin action",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      16628,
      28,
      10379,
      1010,
      11
    ],
    "start_token": 1494,
    "end_token": 1510,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6912,
      40976,
      9312,
      62,
      312,
      11,
      714,
      7603,
      257,
      4277,
      393,
      13169,
      2223
    ],
    "label": "ml_signal",
    "reason": "Hardcoded entity_id, could indicate a default or admin action"
  },
  {
    "line": 421,
    "text": "            filters=filters,",
    "annotation": "\ud83e\udde0 ML Signal: Constructing a database model instance",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      16628,
      28,
      10379,
      1010,
      11
    ],
    "start_token": 1510,
    "end_token": 1526,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      28407,
      278,
      257,
      6831,
      2746,
      4554
    ],
    "label": "ml_signal",
    "reason": "Constructing a database model instance"
  },
  {
    "line": 427,
    "text": "",
    "annotation": "\u2705 Best Practice: Adding new record to session before committing",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1526,
    "end_token": 1526,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      18247,
      649,
      1700,
      284,
      6246,
      878,
      17222
    ],
    "label": "best_practice",
    "reason": "Adding new record to session before committing"
  },
  {
    "line": 427,
    "text": "",
    "annotation": "\u2705 Best Practice: Committing session to persist changes",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1526,
    "end_token": 1526,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      1520,
      2535,
      6246,
      284,
      21160,
      2458
    ],
    "label": "best_practice",
    "reason": "Committing session to persist changes"
  },
  {
    "line": 434,
    "text": "                main_tag_reason = sub_tag_reason",
    "annotation": "\u2705 Best Practice: Refreshing session to get updated state of the object",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1388,
      62,
      12985,
      62,
      41181,
      796,
      850,
      62,
      12985,
      62,
      41181
    ],
    "start_token": 1526,
    "end_token": 1552,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6524,
      411,
      722,
      6246,
      284,
      651,
      6153,
      1181,
      286,
      262,
      2134
    ],
    "label": "best_practice",
    "reason": "Refreshing session to get updated state of the object"
  },
  {
    "line": 434,
    "text": "                main_tag_reason = sub_tag_reason",
    "annotation": "\ud83e\udde0 ML Signal: Returning the created database object",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1388,
      62,
      12985,
      62,
      41181,
      796,
      850,
      62,
      12985,
      62,
      41181
    ],
    "start_token": 1552,
    "end_token": 1578,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      42882,
      262,
      2727,
      6831,
      2134
    ],
    "label": "ml_signal",
    "reason": "Returning the created database object"
  },
  {
    "line": 425,
    "text": "            logger.info(f\"no block_stocks for: {entity_id}\")",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with parameters indicating a pattern for data processing",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      49706,
      13,
      10951,
      7,
      69,
      1,
      3919,
      2512,
      62,
      29522,
      329,
      25,
      1391,
      26858,
      62,
      312,
      92,
      4943
    ],
    "start_token": 1578,
    "end_token": 1607,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      10007,
      12739,
      257,
      3912,
      329,
      1366,
      7587
    ],
    "label": "ml_signal",
    "reason": "Function definition with parameters indicating a pattern for data processing"
  },
  {
    "line": 427,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoded provider name \"zvt\" could lead to inflexibility or misconfiguration",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 1607,
    "end_token": 1607,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      40976,
      10131,
      1438,
      366,
      89,
      36540,
      1,
      714,
      1085,
      284,
      1167,
      2588,
      2247,
      393,
      2984,
      11250,
      3924
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoded provider name \"zvt\" could lead to inflexibility or misconfiguration"
  },
  {
    "line": 427,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoded entity_id \"admin\" could lead to privilege escalation if misused",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1607,
    "end_token": 1607,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      40976,
      9312,
      62,
      312,
      366,
      28482,
      1,
      714,
      1085,
      284,
      11941,
      29459,
      611,
      2984,
      1484
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoded entity_id \"admin\" could lead to privilege escalation if misused"
  },
  {
    "line": 434,
    "text": "                main_tag_reason = sub_tag_reason",
    "annotation": "\u2705 Best Practice: Use of a conversion function for timestamp ensures consistent data format",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1388,
      62,
      12985,
      62,
      41181,
      796,
      850,
      62,
      12985,
      62,
      41181
    ],
    "start_token": 1607,
    "end_token": 1633,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      257,
      11315,
      2163,
      329,
      41033,
      19047,
      6414,
      1366,
      5794
    ],
    "label": "best_practice",
    "reason": "Use of a conversion function for timestamp ensures consistent data format"
  },
  {
    "line": 434,
    "text": "                main_tag_reason = sub_tag_reason",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for ID collision if stock_pool_name is not unique",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1388,
      62,
      12985,
      62,
      41181,
      796,
      850,
      62,
      12985,
      62,
      41181
    ],
    "start_token": 1633,
    "end_token": 1659,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      4522,
      17661,
      611,
      4283,
      62,
      7742,
      62,
      3672,
      318,
      407,
      3748
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for ID collision if stock_pool_name is not unique"
  },
  {
    "line": 436,
    "text": "                    main_tag = current_stock_tags.main_tag",
    "annotation": "\ud83e\udde0 ML Signal: Use of model attributes to set object properties",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1388,
      62,
      12985,
      796,
      1459,
      62,
      13578,
      62,
      31499,
      13,
      12417,
      62,
      12985
    ],
    "start_token": 1659,
    "end_token": 1691,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2746,
      12608,
      284,
      900,
      2134,
      6608
    ],
    "label": "ml_signal",
    "reason": "Use of model attributes to set object properties"
  },
  {
    "line": 440,
    "text": "                    set_stock_tags_model=SetStockTagsModel(",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of adding and committing to a session",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      900,
      62,
      13578,
      62,
      31499,
      62,
      19849,
      28,
      7248,
      26207,
      36142,
      17633,
      7
    ],
    "start_token": 1691,
    "end_token": 1723,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      4375,
      290,
      17222,
      284,
      257,
      6246
    ],
    "label": "ml_signal",
    "reason": "Pattern of adding and committing to a session"
  },
  {
    "line": 441,
    "text": "                        entity_id=entity_id,",
    "annotation": "\u2705 Best Practice: Refreshing the session to ensure the object is updated with the latest database state",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      62,
      312,
      28,
      26858,
      62,
      312,
      11
    ],
    "start_token": 1723,
    "end_token": 1754,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6524,
      411,
      722,
      262,
      6246,
      284,
      4155,
      262,
      2134,
      318,
      6153,
      351,
      262,
      3452,
      6831,
      1181
    ],
    "label": "best_practice",
    "reason": "Refreshing the session to ensure the object is updated with the latest database state"
  },
  {
    "line": 447,
    "text": "                    ),",
    "annotation": "\ud83e\udde0 ML Signal: Returning a database object after creation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      10612
    ],
    "start_token": 1754,
    "end_token": 1774,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      42882,
      257,
      6831,
      2134,
      706,
      6282
    ],
    "label": "ml_signal",
    "reason": "Returning a database object after creation"
  },
  {
    "line": 438,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with parameters indicating a pattern for model building",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1774,
    "end_token": 1774,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      10007,
      12739,
      257,
      3912,
      329,
      2746,
      2615
    ],
    "label": "ml_signal",
    "reason": "Function definition with parameters indicating a pattern for model building"
  },
  {
    "line": 440,
    "text": "                    set_stock_tags_model=SetStockTagsModel(",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of a hardcoded provider name in DBSession",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      900,
      62,
      13578,
      62,
      31499,
      62,
      19849,
      28,
      7248,
      26207,
      36142,
      17633,
      7
    ],
    "start_token": 1774,
    "end_token": 1806,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      257,
      1327,
      40976,
      10131,
      1438,
      287,
      360,
      4462,
      2521
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of a hardcoded provider name in DBSession"
  },
  {
    "line": 441,
    "text": "                        entity_id=entity_id,",
    "annotation": "\ud83e\udde0 ML Signal: Conditional check for existence in a list",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      62,
      312,
      28,
      26858,
      62,
      312,
      11
    ],
    "start_token": 1806,
    "end_token": 1837,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      2198,
      329,
      6224,
      287,
      257,
      1351
    ],
    "label": "ml_signal",
    "reason": "Conditional check for existence in a list"
  },
  {
    "line": 441,
    "text": "                        entity_id=entity_id,",
    "annotation": "\ud83e\udde0 ML Signal: Function call with model creation and timestamp",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      62,
      312,
      28,
      26858,
      62,
      312,
      11
    ],
    "start_token": 1837,
    "end_token": 1868,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      351,
      2746,
      6282,
      290,
      41033
    ],
    "label": "ml_signal",
    "reason": "Function call with model creation and timestamp"
  },
  {
    "line": 448,
    "text": "                    timestamp=now_pd_timestamp(),",
    "annotation": "\ud83e\udde0 ML Signal: String formatting for ID creation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      41033,
      28,
      2197,
      62,
      30094,
      62,
      16514,
      27823,
      22784
    ],
    "start_token": 1868,
    "end_token": 1896,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      10903,
      33313,
      329,
      4522,
      6282
    ],
    "label": "ml_signal",
    "reason": "String formatting for ID creation"
  },
  {
    "line": 456,
    "text": "def get_tag_info_schema(tag_type: TagType):",
    "annotation": "\ud83e\udde0 ML Signal: Querying data with filters",
    "confidence": 0.5,
    "tokens": [
      4299,
      651,
      62,
      12985,
      62,
      10951,
      62,
      15952,
      2611,
      7,
      12985,
      62,
      4906,
      25,
      17467,
      6030,
      2599
    ],
    "start_token": 1896,
    "end_token": 1913,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      351,
      16628
    ],
    "label": "ml_signal",
    "reason": "Querying data with filters"
  },
  {
    "line": 461,
    "text": "    elif tag_type == TagType.hidden_tag:",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on query results",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1288,
      361,
      7621,
      62,
      4906,
      6624,
      17467,
      6030,
      13,
      30342,
      62,
      12985,
      25
    ],
    "start_token": 1913,
    "end_token": 1929,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      12405,
      2482
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on query results"
  },
  {
    "line": 463,
    "text": "    else:",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic for different insert modes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 1929,
    "end_token": 1934,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      329,
      1180,
      7550,
      12881
    ],
    "label": "ml_signal",
    "reason": "Conditional logic for different insert modes"
  },
  {
    "line": 470,
    "text": "    data_schema = get_tag_info_schema(tag_type=tag_type)",
    "annotation": "\u2705 Best Practice: Use of set to avoid duplicate entries",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1366,
      62,
      15952,
      2611,
      796,
      651,
      62,
      12985,
      62,
      10951,
      62,
      15952,
      2611,
      7,
      12985,
      62,
      4906,
      28,
      12985,
      62,
      4906,
      8
    ],
    "start_token": 1934,
    "end_token": 1959,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      900,
      284,
      3368,
      23418,
      12784
    ],
    "label": "best_practice",
    "reason": "Use of set to avoid duplicate entries"
  },
  {
    "line": 472,
    "text": "        current_tags_info = data_schema.query_data(",
    "annotation": "\ud83e\udde0 ML Signal: Object creation with multiple attributes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1459,
      62,
      31499,
      62,
      10951,
      796,
      1366,
      62,
      15952,
      2611,
      13,
      22766,
      62,
      7890,
      7
    ],
    "start_token": 1959,
    "end_token": 1981,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9515,
      6282,
      351,
      3294,
      12608
    ],
    "label": "ml_signal",
    "reason": "Object creation with multiple attributes"
  },
  {
    "line": 481,
    "text": "    \"\"\"",
    "annotation": "\u2705 Best Practice: Adding and committing session changes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      37227
    ],
    "start_token": 1981,
    "end_token": 1985,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      18247,
      290,
      17222,
      6246,
      2458
    ],
    "label": "best_practice",
    "reason": "Adding and committing session changes"
  },
  {
    "line": 484,
    "text": "    if is_tag_info_existed(tag_info=tag_info, tag_type=tag_type):",
    "annotation": "\ud83e\udde0 ML Signal: Return statement indicating function output",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      611,
      318,
      62,
      12985,
      62,
      10951,
      62,
      1069,
      6347,
      7,
      12985,
      62,
      10951,
      28,
      12985,
      62,
      10951,
      11,
      7621,
      62,
      4906,
      28,
      12985,
      62,
      4906,
      2599
    ],
    "start_token": 1985,
    "end_token": 2014,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8229,
      2643,
      12739,
      2163,
      5072
    ],
    "label": "ml_signal",
    "reason": "Return statement indicating function output"
  },
  {
    "line": 474,
    "text": "        )",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with a specific task related to stock pool management",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 2014,
    "end_token": 2022,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      257,
      2176,
      4876,
      3519,
      284,
      4283,
      5933,
      4542
    ],
    "label": "ml_signal",
    "reason": "Function definition with a specific task related to stock pool management"
  },
  {
    "line": 476,
    "text": "            return True",
    "annotation": "\u2705 Best Practice: Using a context manager for database session ensures proper resource management",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      6407
    ],
    "start_token": 2022,
    "end_token": 2035,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      257,
      4732,
      4706,
      329,
      6831,
      6246,
      19047,
      1774,
      8271,
      4542
    ],
    "label": "best_practice",
    "reason": "Using a context manager for database session ensures proper resource management"
  },
  {
    "line": 476,
    "text": "            return True",
    "annotation": "\ud83e\udde0 ML Signal: Querying data from a database using specific filters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      6407
    ],
    "start_token": 2035,
    "end_token": 2048,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      422,
      257,
      6831,
      1262,
      2176,
      16628
    ],
    "label": "ml_signal",
    "reason": "Querying data from a database using specific filters"
  },
  {
    "line": 484,
    "text": "    if is_tag_info_existed(tag_info=tag_info, tag_type=tag_type):",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential risk of SQL injection if filters are not properly sanitized",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      611,
      318,
      62,
      12985,
      62,
      10951,
      62,
      1069,
      6347,
      7,
      12985,
      62,
      10951,
      28,
      12985,
      62,
      10951,
      11,
      7621,
      62,
      4906,
      28,
      12985,
      62,
      4906,
      2599
    ],
    "start_token": 2048,
    "end_token": 2077,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      2526,
      286,
      16363,
      16954,
      611,
      16628,
      389,
      407,
      6105,
      5336,
      36951
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential risk of SQL injection if filters are not properly sanitized"
  },
  {
    "line": 487,
    "text": "    data_schema = get_tag_info_schema(tag_type=tag_type)",
    "annotation": "\u2705 Best Practice: Deleting an object from the session before committing",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1366,
      62,
      15952,
      2611,
      796,
      651,
      62,
      12985,
      62,
      10951,
      62,
      15952,
      2611,
      7,
      12985,
      62,
      4906,
      28,
      12985,
      62,
      4906,
      8
    ],
    "start_token": 2077,
    "end_token": 2102,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      42226,
      889,
      281,
      2134,
      422,
      262,
      6246,
      878,
      17222
    ],
    "label": "best_practice",
    "reason": "Deleting an object from the session before committing"
  },
  {
    "line": 488,
    "text": "    with contract_api.DBSession(provider=\"zvt\", data_schema=data_schema)() as session:",
    "annotation": "\u2705 Best Practice: Use of context manager for session ensures proper resource management",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      351,
      2775,
      62,
      15042,
      13,
      35,
      4462,
      2521,
      7,
      15234,
      1304,
      2625,
      89,
      36540,
      1600,
      1366,
      62,
      15952,
      2611,
      28,
      7890,
      62,
      15952,
      2611,
      8,
      3419,
      355,
      6246,
      25
    ],
    "start_token": 2102,
    "end_token": 2134,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      4732,
      4706,
      329,
      6246,
      19047,
      1774,
      8271,
      4542
    ],
    "label": "best_practice",
    "reason": "Use of context manager for session ensures proper resource management"
  },
  {
    "line": 499,
    "text": "        session.commit()",
    "annotation": "\ud83e\udde0 ML Signal: Use of type hints can be used to infer data structures and types",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6246,
      13,
      41509,
      3419
    ],
    "start_token": 2134,
    "end_token": 2145,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2099,
      20269,
      460,
      307,
      973,
      284,
      13249,
      1366,
      8573,
      290,
      3858
    ],
    "label": "ml_signal",
    "reason": "Use of type hints can be used to infer data structures and types"
  },
  {
    "line": 512,
    "text": "        )",
    "annotation": "\ud83e\udde0 ML Signal: Use of flatten_list indicates data transformation patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 2145,
    "end_token": 2153,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      27172,
      268,
      62,
      4868,
      9217,
      1366,
      13389,
      7572
    ],
    "label": "ml_signal",
    "reason": "Use of flatten_list indicates data transformation patterns"
  },
  {
    "line": 513,
    "text": "        session.add(stock_pool_info)",
    "annotation": "\ud83e\udde0 ML Signal: Use of dictionary comprehensions for mapping",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6246,
      13,
      2860,
      7,
      13578,
      62,
      7742,
      62,
      10951,
      8
    ],
    "start_token": 2153,
    "end_token": 2170,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      22155,
      8569,
      507,
      329,
      16855
    ],
    "label": "ml_signal",
    "reason": "Use of dictionary comprehensions for mapping"
  },
  {
    "line": 524,
    "text": "                    stock_pool_type=StockPoolType.custom, stock_pool_name=create_stock_pools_model.stock_pool_name",
    "annotation": "\ud83e\udde0 ML Signal: Use of dictionary comprehensions for mapping",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4283,
      62,
      7742,
      62,
      4906,
      28,
      26207,
      27201,
      6030,
      13,
      23144,
      11,
      4283,
      62,
      7742,
      62,
      3672,
      28,
      17953,
      62,
      13578,
      62,
      7742,
      82,
      62,
      19849,
      13,
      13578,
      62,
      7742,
      62,
      3672
    ],
    "start_token": 2170,
    "end_token": 2221,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      22155,
      8569,
      507,
      329,
      16855
    ],
    "label": "ml_signal",
    "reason": "Use of dictionary comprehensions for mapping"
  },
  {
    "line": 528,
    "text": "        # one instance per day",
    "annotation": "\ud83e\udde0 ML Signal: Use of dictionary comprehensions for mapping",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      530,
      4554,
      583,
      1110
    ],
    "start_token": 2221,
    "end_token": 2233,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      22155,
      8569,
      507,
      329,
      16855
    ],
    "label": "ml_signal",
    "reason": "Use of dictionary comprehensions for mapping"
  },
  {
    "line": 537,
    "text": "        )",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential NoneType access if entity_id is not found in entity_map",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 2233,
    "end_token": 2241,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      6045,
      6030,
      1895,
      611,
      9312,
      62,
      312,
      318,
      407,
      1043,
      287,
      9312,
      62,
      8899
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential NoneType access if entity_id is not found in entity_map"
  },
  {
    "line": 539,
    "text": "            stock_pool = datas[0]",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential NoneType access if entity_id is not found in entity_map",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4283,
      62,
      7742,
      796,
      19395,
      58,
      15,
      60
    ],
    "start_token": 2241,
    "end_token": 2260,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      6045,
      6030,
      1895,
      611,
      9312,
      62,
      312,
      318,
      407,
      1043,
      287,
      9312,
      62,
      8899
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential NoneType access if entity_id is not found in entity_map"
  },
  {
    "line": 543,
    "text": "                stock_pool.entity_ids = list(set(stock_pool.entity_ids + create_stock_pools_model.entity_ids))",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential NoneType access if entity_id is not found in entity_tags_map",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4283,
      62,
      7742,
      13,
      26858,
      62,
      2340,
      796,
      1351,
      7,
      2617,
      7,
      13578,
      62,
      7742,
      13,
      26858,
      62,
      2340,
      1343,
      2251,
      62,
      13578,
      62,
      7742,
      82,
      62,
      19849,
      13,
      26858,
      62,
      2340,
      4008
    ],
    "start_token": 2260,
    "end_token": 2308,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      6045,
      6030,
      1895,
      611,
      9312,
      62,
      312,
      318,
      407,
      1043,
      287,
      9312,
      62,
      31499,
      62,
      8899
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential NoneType access if entity_id is not found in entity_tags_map"
  },
  {
    "line": 550,
    "text": "                entity_ids=create_stock_pools_model.entity_ids,",
    "annotation": "\ud83e\udde0 ML Signal: Use of fill_dict indicates data merging patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      62,
      2340,
      28,
      17953,
      62,
      13578,
      62,
      7742,
      82,
      62,
      19849,
      13,
      26858,
      62,
      2340,
      11
    ],
    "start_token": 2308,
    "end_token": 2340,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      6070,
      62,
      11600,
      9217,
      1366,
      35981,
      7572
    ],
    "label": "ml_signal",
    "reason": "Use of fill_dict indicates data merging patterns"
  },
  {
    "line": 546,
    "text": "                entity_id=\"admin\",",
    "annotation": "\ud83e\udde0 ML Signal: Checking for the presence of sub_tags can indicate data completeness or quality.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      62,
      312,
      2625,
      28482,
      1600
    ],
    "start_token": 2340,
    "end_token": 2361,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      262,
      4931,
      286,
      850,
      62,
      31499,
      460,
      7603,
      1366,
      1224,
      43205,
      393,
      3081,
      13
    ],
    "label": "ml_signal",
    "reason": "Checking for the presence of sub_tags can indicate data completeness or quality."
  },
  {
    "line": 548,
    "text": "                id=stock_pool_id,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Logging potentially sensitive information (entity_id).",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4686,
      28,
      13578,
      62,
      7742,
      62,
      312,
      11
    ],
    "start_token": 2361,
    "end_token": 2384,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5972,
      2667,
      6196,
      8564,
      1321,
      357,
      26858,
      62,
      312,
      737
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Logging potentially sensitive information (entity_id)."
  },
  {
    "line": 551,
    "text": "            )",
    "annotation": "\ud83e\udde0 ML Signal: Accessing a specific sub_tag from a collection.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 2384,
    "end_token": 2396,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8798,
      278,
      257,
      2176,
      850,
      62,
      12985,
      422,
      257,
      4947,
      13
    ],
    "label": "ml_signal",
    "reason": "Accessing a specific sub_tag from a collection."
  },
  {
    "line": 553,
    "text": "        session.commit()",
    "annotation": "\ud83e\udde0 ML Signal: Mapping sub_tag to its reason, indicating a relationship between data points.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6246,
      13,
      41509,
      3419
    ],
    "start_token": 2396,
    "end_token": 2407,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      337,
      5912,
      850,
      62,
      12985,
      284,
      663,
      1738,
      11,
      12739,
      257,
      2776,
      1022,
      1366,
      2173,
      13
    ],
    "label": "ml_signal",
    "reason": "Mapping sub_tag to its reason, indicating a relationship between data points."
  },
  {
    "line": 555,
    "text": "        return stock_pool",
    "annotation": "\ud83e\udde0 ML Signal: Function call to derive main_tag from sub_tag, indicating a transformation or mapping.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      4283,
      62,
      7742
    ],
    "start_token": 2407,
    "end_token": 2418,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      284,
      27099,
      1388,
      62,
      12985,
      422,
      850,
      62,
      12985,
      11,
      12739,
      257,
      13389,
      393,
      16855,
      13
    ],
    "label": "ml_signal",
    "reason": "Function call to derive main_tag from sub_tag, indicating a transformation or mapping."
  },
  {
    "line": 556,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic to handle specific cases, such as \"\u5176\u4ed6\".",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 2418,
    "end_token": 2418,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      284,
      5412,
      2176,
      2663,
      11,
      884,
      355,
      366,
      17739,
      114,
      20015,
      244,
      1911
    ],
    "label": "ml_signal",
    "reason": "Conditional logic to handle specific cases, such as \"\u5176\u4ed6\"."
  },
  {
    "line": 564,
    "text": "        )",
    "annotation": "\u2705 Best Practice: Using a model to encapsulate data, improving readability and maintainability.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 2418,
    "end_token": 2426,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      257,
      2746,
      284,
      32652,
      5039,
      1366,
      11,
      10068,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Using a model to encapsulate data, improving readability and maintainability."
  },
  {
    "line": 571,
    "text": "            return \"success\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Logging potentially sensitive information (set_stock_tags_model).",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      366,
      13138,
      1
    ],
    "start_token": 2426,
    "end_token": 2441,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5972,
      2667,
      6196,
      8564,
      1321,
      357,
      2617,
      62,
      13578,
      62,
      31499,
      62,
      19849,
      737
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Logging potentially sensitive information (set_stock_tags_model)."
  },
  {
    "line": 573,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function call to build stock tags, indicating a data processing step.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 2441,
    "end_token": 2441,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      284,
      1382,
      4283,
      15940,
      11,
      12739,
      257,
      1366,
      7587,
      2239,
      13
    ],
    "label": "ml_signal",
    "reason": "Function call to build stock tags, indicating a data processing step."
  },
  {
    "line": 571,
    "text": "            return \"success\"",
    "annotation": "\u2705 Best Practice: Consider adding a docstring to describe the function's purpose and behavior",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      366,
      13138,
      1
    ],
    "start_token": 2441,
    "end_token": 2456,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      4375,
      257,
      2205,
      8841,
      284,
      6901,
      262,
      2163,
      338,
      4007,
      290,
      4069
    ],
    "label": "best_practice",
    "reason": "Consider adding a docstring to describe the function's purpose and behavior"
  },
  {
    "line": 573,
    "text": "",
    "annotation": "\u2705 Best Practice: Use a context manager for database session to ensure proper resource management",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 2456,
    "end_token": 2456,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      257,
      4732,
      4706,
      329,
      6831,
      6246,
      284,
      4155,
      1774,
      8271,
      4542
    ],
    "label": "best_practice",
    "reason": "Use a context manager for database session to ensure proper resource management"
  },
  {
    "line": 573,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Querying data from a database can indicate data retrieval patterns",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 2456,
    "end_token": 2456,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      422,
      257,
      6831,
      460,
      7603,
      1366,
      45069,
      7572
    ],
    "label": "ml_signal",
    "reason": "Querying data from a database can indicate data retrieval patterns"
  },
  {
    "line": 580,
    "text": "            order=TagStats.timestamp.desc(),",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over database query results is a common pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1502,
      28,
      24835,
      29668,
      13,
      16514,
      27823,
      13,
      20147,
      22784
    ],
    "start_token": 2456,
    "end_token": 2477,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      6831,
      12405,
      2482,
      318,
      257,
      2219,
      3912
    ],
    "label": "ml_signal",
    "reason": "Iterating over database query results is a common pattern"
  },
  {
    "line": 580,
    "text": "            order=TagStats.timestamp.desc(),",
    "annotation": "\ud83e\udde0 ML Signal: Function calls within loops can indicate batch processing patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1502,
      28,
      24835,
      29668,
      13,
      16514,
      27823,
      13,
      20147,
      22784
    ],
    "start_token": 2477,
    "end_token": 2498,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      3848,
      1626,
      23607,
      460,
      7603,
      15458,
      7587,
      7572
    ],
    "label": "ml_signal",
    "reason": "Function calls within loops can indicate batch processing patterns"
  },
  {
    "line": 580,
    "text": "            order=TagStats.timestamp.desc(),",
    "annotation": "\u2705 Best Practice: Consider adding type hints for function parameters and return type for better readability and maintainability.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1502,
      28,
      24835,
      29668,
      13,
      16514,
      27823,
      13,
      20147,
      22784
    ],
    "start_token": 2498,
    "end_token": 2519,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      4375,
      2099,
      20269,
      329,
      2163,
      10007,
      290,
      1441,
      2099,
      329,
      1365,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Consider adding type hints for function parameters and return type for better readability and maintainability."
  },
  {
    "line": 586,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of query_data method with specific filters and columns can indicate common data access patterns.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 2519,
    "end_token": 2519,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      12405,
      62,
      7890,
      2446,
      351,
      2176,
      16628,
      290,
      15180,
      460,
      7603,
      2219,
      1366,
      1895,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of query_data method with specific filters and columns can indicate common data access patterns."
  },
  {
    "line": 588,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Converting a DataFrame column to a list is a common pattern for data processing.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 2519,
    "end_token": 2519,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      35602,
      889,
      257,
      6060,
      19778,
      5721,
      284,
      257,
      1351,
      318,
      257,
      2219,
      3912,
      329,
      1366,
      7587,
      13
    ],
    "label": "ml_signal",
    "reason": "Converting a DataFrame column to a list is a common pattern for data processing."
  },
  {
    "line": 590,
    "text": "            session=session,",
    "annotation": "\u2705 Best Practice: Logging information messages helps in tracking the flow and state of the application.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6246,
      28,
      29891,
      11
    ],
    "start_token": 2519,
    "end_token": 2534,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5972,
      2667,
      1321,
      6218,
      5419,
      287,
      9646,
      262,
      5202,
      290,
      1181,
      286,
      262,
      3586,
      13
    ],
    "label": "best_practice",
    "reason": "Logging information messages helps in tracking the flow and state of the application."
  },
  {
    "line": 593,
    "text": "                TagStats.timestamp == target_date,",
    "annotation": "\u2705 Best Practice: Early return pattern improves code readability by reducing nested blocks.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      17467,
      29668,
      13,
      16514,
      27823,
      6624,
      2496,
      62,
      4475,
      11
    ],
    "start_token": 2534,
    "end_token": 2559,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12556,
      1441,
      3912,
      19575,
      2438,
      1100,
      1799,
      416,
      8868,
      28376,
      7021,
      13
    ],
    "label": "best_practice",
    "reason": "Early return pattern improves code readability by reducing nested blocks."
  },
  {
    "line": 593,
    "text": "                TagStats.timestamp == target_date,",
    "annotation": "\ud83e\udde0 ML Signal: Calling a function with specific parameters can indicate a pattern of usage or behavior.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      17467,
      29668,
      13,
      16514,
      27823,
      6624,
      2496,
      62,
      4475,
      11
    ],
    "start_token": 2559,
    "end_token": 2584,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      32677,
      257,
      2163,
      351,
      2176,
      10007,
      460,
      7603,
      257,
      3912,
      286,
      8748,
      393,
      4069,
      13
    ],
    "label": "ml_signal",
    "reason": "Calling a function with specific parameters can indicate a pattern of usage or behavior."
  },
  {
    "line": 590,
    "text": "            session=session,",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with specific parameter types can be used to infer usage patterns.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6246,
      28,
      29891,
      11
    ],
    "start_token": 2584,
    "end_token": 2599,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      2176,
      11507,
      3858,
      460,
      307,
      973,
      284,
      13249,
      8748,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "Function definition with specific parameter types can be used to infer usage patterns."
  },
  {
    "line": 592,
    "text": "                TagStats.stock_pool_name == query_stock_tag_stats_model.stock_pool_name,",
    "annotation": "\ud83e\udde0 ML Signal: Querying data with specific filters can indicate common data access patterns.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      17467,
      29668,
      13,
      13578,
      62,
      7742,
      62,
      3672,
      6624,
      12405,
      62,
      13578,
      62,
      12985,
      62,
      34242,
      62,
      19849,
      13,
      13578,
      62,
      7742,
      62,
      3672,
      11
    ],
    "start_token": 2599,
    "end_token": 2639,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      351,
      2176,
      16628,
      460,
      7603,
      2219,
      1366,
      1895,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "Querying data with specific filters can indicate common data access patterns."
  },
  {
    "line": 593,
    "text": "                TagStats.timestamp == target_date,",
    "annotation": "\ud83e\udde0 ML Signal: Converting query results to a list can indicate common data processing patterns.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      17467,
      29668,
      13,
      16514,
      27823,
      6624,
      2496,
      62,
      4475,
      11
    ],
    "start_token": 2639,
    "end_token": 2664,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      35602,
      889,
      12405,
      2482,
      284,
      257,
      1351,
      460,
      7603,
      2219,
      1366,
      7587,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "Converting query results to a list can indicate common data processing patterns."
  },
  {
    "line": 598,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Querying data with specific filters can indicate common data access patterns.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 2664,
    "end_token": 2664,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      351,
      2176,
      16628,
      460,
      7603,
      2219,
      1366,
      1895,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "Querying data with specific filters can indicate common data access patterns."
  },
  {
    "line": 602,
    "text": "        entity_ids = flatten_list([tag_stats[\"entity_ids\"] for tag_stats in tag_stats_list])",
    "annotation": "\ud83e\udde0 ML Signal: List comprehension usage can indicate common data transformation patterns.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      62,
      2340,
      796,
      27172,
      268,
      62,
      4868,
      26933,
      12985,
      62,
      34242,
      14692,
      26858,
      62,
      2340,
      8973,
      329,
      7621,
      62,
      34242,
      287,
      7621,
      62,
      34242,
      62,
      4868,
      12962
    ],
    "start_token": 2664,
    "end_token": 2699,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7343,
      35915,
      8748,
      460,
      7603,
      2219,
      1366,
      13389,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "List comprehension usage can indicate common data transformation patterns."
  },
  {
    "line": 604,
    "text": "        # get stocks meta",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Logging information about empty results could potentially expose sensitive data.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      651,
      14420,
      13634
    ],
    "start_token": 2699,
    "end_token": 2710,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5972,
      2667,
      1321,
      546,
      6565,
      2482,
      714,
      6196,
      15651,
      8564,
      1366,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Logging information about empty results could potentially expose sensitive data."
  },
  {
    "line": 608,
    "text": "        # get stock tags",
    "annotation": "\ud83e\udde0 ML Signal: Function call with specific parameters can indicate common usage patterns.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      651,
      4283,
      15940
    ],
    "start_token": 2710,
    "end_token": 2721,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      351,
      2176,
      10007,
      460,
      7603,
      2219,
      8748,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "Function call with specific parameters can indicate common usage patterns."
  },
  {
    "line": 603,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with specific model parameter type",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 2721,
    "end_token": 2721,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      2176,
      2746,
      11507,
      2099
    ],
    "label": "ml_signal",
    "reason": "Function definition with specific model parameter type"
  },
  {
    "line": 606,
    "text": "        entity_map = {item.entity_id: item for item in stocks}",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential SQL injection if sub_tags are not properly sanitized",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9312,
      62,
      8899,
      796,
      1391,
      9186,
      13,
      26858,
      62,
      312,
      25,
      2378,
      329,
      2378,
      287,
      14420,
      92
    ],
    "start_token": 2721,
    "end_token": 2745,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      16363,
      16954,
      611,
      850,
      62,
      31499,
      389,
      407,
      6105,
      5336,
      36951
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential SQL injection if sub_tags are not properly sanitized"
  },
  {
    "line": 609,
    "text": "        tags_dict = StockTags.query_data(",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential SQL injection if sub_tag is not properly sanitized",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      15940,
      62,
      11600,
      796,
      10500,
      36142,
      13,
      22766,
      62,
      7890,
      7
    ],
    "start_token": 2745,
    "end_token": 2763,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      16363,
      16954,
      611,
      850,
      62,
      12985,
      318,
      407,
      6105,
      5336,
      36951
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential SQL injection if sub_tag is not properly sanitized"
  },
  {
    "line": 615,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of raw SQL functions can lead to SQL injection",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 2763,
    "end_token": 2763,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      8246,
      16363,
      5499,
      460,
      1085,
      284,
      16363,
      16954
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of raw SQL functions can lead to SQL injection"
  },
  {
    "line": 620,
    "text": "            return_type=\"dict\",",
    "annotation": "\u2705 Best Practice: Use of logging for information tracking",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      62,
      4906,
      2625,
      11600,
      1600
    ],
    "start_token": 2763,
    "end_token": 2780,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      18931,
      329,
      1321,
      9646
    ],
    "label": "best_practice",
    "reason": "Use of logging for information tracking"
  },
  {
    "line": 625,
    "text": "            stock_details = []",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Committing changes to the database without validation",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4283,
      62,
      36604,
      796,
      17635
    ],
    "start_token": 2780,
    "end_token": 2796,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1520,
      2535,
      2458,
      284,
      262,
      6831,
      1231,
      21201
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Committing changes to the database without validation"
  },
  {
    "line": 626,
    "text": "            for entity_id in tag_stats[\"entity_ids\"]:",
    "annotation": "\ud83e\udde0 ML Signal: Tracking changes to entity_id in result",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      329,
      9312,
      62,
      312,
      287,
      7621,
      62,
      34242,
      14692,
      26858,
      62,
      2340,
      1,
      5974
    ],
    "start_token": 2796,
    "end_token": 2821,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      37169,
      2458,
      284,
      9312,
      62,
      312,
      287,
      1255
    ],
    "label": "ml_signal",
    "reason": "Tracking changes to entity_id in result"
  },
  {
    "line": 624,
    "text": "        for tag_stats in tag_stats_list:",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential SQL injection risk if `hidden_tag` is not properly sanitized before being used in the query.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      329,
      7621,
      62,
      34242,
      287,
      7621,
      62,
      34242,
      62,
      4868,
      25
    ],
    "start_token": 2821,
    "end_token": 2839,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      16363,
      16954,
      2526,
      611,
      4600,
      30342,
      62,
      12985,
      63,
      318,
      407,
      6105,
      5336,
      36951,
      878,
      852,
      973,
      287,
      262,
      12405,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential SQL injection risk if `hidden_tag` is not properly sanitized before being used in the query."
  },
  {
    "line": 625,
    "text": "            stock_details = []",
    "annotation": "\u2705 Best Practice: Consider using parameterized queries to prevent SQL injection.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4283,
      62,
      36604,
      796,
      17635
    ],
    "start_token": 2839,
    "end_token": 2855,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      11507,
      1143,
      20743,
      284,
      2948,
      16363,
      16954,
      13
    ],
    "label": "best_practice",
    "reason": "Consider using parameterized queries to prevent SQL injection."
  },
  {
    "line": 626,
    "text": "            for entity_id in tag_stats[\"entity_ids\"]:",
    "annotation": "\u2705 Best Practice: Using a context manager for the session ensures that resources are properly managed and released.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      329,
      9312,
      62,
      312,
      287,
      7621,
      62,
      34242,
      14692,
      26858,
      62,
      2340,
      1,
      5974
    ],
    "start_token": 2855,
    "end_token": 2880,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      257,
      4732,
      4706,
      329,
      262,
      6246,
      19047,
      326,
      4133,
      389,
      6105,
      5257,
      290,
      2716,
      13
    ],
    "label": "best_practice",
    "reason": "Using a context manager for the session ensures that resources are properly managed and released."
  },
  {
    "line": 631,
    "text": "                    \"name\": entity_map.get(entity_id).name,",
    "annotation": "\ud83e\udde0 ML Signal: Usage of query_data method with filters indicates a pattern for querying databases.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      3672,
      1298,
      9312,
      62,
      8899,
      13,
      1136,
      7,
      26858,
      62,
      312,
      737,
      3672,
      11
    ],
    "start_token": 2880,
    "end_token": 2914,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      12405,
      62,
      7890,
      2446,
      351,
      16628,
      9217,
      257,
      3912,
      329,
      42517,
      1112,
      20083,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of query_data method with filters indicates a pattern for querying databases."
  },
  {
    "line": 632,
    "text": "                }",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Use of `func.json_extract` with dynamic input can lead to SQL injection if not properly handled.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1782
    ],
    "start_token": 2914,
    "end_token": 2930,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      5765,
      286,
      4600,
      20786,
      13,
      17752,
      62,
      2302,
      974,
      63,
      351,
      8925,
      5128,
      460,
      1085,
      284,
      16363,
      16954,
      611,
      407,
      6105,
      12118,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Use of `func.json_extract` with dynamic input can lead to SQL injection if not properly handled."
  },
  {
    "line": 637,
    "text": "                    stock_details_model[\"hidden_tags\"] = stock_tags[\"active_hidden_tags\"].keys()",
    "annotation": "\ud83e\udde0 ML Signal: Logging patterns can be used to train models for detecting logging practices.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4283,
      62,
      36604,
      62,
      19849,
      14692,
      30342,
      62,
      31499,
      8973,
      796,
      4283,
      62,
      31499,
      14692,
      5275,
      62,
      30342,
      62,
      31499,
      1,
      4083,
      13083,
      3419
    ],
    "start_token": 2930,
    "end_token": 2973,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      7572,
      460,
      307,
      973,
      284,
      4512,
      4981,
      329,
      31521,
      18931,
      6593,
      13
    ],
    "label": "ml_signal",
    "reason": "Logging patterns can be used to train models for detecting logging practices."
  },
  {
    "line": 641,
    "text": "                stock_system_tags = entity_system_tags_map.get(entity_id)",
    "annotation": "\u2705 Best Practice: Converting to a dictionary before modification ensures that the original data structure is not directly altered.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4283,
      62,
      10057,
      62,
      31499,
      796,
      9312,
      62,
      10057,
      62,
      31499,
      62,
      8899,
      13,
      1136,
      7,
      26858,
      62,
      312,
      8
    ],
    "start_token": 2973,
    "end_token": 3008,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      35602,
      889,
      284,
      257,
      22155,
      878,
      17613,
      19047,
      326,
      262,
      2656,
      1366,
      4645,
      318,
      407,
      3264,
      14294,
      13
    ],
    "label": "best_practice",
    "reason": "Converting to a dictionary before modification ensures that the original data structure is not directly altered."
  },
  {
    "line": 643,
    "text": "",
    "annotation": "\u2705 Best Practice: Committing the session after changes ensures that the database is updated with the latest data.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 3008,
    "end_token": 3008,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      1520,
      2535,
      262,
      6246,
      706,
      2458,
      19047,
      326,
      262,
      6831,
      318,
      6153,
      351,
      262,
      3452,
      1366,
      13
    ],
    "label": "best_practice",
    "reason": "Committing the session after changes ensures that the database is updated with the latest data."
  },
  {
    "line": 648,
    "text": "",
    "annotation": "\u2705 Best Practice: Refreshing the session ensures that the object is updated with the latest data from the database.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 3008,
    "end_token": 3008,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6524,
      411,
      722,
      262,
      6246,
      19047,
      326,
      262,
      2134,
      318,
      6153,
      351,
      262,
      3452,
      1366,
      422,
      262,
      6831,
      13
    ],
    "label": "best_practice",
    "reason": "Refreshing the session ensures that the object is updated with the latest data from the database."
  },
  {
    "line": 641,
    "text": "                stock_system_tags = entity_system_tags_map.get(entity_id)",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with a specific task related to database operations",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4283,
      62,
      10057,
      62,
      31499,
      796,
      9312,
      62,
      10057,
      62,
      31499,
      62,
      8899,
      13,
      1136,
      7,
      26858,
      62,
      312,
      8
    ],
    "start_token": 3008,
    "end_token": 3043,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      257,
      2176,
      4876,
      3519,
      284,
      6831,
      4560
    ],
    "label": "ml_signal",
    "reason": "Function definition with a specific task related to database operations"
  },
  {
    "line": 643,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential risk if `contract_api.DBSession` is not properly handling exceptions",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 3043,
    "end_token": 3043,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2526,
      611,
      4600,
      28484,
      62,
      15042,
      13,
      35,
      4462,
      2521,
      63,
      318,
      407,
      6105,
      9041,
      13269
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential risk if `contract_api.DBSession` is not properly handling exceptions"
  },
  {
    "line": 643,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Querying a database using specific filters",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 3043,
    "end_token": 3043,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      257,
      6831,
      1262,
      2176,
      16628
    ],
    "label": "ml_signal",
    "reason": "Querying a database using specific filters"
  },
  {
    "line": 651,
    "text": "    if not stock_tag.sub_tags:",
    "annotation": "\u2705 Best Practice: Checking if the query result is empty before proceeding",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      611,
      407,
      4283,
      62,
      12985,
      13,
      7266,
      62,
      31499,
      25
    ],
    "start_token": 3043,
    "end_token": 3056,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      39432,
      611,
      262,
      12405,
      1255,
      318,
      6565,
      878,
      18788
    ],
    "label": "best_practice",
    "reason": "Checking if the query result is empty before proceeding"
  },
  {
    "line": 653,
    "text": "        return stock_tag",
    "annotation": "\ud83e\udde0 ML Signal: Logging information about the operation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      4283,
      62,
      12985
    ],
    "start_token": 3056,
    "end_token": 3067,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      1321,
      546,
      262,
      4905
    ],
    "label": "ml_signal",
    "reason": "Logging information about the operation"
  },
  {
    "line": 656,
    "text": "    sub_tag_reason = stock_tag.sub_tags[sub_tag]",
    "annotation": "\ud83e\udde0 ML Signal: Calling a function to perform an operation based on the query result",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      12985,
      62,
      41181,
      796,
      4283,
      62,
      12985,
      13,
      7266,
      62,
      31499,
      58,
      7266,
      62,
      12985,
      60
    ],
    "start_token": 3067,
    "end_token": 3088,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      32677,
      257,
      2163,
      284,
      1620,
      281,
      4905,
      1912,
      319,
      262,
      12405,
      1255
    ],
    "label": "ml_signal",
    "reason": "Calling a function to perform an operation based on the query result"
  },
  {
    "line": 658,
    "text": "    main_tag = get_main_tag_by_sub_tag(sub_tag)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Deleting data from the database; ensure proper authorization and validation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1388,
      62,
      12985,
      796,
      651,
      62,
      12417,
      62,
      12985,
      62,
      1525,
      62,
      7266,
      62,
      12985,
      7,
      7266,
      62,
      12985,
      8
    ],
    "start_token": 3088,
    "end_token": 3111,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      42226,
      889,
      1366,
      422,
      262,
      6831,
      26,
      4155,
      1774,
      19601,
      290,
      21201
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Deleting data from the database; ensure proper authorization and validation"
  },
  {
    "line": 660,
    "text": "    if main_tag == \"\u5176\u4ed6\":",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Committing changes to the database; ensure atomicity and error handling",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      611,
      1388,
      62,
      12985,
      6624,
      366,
      17739,
      114,
      20015,
      244,
      1298
    ],
    "start_token": 3111,
    "end_token": 3125,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1520,
      2535,
      2458,
      284,
      262,
      6831,
      26,
      4155,
      22037,
      8467,
      290,
      4049,
      9041
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Committing changes to the database; ensure atomicity and error handling"
  },
  {
    "line": 655,
    "text": "    sub_tag = stock_tag.sub_tag",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with parameters indicating a creation operation",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      12985,
      796,
      4283,
      62,
      12985,
      13,
      7266,
      62,
      12985
    ],
    "start_token": 3125,
    "end_token": 3139,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      10007,
      12739,
      257,
      6282,
      4905
    ],
    "label": "ml_signal",
    "reason": "Function definition with parameters indicating a creation operation"
  },
  {
    "line": 657,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of a model object with specific attributes",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 3139,
    "end_token": 3139,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      257,
      2746,
      2134,
      351,
      2176,
      12608
    ],
    "label": "ml_signal",
    "reason": "Instantiation of a model object with specific attributes"
  },
  {
    "line": 659,
    "text": "    main_tag_reason = sub_tag_reason",
    "annotation": "\ud83e\udde0 ML Signal: Conditional check for existence of an entity",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1388,
      62,
      12985,
      62,
      41181,
      796,
      850,
      62,
      12985,
      62,
      41181
    ],
    "start_token": 3139,
    "end_token": 3153,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      2198,
      329,
      6224,
      286,
      281,
      9312
    ],
    "label": "ml_signal",
    "reason": "Conditional check for existence of an entity"
  },
  {
    "line": 661,
    "text": "        main_tag = stock_tag.main_tag",
    "annotation": "\ud83e\udde0 ML Signal: Function call to build or create an entity",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1388,
      62,
      12985,
      796,
      4283,
      62,
      12985,
      13,
      12417,
      62,
      12985
    ],
    "start_token": 3153,
    "end_token": 3171,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      284,
      1382,
      393,
      2251,
      281,
      9312
    ],
    "label": "ml_signal",
    "reason": "Function call to build or create an entity"
  },
  {
    "line": 660,
    "text": "    if main_tag == \"\u5176\u4ed6\":",
    "annotation": "\u2705 Best Practice: Using a context manager for database session ensures proper resource management.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      611,
      1388,
      62,
      12985,
      6624,
      366,
      17739,
      114,
      20015,
      244,
      1298
    ],
    "start_token": 3171,
    "end_token": 3185,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      257,
      4732,
      4706,
      329,
      6831,
      6246,
      19047,
      1774,
      8271,
      4542,
      13
    ],
    "label": "best_practice",
    "reason": "Using a context manager for database session ensures proper resource management."
  },
  {
    "line": 661,
    "text": "        main_tag = stock_tag.main_tag",
    "annotation": "\ud83e\udde0 ML Signal: Querying data based on a specific tag can indicate a pattern of interest in certain industries.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1388,
      62,
      12985,
      796,
      4283,
      62,
      12985,
      13,
      12417,
      62,
      12985
    ],
    "start_token": 3185,
    "end_token": 3203,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      1912,
      319,
      257,
      2176,
      7621,
      460,
      7603,
      257,
      3912,
      286,
      1393,
      287,
      1728,
      11798,
      13
    ],
    "label": "ml_signal",
    "reason": "Querying data based on a specific tag can indicate a pattern of interest in certain industries."
  },
  {
    "line": 669,
    "text": "        sub_tag_reason=sub_tag_reason,",
    "annotation": "\u2705 Best Practice: Returning a dictionary with clear keys improves readability and usability of the function's output.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      850,
      62,
      12985,
      62,
      41181,
      28,
      7266,
      62,
      12985,
      62,
      41181,
      11
    ],
    "start_token": 3203,
    "end_token": 3222,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      42882,
      257,
      22155,
      351,
      1598,
      8251,
      19575,
      1100,
      1799,
      290,
      42863,
      286,
      262,
      2163,
      338,
      5072,
      13
    ],
    "label": "best_practice",
    "reason": "Returning a dictionary with clear keys improves readability and usability of the function's output."
  },
  {
    "line": 668,
    "text": "        sub_tag=sub_tag,",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with a specific pattern of input and output",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      850,
      62,
      12985,
      28,
      7266,
      62,
      12985,
      11
    ],
    "start_token": 3222,
    "end_token": 3237,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      257,
      2176,
      3912,
      286,
      5128,
      290,
      5072
    ],
    "label": "ml_signal",
    "reason": "Function definition with a specific pattern of input and output"
  },
  {
    "line": 670,
    "text": "        active_hidden_tags=stock_tag.active_hidden_tags,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential risk if 'contract_api.DBSession' is not properly handling exceptions",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4075,
      62,
      30342,
      62,
      31499,
      28,
      13578,
      62,
      12985,
      13,
      5275,
      62,
      30342,
      62,
      31499,
      11
    ],
    "start_token": 3237,
    "end_token": 3260,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2526,
      611,
      705,
      28484,
      62,
      15042,
      13,
      35,
      4462,
      2521,
      6,
      318,
      407,
      6105,
      9041,
      13269
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential risk if 'contract_api.DBSession' is not properly handling exceptions"
  },
  {
    "line": 670,
    "text": "        active_hidden_tags=stock_tag.active_hidden_tags,",
    "annotation": "\ud83e\udde0 ML Signal: Querying a database using a session object",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4075,
      62,
      30342,
      62,
      31499,
      28,
      13578,
      62,
      12985,
      13,
      5275,
      62,
      30342,
      62,
      31499,
      11
    ],
    "start_token": 3260,
    "end_token": 3283,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      257,
      6831,
      1262,
      257,
      6246,
      2134
    ],
    "label": "ml_signal",
    "reason": "Querying a database using a session object"
  },
  {
    "line": 679,
    "text": "    )",
    "annotation": "\u2705 Best Practice: Returning a dictionary with clear key-value pairs",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1267
    ],
    "start_token": 3283,
    "end_token": 3287,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      42882,
      257,
      22155,
      351,
      1598,
      1994,
      12,
      8367,
      14729
    ],
    "label": "best_practice",
    "reason": "Returning a dictionary with clear key-value pairs"
  },
  {
    "line": 678,
    "text": "        keep_current=False,",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a database session pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1394,
      62,
      14421,
      28,
      25101,
      11
    ],
    "start_token": 3287,
    "end_token": 3300,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      6831,
      6246,
      3912
    ],
    "label": "ml_signal",
    "reason": "Usage of a database session pattern"
  },
  {
    "line": 681,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function call to create a tag if it doesn't exist",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 3300,
    "end_token": 3300,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      284,
      2251,
      257,
      7621,
      611,
      340,
      1595,
      470,
      2152
    ],
    "label": "ml_signal",
    "reason": "Function call to create a tag if it doesn't exist"
  },
  {
    "line": 682,
    "text": "def refresh_all_main_tag_by_sub_tag():",
    "annotation": "\ud83e\udde0 ML Signal: Querying data with specific filters",
    "confidence": 1.0,
    "tokens": [
      4299,
      14976,
      62,
      439,
      62,
      12417,
      62,
      12985,
      62,
      1525,
      62,
      7266,
      62,
      12985,
      33529
    ],
    "start_token": 3300,
    "end_token": 3315,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      351,
      2176,
      16628
    ],
    "label": "ml_signal",
    "reason": "Querying data with specific filters"
  },
  {
    "line": 690,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Modifying attributes of queried data",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 3315,
    "end_token": 3315,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3401,
      4035,
      12608,
      286,
      42517,
      798,
      1366
    ],
    "label": "ml_signal",
    "reason": "Modifying attributes of queried data"
  },
  {
    "line": 695,
    "text": "        columns=[StockTags.entity_id],",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Committing changes to the database without error handling",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      15180,
      41888,
      26207,
      36142,
      13,
      26858,
      62,
      312,
      4357
    ],
    "start_token": 3315,
    "end_token": 3331,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1520,
      2535,
      2458,
      284,
      262,
      6831,
      1231,
      4049,
      9041
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Committing changes to the database without error handling"
  },
  {
    "line": 695,
    "text": "        columns=[StockTags.entity_id],",
    "annotation": "\ud83e\udde0 ML Signal: Querying data with specific filters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      15180,
      41888,
      26207,
      36142,
      13,
      26858,
      62,
      312,
      4357
    ],
    "start_token": 3331,
    "end_token": 3347,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      351,
      2176,
      16628
    ],
    "label": "ml_signal",
    "reason": "Querying data with specific filters"
  },
  {
    "line": 702,
    "text": "    build_default_main_tag(entity_ids=entity_ids, force_rebuild=True)",
    "annotation": "\ud83e\udde0 ML Signal: Modifying attributes of queried data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1382,
      62,
      12286,
      62,
      12417,
      62,
      12985,
      7,
      26858,
      62,
      2340,
      28,
      26858,
      62,
      2340,
      11,
      2700,
      62,
      260,
      11249,
      28,
      17821,
      8
    ],
    "start_token": 3347,
    "end_token": 3373,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3401,
      4035,
      12608,
      286,
      42517,
      798,
      1366
    ],
    "label": "ml_signal",
    "reason": "Modifying attributes of queried data"
  },
  {
    "line": 703,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Committing changes to the database without error handling",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 3373,
    "end_token": 3373,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1520,
      2535,
      2458,
      284,
      262,
      6831,
      1231,
      4049,
      9041
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Committing changes to the database without error handling"
  },
  {
    "line": 699,
    "text": "    if not entity_ids:",
    "annotation": "\u2705 Best Practice: Using a context manager for the session ensures it is properly closed after use.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      611,
      407,
      9312,
      62,
      2340,
      25
    ],
    "start_token": 3373,
    "end_token": 3382,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      257,
      4732,
      4706,
      329,
      262,
      6246,
      19047,
      340,
      318,
      6105,
      4838,
      706,
      779,
      13
    ],
    "label": "best_practice",
    "reason": "Using a context manager for the session ensures it is properly closed after use."
  },
  {
    "line": 702,
    "text": "    build_default_main_tag(entity_ids=entity_ids, force_rebuild=True)",
    "annotation": "\ud83e\udde0 ML Signal: Function call to create a main tag if it doesn't exist indicates a pattern of ensuring data integrity.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1382,
      62,
      12286,
      62,
      12417,
      62,
      12985,
      7,
      26858,
      62,
      2340,
      28,
      26858,
      62,
      2340,
      11,
      2700,
      62,
      260,
      11249,
      28,
      17821,
      8
    ],
    "start_token": 3382,
    "end_token": 3408,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      284,
      2251,
      257,
      1388,
      7621,
      611,
      340,
      1595,
      470,
      2152,
      9217,
      257,
      3912,
      286,
      13359,
      1366,
      11540,
      13
    ],
    "label": "ml_signal",
    "reason": "Function call to create a main tag if it doesn't exist indicates a pattern of ensuring data integrity."
  },
  {
    "line": 703,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Querying data with specific filters shows a pattern of data retrieval based on conditions.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 3408,
    "end_token": 3408,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      351,
      2176,
      16628,
      2523,
      257,
      3912,
      286,
      1366,
      45069,
      1912,
      319,
      3403,
      13
    ],
    "label": "ml_signal",
    "reason": "Querying data with specific filters shows a pattern of data retrieval based on conditions."
  },
  {
    "line": 711,
    "text": "        return_type=\"domain\",",
    "annotation": "\ud83e\udde0 ML Signal: Modifying data based on conditions is a common pattern in data processing.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      62,
      4906,
      2625,
      27830,
      1600
    ],
    "start_token": 3408,
    "end_token": 3421,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3401,
      4035,
      1366,
      1912,
      319,
      3403,
      318,
      257,
      2219,
      3912,
      287,
      1366,
      7587,
      13
    ],
    "label": "ml_signal",
    "reason": "Modifying data based on conditions is a common pattern in data processing."
  },
  {
    "line": 716,
    "text": "        logger.info(f\"No stocks in {industry_list}\")",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Committing changes to the database without exception handling could lead to data inconsistency.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      49706,
      13,
      10951,
      7,
      69,
      1,
      2949,
      14420,
      287,
      1391,
      23213,
      563,
      62,
      4868,
      92,
      4943
    ],
    "start_token": 3421,
    "end_token": 3444,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1520,
      2535,
      2458,
      284,
      262,
      6831,
      1231,
      6631,
      9041,
      714,
      1085,
      284,
      1366,
      43831,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Committing changes to the database without exception handling could lead to data inconsistency."
  },
  {
    "line": 716,
    "text": "        logger.info(f\"No stocks in {industry_list}\")",
    "annotation": "\ud83e\udde0 ML Signal: Querying data with specific filters shows a pattern of data retrieval based on conditions.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      49706,
      13,
      10951,
      7,
      69,
      1,
      2949,
      14420,
      287,
      1391,
      23213,
      563,
      62,
      4868,
      92,
      4943
    ],
    "start_token": 3444,
    "end_token": 3467,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      351,
      2176,
      16628,
      2523,
      257,
      3912,
      286,
      1366,
      45069,
      1912,
      319,
      3403,
      13
    ],
    "label": "ml_signal",
    "reason": "Querying data with specific filters shows a pattern of data retrieval based on conditions."
  },
  {
    "line": 723,
    "text": "    sub_tags = activate_sub_tags_model.sub_tags",
    "annotation": "\ud83e\udde0 ML Signal: Modifying data based on conditions is a common pattern in data processing.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      31499,
      796,
      15155,
      62,
      7266,
      62,
      31499,
      62,
      19849,
      13,
      7266,
      62,
      31499
    ],
    "start_token": 3467,
    "end_token": 3485,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3401,
      4035,
      1366,
      1912,
      319,
      3403,
      318,
      257,
      2219,
      3912,
      287,
      1366,
      7587,
      13
    ],
    "label": "ml_signal",
    "reason": "Modifying data based on conditions is a common pattern in data processing."
  },
  {
    "line": 723,
    "text": "    sub_tags = activate_sub_tags_model.sub_tags",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Committing changes to the database without exception handling could lead to data inconsistency.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      31499,
      796,
      15155,
      62,
      7266,
      62,
      31499,
      62,
      19849,
      13,
      7266,
      62,
      31499
    ],
    "start_token": 3485,
    "end_token": 3503,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1520,
      2535,
      2458,
      284,
      262,
      6831,
      1231,
      6631,
      9041,
      714,
      1085,
      284,
      1366,
      43831,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Committing changes to the database without exception handling could lead to data inconsistency."
  },
  {
    "line": 721,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a function to ensure a main tag exists before proceeding",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 3503,
    "end_token": 3503,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      2163,
      284,
      4155,
      257,
      1388,
      7621,
      7160,
      878,
      18788
    ],
    "label": "ml_signal",
    "reason": "Usage of a function to ensure a main tag exists before proceeding"
  },
  {
    "line": 723,
    "text": "    sub_tags = activate_sub_tags_model.sub_tags",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential SQL injection if filters are not properly sanitized",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      31499,
      796,
      15155,
      62,
      7266,
      62,
      31499,
      62,
      19849,
      13,
      7266,
      62,
      31499
    ],
    "start_token": 3503,
    "end_token": 3521,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      16363,
      16954,
      611,
      16628,
      389,
      407,
      6105,
      5336,
      36951
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential SQL injection if filters are not properly sanitized"
  },
  {
    "line": 723,
    "text": "    sub_tags = activate_sub_tags_model.sub_tags",
    "annotation": "\ud83e\udde0 ML Signal: Querying data with specific filters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      31499,
      796,
      15155,
      62,
      7266,
      62,
      31499,
      62,
      19849,
      13,
      7266,
      62,
      31499
    ],
    "start_token": 3521,
    "end_token": 3539,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      351,
      2176,
      16628
    ],
    "label": "ml_signal",
    "reason": "Querying data with specific filters"
  },
  {
    "line": 729,
    "text": "            #     filters=[StockTags.sub_tag != sub_tag],",
    "annotation": "\ud83e\udde0 ML Signal: Building a tag parameter for each stock tag",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      220,
      220,
      220,
      220,
      16628,
      41888,
      26207,
      36142,
      13,
      7266,
      62,
      12985,
      14512,
      850,
      62,
      12985,
      4357
    ],
    "start_token": 3539,
    "end_token": 3568,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11819,
      257,
      7621,
      11507,
      329,
      1123,
      4283,
      7621
    ],
    "label": "ml_signal",
    "reason": "Building a tag parameter for each stock tag"
  },
  {
    "line": 735,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Creating a model to set stock tags",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 3568,
    "end_token": 3568,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      30481,
      257,
      2746,
      284,
      900,
      4283,
      15940
    ],
    "label": "ml_signal",
    "reason": "Creating a model to set stock tags"
  },
  {
    "line": 749,
    "text": "                session.commit()",
    "annotation": "\ud83e\udde0 ML Signal: Building stock tags with specific parameters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6246,
      13,
      41509,
      3419
    ],
    "start_token": 3568,
    "end_token": 3587,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11819,
      4283,
      15940,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Building stock tags with specific parameters"
  },
  {
    "line": 753,
    "text": "",
    "annotation": "\u2705 Best Practice: Refreshing session to ensure data consistency",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 3587,
    "end_token": 3587,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6524,
      411,
      722,
      6246,
      284,
      4155,
      1366,
      15794
    ],
    "label": "best_practice",
    "reason": "Refreshing session to ensure data consistency"
  },
  {
    "line": 753,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Direct execution of code in the main block",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 3587,
    "end_token": 3587,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      4128,
      9706,
      286,
      2438,
      287,
      262,
      1388,
      2512
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Direct execution of code in the main block"
  },
  {
    "line": 753,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potentially unsafe print statement for debugging",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 3587,
    "end_token": 3587,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6902,
      3746,
      21596,
      3601,
      2643,
      329,
      28769
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potentially unsafe print statement for debugging"
  },
  {
    "line": 753,
    "text": "",
    "annotation": "\u2705 Best Practice: Using __all__ to define public API of the module",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 3587,
    "end_token": 3587,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      11593,
      439,
      834,
      284,
      8160,
      1171,
      7824,
      286,
      262,
      8265
    ],
    "label": "best_practice",
    "reason": "Using __all__ to define public API of the module"
  }
]