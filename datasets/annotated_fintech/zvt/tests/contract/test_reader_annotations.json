[
  {
    "line": 3,
    "text": "",
    "annotation": "\u2705 Best Practice: Grouping standard library imports together at the top improves readability.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 0,
    "end_token": 0,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      3210,
      5888,
      17944,
      1978,
      379,
      262,
      1353,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping standard library imports together at the top improves readability."
  },
  {
    "line": 5,
    "text": "",
    "annotation": "\u2705 Best Practice: Grouping third-party library imports together improves readability.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 0,
    "end_token": 0,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      2368,
      12,
      10608,
      5888,
      17944,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping third-party library imports together improves readability."
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a specific data provider and schema for stock data",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 0,
    "end_token": 0,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      2176,
      1366,
      10131,
      290,
      32815,
      329,
      4283,
      1366
    ],
    "label": "ml_signal",
    "reason": "Usage of a specific data provider and schema for stock data"
  },
  {
    "line": 19,
    "text": "        data_schema=Stock1dKdata,",
    "annotation": "\ud83e\udde0 ML Signal: Conversion of index levels to a list",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1366,
      62,
      15952,
      2611,
      28,
      26207,
      16,
      67,
      42,
      7890,
      11
    ],
    "start_token": 0,
    "end_token": 18,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      44101,
      286,
      6376,
      2974,
      284,
      257,
      1351
    ],
    "label": "ml_signal",
    "reason": "Conversion of index levels to a list"
  },
  {
    "line": 22,
    "text": "        codes=[\"002572\", \"000338\"],",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoded stock codes may lead to maintenance issues",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      12416,
      28,
      14692,
      405,
      1495,
      4761,
      1600,
      366,
      830,
      28460,
      33116
    ],
    "start_token": 18,
    "end_token": 36,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      40976,
      4283,
      12416,
      743,
      1085,
      284,
      9262,
      2428
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoded stock codes may lead to maintenance issues"
  },
  {
    "line": 24,
    "text": "        end_timestamp=\"2019-06-10\",",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoded stock codes may lead to maintenance issues",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      886,
      62,
      16514,
      27823,
      2625,
      23344,
      12,
      3312,
      12,
      940,
      1600
    ],
    "start_token": 36,
    "end_token": 54,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      40976,
      4283,
      12416,
      743,
      1085,
      284,
      9262,
      2428
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoded stock codes may lead to maintenance issues"
  },
  {
    "line": 26,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoded date values may lead to maintenance issues",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 54,
    "end_token": 54,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      40976,
      3128,
      3815,
      743,
      1085,
      284,
      9262,
      2428
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoded date values may lead to maintenance issues"
  },
  {
    "line": 29,
    "text": "    df = data_reader.data_df",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoded date values may lead to maintenance issues",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      47764,
      796,
      1366,
      62,
      46862,
      13,
      7890,
      62,
      7568
    ],
    "start_token": 54,
    "end_token": 66,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      40976,
      3128,
      3815,
      743,
      1085,
      284,
      9262,
      2428
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoded date values may lead to maintenance issues"
  },
  {
    "line": 30,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoded date values may lead to maintenance issues",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 66,
    "end_token": 66,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      40976,
      3128,
      3815,
      743,
      1085,
      284,
      9262,
      2428
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoded date values may lead to maintenance issues"
  },
  {
    "line": 32,
    "text": "    assert \"stock_sz_000338\" in categories",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoded date values may lead to maintenance issues",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      366,
      13578,
      62,
      82,
      89,
      62,
      830,
      28460,
      1,
      287,
      9376
    ],
    "start_token": 66,
    "end_token": 81,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      40976,
      3128,
      3815,
      743,
      1085,
      284,
      9262,
      2428
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoded date values may lead to maintenance issues"
  },
  {
    "line": 34,
    "text": "    assert (\"stock_sz_002572\", \"2019-01-02\") in df.index",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over a range of timestamps",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      5855,
      13578,
      62,
      82,
      89,
      62,
      405,
      1495,
      4761,
      1600,
      366,
      23344,
      12,
      486,
      12,
      2999,
      4943,
      287,
      47764,
      13,
      9630
    ],
    "start_token": 81,
    "end_token": 106,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      257,
      2837,
      286,
      4628,
      395,
      9430
    ],
    "label": "ml_signal",
    "reason": "Iterating over a range of timestamps"
  },
  {
    "line": 34,
    "text": "    assert (\"stock_sz_002572\", \"2019-01-02\") in df.index",
    "annotation": "\ud83e\udde0 ML Signal: Moving data reader to a specific timestamp",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      5855,
      13578,
      62,
      82,
      89,
      62,
      405,
      1495,
      4761,
      1600,
      366,
      23344,
      12,
      486,
      12,
      2999,
      4943,
      287,
      47764,
      13,
      9630
    ],
    "start_token": 106,
    "end_token": 131,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      26768,
      1366,
      9173,
      284,
      257,
      2176,
      41033
    ],
    "label": "ml_signal",
    "reason": "Moving data reader to a specific timestamp"
  },
  {
    "line": 42,
    "text": "        data_reader.move_on(to_timestamp=timestamp)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoded stock codes may lead to maintenance issues",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1366,
      62,
      46862,
      13,
      21084,
      62,
      261,
      7,
      1462,
      62,
      16514,
      27823,
      28,
      16514,
      27823,
      8
    ],
    "start_token": 131,
    "end_token": 154,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      40976,
      4283,
      12416,
      743,
      1085,
      284,
      9262,
      2428
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoded stock codes may lead to maintenance issues"
  },
  {
    "line": 43,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoded stock codes may lead to maintenance issues",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 154,
    "end_token": 154,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      40976,
      4283,
      12416,
      743,
      1085,
      284,
      9262,
      2428
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoded stock codes may lead to maintenance issues"
  },
  {
    "line": 42,
    "text": "        data_reader.move_on(to_timestamp=timestamp)",
    "annotation": "\ud83e\udde0 ML Signal: Usage of move_on method with specific timestamp",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1366,
      62,
      46862,
      13,
      21084,
      62,
      261,
      7,
      1462,
      62,
      16514,
      27823,
      28,
      16514,
      27823,
      8
    ],
    "start_token": 154,
    "end_token": 177,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      1445,
      62,
      261,
      2446,
      351,
      2176,
      41033
    ],
    "label": "ml_signal",
    "reason": "Usage of move_on method with specific timestamp"
  },
  {
    "line": 44,
    "text": "        df = data_reader.data_df",
    "annotation": "\ud83e\udde0 ML Signal: Assertion pattern for checking data presence in index",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      796,
      1366,
      62,
      46862,
      13,
      7890,
      62,
      7568
    ],
    "start_token": 177,
    "end_token": 193,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      3912,
      329,
      10627,
      1366,
      4931,
      287,
      6376
    ],
    "label": "ml_signal",
    "reason": "Assertion pattern for checking data presence in index"
  },
  {
    "line": 46,
    "text": "        assert (\"stock_sz_002572\", timestamp) in df.index",
    "annotation": "\ud83e\udde0 ML Signal: Assertion pattern for checking data presence in index",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6818,
      5855,
      13578,
      62,
      82,
      89,
      62,
      405,
      1495,
      4761,
      1600,
      41033,
      8,
      287,
      47764,
      13,
      9630
    ],
    "start_token": 193,
    "end_token": 217,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      3912,
      329,
      10627,
      1366,
      4931,
      287,
      6376
    ],
    "label": "ml_signal",
    "reason": "Assertion pattern for checking data presence in index"
  },
  {
    "line": 47,
    "text": "        assert (\"stock_sz_000338\", to_time_str(timestamp)) in df.index",
    "annotation": "\u2705 Best Practice: Measuring execution time for performance testing",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6818,
      5855,
      13578,
      62,
      82,
      89,
      62,
      830,
      28460,
      1600,
      284,
      62,
      2435,
      62,
      2536,
      7,
      16514,
      27823,
      4008,
      287,
      47764,
      13,
      9630
    ],
    "start_token": 217,
    "end_token": 247,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      2185,
      45925,
      9706,
      640,
      329,
      2854,
      4856
    ],
    "label": "best_practice",
    "reason": "Measuring execution time for performance testing"
  },
  {
    "line": 47,
    "text": "        assert (\"stock_sz_000338\", to_time_str(timestamp)) in df.index",
    "annotation": "\ud83e\udde0 ML Signal: Usage of move_on method with timeout parameter",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6818,
      5855,
      13578,
      62,
      82,
      89,
      62,
      830,
      28460,
      1600,
      284,
      62,
      2435,
      62,
      2536,
      7,
      16514,
      27823,
      4008,
      287,
      47764,
      13,
      9630
    ],
    "start_token": 247,
    "end_token": 277,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      1445,
      62,
      261,
      2446,
      351,
      26827,
      11507
    ],
    "label": "ml_signal",
    "reason": "Usage of move_on method with timeout parameter"
  },
  {
    "line": 47,
    "text": "        assert (\"stock_sz_000338\", to_time_str(timestamp)) in df.index",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential time-based assertion that could be unreliable",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6818,
      5855,
      13578,
      62,
      82,
      89,
      62,
      830,
      28460,
      1600,
      284,
      62,
      2435,
      62,
      2536,
      7,
      16514,
      27823,
      4008,
      287,
      47764,
      13,
      9630
    ],
    "start_token": 277,
    "end_token": 307,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      640,
      12,
      3106,
      19190,
      326,
      714,
      307,
      29954
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential time-based assertion that could be unreliable"
  }
]