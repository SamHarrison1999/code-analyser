annotation,annotation_tokens,confidence,end_token,label,line,reason,start_token,text,tokens
ðŸ§  ML Signal: Importing specific functions or classes indicates usage patterns and dependencies,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 5499, 393, 6097, 9217, 8748, 7572, 290, 20086]",0.5,16,ml_signal,3,Importing specific functions or classes indicates usage patterns and dependencies,0,from zvt.utils.time_utils import to_pd_timestamp,"[6738, 1976, 36540, 13, 26791, 13, 2435, 62, 26791, 1330, 284, 62, 30094, 62, 16514, 27823]"
ðŸ§  ML Signal: Iterating over a method to collect data into a list,"[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 257, 2446, 284, 2824, 1366, 656, 257, 1351]",1.0,16,ml_signal,5,Iterating over a method to collect data into a list,16,,[]
ðŸ§  ML Signal: Checking for specific timestamps in a list,"[8582, 100, 254, 10373, 26484, 25, 39432, 329, 2176, 4628, 395, 9430, 287, 257, 1351]",1.0,20,ml_signal,10,Checking for specific timestamps in a list,16,    ):,"[220, 220, 220, 15179]"
ðŸ§  ML Signal: Checking for specific timestamps in a list,"[8582, 100, 254, 10373, 26484, 25, 39432, 329, 2176, 4628, 395, 9430, 287, 257, 1351]",1.0,20,ml_signal,12,Checking for specific timestamps in a list,20,,[]
ðŸ§  ML Signal: Checking for specific timestamps in a list,"[8582, 100, 254, 10373, 26484, 25, 39432, 329, 2176, 4628, 395, 9430, 287, 257, 1351]",1.0,46,ml_signal,14,Checking for specific timestamps in a list,20,"    assert to_pd_timestamp(""2020-06-17 11:30:00"") in timestamps","[220, 220, 220, 6818, 284, 62, 30094, 62, 16514, 27823, 7203, 42334, 12, 3312, 12, 1558, 1367, 25, 1270, 25, 405, 4943, 287, 4628, 395, 9430]"
ðŸ§  ML Signal: Checking for specific timestamps in a list,"[8582, 100, 254, 10373, 26484, 25, 39432, 329, 2176, 4628, 395, 9430, 287, 257, 1351]",1.0,72,ml_signal,16,Checking for specific timestamps in a list,46,"    assert to_pd_timestamp(""2020-06-17 15:00:00"") in timestamps","[220, 220, 220, 6818, 284, 62, 30094, 62, 16514, 27823, 7203, 42334, 12, 3312, 12, 1558, 1315, 25, 405, 25, 405, 4943, 287, 4628, 395, 9430]"
ðŸ§  ML Signal: Checking for specific timestamps in a list,"[8582, 100, 254, 10373, 26484, 25, 39432, 329, 2176, 4628, 395, 9430, 287, 257, 1351]",1.0,98,ml_signal,18,Checking for specific timestamps in a list,72,"    assert to_pd_timestamp(""2020-06-17 09:31:00"") in timestamps","[220, 220, 220, 6818, 284, 62, 30094, 62, 16514, 27823, 7203, 42334, 12, 3312, 12, 1558, 7769, 25, 3132, 25, 405, 4943, 287, 4628, 395, 9430]"
ðŸ§  ML Signal: Checking for specific timestamps in a list,"[8582, 100, 254, 10373, 26484, 25, 39432, 329, 2176, 4628, 395, 9430, 287, 257, 1351]",1.0,124,ml_signal,19,Checking for specific timestamps in a list,98,"    assert to_pd_timestamp(""2020-06-17 11:30:00"") in timestamps","[220, 220, 220, 6818, 284, 62, 30094, 62, 16514, 27823, 7203, 42334, 12, 3312, 12, 1558, 1367, 25, 1270, 25, 405, 4943, 287, 4628, 395, 9430]"
ðŸ§  ML Signal: Checking for specific timestamps in a list,"[8582, 100, 254, 10373, 26484, 25, 39432, 329, 2176, 4628, 395, 9430, 287, 257, 1351]",1.0,124,ml_signal,22,Checking for specific timestamps in a list,124,,[]
ðŸ§  ML Signal: Checking for specific timestamps in a list,"[8582, 100, 254, 10373, 26484, 25, 39432, 329, 2176, 4628, 395, 9430, 287, 257, 1351]",1.0,136,ml_signal,24,Checking for specific timestamps in a list,124,def test_get_1h_timestamps():,"[4299, 1332, 62, 1136, 62, 16, 71, 62, 16514, 395, 9430, 33529]"
ðŸ§  ML Signal: Iterating over a method to collect timestamps,"[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 257, 2446, 284, 2824, 4628, 395, 9430]",1.0,162,ml_signal,19,Iterating over a method to collect timestamps,136,"    assert to_pd_timestamp(""2020-06-17 11:30:00"") in timestamps","[220, 220, 220, 6818, 284, 62, 30094, 62, 16514, 27823, 7203, 42334, 12, 3312, 12, 1558, 1367, 25, 1270, 25, 405, 4943, 287, 4628, 395, 9430]"
ðŸ§  ML Signal: Appending elements to a list,"[8582, 100, 254, 10373, 26484, 25, 2034, 1571, 4847, 284, 257, 1351]",0.5,162,ml_signal,23,Appending elements to a list,162,,[]
ðŸ§  ML Signal: Checking for specific timestamps in a list,"[8582, 100, 254, 10373, 26484, 25, 39432, 329, 2176, 4628, 395, 9430, 287, 257, 1351]",1.0,170,ml_signal,25,Checking for specific timestamps in a list,162,    timestamps = [],"[220, 220, 220, 4628, 395, 9430, 796, 17635]"
ðŸ§  ML Signal: Checking for specific timestamps in a list,"[8582, 100, 254, 10373, 26484, 25, 39432, 329, 2176, 4628, 395, 9430, 287, 257, 1351]",1.0,209,ml_signal,27,Checking for specific timestamps in a list,170,"        start_date=""2020-06-17"", end_date=""2020-06-18"", level=IntervalLevel.LEVEL_1HOUR","[220, 220, 220, 220, 220, 220, 220, 923, 62, 4475, 2625, 42334, 12, 3312, 12, 1558, 1600, 886, 62, 4475, 2625, 42334, 12, 3312, 12, 1507, 1600, 1241, 28, 9492, 2100, 4971, 13, 2538, 18697, 62, 16, 39, 11698]"
ðŸ§  ML Signal: Checking for specific timestamps in a list,"[8582, 100, 254, 10373, 26484, 25, 39432, 329, 2176, 4628, 395, 9430, 287, 257, 1351]",1.0,225,ml_signal,29,Checking for specific timestamps in a list,209,        timestamps.append(timestamp),"[220, 220, 220, 220, 220, 220, 220, 4628, 395, 9430, 13, 33295, 7, 16514, 27823, 8]"
ðŸ§  ML Signal: Checking for specific timestamps in a list,"[8582, 100, 254, 10373, 26484, 25, 39432, 329, 2176, 4628, 395, 9430, 287, 257, 1351]",1.0,251,ml_signal,31,Checking for specific timestamps in a list,225,"    assert to_pd_timestamp(""2020-06-17 10:30:00"") in timestamps","[220, 220, 220, 6818, 284, 62, 30094, 62, 16514, 27823, 7203, 42334, 12, 3312, 12, 1558, 838, 25, 1270, 25, 405, 4943, 287, 4628, 395, 9430]"
ðŸ§  ML Signal: Checking for specific timestamps in a list,"[8582, 100, 254, 10373, 26484, 25, 39432, 329, 2176, 4628, 395, 9430, 287, 257, 1351]",1.0,277,ml_signal,33,Checking for specific timestamps in a list,251,"    assert to_pd_timestamp(""2020-06-17 14:00:00"") in timestamps","[220, 220, 220, 6818, 284, 62, 30094, 62, 16514, 27823, 7203, 42334, 12, 3312, 12, 1558, 1478, 25, 405, 25, 405, 4943, 287, 4628, 395, 9430]"
ðŸ§  ML Signal: Checking for specific timestamps in a list,"[8582, 100, 254, 10373, 26484, 25, 39432, 329, 2176, 4628, 395, 9430, 287, 257, 1351]",1.0,277,ml_signal,35,Checking for specific timestamps in a list,277,,[]
ðŸ§  ML Signal: Checking for specific timestamps in a list,"[8582, 100, 254, 10373, 26484, 25, 39432, 329, 2176, 4628, 395, 9430, 287, 257, 1351]",1.0,303,ml_signal,37,Checking for specific timestamps in a list,277,"    assert to_pd_timestamp(""2020-06-17 11:30:00"") in timestamps","[220, 220, 220, 6818, 284, 62, 30094, 62, 16514, 27823, 7203, 42334, 12, 3312, 12, 1558, 1367, 25, 1270, 25, 405, 4943, 287, 4628, 395, 9430]"
ðŸ§  ML Signal: Checking for specific timestamps in a list,"[8582, 100, 254, 10373, 26484, 25, 39432, 329, 2176, 4628, 395, 9430, 287, 257, 1351]",1.0,329,ml_signal,39,Checking for specific timestamps in a list,303,"    assert to_pd_timestamp(""2020-06-18 15:00:00"") in timestamps","[220, 220, 220, 6818, 284, 62, 30094, 62, 16514, 27823, 7203, 42334, 12, 3312, 12, 1507, 1315, 25, 405, 25, 405, 4943, 287, 4628, 395, 9430]"
ðŸ§  ML Signal: Use of assert statements for testing expected outcomes,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 6299, 329, 4856, 2938, 10906]",1.0,355,ml_signal,31,Use of assert statements for testing expected outcomes,329,"    assert to_pd_timestamp(""2020-06-17 10:30:00"") in timestamps","[220, 220, 220, 6818, 284, 62, 30094, 62, 16514, 27823, 7203, 42334, 12, 3312, 12, 1558, 838, 25, 1270, 25, 405, 4943, 287, 4628, 395, 9430]"
âœ… Best Practice: Use of descriptive test function name for clarity,"[26486, 227, 6705, 19939, 25, 5765, 286, 35644, 1332, 2163, 1438, 329, 16287]",1.0,381,best_practice,32,Use of descriptive test function name for clarity,355,"    assert to_pd_timestamp(""2020-06-17 11:30:00"") in timestamps","[220, 220, 220, 6818, 284, 62, 30094, 62, 16514, 27823, 7203, 42334, 12, 3312, 12, 1558, 1367, 25, 1270, 25, 405, 4943, 287, 4628, 395, 9430]"
ðŸ§  ML Signal: Testing function with specific timestamp and interval level,"[8582, 100, 254, 10373, 26484, 25, 23983, 2163, 351, 2176, 41033, 290, 16654, 1241]",1.0,407,ml_signal,34,Testing function with specific timestamp and interval level,381,"    assert to_pd_timestamp(""2020-06-17 15:00:00"") in timestamps","[220, 220, 220, 6818, 284, 62, 30094, 62, 16514, 27823, 7203, 42334, 12, 3312, 12, 1558, 1315, 25, 405, 25, 405, 4943, 287, 4628, 395, 9430]"
âœ… Best Practice: Use of assert to validate expected behavior,"[26486, 227, 6705, 19939, 25, 5765, 286, 6818, 284, 26571, 2938, 4069]",1.0,407,best_practice,35,Use of assert to validate expected behavior,407,,[]
ðŸ§  ML Signal: Testing function with specific timestamp and interval level,"[8582, 100, 254, 10373, 26484, 25, 23983, 2163, 351, 2176, 41033, 290, 16654, 1241]",1.0,433,ml_signal,37,Testing function with specific timestamp and interval level,407,"    assert to_pd_timestamp(""2020-06-17 11:30:00"") in timestamps","[220, 220, 220, 6818, 284, 62, 30094, 62, 16514, 27823, 7203, 42334, 12, 3312, 12, 1558, 1367, 25, 1270, 25, 405, 4943, 287, 4628, 395, 9430]"
âœ… Best Practice: Use of assert to validate expected behavior,"[26486, 227, 6705, 19939, 25, 5765, 286, 6818, 284, 26571, 2938, 4069]",1.0,459,best_practice,38,Use of assert to validate expected behavior,433,"    assert to_pd_timestamp(""2020-06-17 14:00:00"") in timestamps","[220, 220, 220, 6818, 284, 62, 30094, 62, 16514, 27823, 7203, 42334, 12, 3312, 12, 1558, 1478, 25, 405, 25, 405, 4943, 287, 4628, 395, 9430]"
ðŸ§  ML Signal: Testing function with specific timestamp and interval level,"[8582, 100, 254, 10373, 26484, 25, 23983, 2163, 351, 2176, 41033, 290, 16654, 1241]",1.0,459,ml_signal,40,Testing function with specific timestamp and interval level,459,,[]
âœ… Best Practice: Use of assert to validate expected behavior,"[26486, 227, 6705, 19939, 25, 5765, 286, 6818, 284, 26571, 2938, 4069]",1.0,459,best_practice,41,Use of assert to validate expected behavior,459,,[]
ðŸ§  ML Signal: Testing function with specific timestamp and interval level,"[8582, 100, 254, 10373, 26484, 25, 23983, 2163, 351, 2176, 41033, 290, 16654, 1241]",1.0,472,ml_signal,42,Testing function with specific timestamp and interval level,459,def test_is_finished_kdata_timestamp():,"[4299, 1332, 62, 271, 62, 43952, 62, 74, 7890, 62, 16514, 27823, 33529]"
âœ… Best Practice: Use of assert to validate expected behavior,"[26486, 227, 6705, 19939, 25, 5765, 286, 6818, 284, 26571, 2938, 4069]",1.0,472,best_practice,45,Use of assert to validate expected behavior,472,,[]
ðŸ§  ML Signal: Testing function with specific timestamp and interval level,"[8582, 100, 254, 10373, 26484, 25, 23983, 2163, 351, 2176, 41033, 290, 16654, 1241]",1.0,508,ml_signal,46,Testing function with specific timestamp and interval level,472,"    assert TradableEntity.is_finished_kdata_timestamp(""2020-06-17 11:30"", IntervalLevel.LEVEL_30MIN)","[220, 220, 220, 6818, 11974, 32398, 13, 271, 62, 43952, 62, 74, 7890, 62, 16514, 27823, 7203, 42334, 12, 3312, 12, 1558, 1367, 25, 1270, 1600, 4225, 2100, 4971, 13, 2538, 18697, 62, 1270, 23678, 8]"
âœ… Best Practice: Use of assert to validate expected behavior,"[26486, 227, 6705, 19939, 25, 5765, 286, 6818, 284, 26571, 2938, 4069]",1.0,545,best_practice,47,Use of assert to validate expected behavior,508,"    assert not TradableEntity.is_finished_kdata_timestamp(""2020-06-17 11:30"", IntervalLevel.LEVEL_1DAY)","[220, 220, 220, 6818, 407, 11974, 32398, 13, 271, 62, 43952, 62, 74, 7890, 62, 16514, 27823, 7203, 42334, 12, 3312, 12, 1558, 1367, 25, 1270, 1600, 4225, 2100, 4971, 13, 2538, 18697, 62, 16, 26442, 8]"
ðŸ§  ML Signal: Testing function with specific timestamp and interval level,"[8582, 100, 254, 10373, 26484, 25, 23983, 2163, 351, 2176, 41033, 290, 16654, 1241]",1.0,582,ml_signal,47,Testing function with specific timestamp and interval level,545,"    assert not TradableEntity.is_finished_kdata_timestamp(""2020-06-17 11:30"", IntervalLevel.LEVEL_1DAY)","[220, 220, 220, 6818, 407, 11974, 32398, 13, 271, 62, 43952, 62, 74, 7890, 62, 16514, 27823, 7203, 42334, 12, 3312, 12, 1558, 1367, 25, 1270, 1600, 4225, 2100, 4971, 13, 2538, 18697, 62, 16, 26442, 8]"
âœ… Best Practice: Use of assert to validate expected behavior,"[26486, 227, 6705, 19939, 25, 5765, 286, 6818, 284, 26571, 2938, 4069]",1.0,619,best_practice,47,Use of assert to validate expected behavior,582,"    assert not TradableEntity.is_finished_kdata_timestamp(""2020-06-17 11:30"", IntervalLevel.LEVEL_1DAY)","[220, 220, 220, 6818, 407, 11974, 32398, 13, 271, 62, 43952, 62, 74, 7890, 62, 16514, 27823, 7203, 42334, 12, 3312, 12, 1558, 1367, 25, 1270, 1600, 4225, 2100, 4971, 13, 2538, 18697, 62, 16, 26442, 8]"
ðŸ§  ML Signal: Use of assert statements for testing indicates a pattern for test case validation,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 6299, 329, 4856, 9217, 257, 3912, 329, 1332, 1339, 21201]",1.0,645,ml_signal,39,Use of assert statements for testing indicates a pattern for test case validation,619,"    assert to_pd_timestamp(""2020-06-18 15:00:00"") in timestamps","[220, 220, 220, 6818, 284, 62, 30094, 62, 16514, 27823, 7203, 42334, 12, 3312, 12, 1507, 1315, 25, 405, 25, 405, 4943, 287, 4628, 395, 9430]"
ðŸ§  ML Signal: Use of assert statements for testing indicates a pattern for test case validation,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 6299, 329, 4856, 9217, 257, 3912, 329, 1332, 1339, 21201]",1.0,645,ml_signal,41,Use of assert statements for testing indicates a pattern for test case validation,645,,[]
âœ… Best Practice: Initialize lists directly where they are used to improve readability,"[26486, 227, 6705, 19939, 25, 20768, 1096, 8341, 3264, 810, 484, 389, 973, 284, 2987, 1100, 1799]",0.5,658,best_practice,42,Initialize lists directly where they are used to improve readability,645,def test_is_finished_kdata_timestamp():,"[4299, 1332, 62, 271, 62, 43952, 62, 74, 7890, 62, 16514, 27823, 33529]"
ðŸ§  ML Signal: Iterating over a method call suggests a pattern of processing or transforming data,"[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 257, 2446, 869, 5644, 257, 3912, 286, 7587, 393, 25449, 1366]",1.0,658,ml_signal,45,Iterating over a method call suggests a pattern of processing or transforming data,658,,[]
âœ… Best Practice: Use list comprehensions for more concise and readable code,"[26486, 227, 6705, 19939, 25, 5765, 1351, 8569, 507, 329, 517, 35327, 290, 31744, 2438]",1.0,695,best_practice,47,Use list comprehensions for more concise and readable code,658,"    assert not TradableEntity.is_finished_kdata_timestamp(""2020-06-17 11:30"", IntervalLevel.LEVEL_1DAY)","[220, 220, 220, 6818, 407, 11974, 32398, 13, 271, 62, 43952, 62, 74, 7890, 62, 16514, 27823, 7203, 42334, 12, 3312, 12, 1558, 1367, 25, 1270, 1600, 4225, 2100, 4971, 13, 2538, 18697, 62, 16, 26442, 8]"
ðŸ§  ML Signal: Use of assert statements for testing indicates a pattern for test case validation,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 6299, 329, 4856, 9217, 257, 3912, 329, 1332, 1339, 21201]",1.0,732,ml_signal,47,Use of assert statements for testing indicates a pattern for test case validation,695,"    assert not TradableEntity.is_finished_kdata_timestamp(""2020-06-17 11:30"", IntervalLevel.LEVEL_1DAY)","[220, 220, 220, 6818, 407, 11974, 32398, 13, 271, 62, 43952, 62, 74, 7890, 62, 16514, 27823, 7203, 42334, 12, 3312, 12, 1558, 1367, 25, 1270, 1600, 4225, 2100, 4971, 13, 2538, 18697, 62, 16, 26442, 8]"
ðŸ§  ML Signal: Use of assert statements for testing indicates a pattern for test case validation,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 6818, 6299, 329, 4856, 9217, 257, 3912, 329, 1332, 1339, 21201]",1.0,769,ml_signal,47,Use of assert statements for testing indicates a pattern for test case validation,732,"    assert not TradableEntity.is_finished_kdata_timestamp(""2020-06-17 11:30"", IntervalLevel.LEVEL_1DAY)","[220, 220, 220, 6818, 407, 11974, 32398, 13, 271, 62, 43952, 62, 74, 7890, 62, 16514, 27823, 7203, 42334, 12, 3312, 12, 1558, 1367, 25, 1270, 1600, 4225, 2100, 4971, 13, 2538, 18697, 62, 16, 26442, 8]"
