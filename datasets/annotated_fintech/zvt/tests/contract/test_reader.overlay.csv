annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Grouping standard library imports together at the top improves readability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 3210, 5888, 17944, 1978, 379, 262, 1353, 19575, 1100, 1799, 13]",0.5,0,best_practice,3,Grouping standard library imports together at the top improves readability.,,0,,[]
‚úÖ Best Practice: Grouping third-party library imports together improves readability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 2368, 12, 10608, 5888, 17944, 1978, 19575, 1100, 1799, 13]",0.5,0,best_practice,5,Grouping third-party library imports together improves readability.,,0,,[]
üß† ML Signal: Usage of a specific data provider and schema for stock data,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2176, 1366, 10131, 290, 32815, 329, 4283, 1366]",1.0,0,ml_signal,9,Usage of a specific data provider and schema for stock data,,0,,[]
üß† ML Signal: Conversion of index levels to a list,"[8582, 100, 254, 10373, 26484, 25, 44101, 286, 6376, 2974, 284, 257, 1351]",1.0,18,ml_signal,19,Conversion of index levels to a list,,0,"        data_schema=Stock1dKdata,","[220, 220, 220, 220, 220, 220, 220, 1366, 62, 15952, 2611, 28, 26207, 16, 67, 42, 7890, 11]"
‚ö†Ô∏è SAST Risk (Low): Hardcoded stock codes may lead to maintenance issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 4283, 12416, 743, 1085, 284, 9262, 2428]",1.0,36,sast_risk,22,Hardcoded stock codes may lead to maintenance issues,Low,18,"        codes=[""002572"", ""000338""],","[220, 220, 220, 220, 220, 220, 220, 12416, 28, 14692, 405, 1495, 4761, 1600, 366, 830, 28460, 33116]"
‚ö†Ô∏è SAST Risk (Low): Hardcoded stock codes may lead to maintenance issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 4283, 12416, 743, 1085, 284, 9262, 2428]",1.0,54,sast_risk,24,Hardcoded stock codes may lead to maintenance issues,Low,36,"        end_timestamp=""2019-06-10"",","[220, 220, 220, 220, 220, 220, 220, 886, 62, 16514, 27823, 2625, 23344, 12, 3312, 12, 940, 1600]"
‚ö†Ô∏è SAST Risk (Low): Hardcoded date values may lead to maintenance issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 3128, 3815, 743, 1085, 284, 9262, 2428]",1.0,54,sast_risk,26,Hardcoded date values may lead to maintenance issues,Low,54,,[]
‚ö†Ô∏è SAST Risk (Low): Hardcoded date values may lead to maintenance issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 3128, 3815, 743, 1085, 284, 9262, 2428]",1.0,66,sast_risk,29,Hardcoded date values may lead to maintenance issues,Low,54,    df = data_reader.data_df,"[220, 220, 220, 47764, 796, 1366, 62, 46862, 13, 7890, 62, 7568]"
‚ö†Ô∏è SAST Risk (Low): Hardcoded date values may lead to maintenance issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 3128, 3815, 743, 1085, 284, 9262, 2428]",1.0,66,sast_risk,30,Hardcoded date values may lead to maintenance issues,Low,66,,[]
‚ö†Ô∏è SAST Risk (Low): Hardcoded date values may lead to maintenance issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 3128, 3815, 743, 1085, 284, 9262, 2428]",1.0,81,sast_risk,32,Hardcoded date values may lead to maintenance issues,Low,66,"    assert ""stock_sz_000338"" in categories","[220, 220, 220, 6818, 366, 13578, 62, 82, 89, 62, 830, 28460, 1, 287, 9376]"
üß† ML Signal: Iterating over a range of timestamps,"[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 257, 2837, 286, 4628, 395, 9430]",1.0,106,ml_signal,34,Iterating over a range of timestamps,,81,"    assert (""stock_sz_002572"", ""2019-01-02"") in df.index","[220, 220, 220, 6818, 5855, 13578, 62, 82, 89, 62, 405, 1495, 4761, 1600, 366, 23344, 12, 486, 12, 2999, 4943, 287, 47764, 13, 9630]"
üß† ML Signal: Moving data reader to a specific timestamp,"[8582, 100, 254, 10373, 26484, 25, 26768, 1366, 9173, 284, 257, 2176, 41033]",1.0,131,ml_signal,34,Moving data reader to a specific timestamp,,106,"    assert (""stock_sz_002572"", ""2019-01-02"") in df.index","[220, 220, 220, 6818, 5855, 13578, 62, 82, 89, 62, 405, 1495, 4761, 1600, 366, 23344, 12, 486, 12, 2999, 4943, 287, 47764, 13, 9630]"
‚ö†Ô∏è SAST Risk (Low): Hardcoded stock codes may lead to maintenance issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 4283, 12416, 743, 1085, 284, 9262, 2428]",1.0,154,sast_risk,42,Hardcoded stock codes may lead to maintenance issues,Low,131,        data_reader.move_on(to_timestamp=timestamp),"[220, 220, 220, 220, 220, 220, 220, 1366, 62, 46862, 13, 21084, 62, 261, 7, 1462, 62, 16514, 27823, 28, 16514, 27823, 8]"
‚ö†Ô∏è SAST Risk (Low): Hardcoded stock codes may lead to maintenance issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 4283, 12416, 743, 1085, 284, 9262, 2428]",1.0,154,sast_risk,43,Hardcoded stock codes may lead to maintenance issues,Low,154,,[]
üß† ML Signal: Usage of move_on method with specific timestamp,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 1445, 62, 261, 2446, 351, 2176, 41033]",0.5,177,ml_signal,42,Usage of move_on method with specific timestamp,,154,        data_reader.move_on(to_timestamp=timestamp),"[220, 220, 220, 220, 220, 220, 220, 1366, 62, 46862, 13, 21084, 62, 261, 7, 1462, 62, 16514, 27823, 28, 16514, 27823, 8]"
üß† ML Signal: Assertion pattern for checking data presence in index,"[8582, 100, 254, 10373, 26484, 25, 2195, 861, 295, 3912, 329, 10627, 1366, 4931, 287, 6376]",1.0,193,ml_signal,44,Assertion pattern for checking data presence in index,,177,        df = data_reader.data_df,"[220, 220, 220, 220, 220, 220, 220, 47764, 796, 1366, 62, 46862, 13, 7890, 62, 7568]"
üß† ML Signal: Assertion pattern for checking data presence in index,"[8582, 100, 254, 10373, 26484, 25, 2195, 861, 295, 3912, 329, 10627, 1366, 4931, 287, 6376]",1.0,217,ml_signal,46,Assertion pattern for checking data presence in index,,193,"        assert (""stock_sz_002572"", timestamp) in df.index","[220, 220, 220, 220, 220, 220, 220, 6818, 5855, 13578, 62, 82, 89, 62, 405, 1495, 4761, 1600, 41033, 8, 287, 47764, 13, 9630]"
‚úÖ Best Practice: Measuring execution time for performance testing,"[26486, 227, 6705, 19939, 25, 2185, 45925, 9706, 640, 329, 2854, 4856]",0.5,247,best_practice,47,Measuring execution time for performance testing,,217,"        assert (""stock_sz_000338"", to_time_str(timestamp)) in df.index","[220, 220, 220, 220, 220, 220, 220, 6818, 5855, 13578, 62, 82, 89, 62, 830, 28460, 1600, 284, 62, 2435, 62, 2536, 7, 16514, 27823, 4008, 287, 47764, 13, 9630]"
üß† ML Signal: Usage of move_on method with timeout parameter,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 1445, 62, 261, 2446, 351, 26827, 11507]",0.5,277,ml_signal,47,Usage of move_on method with timeout parameter,,247,"        assert (""stock_sz_000338"", to_time_str(timestamp)) in df.index","[220, 220, 220, 220, 220, 220, 220, 6818, 5855, 13578, 62, 82, 89, 62, 830, 28460, 1600, 284, 62, 2435, 62, 2536, 7, 16514, 27823, 4008, 287, 47764, 13, 9630]"
‚ö†Ô∏è SAST Risk (Low): Potential time-based assertion that could be unreliable,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 640, 12, 3106, 19190, 326, 714, 307, 29954]",0.5,307,sast_risk,47,Potential time-based assertion that could be unreliable,Low,277,"        assert (""stock_sz_000338"", to_time_str(timestamp)) in df.index","[220, 220, 220, 220, 220, 220, 220, 6818, 5855, 13578, 62, 82, 89, 62, 830, 28460, 1600, 284, 62, 2435, 62, 2536, 7, 16514, 27823, 4008, 287, 47764, 13, 9630]"
