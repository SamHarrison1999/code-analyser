[
  {
    "line": 3,
    "text": "from zvt.utils.time_utils import to_pd_timestamp",
    "annotation": "\ud83e\udde0 ML Signal: Importing specific functions or classes indicates usage patterns and dependencies",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      2435,
      62,
      26791,
      1330,
      284,
      62,
      30094,
      62,
      16514,
      27823
    ],
    "start_token": 0,
    "end_token": 16,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      2176,
      5499,
      393,
      6097,
      9217,
      8748,
      7572,
      290,
      20086
    ],
    "label": "ml_signal",
    "reason": "Importing specific functions or classes indicates usage patterns and dependencies"
  },
  {
    "line": 5,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over a method to collect data into a list",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 16,
    "end_token": 16,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      257,
      2446,
      284,
      2824,
      1366,
      656,
      257,
      1351
    ],
    "label": "ml_signal",
    "reason": "Iterating over a method to collect data into a list"
  },
  {
    "line": 10,
    "text": "    ):",
    "annotation": "\ud83e\udde0 ML Signal: Checking for specific timestamps in a list",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      15179
    ],
    "start_token": 16,
    "end_token": 20,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      2176,
      4628,
      395,
      9430,
      287,
      257,
      1351
    ],
    "label": "ml_signal",
    "reason": "Checking for specific timestamps in a list"
  },
  {
    "line": 12,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Checking for specific timestamps in a list",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 20,
    "end_token": 20,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      2176,
      4628,
      395,
      9430,
      287,
      257,
      1351
    ],
    "label": "ml_signal",
    "reason": "Checking for specific timestamps in a list"
  },
  {
    "line": 14,
    "text": "    assert to_pd_timestamp(\"2020-06-17 11:30:00\") in timestamps",
    "annotation": "\ud83e\udde0 ML Signal: Checking for specific timestamps in a list",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      284,
      62,
      30094,
      62,
      16514,
      27823,
      7203,
      42334,
      12,
      3312,
      12,
      1558,
      1367,
      25,
      1270,
      25,
      405,
      4943,
      287,
      4628,
      395,
      9430
    ],
    "start_token": 20,
    "end_token": 46,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      2176,
      4628,
      395,
      9430,
      287,
      257,
      1351
    ],
    "label": "ml_signal",
    "reason": "Checking for specific timestamps in a list"
  },
  {
    "line": 16,
    "text": "    assert to_pd_timestamp(\"2020-06-17 15:00:00\") in timestamps",
    "annotation": "\ud83e\udde0 ML Signal: Checking for specific timestamps in a list",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      284,
      62,
      30094,
      62,
      16514,
      27823,
      7203,
      42334,
      12,
      3312,
      12,
      1558,
      1315,
      25,
      405,
      25,
      405,
      4943,
      287,
      4628,
      395,
      9430
    ],
    "start_token": 46,
    "end_token": 72,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      2176,
      4628,
      395,
      9430,
      287,
      257,
      1351
    ],
    "label": "ml_signal",
    "reason": "Checking for specific timestamps in a list"
  },
  {
    "line": 18,
    "text": "    assert to_pd_timestamp(\"2020-06-17 09:31:00\") in timestamps",
    "annotation": "\ud83e\udde0 ML Signal: Checking for specific timestamps in a list",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      284,
      62,
      30094,
      62,
      16514,
      27823,
      7203,
      42334,
      12,
      3312,
      12,
      1558,
      7769,
      25,
      3132,
      25,
      405,
      4943,
      287,
      4628,
      395,
      9430
    ],
    "start_token": 72,
    "end_token": 98,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      2176,
      4628,
      395,
      9430,
      287,
      257,
      1351
    ],
    "label": "ml_signal",
    "reason": "Checking for specific timestamps in a list"
  },
  {
    "line": 19,
    "text": "    assert to_pd_timestamp(\"2020-06-17 11:30:00\") in timestamps",
    "annotation": "\ud83e\udde0 ML Signal: Checking for specific timestamps in a list",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      284,
      62,
      30094,
      62,
      16514,
      27823,
      7203,
      42334,
      12,
      3312,
      12,
      1558,
      1367,
      25,
      1270,
      25,
      405,
      4943,
      287,
      4628,
      395,
      9430
    ],
    "start_token": 98,
    "end_token": 124,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      2176,
      4628,
      395,
      9430,
      287,
      257,
      1351
    ],
    "label": "ml_signal",
    "reason": "Checking for specific timestamps in a list"
  },
  {
    "line": 22,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Checking for specific timestamps in a list",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 124,
    "end_token": 124,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      2176,
      4628,
      395,
      9430,
      287,
      257,
      1351
    ],
    "label": "ml_signal",
    "reason": "Checking for specific timestamps in a list"
  },
  {
    "line": 24,
    "text": "def test_get_1h_timestamps():",
    "annotation": "\ud83e\udde0 ML Signal: Checking for specific timestamps in a list",
    "confidence": 1.0,
    "tokens": [
      4299,
      1332,
      62,
      1136,
      62,
      16,
      71,
      62,
      16514,
      395,
      9430,
      33529
    ],
    "start_token": 124,
    "end_token": 136,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      2176,
      4628,
      395,
      9430,
      287,
      257,
      1351
    ],
    "label": "ml_signal",
    "reason": "Checking for specific timestamps in a list"
  },
  {
    "line": 19,
    "text": "    assert to_pd_timestamp(\"2020-06-17 11:30:00\") in timestamps",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over a method to collect timestamps",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      284,
      62,
      30094,
      62,
      16514,
      27823,
      7203,
      42334,
      12,
      3312,
      12,
      1558,
      1367,
      25,
      1270,
      25,
      405,
      4943,
      287,
      4628,
      395,
      9430
    ],
    "start_token": 136,
    "end_token": 162,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      257,
      2446,
      284,
      2824,
      4628,
      395,
      9430
    ],
    "label": "ml_signal",
    "reason": "Iterating over a method to collect timestamps"
  },
  {
    "line": 23,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Appending elements to a list",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 162,
    "end_token": 162,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2034,
      1571,
      4847,
      284,
      257,
      1351
    ],
    "label": "ml_signal",
    "reason": "Appending elements to a list"
  },
  {
    "line": 25,
    "text": "    timestamps = []",
    "annotation": "\ud83e\udde0 ML Signal: Checking for specific timestamps in a list",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      4628,
      395,
      9430,
      796,
      17635
    ],
    "start_token": 162,
    "end_token": 170,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      2176,
      4628,
      395,
      9430,
      287,
      257,
      1351
    ],
    "label": "ml_signal",
    "reason": "Checking for specific timestamps in a list"
  },
  {
    "line": 27,
    "text": "        start_date=\"2020-06-17\", end_date=\"2020-06-18\", level=IntervalLevel.LEVEL_1HOUR",
    "annotation": "\ud83e\udde0 ML Signal: Checking for specific timestamps in a list",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      923,
      62,
      4475,
      2625,
      42334,
      12,
      3312,
      12,
      1558,
      1600,
      886,
      62,
      4475,
      2625,
      42334,
      12,
      3312,
      12,
      1507,
      1600,
      1241,
      28,
      9492,
      2100,
      4971,
      13,
      2538,
      18697,
      62,
      16,
      39,
      11698
    ],
    "start_token": 170,
    "end_token": 209,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      2176,
      4628,
      395,
      9430,
      287,
      257,
      1351
    ],
    "label": "ml_signal",
    "reason": "Checking for specific timestamps in a list"
  },
  {
    "line": 29,
    "text": "        timestamps.append(timestamp)",
    "annotation": "\ud83e\udde0 ML Signal: Checking for specific timestamps in a list",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4628,
      395,
      9430,
      13,
      33295,
      7,
      16514,
      27823,
      8
    ],
    "start_token": 209,
    "end_token": 225,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      2176,
      4628,
      395,
      9430,
      287,
      257,
      1351
    ],
    "label": "ml_signal",
    "reason": "Checking for specific timestamps in a list"
  },
  {
    "line": 31,
    "text": "    assert to_pd_timestamp(\"2020-06-17 10:30:00\") in timestamps",
    "annotation": "\ud83e\udde0 ML Signal: Checking for specific timestamps in a list",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      284,
      62,
      30094,
      62,
      16514,
      27823,
      7203,
      42334,
      12,
      3312,
      12,
      1558,
      838,
      25,
      1270,
      25,
      405,
      4943,
      287,
      4628,
      395,
      9430
    ],
    "start_token": 225,
    "end_token": 251,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      2176,
      4628,
      395,
      9430,
      287,
      257,
      1351
    ],
    "label": "ml_signal",
    "reason": "Checking for specific timestamps in a list"
  },
  {
    "line": 33,
    "text": "    assert to_pd_timestamp(\"2020-06-17 14:00:00\") in timestamps",
    "annotation": "\ud83e\udde0 ML Signal: Checking for specific timestamps in a list",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      284,
      62,
      30094,
      62,
      16514,
      27823,
      7203,
      42334,
      12,
      3312,
      12,
      1558,
      1478,
      25,
      405,
      25,
      405,
      4943,
      287,
      4628,
      395,
      9430
    ],
    "start_token": 251,
    "end_token": 277,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      2176,
      4628,
      395,
      9430,
      287,
      257,
      1351
    ],
    "label": "ml_signal",
    "reason": "Checking for specific timestamps in a list"
  },
  {
    "line": 35,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Checking for specific timestamps in a list",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 277,
    "end_token": 277,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      2176,
      4628,
      395,
      9430,
      287,
      257,
      1351
    ],
    "label": "ml_signal",
    "reason": "Checking for specific timestamps in a list"
  },
  {
    "line": 37,
    "text": "    assert to_pd_timestamp(\"2020-06-17 11:30:00\") in timestamps",
    "annotation": "\ud83e\udde0 ML Signal: Checking for specific timestamps in a list",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      284,
      62,
      30094,
      62,
      16514,
      27823,
      7203,
      42334,
      12,
      3312,
      12,
      1558,
      1367,
      25,
      1270,
      25,
      405,
      4943,
      287,
      4628,
      395,
      9430
    ],
    "start_token": 277,
    "end_token": 303,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      2176,
      4628,
      395,
      9430,
      287,
      257,
      1351
    ],
    "label": "ml_signal",
    "reason": "Checking for specific timestamps in a list"
  },
  {
    "line": 39,
    "text": "    assert to_pd_timestamp(\"2020-06-18 15:00:00\") in timestamps",
    "annotation": "\ud83e\udde0 ML Signal: Checking for specific timestamps in a list",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      284,
      62,
      30094,
      62,
      16514,
      27823,
      7203,
      42334,
      12,
      3312,
      12,
      1507,
      1315,
      25,
      405,
      25,
      405,
      4943,
      287,
      4628,
      395,
      9430
    ],
    "start_token": 303,
    "end_token": 329,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      2176,
      4628,
      395,
      9430,
      287,
      257,
      1351
    ],
    "label": "ml_signal",
    "reason": "Checking for specific timestamps in a list"
  },
  {
    "line": 31,
    "text": "    assert to_pd_timestamp(\"2020-06-17 10:30:00\") in timestamps",
    "annotation": "\ud83e\udde0 ML Signal: Use of assert statements for testing expected outcomes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      284,
      62,
      30094,
      62,
      16514,
      27823,
      7203,
      42334,
      12,
      3312,
      12,
      1558,
      838,
      25,
      1270,
      25,
      405,
      4943,
      287,
      4628,
      395,
      9430
    ],
    "start_token": 329,
    "end_token": 355,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      6818,
      6299,
      329,
      4856,
      2938,
      10906
    ],
    "label": "ml_signal",
    "reason": "Use of assert statements for testing expected outcomes"
  },
  {
    "line": 32,
    "text": "    assert to_pd_timestamp(\"2020-06-17 11:30:00\") in timestamps",
    "annotation": "\u2705 Best Practice: Use of descriptive test function name for clarity",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      284,
      62,
      30094,
      62,
      16514,
      27823,
      7203,
      42334,
      12,
      3312,
      12,
      1558,
      1367,
      25,
      1270,
      25,
      405,
      4943,
      287,
      4628,
      395,
      9430
    ],
    "start_token": 355,
    "end_token": 381,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      35644,
      1332,
      2163,
      1438,
      329,
      16287
    ],
    "label": "best_practice",
    "reason": "Use of descriptive test function name for clarity"
  },
  {
    "line": 34,
    "text": "    assert to_pd_timestamp(\"2020-06-17 15:00:00\") in timestamps",
    "annotation": "\ud83e\udde0 ML Signal: Testing function with specific timestamp and interval level",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      284,
      62,
      30094,
      62,
      16514,
      27823,
      7203,
      42334,
      12,
      3312,
      12,
      1558,
      1315,
      25,
      405,
      25,
      405,
      4943,
      287,
      4628,
      395,
      9430
    ],
    "start_token": 381,
    "end_token": 407,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23983,
      2163,
      351,
      2176,
      41033,
      290,
      16654,
      1241
    ],
    "label": "ml_signal",
    "reason": "Testing function with specific timestamp and interval level"
  },
  {
    "line": 35,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of assert to validate expected behavior",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 407,
    "end_token": 407,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      6818,
      284,
      26571,
      2938,
      4069
    ],
    "label": "best_practice",
    "reason": "Use of assert to validate expected behavior"
  },
  {
    "line": 37,
    "text": "    assert to_pd_timestamp(\"2020-06-17 11:30:00\") in timestamps",
    "annotation": "\ud83e\udde0 ML Signal: Testing function with specific timestamp and interval level",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      284,
      62,
      30094,
      62,
      16514,
      27823,
      7203,
      42334,
      12,
      3312,
      12,
      1558,
      1367,
      25,
      1270,
      25,
      405,
      4943,
      287,
      4628,
      395,
      9430
    ],
    "start_token": 407,
    "end_token": 433,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23983,
      2163,
      351,
      2176,
      41033,
      290,
      16654,
      1241
    ],
    "label": "ml_signal",
    "reason": "Testing function with specific timestamp and interval level"
  },
  {
    "line": 38,
    "text": "    assert to_pd_timestamp(\"2020-06-17 14:00:00\") in timestamps",
    "annotation": "\u2705 Best Practice: Use of assert to validate expected behavior",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      284,
      62,
      30094,
      62,
      16514,
      27823,
      7203,
      42334,
      12,
      3312,
      12,
      1558,
      1478,
      25,
      405,
      25,
      405,
      4943,
      287,
      4628,
      395,
      9430
    ],
    "start_token": 433,
    "end_token": 459,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      6818,
      284,
      26571,
      2938,
      4069
    ],
    "label": "best_practice",
    "reason": "Use of assert to validate expected behavior"
  },
  {
    "line": 40,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Testing function with specific timestamp and interval level",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 459,
    "end_token": 459,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23983,
      2163,
      351,
      2176,
      41033,
      290,
      16654,
      1241
    ],
    "label": "ml_signal",
    "reason": "Testing function with specific timestamp and interval level"
  },
  {
    "line": 41,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of assert to validate expected behavior",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 459,
    "end_token": 459,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      6818,
      284,
      26571,
      2938,
      4069
    ],
    "label": "best_practice",
    "reason": "Use of assert to validate expected behavior"
  },
  {
    "line": 42,
    "text": "def test_is_finished_kdata_timestamp():",
    "annotation": "\ud83e\udde0 ML Signal: Testing function with specific timestamp and interval level",
    "confidence": 1.0,
    "tokens": [
      4299,
      1332,
      62,
      271,
      62,
      43952,
      62,
      74,
      7890,
      62,
      16514,
      27823,
      33529
    ],
    "start_token": 459,
    "end_token": 472,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23983,
      2163,
      351,
      2176,
      41033,
      290,
      16654,
      1241
    ],
    "label": "ml_signal",
    "reason": "Testing function with specific timestamp and interval level"
  },
  {
    "line": 45,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of assert to validate expected behavior",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 472,
    "end_token": 472,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      6818,
      284,
      26571,
      2938,
      4069
    ],
    "label": "best_practice",
    "reason": "Use of assert to validate expected behavior"
  },
  {
    "line": 46,
    "text": "    assert TradableEntity.is_finished_kdata_timestamp(\"2020-06-17 11:30\", IntervalLevel.LEVEL_30MIN)",
    "annotation": "\ud83e\udde0 ML Signal: Testing function with specific timestamp and interval level",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      11974,
      32398,
      13,
      271,
      62,
      43952,
      62,
      74,
      7890,
      62,
      16514,
      27823,
      7203,
      42334,
      12,
      3312,
      12,
      1558,
      1367,
      25,
      1270,
      1600,
      4225,
      2100,
      4971,
      13,
      2538,
      18697,
      62,
      1270,
      23678,
      8
    ],
    "start_token": 472,
    "end_token": 508,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23983,
      2163,
      351,
      2176,
      41033,
      290,
      16654,
      1241
    ],
    "label": "ml_signal",
    "reason": "Testing function with specific timestamp and interval level"
  },
  {
    "line": 47,
    "text": "    assert not TradableEntity.is_finished_kdata_timestamp(\"2020-06-17 11:30\", IntervalLevel.LEVEL_1DAY)",
    "annotation": "\u2705 Best Practice: Use of assert to validate expected behavior",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      407,
      11974,
      32398,
      13,
      271,
      62,
      43952,
      62,
      74,
      7890,
      62,
      16514,
      27823,
      7203,
      42334,
      12,
      3312,
      12,
      1558,
      1367,
      25,
      1270,
      1600,
      4225,
      2100,
      4971,
      13,
      2538,
      18697,
      62,
      16,
      26442,
      8
    ],
    "start_token": 508,
    "end_token": 545,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      6818,
      284,
      26571,
      2938,
      4069
    ],
    "label": "best_practice",
    "reason": "Use of assert to validate expected behavior"
  },
  {
    "line": 47,
    "text": "    assert not TradableEntity.is_finished_kdata_timestamp(\"2020-06-17 11:30\", IntervalLevel.LEVEL_1DAY)",
    "annotation": "\ud83e\udde0 ML Signal: Testing function with specific timestamp and interval level",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      407,
      11974,
      32398,
      13,
      271,
      62,
      43952,
      62,
      74,
      7890,
      62,
      16514,
      27823,
      7203,
      42334,
      12,
      3312,
      12,
      1558,
      1367,
      25,
      1270,
      1600,
      4225,
      2100,
      4971,
      13,
      2538,
      18697,
      62,
      16,
      26442,
      8
    ],
    "start_token": 545,
    "end_token": 582,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23983,
      2163,
      351,
      2176,
      41033,
      290,
      16654,
      1241
    ],
    "label": "ml_signal",
    "reason": "Testing function with specific timestamp and interval level"
  },
  {
    "line": 47,
    "text": "    assert not TradableEntity.is_finished_kdata_timestamp(\"2020-06-17 11:30\", IntervalLevel.LEVEL_1DAY)",
    "annotation": "\u2705 Best Practice: Use of assert to validate expected behavior",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      407,
      11974,
      32398,
      13,
      271,
      62,
      43952,
      62,
      74,
      7890,
      62,
      16514,
      27823,
      7203,
      42334,
      12,
      3312,
      12,
      1558,
      1367,
      25,
      1270,
      1600,
      4225,
      2100,
      4971,
      13,
      2538,
      18697,
      62,
      16,
      26442,
      8
    ],
    "start_token": 582,
    "end_token": 619,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      6818,
      284,
      26571,
      2938,
      4069
    ],
    "label": "best_practice",
    "reason": "Use of assert to validate expected behavior"
  },
  {
    "line": 39,
    "text": "    assert to_pd_timestamp(\"2020-06-18 15:00:00\") in timestamps",
    "annotation": "\ud83e\udde0 ML Signal: Use of assert statements for testing indicates a pattern for test case validation",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      284,
      62,
      30094,
      62,
      16514,
      27823,
      7203,
      42334,
      12,
      3312,
      12,
      1507,
      1315,
      25,
      405,
      25,
      405,
      4943,
      287,
      4628,
      395,
      9430
    ],
    "start_token": 619,
    "end_token": 645,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      6818,
      6299,
      329,
      4856,
      9217,
      257,
      3912,
      329,
      1332,
      1339,
      21201
    ],
    "label": "ml_signal",
    "reason": "Use of assert statements for testing indicates a pattern for test case validation"
  },
  {
    "line": 41,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of assert statements for testing indicates a pattern for test case validation",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 645,
    "end_token": 645,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      6818,
      6299,
      329,
      4856,
      9217,
      257,
      3912,
      329,
      1332,
      1339,
      21201
    ],
    "label": "ml_signal",
    "reason": "Use of assert statements for testing indicates a pattern for test case validation"
  },
  {
    "line": 42,
    "text": "def test_is_finished_kdata_timestamp():",
    "annotation": "\u2705 Best Practice: Initialize lists directly where they are used to improve readability",
    "confidence": 0.5,
    "tokens": [
      4299,
      1332,
      62,
      271,
      62,
      43952,
      62,
      74,
      7890,
      62,
      16514,
      27823,
      33529
    ],
    "start_token": 645,
    "end_token": 658,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      20768,
      1096,
      8341,
      3264,
      810,
      484,
      389,
      973,
      284,
      2987,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Initialize lists directly where they are used to improve readability"
  },
  {
    "line": 45,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over a method call suggests a pattern of processing or transforming data",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 658,
    "end_token": 658,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      257,
      2446,
      869,
      5644,
      257,
      3912,
      286,
      7587,
      393,
      25449,
      1366
    ],
    "label": "ml_signal",
    "reason": "Iterating over a method call suggests a pattern of processing or transforming data"
  },
  {
    "line": 47,
    "text": "    assert not TradableEntity.is_finished_kdata_timestamp(\"2020-06-17 11:30\", IntervalLevel.LEVEL_1DAY)",
    "annotation": "\u2705 Best Practice: Use list comprehensions for more concise and readable code",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      407,
      11974,
      32398,
      13,
      271,
      62,
      43952,
      62,
      74,
      7890,
      62,
      16514,
      27823,
      7203,
      42334,
      12,
      3312,
      12,
      1558,
      1367,
      25,
      1270,
      1600,
      4225,
      2100,
      4971,
      13,
      2538,
      18697,
      62,
      16,
      26442,
      8
    ],
    "start_token": 658,
    "end_token": 695,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      1351,
      8569,
      507,
      329,
      517,
      35327,
      290,
      31744,
      2438
    ],
    "label": "best_practice",
    "reason": "Use list comprehensions for more concise and readable code"
  },
  {
    "line": 47,
    "text": "    assert not TradableEntity.is_finished_kdata_timestamp(\"2020-06-17 11:30\", IntervalLevel.LEVEL_1DAY)",
    "annotation": "\ud83e\udde0 ML Signal: Use of assert statements for testing indicates a pattern for test case validation",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      407,
      11974,
      32398,
      13,
      271,
      62,
      43952,
      62,
      74,
      7890,
      62,
      16514,
      27823,
      7203,
      42334,
      12,
      3312,
      12,
      1558,
      1367,
      25,
      1270,
      1600,
      4225,
      2100,
      4971,
      13,
      2538,
      18697,
      62,
      16,
      26442,
      8
    ],
    "start_token": 695,
    "end_token": 732,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      6818,
      6299,
      329,
      4856,
      9217,
      257,
      3912,
      329,
      1332,
      1339,
      21201
    ],
    "label": "ml_signal",
    "reason": "Use of assert statements for testing indicates a pattern for test case validation"
  },
  {
    "line": 47,
    "text": "    assert not TradableEntity.is_finished_kdata_timestamp(\"2020-06-17 11:30\", IntervalLevel.LEVEL_1DAY)",
    "annotation": "\ud83e\udde0 ML Signal: Use of assert statements for testing indicates a pattern for test case validation",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      6818,
      407,
      11974,
      32398,
      13,
      271,
      62,
      43952,
      62,
      74,
      7890,
      62,
      16514,
      27823,
      7203,
      42334,
      12,
      3312,
      12,
      1558,
      1367,
      25,
      1270,
      1600,
      4225,
      2100,
      4971,
      13,
      2538,
      18697,
      62,
      16,
      26442,
      8
    ],
    "start_token": 732,
    "end_token": 769,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      6818,
      6299,
      329,
      4856,
      9217,
      257,
      3912,
      329,
      1332,
      1339,
      21201
    ],
    "label": "ml_signal",
    "reason": "Use of assert statements for testing indicates a pattern for test case validation"
  }
]