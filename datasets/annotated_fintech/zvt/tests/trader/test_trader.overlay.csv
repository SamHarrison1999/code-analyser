annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Grouping imports from the same module together improves readability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 17944, 422, 262, 976, 8265, 1978, 19575, 1100, 1799, 13]",1.0,13,best_practice,2,Grouping imports from the same module together improves readability.,,0,from zvt.api.kdata import get_kdata,"[6738, 1976, 36540, 13, 15042, 13, 74, 7890, 1330, 651, 62, 74, 7890]"
‚úÖ Best Practice: Grouping imports from the same module together improves readability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 17944, 422, 262, 976, 8265, 1978, 19575, 1100, 1799, 13]",1.0,28,best_practice,4,Grouping imports from the same module together improves readability.,,13,"from zvt.samples import MyBullTrader, StockTrader","[6738, 1976, 36540, 13, 82, 12629, 1330, 2011, 39549, 2898, 5067, 11, 10500, 2898, 5067]"
‚úÖ Best Practice: Grouping imports from the same module together improves readability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 17944, 422, 262, 976, 8265, 1978, 19575, 1100, 1799, 13]",1.0,28,best_practice,6,Grouping imports from the same module together improves readability.,,28,,[]
üß† ML Signal: Hardcoded timestamps can indicate specific event-driven behavior.,"[8582, 100, 254, 10373, 26484, 25, 6912, 40976, 4628, 395, 9430, 460, 7603, 2176, 1785, 12, 15808, 4069, 13]",0.5,28,ml_signal,9,Hardcoded timestamps can indicate specific event-driven behavior.,,28,,[]
üß† ML Signal: Hardcoded timestamps can indicate specific event-driven behavior.,"[8582, 100, 254, 10373, 26484, 25, 6912, 40976, 4628, 395, 9430, 460, 7603, 2176, 1785, 12, 15808, 4069, 13]",0.5,37,ml_signal,11,Hardcoded timestamps can indicate specific event-driven behavior.,,28,class SingleTrader(StockTrader):,"[4871, 14206, 2898, 5067, 7, 26207, 2898, 5067, 2599]"
‚úÖ Best Practice: Class docstring is missing; consider adding one to describe the class purpose and usage.,"[26486, 227, 6705, 19939, 25, 5016, 2205, 8841, 318, 4814, 26, 2074, 4375, 530, 284, 6901, 262, 1398, 4007, 290, 8748, 13]",0.5,49,best_practice,8,Class docstring is missing; consider adding one to describe the class purpose and usage.,,37,"sell_timestamp = ""2020-01-06""","[7255, 62, 16514, 27823, 796, 366, 42334, 12, 486, 12, 3312, 1]"
üß† ML Signal: Method name suggests a time-based event handler pattern,"[8582, 100, 254, 10373, 26484, 25, 11789, 1438, 5644, 257, 640, 12, 3106, 1785, 21360, 3912]",1.0,49,ml_signal,9,Method name suggests a time-based event handler pattern,,49,,[]
‚ö†Ô∏è SAST Risk (Low): Potential use of undefined variables (buy_timestamp),"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 779, 286, 28721, 9633, 357, 17846, 62, 16514, 27823, 8]",1.0,58,sast_risk,11,Potential use of undefined variables (buy_timestamp),Low,49,class SingleTrader(StockTrader):,"[4871, 14206, 2898, 5067, 7, 26207, 2898, 5067, 2599]"
üß† ML Signal: Conditional logic based on date comparison,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9156, 1912, 319, 3128, 7208]",1.0,70,ml_signal,12,Conditional logic based on date comparison,,58,"    def on_time(self, timestamp):","[220, 220, 220, 825, 319, 62, 2435, 7, 944, 11, 41033, 2599]"
üß† ML Signal: Method call with specific entity_ids suggests a pattern of trading actions,"[8582, 100, 254, 10373, 26484, 25, 11789, 869, 351, 2176, 9312, 62, 2340, 5644, 257, 3912, 286, 7313, 4028]",1.0,107,ml_signal,14,Method call with specific entity_ids suggests a pattern of trading actions,,70,"            self.buy(timestamp=buy_timestamp, entity_ids=[""stock_sz_000338""])","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 17846, 7, 16514, 27823, 28, 17846, 62, 16514, 27823, 11, 9312, 62, 2340, 28, 14692, 13578, 62, 82, 89, 62, 830, 28460, 8973, 8]"
‚ö†Ô∏è SAST Risk (Low): Potential use of undefined variables (sell_timestamp),"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 779, 286, 28721, 9633, 357, 7255, 62, 16514, 27823, 8]",1.0,144,sast_risk,16,Potential use of undefined variables (sell_timestamp),Low,107,"            self.sell(timestamp=sell_timestamp, entity_ids=[""stock_sz_000338""])","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 7255, 7, 16514, 27823, 28, 7255, 62, 16514, 27823, 11, 9312, 62, 2340, 28, 14692, 13578, 62, 82, 89, 62, 830, 28460, 8973, 8]"
üß† ML Signal: Conditional logic based on date comparison,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9156, 1912, 319, 3128, 7208]",1.0,181,ml_signal,16,Conditional logic based on date comparison,,144,"            self.sell(timestamp=sell_timestamp, entity_ids=[""stock_sz_000338""])","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 7255, 7, 16514, 27823, 28, 7255, 62, 16514, 27823, 11, 9312, 62, 2340, 28, 14692, 13578, 62, 82, 89, 62, 830, 28460, 8973, 8]"
üß† ML Signal: Method call with specific entity_ids suggests a pattern of trading actions,"[8582, 100, 254, 10373, 26484, 25, 11789, 869, 351, 2176, 9312, 62, 2340, 5644, 257, 3912, 286, 7313, 4028]",1.0,218,ml_signal,16,Method call with specific entity_ids suggests a pattern of trading actions,,181,"            self.sell(timestamp=sell_timestamp, entity_ids=[""stock_sz_000338""])","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 7255, 7, 16514, 27823, 28, 7255, 62, 16514, 27823, 11, 9312, 62, 2340, 28, 14692, 13578, 62, 82, 89, 62, 830, 28460, 8973, 8]"
"üß† ML Signal: Method definition with a fixed return value, indicating a potential placeholder or stub","[8582, 100, 254, 10373, 26484, 25, 11789, 6770, 351, 257, 5969, 1441, 1988, 11, 12739, 257, 2785, 46076, 393, 17071]",1.0,239,ml_signal,13,"Method definition with a fixed return value, indicating a potential placeholder or stub",,218,"        if is_same_date(buy_timestamp, timestamp):","[220, 220, 220, 220, 220, 220, 220, 611, 318, 62, 31642, 62, 4475, 7, 17846, 62, 16514, 27823, 11, 41033, 2599]"
üß† ML Signal: Consistent return value could indicate a default or fallback behavior,"[8582, 100, 254, 10373, 26484, 25, 3515, 7609, 1441, 1988, 714, 7603, 257, 4277, 393, 2121, 1891, 4069]",0.5,260,ml_signal,15,Consistent return value could indicate a default or fallback behavior,,239,"        if is_same_date(sell_timestamp, timestamp):","[220, 220, 220, 220, 220, 220, 220, 611, 318, 62, 31642, 62, 4475, 7, 7255, 62, 16514, 27823, 11, 41033, 2599]"
üß† ML Signal: Instantiation of a trading object with specific parameters,"[8582, 100, 254, 10373, 26484, 25, 24470, 3920, 286, 257, 7313, 2134, 351, 2176, 10007]",1.0,273,ml_signal,25,Instantiation of a trading object with specific parameters,,260,"        codes=[""000338""],","[220, 220, 220, 220, 220, 220, 220, 12416, 28, 14692, 830, 28460, 33116]"
üß† ML Signal: Accessing current account positions,"[8582, 100, 254, 10373, 26484, 25, 8798, 278, 1459, 1848, 6116]",1.0,291,ml_signal,27,Accessing current account positions,,273,"        start_timestamp=""2019-01-01"",","[220, 220, 220, 220, 220, 220, 220, 923, 62, 16514, 27823, 2625, 23344, 12, 486, 12, 486, 1600]"
‚úÖ Best Practice: Consider using logging instead of print for better control over output,"[26486, 227, 6705, 19939, 25, 12642, 1262, 18931, 2427, 286, 3601, 329, 1365, 1630, 625, 5072]",0.5,310,best_practice,29,Consider using logging instead of print for better control over output,,291,"        trader_name=""000338_single_trader"",","[220, 220, 220, 220, 220, 220, 220, 31791, 62, 3672, 2625, 830, 28460, 62, 29762, 62, 2213, 5067, 1600]"
üß† ML Signal: Accessing current account details,"[8582, 100, 254, 10373, 26484, 25, 8798, 278, 1459, 1848, 3307]",1.0,323,ml_signal,30,Accessing current account details,,310,"        draw_result=True,","[220, 220, 220, 220, 220, 220, 220, 3197, 62, 20274, 28, 17821, 11]"
‚úÖ Best Practice: Consider using logging instead of print for better control over output,"[26486, 227, 6705, 19939, 25, 12642, 1262, 18931, 2427, 286, 3601, 329, 1365, 1630, 625, 5072]",0.5,336,best_practice,30,Consider using logging instead of print for better control over output,,323,"        draw_result=True,","[220, 220, 220, 220, 220, 220, 220, 3197, 62, 20274, 28, 17821, 11]"
‚ö†Ô∏è SAST Risk (Medium): Potential use of undefined variables buy_timestamp and sell_timestamp,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 32480, 779, 286, 28721, 9633, 2822, 62, 16514, 27823, 290, 3677, 62, 16514, 27823]",0.5,349,sast_risk,37,Potential use of undefined variables buy_timestamp and sell_timestamp,Medium,336,    account = trader.get_current_account(),"[220, 220, 220, 1848, 796, 31791, 13, 1136, 62, 14421, 62, 23317, 3419]"
‚ö†Ô∏è SAST Risk (Medium): Potential use of undefined variables buy_timestamp and sell_timestamp,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 32480, 779, 286, 28721, 9633, 2822, 62, 16514, 27823, 290, 3677, 62, 16514, 27823]",0.5,366,sast_risk,44,Potential use of undefined variables buy_timestamp and sell_timestamp,Medium,349,"        start_timestamp=buy_timestamp,","[220, 220, 220, 220, 220, 220, 220, 923, 62, 16514, 27823, 28, 17846, 62, 16514, 27823, 11]"
üß† ML Signal: Calculation of transaction costs,"[8582, 100, 254, 10373, 26484, 25, 2199, 14902, 286, 8611, 3484]",1.0,383,ml_signal,51,Calculation of transaction costs,,366,"        start_timestamp=sell_timestamp,","[220, 220, 220, 220, 220, 220, 220, 923, 62, 16514, 27823, 28, 7255, 62, 16514, 27823, 11]"
üß† ML Signal: Calculation of percentage change in price,"[8582, 100, 254, 10373, 26484, 25, 2199, 14902, 286, 5873, 1487, 287, 2756]",1.0,390,ml_signal,54,Calculation of percentage change in price,,383,    )[0],"[220, 220, 220, 1267, 58, 15, 60]"
üß† ML Signal: Calculation of profit rate,"[8582, 100, 254, 10373, 26484, 25, 2199, 14902, 286, 7630, 2494]",1.0,416,ml_signal,56,Calculation of profit rate,,390,    sell_lost = trader.account_service.slippage + trader.account_service.sell_cost,"[220, 220, 220, 3677, 62, 33224, 796, 31791, 13, 23317, 62, 15271, 13, 6649, 3974, 496, 1343, 31791, 13, 23317, 62, 15271, 13, 7255, 62, 15805]"
‚úÖ Best Practice: Use of assert for validation of expected outcomes,"[26486, 227, 6705, 19939, 25, 5765, 286, 6818, 329, 21201, 286, 2938, 10906]",1.0,442,best_practice,57,Use of assert for validation of expected outcomes,,416,    buy_lost = trader.account_service.slippage + trader.account_service.buy_cost,"[220, 220, 220, 2822, 62, 33224, 796, 31791, 13, 23317, 62, 15271, 13, 6649, 3974, 496, 1343, 31791, 13, 23317, 62, 15271, 13, 17846, 62, 15805]"
‚úÖ Best Practice: Class attributes should be documented to explain their purpose and usage,"[26486, 227, 6705, 19939, 25, 5016, 12608, 815, 307, 12395, 284, 4727, 511, 4007, 290, 8748]",1.0,455,best_practice,49,Class attributes should be documented to explain their purpose and usage,,442,"        provider=""joinquant"",","[220, 220, 220, 220, 220, 220, 220, 10131, 2625, 7639, 18934, 415, 1600]"
‚úÖ Best Practice: Class attributes should be documented to explain their purpose and usage,"[26486, 227, 6705, 19939, 25, 5016, 12608, 815, 307, 12395, 284, 4727, 511, 4007, 290, 8748]",1.0,472,best_practice,51,Class attributes should be documented to explain their purpose and usage,,455,"        start_timestamp=sell_timestamp,","[220, 220, 220, 220, 220, 220, 220, 923, 62, 16514, 27823, 28, 7255, 62, 16514, 27823, 11]"
‚úÖ Best Practice: Consider adding type hints for the 'timestamp' parameter for better readability and maintainability.,"[26486, 227, 6705, 19939, 25, 12642, 4375, 2099, 20269, 329, 262, 705, 16514, 27823, 6, 11507, 329, 1365, 1100, 1799, 290, 5529, 1799, 13]",1.0,489,best_practice,52,Consider adding type hints for the 'timestamp' parameter for better readability and maintainability.,,472,"        end_timestamp=sell_timestamp,","[220, 220, 220, 220, 220, 220, 220, 886, 62, 16514, 27823, 28, 7255, 62, 16514, 27823, 11]"
‚ö†Ô∏è SAST Risk (Low): Potential for repeated buy actions due to lack of condition to prevent multiple buys on the same timestamp.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 5100, 2822, 4028, 2233, 284, 3092, 286, 4006, 284, 2948, 3294, 24779, 319, 262, 976, 41033, 13]",0.5,496,sast_risk,54,Potential for repeated buy actions due to lack of condition to prevent multiple buys on the same timestamp.,Low,489,    )[0],"[220, 220, 220, 1267, 58, 15, 60]"
üß† ML Signal: Setting a flag after a buy action can indicate a state change pattern useful for ML models.,"[8582, 100, 254, 10373, 26484, 25, 25700, 257, 6056, 706, 257, 2822, 2223, 460, 7603, 257, 1181, 1487, 3912, 4465, 329, 10373, 4981, 13]",1.0,522,ml_signal,56,Setting a flag after a buy action can indicate a state change pattern useful for ML models.,,496,    sell_lost = trader.account_service.slippage + trader.account_service.sell_cost,"[220, 220, 220, 3677, 62, 33224, 796, 31791, 13, 23317, 62, 15271, 13, 6649, 3974, 496, 1343, 31791, 13, 23317, 62, 15271, 13, 7255, 62, 15805]"
‚ö†Ô∏è SAST Risk (Low): Repeated buy action without condition check can lead to unintended behavior or errors.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 30558, 515, 2822, 2223, 1231, 4006, 2198, 460, 1085, 284, 30261, 4069, 393, 8563, 13]",0.5,548,sast_risk,57,Repeated buy action without condition check can lead to unintended behavior or errors.,Low,522,    buy_lost = trader.account_service.slippage + trader.account_service.buy_cost,"[220, 220, 220, 2822, 62, 33224, 796, 31791, 13, 23317, 62, 15271, 13, 6649, 3974, 496, 1343, 31791, 13, 23317, 62, 15271, 13, 17846, 62, 15805]"
‚ö†Ô∏è SAST Risk (Low): Potential for repeated sell actions due to lack of condition to prevent multiple sells on the same timestamp.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 5100, 3677, 4028, 2233, 284, 3092, 286, 4006, 284, 2948, 3294, 16015, 319, 262, 976, 41033, 13]",0.5,548,sast_risk,61,Potential for repeated sell actions due to lack of condition to prevent multiple sells on the same timestamp.,Low,548,,[]
üß† ML Signal: Method name suggests a financial trading strategy pattern,"[8582, 100, 254, 10373, 26484, 25, 11789, 1438, 5644, 257, 3176, 7313, 4811, 3912]",1.0,568,ml_signal,62,Method name suggests a financial trading strategy pattern,,548,"    assert round(profit_rate, 2) == round(pct, 2)","[220, 220, 220, 6818, 2835, 7, 9183, 62, 4873, 11, 362, 8, 6624, 2835, 7, 79, 310, 11, 362, 8]"
"üß† ML Signal: Conditional logic based on an attribute, indicating a decision-making pattern","[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9156, 1912, 319, 281, 11688, 11, 12739, 257, 2551, 12, 8601, 3912]",0.5,568,ml_signal,63,"Conditional logic based on an attribute, indicating a decision-making pattern",,568,,[]
"‚úÖ Best Practice: Explicit return of a value, enhancing readability and understanding of the function's purpose","[26486, 227, 6705, 19939, 25, 11884, 1441, 286, 257, 1988, 11, 27496, 1100, 1799, 290, 4547, 286, 262, 2163, 338, 4007]",0.5,580,best_practice,68,"Explicit return of a value, enhancing readability and understanding of the function's purpose",,568,"    def on_time(self, timestamp):","[220, 220, 220, 825, 319, 62, 2435, 7, 944, 11, 41033, 2599]"
üß† ML Signal: Instantiation of a class with specific parameters,"[8582, 100, 254, 10373, 26484, 25, 24470, 3920, 286, 257, 1398, 351, 2176, 10007]",1.0,592,ml_signal,68,Instantiation of a class with specific parameters,,580,"    def on_time(self, timestamp):","[220, 220, 220, 825, 319, 62, 2435, 7, 944, 11, 41033, 2599]"
üß† ML Signal: Method call on an object,"[8582, 100, 254, 10373, 26484, 25, 11789, 869, 319, 281, 2134]",1.0,604,ml_signal,79,Method call on an object,,592,    def long_position_control(self):,"[220, 220, 220, 825, 890, 62, 9150, 62, 13716, 7, 944, 2599]"
üß† ML Signal: Method call on an object,"[8582, 100, 254, 10373, 26484, 25, 11789, 869, 319, 281, 2134]",1.0,623,ml_signal,81,Method call on an object,,604,            position_pct = 1.0,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2292, 62, 79, 310, 796, 352, 13, 15]"
‚úÖ Best Practice: Use of print statements for debugging,"[26486, 227, 6705, 19939, 25, 5765, 286, 3601, 6299, 329, 28769]",0.5,642,best_practice,83,Use of print statements for debugging,,623,            position_pct = 0.5,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2292, 62, 79, 310, 796, 657, 13, 20]"
üß† ML Signal: Method call on an object,"[8582, 100, 254, 10373, 26484, 25, 11789, 869, 319, 281, 2134]",1.0,661,ml_signal,83,Method call on an object,,642,            position_pct = 0.5,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2292, 62, 79, 310, 796, 657, 13, 20]"
‚úÖ Best Practice: Use of print statements for debugging,"[26486, 227, 6705, 19939, 25, 5765, 286, 3601, 6299, 329, 28769]",0.5,674,best_practice,90,Use of print statements for debugging,,661,"        provider=""joinquant"",","[220, 220, 220, 220, 220, 220, 220, 10131, 2625, 7639, 18934, 415, 1600]"
‚ö†Ô∏è SAST Risk (Low): Potential use of undefined variables buy_timestamp and sell_timestamp,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 779, 286, 28721, 9633, 2822, 62, 16514, 27823, 290, 3677, 62, 16514, 27823]",0.5,687,sast_risk,90,Potential use of undefined variables buy_timestamp and sell_timestamp,Low,674,"        provider=""joinquant"",","[220, 220, 220, 220, 220, 220, 220, 10131, 2625, 7639, 18934, 415, 1600]"
‚ö†Ô∏è SAST Risk (Low): Potential use of undefined variables buy_timestamp and sell_timestamp,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 779, 286, 28721, 9633, 2822, 62, 16514, 27823, 290, 3677, 62, 16514, 27823]",0.5,705,sast_risk,97,Potential use of undefined variables buy_timestamp and sell_timestamp,Low,687,"        adjust_type=AdjustType.qfq,","[220, 220, 220, 220, 220, 220, 220, 4532, 62, 4906, 28, 39668, 6030, 13, 80, 69, 80, 11]"
üß† ML Signal: Calculation involving object attributes,"[8582, 100, 254, 10373, 26484, 25, 2199, 14902, 7411, 2134, 12608]",1.0,705,ml_signal,107,Calculation involving object attributes,,705,,[]
üß† ML Signal: Calculation involving object attributes,"[8582, 100, 254, 10373, 26484, 25, 2199, 14902, 7411, 2134, 12608]",1.0,705,ml_signal,107,Calculation involving object attributes,,705,,[]
üß† ML Signal: Financial calculation pattern,"[8582, 100, 254, 10373, 26484, 25, 11302, 17952, 3912]",0.5,705,ml_signal,107,Financial calculation pattern,,705,,[]
‚ö†Ô∏è SAST Risk (Low): Potential use of undefined variables buy_timestamp and sell_timestamp,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 779, 286, 28721, 9633, 2822, 62, 16514, 27823, 290, 3677, 62, 16514, 27823]",0.5,718,sast_risk,114,Potential use of undefined variables buy_timestamp and sell_timestamp,Low,705,"        return_type=""domain"",","[220, 220, 220, 220, 220, 220, 220, 1441, 62, 4906, 2625, 27830, 1600]"
‚ö†Ô∏è SAST Risk (Low): Potential use of undefined variables buy_timestamp and sell_timestamp,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 779, 286, 28721, 9633, 2822, 62, 16514, 27823, 290, 3677, 62, 16514, 27823]",0.5,735,sast_risk,119,Potential use of undefined variables buy_timestamp and sell_timestamp,Low,718,"        start_timestamp=sell_timestamp,","[220, 220, 220, 220, 220, 220, 220, 923, 62, 16514, 27823, 28, 7255, 62, 16514, 27823, 11]"
üß† ML Signal: Financial calculation pattern,"[8582, 100, 254, 10373, 26484, 25, 11302, 17952, 3912]",0.5,747,ml_signal,129,Financial calculation pattern,,735,    buy_price = get_kdata(,"[220, 220, 220, 2822, 62, 20888, 796, 651, 62, 74, 7890, 7]"
üß† ML Signal: Financial calculation pattern,"[8582, 100, 254, 10373, 26484, 25, 11302, 17952, 3912]",0.5,759,ml_signal,129,Financial calculation pattern,,747,    buy_price = get_kdata(,"[220, 220, 220, 2822, 62, 20888, 796, 651, 62, 74, 7890, 7]"
üß† ML Signal: Assertion for testing,"[8582, 100, 254, 10373, 26484, 25, 2195, 861, 295, 329, 4856]",0.5,771,ml_signal,129,Assertion for testing,,759,    buy_price = get_kdata(,"[220, 220, 220, 2822, 62, 20888, 796, 651, 62, 74, 7890, 7]"
üß† ML Signal: Function definition with a specific name pattern indicating a test function,"[8582, 100, 254, 10373, 26484, 25, 15553, 6770, 351, 257, 2176, 1438, 3912, 12739, 257, 1332, 2163]",1.0,784,ml_signal,117,Function definition with a specific name pattern indicating a test function,,771,"        provider=""joinquant"",","[220, 220, 220, 220, 220, 220, 220, 10131, 2625, 7639, 18934, 415, 1600]"
üß† ML Signal: Instantiation of a class with specific parameters,"[8582, 100, 254, 10373, 26484, 25, 24470, 3920, 286, 257, 1398, 351, 2176, 10007]",1.0,801,ml_signal,119,Instantiation of a class with specific parameters,,784,"        start_timestamp=sell_timestamp,","[220, 220, 220, 220, 220, 220, 220, 923, 62, 16514, 27823, 28, 7255, 62, 16514, 27823, 11]"
‚úÖ Best Practice: Use of named parameters for clarity,"[26486, 227, 6705, 19939, 25, 5765, 286, 3706, 10007, 329, 16287]",0.5,818,best_practice,119,Use of named parameters for clarity,,801,"        start_timestamp=sell_timestamp,","[220, 220, 220, 220, 220, 220, 220, 923, 62, 16514, 27823, 28, 7255, 62, 16514, 27823, 11]"
"‚ö†Ô∏è SAST Risk (Low): Bare except clause; catches all exceptions, which can hide errors","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 38234, 2845, 13444, 26, 17591, 477, 13269, 11, 543, 460, 7808, 8563]",0.5,830,sast_risk,129,"Bare except clause; catches all exceptions, which can hide errors",Low,818,    buy_price = get_kdata(,"[220, 220, 220, 2822, 62, 20888, 796, 651, 62, 74, 7890, 7]"
üß† ML Signal: Assertion used in a test function,"[8582, 100, 254, 10373, 26484, 25, 2195, 861, 295, 973, 287, 257, 1332, 2163]",0.5,842,ml_signal,129,Assertion used in a test function,,830,    buy_price = get_kdata(,"[220, 220, 220, 2822, 62, 20888, 796, 651, 62, 74, 7890, 7]"
