[
  {
    "line": 3,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of test context, indicating a setup phase for testing",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 0,
    "end_token": 0,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      1332,
      4732,
      11,
      12739,
      257,
      9058,
      7108,
      329,
      4856
    ],
    "label": "ml_signal",
    "reason": "Initialization of test context, indicating a setup phase for testing"
  },
  {
    "line": 5,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Importing constants, indicating usage of predefined values",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 0,
    "end_token": 0,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      38491,
      11,
      12739,
      8748,
      286,
      2747,
      18156,
      3815
    ],
    "label": "ml_signal",
    "reason": "Importing constants, indicating usage of predefined values"
  },
  {
    "line": 7,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Importing a specific recorder class, indicating a pattern of data recording",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 0,
    "end_token": 0,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      257,
      2176,
      38156,
      1398,
      11,
      12739,
      257,
      3912,
      286,
      1366,
      8296
    ],
    "label": "ml_signal",
    "reason": "Importing a specific recorder class, indicating a pattern of data recording"
  },
  {
    "line": 9,
    "text": "from zvt.recorders.eastmoney.holder.eastmoney_top_ten_tradable_holder_recorder import TopTenTradableHolderRecorder",
    "annotation": "\ud83e\udde0 ML Signal: Importing another specific recorder class, indicating a pattern of data recording",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      8344,
      6361,
      13,
      23316,
      26316,
      13,
      13829,
      13,
      23316,
      26316,
      62,
      4852,
      62,
      1452,
      62,
      2213,
      324,
      540,
      62,
      13829,
      62,
      8344,
      2875,
      1330,
      5849,
      24893,
      2898,
      324,
      540,
      39,
      19892,
      6690,
      2875
    ],
    "start_token": 0,
    "end_token": 37,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      1194,
      2176,
      38156,
      1398,
      11,
      12739,
      257,
      3912,
      286,
      1366,
      8296
    ],
    "label": "ml_signal",
    "reason": "Importing another specific recorder class, indicating a pattern of data recording"
  },
  {
    "line": 6,
    "text": "from zvt.consts import SAMPLE_STOCK_CODES",
    "annotation": "\ud83e\udde0 ML Signal: Function definition for testing, indicating a test pattern",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      1102,
      6448,
      1330,
      28844,
      16437,
      62,
      2257,
      11290,
      62,
      34,
      3727,
      1546
    ],
    "start_token": 37,
    "end_token": 53,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      329,
      4856,
      11,
      12739,
      257,
      1332,
      3912
    ],
    "label": "ml_signal",
    "reason": "Function definition for testing, indicating a test pattern"
  },
  {
    "line": 8,
    "text": "from zvt.recorders.eastmoney.holder.eastmoney_top_ten_holder_recorder import TopTenHolderRecorder",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of a class with a specific parameter",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      8344,
      6361,
      13,
      23316,
      26316,
      13,
      13829,
      13,
      23316,
      26316,
      62,
      4852,
      62,
      1452,
      62,
      13829,
      62,
      8344,
      2875,
      1330,
      5849,
      24893,
      39,
      19892,
      6690,
      2875
    ],
    "start_token": 53,
    "end_token": 83,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      257,
      1398,
      351,
      257,
      2176,
      11507
    ],
    "label": "ml_signal",
    "reason": "Instantiation of a class with a specific parameter"
  },
  {
    "line": 11,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Method invocation on an object",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 83,
    "end_token": 83,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      43219,
      319,
      281,
      2134
    ],
    "label": "ml_signal",
    "reason": "Method invocation on an object"
  },
  {
    "line": 13,
    "text": "    recorder = TopTenHolderRecorder(codes=SAMPLE_STOCK_CODES)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Bare except clause, which can catch unexpected exceptions",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      38156,
      796,
      5849,
      24893,
      39,
      19892,
      6690,
      2875,
      7,
      40148,
      28,
      49302,
      16437,
      62,
      2257,
      11290,
      62,
      34,
      3727,
      1546,
      8
    ],
    "start_token": 83,
    "end_token": 107,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      38234,
      2845,
      13444,
      11,
      543,
      460,
      4929,
      10059,
      13269
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Bare except clause, which can catch unexpected exceptions"
  },
  {
    "line": 15,
    "text": "        recorder.run()",
    "annotation": "\ud83e\udde0 ML Signal: Assertion pattern used in testing",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      38156,
      13,
      5143,
      3419
    ],
    "start_token": 107,
    "end_token": 118,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2195,
      861,
      295,
      3912,
      973,
      287,
      4856
    ],
    "label": "ml_signal",
    "reason": "Assertion pattern used in testing"
  },
  {
    "line": 12,
    "text": "def test_top_ten_holder_recorder():",
    "annotation": "\ud83e\udde0 ML Signal: Function definition for testing, indicating a test pattern",
    "confidence": 1.0,
    "tokens": [
      4299,
      1332,
      62,
      4852,
      62,
      1452,
      62,
      13829,
      62,
      8344,
      2875,
      33529
    ],
    "start_token": 118,
    "end_token": 130,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      329,
      4856,
      11,
      12739,
      257,
      1332,
      3912
    ],
    "label": "ml_signal",
    "reason": "Function definition for testing, indicating a test pattern"
  },
  {
    "line": 14,
    "text": "    try:",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of a class with specific parameters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1949,
      25
    ],
    "start_token": 130,
    "end_token": 135,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      257,
      1398,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Instantiation of a class with specific parameters"
  },
  {
    "line": 17,
    "text": "        assert False",
    "annotation": "\ud83e\udde0 ML Signal: Method invocation on an object",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6818,
      10352
    ],
    "start_token": 135,
    "end_token": 144,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      43219,
      319,
      281,
      2134
    ],
    "label": "ml_signal",
    "reason": "Method invocation on an object"
  },
  {
    "line": 17,
    "text": "        assert False",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Catching all exceptions without handling specific errors",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6818,
      10352
    ],
    "start_token": 144,
    "end_token": 153,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      327,
      19775,
      477,
      13269,
      1231,
      9041,
      2176,
      8563
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Catching all exceptions without handling specific errors"
  },
  {
    "line": 17,
    "text": "        assert False",
    "annotation": "\u2705 Best Practice: Use specific exception types to catch expected errors",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6818,
      10352
    ],
    "start_token": 153,
    "end_token": 162,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      2176,
      6631,
      3858,
      284,
      4929,
      2938,
      8563
    ],
    "label": "best_practice",
    "reason": "Use specific exception types to catch expected errors"
  }
]