annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Grouping imports from the same module together improves readability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 17944, 422, 262, 976, 8265, 1978, 19575, 1100, 1799, 13]",1.0,26,best_practice,2,Grouping imports from the same module together improves readability.,,0,"from zvt.domain import DividendDetail, RightsIssueDetail, SpoDetail, DividendFinancing","[6738, 1976, 36540, 13, 27830, 1330, 360, 1699, 437, 11242, 603, 11, 6923, 45147, 11242, 603, 11, 49331, 11242, 603, 11, 360, 1699, 437, 18467, 5077]"
‚úÖ Best Practice: Calling initialization functions at the start of the script ensures the context is set up before use.,"[26486, 227, 6705, 19939, 25, 32677, 37588, 5499, 379, 262, 923, 286, 262, 4226, 19047, 262, 4732, 318, 900, 510, 878, 779, 13]",1.0,26,best_practice,4,Calling initialization functions at the start of the script ensures the context is set up before use.,,26,,[]
‚úÖ Best Practice: Importing constants from a dedicated module improves maintainability and readability.,"[26486, 227, 6705, 19939, 25, 17267, 278, 38491, 422, 257, 7256, 8265, 19575, 5529, 1799, 290, 1100, 1799, 13]",1.0,42,best_practice,7,Importing constants from a dedicated module improves maintainability and readability.,,26,from zvt.consts import SAMPLE_STOCK_CODES,"[6738, 1976, 36540, 13, 1102, 6448, 1330, 28844, 16437, 62, 2257, 11290, 62, 34, 3727, 1546]"
üß† ML Signal: Function definition with a specific name pattern indicating a test function,"[8582, 100, 254, 10373, 26484, 25, 15553, 6770, 351, 257, 2176, 1438, 3912, 12739, 257, 1332, 2163]",0.5,48,ml_signal,5,Function definition with a specific name pattern indicating a test function,,42,init_test_context(),"[15003, 62, 9288, 62, 22866, 3419]"
‚úÖ Best Practice: Use of try-except block to handle potential exceptions,"[26486, 227, 6705, 19939, 25, 5765, 286, 1949, 12, 16341, 2512, 284, 5412, 2785, 13269]",0.5,64,best_practice,7,Use of try-except block to handle potential exceptions,,48,from zvt.consts import SAMPLE_STOCK_CODES,"[6738, 1976, 36540, 13, 1102, 6448, 1330, 28844, 16437, 62, 2257, 11290, 62, 34, 3727, 1546]"
üß† ML Signal: Method call with specific parameters indicating a data recording operation,"[8582, 100, 254, 10373, 26484, 25, 11789, 869, 351, 2176, 10007, 12739, 257, 1366, 8296, 4905]",0.5,64,ml_signal,9,Method call with specific parameters indicating a data recording operation,,64,,[]
‚ö†Ô∏è SAST Risk (Low): Catching all exceptions without specific handling,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 327, 19775, 477, 13269, 1231, 2176, 9041]",1.0,69,sast_risk,11,Catching all exceptions without specific handling,Low,64,    try:,"[220, 220, 220, 1949, 25]"
‚úÖ Best Practice: Assertion to ensure the test fails if an exception is caught,"[26486, 227, 6705, 19939, 25, 2195, 861, 295, 284, 4155, 262, 1332, 10143, 611, 281, 6631, 318, 4978]",0.5,104,best_practice,12,Assertion to ensure the test fails if an exception is caught,,69,"        DividendDetail.record_data(provider=""eastmoney"", codes=SAMPLE_STOCK_CODES)","[220, 220, 220, 220, 220, 220, 220, 360, 1699, 437, 11242, 603, 13, 22105, 62, 7890, 7, 15234, 1304, 2625, 23316, 26316, 1600, 12416, 28, 49302, 16437, 62, 2257, 11290, 62, 34, 3727, 1546, 8]"
üß† ML Signal: Usage of a specific method with parameters can indicate common testing patterns.,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2176, 2446, 351, 10007, 460, 7603, 2219, 4856, 7572, 13]",0.5,139,ml_signal,12,Usage of a specific method with parameters can indicate common testing patterns.,,104,"        DividendDetail.record_data(provider=""eastmoney"", codes=SAMPLE_STOCK_CODES)","[220, 220, 220, 220, 220, 220, 220, 360, 1699, 437, 11242, 603, 13, 22105, 62, 7890, 7, 15234, 1304, 2625, 23316, 26316, 1600, 12416, 28, 49302, 16437, 62, 2257, 11290, 62, 34, 3727, 1546, 8]"
‚ö†Ô∏è SAST Risk (Low): Catching all exceptions without handling them can hide errors and make debugging difficult.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 327, 19775, 477, 13269, 1231, 9041, 606, 460, 7808, 8563, 290, 787, 28769, 2408, 13]",0.5,139,sast_risk,15,Catching all exceptions without handling them can hide errors and make debugging difficult.,Low,139,,[]
‚úÖ Best Practice: Use specific exception types instead of a bare except clause,"[26486, 227, 6705, 19939, 25, 5765, 2176, 6631, 3858, 2427, 286, 257, 6247, 2845, 13444]",0.5,139,best_practice,16,Use specific exception types instead of a bare except clause,,139,,[]
"üß† ML Signal: Function call with specific parameters, indicating usage pattern","[8582, 100, 254, 10373, 26484, 25, 15553, 869, 351, 2176, 10007, 11, 12739, 8748, 3912]",1.0,148,ml_signal,17,"Function call with specific parameters, indicating usage pattern",,139,def test_rights_issue_detail():,"[4299, 1332, 62, 28046, 62, 21949, 62, 49170, 33529]"
"‚ö†Ô∏è SAST Risk (Low): Bare except can catch unexpected exceptions, leading to debugging difficulties","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 38234, 2845, 460, 4929, 10059, 13269, 11, 3756, 284, 28769, 13156]",0.5,153,sast_risk,20,"Bare except can catch unexpected exceptions, leading to debugging difficulties",Low,148,    except:,"[220, 220, 220, 2845, 25]"
üß† ML Signal: Assertion pattern indicating test failure,"[8582, 100, 254, 10373, 26484, 25, 2195, 861, 295, 3912, 12739, 1332, 5287]",0.5,153,ml_signal,22,Assertion pattern indicating test failure,,153,,[]
üß† ML Signal: Function definition for testing purposes,"[8582, 100, 254, 10373, 26484, 25, 15553, 6770, 329, 4856, 4959]",1.0,158,ml_signal,20,Function definition for testing purposes,,153,    except:,"[220, 220, 220, 2845, 25]"
"üß† ML Signal: Method call with specific provider and codes, indicating usage pattern","[8582, 100, 254, 10373, 26484, 25, 11789, 869, 351, 2176, 10131, 290, 12416, 11, 12739, 8748, 3912]",1.0,158,ml_signal,22,"Method call with specific provider and codes, indicating usage pattern",,158,,[]
‚ö†Ô∏è SAST Risk (Low): Catching all exceptions without handling specific errors,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 327, 19775, 477, 13269, 1231, 9041, 2176, 8563]",1.0,166,sast_risk,24,Catching all exceptions without handling specific errors,Low,158,def test_spo_detail():,"[4299, 1332, 62, 2777, 78, 62, 49170, 33529]"
