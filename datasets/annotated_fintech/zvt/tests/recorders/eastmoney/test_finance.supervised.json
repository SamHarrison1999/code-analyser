[
  {
    "line": 2,
    "text": "from ...context import init_test_context",
    "annotation": "\u2705 Best Practice: Ensure the test context is initialized before running tests",
    "confidence": 1.0,
    "tokens": [
      6738,
      2644,
      22866,
      1330,
      2315,
      62,
      9288,
      62,
      22866
    ],
    "start_token": 0,
    "end_token": 9,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      48987,
      262,
      1332,
      4732,
      318,
      23224,
      878,
      2491,
      5254
    ],
    "label": "best_practice",
    "reason": "Ensure the test context is initialized before running tests"
  },
  {
    "line": 5,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Importing specific classes for financial data recording",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 9,
    "end_token": 9,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      2176,
      6097,
      329,
      3176,
      1366,
      8296
    ],
    "label": "ml_signal",
    "reason": "Importing specific classes for financial data recording"
  },
  {
    "line": 9,
    "text": "from zvt.recorders.eastmoney.finance.eastmoney_cash_flow_recorder import ChinaStockCashFlowRecorder",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a specific class (ChinaStockFinanceFactorRecorder) with parameters",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      8344,
      6361,
      13,
      23316,
      26316,
      13,
      69,
      14149,
      13,
      23316,
      26316,
      62,
      30350,
      62,
      11125,
      62,
      8344,
      2875,
      1330,
      2807,
      26207,
      35361,
      37535,
      6690,
      2875
    ],
    "start_token": 9,
    "end_token": 38,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      2176,
      1398,
      357,
      14581,
      26207,
      37,
      14149,
      41384,
      6690,
      2875,
      8,
      351,
      10007
    ],
    "label": "ml_signal",
    "reason": "Usage of a specific class (ChinaStockFinanceFactorRecorder) with parameters"
  },
  {
    "line": 11,
    "text": "from zvt.recorders.eastmoney.finance.eastmoney_income_statement_recorder import ChinaStockIncomeStatementRecorder",
    "annotation": "\ud83e\udde0 ML Signal: Method invocation pattern (run method on recorder object)",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      8344,
      6361,
      13,
      23316,
      26316,
      13,
      69,
      14149,
      13,
      23316,
      26316,
      62,
      12519,
      62,
      26090,
      62,
      8344,
      2875,
      1330,
      2807,
      26207,
      818,
      2958,
      48682,
      6690,
      2875
    ],
    "start_token": 38,
    "end_token": 68,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      43219,
      3912,
      357,
      5143,
      2446,
      319,
      38156,
      2134,
      8
    ],
    "label": "ml_signal",
    "reason": "Method invocation pattern (run method on recorder object)"
  },
  {
    "line": 15,
    "text": "    recorder = ChinaStockFinanceFactorRecorder(codes=SAMPLE_STOCK_CODES)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Catching all exceptions without handling specific errors",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      38156,
      796,
      2807,
      26207,
      37,
      14149,
      41384,
      6690,
      2875,
      7,
      40148,
      28,
      49302,
      16437,
      62,
      2257,
      11290,
      62,
      34,
      3727,
      1546,
      8
    ],
    "start_token": 68,
    "end_token": 93,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      327,
      19775,
      477,
      13269,
      1231,
      9041,
      2176,
      8563
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Catching all exceptions without handling specific errors"
  },
  {
    "line": 16,
    "text": "    try:",
    "annotation": "\u2705 Best Practice: Use specific exception types instead of a bare except",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1949,
      25
    ],
    "start_token": 93,
    "end_token": 98,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      2176,
      6631,
      3858,
      2427,
      286,
      257,
      6247,
      2845
    ],
    "label": "best_practice",
    "reason": "Use specific exception types instead of a bare except"
  },
  {
    "line": 14,
    "text": "def test_finance_factor_recorder():",
    "annotation": "\ud83e\udde0 ML Signal: Function definition for testing, indicating a test pattern",
    "confidence": 1.0,
    "tokens": [
      4299,
      1332,
      62,
      69,
      14149,
      62,
      31412,
      62,
      8344,
      2875,
      33529
    ],
    "start_token": 98,
    "end_token": 109,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      329,
      4856,
      11,
      12739,
      257,
      1332,
      3912
    ],
    "label": "ml_signal",
    "reason": "Function definition for testing, indicating a test pattern"
  },
  {
    "line": 16,
    "text": "    try:",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of a class with specific parameters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1949,
      25
    ],
    "start_token": 109,
    "end_token": 114,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      257,
      1398,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Instantiation of a class with specific parameters"
  },
  {
    "line": 19,
    "text": "        assert False",
    "annotation": "\ud83e\udde0 ML Signal: Method invocation on an object",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6818,
      10352
    ],
    "start_token": 114,
    "end_token": 123,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      43219,
      319,
      281,
      2134
    ],
    "label": "ml_signal",
    "reason": "Method invocation on an object"
  },
  {
    "line": 22,
    "text": "def test_cash_flow_recorder():",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Bare except clause, which can catch unexpected exceptions",
    "confidence": 0.5,
    "tokens": [
      4299,
      1332,
      62,
      30350,
      62,
      11125,
      62,
      8344,
      2875,
      33529
    ],
    "start_token": 123,
    "end_token": 133,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      38234,
      2845,
      13444,
      11,
      543,
      460,
      4929,
      10059,
      13269
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Bare except clause, which can catch unexpected exceptions"
  },
  {
    "line": 23,
    "text": "    recorder = ChinaStockCashFlowRecorder(codes=SAMPLE_STOCK_CODES)",
    "annotation": "\u2705 Best Practice: Use specific exception types in except clauses",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      38156,
      796,
      2807,
      26207,
      35361,
      37535,
      6690,
      2875,
      7,
      40148,
      28,
      49302,
      16437,
      62,
      2257,
      11290,
      62,
      34,
      3727,
      1546,
      8
    ],
    "start_token": 133,
    "end_token": 157,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      2176,
      6631,
      3858,
      287,
      2845,
      31485
    ],
    "label": "best_practice",
    "reason": "Use specific exception types in except clauses"
  },
  {
    "line": 20,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function definition for testing, indicating a test pattern",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 157,
    "end_token": 157,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      329,
      4856,
      11,
      12739,
      257,
      1332,
      3912
    ],
    "label": "ml_signal",
    "reason": "Function definition for testing, indicating a test pattern"
  },
  {
    "line": 22,
    "text": "def test_cash_flow_recorder():",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of a class with specific parameters",
    "confidence": 1.0,
    "tokens": [
      4299,
      1332,
      62,
      30350,
      62,
      11125,
      62,
      8344,
      2875,
      33529
    ],
    "start_token": 157,
    "end_token": 167,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      257,
      1398,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Instantiation of a class with specific parameters"
  },
  {
    "line": 25,
    "text": "        recorder.run()",
    "annotation": "\ud83e\udde0 ML Signal: Method invocation pattern on an object",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      38156,
      13,
      5143,
      3419
    ],
    "start_token": 167,
    "end_token": 178,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      43219,
      3912,
      319,
      281,
      2134
    ],
    "label": "ml_signal",
    "reason": "Method invocation pattern on an object"
  },
  {
    "line": 28,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Bare except can catch unexpected exceptions, making debugging difficult",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 178,
    "end_token": 178,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      38234,
      2845,
      460,
      4929,
      10059,
      13269,
      11,
      1642,
      28769,
      2408
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Bare except can catch unexpected exceptions, making debugging difficult"
  },
  {
    "line": 29,
    "text": "",
    "annotation": "\u2705 Best Practice: Use specific exception types in except blocks",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 178,
    "end_token": 178,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      2176,
      6631,
      3858,
      287,
      2845,
      7021
    ],
    "label": "best_practice",
    "reason": "Use specific exception types in except blocks"
  },
  {
    "line": 26,
    "text": "    except:",
    "annotation": "\ud83e\udde0 ML Signal: Function definition for testing, indicating a test pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      2845,
      25
    ],
    "start_token": 178,
    "end_token": 183,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      329,
      4856,
      11,
      12739,
      257,
      1332,
      3912
    ],
    "label": "ml_signal",
    "reason": "Function definition for testing, indicating a test pattern"
  },
  {
    "line": 28,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of a class with specific parameters",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 183,
    "end_token": 183,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      257,
      1398,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Instantiation of a class with specific parameters"
  },
  {
    "line": 31,
    "text": "    recorder = ChinaStockBalanceSheetRecorder(codes=SAMPLE_STOCK_CODES)",
    "annotation": "\ud83e\udde0 ML Signal: Method invocation on an object",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      38156,
      796,
      2807,
      26207,
      45866,
      3347,
      316,
      6690,
      2875,
      7,
      40148,
      28,
      49302,
      16437,
      62,
      2257,
      11290,
      62,
      34,
      3727,
      1546,
      8
    ],
    "start_token": 183,
    "end_token": 208,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      43219,
      319,
      281,
      2134
    ],
    "label": "ml_signal",
    "reason": "Method invocation on an object"
  },
  {
    "line": 31,
    "text": "    recorder = ChinaStockBalanceSheetRecorder(codes=SAMPLE_STOCK_CODES)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Catching all exceptions without handling specific errors",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      38156,
      796,
      2807,
      26207,
      45866,
      3347,
      316,
      6690,
      2875,
      7,
      40148,
      28,
      49302,
      16437,
      62,
      2257,
      11290,
      62,
      34,
      3727,
      1546,
      8
    ],
    "start_token": 208,
    "end_token": 233,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      327,
      19775,
      477,
      13269,
      1231,
      9041,
      2176,
      8563
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Catching all exceptions without handling specific errors"
  }
]