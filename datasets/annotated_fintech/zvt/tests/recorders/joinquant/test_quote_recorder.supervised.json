[
  {
    "line": 2,
    "text": "from ...context import init_test_context",
    "annotation": "\u2705 Best Practice: Ensure the test context is initialized before running tests",
    "confidence": 0.5,
    "tokens": [
      6738,
      2644,
      22866,
      1330,
      2315,
      62,
      9288,
      62,
      22866
    ],
    "start_token": 0,
    "end_token": 9,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      48987,
      262,
      1332,
      4732,
      318,
      23224,
      878,
      2491,
      5254
    ],
    "label": "best_practice",
    "reason": "Ensure the test context is initialized before running tests"
  },
  {
    "line": 5,
    "text": "",
    "annotation": "\u2705 Best Practice: Import only necessary components to keep the namespace clean",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 9,
    "end_token": 9,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      17267,
      691,
      3306,
      6805,
      284,
      1394,
      262,
      25745,
      3424
    ],
    "label": "best_practice",
    "reason": "Import only necessary components to keep the namespace clean"
  },
  {
    "line": 7,
    "text": "",
    "annotation": "\u2705 Best Practice: Use constants for configuration to improve maintainability",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 9,
    "end_token": 9,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      38491,
      329,
      8398,
      284,
      2987,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Use constants for configuration to improve maintainability"
  },
  {
    "line": 10,
    "text": "",
    "annotation": "\u2705 Best Practice: Import specific classes or functions to avoid importing unused components",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 9,
    "end_token": 9,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      17267,
      2176,
      6097,
      393,
      5499,
      284,
      3368,
      33332,
      21958,
      6805
    ],
    "label": "best_practice",
    "reason": "Import specific classes or functions to avoid importing unused components"
  },
  {
    "line": 6,
    "text": "from zvt.contract import IntervalLevel",
    "annotation": "\ud83e\udde0 ML Signal: Function definition for testing, useful for identifying test patterns",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      28484,
      1330,
      4225,
      2100,
      4971
    ],
    "start_token": 9,
    "end_token": 18,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      329,
      4856,
      11,
      4465,
      329,
      13720,
      1332,
      7572
    ],
    "label": "ml_signal",
    "reason": "Function definition for testing, useful for identifying test patterns"
  },
  {
    "line": 7,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of a class with specific parameters",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 18,
    "end_token": 18,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      257,
      1398,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Instantiation of a class with specific parameters"
  },
  {
    "line": 10,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of constants or predefined variables",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 18,
    "end_token": 18,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      38491,
      393,
      2747,
      18156,
      9633
    ],
    "label": "ml_signal",
    "reason": "Use of constants or predefined variables"
  },
  {
    "line": 14,
    "text": "        codes=SAMPLE_STOCK_CODES, sleeping_time=0, level=IntervalLevel.LEVEL_1WEEK, real_time=False",
    "annotation": "\ud83e\udde0 ML Signal: Method invocation on an object",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      12416,
      28,
      49302,
      16437,
      62,
      2257,
      11290,
      62,
      34,
      3727,
      1546,
      11,
      11029,
      62,
      2435,
      28,
      15,
      11,
      1241,
      28,
      9492,
      2100,
      4971,
      13,
      2538,
      18697,
      62,
      16,
      54,
      33823,
      11,
      1103,
      62,
      2435,
      28,
      25101
    ],
    "start_token": 18,
    "end_token": 61,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      43219,
      319,
      281,
      2134
    ],
    "label": "ml_signal",
    "reason": "Method invocation on an object"
  },
  {
    "line": 18,
    "text": "    except:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Bare except clause, which can catch unexpected exceptions",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      2845,
      25
    ],
    "start_token": 61,
    "end_token": 66,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      38234,
      2845,
      13444,
      11,
      543,
      460,
      4929,
      10059,
      13269
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Bare except clause, which can catch unexpected exceptions"
  },
  {
    "line": 14,
    "text": "        codes=SAMPLE_STOCK_CODES, sleeping_time=0, level=IntervalLevel.LEVEL_1WEEK, real_time=False",
    "annotation": "\ud83e\udde0 ML Signal: Function definition for testing, indicating a test pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      12416,
      28,
      49302,
      16437,
      62,
      2257,
      11290,
      62,
      34,
      3727,
      1546,
      11,
      11029,
      62,
      2435,
      28,
      15,
      11,
      1241,
      28,
      9492,
      2100,
      4971,
      13,
      2538,
      18697,
      62,
      16,
      54,
      33823,
      11,
      1103,
      62,
      2435,
      28,
      25101
    ],
    "start_token": 66,
    "end_token": 109,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      329,
      4856,
      11,
      12739,
      257,
      1332,
      3912
    ],
    "label": "ml_signal",
    "reason": "Function definition for testing, indicating a test pattern"
  },
  {
    "line": 15,
    "text": "    )",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of a specific class with parameters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1267
    ],
    "start_token": 109,
    "end_token": 113,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      257,
      2176,
      1398,
      351,
      10007
    ],
    "label": "ml_signal",
    "reason": "Instantiation of a specific class with parameters"
  },
  {
    "line": 19,
    "text": "        assert False",
    "annotation": "\ud83e\udde0 ML Signal: Try-except block usage pattern",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6818,
      10352
    ],
    "start_token": 113,
    "end_token": 122,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9993,
      12,
      16341,
      2512,
      8748,
      3912
    ],
    "label": "ml_signal",
    "reason": "Try-except block usage pattern"
  },
  {
    "line": 22,
    "text": "def test_1mon_kdata_recorder():",
    "annotation": "\ud83e\udde0 ML Signal: Method invocation on an object",
    "confidence": 1.0,
    "tokens": [
      4299,
      1332,
      62,
      16,
      2144,
      62,
      74,
      7890,
      62,
      8344,
      2875,
      33529
    ],
    "start_token": 122,
    "end_token": 134,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      43219,
      319,
      281,
      2134
    ],
    "label": "ml_signal",
    "reason": "Method invocation on an object"
  },
  {
    "line": 23,
    "text": "    recorder = JqChinaStockKdataRecorder(",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Bare except clause, which can catch unexpected exceptions",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      38156,
      796,
      449,
      80,
      14581,
      26207,
      42,
      7890,
      6690,
      2875,
      7
    ],
    "start_token": 134,
    "end_token": 148,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      38234,
      2845,
      13444,
      11,
      543,
      460,
      4929,
      10059,
      13269
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Bare except clause, which can catch unexpected exceptions"
  },
  {
    "line": 26,
    "text": "    try:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Assertion with a constant, which provides no error information",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1949,
      25
    ],
    "start_token": 148,
    "end_token": 153,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      2195,
      861,
      295,
      351,
      257,
      6937,
      11,
      543,
      3769,
      645,
      4049,
      1321
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Assertion with a constant, which provides no error information"
  },
  {
    "line": 22,
    "text": "def test_1mon_kdata_recorder():",
    "annotation": "\ud83e\udde0 ML Signal: Function definition for testing purposes",
    "confidence": 0.5,
    "tokens": [
      4299,
      1332,
      62,
      16,
      2144,
      62,
      74,
      7890,
      62,
      8344,
      2875,
      33529
    ],
    "start_token": 153,
    "end_token": 165,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      329,
      4856,
      4959
    ],
    "label": "ml_signal",
    "reason": "Function definition for testing purposes"
  },
  {
    "line": 23,
    "text": "    recorder = JqChinaStockKdataRecorder(",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of a specific class with parameters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      38156,
      796,
      449,
      80,
      14581,
      26207,
      42,
      7890,
      6690,
      2875,
      7
    ],
    "start_token": 165,
    "end_token": 179,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      257,
      2176,
      1398,
      351,
      10007
    ],
    "label": "ml_signal",
    "reason": "Instantiation of a specific class with parameters"
  },
  {
    "line": 29,
    "text": "        assert False",
    "annotation": "\ud83e\udde0 ML Signal: Method invocation on an object",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6818,
      10352
    ],
    "start_token": 179,
    "end_token": 188,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      43219,
      319,
      281,
      2134
    ],
    "label": "ml_signal",
    "reason": "Method invocation on an object"
  },
  {
    "line": 31,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Bare except clause, which can catch unexpected exceptions",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 188,
    "end_token": 188,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      38234,
      2845,
      13444,
      11,
      543,
      460,
      4929,
      10059,
      13269
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Bare except clause, which can catch unexpected exceptions"
  },
  {
    "line": 34,
    "text": "        codes=SAMPLE_STOCK_CODES, sleeping_time=0, level=IntervalLevel.LEVEL_1DAY, real_time=False",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Assertion with a constant value, which may not provide useful feedback",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      12416,
      28,
      49302,
      16437,
      62,
      2257,
      11290,
      62,
      34,
      3727,
      1546,
      11,
      11029,
      62,
      2435,
      28,
      15,
      11,
      1241,
      28,
      9492,
      2100,
      4971,
      13,
      2538,
      18697,
      62,
      16,
      26442,
      11,
      1103,
      62,
      2435,
      28,
      25101
    ],
    "start_token": 188,
    "end_token": 230,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      2195,
      861,
      295,
      351,
      257,
      6937,
      1988,
      11,
      543,
      743,
      407,
      2148,
      4465,
      7538
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Assertion with a constant value, which may not provide useful feedback"
  },
  {
    "line": 30,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function definition for testing, indicating a test case pattern",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 230,
    "end_token": 230,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      329,
      4856,
      11,
      12739,
      257,
      1332,
      1339,
      3912
    ],
    "label": "ml_signal",
    "reason": "Function definition for testing, indicating a test case pattern"
  },
  {
    "line": 31,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of an object with specific parameters, useful for learning object usage patterns",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 230,
    "end_token": 230,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      281,
      2134,
      351,
      2176,
      10007,
      11,
      4465,
      329,
      4673,
      2134,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Instantiation of an object with specific parameters, useful for learning object usage patterns"
  },
  {
    "line": 37,
    "text": "        recorder.run()",
    "annotation": "\ud83e\udde0 ML Signal: Method call on an object, indicating a usage pattern",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      38156,
      13,
      5143,
      3419
    ],
    "start_token": 230,
    "end_token": 241,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      869,
      319,
      281,
      2134,
      11,
      12739,
      257,
      8748,
      3912
    ],
    "label": "ml_signal",
    "reason": "Method call on an object, indicating a usage pattern"
  },
  {
    "line": 39,
    "text": "        assert False",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Bare except clause, which can catch unexpected exceptions and make debugging difficult",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6818,
      10352
    ],
    "start_token": 241,
    "end_token": 250,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      38234,
      2845,
      13444,
      11,
      543,
      460,
      4929,
      10059,
      13269,
      290,
      787,
      28769,
      2408
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Bare except clause, which can catch unexpected exceptions and make debugging difficult"
  },
  {
    "line": 38,
    "text": "    except:",
    "annotation": "\ud83e\udde0 ML Signal: Function definition for testing purposes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2845,
      25
    ],
    "start_token": 250,
    "end_token": 255,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      329,
      4856,
      4959
    ],
    "label": "ml_signal",
    "reason": "Function definition for testing purposes"
  },
  {
    "line": 39,
    "text": "        assert False",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of a specific class with parameters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6818,
      10352
    ],
    "start_token": 255,
    "end_token": 264,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      257,
      2176,
      1398,
      351,
      10007
    ],
    "label": "ml_signal",
    "reason": "Instantiation of a specific class with parameters"
  },
  {
    "line": 49,
    "text": "        assert False",
    "annotation": "\ud83e\udde0 ML Signal: Method invocation on an object",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6818,
      10352
    ],
    "start_token": 264,
    "end_token": 273,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      43219,
      319,
      281,
      2134
    ],
    "label": "ml_signal",
    "reason": "Method invocation on an object"
  },
  {
    "line": 51,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Catching all exceptions without handling",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 273,
    "end_token": 273,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      327,
      19775,
      477,
      13269,
      1231,
      9041
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Catching all exceptions without handling"
  },
  {
    "line": 50,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function definition with a specific test case name",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 273,
    "end_token": 273,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      351,
      257,
      2176,
      1332,
      1339,
      1438
    ],
    "label": "ml_signal",
    "reason": "Function definition with a specific test case name"
  },
  {
    "line": 51,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of a class with specific parameters",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 273,
    "end_token": 273,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      257,
      1398,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Instantiation of a class with specific parameters"
  },
  {
    "line": 54,
    "text": "        codes=[\"000338\"],",
    "annotation": "\ud83e\udde0 ML Signal: Use of specific stock codes and parameters",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      12416,
      28,
      14692,
      830,
      28460,
      33116
    ],
    "start_token": 273,
    "end_token": 286,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2176,
      4283,
      12416,
      290,
      10007
    ],
    "label": "ml_signal",
    "reason": "Use of specific stock codes and parameters"
  },
  {
    "line": 57,
    "text": "        real_time=False,",
    "annotation": "\ud83e\udde0 ML Signal: Method invocation on an object",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1103,
      62,
      2435,
      28,
      25101,
      11
    ],
    "start_token": 286,
    "end_token": 299,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      43219,
      319,
      281,
      2134
    ],
    "label": "ml_signal",
    "reason": "Method invocation on an object"
  },
  {
    "line": 57,
    "text": "        real_time=False,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Catching all exceptions without handling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1103,
      62,
      2435,
      28,
      25101,
      11
    ],
    "start_token": 299,
    "end_token": 312,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      327,
      19775,
      477,
      13269,
      1231,
      9041
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Catching all exceptions without handling"
  },
  {
    "line": 57,
    "text": "        real_time=False,",
    "annotation": "\u2705 Best Practice: Use specific exception types for better error handling",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1103,
      62,
      2435,
      28,
      25101,
      11
    ],
    "start_token": 312,
    "end_token": 325,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      2176,
      6631,
      3858,
      329,
      1365,
      4049,
      9041
    ],
    "label": "best_practice",
    "reason": "Use specific exception types for better error handling"
  }
]