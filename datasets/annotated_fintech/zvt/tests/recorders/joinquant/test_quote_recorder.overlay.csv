annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Ensure the test context is initialized before running tests,"[26486, 227, 6705, 19939, 25, 48987, 262, 1332, 4732, 318, 23224, 878, 2491, 5254]",0.5,9,best_practice,2,Ensure the test context is initialized before running tests,,0,from ...context import init_test_context,"[6738, 2644, 22866, 1330, 2315, 62, 9288, 62, 22866]"
‚úÖ Best Practice: Import only necessary components to keep the namespace clean,"[26486, 227, 6705, 19939, 25, 17267, 691, 3306, 6805, 284, 1394, 262, 25745, 3424]",0.5,9,best_practice,5,Import only necessary components to keep the namespace clean,,9,,[]
‚úÖ Best Practice: Use constants for configuration to improve maintainability,"[26486, 227, 6705, 19939, 25, 5765, 38491, 329, 8398, 284, 2987, 5529, 1799]",0.5,9,best_practice,7,Use constants for configuration to improve maintainability,,9,,[]
‚úÖ Best Practice: Import specific classes or functions to avoid importing unused components,"[26486, 227, 6705, 19939, 25, 17267, 2176, 6097, 393, 5499, 284, 3368, 33332, 21958, 6805]",0.5,9,best_practice,10,Import specific classes or functions to avoid importing unused components,,9,,[]
"üß† ML Signal: Function definition for testing, useful for identifying test patterns","[8582, 100, 254, 10373, 26484, 25, 15553, 6770, 329, 4856, 11, 4465, 329, 13720, 1332, 7572]",1.0,18,ml_signal,6,"Function definition for testing, useful for identifying test patterns",,9,from zvt.contract import IntervalLevel,"[6738, 1976, 36540, 13, 28484, 1330, 4225, 2100, 4971]"
üß† ML Signal: Instantiation of a class with specific parameters,"[8582, 100, 254, 10373, 26484, 25, 24470, 3920, 286, 257, 1398, 351, 2176, 10007]",0.5,18,ml_signal,7,Instantiation of a class with specific parameters,,18,,[]
üß† ML Signal: Use of constants or predefined variables,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 38491, 393, 2747, 18156, 9633]",0.5,18,ml_signal,10,Use of constants or predefined variables,,18,,[]
üß† ML Signal: Method invocation on an object,"[8582, 100, 254, 10373, 26484, 25, 11789, 43219, 319, 281, 2134]",0.5,61,ml_signal,14,Method invocation on an object,,18,"        codes=SAMPLE_STOCK_CODES, sleeping_time=0, level=IntervalLevel.LEVEL_1WEEK, real_time=False","[220, 220, 220, 220, 220, 220, 220, 12416, 28, 49302, 16437, 62, 2257, 11290, 62, 34, 3727, 1546, 11, 11029, 62, 2435, 28, 15, 11, 1241, 28, 9492, 2100, 4971, 13, 2538, 18697, 62, 16, 54, 33823, 11, 1103, 62, 2435, 28, 25101]"
"‚ö†Ô∏è SAST Risk (Low): Bare except clause, which can catch unexpected exceptions","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 38234, 2845, 13444, 11, 543, 460, 4929, 10059, 13269]",1.0,66,sast_risk,18,"Bare except clause, which can catch unexpected exceptions",Low,61,    except:,"[220, 220, 220, 2845, 25]"
"üß† ML Signal: Function definition for testing, indicating a test pattern","[8582, 100, 254, 10373, 26484, 25, 15553, 6770, 329, 4856, 11, 12739, 257, 1332, 3912]",1.0,109,ml_signal,14,"Function definition for testing, indicating a test pattern",,66,"        codes=SAMPLE_STOCK_CODES, sleeping_time=0, level=IntervalLevel.LEVEL_1WEEK, real_time=False","[220, 220, 220, 220, 220, 220, 220, 12416, 28, 49302, 16437, 62, 2257, 11290, 62, 34, 3727, 1546, 11, 11029, 62, 2435, 28, 15, 11, 1241, 28, 9492, 2100, 4971, 13, 2538, 18697, 62, 16, 54, 33823, 11, 1103, 62, 2435, 28, 25101]"
üß† ML Signal: Instantiation of a specific class with parameters,"[8582, 100, 254, 10373, 26484, 25, 24470, 3920, 286, 257, 2176, 1398, 351, 10007]",1.0,113,ml_signal,15,Instantiation of a specific class with parameters,,109,    ),"[220, 220, 220, 1267]"
üß† ML Signal: Try-except block usage pattern,"[8582, 100, 254, 10373, 26484, 25, 9993, 12, 16341, 2512, 8748, 3912]",0.5,122,ml_signal,19,Try-except block usage pattern,,113,        assert False,"[220, 220, 220, 220, 220, 220, 220, 6818, 10352]"
üß† ML Signal: Method invocation on an object,"[8582, 100, 254, 10373, 26484, 25, 11789, 43219, 319, 281, 2134]",1.0,134,ml_signal,22,Method invocation on an object,,122,def test_1mon_kdata_recorder():,"[4299, 1332, 62, 16, 2144, 62, 74, 7890, 62, 8344, 2875, 33529]"
"‚ö†Ô∏è SAST Risk (Low): Bare except clause, which can catch unexpected exceptions","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 38234, 2845, 13444, 11, 543, 460, 4929, 10059, 13269]",1.0,148,sast_risk,23,"Bare except clause, which can catch unexpected exceptions",Low,134,    recorder = JqChinaStockKdataRecorder(,"[220, 220, 220, 38156, 796, 449, 80, 14581, 26207, 42, 7890, 6690, 2875, 7]"
"‚ö†Ô∏è SAST Risk (Low): Assertion with a constant, which provides no error information","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 861, 295, 351, 257, 6937, 11, 543, 3769, 645, 4049, 1321]",0.5,153,sast_risk,26,"Assertion with a constant, which provides no error information",Low,148,    try:,"[220, 220, 220, 1949, 25]"
üß† ML Signal: Function definition for testing purposes,"[8582, 100, 254, 10373, 26484, 25, 15553, 6770, 329, 4856, 4959]",0.5,165,ml_signal,22,Function definition for testing purposes,,153,def test_1mon_kdata_recorder():,"[4299, 1332, 62, 16, 2144, 62, 74, 7890, 62, 8344, 2875, 33529]"
üß† ML Signal: Instantiation of a specific class with parameters,"[8582, 100, 254, 10373, 26484, 25, 24470, 3920, 286, 257, 2176, 1398, 351, 10007]",1.0,179,ml_signal,23,Instantiation of a specific class with parameters,,165,    recorder = JqChinaStockKdataRecorder(,"[220, 220, 220, 38156, 796, 449, 80, 14581, 26207, 42, 7890, 6690, 2875, 7]"
üß† ML Signal: Method invocation on an object,"[8582, 100, 254, 10373, 26484, 25, 11789, 43219, 319, 281, 2134]",1.0,188,ml_signal,29,Method invocation on an object,,179,        assert False,"[220, 220, 220, 220, 220, 220, 220, 6818, 10352]"
"‚ö†Ô∏è SAST Risk (Low): Bare except clause, which can catch unexpected exceptions","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 38234, 2845, 13444, 11, 543, 460, 4929, 10059, 13269]",1.0,188,sast_risk,31,"Bare except clause, which can catch unexpected exceptions",Low,188,,[]
"‚ö†Ô∏è SAST Risk (Low): Assertion with a constant value, which may not provide useful feedback","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 861, 295, 351, 257, 6937, 1988, 11, 543, 743, 407, 2148, 4465, 7538]",0.5,230,sast_risk,34,"Assertion with a constant value, which may not provide useful feedback",Low,188,"        codes=SAMPLE_STOCK_CODES, sleeping_time=0, level=IntervalLevel.LEVEL_1DAY, real_time=False","[220, 220, 220, 220, 220, 220, 220, 12416, 28, 49302, 16437, 62, 2257, 11290, 62, 34, 3727, 1546, 11, 11029, 62, 2435, 28, 15, 11, 1241, 28, 9492, 2100, 4971, 13, 2538, 18697, 62, 16, 26442, 11, 1103, 62, 2435, 28, 25101]"
"üß† ML Signal: Function definition for testing, indicating a test case pattern","[8582, 100, 254, 10373, 26484, 25, 15553, 6770, 329, 4856, 11, 12739, 257, 1332, 1339, 3912]",1.0,230,ml_signal,30,"Function definition for testing, indicating a test case pattern",,230,,[]
"üß† ML Signal: Instantiation of an object with specific parameters, useful for learning object usage patterns","[8582, 100, 254, 10373, 26484, 25, 24470, 3920, 286, 281, 2134, 351, 2176, 10007, 11, 4465, 329, 4673, 2134, 8748, 7572]",0.5,230,ml_signal,31,"Instantiation of an object with specific parameters, useful for learning object usage patterns",,230,,[]
"üß† ML Signal: Method call on an object, indicating a usage pattern","[8582, 100, 254, 10373, 26484, 25, 11789, 869, 319, 281, 2134, 11, 12739, 257, 8748, 3912]",1.0,241,ml_signal,37,"Method call on an object, indicating a usage pattern",,230,        recorder.run(),"[220, 220, 220, 220, 220, 220, 220, 38156, 13, 5143, 3419]"
"‚ö†Ô∏è SAST Risk (Low): Bare except clause, which can catch unexpected exceptions and make debugging difficult","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 38234, 2845, 13444, 11, 543, 460, 4929, 10059, 13269, 290, 787, 28769, 2408]",0.5,250,sast_risk,39,"Bare except clause, which can catch unexpected exceptions and make debugging difficult",Low,241,        assert False,"[220, 220, 220, 220, 220, 220, 220, 6818, 10352]"
üß† ML Signal: Function definition for testing purposes,"[8582, 100, 254, 10373, 26484, 25, 15553, 6770, 329, 4856, 4959]",0.5,255,ml_signal,38,Function definition for testing purposes,,250,    except:,"[220, 220, 220, 2845, 25]"
üß† ML Signal: Instantiation of a specific class with parameters,"[8582, 100, 254, 10373, 26484, 25, 24470, 3920, 286, 257, 2176, 1398, 351, 10007]",1.0,264,ml_signal,39,Instantiation of a specific class with parameters,,255,        assert False,"[220, 220, 220, 220, 220, 220, 220, 6818, 10352]"
üß† ML Signal: Method invocation on an object,"[8582, 100, 254, 10373, 26484, 25, 11789, 43219, 319, 281, 2134]",1.0,273,ml_signal,49,Method invocation on an object,,264,        assert False,"[220, 220, 220, 220, 220, 220, 220, 6818, 10352]"
‚ö†Ô∏è SAST Risk (Low): Catching all exceptions without handling,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 327, 19775, 477, 13269, 1231, 9041]",1.0,273,sast_risk,51,Catching all exceptions without handling,Low,273,,[]
üß† ML Signal: Function definition with a specific test case name,"[8582, 100, 254, 10373, 26484, 25, 15553, 6770, 351, 257, 2176, 1332, 1339, 1438]",0.5,273,ml_signal,50,Function definition with a specific test case name,,273,,[]
üß† ML Signal: Instantiation of a class with specific parameters,"[8582, 100, 254, 10373, 26484, 25, 24470, 3920, 286, 257, 1398, 351, 2176, 10007]",1.0,273,ml_signal,51,Instantiation of a class with specific parameters,,273,,[]
üß† ML Signal: Use of specific stock codes and parameters,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2176, 4283, 12416, 290, 10007]",0.5,286,ml_signal,54,Use of specific stock codes and parameters,,273,"        codes=[""000338""],","[220, 220, 220, 220, 220, 220, 220, 12416, 28, 14692, 830, 28460, 33116]"
üß† ML Signal: Method invocation on an object,"[8582, 100, 254, 10373, 26484, 25, 11789, 43219, 319, 281, 2134]",1.0,299,ml_signal,57,Method invocation on an object,,286,"        real_time=False,","[220, 220, 220, 220, 220, 220, 220, 1103, 62, 2435, 28, 25101, 11]"
‚ö†Ô∏è SAST Risk (Low): Catching all exceptions without handling,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 327, 19775, 477, 13269, 1231, 9041]",0.5,312,sast_risk,57,Catching all exceptions without handling,Low,299,"        real_time=False,","[220, 220, 220, 220, 220, 220, 220, 1103, 62, 2435, 28, 25101, 11]"
‚úÖ Best Practice: Use specific exception types for better error handling,"[26486, 227, 6705, 19939, 25, 5765, 2176, 6631, 3858, 329, 1365, 4049, 9041]",0.5,325,best_practice,57,Use specific exception types for better error handling,,312,"        real_time=False,","[220, 220, 220, 220, 220, 220, 220, 1103, 62, 2435, 28, 25101, 11]"
