annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Importing specific types from typing for type hinting improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 17267, 278, 2176, 3858, 422, 19720, 329, 2099, 9254, 278, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,6,best_practice,4,Importing specific types from typing for type hinting improves code readability and maintainability.,,0,init_test_context(),"[15003, 62, 9288, 62, 22866, 3419]"
üß† ML Signal: Usage of a specific provider and database name can indicate user preferences or common configurations.,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2176, 10131, 290, 6831, 1438, 460, 7603, 2836, 15387, 393, 2219, 25412, 13]",1.0,6,ml_signal,7,Usage of a specific provider and database name can indicate user preferences or common configurations.,,6,,[]
‚ö†Ô∏è SAST Risk (Low): Hardcoding provider and db_name can lead to inflexibility and potential misconfigurations.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 66, 7656, 10131, 290, 20613, 62, 3672, 460, 1085, 284, 1167, 2588, 2247, 290, 2785, 2984, 11250, 20074, 13]",0.5,24,sast_risk,8,Hardcoding provider and db_name can lead to inflexibility and potential misconfigurations.,Low,6,"from zvt.domain import TopTenHolder, TopTenTradableHolder","[6738, 1976, 36540, 13, 27830, 1330, 5849, 24893, 39, 19892, 11, 5849, 24893, 2898, 324, 540, 39, 19892]"
üß† ML Signal: Function name follows a pattern indicating a test case,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 3912, 12739, 257, 1332, 1339]",0.5,24,ml_signal,7,Function name follows a pattern indicating a test case,,24,,[]
üß† ML Signal: Use of type hinting for variable 'result',"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2099, 9254, 278, 329, 7885, 705, 20274, 6]",0.5,42,ml_signal,8,Use of type hinting for variable 'result',,24,"from zvt.domain import TopTenHolder, TopTenTradableHolder","[6738, 1976, 36540, 13, 27830, 1330, 5849, 24893, 39, 19892, 11, 5849, 24893, 2898, 324, 540, 39, 19892]"
‚ö†Ô∏è SAST Risk (Low): Hardcoded database query parameters,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 6831, 12405, 10007]",0.5,60,sast_risk,8,Hardcoded database query parameters,Low,42,"from zvt.domain import TopTenHolder, TopTenTradableHolder","[6738, 1976, 36540, 13, 27830, 1330, 5849, 24893, 39, 19892, 11, 5849, 24893, 2898, 324, 540, 39, 19892]"
‚úÖ Best Practice: Use of method chaining for query ordering,"[26486, 227, 6705, 19939, 25, 5765, 286, 2446, 442, 1397, 329, 12405, 16216]",0.5,73,best_practice,18,Use of method chaining for query ordering,,60,"        return_type=""domain"",","[220, 220, 220, 220, 220, 220, 220, 1441, 62, 4906, 2625, 27830, 1600]"
‚úÖ Best Practice: Use of assertions for test validation,"[26486, 227, 6705, 19939, 25, 5765, 286, 29965, 329, 1332, 21201]",1.0,91,best_practice,21,Use of assertions for test validation,,73,"        start_timestamp=""2018-09-30"",","[220, 220, 220, 220, 220, 220, 220, 923, 62, 16514, 27823, 2625, 7908, 12, 2931, 12, 1270, 1600]"
‚ö†Ô∏è SAST Risk (Low): Hardcoded expected values in assertions,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 2938, 3815, 287, 29965]",0.5,95,sast_risk,23,Hardcoded expected values in assertions,Low,91,    ),"[220, 220, 220, 1267]"
‚ö†Ô∏è SAST Risk (Low): Hardcoded expected values in assertions,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 2938, 3815, 287, 29965]",0.5,105,sast_risk,24,Hardcoded expected values in assertions,Low,95,    assert len(result) == 10,"[220, 220, 220, 6818, 18896, 7, 20274, 8, 6624, 838]"
‚ö†Ô∏è SAST Risk (Low): Hardcoded expected values in assertions,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 2938, 3815, 287, 29965]",0.5,115,sast_risk,24,Hardcoded expected values in assertions,Low,105,    assert len(result) == 10,"[220, 220, 220, 6818, 18896, 7, 20274, 8, 6624, 838]"
‚ö†Ô∏è SAST Risk (Low): Hardcoded expected values in assertions,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 2938, 3815, 287, 29965]",0.5,140,sast_risk,33,Hardcoded expected values in assertions,Low,115,    result: List[TopTenHolder] = TopTenTradableHolder.query_data(,"[220, 220, 220, 1255, 25, 7343, 58, 9126, 24893, 39, 19892, 60, 796, 5849, 24893, 2898, 324, 540, 39, 19892, 13, 22766, 62, 7890, 7]"
‚ö†Ô∏è SAST Risk (Low): Hardcoded expected values in assertions,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 2938, 3815, 287, 29965]",0.5,165,sast_risk,33,Hardcoded expected values in assertions,Low,140,    result: List[TopTenHolder] = TopTenTradableHolder.query_data(,"[220, 220, 220, 1255, 25, 7343, 58, 9126, 24893, 39, 19892, 60, 796, 5849, 24893, 2898, 324, 540, 39, 19892, 13, 22766, 62, 7890, 7]"
üß† ML Signal: Function name follows a pattern indicating it's a test function,"[8582, 100, 254, 10373, 26484, 25, 15553, 1438, 5679, 257, 3912, 12739, 340, 338, 257, 1332, 2163]",1.0,169,ml_signal,23,Function name follows a pattern indicating it's a test function,,165,    ),"[220, 220, 220, 1267]"
üß† ML Signal: Type hinting used for variable 'result',"[8582, 100, 254, 10373, 26484, 25, 5994, 9254, 278, 973, 329, 7885, 705, 20274, 6]",0.5,179,ml_signal,24,Type hinting used for variable 'result',,169,    assert len(result) == 10,"[220, 220, 220, 6818, 18896, 7, 20274, 8, 6624, 838]"
‚ö†Ô∏è SAST Risk (Low): Hardcoded credentials or sensitive data might be used in 'session',"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 18031, 393, 8564, 1366, 1244, 307, 973, 287, 705, 29891, 6]",0.5,189,sast_risk,24,Hardcoded credentials or sensitive data might be used in 'session',Low,179,    assert len(result) == 10,"[220, 220, 220, 6818, 18896, 7, 20274, 8, 6624, 838]"
üß† ML Signal: Use of a specific provider indicates a dependency on external data source,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 2176, 10131, 9217, 257, 20203, 319, 7097, 1366, 2723]",1.0,214,ml_signal,33,Use of a specific provider indicates a dependency on external data source,,189,    result: List[TopTenHolder] = TopTenTradableHolder.query_data(,"[220, 220, 220, 1255, 25, 7343, 58, 9126, 24893, 39, 19892, 60, 796, 5849, 24893, 2898, 324, 540, 39, 19892, 13, 22766, 62, 7890, 7]"
üß† ML Signal: Use of 'return_type' parameter suggests flexibility in data handling,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 705, 7783, 62, 4906, 6, 11507, 5644, 13688, 287, 1366, 9041]",0.5,239,ml_signal,33,Use of 'return_type' parameter suggests flexibility in data handling,,214,    result: List[TopTenHolder] = TopTenTradableHolder.query_data(,"[220, 220, 220, 1255, 25, 7343, 58, 9126, 24893, 39, 19892, 60, 796, 5849, 24893, 2898, 324, 540, 39, 19892, 13, 22766, 62, 7890, 7]"
"üß† ML Signal: Specific stock code used, indicating a focus on particular data","[8582, 100, 254, 10373, 26484, 25, 17377, 4283, 2438, 973, 11, 12739, 257, 2962, 319, 1948, 1366]",0.5,264,ml_signal,33,"Specific stock code used, indicating a focus on particular data",,239,    result: List[TopTenHolder] = TopTenTradableHolder.query_data(,"[220, 220, 220, 1255, 25, 7343, 58, 9126, 24893, 39, 19892, 60, 796, 5849, 24893, 2898, 324, 540, 39, 19892, 13, 22766, 62, 7890, 7]"
‚ö†Ô∏è SAST Risk (Low): Hardcoded timestamps could lead to outdated data usage,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 6912, 40976, 4628, 395, 9430, 714, 1085, 284, 23572, 1366, 8748]",0.5,276,sast_risk,35,Hardcoded timestamps could lead to outdated data usage,Low,264,"        provider=""eastmoney"",","[220, 220, 220, 220, 220, 220, 220, 10131, 2625, 23316, 26316, 1600]"
üß† ML Signal: Use of ordering in query indicates importance of data sorting,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 16216, 287, 12405, 9217, 6817, 286, 1366, 29407]",1.0,294,ml_signal,38,Use of ordering in query indicates importance of data sorting,,276,"        end_timestamp=""2018-09-30"",","[220, 220, 220, 220, 220, 220, 220, 886, 62, 16514, 27823, 2625, 7908, 12, 2931, 12, 1270, 1600]"
‚úÖ Best Practice: Asserting the length of the result ensures expected data size,"[26486, 227, 6705, 19939, 25, 2195, 861, 278, 262, 4129, 286, 262, 1255, 19047, 2938, 1366, 2546]",0.5,312,best_practice,38,Asserting the length of the result ensures expected data size,,294,"        end_timestamp=""2018-09-30"",","[220, 220, 220, 220, 220, 220, 220, 886, 62, 16514, 27823, 2625, 7908, 12, 2931, 12, 1270, 1600]"
‚úÖ Best Practice: Asserting specific values ensures data integrity and correctness,"[26486, 227, 6705, 19939, 25, 2195, 861, 278, 2176, 3815, 19047, 1366, 11540, 290, 29409]",0.5,330,best_practice,38,Asserting specific values ensures data integrity and correctness,,312,"        end_timestamp=""2018-09-30"",","[220, 220, 220, 220, 220, 220, 220, 886, 62, 16514, 27823, 2625, 7908, 12, 2931, 12, 1270, 1600]"
