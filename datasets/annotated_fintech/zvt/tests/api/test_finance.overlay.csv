annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
üß† ML Signal: Importing specific modules and functions indicates usage patterns and dependencies,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 13103, 290, 5499, 9217, 8748, 7572, 290, 20086]",0.5,6,ml_signal,3,Importing specific modules and functions indicates usage patterns and dependencies,,0,init_test_context(),"[15003, 62, 9288, 62, 22866, 3419]"
üß† ML Signal: Importing specific modules and functions indicates usage patterns and dependencies,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 13103, 290, 5499, 9217, 8748, 7572, 290, 20086]",0.5,25,ml_signal,5,Importing specific modules and functions indicates usage patterns and dependencies,,6,"from zvt.domain import FinanceFactor, BalanceSheet, IncomeStatement, CashFlowStatement","[6738, 1976, 36540, 13, 27830, 1330, 15007, 41384, 11, 22924, 3347, 316, 11, 19003, 48682, 11, 16210, 37535, 48682]"
üß† ML Signal: Importing specific modules and functions indicates usage patterns and dependencies,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 13103, 290, 5499, 9217, 8748, 7572, 290, 20086]",0.5,40,ml_signal,7,Importing specific modules and functions indicates usage patterns and dependencies,,25,from zvt.utils.time_utils import to_time_str,"[6738, 1976, 36540, 13, 26791, 13, 2435, 62, 26791, 1330, 284, 62, 2435, 62, 2536]"
üß† ML Signal: Usage of a specific database provider and name indicates a pattern in data source preferences,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2176, 6831, 10131, 290, 1438, 9217, 257, 3912, 287, 1366, 2723, 15387]",0.5,40,ml_signal,8,Usage of a specific database provider and name indicates a pattern in data source preferences,,40,,[]
üß† ML Signal: Use of hardcoded timestamps for testing,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1327, 40976, 4628, 395, 9430, 329, 4856]",1.0,40,ml_signal,8,Use of hardcoded timestamps for testing,,40,,[]
üß† ML Signal: Querying data from a database with specific parameters,"[8582, 100, 254, 10373, 26484, 25, 2264, 263, 1112, 1366, 422, 257, 6831, 351, 2176, 10007]",1.0,54,ml_signal,101,Querying data from a database with specific parameters,,40,"        ""1993-06-30"",","[220, 220, 220, 220, 220, 220, 220, 366, 24465, 12, 3312, 12, 1270, 1600]"
‚úÖ Best Practice: Asserting the length of results to ensure data integrity,"[26486, 227, 6705, 19939, 25, 2195, 861, 278, 262, 4129, 286, 2482, 284, 4155, 1366, 11540]",1.0,72,best_practice,112,Asserting the length of results to ensure data integrity,,54,"        end_timestamp=""2018-12-30"",","[220, 220, 220, 220, 220, 220, 220, 886, 62, 16514, 27823, 2625, 7908, 12, 1065, 12, 1270, 1600]"
üß† ML Signal: Conversion of date objects to string format,"[8582, 100, 254, 10373, 26484, 25, 44101, 286, 3128, 5563, 284, 4731, 5794]",1.0,87,ml_signal,114,Conversion of date objects to string format,,72,"        time_field=""report_date"",","[220, 220, 220, 220, 220, 220, 220, 640, 62, 3245, 2625, 13116, 62, 4475, 1600]"
‚úÖ Best Practice: Using set comparison to ensure all timestamps match,"[26486, 227, 6705, 19939, 25, 8554, 900, 7208, 284, 4155, 477, 4628, 395, 9430, 2872]",0.5,104,best_practice,116,Using set comparison to ensure all timestamps match,,87,    assert len(correct_timestamps) == len(result),"[220, 220, 220, 6818, 18896, 7, 30283, 62, 16514, 395, 9430, 8, 6624, 18896, 7, 20274, 8]"
üß† ML Signal: Accessing the first element of a result set,"[8582, 100, 254, 10373, 26484, 25, 8798, 278, 262, 717, 5002, 286, 257, 1255, 900]",0.5,123,ml_signal,118,Accessing the first element of a result set,,104,    assert set(correct_timestamps) == set(timestamps),"[220, 220, 220, 6818, 900, 7, 30283, 62, 16514, 395, 9430, 8, 6624, 900, 7, 16514, 395, 9430, 8]"
‚úÖ Best Practice: Asserting specific financial metrics for validation,"[26486, 227, 6705, 19939, 25, 2195, 861, 278, 2176, 3176, 20731, 329, 21201]",1.0,136,best_practice,120,Asserting specific financial metrics for validation,,123,    assert latest.basic_eps == 1.14,"[220, 220, 220, 6818, 3452, 13, 35487, 62, 25386, 6624, 352, 13, 1415]"
üß† ML Signal: Hardcoded list of timestamps could indicate a pattern for expected data ranges,"[8582, 100, 254, 10373, 26484, 25, 6912, 40976, 1351, 286, 4628, 395, 9430, 714, 7603, 257, 3912, 329, 2938, 1366, 16069]",0.5,155,ml_signal,143,Hardcoded list of timestamps could indicate a pattern for expected data ranges,,136,    assert latest.debt_asset_ratio == 0.9298,"[220, 220, 220, 6818, 3452, 13, 11275, 83, 62, 562, 316, 62, 10366, 952, 6624, 657, 13, 24, 27728]"
üß† ML Signal: Querying data with specific parameters can indicate common usage patterns,"[8582, 100, 254, 10373, 26484, 25, 2264, 263, 1112, 1366, 351, 2176, 10007, 460, 7603, 2219, 8748, 7572]",0.5,169,ml_signal,233,Querying data with specific parameters can indicate common usage patterns,,155,"        ""1997-06-30"",","[220, 220, 220, 220, 220, 220, 220, 366, 21498, 12, 3312, 12, 1270, 1600]"
‚úÖ Best Practice: Asserting the length of results ensures data consistency,"[26486, 227, 6705, 19939, 25, 2195, 861, 278, 262, 4129, 286, 2482, 19047, 1366, 15794]",1.0,183,best_practice,244,Asserting the length of results ensures data consistency,,169,"        ""1989-12-31"",","[220, 220, 220, 220, 220, 220, 220, 366, 25475, 12, 1065, 12, 3132, 1600]"
üß† ML Signal: Converting dates to strings is a common pattern for date handling,"[8582, 100, 254, 10373, 26484, 25, 35602, 889, 9667, 284, 13042, 318, 257, 2219, 3912, 329, 3128, 9041]",0.5,196,ml_signal,246,Converting dates to strings is a common pattern for date handling,,183,    result = BalanceSheet.query_data(,"[220, 220, 220, 1255, 796, 22924, 3347, 316, 13, 22766, 62, 7890, 7]"
‚úÖ Best Practice: Using set comparison for lists ensures order does not affect equality,"[26486, 227, 6705, 19939, 25, 8554, 900, 7208, 329, 8341, 19047, 1502, 857, 407, 2689, 10537]",0.5,208,best_practice,248,Using set comparison for lists ensures order does not affect equality,,196,"        provider=""eastmoney"",","[220, 220, 220, 220, 220, 220, 220, 10131, 2625, 23316, 26316, 1600]"
‚úÖ Best Practice: Type hinting improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5994, 9254, 278, 19575, 2438, 1100, 1799, 290, 5529, 1799]",0.5,221,best_practice,250,Type hinting improves code readability and maintainability,,208,"        codes=[""000001""],","[220, 220, 220, 220, 220, 220, 220, 12416, 28, 14692, 2388, 486, 33116]"
‚úÖ Best Practice: Asserting specific values ensures data integrity and correctness,"[26486, 227, 6705, 19939, 25, 2195, 861, 278, 2176, 3815, 19047, 1366, 11540, 290, 29409]",0.5,240,best_practice,252,Asserting specific values ensures data integrity and correctness,,221,"        order=BalanceSheet.report_date.desc(),","[220, 220, 220, 220, 220, 220, 220, 1502, 28, 45866, 3347, 316, 13, 13116, 62, 4475, 13, 20147, 22784]"
üß† ML Signal: Hardcoded timestamps could indicate a pattern in data retrieval or testing.,"[8582, 100, 254, 10373, 26484, 25, 6912, 40976, 4628, 395, 9430, 714, 7603, 257, 3912, 287, 1366, 45069, 393, 4856, 13]",0.5,255,ml_signal,288,Hardcoded timestamps could indicate a pattern in data retrieval or testing.,,240,    assert latest.taxes_payable == 7595000000,"[220, 220, 220, 6818, 3452, 13, 19290, 274, 62, 15577, 540, 6624, 767, 35124, 10535]"
üß† ML Signal: Querying data with specific parameters can indicate typical usage patterns.,"[8582, 100, 254, 10373, 26484, 25, 2264, 263, 1112, 1366, 351, 2176, 10007, 460, 7603, 7226, 8748, 7572, 13]",0.5,269,ml_signal,381,Querying data with specific parameters can indicate typical usage patterns.,,255,"        ""2000-12-31"",","[220, 220, 220, 220, 220, 220, 220, 366, 11024, 12, 1065, 12, 3132, 1600]"
‚ö†Ô∏è SAST Risk (Low): Ensure that the session object is properly managed to prevent resource leaks.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 326, 262, 6246, 2134, 318, 6105, 5257, 284, 2948, 8271, 17316, 13]",0.5,283,sast_risk,381,Ensure that the session object is properly managed to prevent resource leaks.,Low,269,"        ""2000-12-31"",","[220, 220, 220, 220, 220, 220, 220, 366, 11024, 12, 1065, 12, 3132, 1600]"
‚úÖ Best Practice: Asserting the length of results ensures data consistency.,"[26486, 227, 6705, 19939, 25, 2195, 861, 278, 262, 4129, 286, 2482, 19047, 1366, 15794, 13]",1.0,297,best_practice,393,Asserting the length of results ensures data consistency.,,283,"        ""1994-12-31"",","[220, 220, 220, 220, 220, 220, 220, 366, 22666, 12, 1065, 12, 3132, 1600]"
üß† ML Signal: Conversion of dates to strings could be a common data processing step.,"[8582, 100, 254, 10373, 26484, 25, 44101, 286, 9667, 284, 13042, 714, 307, 257, 2219, 1366, 7587, 2239, 13]",0.5,311,ml_signal,395,Conversion of dates to strings could be a common data processing step.,,297,"        ""1993-12-31"",","[220, 220, 220, 220, 220, 220, 220, 366, 24465, 12, 1065, 12, 3132, 1600]"
‚úÖ Best Practice: Using set comparison for lists ensures order-agnostic equality.,"[26486, 227, 6705, 19939, 25, 8554, 900, 7208, 329, 8341, 19047, 1502, 12, 4660, 15132, 10537, 13]",0.5,325,best_practice,397,Using set comparison for lists ensures order-agnostic equality.,,311,"        ""1992-12-31"",","[220, 220, 220, 220, 220, 220, 220, 366, 23847, 12, 1065, 12, 3132, 1600]"
üß† ML Signal: Accessing the latest record in a result set is a common pattern.,"[8582, 100, 254, 10373, 26484, 25, 8798, 278, 262, 3452, 1700, 287, 257, 1255, 900, 318, 257, 2219, 3912, 13]",1.0,339,ml_signal,399,Accessing the latest record in a result set is a common pattern.,,325,"        ""1990-12-31"",","[220, 220, 220, 220, 220, 220, 220, 366, 19891, 12, 1065, 12, 3132, 1600]"
‚úÖ Best Practice: Asserting specific fields ensures data integrity and correctness.,"[26486, 227, 6705, 19939, 25, 2195, 861, 278, 2176, 7032, 19047, 1366, 11540, 290, 29409, 13]",1.0,343,best_practice,401,Asserting specific fields ensures data integrity and correctness.,,339,    ],"[220, 220, 220, 2361]"
üß† ML Signal: Hardcoded timestamps could indicate a pattern in data retrieval or testing.,"[8582, 100, 254, 10373, 26484, 25, 6912, 40976, 4628, 395, 9430, 714, 7603, 257, 3912, 287, 1366, 45069, 393, 4856, 13]",0.5,362,ml_signal,413,Hardcoded timestamps could indicate a pattern in data retrieval or testing.,,343,    assert set(correct_timestamps) == set(timestamps),"[220, 220, 220, 6818, 900, 7, 30283, 62, 16514, 395, 9430, 8, 6624, 900, 7, 16514, 395, 9430, 8]"
üß† ML Signal: Querying data with specific parameters can indicate usage patterns.,"[8582, 100, 254, 10373, 26484, 25, 2264, 263, 1112, 1366, 351, 2176, 10007, 460, 7603, 8748, 7572, 13]",1.0,376,ml_signal,488,Querying data with specific parameters can indicate usage patterns.,,362,"        ""2007-03-31"",","[220, 220, 220, 220, 220, 220, 220, 366, 12726, 12, 3070, 12, 3132, 1600]"
‚úÖ Best Practice: Asserting the length of results ensures data consistency.,"[26486, 227, 6705, 19939, 25, 2195, 861, 278, 262, 4129, 286, 2482, 19047, 1366, 15794, 13]",1.0,390,best_practice,499,Asserting the length of results ensures data consistency.,,376,"        ""2004-06-30"",","[220, 220, 220, 220, 220, 220, 220, 366, 15724, 12, 3312, 12, 1270, 1600]"
üß† ML Signal: Converting and comparing timestamps can indicate data validation patterns.,"[8582, 100, 254, 10373, 26484, 25, 35602, 889, 290, 14176, 4628, 395, 9430, 460, 7603, 1366, 21201, 7572, 13]",1.0,404,ml_signal,501,Converting and comparing timestamps can indicate data validation patterns.,,390,"        ""2003-12-31"",","[220, 220, 220, 220, 220, 220, 220, 366, 16088, 12, 1065, 12, 3132, 1600]"
‚úÖ Best Practice: Using set comparison for timestamps ensures order-agnostic validation.,"[26486, 227, 6705, 19939, 25, 8554, 900, 7208, 329, 4628, 395, 9430, 19047, 1502, 12, 4660, 15132, 21201, 13]",1.0,418,best_practice,503,Using set comparison for timestamps ensures order-agnostic validation.,,404,"        ""2003-06-30"",","[220, 220, 220, 220, 220, 220, 220, 366, 16088, 12, 3312, 12, 1270, 1600]"
‚úÖ Best Practice: Type hinting improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5994, 9254, 278, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,432,best_practice,505,Type hinting improves code readability and maintainability.,,418,"        ""2002-12-31"",","[220, 220, 220, 220, 220, 220, 220, 366, 16942, 12, 1065, 12, 3132, 1600]"
üß† ML Signal: Asserting specific financial values can indicate expected data patterns.,"[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 3176, 3815, 460, 7603, 2938, 1366, 7572, 13]",0.5,446,ml_signal,507,Asserting specific financial values can indicate expected data patterns.,,432,"        ""2001-12-31"",","[220, 220, 220, 220, 220, 220, 220, 366, 14585, 12, 1065, 12, 3132, 1600]"
"üß† ML Signal: Hardcoded list of timestamps, useful for pattern recognition in test data","[8582, 100, 254, 10373, 26484, 25, 6912, 40976, 1351, 286, 4628, 395, 9430, 11, 4465, 329, 3912, 9465, 287, 1332, 1366]",0.5,466,ml_signal,540,"Hardcoded list of timestamps, useful for pattern recognition in test data",,446,    assert latest.fi_loan_advance_increase == 250300000000,"[220, 220, 220, 6818, 3452, 13, 12463, 62, 5439, 272, 62, 324, 19259, 62, 24988, 589, 6624, 8646, 18, 8269]"
"üß† ML Signal: Querying data with specific parameters, useful for learning query patterns","[8582, 100, 254, 10373, 26484, 25, 2264, 263, 1112, 1366, 351, 2176, 10007, 11, 4465, 329, 4673, 12405, 7572]",0.5,480,ml_signal,622,"Querying data with specific parameters, useful for learning query patterns",,466,"        ""2007-03-31"",","[220, 220, 220, 220, 220, 220, 220, 366, 12726, 12, 3070, 12, 3132, 1600]"
‚úÖ Best Practice: Using list comprehension for concise and readable code,"[26486, 227, 6705, 19939, 25, 8554, 1351, 35915, 329, 35327, 290, 31744, 2438]",0.5,494,best_practice,634,Using list comprehension for concise and readable code,,480,"        ""2004-03-31"",","[220, 220, 220, 220, 220, 220, 220, 366, 15724, 12, 3070, 12, 3132, 1600]"
"üß† ML Signal: Asserting specific financial metrics, useful for learning expected values","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 3176, 20731, 11, 4465, 329, 4673, 2938, 3815]",0.5,508,ml_signal,638,"Asserting specific financial metrics, useful for learning expected values",,494,"        ""2003-03-31"",","[220, 220, 220, 220, 220, 220, 220, 366, 16088, 12, 3070, 12, 3132, 1600]"
üß† ML Signal: Use of a specific query pattern with parameters,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 2176, 12405, 3912, 351, 10007]",0.5,522,ml_signal,754,Use of a specific query pattern with parameters,,508,"        ""2009-03-31"",","[220, 220, 220, 220, 220, 220, 220, 366, 10531, 12, 3070, 12, 3132, 1600]"
‚úÖ Best Practice: Asserting the length of results to ensure data integrity,"[26486, 227, 6705, 19939, 25, 2195, 861, 278, 262, 4129, 286, 2482, 284, 4155, 1366, 11540]",1.0,536,best_practice,764,Asserting the length of results to ensure data integrity,,522,"        ""2006-09-30"",","[220, 220, 220, 220, 220, 220, 220, 366, 13330, 12, 2931, 12, 1270, 1600]"
üß† ML Signal: Conversion of date objects to string format,"[8582, 100, 254, 10373, 26484, 25, 44101, 286, 3128, 5563, 284, 4731, 5794]",1.0,550,ml_signal,766,Conversion of date objects to string format,,536,"        ""2006-03-31"",","[220, 220, 220, 220, 220, 220, 220, 366, 13330, 12, 3070, 12, 3132, 1600]"
‚úÖ Best Practice: Using set comparison for unordered data validation,"[26486, 227, 6705, 19939, 25, 8554, 900, 7208, 329, 555, 24071, 1366, 21201]",0.5,564,best_practice,768,Using set comparison for unordered data validation,,550,"        ""2005-09-30"",","[220, 220, 220, 220, 220, 220, 220, 366, 14315, 12, 2931, 12, 1270, 1600]"
üß† ML Signal: Accessing the first element of a result set,"[8582, 100, 254, 10373, 26484, 25, 8798, 278, 262, 717, 5002, 286, 257, 1255, 900]",0.5,578,ml_signal,770,Accessing the first element of a result set,,564,"        ""2005-03-31"",","[220, 220, 220, 220, 220, 220, 220, 366, 14315, 12, 3070, 12, 3132, 1600]"
‚úÖ Best Practice: Asserting specific fields to validate data correctness,"[26486, 227, 6705, 19939, 25, 2195, 861, 278, 2176, 7032, 284, 26571, 1366, 29409]",0.5,592,best_practice,772,Asserting specific fields to validate data correctness,,578,"        ""2004-09-30"",","[220, 220, 220, 220, 220, 220, 220, 366, 15724, 12, 2931, 12, 1270, 1600]"
üß† ML Signal: Usage of a specific query pattern with parameters,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2176, 12405, 3912, 351, 10007]",1.0,606,ml_signal,896,Usage of a specific query pattern with parameters,,592,"        ""2011-06-30"",","[220, 220, 220, 220, 220, 220, 220, 366, 9804, 12, 3312, 12, 1270, 1600]"
‚úÖ Best Practice: Use of descriptive variable names,"[26486, 227, 6705, 19939, 25, 5765, 286, 35644, 7885, 3891]",0.5,620,best_practice,896,Use of descriptive variable names,,606,"        ""2011-06-30"",","[220, 220, 220, 220, 220, 220, 220, 366, 9804, 12, 3312, 12, 1270, 1600]"
‚úÖ Best Practice: Asserting the length of results to ensure data integrity,"[26486, 227, 6705, 19939, 25, 2195, 861, 278, 262, 4129, 286, 2482, 284, 4155, 1366, 11540]",1.0,634,best_practice,907,Asserting the length of results to ensure data integrity,,620,"        ""2008-09-30"",","[220, 220, 220, 220, 220, 220, 220, 366, 11528, 12, 2931, 12, 1270, 1600]"
üß† ML Signal: Conversion of date objects to string format,"[8582, 100, 254, 10373, 26484, 25, 44101, 286, 3128, 5563, 284, 4731, 5794]",1.0,648,ml_signal,909,Conversion of date objects to string format,,634,"        ""2008-03-31"",","[220, 220, 220, 220, 220, 220, 220, 366, 11528, 12, 3070, 12, 3132, 1600]"
‚úÖ Best Practice: Use of set for comparison to ensure order does not matter,"[26486, 227, 6705, 19939, 25, 5765, 286, 900, 329, 7208, 284, 4155, 1502, 857, 407, 2300]",0.5,662,best_practice,911,Use of set for comparison to ensure order does not matter,,648,"        ""2007-09-30"",","[220, 220, 220, 220, 220, 220, 220, 366, 12726, 12, 2931, 12, 1270, 1600]"
‚úÖ Best Practice: Type hinting for better code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5994, 9254, 278, 329, 1365, 2438, 1100, 1799, 290, 5529, 1799]",0.5,676,best_practice,913,Type hinting for better code readability and maintainability,,662,"        ""2007-03-31"",","[220, 220, 220, 220, 220, 220, 220, 366, 12726, 12, 3070, 12, 3132, 1600]"
‚úÖ Best Practice: Use of assertions to validate expected values,"[26486, 227, 6705, 19939, 25, 5765, 286, 29965, 284, 26571, 2938, 3815]",0.5,690,best_practice,915,Use of assertions to validate expected values,,676,"        ""2006-09-30"",","[220, 220, 220, 220, 220, 220, 220, 366, 13330, 12, 2931, 12, 1270, 1600]"
"üß† ML Signal: Hardcoded list of timestamps, useful for pattern recognition in test data","[8582, 100, 254, 10373, 26484, 25, 6912, 40976, 1351, 286, 4628, 395, 9430, 11, 4465, 329, 3912, 9465, 287, 1332, 1366]",0.5,704,ml_signal,939,"Hardcoded list of timestamps, useful for pattern recognition in test data",,690,"        ""1999-06-30"",","[220, 220, 220, 220, 220, 220, 220, 366, 18946, 12, 3312, 12, 1270, 1600]"
"üß† ML Signal: Querying data with specific parameters, useful for understanding data retrieval patterns","[8582, 100, 254, 10373, 26484, 25, 2264, 263, 1112, 1366, 351, 2176, 10007, 11, 4465, 329, 4547, 1366, 45069, 7572]",0.5,718,ml_signal,1013,"Querying data with specific parameters, useful for understanding data retrieval patterns",,704,"        ""2015-06-30"",","[220, 220, 220, 220, 220, 220, 220, 366, 4626, 12, 3312, 12, 1270, 1600]"
‚úÖ Best Practice: Using list comprehension for concise and readable code,"[26486, 227, 6705, 19939, 25, 8554, 1351, 35915, 329, 35327, 290, 31744, 2438]",0.5,732,best_practice,1025,Using list comprehension for concise and readable code,,718,"        ""2012-06-30"",","[220, 220, 220, 220, 220, 220, 220, 366, 6999, 12, 3312, 12, 1270, 1600]"
"üß† ML Signal: Asserting specific values, useful for learning expected outcomes in test cases","[8582, 100, 254, 10373, 26484, 25, 2195, 861, 278, 2176, 3815, 11, 4465, 329, 4673, 2938, 10906, 287, 1332, 2663]",0.5,746,ml_signal,1029,"Asserting specific values, useful for learning expected outcomes in test cases",,732,"        ""2011-06-30"",","[220, 220, 220, 220, 220, 220, 220, 366, 9804, 12, 3312, 12, 1270, 1600]"
