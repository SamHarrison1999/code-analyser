[
  {
    "line": 2,
    "text": "from zvt.api.utils import get_recent_report_date",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      15042,
      13,
      26791,
      1330,
      651,
      62,
      49921,
      62,
      13116,
      62,
      4475
    ],
    "start_token": 0,
    "end_token": 15,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 4,
    "text": "from zvt.api.kdata import get_kdata, to_high_level_kdata",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      15042,
      13,
      74,
      7890,
      1330,
      651,
      62,
      74,
      7890,
      11,
      284,
      62,
      8929,
      62,
      5715,
      62,
      74,
      7890
    ],
    "start_token": 15,
    "end_token": 37,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 6,
    "text": "",
    "annotation": "\u2705 Best Practice: Relative imports can lead to confusion; consider using absolute imports for clarity.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 37,
    "end_token": 37,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      45344,
      17944,
      460,
      1085,
      284,
      10802,
      26,
      2074,
      1262,
      4112,
      17944,
      329,
      16287,
      13
    ],
    "label": "best_practice",
    "reason": "Relative imports can lead to confusion; consider using absolute imports for clarity."
  },
  {
    "line": 8,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function call at module level indicates initialization or setup pattern.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 37,
    "end_token": 37,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      379,
      8265,
      1241,
      9217,
      37588,
      393,
      9058,
      3912,
      13
    ],
    "label": "ml_signal",
    "reason": "Function call at module level indicates initialization or setup pattern."
  },
  {
    "line": 6,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function definition for testing, indicating a test or validation pattern",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 37,
    "end_token": 37,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      6770,
      329,
      4856,
      11,
      12739,
      257,
      1332,
      393,
      21201,
      3912
    ],
    "label": "ml_signal",
    "reason": "Function definition for testing, indicating a test or validation pattern"
  },
  {
    "line": 8,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a data retrieval function with specific parameters",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 37,
    "end_token": 37,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      1366,
      45069,
      2163,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Usage of a data retrieval function with specific parameters"
  },
  {
    "line": 10,
    "text": "def test_to_high_level_kdata():",
    "annotation": "\u2705 Best Practice: Debugging or logging output to track data state",
    "confidence": 0.5,
    "tokens": [
      4299,
      1332,
      62,
      1462,
      62,
      8929,
      62,
      5715,
      62,
      74,
      7890,
      33529
    ],
    "start_token": 37,
    "end_token": 49,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      31687,
      2667,
      393,
      18931,
      5072,
      284,
      2610,
      1366,
      1181
    ],
    "label": "best_practice",
    "reason": "Debugging or logging output to track data state"
  },
  {
    "line": 12,
    "text": "    print(day_df)",
    "annotation": "\ud83e\udde0 ML Signal: Data transformation pattern from daily to weekly level",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      3601,
      7,
      820,
      62,
      7568,
      8
    ],
    "start_token": 49,
    "end_token": 58,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6060,
      13389,
      3912,
      422,
      4445,
      284,
      10273,
      1241
    ],
    "label": "ml_signal",
    "reason": "Data transformation pattern from daily to weekly level"
  },
  {
    "line": 14,
    "text": "    df = to_high_level_kdata(kdata_df=day_df.loc[:\"2019-09-01\", :], to_level=IntervalLevel.LEVEL_1WEEK)",
    "annotation": "\u2705 Best Practice: Debugging or logging output to track data state",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      47764,
      796,
      284,
      62,
      8929,
      62,
      5715,
      62,
      74,
      7890,
      7,
      74,
      7890,
      62,
      7568,
      28,
      820,
      62,
      7568,
      13,
      17946,
      58,
      11097,
      23344,
      12,
      2931,
      12,
      486,
      1600,
      1058,
      4357,
      284,
      62,
      5715,
      28,
      9492,
      2100,
      4971,
      13,
      2538,
      18697,
      62,
      16,
      54,
      33823,
      8
    ],
    "start_token": 58,
    "end_token": 107,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      31687,
      2667,
      393,
      18931,
      5072,
      284,
      2610,
      1366,
      1181
    ],
    "label": "best_practice",
    "reason": "Debugging or logging output to track data state"
  },
  {
    "line": 11,
    "text": "    day_df = get_kdata(provider=\"joinquant\", level=IntervalLevel.LEVEL_1DAY, entity_id=\"stock_sz_000338\")",
    "annotation": "\ud83e\udde0 ML Signal: Use of assert statements for testing function outputs",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1110,
      62,
      7568,
      796,
      651,
      62,
      74,
      7890,
      7,
      15234,
      1304,
      2625,
      7639,
      18934,
      415,
      1600,
      1241,
      28,
      9492,
      2100,
      4971,
      13,
      2538,
      18697,
      62,
      16,
      26442,
      11,
      9312,
      62,
      312,
      2625,
      13578,
      62,
      82,
      89,
      62,
      830,
      28460,
      4943
    ],
    "start_token": 107,
    "end_token": 150,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      6818,
      6299,
      329,
      4856,
      2163,
      23862
    ],
    "label": "ml_signal",
    "reason": "Use of assert statements for testing function outputs"
  },
  {
    "line": 12,
    "text": "    print(day_df)",
    "annotation": "\u2705 Best Practice: Use of descriptive test function names",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      3601,
      7,
      820,
      62,
      7568,
      8
    ],
    "start_token": 150,
    "end_token": 159,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      35644,
      1332,
      2163,
      3891
    ],
    "label": "best_practice",
    "reason": "Use of descriptive test function names"
  },
  {
    "line": 14,
    "text": "    df = to_high_level_kdata(kdata_df=day_df.loc[:\"2019-09-01\", :], to_level=IntervalLevel.LEVEL_1WEEK)",
    "annotation": "\ud83e\udde0 ML Signal: Use of assert statements for testing function outputs",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      47764,
      796,
      284,
      62,
      8929,
      62,
      5715,
      62,
      74,
      7890,
      7,
      74,
      7890,
      62,
      7568,
      28,
      820,
      62,
      7568,
      13,
      17946,
      58,
      11097,
      23344,
      12,
      2931,
      12,
      486,
      1600,
      1058,
      4357,
      284,
      62,
      5715,
      28,
      9492,
      2100,
      4971,
      13,
      2538,
      18697,
      62,
      16,
      54,
      33823,
      8
    ],
    "start_token": 159,
    "end_token": 208,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      6818,
      6299,
      329,
      4856,
      2163,
      23862
    ],
    "label": "ml_signal",
    "reason": "Use of assert statements for testing function outputs"
  },
  {
    "line": 15,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of assert statements for testing function outputs",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 208,
    "end_token": 208,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      6818,
      6299,
      329,
      4856,
      2163,
      23862
    ],
    "label": "ml_signal",
    "reason": "Use of assert statements for testing function outputs"
  },
  {
    "line": 15,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of assert statements for testing function outputs",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 208,
    "end_token": 208,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      6818,
      6299,
      329,
      4856,
      2163,
      23862
    ],
    "label": "ml_signal",
    "reason": "Use of assert statements for testing function outputs"
  }
]