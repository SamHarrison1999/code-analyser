[
  {
    "line": 2,
    "text": "from zvt.api.stats import get_top_performance_by_month",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      15042,
      13,
      34242,
      1330,
      651,
      62,
      4852,
      62,
      26585,
      62,
      1525,
      62,
      8424
    ],
    "start_token": 0,
    "end_token": 17,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 4,
    "text": "from zvt.utils.time_utils import date_time_by_interval, month_end_date, is_same_date",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      2435,
      62,
      26791,
      1330,
      3128,
      62,
      2435,
      62,
      1525,
      62,
      3849,
      2100,
      11,
      1227,
      62,
      437,
      62,
      4475,
      11,
      318,
      62,
      31642,
      62,
      4475
    ],
    "start_token": 17,
    "end_token": 47,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 6,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over a function that returns data based on a date range",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 47,
    "end_token": 47,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      257,
      2163,
      326,
      5860,
      1366,
      1912,
      319,
      257,
      3128,
      2837
    ],
    "label": "ml_signal",
    "reason": "Iterating over a function that returns data based on a date range"
  },
  {
    "line": 10,
    "text": "def top_tags(data_provider=\"em\", start_timestamp=\"2020-01-01\", end_timestamp=\"2021-01-01\"):",
    "annotation": "\ud83e\udde0 ML Signal: Accessing top 30 entities by index",
    "confidence": 0.5,
    "tokens": [
      4299,
      1353,
      62,
      31499,
      7,
      7890,
      62,
      15234,
      1304,
      2625,
      368,
      1600,
      923,
      62,
      16514,
      27823,
      2625,
      42334,
      12,
      486,
      12,
      486,
      1600,
      886,
      62,
      16514,
      27823,
      2625,
      1238,
      2481,
      12,
      486,
      12,
      486,
      1,
      2599
    ],
    "start_token": 47,
    "end_token": 83,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8798,
      278,
      1353,
      1542,
      12066,
      416,
      6376
    ],
    "label": "ml_signal",
    "reason": "Accessing top 30 entities by index"
  },
  {
    "line": 12,
    "text": "    for _, timestamp, df in get_top_performance_by_month(",
    "annotation": "\ud83e\udde0 ML Signal: Querying data with specific parameters",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      329,
      4808,
      11,
      41033,
      11,
      47764,
      287,
      651,
      62,
      4852,
      62,
      26585,
      62,
      1525,
      62,
      8424,
      7
    ],
    "start_token": 83,
    "end_token": 103,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Querying data with specific parameters"
  },
  {
    "line": 23,
    "text": "                    limit=1,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential infinite loop if kdata is always None or turnover_rate is always 0",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4179,
      28,
      16,
      11
    ],
    "start_token": 103,
    "end_token": 126,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      15541,
      9052,
      611,
      479,
      7890,
      318,
      1464,
      6045,
      393,
      25079,
      62,
      4873,
      318,
      1464,
      657
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential infinite loop if kdata is always None or turnover_rate is always 0"
  },
  {
    "line": 25,
    "text": "                )",
    "annotation": "\ud83e\udde0 ML Signal: Checking if a date is the end of the month",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 126,
    "end_token": 142,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      611,
      257,
      3128,
      318,
      262,
      886,
      286,
      262,
      1227
    ],
    "label": "ml_signal",
    "reason": "Checking if a date is the end of the month"
  },
  {
    "line": 27,
    "text": "                    if is_same_date(query_timestamp, month_end_date(query_timestamp)):",
    "annotation": "\ud83e\udde0 ML Signal: Adjusting timestamp by interval",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      318,
      62,
      31642,
      62,
      4475,
      7,
      22766,
      62,
      16514,
      27823,
      11,
      1227,
      62,
      437,
      62,
      4475,
      7,
      22766,
      62,
      16514,
      27823,
      8,
      2599
    ],
    "start_token": 142,
    "end_token": 185,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20292,
      278,
      41033,
      416,
      16654
    ],
    "label": "ml_signal",
    "reason": "Adjusting timestamp by interval"
  },
  {
    "line": 31,
    "text": "                cap = kdata[0].turnover / kdata[0].turnover_rate",
    "annotation": "\ud83e\udde0 ML Signal: Calculating market cap from turnover and turnover rate",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1451,
      796,
      479,
      7890,
      58,
      15,
      4083,
      15344,
      2502,
      1220,
      479,
      7890,
      58,
      15,
      4083,
      15344,
      2502,
      62,
      4873
    ],
    "start_token": 185,
    "end_token": 219,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      27131,
      803,
      1910,
      1451,
      422,
      25079,
      290,
      25079,
      2494
    ],
    "label": "ml_signal",
    "reason": "Calculating market cap from turnover and turnover rate"
  },
  {
    "line": 32,
    "text": "                break",
    "annotation": "\ud83e\udde0 ML Signal: Appending calculated data to records",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2270
    ],
    "start_token": 219,
    "end_token": 235,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2034,
      1571,
      10488,
      1366,
      284,
      4406
    ],
    "label": "ml_signal",
    "reason": "Appending calculated data to records"
  },
  {
    "line": 32,
    "text": "                break",
    "annotation": "\u2705 Best Practice: Use of __name__ guard to allow or prevent parts of code from being run when modules are imported",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2270
    ],
    "start_token": 235,
    "end_token": 251,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      11593,
      3672,
      834,
      4860,
      284,
      1249,
      393,
      2948,
      3354,
      286,
      2438,
      422,
      852,
      1057,
      618,
      13103,
      389,
      17392
    ],
    "label": "best_practice",
    "reason": "Use of __name__ guard to allow or prevent parts of code from being run when modules are imported"
  },
  {
    "line": 32,
    "text": "                break",
    "annotation": "\ud83e\udde0 ML Signal: Printing the result of a function call",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2270
    ],
    "start_token": 251,
    "end_token": 267,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      44118,
      262,
      1255,
      286,
      257,
      2163,
      869
    ],
    "label": "ml_signal",
    "reason": "Printing the result of a function call"
  }
]