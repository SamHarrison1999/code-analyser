annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
üß† ML Signal: Usage of logging for tracking and debugging,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 18931, 329, 9646, 290, 28769]",1.0,17,ml_signal,16,Usage of logging for tracking and debugging,,0,from zvt.utils.recorder_utils import run_data_recorder,"[6738, 1976, 36540, 13, 26791, 13, 8344, 2875, 62, 26791, 1330, 1057, 62, 7890, 62, 8344, 2875]"
üß† ML Signal: Usage of a background scheduler for periodic tasks,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 4469, 6038, 18173, 329, 27458, 8861]",1.0,30,ml_signal,19,Usage of a background scheduler for periodic tasks,,17,logger = logging.getLogger(__name__),"[6404, 1362, 796, 18931, 13, 1136, 11187, 1362, 7, 834, 3672, 834, 8]"
üß† ML Signal: Scheduled job pattern for periodic execution,"[8582, 100, 254, 10373, 26484, 25, 27774, 6309, 1693, 3912, 329, 27458, 9706]",1.0,43,ml_signal,19,Scheduled job pattern for periodic execution,,30,logger = logging.getLogger(__name__),"[6404, 1362, 796, 18931, 13, 1136, 11187, 1362, 7, 834, 3672, 834, 8]"
‚ö†Ô∏è SAST Risk (Low): Cron jobs can lead to unexpected behavior if not properly managed,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 31683, 3946, 460, 1085, 284, 10059, 4069, 611, 407, 6105, 5257]",1.0,61,sast_risk,26,Cron jobs can lead to unexpected behavior if not properly managed,Low,43,    # ÈæôËôéÊ¶úÊï∞ÊçÆ,"[220, 220, 220, 1303, 220, 11737, 247, 164, 247, 236, 162, 99, 250, 46763, 108, 162, 235, 106]"
üß† ML Signal: Function parameters with default values indicate common usage patterns,"[8582, 100, 254, 10373, 26484, 25, 15553, 10007, 351, 4277, 3815, 7603, 2219, 8748, 7572]",1.0,74,ml_signal,19,Function parameters with default values indicate common usage patterns,,61,logger = logging.getLogger(__name__),"[6404, 1362, 796, 18931, 13, 1136, 11187, 1362, 7, 834, 3672, 834, 8]"
üß† ML Signal: Usage of date manipulation functions can indicate time-based patterns,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 3128, 17512, 5499, 460, 7603, 640, 12, 3106, 7572]",1.0,88,ml_signal,28,Usage of date manipulation functions can indicate time-based patterns,,74,"        domain=DragonAndTiger,","[220, 220, 220, 220, 220, 220, 220, 7386, 28, 17808, 1870, 51, 8254, 11]"
üß† ML Signal: Recent date calculation shows a pattern of interest in recent data,"[8582, 100, 254, 10373, 26484, 25, 22926, 3128, 17952, 2523, 257, 3912, 286, 1393, 287, 2274, 1366]",0.5,101,ml_signal,31,Recent date calculation shows a pattern of interest in recent data,,88,"        day_data=True,","[220, 220, 220, 220, 220, 220, 220, 1110, 62, 7890, 28, 17821, 11]"
‚úÖ Best Practice: Using list comprehensions or generator expressions can improve readability,"[26486, 227, 6705, 19939, 25, 8554, 1351, 8569, 507, 393, 17301, 14700, 460, 2987, 1100, 1799]",0.5,117,best_practice,32,Using list comprehensions or generator expressions can improve readability,,101,"        sleeping_time=sleeping_time,","[220, 220, 220, 220, 220, 220, 220, 11029, 62, 2435, 28, 26738, 7213, 62, 2435, 11]"
‚úÖ Best Practice: Converting to set and back to list removes duplicates,"[26486, 227, 6705, 19939, 25, 35602, 889, 284, 900, 290, 736, 284, 1351, 20694, 14184, 16856]",0.5,156,best_practice,51,Converting to set and back to list removes duplicates,,117,"                and_(DragonAndTiger.dep5 == player, DragonAndTiger.dep5_rate >= 5),","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 290, 41052, 17808, 1870, 51, 8254, 13, 10378, 20, 6624, 2137, 11, 2851, 1870, 51, 8254, 13, 10378, 20, 62, 4873, 18189, 642, 828]"
üß† ML Signal: Target date calculation shows a pattern of interest in specific data points,"[8582, 100, 254, 10373, 26484, 25, 12744, 3128, 17952, 2523, 257, 3912, 286, 1393, 287, 2176, 1366, 2173]",0.5,195,ml_signal,51,Target date calculation shows a pattern of interest in specific data points,,156,"                and_(DragonAndTiger.dep5 == player, DragonAndTiger.dep5_rate >= 5),","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 290, 41052, 17808, 1870, 51, 8254, 13, 10378, 20, 6624, 2137, 11, 2851, 1870, 51, 8254, 13, 10378, 20, 62, 4873, 18189, 642, 828]"
‚ö†Ô∏è SAST Risk (Low): Potential information disclosure through email,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 1321, 13019, 832, 3053]",0.5,209,sast_risk,67,Potential information disclosure through email,Low,195,"        provider=data_provider,","[220, 220, 220, 220, 220, 220, 220, 10131, 28, 7890, 62, 15234, 1304, 11]"
‚úÖ Best Practice: Logging initialization for better traceability,"[26486, 227, 6705, 19939, 25, 5972, 2667, 37588, 329, 1365, 12854, 1799]",1.0,213,best_practice,75,Logging initialization for better traceability,,209,    ),"[220, 220, 220, 1267]"
‚ö†Ô∏è SAST Risk (Low): Potential for blocking the main thread indefinitely,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 12013, 262, 1388, 4704, 24391]",0.5,217,sast_risk,75,Potential for blocking the main thread indefinitely,Low,213,    ),"[220, 220, 220, 1267]"
