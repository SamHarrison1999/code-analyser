[
  {
    "line": 16,
    "text": "from zvt.utils.recorder_utils import run_data_recorder",
    "annotation": "\ud83e\udde0 ML Signal: Usage of logging for tracking and debugging",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      8344,
      2875,
      62,
      26791,
      1330,
      1057,
      62,
      7890,
      62,
      8344,
      2875
    ],
    "start_token": 0,
    "end_token": 17,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      18931,
      329,
      9646,
      290,
      28769
    ],
    "label": "ml_signal",
    "reason": "Usage of logging for tracking and debugging"
  },
  {
    "line": 19,
    "text": "logger = logging.getLogger(__name__)",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a background scheduler for periodic tasks",
    "confidence": 1.0,
    "tokens": [
      6404,
      1362,
      796,
      18931,
      13,
      1136,
      11187,
      1362,
      7,
      834,
      3672,
      834,
      8
    ],
    "start_token": 17,
    "end_token": 30,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      4469,
      6038,
      18173,
      329,
      27458,
      8861
    ],
    "label": "ml_signal",
    "reason": "Usage of a background scheduler for periodic tasks"
  },
  {
    "line": 19,
    "text": "logger = logging.getLogger(__name__)",
    "annotation": "\ud83e\udde0 ML Signal: Scheduled job pattern for periodic execution",
    "confidence": 1.0,
    "tokens": [
      6404,
      1362,
      796,
      18931,
      13,
      1136,
      11187,
      1362,
      7,
      834,
      3672,
      834,
      8
    ],
    "start_token": 30,
    "end_token": 43,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      27774,
      6309,
      1693,
      3912,
      329,
      27458,
      9706
    ],
    "label": "ml_signal",
    "reason": "Scheduled job pattern for periodic execution"
  },
  {
    "line": 26,
    "text": "    # \u9f99\u864e\u699c\u6570\u636e",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Cron jobs can lead to unexpected behavior if not properly managed",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1303,
      220,
      11737,
      247,
      164,
      247,
      236,
      162,
      99,
      250,
      46763,
      108,
      162,
      235,
      106
    ],
    "start_token": 43,
    "end_token": 61,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      31683,
      3946,
      460,
      1085,
      284,
      10059,
      4069,
      611,
      407,
      6105,
      5257
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Cron jobs can lead to unexpected behavior if not properly managed"
  },
  {
    "line": 19,
    "text": "logger = logging.getLogger(__name__)",
    "annotation": "\ud83e\udde0 ML Signal: Function parameters with default values indicate common usage patterns",
    "confidence": 1.0,
    "tokens": [
      6404,
      1362,
      796,
      18931,
      13,
      1136,
      11187,
      1362,
      7,
      834,
      3672,
      834,
      8
    ],
    "start_token": 61,
    "end_token": 74,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      10007,
      351,
      4277,
      3815,
      7603,
      2219,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Function parameters with default values indicate common usage patterns"
  },
  {
    "line": 28,
    "text": "        domain=DragonAndTiger,",
    "annotation": "\ud83e\udde0 ML Signal: Usage of date manipulation functions can indicate time-based patterns",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      7386,
      28,
      17808,
      1870,
      51,
      8254,
      11
    ],
    "start_token": 74,
    "end_token": 88,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      3128,
      17512,
      5499,
      460,
      7603,
      640,
      12,
      3106,
      7572
    ],
    "label": "ml_signal",
    "reason": "Usage of date manipulation functions can indicate time-based patterns"
  },
  {
    "line": 31,
    "text": "        day_data=True,",
    "annotation": "\ud83e\udde0 ML Signal: Recent date calculation shows a pattern of interest in recent data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1110,
      62,
      7890,
      28,
      17821,
      11
    ],
    "start_token": 88,
    "end_token": 101,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      22926,
      3128,
      17952,
      2523,
      257,
      3912,
      286,
      1393,
      287,
      2274,
      1366
    ],
    "label": "ml_signal",
    "reason": "Recent date calculation shows a pattern of interest in recent data"
  },
  {
    "line": 32,
    "text": "        sleeping_time=sleeping_time,",
    "annotation": "\u2705 Best Practice: Using list comprehensions or generator expressions can improve readability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      11029,
      62,
      2435,
      28,
      26738,
      7213,
      62,
      2435,
      11
    ],
    "start_token": 101,
    "end_token": 117,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      1351,
      8569,
      507,
      393,
      17301,
      14700,
      460,
      2987,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Using list comprehensions or generator expressions can improve readability"
  },
  {
    "line": 51,
    "text": "                and_(DragonAndTiger.dep5 == player, DragonAndTiger.dep5_rate >= 5),",
    "annotation": "\u2705 Best Practice: Converting to set and back to list removes duplicates",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      290,
      41052,
      17808,
      1870,
      51,
      8254,
      13,
      10378,
      20,
      6624,
      2137,
      11,
      2851,
      1870,
      51,
      8254,
      13,
      10378,
      20,
      62,
      4873,
      18189,
      642,
      828
    ],
    "start_token": 117,
    "end_token": 156,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      35602,
      889,
      284,
      900,
      290,
      736,
      284,
      1351,
      20694,
      14184,
      16856
    ],
    "label": "best_practice",
    "reason": "Converting to set and back to list removes duplicates"
  },
  {
    "line": 51,
    "text": "                and_(DragonAndTiger.dep5 == player, DragonAndTiger.dep5_rate >= 5),",
    "annotation": "\ud83e\udde0 ML Signal: Target date calculation shows a pattern of interest in specific data points",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      290,
      41052,
      17808,
      1870,
      51,
      8254,
      13,
      10378,
      20,
      6624,
      2137,
      11,
      2851,
      1870,
      51,
      8254,
      13,
      10378,
      20,
      62,
      4873,
      18189,
      642,
      828
    ],
    "start_token": 156,
    "end_token": 195,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      12744,
      3128,
      17952,
      2523,
      257,
      3912,
      286,
      1393,
      287,
      2176,
      1366,
      2173
    ],
    "label": "ml_signal",
    "reason": "Target date calculation shows a pattern of interest in specific data points"
  },
  {
    "line": 67,
    "text": "        provider=data_provider,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential information disclosure through email",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      10131,
      28,
      7890,
      62,
      15234,
      1304,
      11
    ],
    "start_token": 195,
    "end_token": 209,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      1321,
      13019,
      832,
      3053
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential information disclosure through email"
  },
  {
    "line": 75,
    "text": "    )",
    "annotation": "\u2705 Best Practice: Logging initialization for better traceability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1267
    ],
    "start_token": 209,
    "end_token": 213,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5972,
      2667,
      37588,
      329,
      1365,
      12854,
      1799
    ],
    "label": "best_practice",
    "reason": "Logging initialization for better traceability"
  },
  {
    "line": 75,
    "text": "    )",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for blocking the main thread indefinitely",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1267
    ],
    "start_token": 213,
    "end_token": 217,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      12013,
      262,
      1388,
      4704,
      24391
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for blocking the main thread indefinitely"
  }
]