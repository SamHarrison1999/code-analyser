annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Use of a logger for the module allows for better debugging and monitoring.,"[26486, 227, 6705, 19939, 25, 5765, 286, 257, 49706, 329, 262, 8265, 3578, 329, 1365, 28769, 290, 9904, 13]",1.0,13,best_practice,24,Use of a logger for the module allows for better debugging and monitoring.,,0,from zvt.utils.time_utils import current_date,"[6738, 1976, 36540, 13, 26791, 13, 2435, 62, 26791, 1330, 1459, 62, 4475]"
üß† ML Signal: Use of a background scheduler indicates a pattern of periodic task execution.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 4469, 6038, 18173, 9217, 257, 3912, 286, 27458, 4876, 9706, 13]",0.5,26,ml_signal,27,Use of a background scheduler indicates a pattern of periodic task execution.,,13,logger = logging.getLogger(__name__),"[6404, 1362, 796, 18931, 13, 1136, 11187, 1362, 7, 834, 3672, 834, 8]"
üß† ML Signal: Use of a cron job pattern for scheduling tasks at specific times.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 1067, 261, 1693, 3912, 329, 26925, 8861, 379, 2176, 1661, 13]",0.5,26,ml_signal,30,Use of a cron job pattern for scheduling tasks at specific times.,,26,,[]
‚úÖ Best Practice: Scheduling jobs with specific timing ensures tasks are executed at desired intervals.,"[26486, 227, 6705, 19939, 25, 27774, 16619, 3946, 351, 2176, 10576, 19047, 8861, 389, 10945, 379, 10348, 20016, 13]",0.5,26,best_practice,30,Scheduling jobs with specific timing ensures tasks are executed at desired intervals.,,26,,[]
üß† ML Signal: Default parameter value usage pattern,"[8582, 100, 254, 10373, 26484, 25, 15161, 11507, 1988, 8748, 3912]",0.5,39,ml_signal,27,Default parameter value usage pattern,,26,logger = logging.getLogger(__name__),"[6404, 1362, 796, 18931, 13, 1136, 11187, 1362, 7, 834, 3672, 834, 8]"
‚úÖ Best Practice: Use of descriptive variable names for readability,"[26486, 227, 6705, 19939, 25, 5765, 286, 35644, 7885, 3891, 329, 1100, 1799]",0.5,39,best_practice,30,Use of descriptive variable names for readability,,39,,[]
‚úÖ Best Practice: Use of named arguments for clarity,"[26486, 227, 6705, 19939, 25, 5765, 286, 3706, 7159, 329, 16287]",0.5,52,best_practice,40,Use of named arguments for clarity,,39,"        day_data=True,","[220, 220, 220, 220, 220, 220, 220, 1110, 62, 7890, 28, 17821, 11]"
üß† ML Signal: Use of a fixed sleeping time pattern,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 5969, 11029, 640, 3912]",0.5,64,ml_signal,41,Use of a fixed sleeping time pattern,,52,"        domain=StockNews,","[220, 220, 220, 220, 220, 220, 220, 7386, 28, 26207, 9980, 11]"
"üß† ML Signal: Use of querying data with specific order and limit, indicating a pattern of fetching the latest record","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 42517, 1112, 1366, 351, 2176, 1502, 290, 4179, 11, 12739, 257, 3912, 286, 21207, 278, 262, 3452, 1700]",0.5,81,ml_signal,39,"Use of querying data with specific order and limit, indicating a pattern of fetching the latest record",,64,"        entity_ids=normal_stock_ids,","[220, 220, 220, 220, 220, 220, 220, 9312, 62, 2340, 28, 11265, 62, 13578, 62, 2340, 11]"
‚úÖ Best Practice: Accessing the first element of a list to get the latest timestamp,"[26486, 227, 6705, 19939, 25, 8798, 278, 262, 717, 5002, 286, 257, 1351, 284, 651, 262, 3452, 41033]",0.5,93,best_practice,41,Accessing the first element of a list to get the latest timestamp,,81,"        domain=StockNews,","[220, 220, 220, 220, 220, 220, 220, 7386, 28, 26207, 9980, 11]"
"üß† ML Signal: Querying data within a specific timestamp range, a common pattern in time-series data processing","[8582, 100, 254, 10373, 26484, 25, 2264, 263, 1112, 1366, 1626, 257, 2176, 41033, 2837, 11, 257, 2219, 3912, 287, 640, 12, 25076, 1366, 7587]",0.5,106,ml_signal,43,"Querying data within a specific timestamp range, a common pattern in time-series data processing",,93,"        force_update=False,","[220, 220, 220, 220, 220, 220, 220, 2700, 62, 19119, 28, 25101, 11]"
‚úÖ Best Practice: Using vectorized operations for string manipulation in pandas,"[26486, 227, 6705, 19939, 25, 8554, 15879, 1143, 4560, 329, 4731, 17512, 287, 19798, 292]",0.5,110,best_practice,45,Using vectorized operations for string manipulation in pandas,,106,    ),"[220, 220, 220, 1267]"
‚ö†Ô∏è SAST Risk (Low): Directly printing data frames can expose sensitive information in logs,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 306, 13570, 1366, 13431, 460, 15651, 8564, 1321, 287, 17259]",1.0,110,sast_risk,47,Directly printing data frames can expose sensitive information in logs,Low,110,,[]
"üß† ML Signal: Sending an email with a specific subject and body format, indicating a pattern of automated reporting","[8582, 100, 254, 10373, 26484, 25, 32038, 281, 3053, 351, 257, 2176, 2426, 290, 1767, 5794, 11, 12739, 257, 3912, 286, 16359, 6447]",0.5,146,ml_signal,49,"Sending an email with a specific subject and body format, indicating a pattern of automated reporting",,110,"    latest_data = LimitUpInfo.query_data(order=LimitUpInfo.timestamp.desc(), limit=1, return_type=""domain"")","[220, 220, 220, 3452, 62, 7890, 796, 27272, 4933, 12360, 13, 22766, 62, 7890, 7, 2875, 28, 39184, 4933, 12360, 13, 16514, 27823, 13, 20147, 22784, 4179, 28, 16, 11, 1441, 62, 4906, 2625, 27830, 4943]"
"üß† ML Signal: Function call with parameter, indicating a pattern of fetching data with a specific time range","[8582, 100, 254, 10373, 26484, 25, 15553, 869, 351, 11507, 11, 12739, 257, 3912, 286, 21207, 278, 1366, 351, 257, 2176, 640, 2837]",0.5,146,ml_signal,47,"Function call with parameter, indicating a pattern of fetching data with a specific time range",,146,,[]
"üß† ML Signal: Function call with parameter, indicating a pattern of fetching data with a specific time range","[8582, 100, 254, 10373, 26484, 25, 15553, 869, 351, 11507, 11, 12739, 257, 3912, 286, 21207, 278, 1366, 351, 257, 2176, 640, 2837]",0.5,182,ml_signal,49,"Function call with parameter, indicating a pattern of fetching data with a specific time range",,146,"    latest_data = LimitUpInfo.query_data(order=LimitUpInfo.timestamp.desc(), limit=1, return_type=""domain"")","[220, 220, 220, 3452, 62, 7890, 796, 27272, 4933, 12360, 13, 22766, 62, 7890, 7, 2875, 28, 39184, 4933, 12360, 13, 16514, 27823, 13, 20147, 22784, 4179, 28, 16, 11, 1441, 62, 4906, 2625, 27830, 4943]"
‚úÖ Best Practice: Converting keys to a set for efficient membership testing and operations,"[26486, 227, 6705, 19939, 25, 35602, 889, 8251, 284, 257, 900, 329, 6942, 9931, 4856, 290, 4560]",0.5,223,best_practice,51,Converting keys to a set for efficient membership testing and operations,,182,"    df = LimitUpInfo.query_data(start_timestamp=timestamp, end_timestamp=timestamp, columns=[""code"", ""name"", ""reason""])","[220, 220, 220, 47764, 796, 27272, 4933, 12360, 13, 22766, 62, 7890, 7, 9688, 62, 16514, 27823, 28, 16514, 27823, 11, 886, 62, 16514, 27823, 28, 16514, 27823, 11, 15180, 28, 14692, 8189, 1600, 366, 3672, 1600, 366, 41181, 8973, 8]"
‚úÖ Best Practice: Converting keys to a set for efficient membership testing and operations,"[26486, 227, 6705, 19939, 25, 35602, 889, 8251, 284, 257, 900, 329, 6942, 9931, 4856, 290, 4560]",0.5,230,best_practice,53,Converting keys to a set for efficient membership testing and operations,,223,    print(df),"[220, 220, 220, 3601, 7, 7568, 8]"
‚úÖ Best Practice: Using set intersection to find common elements,"[26486, 227, 6705, 19939, 25, 8554, 900, 16246, 284, 1064, 2219, 4847]",0.5,230,best_practice,55,Using set intersection to find common elements,,230,,[]
"‚ö†Ô∏è SAST Risk (Low): Printing sensitive data to console, consider logging instead","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 44118, 8564, 1366, 284, 8624, 11, 2074, 18931, 2427]",0.5,230,sast_risk,56,"Printing sensitive data to console, consider logging instead",Low,230,,[]
‚úÖ Best Practice: Using set difference to find unique elements,"[26486, 227, 6705, 19939, 25, 8554, 900, 3580, 284, 1064, 3748, 4847]",0.5,230,best_practice,56,Using set difference to find unique elements,,230,,[]
"‚ö†Ô∏è SAST Risk (Low): Printing sensitive data to console, consider logging instead","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 44118, 8564, 1366, 284, 8624, 11, 2074, 18931, 2427]",0.5,230,sast_risk,63,"Printing sensitive data to console, consider logging instead",Low,230,,[]
‚úÖ Best Practice: Using set difference to find unique elements,"[26486, 227, 6705, 19939, 25, 8554, 900, 3580, 284, 1064, 3748, 4847]",0.5,230,best_practice,63,Using set difference to find unique elements,,230,,[]
"‚ö†Ô∏è SAST Risk (Low): Printing sensitive data to console, consider logging instead","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 44118, 8564, 1366, 284, 8624, 11, 2074, 18931, 2427]",0.5,240,sast_risk,64,"Printing sensitive data to console, consider logging instead",Low,230,    same = set1 & set2,"[220, 220, 220, 976, 796, 900, 16, 1222, 900, 17]"
‚úÖ Best Practice: Using f-string for multi-line string formatting,"[26486, 227, 6705, 19939, 25, 8554, 277, 12, 8841, 329, 5021, 12, 1370, 4731, 33313]",0.5,240,best_practice,71,Using f-string for multi-line string formatting,,240,,[]
"‚ö†Ô∏è SAST Risk (Low): Printing sensitive data to console, consider logging instead","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 44118, 8564, 1366, 284, 8624, 11, 2074, 18931, 2427]",0.5,258,sast_risk,78,"Printing sensitive data to console, consider logging instead",Low,240,  Áü≠ÊúüÁªüËÆ°:{topics_short},"[220, 13328, 253, 255, 17312, 253, 163, 119, 253, 164, 106, 94, 29164, 4852, 873, 62, 19509, 92]"
‚ö†Ô∏è SAST Risk (Medium): Potential exposure of sensitive data through email,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 32480, 7111, 286, 8564, 1366, 832, 3053]",0.5,276,sast_risk,78,Potential exposure of sensitive data through email,Medium,258,  Áü≠ÊúüÁªüËÆ°:{topics_short},"[220, 13328, 253, 255, 17312, 253, 163, 119, 253, 164, 106, 94, 29164, 4852, 873, 62, 19509, 92]"
üß† ML Signal: Sending an email with a specific subject and message pattern,"[8582, 100, 254, 10373, 26484, 25, 32038, 281, 3053, 351, 257, 2176, 2426, 290, 3275, 3912]",0.5,294,ml_signal,78,Sending an email with a specific subject and message pattern,,276,  Áü≠ÊúüÁªüËÆ°:{topics_short},"[220, 13328, 253, 255, 17312, 253, 163, 119, 253, 164, 106, 94, 29164, 4852, 873, 62, 19509, 92]"
üß† ML Signal: Scheduled job pattern indicating periodic task execution,"[8582, 100, 254, 10373, 26484, 25, 27774, 6309, 1693, 3912, 12739, 27458, 4876, 9706]",1.0,298,ml_signal,79,Scheduled job pattern indicating periodic task execution,,294,"    """"""","[220, 220, 220, 37227]"
üß† ML Signal: Default parameter values indicate common usage patterns,"[8582, 100, 254, 10373, 26484, 25, 15161, 11507, 3815, 7603, 2219, 8748, 7572]",1.0,311,ml_signal,67,Default parameter values indicate common usage patterns,,298,    old_topics = set1 - set2,"[220, 220, 220, 1468, 62, 4852, 873, 796, 900, 16, 532, 900, 17]"
‚ö†Ô∏è SAST Risk (Low): Potential for misconfiguration if data_provider is None,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 2984, 11250, 3924, 611, 1366, 62, 15234, 1304, 318, 6045]",0.5,324,sast_risk,69,Potential for misconfiguration if data_provider is None,Low,311,    new_topics = set2 - set1,"[220, 220, 220, 649, 62, 4852, 873, 796, 900, 17, 532, 900, 16]"
üß† ML Signal: Usage of inform function with specific parameters can indicate notification patterns,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 4175, 2163, 351, 2176, 10007, 460, 7603, 14483, 7572]",1.0,337,ml_signal,92,Usage of inform function with specific parameters can indicate notification patterns,,324,    # AËÇ°ÊåáÊï∞,"[220, 220, 220, 1303, 317, 164, 224, 94, 162, 234, 229, 46763, 108]"
‚úÖ Best Practice: Use of cron job for scheduling tasks ensures regular execution,"[26486, 227, 6705, 19939, 25, 5765, 286, 1067, 261, 1693, 329, 26925, 8861, 19047, 3218, 9706]",0.5,342,best_practice,118,Use of cron job for scheduling tasks ensures regular execution,,337,    # ),"[220, 220, 220, 1303, 1267]"
üß† ML Signal: Default parameter values indicate common usage patterns.,"[8582, 100, 254, 10373, 26484, 25, 15161, 11507, 3815, 7603, 2219, 8748, 7572, 13]",1.0,359,ml_signal,117,Default parameter values indicate common usage patterns.,,342,"    #     sleeping_time=sleeping_time,","[220, 220, 220, 1303, 220, 220, 220, 220, 11029, 62, 2435, 28, 26738, 7213, 62, 2435, 11]"
üß† ML Signal: Querying data with specific filters shows typical data access patterns.,"[8582, 100, 254, 10373, 26484, 25, 2264, 263, 1112, 1366, 351, 2176, 16628, 2523, 7226, 1366, 1895, 7572, 13]",1.0,359,ml_signal,119,Querying data with specific filters shows typical data access patterns.,,359,,[]
üß† ML Signal: Converting index to list for further processing is a common pattern.,"[8582, 100, 254, 10373, 26484, 25, 35602, 889, 6376, 284, 1351, 329, 2252, 7587, 318, 257, 2219, 3912, 13]",0.5,359,ml_signal,119,Converting index to list for further processing is a common pattern.,,359,,[]
‚úÖ Best Practice: Initializing logging for better traceability and debugging.,"[26486, 227, 6705, 19939, 25, 20768, 2890, 18931, 329, 1365, 12854, 1799, 290, 28769, 13]",1.0,374,best_practice,131,Initializing logging for better traceability and debugging.,,359,"        target_date=current_date(),","[220, 220, 220, 220, 220, 220, 220, 2496, 62, 4475, 28, 14421, 62, 4475, 22784]"
‚ö†Ô∏è SAST Risk (High): Potential NameError if 'record_stock_data' is not defined elsewhere.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 11922, 2599, 32480, 6530, 12331, 611, 705, 22105, 62, 13578, 62, 7890, 6, 318, 407, 5447, 8057, 13]",1.0,393,sast_risk,132,Potential NameError if 'record_stock_data' is not defined elsewhere.,High,374,"        title=""report Êñ∞Ê¶ÇÂøµ"",","[220, 220, 220, 220, 220, 220, 220, 3670, 2625, 13116, 10545, 244, 108, 162, 99, 224, 33232, 113, 1600]"
‚ö†Ô∏è SAST Risk (Medium): Using sched without proper exception handling can lead to unhandled exceptions.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 8554, 6038, 1231, 1774, 6631, 9041, 460, 1085, 284, 555, 38788, 13269, 13]",1.0,412,sast_risk,132,Using sched without proper exception handling can lead to unhandled exceptions.,Medium,393,"        title=""report Êñ∞Ê¶ÇÂøµ"",","[220, 220, 220, 220, 220, 220, 220, 3670, 2625, 13116, 10545, 244, 108, 162, 99, 224, 33232, 113, 1600]"
‚ö†Ô∏è SAST Risk (Medium): Directly accessing and joining a private thread attribute can lead to unexpected behavior.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 4128, 306, 22534, 290, 9679, 257, 2839, 4704, 11688, 460, 1085, 284, 10059, 4069, 13]",0.5,431,sast_risk,132,Directly accessing and joining a private thread attribute can lead to unexpected behavior.,Medium,412,"        title=""report Êñ∞Ê¶ÇÂøµ"",","[220, 220, 220, 220, 220, 220, 220, 3670, 2625, 13116, 10545, 244, 108, 162, 99, 224, 33232, 113, 1600]"
