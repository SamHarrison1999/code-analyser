[
  {
    "line": 2,
    "text": "import logging",
    "annotation": "\u2705 Best Practice: Grouping imports into standard, third-party, and local sections improves readability.",
    "confidence": 1.0,
    "tokens": [
      11748,
      18931
    ],
    "start_token": 0,
    "end_token": 2,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      656,
      3210,
      11,
      2368,
      12,
      10608,
      11,
      290,
      1957,
      9004,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports into standard, third-party, and local sections improves readability."
  },
  {
    "line": 4,
    "text": "from apscheduler.schedulers.background import BackgroundScheduler",
    "annotation": "\u2705 Best Practice: Grouping imports into standard, third-party, and local sections improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      257,
      862,
      1740,
      18173,
      13,
      1416,
      704,
      377,
      364,
      13,
      25249,
      1330,
      25353,
      50,
      1740,
      18173
    ],
    "start_token": 2,
    "end_token": 19,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      656,
      3210,
      11,
      2368,
      12,
      10608,
      11,
      290,
      1957,
      9004,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports into standard, third-party, and local sections improves readability."
  },
  {
    "line": 4,
    "text": "from apscheduler.schedulers.background import BackgroundScheduler",
    "annotation": "\u2705 Best Practice: Grouping imports into standard, third-party, and local sections improves readability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      257,
      862,
      1740,
      18173,
      13,
      1416,
      704,
      377,
      364,
      13,
      25249,
      1330,
      25353,
      50,
      1740,
      18173
    ],
    "start_token": 19,
    "end_token": 36,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      656,
      3210,
      11,
      2368,
      12,
      10608,
      11,
      290,
      1957,
      9004,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports into standard, third-party, and local sections improves readability."
  },
  {
    "line": 11,
    "text": ")",
    "annotation": "\u2705 Best Practice: Grouping imports into standard, third-party, and local sections improves readability.",
    "confidence": 1.0,
    "tokens": [
      8
    ],
    "start_token": 36,
    "end_token": 37,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      656,
      3210,
      11,
      2368,
      12,
      10608,
      11,
      290,
      1957,
      9004,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports into standard, third-party, and local sections improves readability."
  },
  {
    "line": 14,
    "text": "logger = logging.getLogger(__name__)",
    "annotation": "\ud83e\udde0 ML Signal: Usage of logging for tracking application behavior.",
    "confidence": 1.0,
    "tokens": [
      6404,
      1362,
      796,
      18931,
      13,
      1136,
      11187,
      1362,
      7,
      834,
      3672,
      834,
      8
    ],
    "start_token": 37,
    "end_token": 50,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      18931,
      329,
      9646,
      3586,
      4069,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of logging for tracking application behavior."
  },
  {
    "line": 20,
    "text": "def record_actor_data(data_provider=\"em\", entity_provider=\"em\"):",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a background scheduler for periodic tasks.",
    "confidence": 1.0,
    "tokens": [
      4299,
      1700,
      62,
      11218,
      62,
      7890,
      7,
      7890,
      62,
      15234,
      1304,
      2625,
      368,
      1600,
      9312,
      62,
      15234,
      1304,
      2625,
      368,
      1,
      2599
    ],
    "start_token": 50,
    "end_token": 72,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      4469,
      6038,
      18173,
      329,
      27458,
      8861,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of a background scheduler for periodic tasks."
  },
  {
    "line": 20,
    "text": "def record_actor_data(data_provider=\"em\", entity_provider=\"em\"):",
    "annotation": "\ud83e\udde0 ML Signal: Usage of cron jobs for scheduling tasks.",
    "confidence": 0.5,
    "tokens": [
      4299,
      1700,
      62,
      11218,
      62,
      7890,
      7,
      7890,
      62,
      15234,
      1304,
      2625,
      368,
      1600,
      9312,
      62,
      15234,
      1304,
      2625,
      368,
      1,
      2599
    ],
    "start_token": 72,
    "end_token": 94,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      1067,
      261,
      3946,
      329,
      26925,
      8861,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of cron jobs for scheduling tasks."
  },
  {
    "line": 23,
    "text": "        data_provider=data_provider,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Cron jobs can lead to unexpected behavior if not properly managed.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1366,
      62,
      15234,
      1304,
      28,
      7890,
      62,
      15234,
      1304,
      11
    ],
    "start_token": 94,
    "end_token": 111,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      31683,
      3946,
      460,
      1085,
      284,
      10059,
      4069,
      611,
      407,
      6105,
      5257,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Cron jobs can lead to unexpected behavior if not properly managed."
  },
  {
    "line": 14,
    "text": "logger = logging.getLogger(__name__)",
    "annotation": "\ud83e\udde0 ML Signal: Use of default parameters indicating common usage patterns",
    "confidence": 1.0,
    "tokens": [
      6404,
      1362,
      796,
      18931,
      13,
      1136,
      11187,
      1362,
      7,
      834,
      3672,
      834,
      8
    ],
    "start_token": 111,
    "end_token": 124,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      4277,
      10007,
      12739,
      2219,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Use of default parameters indicating common usage patterns"
  },
  {
    "line": 28,
    "text": "        domain=StockTopTenFreeHolder, data_provider=data_provider, entity_provider=entity_provider, day_data=True",
    "annotation": "\u2705 Best Practice: Logging initialization for better traceability and debugging",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      7386,
      28,
      26207,
      9126,
      24893,
      11146,
      39,
      19892,
      11,
      1366,
      62,
      15234,
      1304,
      28,
      7890,
      62,
      15234,
      1304,
      11,
      9312,
      62,
      15234,
      1304,
      28,
      26858,
      62,
      15234,
      1304,
      11,
      1110,
      62,
      7890,
      28,
      17821
    ],
    "start_token": 124,
    "end_token": 165,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5972,
      2667,
      37588,
      329,
      1365,
      12854,
      1799,
      290,
      28769
    ],
    "label": "best_practice",
    "reason": "Logging initialization for better traceability and debugging"
  },
  {
    "line": 30,
    "text": "    run_data_recorder(",
    "annotation": "\ud83e\udde0 ML Signal: Function call without arguments indicating default behavior",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1057,
      62,
      7890,
      62,
      8344,
      2875,
      7
    ],
    "start_token": 165,
    "end_token": 175,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      1231,
      7159,
      12739,
      4277,
      4069
    ],
    "label": "ml_signal",
    "reason": "Function call without arguments indicating default behavior"
  },
  {
    "line": 30,
    "text": "    run_data_recorder(",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential risk if sched is not properly initialized or managed",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1057,
      62,
      7890,
      62,
      8344,
      2875,
      7
    ],
    "start_token": 175,
    "end_token": 185,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2526,
      611,
      6038,
      318,
      407,
      6105,
      23224,
      393,
      5257
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential risk if sched is not properly initialized or managed"
  },
  {
    "line": 30,
    "text": "    run_data_recorder(",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Direct access to a protected member of an object",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1057,
      62,
      7890,
      62,
      8344,
      2875,
      7
    ],
    "start_token": 185,
    "end_token": 195,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      4128,
      1895,
      284,
      257,
      6861,
      2888,
      286,
      281,
      2134
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Direct access to a protected member of an object"
  }
]