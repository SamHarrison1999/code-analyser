[
  {
    "line": 2,
    "text": "import logging",
    "annotation": "\u2705 Best Practice: Grouping imports into standard, third-party, and local sections improves readability.",
    "confidence": 1.0,
    "tokens": [
      11748,
      18931
    ],
    "start_token": 0,
    "end_token": 2,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      656,
      3210,
      11,
      2368,
      12,
      10608,
      11,
      290,
      1957,
      9004,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports into standard, third-party, and local sections improves readability."
  },
  {
    "line": 6,
    "text": "from zvt import init_log",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Using wildcard imports can lead to namespace collisions and make the code harder to understand.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      1330,
      2315,
      62,
      6404
    ],
    "start_token": 2,
    "end_token": 9,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      8554,
      4295,
      9517,
      17944,
      460,
      1085,
      284,
      25745,
      31998,
      290,
      787,
      262,
      2438,
      7069,
      284,
      1833,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Using wildcard imports can lead to namespace collisions and make the code harder to understand."
  },
  {
    "line": 9,
    "text": "",
    "annotation": "\u2705 Best Practice: Using a logger instead of print statements is a best practice for production code.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 9,
    "end_token": 9,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      257,
      49706,
      2427,
      286,
      3601,
      6299,
      318,
      257,
      1266,
      3357,
      329,
      3227,
      2438,
      13
    ],
    "label": "best_practice",
    "reason": "Using a logger instead of print statements is a best practice for production code."
  },
  {
    "line": 11,
    "text": "",
    "annotation": "\u2705 Best Practice: Using a background scheduler allows tasks to run asynchronously without blocking the main thread.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 9,
    "end_token": 9,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      257,
      4469,
      6038,
      18173,
      3578,
      8861,
      284,
      1057,
      355,
      24871,
      3481,
      1231,
      12013,
      262,
      1388,
      4704,
      13
    ],
    "label": "best_practice",
    "reason": "Using a background scheduler allows tasks to run asynchronously without blocking the main thread."
  },
  {
    "line": 15,
    "text": "@sched.scheduled_job(\"cron\", hour=15, minute=30, day_of_week=3)",
    "annotation": "\ud83e\udde0 ML Signal: Usage of cron jobs can indicate periodic task scheduling patterns.",
    "confidence": 0.5,
    "tokens": [
      31,
      1416,
      704,
      13,
      1416,
      704,
      6309,
      62,
      21858,
      7203,
      66,
      1313,
      1600,
      1711,
      28,
      1314,
      11,
      5664,
      28,
      1270,
      11,
      1110,
      62,
      1659,
      62,
      10464,
      28,
      18,
      8
    ],
    "start_token": 9,
    "end_token": 38,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      1067,
      261,
      3946,
      460,
      7603,
      27458,
      4876,
      26925,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of cron jobs can indicate periodic task scheduling patterns."
  },
  {
    "line": 16,
    "text": "def record_block():",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Hardcoding schedule times can lead to inflexibility and potential issues with time zone changes.",
    "confidence": 0.5,
    "tokens": [
      4299,
      1700,
      62,
      9967,
      33529
    ],
    "start_token": 38,
    "end_token": 43,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6912,
      66,
      7656,
      7269,
      1661,
      460,
      1085,
      284,
      1167,
      2588,
      2247,
      290,
      2785,
      2428,
      351,
      640,
      6516,
      2458,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Hardcoding schedule times can lead to inflexibility and potential issues with time zone changes."
  },
  {
    "line": 10,
    "text": "logger = logging.getLogger(__name__)",
    "annotation": "\ud83e\udde0 ML Signal: Function call with specific parameters",
    "confidence": 1.0,
    "tokens": [
      6404,
      1362,
      796,
      18931,
      13,
      1136,
      11187,
      1362,
      7,
      834,
      3672,
      834,
      8
    ],
    "start_token": 43,
    "end_token": 56,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Function call with specific parameters"
  },
  {
    "line": 11,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function call with specific parameters",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 56,
    "end_token": 56,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Function call with specific parameters"
  },
  {
    "line": 15,
    "text": "@sched.scheduled_job(\"cron\", hour=15, minute=30, day_of_week=3)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of cron jobs can lead to unintended execution if not properly managed",
    "confidence": 1.0,
    "tokens": [
      31,
      1416,
      704,
      13,
      1416,
      704,
      6309,
      62,
      21858,
      7203,
      66,
      1313,
      1600,
      1711,
      28,
      1314,
      11,
      5664,
      28,
      1270,
      11,
      1110,
      62,
      1659,
      62,
      10464,
      28,
      18,
      8
    ],
    "start_token": 56,
    "end_token": 85,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      1067,
      261,
      3946,
      460,
      1085,
      284,
      30261,
      9706,
      611,
      407,
      6105,
      5257
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of cron jobs can lead to unintended execution if not properly managed"
  },
  {
    "line": 14,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function call with specific parameters indicating a pattern of usage",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 85,
    "end_token": 85,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      869,
      351,
      2176,
      10007,
      12739,
      257,
      3912,
      286,
      8748
    ],
    "label": "ml_signal",
    "reason": "Function call with specific parameters indicating a pattern of usage"
  },
  {
    "line": 18,
    "text": "    run_data_recorder(domain=Block, data_provider=\"sina\", entity_provider=\"sina\")",
    "annotation": "\u2705 Best Practice: Initialize logging to capture runtime information and errors",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1057,
      62,
      7890,
      62,
      8344,
      2875,
      7,
      27830,
      28,
      12235,
      11,
      1366,
      62,
      15234,
      1304,
      2625,
      82,
      1437,
      1600,
      9312,
      62,
      15234,
      1304,
      2625,
      82,
      1437,
      4943
    ],
    "start_token": 85,
    "end_token": 115,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      20768,
      1096,
      18931,
      284,
      8006,
      19124,
      1321,
      290,
      8563
    ],
    "label": "best_practice",
    "reason": "Initialize logging to capture runtime information and errors"
  },
  {
    "line": 20,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Function call without error handling could lead to unhandled exceptions",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 115,
    "end_token": 115,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      15553,
      869,
      1231,
      4049,
      9041,
      714,
      1085,
      284,
      555,
      38788,
      13269
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Function call without error handling could lead to unhandled exceptions"
  },
  {
    "line": 20,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Function call without error handling could lead to unhandled exceptions",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 115,
    "end_token": 115,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      15553,
      869,
      1231,
      4049,
      9041,
      714,
      1085,
      284,
      555,
      38788,
      13269
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Function call without error handling could lead to unhandled exceptions"
  },
  {
    "line": 20,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Starting a scheduler without error handling or shutdown procedure",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 115,
    "end_token": 115,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      17962,
      257,
      6038,
      18173,
      1231,
      4049,
      9041,
      393,
      18325,
      8771
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Starting a scheduler without error handling or shutdown procedure"
  },
  {
    "line": 20,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Direct access to a protected member of an object",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 115,
    "end_token": 115,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      4128,
      1895,
      284,
      257,
      6861,
      2888,
      286,
      281,
      2134
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Direct access to a protected member of an object"
  }
]