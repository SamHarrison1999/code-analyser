[
  {
    "line": 14,
    "text": "from zvt.informer.informer import EmailInformer",
    "annotation": "\u2705 Best Practice: Use of a logger for handling log messages",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      259,
      16354,
      13,
      259,
      16354,
      1330,
      9570,
      818,
      16354
    ],
    "start_token": 0,
    "end_token": 13,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      257,
      49706,
      329,
      9041,
      2604,
      6218
    ],
    "label": "best_practice",
    "reason": "Use of a logger for handling log messages"
  },
  {
    "line": 17,
    "text": "logger = logging.getLogger(__name__)",
    "annotation": "\ud83e\udde0 ML Signal: Use of a scheduler to run tasks at specific times",
    "confidence": 0.5,
    "tokens": [
      6404,
      1362,
      796,
      18931,
      13,
      1136,
      11187,
      1362,
      7,
      834,
      3672,
      834,
      8
    ],
    "start_token": 13,
    "end_token": 26,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      6038,
      18173,
      284,
      1057,
      8861,
      379,
      2176,
      1661
    ],
    "label": "ml_signal",
    "reason": "Use of a scheduler to run tasks at specific times"
  },
  {
    "line": 20,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Scheduled job pattern for periodic task execution",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 26,
    "end_token": 26,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      27774,
      6309,
      1693,
      3912,
      329,
      27458,
      4876,
      9706
    ],
    "label": "ml_signal",
    "reason": "Scheduled job pattern for periodic task execution"
  },
  {
    "line": 31,
    "text": "            # Stock.record_data(provider='joinquant')",
    "annotation": "\ud83e\udde0 ML Signal: Collecting stock codes for further processing",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      10500,
      13,
      22105,
      62,
      7890,
      7,
      15234,
      1304,
      11639,
      7639,
      18934,
      415,
      11537
    ],
    "start_token": 26,
    "end_token": 51,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9745,
      278,
      4283,
      12416,
      329,
      2252,
      7587
    ],
    "label": "ml_signal",
    "reason": "Collecting stock codes for further processing"
  },
  {
    "line": 33,
    "text": "            # BalanceSheet.record_data(provider='eastmoney')",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Generic exception handling without specific error types",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      22924,
      3347,
      316,
      13,
      22105,
      62,
      7890,
      7,
      15234,
      1304,
      11639,
      23316,
      26316,
      11537
    ],
    "start_token": 51,
    "end_token": 77,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      42044,
      6631,
      9041,
      1231,
      2176,
      4049,
      3858
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Generic exception handling without specific error types"
  },
  {
    "line": 44,
    "text": "                )",
    "annotation": "\ud83e\udde0 ML Signal: Sending email with stock selection results",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 77,
    "end_token": 93,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      32038,
      3053,
      351,
      4283,
      6356,
      2482
    ],
    "label": "ml_signal",
    "reason": "Sending email with stock selection results"
  },
  {
    "line": 49,
    "text": "                    add_to_eastmoney(codes=codes, entity_type=\"stock\", group=\"core\")",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Generic exception handling without specific error types",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      751,
      62,
      1462,
      62,
      23316,
      26316,
      7,
      40148,
      28,
      40148,
      11,
      9312,
      62,
      4906,
      2625,
      13578,
      1600,
      1448,
      2625,
      7295,
      4943
    ],
    "start_token": 93,
    "end_token": 133,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      42044,
      6631,
      9041,
      1231,
      2176,
      4049,
      3858
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Generic exception handling without specific error types"
  },
  {
    "line": 54,
    "text": "                        \"report_core_company error:{}\".format(e),",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for email spamming if error persists",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      13116,
      62,
      7295,
      62,
      39722,
      4049,
      29164,
      92,
      1911,
      18982,
      7,
      68,
      828
    ],
    "start_token": 133,
    "end_token": 170,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      3053,
      18084,
      2229,
      611,
      4049,
      35545
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for email spamming if error persists"
  },
  {
    "line": 57,
    "text": "                infos = stocks_with_info(stocks)",
    "annotation": "\u2705 Best Practice: Initializing logging for the application",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1167,
      418,
      796,
      14420,
      62,
      4480,
      62,
      10951,
      7,
      29522,
      8
    ],
    "start_token": 170,
    "end_token": 196,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      20768,
      2890,
      18931,
      329,
      262,
      3586
    ],
    "label": "best_practice",
    "reason": "Initializing logging for the application"
  },
  {
    "line": 57,
    "text": "                infos = stocks_with_info(stocks)",
    "annotation": "\ud83e\udde0 ML Signal: Starting a scheduler for periodic task execution",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1167,
      418,
      796,
      14420,
      62,
      4480,
      62,
      10951,
      7,
      29522,
      8
    ],
    "start_token": 196,
    "end_token": 222,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17962,
      257,
      6038,
      18173,
      329,
      27458,
      4876,
      9706
    ],
    "label": "ml_signal",
    "reason": "Starting a scheduler for periodic task execution"
  },
  {
    "line": 57,
    "text": "                infos = stocks_with_info(stocks)",
    "annotation": "\u2705 Best Practice: Ensuring the main thread waits for the scheduler to finish",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1167,
      418,
      796,
      14420,
      62,
      4480,
      62,
      10951,
      7,
      29522,
      8
    ],
    "start_token": 222,
    "end_token": 248,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      48221,
      870,
      262,
      1388,
      4704,
      28364,
      329,
      262,
      6038,
      18173,
      284,
      5461
    ],
    "label": "best_practice",
    "reason": "Ensuring the main thread waits for the scheduler to finish"
  }
]