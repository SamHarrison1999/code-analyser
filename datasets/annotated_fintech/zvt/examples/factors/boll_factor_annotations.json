[
  {
    "line": 8,
    "text": "from zvt.factors.technical_factor import TechnicalFactor",
    "annotation": "\u2705 Best Practice: Use of descriptive variable names improves code readability.",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      22584,
      669,
      13,
      47944,
      62,
      31412,
      1330,
      20671,
      41384
    ],
    "start_token": 0,
    "end_token": 13,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      35644,
      7885,
      3891,
      19575,
      2438,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Use of descriptive variable names improves code readability."
  },
  {
    "line": 10,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of BollingerBands indicates a financial data transformation pattern.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 13,
    "end_token": 13,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      43479,
      3889,
      33,
      1746,
      9217,
      257,
      3176,
      1366,
      13389,
      3912,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of BollingerBands indicates a financial data transformation pattern."
  },
  {
    "line": 12,
    "text": "    def transform_one(self, entity_id, df: pd.DataFrame) -> pd.DataFrame:",
    "annotation": "\ud83e\udde0 ML Signal: Adding new columns to DataFrame based on financial indicators.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      6121,
      62,
      505,
      7,
      944,
      11,
      9312,
      62,
      312,
      11,
      47764,
      25,
      279,
      67,
      13,
      6601,
      19778,
      8,
      4613,
      279,
      67,
      13,
      6601,
      19778,
      25
    ],
    "start_token": 13,
    "end_token": 42,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      18247,
      649,
      15180,
      284,
      6060,
      19778,
      1912,
      319,
      3176,
      21337,
      13
    ],
    "label": "ml_signal",
    "reason": "Adding new columns to DataFrame based on financial indicators."
  },
  {
    "line": 14,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Adding new columns to DataFrame based on financial indicators.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 42,
    "end_token": 42,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      18247,
      649,
      15180,
      284,
      6060,
      19778,
      1912,
      319,
      3176,
      21337,
      13
    ],
    "label": "ml_signal",
    "reason": "Adding new columns to DataFrame based on financial indicators."
  },
  {
    "line": 16,
    "text": "        df[\"bb_bbm\"] = indicator_bb.bollinger_mavg()",
    "annotation": "\ud83e\udde0 ML Signal: Adding new columns to DataFrame based on financial indicators.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      14692,
      11848,
      62,
      11848,
      76,
      8973,
      796,
      16916,
      62,
      11848,
      13,
      65,
      692,
      3889,
      62,
      76,
      615,
      70,
      3419
    ],
    "start_token": 42,
    "end_token": 69,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      18247,
      649,
      15180,
      284,
      6060,
      19778,
      1912,
      319,
      3176,
      21337,
      13
    ],
    "label": "ml_signal",
    "reason": "Adding new columns to DataFrame based on financial indicators."
  },
  {
    "line": 18,
    "text": "        df[\"bb_bbl\"] = indicator_bb.bollinger_lband()",
    "annotation": "\ud83e\udde0 ML Signal: Adding new columns to DataFrame based on financial indicators.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      14692,
      11848,
      62,
      65,
      2436,
      8973,
      796,
      16916,
      62,
      11848,
      13,
      65,
      692,
      3889,
      62,
      75,
      3903,
      3419
    ],
    "start_token": 69,
    "end_token": 95,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      18247,
      649,
      15180,
      284,
      6060,
      19778,
      1912,
      319,
      3176,
      21337,
      13
    ],
    "label": "ml_signal",
    "reason": "Adding new columns to DataFrame based on financial indicators."
  },
  {
    "line": 20,
    "text": "        # Add Bollinger Band high indicator",
    "annotation": "\ud83e\udde0 ML Signal: Adding new columns to DataFrame based on financial indicators.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      3060,
      43479,
      3889,
      10243,
      1029,
      16916
    ],
    "start_token": 95,
    "end_token": 109,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      18247,
      649,
      15180,
      284,
      6060,
      19778,
      1912,
      319,
      3176,
      21337,
      13
    ],
    "label": "ml_signal",
    "reason": "Adding new columns to DataFrame based on financial indicators."
  },
  {
    "line": 22,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Adding new columns to DataFrame based on financial indicators.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 109,
    "end_token": 109,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      18247,
      649,
      15180,
      284,
      6060,
      19778,
      1912,
      319,
      3176,
      21337,
      13
    ],
    "label": "ml_signal",
    "reason": "Adding new columns to DataFrame based on financial indicators."
  },
  {
    "line": 24,
    "text": "        df[\"bb_bbli\"] = indicator_bb.bollinger_lband_indicator()",
    "annotation": "\ud83e\udde0 ML Signal: Adding new columns to DataFrame based on financial indicators.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      14692,
      11848,
      62,
      65,
      2436,
      72,
      8973,
      796,
      16916,
      62,
      11848,
      13,
      65,
      692,
      3889,
      62,
      75,
      3903,
      62,
      521,
      26407,
      3419
    ],
    "start_token": 109,
    "end_token": 139,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      18247,
      649,
      15180,
      284,
      6060,
      19778,
      1912,
      319,
      3176,
      21337,
      13
    ],
    "label": "ml_signal",
    "reason": "Adding new columns to DataFrame based on financial indicators."
  },
  {
    "line": 17,
    "text": "        df[\"bb_bbh\"] = indicator_bb.bollinger_hband()",
    "annotation": "\ud83e\udde0 ML Signal: Inheritance from a class named TechnicalFactor suggests a design pattern for financial or technical analysis.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      14692,
      11848,
      62,
      11848,
      71,
      8973,
      796,
      16916,
      62,
      11848,
      13,
      65,
      692,
      3889,
      62,
      71,
      3903,
      3419
    ],
    "start_token": 139,
    "end_token": 165,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47025,
      42942,
      422,
      257,
      1398,
      3706,
      20671,
      41384,
      5644,
      257,
      1486,
      3912,
      329,
      3176,
      393,
      6276,
      3781,
      13
    ],
    "label": "ml_signal",
    "reason": "Inheritance from a class named TechnicalFactor suggests a design pattern for financial or technical analysis."
  },
  {
    "line": 19,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of a class-level attribute for a transformer indicates a pattern for applying transformations consistently across instances.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 165,
    "end_token": 165,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      257,
      1398,
      12,
      5715,
      11688,
      329,
      257,
      47385,
      9217,
      257,
      3912,
      329,
      11524,
      38226,
      9835,
      1973,
      10245,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of a class-level attribute for a transformer indicates a pattern for applying transformations consistently across instances."
  },
  {
    "line": 19,
    "text": "",
    "annotation": "\u2705 Best Practice: Include type hints for return type to improve code readability and maintainability",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 165,
    "end_token": 165,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      40348,
      2099,
      20269,
      329,
      1441,
      2099,
      284,
      2987,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Include type hints for return type to improve code readability and maintainability"
  },
  {
    "line": 21,
    "text": "        df[\"bb_bbhi\"] = indicator_bb.bollinger_hband_indicator()",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Directly accessing DataFrame columns without checking if they exist can lead to KeyError",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      14692,
      11848,
      62,
      11848,
      5303,
      8973,
      796,
      16916,
      62,
      11848,
      13,
      65,
      692,
      3889,
      62,
      71,
      3903,
      62,
      521,
      26407,
      3419
    ],
    "start_token": 165,
    "end_token": 194,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      4128,
      306,
      22534,
      6060,
      19778,
      15180,
      1231,
      10627,
      611,
      484,
      2152,
      460,
      1085,
      284,
      7383,
      12331
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Directly accessing DataFrame columns without checking if they exist can lead to KeyError"
  },
  {
    "line": 23,
    "text": "        # Add Bollinger Band low indicator",
    "annotation": "\ud83e\udde0 ML Signal: Usage of DataFrame operations to compute results",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      3060,
      43479,
      3889,
      10243,
      1877,
      16916
    ],
    "start_token": 194,
    "end_token": 208,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      6060,
      19778,
      4560,
      284,
      24061,
      2482
    ],
    "label": "ml_signal",
    "reason": "Usage of DataFrame operations to compute results"
  },
  {
    "line": 25,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Handling of specific DataFrame values",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 208,
    "end_token": 208,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      49500,
      286,
      2176,
      6060,
      19778,
      3815
    ],
    "label": "ml_signal",
    "reason": "Handling of specific DataFrame values"
  },
  {
    "line": 27,
    "text": "        df[\"bb_bbw\"] = indicator_bb.bollinger_wband()",
    "annotation": "\ud83e\udde0 ML Signal: Handling of specific DataFrame values",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      14692,
      11848,
      62,
      11848,
      86,
      8973,
      796,
      16916,
      62,
      11848,
      13,
      65,
      692,
      3889,
      62,
      86,
      3903,
      3419
    ],
    "start_token": 208,
    "end_token": 234,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      49500,
      286,
      2176,
      6060,
      19778,
      3815
    ],
    "label": "ml_signal",
    "reason": "Handling of specific DataFrame values"
  },
  {
    "line": 29,
    "text": "        # Add Percentage Bollinger Bands",
    "annotation": "\ud83e\udde0 ML Signal: Handling of specific DataFrame values",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      3060,
      36013,
      43479,
      3889,
      347,
      1746
    ],
    "start_token": 234,
    "end_token": 248,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      49500,
      286,
      2176,
      6060,
      19778,
      3815
    ],
    "label": "ml_signal",
    "reason": "Handling of specific DataFrame values"
  },
  {
    "line": 32,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Dynamic import within the main block",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 248,
    "end_token": 248,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      26977,
      1330,
      1626,
      262,
      1388,
      2512
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Dynamic import within the main block"
  },
  {
    "line": 35,
    "text": "    transformer = BollTransformer()",
    "annotation": "\ud83e\udde0 ML Signal: Usage of specific provider and entity_ids",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      47385,
      796,
      43479,
      8291,
      16354,
      3419
    ],
    "start_token": 248,
    "end_token": 257,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2176,
      10131,
      290,
      9312,
      62,
      2340
    ],
    "label": "ml_signal",
    "reason": "Usage of specific provider and entity_ids"
  },
  {
    "line": 36,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of specific entity_ids",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 257,
    "end_token": 257,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2176,
      9312,
      62,
      2340
    ],
    "label": "ml_signal",
    "reason": "Usage of specific entity_ids"
  },
  {
    "line": 38,
    "text": "        return [self.factor_df[[\"bb_bbm\", \"bb_bbh\", \"bb_bbl\"]]]",
    "annotation": "\ud83e\udde0 ML Signal: Recording data with specific parameters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      685,
      944,
      13,
      31412,
      62,
      7568,
      58,
      14692,
      11848,
      62,
      11848,
      76,
      1600,
      366,
      11848,
      62,
      11848,
      71,
      1600,
      366,
      11848,
      62,
      65,
      2436,
      8973,
      11907
    ],
    "start_token": 257,
    "end_token": 291,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      43905,
      1366,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Recording data with specific parameters"
  },
  {
    "line": 40,
    "text": "    def compute_result(self):",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of BollFactor with specific parameters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      24061,
      62,
      20274,
      7,
      944,
      2599
    ],
    "start_token": 291,
    "end_token": 301,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      43479,
      41384,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Instantiation of BollFactor with specific parameters"
  },
  {
    "line": 43,
    "text": "        self.result_df[self.result_df == 0] = None",
    "annotation": "\ud83e\udde0 ML Signal: Drawing factor with visualization",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      20274,
      62,
      7568,
      58,
      944,
      13,
      20274,
      62,
      7568,
      6624,
      657,
      60,
      796,
      6045
    ],
    "start_token": 301,
    "end_token": 324,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40027,
      5766,
      351,
      32704
    ],
    "label": "ml_signal",
    "reason": "Drawing factor with visualization"
  },
  {
    "line": 43,
    "text": "        self.result_df[self.result_df == 0] = None",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Dynamic import within the main block",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      20274,
      62,
      7568,
      58,
      944,
      13,
      20274,
      62,
      7568,
      6624,
      657,
      60,
      796,
      6045
    ],
    "start_token": 324,
    "end_token": 347,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      26977,
      1330,
      1626,
      262,
      1388,
      2512
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Dynamic import within the main block"
  },
  {
    "line": 43,
    "text": "        self.result_df[self.result_df == 0] = None",
    "annotation": "\ud83e\udde0 ML Signal: Usage of specific provider and entity_ids",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      20274,
      62,
      7568,
      58,
      944,
      13,
      20274,
      62,
      7568,
      6624,
      657,
      60,
      796,
      6045
    ],
    "start_token": 347,
    "end_token": 370,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2176,
      10131,
      290,
      9312,
      62,
      2340
    ],
    "label": "ml_signal",
    "reason": "Usage of specific provider and entity_ids"
  },
  {
    "line": 43,
    "text": "        self.result_df[self.result_df == 0] = None",
    "annotation": "\ud83e\udde0 ML Signal: Usage of specific entity_ids",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      20274,
      62,
      7568,
      58,
      944,
      13,
      20274,
      62,
      7568,
      6624,
      657,
      60,
      796,
      6045
    ],
    "start_token": 370,
    "end_token": 393,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2176,
      9312,
      62,
      2340
    ],
    "label": "ml_signal",
    "reason": "Usage of specific entity_ids"
  },
  {
    "line": 43,
    "text": "        self.result_df[self.result_df == 0] = None",
    "annotation": "\ud83e\udde0 ML Signal: Recording data with specific parameters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      20274,
      62,
      7568,
      58,
      944,
      13,
      20274,
      62,
      7568,
      6624,
      657,
      60,
      796,
      6045
    ],
    "start_token": 393,
    "end_token": 416,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      43905,
      1366,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Recording data with specific parameters"
  },
  {
    "line": 43,
    "text": "        self.result_df[self.result_df == 0] = None",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of BollFactor with specific parameters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      20274,
      62,
      7568,
      58,
      944,
      13,
      20274,
      62,
      7568,
      6624,
      657,
      60,
      796,
      6045
    ],
    "start_token": 416,
    "end_token": 439,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      43479,
      41384,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Instantiation of BollFactor with specific parameters"
  },
  {
    "line": 43,
    "text": "        self.result_df[self.result_df == 0] = None",
    "annotation": "\ud83e\udde0 ML Signal: Drawing factor with visualization",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      20274,
      62,
      7568,
      58,
      944,
      13,
      20274,
      62,
      7568,
      6624,
      657,
      60,
      796,
      6045
    ],
    "start_token": 439,
    "end_token": 462,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40027,
      5766,
      351,
      32704
    ],
    "label": "ml_signal",
    "reason": "Drawing factor with visualization"
  }
]