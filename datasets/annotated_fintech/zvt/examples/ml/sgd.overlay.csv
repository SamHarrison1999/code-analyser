annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
üß† ML Signal: Importing machine learning models indicates usage of ML algorithms,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 4572, 4673, 4981, 9217, 8748, 286, 10373, 16113]",0.5,17,ml_signal,2,Importing machine learning models indicates usage of ML algorithms,,0,"from sklearn.linear_model import SGDClassifier, SGDRegressor","[6738, 1341, 35720, 13, 29127, 62, 19849, 1330, 26147, 35, 9487, 7483, 11, 26147, 7707, 1533, 44292]"
üß† ML Signal: Using pipelines suggests a pattern of combining preprocessing and modeling steps,"[8582, 100, 254, 10373, 26484, 25, 8554, 31108, 5644, 257, 3912, 286, 19771, 662, 36948, 290, 21128, 4831]",0.5,27,ml_signal,4,Using pipelines suggests a pattern of combining preprocessing and modeling steps,,17,from sklearn.preprocessing import StandardScaler,"[6738, 1341, 35720, 13, 3866, 36948, 1330, 8997, 3351, 36213]"
üß† ML Signal: StandardScaler is commonly used for feature scaling in ML workflows,"[8582, 100, 254, 10373, 26484, 25, 8997, 3351, 36213, 318, 8811, 973, 329, 3895, 20796, 287, 10373, 670, 44041]",0.5,37,ml_signal,6,StandardScaler is commonly used for feature scaling in ML workflows,,27,from zvt.ml import MaStockMLMachine,"[6738, 1976, 36540, 13, 4029, 1330, 6669, 26207, 5805, 37573]"
üß† ML Signal: Importing a custom ML class indicates usage of domain-specific ML models,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 257, 2183, 10373, 1398, 9217, 8748, 286, 7386, 12, 11423, 10373, 4981]",1.0,37,ml_signal,8,Importing a custom ML class indicates usage of domain-specific ML models,,37,,[]
üß† ML Signal: Function definition for a machine learning classification task,"[8582, 100, 254, 10373, 26484, 25, 15553, 6770, 329, 257, 4572, 4673, 17923, 4876]",1.0,37,ml_signal,5,Function definition for a machine learning classification task,,37,,[]
üß† ML Signal: Instantiation of a custom machine learning class with specific parameters,"[8582, 100, 254, 10373, 26484, 25, 24470, 3920, 286, 257, 2183, 4572, 4673, 1398, 351, 2176, 10007]",1.0,37,ml_signal,7,Instantiation of a custom machine learning class with specific parameters,,37,,[]
üß† ML Signal: Creation of a machine learning pipeline with data scaling and a classifier,"[8582, 100, 254, 10373, 26484, 25, 21582, 286, 257, 4572, 4673, 11523, 351, 1366, 20796, 290, 257, 1398, 7483]",1.0,44,ml_signal,9,Creation of a machine learning pipeline with data scaling and a classifier,,37,def sgd_classification():,"[4299, 264, 21287, 62, 4871, 2649, 33529]"
üß† ML Signal: Training the machine learning model,"[8582, 100, 254, 10373, 26484, 25, 13614, 262, 4572, 4673, 2746]",1.0,79,ml_signal,11,Training the machine learning model,,44,"    clf = make_pipeline(StandardScaler(), SGDClassifier(max_iter=1000, tol=1e-3))","[220, 220, 220, 537, 69, 796, 787, 62, 79, 541, 4470, 7, 23615, 3351, 36213, 22784, 26147, 35, 9487, 7483, 7, 9806, 62, 2676, 28, 12825, 11, 284, 75, 28, 16, 68, 12, 18, 4008]"
üß† ML Signal: Making predictions with the trained model,"[8582, 100, 254, 10373, 26484, 25, 16427, 16277, 351, 262, 8776, 2746]",1.0,87,ml_signal,13,Making predictions with the trained model,,79,    machine.predict(),"[220, 220, 220, 4572, 13, 79, 17407, 3419]"
üß† ML Signal: Visualizing or drawing the results of the prediction,"[8582, 100, 254, 10373, 26484, 25, 15612, 2890, 393, 8263, 262, 2482, 286, 262, 17724]",1.0,87,ml_signal,15,Visualizing or drawing the results of the prediction,,87,,[]
üß† ML Signal: Usage of a machine learning pipeline with data scaling and regression,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 4572, 4673, 11523, 351, 1366, 20796, 290, 20683]",1.0,99,ml_signal,12,Usage of a machine learning pipeline with data scaling and regression,,87,    machine.train(model=clf),"[220, 220, 220, 4572, 13, 27432, 7, 19849, 28, 565, 69, 8]"
üß† ML Signal: Use of a pipeline for preprocessing and model training,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 11523, 329, 662, 36948, 290, 2746, 3047]",0.5,120,ml_signal,14,Use of a pipeline for preprocessing and model training,,99,"    machine.draw_result(entity_id=""stock_sz_000001"")","[220, 220, 220, 4572, 13, 19334, 62, 20274, 7, 26858, 62, 312, 2625, 13578, 62, 82, 89, 62, 2388, 486, 4943]"
üß† ML Signal: Training a model with a specified regressor,"[8582, 100, 254, 10373, 26484, 25, 13614, 257, 2746, 351, 257, 7368, 842, 44292]",0.5,120,ml_signal,16,Training a model with a specified regressor,,120,,[]
üß† ML Signal: Model prediction step,"[8582, 100, 254, 10373, 26484, 25, 9104, 17724, 2239]",0.5,156,ml_signal,18,Model prediction step,,120,"    machine = MaStockMLMachine(data_provider=""em"", entity_ids=[""stock_sz_000001""], label_method=""raw"")","[220, 220, 220, 4572, 796, 6669, 26207, 5805, 37573, 7, 7890, 62, 15234, 1304, 2625, 368, 1600, 9312, 62, 2340, 28, 14692, 13578, 62, 82, 89, 62, 2388, 486, 33116, 6167, 62, 24396, 2625, 1831, 4943]"
üß† ML Signal: Visualization of model results,"[8582, 100, 254, 10373, 26484, 25, 15612, 1634, 286, 2746, 2482]",0.5,190,ml_signal,19,Visualization of model results,,156,"    reg = make_pipeline(StandardScaler(), SGDRegressor(max_iter=1000, tol=1e-3))","[220, 220, 220, 842, 796, 787, 62, 79, 541, 4470, 7, 23615, 3351, 36213, 22784, 26147, 7707, 1533, 44292, 7, 9806, 62, 2676, 28, 12825, 11, 284, 75, 28, 16, 68, 12, 18, 4008]"
‚ö†Ô∏è SAST Risk (High): Function call to undefined function 'sgd_classification',"[158, 248, 254, 37929, 311, 11262, 19602, 357, 11922, 2599, 15553, 869, 284, 28721, 2163, 705, 82, 21287, 62, 4871, 2649, 6]",1.0,224,sast_risk,19,Function call to undefined function 'sgd_classification',High,190,"    reg = make_pipeline(StandardScaler(), SGDRegressor(max_iter=1000, tol=1e-3))","[220, 220, 220, 842, 796, 787, 62, 79, 541, 4470, 7, 23615, 3351, 36213, 22784, 26147, 7707, 1533, 44292, 7, 9806, 62, 2676, 28, 12825, 11, 284, 75, 28, 16, 68, 12, 18, 4008]"
‚úÖ Best Practice: Ensure all functions are defined before use,"[26486, 227, 6705, 19939, 25, 48987, 477, 5499, 389, 5447, 878, 779]",0.5,258,best_practice,19,Ensure all functions are defined before use,,224,"    reg = make_pipeline(StandardScaler(), SGDRegressor(max_iter=1000, tol=1e-3))","[220, 220, 220, 842, 796, 787, 62, 79, 541, 4470, 7, 23615, 3351, 36213, 22784, 26147, 7707, 1533, 44292, 7, 9806, 62, 2676, 28, 12825, 11, 284, 75, 28, 16, 68, 12, 18, 4008]"
