[
  {
    "line": 2,
    "text": "import pandas as pd",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 0.5,
    "tokens": [
      11748,
      19798,
      292,
      355,
      279,
      67
    ],
    "start_token": 0,
    "end_token": 6,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 7,
    "text": "from zvt.trader import StockTrader",
    "annotation": "\u2705 Best Practice: Grouping imports from the same module together improves readability.",
    "confidence": 0.5,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      2213,
      5067,
      1330,
      10500,
      2898,
      5067
    ],
    "start_token": 6,
    "end_token": 16,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      8265,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same module together improves readability."
  },
  {
    "line": 8,
    "text": "from zvt.utils.pd_utils import pd_is_not_null",
    "annotation": "\u2705 Best Practice: Class-level attributes should be documented to explain their purpose and usage.",
    "confidence": 1.0,
    "tokens": [
      6738,
      1976,
      36540,
      13,
      26791,
      13,
      30094,
      62,
      26791,
      1330,
      279,
      67,
      62,
      271,
      62,
      1662,
      62,
      8423
    ],
    "start_token": 16,
    "end_token": 34,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      12,
      5715,
      12608,
      815,
      307,
      12395,
      284,
      4727,
      511,
      4007,
      290,
      8748,
      13
    ],
    "label": "best_practice",
    "reason": "Class-level attributes should be documented to explain their purpose and usage."
  },
  {
    "line": 10,
    "text": "",
    "annotation": "\u2705 Best Practice: Initialize class attributes in the constructor for better readability and maintainability.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 34,
    "end_token": 34,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      20768,
      1096,
      1398,
      12608,
      287,
      262,
      23772,
      329,
      1365,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Initialize class attributes in the constructor for better readability and maintainability."
  },
  {
    "line": 11,
    "text": "",
    "annotation": "\u2705 Best Practice: Convert to pandas timestamp for consistency in date operations",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 34,
    "end_token": 34,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      38240,
      284,
      19798,
      292,
      41033,
      329,
      15794,
      287,
      3128,
      4560
    ],
    "label": "best_practice",
    "reason": "Convert to pandas timestamp for consistency in date operations"
  },
  {
    "line": 14,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Filtering by specific actor type and report date",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 34,
    "end_token": 34,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7066,
      20212,
      416,
      2176,
      8674,
      2099,
      290,
      989,
      3128
    ],
    "label": "ml_signal",
    "reason": "Filtering by specific actor type and report date"
  },
  {
    "line": 21,
    "text": "            StockActorSummary.report_date == recent_report_date,",
    "annotation": "\ud83e\udde0 ML Signal: Filtering by entity IDs if available",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      10500,
      40277,
      22093,
      13,
      13116,
      62,
      4475,
      6624,
      2274,
      62,
      13116,
      62,
      4475,
      11
    ],
    "start_token": 34,
    "end_token": 59,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7066,
      20212,
      416,
      9312,
      32373,
      611,
      1695
    ],
    "label": "ml_signal",
    "reason": "Filtering by entity IDs if available"
  },
  {
    "line": 23,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Querying data with specific filters",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 59,
    "end_token": 59,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2264,
      263,
      1112,
      1366,
      351,
      2176,
      16628
    ],
    "label": "ml_signal",
    "reason": "Querying data with specific filters"
  },
  {
    "line": 26,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Logging data frame information",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 59,
    "end_token": 59,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      1366,
      5739,
      1321
    ],
    "label": "ml_signal",
    "reason": "Logging data frame information"
  },
  {
    "line": 29,
    "text": "        if pd_is_not_null(df):",
    "annotation": "\ud83e\udde0 ML Signal: Identifying long and short positions based on change ratio",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      279,
      67,
      62,
      271,
      62,
      1662,
      62,
      8423,
      7,
      7568,
      2599
    ],
    "start_token": 59,
    "end_token": 78,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11440,
      4035,
      890,
      290,
      1790,
      6116,
      1912,
      319,
      1487,
      8064
    ],
    "label": "ml_signal",
    "reason": "Identifying long and short positions based on change ratio"
  },
  {
    "line": 32,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Converting data frame column to list and then to set",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 78,
    "end_token": 78,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      35602,
      889,
      1366,
      5739,
      5721,
      284,
      1351,
      290,
      788,
      284,
      900
    ],
    "label": "ml_signal",
    "reason": "Converting data frame column to list and then to set"
  },
  {
    "line": 37,
    "text": "            short_targets = set(short_df[\"entity_id\"].to_list())",
    "annotation": "\ud83e\udde0 ML Signal: Executing buy operation for long targets",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1790,
      62,
      83,
      853,
      1039,
      796,
      900,
      7,
      19509,
      62,
      7568,
      14692,
      26858,
      62,
      312,
      1,
      4083,
      1462,
      62,
      4868,
      28955
    ],
    "start_token": 78,
    "end_token": 110,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8393,
      15129,
      2822,
      4905,
      329,
      890,
      6670
    ],
    "label": "ml_signal",
    "reason": "Executing buy operation for long targets"
  },
  {
    "line": 40,
    "text": "            if short_targets:",
    "annotation": "\ud83e\udde0 ML Signal: Executing sell operation for short targets",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      1790,
      62,
      83,
      853,
      1039,
      25
    ],
    "start_token": 110,
    "end_token": 128,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8393,
      15129,
      3677,
      4905,
      329,
      1790,
      6670
    ],
    "label": "ml_signal",
    "reason": "Executing sell operation for short targets"
  },
  {
    "line": 40,
    "text": "            if short_targets:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Generic exception handling without specific error types",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      1790,
      62,
      83,
      853,
      1039,
      25
    ],
    "start_token": 128,
    "end_token": 146,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      42044,
      6631,
      9041,
      1231,
      2176,
      4049,
      3858
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Generic exception handling without specific error types"
  },
  {
    "line": 40,
    "text": "            if short_targets:",
    "annotation": "\ud83e\udde0 ML Signal: Recording data for a specific stock code",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      1790,
      62,
      83,
      853,
      1039,
      25
    ],
    "start_token": 146,
    "end_token": 164,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      43905,
      1366,
      329,
      257,
      2176,
      4283,
      2438
    ],
    "label": "ml_signal",
    "reason": "Recording data for a specific stock code"
  },
  {
    "line": 40,
    "text": "            if short_targets:",
    "annotation": "\ud83e\udde0 ML Signal: Running a trading strategy with specific parameters",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      1790,
      62,
      83,
      853,
      1039,
      25
    ],
    "start_token": 164,
    "end_token": 182,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      18162,
      257,
      7313,
      4811,
      351,
      2176,
      10007
    ],
    "label": "ml_signal",
    "reason": "Running a trading strategy with specific parameters"
  }
]