annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Grouping imports from the same module together improves readability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 17944, 422, 262, 976, 8265, 1978, 19575, 1100, 1799, 13]",0.5,6,best_practice,2,Grouping imports from the same module together improves readability.,,0,import pandas as pd,"[11748, 19798, 292, 355, 279, 67]"
‚úÖ Best Practice: Grouping imports from the same module together improves readability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 17944, 422, 262, 976, 8265, 1978, 19575, 1100, 1799, 13]",0.5,16,best_practice,7,Grouping imports from the same module together improves readability.,,6,from zvt.trader import StockTrader,"[6738, 1976, 36540, 13, 2213, 5067, 1330, 10500, 2898, 5067]"
‚úÖ Best Practice: Class-level attributes should be documented to explain their purpose and usage.,"[26486, 227, 6705, 19939, 25, 5016, 12, 5715, 12608, 815, 307, 12395, 284, 4727, 511, 4007, 290, 8748, 13]",1.0,34,best_practice,8,Class-level attributes should be documented to explain their purpose and usage.,,16,from zvt.utils.pd_utils import pd_is_not_null,"[6738, 1976, 36540, 13, 26791, 13, 30094, 62, 26791, 1330, 279, 67, 62, 271, 62, 1662, 62, 8423]"
‚úÖ Best Practice: Initialize class attributes in the constructor for better readability and maintainability.,"[26486, 227, 6705, 19939, 25, 20768, 1096, 1398, 12608, 287, 262, 23772, 329, 1365, 1100, 1799, 290, 5529, 1799, 13]",0.5,34,best_practice,10,Initialize class attributes in the constructor for better readability and maintainability.,,34,,[]
‚úÖ Best Practice: Convert to pandas timestamp for consistency in date operations,"[26486, 227, 6705, 19939, 25, 38240, 284, 19798, 292, 41033, 329, 15794, 287, 3128, 4560]",1.0,34,best_practice,11,Convert to pandas timestamp for consistency in date operations,,34,,[]
üß† ML Signal: Filtering by specific actor type and report date,"[8582, 100, 254, 10373, 26484, 25, 7066, 20212, 416, 2176, 8674, 2099, 290, 989, 3128]",1.0,34,ml_signal,14,Filtering by specific actor type and report date,,34,,[]
üß† ML Signal: Filtering by entity IDs if available,"[8582, 100, 254, 10373, 26484, 25, 7066, 20212, 416, 9312, 32373, 611, 1695]",1.0,59,ml_signal,21,Filtering by entity IDs if available,,34,"            StockActorSummary.report_date == recent_report_date,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 10500, 40277, 22093, 13, 13116, 62, 4475, 6624, 2274, 62, 13116, 62, 4475, 11]"
üß† ML Signal: Querying data with specific filters,"[8582, 100, 254, 10373, 26484, 25, 2264, 263, 1112, 1366, 351, 2176, 16628]",1.0,59,ml_signal,23,Querying data with specific filters,,59,,[]
üß† ML Signal: Logging data frame information,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 1366, 5739, 1321]",1.0,59,ml_signal,26,Logging data frame information,,59,,[]
üß† ML Signal: Identifying long and short positions based on change ratio,"[8582, 100, 254, 10373, 26484, 25, 11440, 4035, 890, 290, 1790, 6116, 1912, 319, 1487, 8064]",1.0,78,ml_signal,29,Identifying long and short positions based on change ratio,,59,        if pd_is_not_null(df):,"[220, 220, 220, 220, 220, 220, 220, 611, 279, 67, 62, 271, 62, 1662, 62, 8423, 7, 7568, 2599]"
üß† ML Signal: Converting data frame column to list and then to set,"[8582, 100, 254, 10373, 26484, 25, 35602, 889, 1366, 5739, 5721, 284, 1351, 290, 788, 284, 900]",1.0,78,ml_signal,32,Converting data frame column to list and then to set,,78,,[]
üß† ML Signal: Executing buy operation for long targets,"[8582, 100, 254, 10373, 26484, 25, 8393, 15129, 2822, 4905, 329, 890, 6670]",1.0,110,ml_signal,37,Executing buy operation for long targets,,78,"            short_targets = set(short_df[""entity_id""].to_list())","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1790, 62, 83, 853, 1039, 796, 900, 7, 19509, 62, 7568, 14692, 26858, 62, 312, 1, 4083, 1462, 62, 4868, 28955]"
üß† ML Signal: Executing sell operation for short targets,"[8582, 100, 254, 10373, 26484, 25, 8393, 15129, 3677, 4905, 329, 1790, 6670]",1.0,128,ml_signal,40,Executing sell operation for short targets,,110,            if short_targets:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 1790, 62, 83, 853, 1039, 25]"
‚ö†Ô∏è SAST Risk (Low): Generic exception handling without specific error types,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 42044, 6631, 9041, 1231, 2176, 4049, 3858]",1.0,146,sast_risk,40,Generic exception handling without specific error types,Low,128,            if short_targets:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 1790, 62, 83, 853, 1039, 25]"
üß† ML Signal: Recording data for a specific stock code,"[8582, 100, 254, 10373, 26484, 25, 43905, 1366, 329, 257, 2176, 4283, 2438]",1.0,164,ml_signal,40,Recording data for a specific stock code,,146,            if short_targets:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 1790, 62, 83, 853, 1039, 25]"
üß† ML Signal: Running a trading strategy with specific parameters,"[8582, 100, 254, 10373, 26484, 25, 18162, 257, 7313, 4811, 351, 2176, 10007]",1.0,182,ml_signal,40,Running a trading strategy with specific parameters,,164,            if short_targets:,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 611, 1790, 62, 83, 853, 1039, 25]"
