annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Grouping related imports together improves readability and maintainability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 3519, 17944, 1978, 19575, 1100, 1799, 290, 5529, 1799, 13]",0.5,0,best_practice,3,Grouping related imports together improves readability and maintainability.,,0,,[]
"üß† ML Signal: Class definition for a custom factor, useful for model training on class-based patterns","[8582, 100, 254, 10373, 26484, 25, 5016, 6770, 329, 257, 2183, 5766, 11, 4465, 329, 2746, 3047, 319, 1398, 12, 3106, 7572]",0.5,16,ml_signal,7,"Class definition for a custom factor, useful for model training on class-based patterns",,0,"from zvt.contract.factor import Factor, Transformer, Accumulator","[6738, 1976, 36540, 13, 28484, 13, 31412, 1330, 27929, 11, 3602, 16354, 11, 6366, 388, 8927]"
‚ö†Ô∏è SAST Risk (Low): Using mutable default arguments like lists can lead to unexpected behavior.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 4517, 540, 4277, 7159, 588, 8341, 460, 1085, 284, 10059, 4069, 13]",1.0,28,sast_risk,8,Using mutable default arguments like lists can lead to unexpected behavior.,Low,16,"from zvt.domain import Stock, DragonAndTiger","[6738, 1976, 36540, 13, 27830, 1330, 10500, 11, 2851, 1870, 51, 8254]"
‚úÖ Best Practice: Explicitly calling the superclass's __init__ method ensures proper initialization.,"[26486, 227, 6705, 19939, 25, 11884, 306, 4585, 262, 2208, 4871, 338, 11593, 15003, 834, 2446, 19047, 1774, 37588, 13]",1.0,46,best_practice,36,Explicitly calling the superclass's __init__ method ensures proper initialization.,,28,"        only_compute_factor: bool = False,","[220, 220, 220, 220, 220, 220, 220, 691, 62, 5589, 1133, 62, 31412, 25, 20512, 796, 10352, 11]"
"üß† ML Signal: Method overriding in a class, useful for learning class behavior","[8582, 100, 254, 10373, 26484, 25, 11789, 44987, 287, 257, 1398, 11, 4465, 329, 4673, 1398, 4069]",1.0,61,ml_signal,66,"Method overriding in a class, useful for learning class behavior",,46,"            factor_name,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 5766, 62, 3672, 11]"
"üß† ML Signal: Setting a DataFrame column to a constant value, indicates data manipulation pattern","[8582, 100, 254, 10373, 26484, 25, 25700, 257, 6060, 19778, 5721, 284, 257, 6937, 1988, 11, 9217, 1366, 17512, 3912]",0.5,78,ml_signal,68,"Setting a DataFrame column to a constant value, indicates data manipulation pattern",,61,"            only_load_factor,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 691, 62, 2220, 62, 31412, 11]"
"üß† ML Signal: Use of super() to call a method from a parent class, useful for understanding inheritance patterns","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2208, 3419, 284, 869, 257, 2446, 422, 257, 2560, 1398, 11, 4465, 329, 4547, 24155, 7572]",0.5,86,ml_signal,69,"Use of super() to call a method from a parent class, useful for understanding inheritance patterns",,78,        ),"[220, 220, 220, 220, 220, 220, 220, 1267]"
"üß† ML Signal: Inheritance from a base class, indicating a pattern of extending functionality","[8582, 100, 254, 10373, 26484, 25, 47025, 42942, 422, 257, 2779, 1398, 11, 12739, 257, 3912, 286, 16610, 11244]",0.5,94,ml_signal,69,"Inheritance from a base class, indicating a pattern of extending functionality",,86,        ),"[220, 220, 220, 220, 220, 220, 220, 1267]"
"üß† ML Signal: Function initializes factors with given parameters, indicating a pattern of data preparation.","[8582, 100, 254, 10373, 26484, 25, 15553, 4238, 4340, 5087, 351, 1813, 10007, 11, 12739, 257, 3912, 286, 1366, 11824, 13]",1.0,113,ml_signal,72,"Function initializes factors with given parameters, indicating a pattern of data preparation.",,94,"        self.factor_df[""filter_result""] = True","[220, 220, 220, 220, 220, 220, 220, 2116, 13, 31412, 62, 7568, 14692, 24455, 62, 20274, 8973, 796, 6407]"
"‚úÖ Best Practice: Use of __name__ == ""__main__"" to ensure code only runs when script is executed directly.","[26486, 227, 6705, 19939, 25, 5765, 286, 11593, 3672, 834, 6624, 366, 834, 12417, 834, 1, 284, 4155, 2438, 691, 4539, 618, 4226, 318, 10945, 3264, 13]",0.5,136,best_practice,82,"Use of __name__ == ""__main__"" to ensure code only runs when script is executed directly.",,113,"                entity_ids=entity_ids,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 9312, 62, 2340, 28, 26858, 62, 2340, 11]"
"üß† ML Signal: Instantiation of MyTrader with specific timestamps, indicating a pattern of usage.","[8582, 100, 254, 10373, 26484, 25, 24470, 3920, 286, 2011, 2898, 5067, 351, 2176, 4628, 395, 9430, 11, 12739, 257, 3912, 286, 8748, 13]",1.0,156,ml_signal,83,"Instantiation of MyTrader with specific timestamps, indicating a pattern of usage.",,136,"                exchanges=exchanges,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 14525, 28, 1069, 36653, 11]"
"üß† ML Signal: Calling run method on trader object, indicating a pattern of execution.","[8582, 100, 254, 10373, 26484, 25, 32677, 1057, 2446, 319, 31791, 2134, 11, 12739, 257, 3912, 286, 9706, 13]",0.5,176,ml_signal,83,"Calling run method on trader object, indicating a pattern of execution.",,156,"                exchanges=exchanges,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 14525, 28, 1069, 36653, 11]"
