annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
"‚úÖ Best Practice: Grouping imports by standard, third-party, and local modules improves readability.","[26486, 227, 6705, 19939, 25, 4912, 278, 17944, 416, 3210, 11, 2368, 12, 10608, 11, 290, 1957, 13103, 19575, 1100, 1799, 13]",1.0,0,best_practice,4,"Grouping imports by standard, third-party, and local modules improves readability.",,0,,[]
"‚úÖ Best Practice: Grouping imports by standard, third-party, and local modules improves readability.","[26486, 227, 6705, 19939, 25, 4912, 278, 17944, 416, 3210, 11, 2368, 12, 10608, 11, 290, 1957, 13103, 19575, 1100, 1799, 13]",1.0,12,best_practice,7,"Grouping imports by standard, third-party, and local modules improves readability.",,0,from sqlalchemy.orm import declarative_base,"[6738, 44161, 282, 26599, 13, 579, 1330, 2377, 283, 876, 62, 8692]"
‚úÖ Best Practice: Naming conventions for constants should be in uppercase.,"[26486, 227, 6705, 19939, 25, 399, 3723, 21396, 329, 38491, 815, 307, 287, 334, 39921, 589, 13]",0.5,12,best_practice,12,Naming conventions for constants should be in uppercase.,,12,,[]
‚úÖ Best Practice: Use of SQLAlchemy's Column to define database table columns,"[26486, 227, 6705, 19939, 25, 5765, 286, 16363, 2348, 26599, 338, 29201, 284, 8160, 6831, 3084, 15180]",0.5,12,best_practice,12,Use of SQLAlchemy's Column to define database table columns,,12,,[]
‚úÖ Best Practice: Use of JSON column type for storing JSON data in SQLAlchemy,"[26486, 227, 6705, 19939, 25, 5765, 286, 19449, 5721, 2099, 329, 23069, 19449, 1366, 287, 16363, 2348, 26599]",0.5,12,best_practice,14,Use of JSON column type for storing JSON data in SQLAlchemy,,12,,[]
‚úÖ Best Practice: Use of ConfigDict for model configuration enhances flexibility and readability.,"[26486, 227, 6705, 19939, 25, 5765, 286, 17056, 35, 713, 329, 2746, 8398, 32479, 13688, 290, 1100, 1799, 13]",0.5,12,best_practice,15,Use of ConfigDict for model configuration enhances flexibility and readability.,,12,,[]
‚ö†Ô∏è SAST Risk (Low): Ensure that the datetime is properly validated and parsed to prevent errors.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 326, 262, 4818, 8079, 318, 6105, 31031, 290, 44267, 284, 2948, 8563, 13]",0.5,23,sast_risk,19,Ensure that the datetime is properly validated and parsed to prevent errors.,Low,12,    json_col = Column(JSON),"[220, 220, 220, 33918, 62, 4033, 796, 29201, 7, 40386, 8]"
‚ö†Ô∏è SAST Risk (Low): Ensure that the contents of the json_col are validated to prevent injection attacks.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 326, 262, 10154, 286, 262, 33918, 62, 4033, 389, 31031, 284, 2948, 16954, 3434, 13]",0.5,30,sast_risk,22,Ensure that the contents of the json_col are validated to prevent injection attacks.,Low,23,class UserModel(BaseModel):,"[4871, 11787, 17633, 7, 14881, 17633, 2599]"
‚ö†Ô∏è SAST Risk (Medium): Ensure that the schema registration does not expose sensitive data or misconfigure the database.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 48987, 326, 262, 32815, 9352, 857, 407, 15651, 8564, 1366, 393, 2984, 11250, 495, 262, 6831, 13]",0.5,48,sast_risk,23,Ensure that the schema registration does not expose sensitive data or misconfigure the database.,Medium,30,    model_config = ConfigDict(from_attributes=True),"[220, 220, 220, 2746, 62, 11250, 796, 17056, 35, 713, 7, 6738, 62, 1078, 7657, 28, 17821, 8]"
üß† ML Signal: Example of instantiating a model with specific attributes.,"[8582, 100, 254, 10373, 26484, 25, 17934, 286, 9113, 26336, 257, 2746, 351, 2176, 12608, 13]",0.5,48,ml_signal,30,Example of instantiating a model with specific attributes.,,48,,[]
‚ö†Ô∏è SAST Risk (Low): Directly using string for datetime; consider using a datetime object for accuracy.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 4128, 306, 1262, 4731, 329, 4818, 8079, 26, 2074, 1262, 257, 4818, 8079, 2134, 329, 9922, 13]",0.5,75,sast_risk,32,Directly using string for datetime; consider using a datetime object for accuracy.,Low,48,"register_schema(providers=[""zvt""], db_name=""test"", schema_base=ZvtInfoBase)","[30238, 62, 15952, 2611, 7, 15234, 4157, 28, 14692, 89, 36540, 33116, 20613, 62, 3672, 2625, 9288, 1600, 32815, 62, 8692, 28, 57, 36540, 12360, 14881, 8]"
‚ö†Ô∏è SAST Risk (Low): Ensure that the dictionary contents are sanitized to prevent security issues.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 326, 262, 22155, 10154, 389, 5336, 36951, 284, 2948, 2324, 2428, 13]",0.5,102,sast_risk,32,Ensure that the dictionary contents are sanitized to prevent security issues.,Low,75,"register_schema(providers=[""zvt""], db_name=""test"", schema_base=ZvtInfoBase)","[30238, 62, 15952, 2611, 7, 15234, 4157, 28, 14692, 89, 36540, 33116, 20613, 62, 3672, 2625, 9288, 1600, 32815, 62, 8692, 28, 57, 36540, 12360, 14881, 8]"
‚ö†Ô∏è SAST Risk (Medium): Ensure that the database session is securely handled and closed properly.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 48987, 326, 262, 6831, 6246, 318, 30835, 12118, 290, 4838, 6105, 13]",0.5,129,sast_risk,32,Ensure that the database session is securely handled and closed properly.,Medium,102,"register_schema(providers=[""zvt""], db_name=""test"", schema_base=ZvtInfoBase)","[30238, 62, 15952, 2611, 7, 15234, 4157, 28, 14692, 89, 36540, 33116, 20613, 62, 3672, 2625, 9288, 1600, 32815, 62, 8692, 28, 57, 36540, 12360, 14881, 8]"
‚ö†Ô∏è SAST Risk (Medium): Ensure that the query is protected against SQL injection.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 48987, 326, 262, 12405, 318, 6861, 1028, 16363, 16954, 13]",0.5,156,sast_risk,32,Ensure that the query is protected against SQL injection.,Medium,129,"register_schema(providers=[""zvt""], db_name=""test"", schema_base=ZvtInfoBase)","[30238, 62, 15952, 2611, 7, 15234, 4157, 28, 14692, 89, 36540, 33116, 20613, 62, 3672, 2625, 9288, 1600, 32815, 62, 8692, 28, 57, 36540, 12360, 14881, 8]"
üß† ML Signal: Example of model validation usage pattern.,"[8582, 100, 254, 10373, 26484, 25, 17934, 286, 2746, 21201, 8748, 3912, 13]",0.5,183,ml_signal,32,Example of model validation usage pattern.,,156,"register_schema(providers=[""zvt""], db_name=""test"", schema_base=ZvtInfoBase)","[30238, 62, 15952, 2611, 7, 15234, 4157, 28, 14692, 89, 36540, 33116, 20613, 62, 3672, 2625, 9288, 1600, 32815, 62, 8692, 28, 57, 36540, 12360, 14881, 8]"
