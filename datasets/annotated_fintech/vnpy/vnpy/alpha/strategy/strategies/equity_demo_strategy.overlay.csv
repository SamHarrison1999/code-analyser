annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
"✅ Best Practice: Grouping imports by standard, third-party, and local can improve readability.","[26486, 227, 6705, 19939, 25, 4912, 278, 17944, 416, 3210, 11, 2368, 12, 10608, 11, 290, 1957, 460, 2987, 1100, 1799, 13]",1.0,5,best_practice,3,"Grouping imports by standard, third-party, and local can improve readability.",,0,import polars as pl,"[11748, 755, 945, 355, 458]"
🧠 ML Signal: Use of class-level attributes for configuration,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1398, 12, 5715, 12608, 329, 8398]",0.5,15,ml_signal,9,Use of class-level attributes for configuration,,5,from vnpy.alpha import AlphaStrategy,"[6738, 410, 77, 9078, 13, 26591, 1330, 12995, 13290, 4338]"
🧠 ML Signal: Use of class-level attributes for configuration,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1398, 12, 5715, 12608, 329, 8398]",0.5,15,ml_signal,11,Use of class-level attributes for configuration,,15,,[]
🧠 ML Signal: Use of class-level attributes for configuration,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1398, 12, 5715, 12608, 329, 8398]",0.5,27,ml_signal,13,Use of class-level attributes for configuration,,15,"    """"""Equity Long-Only Demo Strategy""""""","[220, 220, 220, 37227, 23588, 414, 5882, 12, 10049, 34588, 20561, 37811]"
🧠 ML Signal: Use of class-level attributes for configuration,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1398, 12, 5715, 12608, 329, 8398]",0.5,60,ml_signal,15,Use of class-level attributes for configuration,,27,    top_k: int = 50                 # Maximum number of stocks to hold,"[220, 220, 220, 1353, 62, 74, 25, 493, 796, 2026, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 22246, 1271, 286, 14420, 284, 1745]"
🧠 ML Signal: Use of class-level attributes for configuration,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1398, 12, 5715, 12608, 329, 8398]",0.5,90,ml_signal,17,Use of class-level attributes for configuration,,60,    min_days: int = 3               # Minimum holding period in days,"[220, 220, 220, 949, 62, 12545, 25, 493, 796, 513, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 26265, 4769, 2278, 287, 1528]"
🧠 ML Signal: Use of class-level attributes for configuration,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1398, 12, 5715, 12608, 329, 8398]",0.5,114,ml_signal,19,Use of class-level attributes for configuration,,90,    min_volume: int = 100           # Minimum trading unit,"[220, 220, 220, 949, 62, 29048, 25, 493, 796, 1802, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 26265, 7313, 4326]"
🧠 ML Signal: Use of class-level attributes for configuration,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1398, 12, 5715, 12608, 329, 8398]",0.5,136,ml_signal,21,Use of class-level attributes for configuration,,114,    close_rate: float = 0.0015      # Closing commission rate,"[220, 220, 220, 1969, 62, 4873, 25, 12178, 796, 657, 13, 405, 1314, 220, 220, 220, 220, 220, 1303, 47055, 5810, 2494]"
🧠 ML Signal: Use of class-level attributes for configuration,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1398, 12, 5715, 12608, 329, 8398]",0.5,161,ml_signal,23,Use of class-level attributes for configuration,,136,    price_add: float = 0.05         # Order price adjustment ratio,"[220, 220, 220, 2756, 62, 2860, 25, 12178, 796, 657, 13, 2713, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 8284, 2756, 15068, 8064]"
🧠 ML Signal: Use of class-level attributes for configuration,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 1398, 12, 5715, 12608, 329, 8398]",0.5,174,ml_signal,25,Use of class-level attributes for configuration,,161,    def on_init(self) -> None:,"[220, 220, 220, 825, 319, 62, 15003, 7, 944, 8, 4613, 6045, 25]"
✅ Best Practice: Type hinting for better code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5994, 9254, 278, 329, 1365, 2438, 1100, 1799, 290, 5529, 1799]",1.0,197,best_practice,20,Type hinting for better code readability and maintainability,,174,    open_rate: float = 0.0005       # Opening commission rate,"[220, 220, 220, 1280, 62, 4873, 25, 12178, 796, 657, 13, 830, 20, 220, 220, 220, 220, 220, 220, 1303, 25522, 5810, 2494]"
🧠 ML Signal: Logging initialization events can be useful for tracking system behavior,"[8582, 100, 254, 10373, 26484, 25, 5972, 2667, 37588, 2995, 460, 307, 4465, 329, 9646, 1080, 4069]",1.0,220,ml_signal,22,Logging initialization events can be useful for tracking system behavior,,197,    min_commission: int = 5         # Minimum commission value,"[220, 220, 220, 949, 62, 785, 3411, 25, 493, 796, 642, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 26265, 5810, 1988]"
🧠 ML Signal: Use of callback function pattern,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 23838, 2163, 3912]",0.5,220,ml_signal,24,Use of callback function pattern,,220,,[]
⚠️ SAST Risk (Low): Potential KeyError if vt_symbol is not in holding_days,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 7383, 12331, 611, 410, 83, 62, 1837, 23650, 318, 407, 287, 4769, 62, 12545]",1.0,233,sast_risk,26,Potential KeyError if vt_symbol is not in holding_days,Low,220,"        """"""Strategy initialization callback""""""","[220, 220, 220, 220, 220, 220, 220, 37227, 13290, 4338, 37588, 23838, 37811]"
✅ Best Practice: Use of pop with default value to avoid KeyError,"[26486, 227, 6705, 19939, 25, 5765, 286, 1461, 351, 4277, 1988, 284, 3368, 7383, 12331]",1.0,247,best_practice,27,Use of pop with default value to avoid KeyError,,233,        # Dictionary to track stock holding days,"[220, 220, 220, 220, 220, 220, 220, 1303, 28261, 284, 2610, 4283, 4769, 1528]"
"🧠 ML Signal: Usage of a method to get the last signal, indicating a pattern of retrieving and processing signals","[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2446, 284, 651, 262, 938, 6737, 11, 12739, 257, 3912, 286, 50122, 290, 7587, 10425]",1.0,268,ml_signal,28,"Usage of a method to get the last signal, indicating a pattern of retrieving and processing signals",,247,        self.holding_days: defaultdict = defaultdict(int),"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 19216, 62, 12545, 25, 4277, 11600, 796, 4277, 11600, 7, 600, 8]"
✅ Best Practice: Sorting data for prioritized processing,"[26486, 227, 6705, 19939, 25, 311, 24707, 1366, 329, 19086, 1143, 7587]",1.0,285,best_practice,30,Sorting data for prioritized processing,,268,"        self.write_log(""Strategy initialized"")","[220, 220, 220, 220, 220, 220, 220, 2116, 13, 13564, 62, 6404, 7203, 13290, 4338, 23224, 4943]"
"🧠 ML Signal: Extracting symbols with positions, indicating a pattern of managing active trades","[8582, 100, 254, 10373, 26484, 25, 29677, 278, 14354, 351, 6116, 11, 12739, 257, 3912, 286, 11149, 4075, 17674]",1.0,303,ml_signal,32,"Extracting symbols with positions, indicating a pattern of managing active trades",,285,"    def on_trade(self, trade: TradeData) -> None:","[220, 220, 220, 825, 319, 62, 25351, 7, 944, 11, 3292, 25, 9601, 6601, 8, 4613, 6045, 25]"
"🧠 ML Signal: Incrementing holding days, indicating a pattern of tracking trade duration","[8582, 100, 254, 10373, 26484, 25, 10791, 434, 278, 4769, 1528, 11, 12739, 257, 3912, 286, 9646, 3292, 9478]",1.0,320,ml_signal,35,"Incrementing holding days, indicating a pattern of tracking trade duration",,303,        if trade.direction == Direction.SHORT:,"[220, 220, 220, 220, 220, 220, 220, 611, 3292, 13, 37295, 6624, 41837, 13, 9693, 9863, 25]"
"🧠 ML Signal: Determining active symbols, indicating a pattern of selecting top signals","[8582, 100, 254, 10373, 26484, 25, 360, 13221, 278, 4075, 14354, 11, 12739, 257, 3912, 286, 17246, 1353, 10425]",1.0,320,ml_signal,37,"Determining active symbols, indicating a pattern of selecting top signals",,320,,[]
✅ Best Practice: Filtering data for relevant symbols,"[26486, 227, 6705, 19939, 25, 7066, 20212, 1366, 329, 5981, 14354]",1.0,335,best_practice,40,Filtering data for relevant symbols,,320,        # Get the latest signals and sort them,"[220, 220, 220, 220, 220, 220, 220, 1303, 3497, 262, 3452, 10425, 290, 3297, 606]"
"🧠 ML Signal: Identifying component symbols, indicating a pattern of managing portfolio components","[8582, 100, 254, 10373, 26484, 25, 11440, 4035, 7515, 14354, 11, 12739, 257, 3912, 286, 11149, 15320, 6805]",1.0,361,ml_signal,42,"Identifying component symbols, indicating a pattern of managing portfolio components",,335,"        last_signal = last_signal.sort(""signal"", descending=True)","[220, 220, 220, 220, 220, 220, 220, 938, 62, 12683, 282, 796, 938, 62, 12683, 282, 13, 30619, 7203, 12683, 282, 1600, 31491, 28, 17821, 8]"
"🧠 ML Signal: Determining symbols to sell, indicating a pattern of managing exits","[8582, 100, 254, 10373, 26484, 25, 360, 13221, 278, 14354, 284, 3677, 11, 12739, 257, 3912, 286, 11149, 30151]",1.0,376,ml_signal,44,"Determining symbols to sell, indicating a pattern of managing exits",,361,        # Get position symbols and update holding days,"[220, 220, 220, 220, 220, 220, 220, 1303, 3497, 2292, 14354, 290, 4296, 4769, 1528]"
✅ Best Practice: Filtering data for buyable symbols,"[26486, 227, 6705, 19939, 25, 7066, 20212, 1366, 329, 2822, 540, 14354]",1.0,376,best_practice,49,Filtering data for buyable symbols,,376,,[]
"🧠 ML Signal: Calculating buy quantity, indicating a pattern of managing entry sizes","[8582, 100, 254, 10373, 26484, 25, 27131, 803, 2822, 12040, 11, 12739, 257, 3912, 286, 11149, 5726, 10620]",1.0,444,ml_signal,51,"Calculating buy quantity, indicating a pattern of managing entry sizes",,376,"        active_symbols: set[str] = set(last_signal[""vt_symbol""][:self.top_k])                         # Extract symbols with highest signals","[220, 220, 220, 220, 220, 220, 220, 4075, 62, 1837, 2022, 10220, 25, 900, 58, 2536, 60, 796, 900, 7, 12957, 62, 12683, 282, 14692, 36540, 62, 1837, 23650, 1, 7131, 25, 944, 13, 4852, 62, 74, 12962, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 29677, 14354, 351, 4511, 10425]"
"🧠 ML Signal: Selecting symbols to buy, indicating a pattern of managing entries","[8582, 100, 254, 10373, 26484, 25, 9683, 278, 14354, 284, 2822, 11, 12739, 257, 3912, 286, 11149, 12784]",1.0,498,ml_signal,53,"Selecting symbols to buy, indicating a pattern of managing entries",,444,"        active_df: pl.DataFrame = last_signal.filter(pl.col(""vt_symbol"").is_in(active_symbols))       # Filter signals for these symbols","[220, 220, 220, 220, 220, 220, 220, 4075, 62, 7568, 25, 458, 13, 6601, 19778, 796, 938, 62, 12683, 282, 13, 24455, 7, 489, 13, 4033, 7203, 36540, 62, 1837, 23650, 11074, 271, 62, 259, 7, 5275, 62, 1837, 2022, 10220, 4008, 220, 220, 220, 220, 220, 220, 1303, 25853, 10425, 329, 777, 14354]"
"🧠 ML Signal: Retrieving available cash, indicating a pattern of managing capital","[8582, 100, 254, 10373, 26484, 25, 4990, 37418, 1695, 5003, 11, 12739, 257, 3912, 286, 11149, 3139]",1.0,551,ml_signal,55,"Retrieving available cash, indicating a pattern of managing capital",,498,"        component_symbols: set[str] = set(last_signal[""vt_symbol""])                 # Extract current index component symbols","[220, 220, 220, 220, 220, 220, 220, 7515, 62, 1837, 2022, 10220, 25, 900, 58, 2536, 60, 796, 900, 7, 12957, 62, 12683, 282, 14692, 36540, 62, 1837, 23650, 8973, 8, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 29677, 1459, 6376, 7515, 14354]"
⚠️ SAST Risk (Low): Potential NoneType access if bar is None,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 6045, 6030, 1895, 611, 2318, 318, 6045]",1.0,625,sast_risk,60,Potential NoneType access if bar is None,Low,551,                sell_symbols.add(vt_symbol)                                         # Add it to sell list,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 3677, 62, 1837, 2022, 10220, 13, 2860, 7, 36540, 62, 1837, 23650, 8, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 3060, 340, 284, 3677, 1351]"
"🧠 ML Signal: Calculating sell price and volume, indicating a pattern of executing trades","[8582, 100, 254, 10373, 26484, 25, 27131, 803, 3677, 2756, 290, 6115, 11, 12739, 257, 3912, 286, 23710, 17674]",1.0,688,ml_signal,64,"Calculating sell price and volume, indicating a pattern of executing trades",,625,        buy_quantity: int = len(sell_symbols) + self.top_k - len(pos_symbols)                   # Calculate number of contracts to buy,"[220, 220, 220, 220, 220, 220, 220, 2822, 62, 40972, 414, 25, 493, 796, 18896, 7, 7255, 62, 1837, 2022, 10220, 8, 1343, 2116, 13, 4852, 62, 74, 532, 18896, 7, 1930, 62, 1837, 2022, 10220, 8, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 27131, 378, 1271, 286, 8592, 284, 2822]"
"🧠 ML Signal: Setting target to zero, indicating a pattern of closing positions","[8582, 100, 254, 10373, 26484, 25, 25700, 2496, 284, 6632, 11, 12739, 257, 3912, 286, 9605, 6116]",1.0,752,ml_signal,65,"Setting target to zero, indicating a pattern of closing positions",,688,"        buy_symbols: list = list(buyable_df[:buy_quantity][""vt_symbol""])                        # Select buy contract code list","[220, 220, 220, 220, 220, 220, 220, 2822, 62, 1837, 2022, 10220, 25, 1351, 796, 1351, 7, 17846, 540, 62, 7568, 58, 25, 17846, 62, 40972, 414, 7131, 1, 36540, 62, 1837, 23650, 8973, 8, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 9683, 2822, 2775, 2438, 1351]"
"🧠 ML Signal: Calculating turnover and cost, indicating a pattern of managing trade costs","[8582, 100, 254, 10373, 26484, 25, 27131, 803, 25079, 290, 1575, 11, 12739, 257, 3912, 286, 11149, 3292, 3484]",1.0,816,ml_signal,65,"Calculating turnover and cost, indicating a pattern of managing trade costs",,752,"        buy_symbols: list = list(buyable_df[:buy_quantity][""vt_symbol""])                        # Select buy contract code list","[220, 220, 220, 220, 220, 220, 220, 2822, 62, 1837, 2022, 10220, 25, 1351, 796, 1351, 7, 17846, 540, 62, 7568, 58, 25, 17846, 62, 40972, 414, 7131, 1, 36540, 62, 1837, 23650, 8973, 8, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 9683, 2822, 2775, 2438, 1351]"
"🧠 ML Signal: Calculating buy value per symbol, indicating a pattern of allocating capital","[8582, 100, 254, 10373, 26484, 25, 27131, 803, 2822, 1988, 583, 6194, 11, 12739, 257, 3912, 286, 477, 27123, 3139]",1.0,880,ml_signal,65,"Calculating buy value per symbol, indicating a pattern of allocating capital",,816,"        buy_symbols: list = list(buyable_df[:buy_quantity][""vt_symbol""])                        # Select buy contract code list","[220, 220, 220, 220, 220, 220, 220, 2822, 62, 1837, 2022, 10220, 25, 1351, 796, 1351, 7, 17846, 540, 62, 7568, 58, 25, 17846, 62, 40972, 414, 7131, 1, 36540, 62, 1837, 23650, 8973, 8, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 9683, 2822, 2775, 2438, 1351]"
⚠️ SAST Risk (Low): Potential KeyError if vt_symbol not in bars,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 7383, 12331, 611, 410, 83, 62, 1837, 23650, 407, 287, 9210]",1.0,944,sast_risk,65,Potential KeyError if vt_symbol not in bars,Low,880,"        buy_symbols: list = list(buyable_df[:buy_quantity][""vt_symbol""])                        # Select buy contract code list","[220, 220, 220, 220, 220, 220, 220, 2822, 62, 1837, 2022, 10220, 25, 1351, 796, 1351, 7, 17846, 540, 62, 7568, 58, 25, 17846, 62, 40972, 414, 7131, 1, 36540, 62, 1837, 23650, 8973, 8, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 9683, 2822, 2775, 2438, 1351]"
"🧠 ML Signal: Calculating buy volume, indicating a pattern of determining trade size","[8582, 100, 254, 10373, 26484, 25, 27131, 803, 2822, 6115, 11, 12739, 257, 3912, 286, 13213, 3292, 2546]",1.0,1008,ml_signal,65,"Calculating buy volume, indicating a pattern of determining trade size",,944,"        buy_symbols: list = list(buyable_df[:buy_quantity][""vt_symbol""])                        # Select buy contract code list","[220, 220, 220, 220, 220, 220, 220, 2822, 62, 1837, 2022, 10220, 25, 1351, 796, 1351, 7, 17846, 540, 62, 7568, 58, 25, 17846, 62, 40972, 414, 7131, 1, 36540, 62, 1837, 23650, 8973, 8, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 9683, 2822, 2775, 2438, 1351]"
"🧠 ML Signal: Setting target volume, indicating a pattern of opening positions","[8582, 100, 254, 10373, 26484, 25, 25700, 2496, 6115, 11, 12739, 257, 3912, 286, 4756, 6116]",1.0,1072,ml_signal,65,"Setting target volume, indicating a pattern of opening positions",,1008,"        buy_symbols: list = list(buyable_df[:buy_quantity][""vt_symbol""])                        # Select buy contract code list","[220, 220, 220, 220, 220, 220, 220, 2822, 62, 1837, 2022, 10220, 25, 1351, 796, 1351, 7, 17846, 540, 62, 7568, 58, 25, 17846, 62, 40972, 414, 7131, 1, 36540, 62, 1837, 23650, 8973, 8, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 9683, 2822, 2775, 2438, 1351]"
"🧠 ML Signal: Executing trades, indicating a pattern of finalizing trade actions","[8582, 100, 254, 10373, 26484, 25, 8393, 15129, 17674, 11, 12739, 257, 3912, 286, 2457, 2890, 3292, 4028]",1.0,1136,ml_signal,65,"Executing trades, indicating a pattern of finalizing trade actions",,1072,"        buy_symbols: list = list(buyable_df[:buy_quantity][""vt_symbol""])                        # Select buy contract code list","[220, 220, 220, 220, 220, 220, 220, 2822, 62, 1837, 2022, 10220, 25, 1351, 796, 1351, 7, 17846, 540, 62, 7568, 58, 25, 17846, 62, 40972, 414, 7131, 1, 36540, 62, 1837, 23650, 8973, 8, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1303, 9683, 2822, 2775, 2438, 1351]"
