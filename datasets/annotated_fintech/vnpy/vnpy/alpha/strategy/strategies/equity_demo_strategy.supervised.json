[
  {
    "line": 3,
    "text": "import polars as pl",
    "annotation": "\u2705 Best Practice: Grouping imports by standard, third-party, and local can improve readability.",
    "confidence": 1.0,
    "tokens": [
      11748,
      755,
      945,
      355,
      458
    ],
    "start_token": 0,
    "end_token": 5,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      416,
      3210,
      11,
      2368,
      12,
      10608,
      11,
      290,
      1957,
      460,
      2987,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports by standard, third-party, and local can improve readability."
  },
  {
    "line": 9,
    "text": "from vnpy.alpha import AlphaStrategy",
    "annotation": "\ud83e\udde0 ML Signal: Use of class-level attributes for configuration",
    "confidence": 0.5,
    "tokens": [
      6738,
      410,
      77,
      9078,
      13,
      26591,
      1330,
      12995,
      13290,
      4338
    ],
    "start_token": 5,
    "end_token": 15,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1398,
      12,
      5715,
      12608,
      329,
      8398
    ],
    "label": "ml_signal",
    "reason": "Use of class-level attributes for configuration"
  },
  {
    "line": 11,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of class-level attributes for configuration",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 15,
    "end_token": 15,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1398,
      12,
      5715,
      12608,
      329,
      8398
    ],
    "label": "ml_signal",
    "reason": "Use of class-level attributes for configuration"
  },
  {
    "line": 13,
    "text": "    \"\"\"Equity Long-Only Demo Strategy\"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Use of class-level attributes for configuration",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      37227,
      23588,
      414,
      5882,
      12,
      10049,
      34588,
      20561,
      37811
    ],
    "start_token": 15,
    "end_token": 27,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1398,
      12,
      5715,
      12608,
      329,
      8398
    ],
    "label": "ml_signal",
    "reason": "Use of class-level attributes for configuration"
  },
  {
    "line": 15,
    "text": "    top_k: int = 50                 # Maximum number of stocks to hold",
    "annotation": "\ud83e\udde0 ML Signal: Use of class-level attributes for configuration",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1353,
      62,
      74,
      25,
      493,
      796,
      2026,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      22246,
      1271,
      286,
      14420,
      284,
      1745
    ],
    "start_token": 27,
    "end_token": 60,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1398,
      12,
      5715,
      12608,
      329,
      8398
    ],
    "label": "ml_signal",
    "reason": "Use of class-level attributes for configuration"
  },
  {
    "line": 17,
    "text": "    min_days: int = 3               # Minimum holding period in days",
    "annotation": "\ud83e\udde0 ML Signal: Use of class-level attributes for configuration",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      949,
      62,
      12545,
      25,
      493,
      796,
      513,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      26265,
      4769,
      2278,
      287,
      1528
    ],
    "start_token": 60,
    "end_token": 90,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1398,
      12,
      5715,
      12608,
      329,
      8398
    ],
    "label": "ml_signal",
    "reason": "Use of class-level attributes for configuration"
  },
  {
    "line": 19,
    "text": "    min_volume: int = 100           # Minimum trading unit",
    "annotation": "\ud83e\udde0 ML Signal: Use of class-level attributes for configuration",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      949,
      62,
      29048,
      25,
      493,
      796,
      1802,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      26265,
      7313,
      4326
    ],
    "start_token": 90,
    "end_token": 114,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1398,
      12,
      5715,
      12608,
      329,
      8398
    ],
    "label": "ml_signal",
    "reason": "Use of class-level attributes for configuration"
  },
  {
    "line": 21,
    "text": "    close_rate: float = 0.0015      # Closing commission rate",
    "annotation": "\ud83e\udde0 ML Signal: Use of class-level attributes for configuration",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1969,
      62,
      4873,
      25,
      12178,
      796,
      657,
      13,
      405,
      1314,
      220,
      220,
      220,
      220,
      220,
      1303,
      47055,
      5810,
      2494
    ],
    "start_token": 114,
    "end_token": 136,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1398,
      12,
      5715,
      12608,
      329,
      8398
    ],
    "label": "ml_signal",
    "reason": "Use of class-level attributes for configuration"
  },
  {
    "line": 23,
    "text": "    price_add: float = 0.05         # Order price adjustment ratio",
    "annotation": "\ud83e\udde0 ML Signal: Use of class-level attributes for configuration",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      2756,
      62,
      2860,
      25,
      12178,
      796,
      657,
      13,
      2713,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      8284,
      2756,
      15068,
      8064
    ],
    "start_token": 136,
    "end_token": 161,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1398,
      12,
      5715,
      12608,
      329,
      8398
    ],
    "label": "ml_signal",
    "reason": "Use of class-level attributes for configuration"
  },
  {
    "line": 25,
    "text": "    def on_init(self) -> None:",
    "annotation": "\ud83e\udde0 ML Signal: Use of class-level attributes for configuration",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      319,
      62,
      15003,
      7,
      944,
      8,
      4613,
      6045,
      25
    ],
    "start_token": 161,
    "end_token": 174,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1398,
      12,
      5715,
      12608,
      329,
      8398
    ],
    "label": "ml_signal",
    "reason": "Use of class-level attributes for configuration"
  },
  {
    "line": 20,
    "text": "    open_rate: float = 0.0005       # Opening commission rate",
    "annotation": "\u2705 Best Practice: Type hinting for better code readability and maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1280,
      62,
      4873,
      25,
      12178,
      796,
      657,
      13,
      830,
      20,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      25522,
      5810,
      2494
    ],
    "start_token": 174,
    "end_token": 197,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      1365,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting for better code readability and maintainability"
  },
  {
    "line": 22,
    "text": "    min_commission: int = 5         # Minimum commission value",
    "annotation": "\ud83e\udde0 ML Signal: Logging initialization events can be useful for tracking system behavior",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      949,
      62,
      785,
      3411,
      25,
      493,
      796,
      642,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      26265,
      5810,
      1988
    ],
    "start_token": 197,
    "end_token": 220,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      37588,
      2995,
      460,
      307,
      4465,
      329,
      9646,
      1080,
      4069
    ],
    "label": "ml_signal",
    "reason": "Logging initialization events can be useful for tracking system behavior"
  },
  {
    "line": 24,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of callback function pattern",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 220,
    "end_token": 220,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      23838,
      2163,
      3912
    ],
    "label": "ml_signal",
    "reason": "Use of callback function pattern"
  },
  {
    "line": 26,
    "text": "        \"\"\"Strategy initialization callback\"\"\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential KeyError if vt_symbol is not in holding_days",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227,
      13290,
      4338,
      37588,
      23838,
      37811
    ],
    "start_token": 220,
    "end_token": 233,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      7383,
      12331,
      611,
      410,
      83,
      62,
      1837,
      23650,
      318,
      407,
      287,
      4769,
      62,
      12545
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential KeyError if vt_symbol is not in holding_days"
  },
  {
    "line": 27,
    "text": "        # Dictionary to track stock holding days",
    "annotation": "\u2705 Best Practice: Use of pop with default value to avoid KeyError",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      28261,
      284,
      2610,
      4283,
      4769,
      1528
    ],
    "start_token": 233,
    "end_token": 247,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      1461,
      351,
      4277,
      1988,
      284,
      3368,
      7383,
      12331
    ],
    "label": "best_practice",
    "reason": "Use of pop with default value to avoid KeyError"
  },
  {
    "line": 28,
    "text": "        self.holding_days: defaultdict = defaultdict(int)",
    "annotation": "\ud83e\udde0 ML Signal: Usage of a method to get the last signal, indicating a pattern of retrieving and processing signals",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      19216,
      62,
      12545,
      25,
      4277,
      11600,
      796,
      4277,
      11600,
      7,
      600,
      8
    ],
    "start_token": 247,
    "end_token": 268,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      257,
      2446,
      284,
      651,
      262,
      938,
      6737,
      11,
      12739,
      257,
      3912,
      286,
      50122,
      290,
      7587,
      10425
    ],
    "label": "ml_signal",
    "reason": "Usage of a method to get the last signal, indicating a pattern of retrieving and processing signals"
  },
  {
    "line": 30,
    "text": "        self.write_log(\"Strategy initialized\")",
    "annotation": "\u2705 Best Practice: Sorting data for prioritized processing",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      13564,
      62,
      6404,
      7203,
      13290,
      4338,
      23224,
      4943
    ],
    "start_token": 268,
    "end_token": 285,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      311,
      24707,
      1366,
      329,
      19086,
      1143,
      7587
    ],
    "label": "best_practice",
    "reason": "Sorting data for prioritized processing"
  },
  {
    "line": 32,
    "text": "    def on_trade(self, trade: TradeData) -> None:",
    "annotation": "\ud83e\udde0 ML Signal: Extracting symbols with positions, indicating a pattern of managing active trades",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      319,
      62,
      25351,
      7,
      944,
      11,
      3292,
      25,
      9601,
      6601,
      8,
      4613,
      6045,
      25
    ],
    "start_token": 285,
    "end_token": 303,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29677,
      278,
      14354,
      351,
      6116,
      11,
      12739,
      257,
      3912,
      286,
      11149,
      4075,
      17674
    ],
    "label": "ml_signal",
    "reason": "Extracting symbols with positions, indicating a pattern of managing active trades"
  },
  {
    "line": 35,
    "text": "        if trade.direction == Direction.SHORT:",
    "annotation": "\ud83e\udde0 ML Signal: Incrementing holding days, indicating a pattern of tracking trade duration",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      3292,
      13,
      37295,
      6624,
      41837,
      13,
      9693,
      9863,
      25
    ],
    "start_token": 303,
    "end_token": 320,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      10791,
      434,
      278,
      4769,
      1528,
      11,
      12739,
      257,
      3912,
      286,
      9646,
      3292,
      9478
    ],
    "label": "ml_signal",
    "reason": "Incrementing holding days, indicating a pattern of tracking trade duration"
  },
  {
    "line": 37,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Determining active symbols, indicating a pattern of selecting top signals",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 320,
    "end_token": 320,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      360,
      13221,
      278,
      4075,
      14354,
      11,
      12739,
      257,
      3912,
      286,
      17246,
      1353,
      10425
    ],
    "label": "ml_signal",
    "reason": "Determining active symbols, indicating a pattern of selecting top signals"
  },
  {
    "line": 40,
    "text": "        # Get the latest signals and sort them",
    "annotation": "\u2705 Best Practice: Filtering data for relevant symbols",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      3497,
      262,
      3452,
      10425,
      290,
      3297,
      606
    ],
    "start_token": 320,
    "end_token": 335,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      7066,
      20212,
      1366,
      329,
      5981,
      14354
    ],
    "label": "best_practice",
    "reason": "Filtering data for relevant symbols"
  },
  {
    "line": 42,
    "text": "        last_signal = last_signal.sort(\"signal\", descending=True)",
    "annotation": "\ud83e\udde0 ML Signal: Identifying component symbols, indicating a pattern of managing portfolio components",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      938,
      62,
      12683,
      282,
      796,
      938,
      62,
      12683,
      282,
      13,
      30619,
      7203,
      12683,
      282,
      1600,
      31491,
      28,
      17821,
      8
    ],
    "start_token": 335,
    "end_token": 361,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11440,
      4035,
      7515,
      14354,
      11,
      12739,
      257,
      3912,
      286,
      11149,
      15320,
      6805
    ],
    "label": "ml_signal",
    "reason": "Identifying component symbols, indicating a pattern of managing portfolio components"
  },
  {
    "line": 44,
    "text": "        # Get position symbols and update holding days",
    "annotation": "\ud83e\udde0 ML Signal: Determining symbols to sell, indicating a pattern of managing exits",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      3497,
      2292,
      14354,
      290,
      4296,
      4769,
      1528
    ],
    "start_token": 361,
    "end_token": 376,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      360,
      13221,
      278,
      14354,
      284,
      3677,
      11,
      12739,
      257,
      3912,
      286,
      11149,
      30151
    ],
    "label": "ml_signal",
    "reason": "Determining symbols to sell, indicating a pattern of managing exits"
  },
  {
    "line": 49,
    "text": "",
    "annotation": "\u2705 Best Practice: Filtering data for buyable symbols",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 376,
    "end_token": 376,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      7066,
      20212,
      1366,
      329,
      2822,
      540,
      14354
    ],
    "label": "best_practice",
    "reason": "Filtering data for buyable symbols"
  },
  {
    "line": 51,
    "text": "        active_symbols: set[str] = set(last_signal[\"vt_symbol\"][:self.top_k])                         # Extract symbols with highest signals",
    "annotation": "\ud83e\udde0 ML Signal: Calculating buy quantity, indicating a pattern of managing entry sizes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4075,
      62,
      1837,
      2022,
      10220,
      25,
      900,
      58,
      2536,
      60,
      796,
      900,
      7,
      12957,
      62,
      12683,
      282,
      14692,
      36540,
      62,
      1837,
      23650,
      1,
      7131,
      25,
      944,
      13,
      4852,
      62,
      74,
      12962,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      29677,
      14354,
      351,
      4511,
      10425
    ],
    "start_token": 376,
    "end_token": 444,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      27131,
      803,
      2822,
      12040,
      11,
      12739,
      257,
      3912,
      286,
      11149,
      5726,
      10620
    ],
    "label": "ml_signal",
    "reason": "Calculating buy quantity, indicating a pattern of managing entry sizes"
  },
  {
    "line": 53,
    "text": "        active_df: pl.DataFrame = last_signal.filter(pl.col(\"vt_symbol\").is_in(active_symbols))       # Filter signals for these symbols",
    "annotation": "\ud83e\udde0 ML Signal: Selecting symbols to buy, indicating a pattern of managing entries",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      4075,
      62,
      7568,
      25,
      458,
      13,
      6601,
      19778,
      796,
      938,
      62,
      12683,
      282,
      13,
      24455,
      7,
      489,
      13,
      4033,
      7203,
      36540,
      62,
      1837,
      23650,
      11074,
      271,
      62,
      259,
      7,
      5275,
      62,
      1837,
      2022,
      10220,
      4008,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      25853,
      10425,
      329,
      777,
      14354
    ],
    "start_token": 444,
    "end_token": 498,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9683,
      278,
      14354,
      284,
      2822,
      11,
      12739,
      257,
      3912,
      286,
      11149,
      12784
    ],
    "label": "ml_signal",
    "reason": "Selecting symbols to buy, indicating a pattern of managing entries"
  },
  {
    "line": 55,
    "text": "        component_symbols: set[str] = set(last_signal[\"vt_symbol\"])                 # Extract current index component symbols",
    "annotation": "\ud83e\udde0 ML Signal: Retrieving available cash, indicating a pattern of managing capital",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      7515,
      62,
      1837,
      2022,
      10220,
      25,
      900,
      58,
      2536,
      60,
      796,
      900,
      7,
      12957,
      62,
      12683,
      282,
      14692,
      36540,
      62,
      1837,
      23650,
      8973,
      8,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      29677,
      1459,
      6376,
      7515,
      14354
    ],
    "start_token": 498,
    "end_token": 551,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      4990,
      37418,
      1695,
      5003,
      11,
      12739,
      257,
      3912,
      286,
      11149,
      3139
    ],
    "label": "ml_signal",
    "reason": "Retrieving available cash, indicating a pattern of managing capital"
  },
  {
    "line": 60,
    "text": "                sell_symbols.add(vt_symbol)                                         # Add it to sell list",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential NoneType access if bar is None",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3677,
      62,
      1837,
      2022,
      10220,
      13,
      2860,
      7,
      36540,
      62,
      1837,
      23650,
      8,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      3060,
      340,
      284,
      3677,
      1351
    ],
    "start_token": 551,
    "end_token": 625,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      6045,
      6030,
      1895,
      611,
      2318,
      318,
      6045
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential NoneType access if bar is None"
  },
  {
    "line": 64,
    "text": "        buy_quantity: int = len(sell_symbols) + self.top_k - len(pos_symbols)                   # Calculate number of contracts to buy",
    "annotation": "\ud83e\udde0 ML Signal: Calculating sell price and volume, indicating a pattern of executing trades",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2822,
      62,
      40972,
      414,
      25,
      493,
      796,
      18896,
      7,
      7255,
      62,
      1837,
      2022,
      10220,
      8,
      1343,
      2116,
      13,
      4852,
      62,
      74,
      532,
      18896,
      7,
      1930,
      62,
      1837,
      2022,
      10220,
      8,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      27131,
      378,
      1271,
      286,
      8592,
      284,
      2822
    ],
    "start_token": 625,
    "end_token": 688,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      27131,
      803,
      3677,
      2756,
      290,
      6115,
      11,
      12739,
      257,
      3912,
      286,
      23710,
      17674
    ],
    "label": "ml_signal",
    "reason": "Calculating sell price and volume, indicating a pattern of executing trades"
  },
  {
    "line": 65,
    "text": "        buy_symbols: list = list(buyable_df[:buy_quantity][\"vt_symbol\"])                        # Select buy contract code list",
    "annotation": "\ud83e\udde0 ML Signal: Setting target to zero, indicating a pattern of closing positions",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2822,
      62,
      1837,
      2022,
      10220,
      25,
      1351,
      796,
      1351,
      7,
      17846,
      540,
      62,
      7568,
      58,
      25,
      17846,
      62,
      40972,
      414,
      7131,
      1,
      36540,
      62,
      1837,
      23650,
      8973,
      8,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      9683,
      2822,
      2775,
      2438,
      1351
    ],
    "start_token": 688,
    "end_token": 752,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      25700,
      2496,
      284,
      6632,
      11,
      12739,
      257,
      3912,
      286,
      9605,
      6116
    ],
    "label": "ml_signal",
    "reason": "Setting target to zero, indicating a pattern of closing positions"
  },
  {
    "line": 65,
    "text": "        buy_symbols: list = list(buyable_df[:buy_quantity][\"vt_symbol\"])                        # Select buy contract code list",
    "annotation": "\ud83e\udde0 ML Signal: Calculating turnover and cost, indicating a pattern of managing trade costs",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2822,
      62,
      1837,
      2022,
      10220,
      25,
      1351,
      796,
      1351,
      7,
      17846,
      540,
      62,
      7568,
      58,
      25,
      17846,
      62,
      40972,
      414,
      7131,
      1,
      36540,
      62,
      1837,
      23650,
      8973,
      8,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      9683,
      2822,
      2775,
      2438,
      1351
    ],
    "start_token": 752,
    "end_token": 816,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      27131,
      803,
      25079,
      290,
      1575,
      11,
      12739,
      257,
      3912,
      286,
      11149,
      3292,
      3484
    ],
    "label": "ml_signal",
    "reason": "Calculating turnover and cost, indicating a pattern of managing trade costs"
  },
  {
    "line": 65,
    "text": "        buy_symbols: list = list(buyable_df[:buy_quantity][\"vt_symbol\"])                        # Select buy contract code list",
    "annotation": "\ud83e\udde0 ML Signal: Calculating buy value per symbol, indicating a pattern of allocating capital",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2822,
      62,
      1837,
      2022,
      10220,
      25,
      1351,
      796,
      1351,
      7,
      17846,
      540,
      62,
      7568,
      58,
      25,
      17846,
      62,
      40972,
      414,
      7131,
      1,
      36540,
      62,
      1837,
      23650,
      8973,
      8,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      9683,
      2822,
      2775,
      2438,
      1351
    ],
    "start_token": 816,
    "end_token": 880,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      27131,
      803,
      2822,
      1988,
      583,
      6194,
      11,
      12739,
      257,
      3912,
      286,
      477,
      27123,
      3139
    ],
    "label": "ml_signal",
    "reason": "Calculating buy value per symbol, indicating a pattern of allocating capital"
  },
  {
    "line": 65,
    "text": "        buy_symbols: list = list(buyable_df[:buy_quantity][\"vt_symbol\"])                        # Select buy contract code list",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential KeyError if vt_symbol not in bars",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2822,
      62,
      1837,
      2022,
      10220,
      25,
      1351,
      796,
      1351,
      7,
      17846,
      540,
      62,
      7568,
      58,
      25,
      17846,
      62,
      40972,
      414,
      7131,
      1,
      36540,
      62,
      1837,
      23650,
      8973,
      8,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      9683,
      2822,
      2775,
      2438,
      1351
    ],
    "start_token": 880,
    "end_token": 944,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      7383,
      12331,
      611,
      410,
      83,
      62,
      1837,
      23650,
      407,
      287,
      9210
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential KeyError if vt_symbol not in bars"
  },
  {
    "line": 65,
    "text": "        buy_symbols: list = list(buyable_df[:buy_quantity][\"vt_symbol\"])                        # Select buy contract code list",
    "annotation": "\ud83e\udde0 ML Signal: Calculating buy volume, indicating a pattern of determining trade size",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2822,
      62,
      1837,
      2022,
      10220,
      25,
      1351,
      796,
      1351,
      7,
      17846,
      540,
      62,
      7568,
      58,
      25,
      17846,
      62,
      40972,
      414,
      7131,
      1,
      36540,
      62,
      1837,
      23650,
      8973,
      8,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      9683,
      2822,
      2775,
      2438,
      1351
    ],
    "start_token": 944,
    "end_token": 1008,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      27131,
      803,
      2822,
      6115,
      11,
      12739,
      257,
      3912,
      286,
      13213,
      3292,
      2546
    ],
    "label": "ml_signal",
    "reason": "Calculating buy volume, indicating a pattern of determining trade size"
  },
  {
    "line": 65,
    "text": "        buy_symbols: list = list(buyable_df[:buy_quantity][\"vt_symbol\"])                        # Select buy contract code list",
    "annotation": "\ud83e\udde0 ML Signal: Setting target volume, indicating a pattern of opening positions",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2822,
      62,
      1837,
      2022,
      10220,
      25,
      1351,
      796,
      1351,
      7,
      17846,
      540,
      62,
      7568,
      58,
      25,
      17846,
      62,
      40972,
      414,
      7131,
      1,
      36540,
      62,
      1837,
      23650,
      8973,
      8,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      9683,
      2822,
      2775,
      2438,
      1351
    ],
    "start_token": 1008,
    "end_token": 1072,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      25700,
      2496,
      6115,
      11,
      12739,
      257,
      3912,
      286,
      4756,
      6116
    ],
    "label": "ml_signal",
    "reason": "Setting target volume, indicating a pattern of opening positions"
  },
  {
    "line": 65,
    "text": "        buy_symbols: list = list(buyable_df[:buy_quantity][\"vt_symbol\"])                        # Select buy contract code list",
    "annotation": "\ud83e\udde0 ML Signal: Executing trades, indicating a pattern of finalizing trade actions",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2822,
      62,
      1837,
      2022,
      10220,
      25,
      1351,
      796,
      1351,
      7,
      17846,
      540,
      62,
      7568,
      58,
      25,
      17846,
      62,
      40972,
      414,
      7131,
      1,
      36540,
      62,
      1837,
      23650,
      8973,
      8,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      9683,
      2822,
      2775,
      2438,
      1351
    ],
    "start_token": 1072,
    "end_token": 1136,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8393,
      15129,
      17674,
      11,
      12739,
      257,
      3912,
      286,
      2457,
      2890,
      3292,
      4028
    ],
    "label": "ml_signal",
    "reason": "Executing trades, indicating a pattern of finalizing trade actions"
  }
]