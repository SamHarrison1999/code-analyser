annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
"‚úÖ Best Practice: Grouping imports by standard, third-party, and local modules improves readability.","[26486, 227, 6705, 19939, 25, 4912, 278, 17944, 416, 3210, 11, 2368, 12, 10608, 11, 290, 1957, 13103, 19575, 1100, 1799, 13]",0.5,0,best_practice,6,"Grouping imports by standard, third-party, and local modules improves readability.",,0,,[]
‚úÖ Best Practice: Include type hints for function parameters and return type for better readability and maintainability,"[26486, 227, 6705, 19939, 25, 40348, 2099, 20269, 329, 2163, 10007, 290, 1441, 2099, 329, 1365, 1100, 1799, 290, 5529, 1799]",1.0,5,best_practice,9,Include type hints for function parameters and return type for better readability and maintainability,,0,import numpy as np,"[11748, 299, 32152, 355, 45941]"
"üß† ML Signal: Use of time series data manipulation, which is common in ML feature engineering","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 640, 2168, 1366, 17512, 11, 543, 318, 2219, 287, 10373, 3895, 8705]",1.0,12,ml_signal,11,"Use of time series data manipulation, which is common in ML feature engineering",,5,from .utility import DataProxy,"[6738, 764, 315, 879, 1330, 6060, 44148]"
‚úÖ Best Practice: Use of descriptive variable names for clarity,"[26486, 227, 6705, 19939, 25, 5765, 286, 35644, 7885, 3891, 329, 16287]",0.5,19,best_practice,11,Use of descriptive variable names for clarity,,12,from .utility import DataProxy,"[6738, 764, 315, 879, 1330, 6060, 44148]"
‚úÖ Best Practice: Explicitly selecting columns for clarity and to avoid unintentional data leakage,"[26486, 227, 6705, 19939, 25, 11884, 306, 17246, 15180, 329, 16287, 290, 284, 3368, 48398, 1366, 47988]",0.5,35,best_practice,16,Explicitly selecting columns for clarity and to avoid unintentional data leakage,,19,    df: pl.DataFrame = feature.df.select(,"[220, 220, 220, 47764, 25, 458, 13, 6601, 19778, 796, 3895, 13, 7568, 13, 19738, 7]"
"üß† ML Signal: Use of window functions, which are often used in time series analysis","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 4324, 5499, 11, 543, 389, 1690, 973, 287, 640, 2168, 3781]",0.5,51,ml_signal,18,"Use of window functions, which are often used in time series analysis",,35,"        pl.col(""vt_symbol""),","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 36540, 62, 1837, 23650, 12340]"
‚ö†Ô∏è SAST Risk (Low): Ensure that the 'window' parameter is validated to prevent unexpected behavior,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 326, 262, 705, 17497, 6, 11507, 318, 31031, 284, 2948, 10059, 4069]",0.5,75,sast_risk,19,Ensure that the 'window' parameter is validated to prevent unexpected behavior,Low,51,"        pl.col(""data"").shift(window).over(""vt_symbol"")","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 7890, 11074, 30846, 7, 17497, 737, 2502, 7203, 36540, 62, 1837, 23650, 4943]"
"‚úÖ Best Practice: Returning a DataProxy object, maintaining consistency with input type","[26486, 227, 6705, 19939, 25, 42882, 257, 6060, 44148, 2134, 11, 10941, 15794, 351, 5128, 2099]",0.5,93,best_practice,24,"Returning a DataProxy object, maintaining consistency with input type",,75,"def ts_min(feature: DataProxy, window: int) -> DataProxy:","[4299, 40379, 62, 1084, 7, 30053, 25, 6060, 44148, 11, 4324, 25, 493, 8, 4613, 6060, 44148, 25]"
‚úÖ Best Practice: Include type hints for function parameters and return type for better readability and maintainability,"[26486, 227, 6705, 19939, 25, 40348, 2099, 20269, 329, 2163, 10007, 290, 1441, 2099, 329, 1365, 1100, 1799, 290, 5529, 1799]",1.0,107,best_practice,17,Include type hints for function parameters and return type for better readability and maintainability,,93,"        pl.col(""datetime""),","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 19608, 8079, 12340]"
"üß† ML Signal: Use of rolling window operations, common in time series analysis","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 10708, 4324, 4560, 11, 2219, 287, 640, 2168, 3781]",1.0,131,ml_signal,19,"Use of rolling window operations, common in time series analysis",,107,"        pl.col(""data"").shift(window).over(""vt_symbol"")","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 7890, 11074, 30846, 7, 17497, 737, 2502, 7203, 36540, 62, 1837, 23650, 4943]"
‚úÖ Best Practice: Use of descriptive variable names for clarity,"[26486, 227, 6705, 19939, 25, 5765, 286, 35644, 7885, 3891, 329, 16287]",1.0,155,best_practice,19,Use of descriptive variable names for clarity,,131,"        pl.col(""data"").shift(window).over(""vt_symbol"")","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 7890, 11074, 30846, 7, 17497, 737, 2502, 7203, 36540, 62, 1837, 23650, 4943]"
‚úÖ Best Practice: Explicitly selecting columns improves readability and prevents unintended data manipulation,"[26486, 227, 6705, 19939, 25, 11884, 306, 17246, 15180, 19575, 1100, 1799, 290, 15174, 30261, 1366, 17512]",0.5,173,best_practice,24,Explicitly selecting columns improves readability and prevents unintended data manipulation,,155,"def ts_min(feature: DataProxy, window: int) -> DataProxy:","[4299, 40379, 62, 1084, 7, 30053, 25, 6060, 44148, 11, 4324, 25, 493, 8, 4613, 6060, 44148, 25]"
üß† ML Signal: Use of rolling_min function indicates time series data processing,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 10708, 62, 1084, 2163, 9217, 640, 2168, 1366, 7587]",1.0,189,ml_signal,26,Use of rolling_min function indicates time series data processing,,173,    df: pl.DataFrame = feature.df.select(,"[220, 220, 220, 47764, 25, 458, 13, 6601, 19778, 796, 3895, 13, 7568, 13, 19738, 7]"
‚ö†Ô∏è SAST Risk (Low): Ensure that the 'window' parameter is validated to prevent misuse or errors,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 326, 262, 705, 17497, 6, 11507, 318, 31031, 284, 2948, 29169, 393, 8563]",0.5,203,sast_risk,27,Ensure that the 'window' parameter is validated to prevent misuse or errors,Low,189,"        pl.col(""datetime""),","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 19608, 8079, 12340]"
‚úÖ Best Practice: Returning a DataProxy object maintains encapsulation and abstraction,"[26486, 227, 6705, 19939, 25, 42882, 257, 6060, 44148, 2134, 16047, 32652, 1741, 290, 34651]",0.5,203,best_practice,32,Returning a DataProxy object maintains encapsulation and abstraction,,203,,[]
‚úÖ Best Practice: Include type hints for function parameters and return type for better readability and maintainability,"[26486, 227, 6705, 19939, 25, 40348, 2099, 20269, 329, 2163, 10007, 290, 1441, 2099, 329, 1365, 1100, 1799, 290, 5529, 1799]",1.0,218,best_practice,25,Include type hints for function parameters and return type for better readability and maintainability,,203,"    """"""Calculate the minimum value over a rolling window""""""","[220, 220, 220, 37227, 9771, 3129, 378, 262, 5288, 1988, 625, 257, 10708, 4324, 37811]"
"üß† ML Signal: Use of rolling window operations, common in time series analysis","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 10708, 4324, 4560, 11, 2219, 287, 640, 2168, 3781]",1.0,232,ml_signal,27,"Use of rolling window operations, common in time series analysis",,218,"        pl.col(""datetime""),","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 19608, 8079, 12340]"
‚úÖ Best Practice: Use of descriptive variable names for clarity,"[26486, 227, 6705, 19939, 25, 5765, 286, 35644, 7885, 3891, 329, 16287]",0.5,246,best_practice,27,Use of descriptive variable names for clarity,,232,"        pl.col(""datetime""),","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 19608, 8079, 12340]"
‚úÖ Best Practice: Explicitly selecting columns for clarity and to avoid unintended data manipulation,"[26486, 227, 6705, 19939, 25, 11884, 306, 17246, 15180, 329, 16287, 290, 284, 3368, 30261, 1366, 17512]",0.5,246,best_practice,32,Explicitly selecting columns for clarity and to avoid unintended data manipulation,,246,,[]
"üß† ML Signal: Use of rolling_max function, indicating a focus on maximum value calculations over time","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 10708, 62, 9806, 2163, 11, 12739, 257, 2962, 319, 5415, 1988, 16765, 625, 640]",0.5,264,ml_signal,34,"Use of rolling_max function, indicating a focus on maximum value calculations over time",,246,"def ts_max(feature: DataProxy, window: int) -> DataProxy:","[4299, 40379, 62, 9806, 7, 30053, 25, 6060, 44148, 11, 4324, 25, 493, 8, 4613, 6060, 44148, 25]"
‚ö†Ô∏è SAST Risk (Low): Ensure that the 'window' parameter is validated to prevent potential misuse or errors,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 326, 262, 705, 17497, 6, 11507, 318, 31031, 284, 2948, 2785, 29169, 393, 8563]",1.0,279,sast_risk,35,Ensure that the 'window' parameter is validated to prevent potential misuse or errors,Low,264,"    """"""Calculate the maximum value over a rolling window""""""","[220, 220, 220, 37227, 9771, 3129, 378, 262, 5415, 1988, 625, 257, 10708, 4324, 37811]"
"‚úÖ Best Practice: Returning a DataProxy object, maintaining consistency with input type","[26486, 227, 6705, 19939, 25, 42882, 257, 6060, 44148, 2134, 11, 10941, 15794, 351, 5128, 2099]",0.5,283,best_practice,40,"Returning a DataProxy object, maintaining consistency with input type",,279,    ),"[220, 220, 220, 1267]"
‚úÖ Best Practice: Include type hints for function parameters and return type for better readability and maintainability.,"[26486, 227, 6705, 19939, 25, 40348, 2099, 20269, 329, 2163, 10007, 290, 1441, 2099, 329, 1365, 1100, 1799, 290, 5529, 1799, 13]",1.0,283,best_practice,33,Include type hints for function parameters and return type for better readability and maintainability.,,283,,[]
‚úÖ Best Practice: Use explicit type annotations for variables to improve code clarity.,"[26486, 227, 6705, 19939, 25, 5765, 7952, 2099, 37647, 329, 9633, 284, 2987, 2438, 16287, 13]",0.5,298,best_practice,35,Use explicit type annotations for variables to improve code clarity.,,283,"    """"""Calculate the maximum value over a rolling window""""""","[220, 220, 220, 37227, 9771, 3129, 378, 262, 5415, 1988, 625, 257, 10708, 4324, 37811]"
‚ö†Ô∏è SAST Risk (Low): Ensure that the lambda function used in rolling_map does not introduce any side effects or security issues.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 326, 262, 37456, 2163, 973, 287, 10708, 62, 8899, 857, 407, 10400, 597, 1735, 3048, 393, 2324, 2428, 13]",0.5,302,sast_risk,40,Ensure that the lambda function used in rolling_map does not introduce any side effects or security issues.,Low,298,    ),"[220, 220, 220, 1267]"
"üß† ML Signal: Usage of rolling_map with a lambda function indicates a pattern for applying operations over a window, useful for time-series analysis.","[8582, 100, 254, 10373, 26484, 25, 29566, 286, 10708, 62, 8899, 351, 257, 37456, 2163, 9217, 257, 3912, 329, 11524, 4560, 625, 257, 4324, 11, 4465, 329, 640, 12, 25076, 3781, 13]",0.5,311,ml_signal,41,"Usage of rolling_map with a lambda function indicates a pattern for applying operations over a window, useful for time-series analysis.",,302,    return DataProxy(df),"[220, 220, 220, 1441, 6060, 44148, 7, 7568, 8]"
"‚úÖ Best Practice: Return a new instance of DataProxy to encapsulate the DataFrame, promoting immutability and separation of concerns.","[26486, 227, 6705, 19939, 25, 8229, 257, 649, 4554, 286, 6060, 44148, 284, 32652, 5039, 262, 6060, 19778, 11, 11560, 2296, 315, 1799, 290, 14139, 286, 4786, 13]",0.5,311,best_practice,43,"Return a new instance of DataProxy to encapsulate the DataFrame, promoting immutability and separation of concerns.",,311,,[]
‚úÖ Best Practice: Include type hints for function parameters and return type for better readability and maintainability.,"[26486, 227, 6705, 19939, 25, 40348, 2099, 20269, 329, 2163, 10007, 290, 1441, 2099, 329, 1365, 1100, 1799, 290, 5529, 1799, 13]",1.0,320,best_practice,41,Include type hints for function parameters and return type for better readability and maintainability.,,311,    return DataProxy(df),"[220, 220, 220, 1441, 6060, 44148, 7, 7568, 8]"
"üß† ML Signal: Use of rolling window operations, which are common in time series analysis.","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 10708, 4324, 4560, 11, 543, 389, 2219, 287, 640, 2168, 3781, 13]",1.0,320,ml_signal,43,"Use of rolling window operations, which are common in time series analysis.",,320,,[]
‚úÖ Best Practice: Use of type hint for variable 'df' improves code readability.,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 9254, 329, 7885, 705, 7568, 6, 19575, 2438, 1100, 1799, 13]",1.0,320,best_practice,43,Use of type hint for variable 'df' improves code readability.,,320,,[]
‚úÖ Best Practice: Explicitly selecting columns improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 11884, 306, 17246, 15180, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,336,best_practice,48,Explicitly selecting columns improves code readability and maintainability.,,320,"        pl.col(""vt_symbol""),","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 36540, 62, 1837, 23650, 12340]"
‚ö†Ô∏è SAST Risk (Low): Use of lambda functions can sometimes lead to less readable code if overused or complex.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 37456, 5499, 460, 3360, 1085, 284, 1342, 31744, 2438, 611, 625, 1484, 393, 3716, 13]",0.5,340,sast_risk,50,Use of lambda functions can sometimes lead to less readable code if overused or complex.,Low,336,    ),"[220, 220, 220, 1267]"
‚úÖ Best Practice: Returning a DataProxy object maintains consistency with the input type.,"[26486, 227, 6705, 19939, 25, 42882, 257, 6060, 44148, 2134, 16047, 15794, 351, 262, 5128, 2099, 13]",1.0,349,best_practice,51,Returning a DataProxy object maintains consistency with the input type.,,340,    return DataProxy(df),"[220, 220, 220, 1441, 6060, 44148, 7, 7568, 8]"
‚úÖ Best Practice: Include type hints for function parameters and return type for better readability and maintainability,"[26486, 227, 6705, 19939, 25, 40348, 2099, 20269, 329, 2163, 10007, 290, 1441, 2099, 329, 1365, 1100, 1799, 290, 5529, 1799]",1.0,391,best_practice,49,Include type hints for function parameters and return type for better readability and maintainability,,349,"        pl.col(""data"").rolling_map(lambda s: cast(int, s.arg_max()) + 1, window).over(""vt_symbol"")","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 7890, 11074, 18886, 62, 8899, 7, 50033, 264, 25, 3350, 7, 600, 11, 264, 13, 853, 62, 9806, 28955, 1343, 352, 11, 4324, 737, 2502, 7203, 36540, 62, 1837, 23650, 4943]"
"üß† ML Signal: Use of rolling window operations, common in time series analysis","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 10708, 4324, 4560, 11, 2219, 287, 640, 2168, 3781]",0.5,400,ml_signal,51,"Use of rolling window operations, common in time series analysis",,391,    return DataProxy(df),"[220, 220, 220, 1441, 6060, 44148, 7, 7568, 8]"
‚úÖ Best Practice: Use of descriptive variable names like 'df' for DataFrame,"[26486, 227, 6705, 19939, 25, 5765, 286, 35644, 7885, 3891, 588, 705, 7568, 6, 329, 6060, 19778]",0.5,409,best_practice,51,Use of descriptive variable names like 'df' for DataFrame,,400,    return DataProxy(df),"[220, 220, 220, 1441, 6060, 44148, 7, 7568, 8]"
"‚ö†Ô∏è SAST Risk (Low): Use of lambda function within rolling_map, ensure input is sanitized","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 37456, 2163, 1626, 10708, 62, 8899, 11, 4155, 5128, 318, 5336, 36951]",0.5,423,sast_risk,57,"Use of lambda function within rolling_map, ensure input is sanitized",Low,409,"        pl.col(""datetime""),","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 19608, 8079, 12340]"
"üß† ML Signal: Use of statistical function 'percentileofscore', indicating statistical analysis","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 13905, 2163, 705, 25067, 576, 1659, 26675, 3256, 12739, 13905, 3781]",0.5,439,ml_signal,58,"Use of statistical function 'percentileofscore', indicating statistical analysis",,423,"        pl.col(""vt_symbol""),","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 36540, 62, 1837, 23650, 12340]"
"‚úÖ Best Practice: Return a new instance of DataProxy, ensuring immutability of input data","[26486, 227, 6705, 19939, 25, 8229, 257, 649, 4554, 286, 6060, 44148, 11, 13359, 2296, 315, 1799, 286, 5128, 1366]",0.5,481,best_practice,59,"Return a new instance of DataProxy, ensuring immutability of input data",,439,"        pl.col(""data"").rolling_map(lambda s: cast(int, s.arg_min()) + 1, window).over(""vt_symbol"")","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 7890, 11074, 18886, 62, 8899, 7, 50033, 264, 25, 3350, 7, 600, 11, 264, 13, 853, 62, 1084, 28955, 1343, 352, 11, 4324, 737, 2502, 7203, 36540, 62, 1837, 23650, 4943]"
‚úÖ Best Practice: Include type hints for function parameters for better readability and maintainability,"[26486, 227, 6705, 19939, 25, 40348, 2099, 20269, 329, 2163, 10007, 329, 1365, 1100, 1799, 290, 5529, 1799]",1.0,495,best_practice,57,Include type hints for function parameters for better readability and maintainability,,481,"        pl.col(""datetime""),","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 19608, 8079, 12340]"
‚úÖ Best Practice: Use descriptive variable names for clarity,"[26486, 227, 6705, 19939, 25, 5765, 35644, 7885, 3891, 329, 16287]",1.0,537,best_practice,59,Use descriptive variable names for clarity,,495,"        pl.col(""data"").rolling_map(lambda s: cast(int, s.arg_min()) + 1, window).over(""vt_symbol"")","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 7890, 11074, 18886, 62, 8899, 7, 50033, 264, 25, 3350, 7, 600, 11, 264, 13, 853, 62, 1084, 28955, 1343, 352, 11, 4324, 737, 2502, 7203, 36540, 62, 1837, 23650, 4943]"
‚úÖ Best Practice: Explicitly specify columns for selection to avoid unintentional data exposure,"[26486, 227, 6705, 19939, 25, 11884, 306, 11986, 15180, 329, 6356, 284, 3368, 48398, 1366, 7111]",0.5,555,best_practice,64,Explicitly specify columns for selection to avoid unintentional data exposure,,537,"def ts_rank(feature: DataProxy, window: int) -> DataProxy:","[4299, 40379, 62, 43027, 7, 30053, 25, 6060, 44148, 11, 4324, 25, 493, 8, 4613, 6060, 44148, 25]"
‚ö†Ô∏è SAST Risk (Low): Ensure that the 'data' column exists and is of numeric type to prevent runtime errors,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 326, 262, 705, 7890, 6, 5721, 7160, 290, 318, 286, 35575, 2099, 284, 2948, 19124, 8563]",0.5,573,sast_risk,65,Ensure that the 'data' column exists and is of numeric type to prevent runtime errors,Low,555,"    """"""Calculate the percentile rank of the current value within the window""""""","[220, 220, 220, 37227, 9771, 3129, 378, 262, 37894, 4279, 286, 262, 1459, 1988, 1626, 262, 4324, 37811]"
üß† ML Signal: Returning a DataProxy object indicates a pattern of wrapping data operations,"[8582, 100, 254, 10373, 26484, 25, 42882, 257, 6060, 44148, 2134, 9217, 257, 3912, 286, 27074, 1366, 4560]",0.5,587,ml_signal,67,Returning a DataProxy object indicates a pattern of wrapping data operations,,573,"        pl.col(""datetime""),","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 19608, 8079, 12340]"
‚úÖ Best Practice: Type hinting for function parameters and return type improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5994, 9254, 278, 329, 2163, 10007, 290, 1441, 2099, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,605,best_practice,65,Type hinting for function parameters and return type improves code readability and maintainability.,,587,"    """"""Calculate the percentile rank of the current value within the window""""""","[220, 220, 220, 37227, 9771, 3129, 378, 262, 37894, 4279, 286, 262, 1459, 1988, 1626, 262, 4324, 37811]"
"üß† ML Signal: Use of rolling window mean calculation, common in time series analysis.","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 10708, 4324, 1612, 17952, 11, 2219, 287, 640, 2168, 3781, 13]",0.5,619,ml_signal,67,"Use of rolling window mean calculation, common in time series analysis.",,605,"        pl.col(""datetime""),","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 19608, 8079, 12340]"
‚úÖ Best Practice: Use of method chaining with select and rolling_map for concise data manipulation.,"[26486, 227, 6705, 19939, 25, 5765, 286, 2446, 442, 1397, 351, 2922, 290, 10708, 62, 8899, 329, 35327, 1366, 17512, 13]",0.5,633,best_practice,67,Use of method chaining with select and rolling_map for concise data manipulation.,,619,"        pl.col(""datetime""),","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 19608, 8079, 12340]"
‚ö†Ô∏è SAST Risk (Low): Casting data to Float32 could lead to precision loss if not intended.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 39285, 1366, 284, 48436, 2624, 714, 1085, 284, 15440, 2994, 611, 407, 5292, 13]",0.5,633,sast_risk,73,Casting data to Float32 could lead to precision loss if not intended.,Low,633,,[]
‚úÖ Best Practice: Returning a DataProxy object maintains encapsulation and abstraction.,"[26486, 227, 6705, 19939, 25, 42882, 257, 6060, 44148, 2134, 16047, 32652, 1741, 290, 34651, 13]",0.5,647,best_practice,75,Returning a DataProxy object maintains encapsulation and abstraction.,,633,"    """"""Calculate the sum over a rolling window""""""","[220, 220, 220, 37227, 9771, 3129, 378, 262, 2160, 625, 257, 10708, 4324, 37811]"
‚úÖ Best Practice: Include type hints for function parameters and return type for better readability and maintainability,"[26486, 227, 6705, 19939, 25, 40348, 2099, 20269, 329, 2163, 10007, 290, 1441, 2099, 329, 1365, 1100, 1799, 290, 5529, 1799]",1.0,647,best_practice,73,Include type hints for function parameters and return type for better readability and maintainability,,647,,[]
‚úÖ Best Practice: Use explicit type annotation for variables to improve code readability,"[26486, 227, 6705, 19939, 25, 5765, 7952, 2099, 23025, 329, 9633, 284, 2987, 2438, 1100, 1799]",0.5,661,best_practice,75,Use explicit type annotation for variables to improve code readability,,647,"    """"""Calculate the sum over a rolling window""""""","[220, 220, 220, 37227, 9771, 3129, 378, 262, 2160, 625, 257, 10708, 4324, 37811]"
‚ö†Ô∏è SAST Risk (Low): Using lambda functions can sometimes lead to security risks if not properly handled,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 37456, 5499, 460, 3360, 1085, 284, 2324, 7476, 611, 407, 6105, 12118]",0.5,665,sast_risk,80,Using lambda functions can sometimes lead to security risks if not properly handled,Low,661,    ),"[220, 220, 220, 1267]"
üß† ML Signal: Use of rolling_map with a lambda function indicates a pattern of applying custom operations over a window,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 10708, 62, 8899, 351, 257, 37456, 2163, 9217, 257, 3912, 286, 11524, 2183, 4560, 625, 257, 4324]",0.5,674,ml_signal,81,Use of rolling_map with a lambda function indicates a pattern of applying custom operations over a window,,665,    return DataProxy(df),"[220, 220, 220, 1441, 6060, 44148, 7, 7568, 8]"
üß† ML Signal: Returning a DataProxy object suggests a pattern of wrapping dataframes for additional functionality,"[8582, 100, 254, 10373, 26484, 25, 42882, 257, 6060, 44148, 2134, 5644, 257, 3912, 286, 27074, 1366, 37805, 329, 3224, 11244]",0.5,674,ml_signal,83,Returning a DataProxy object suggests a pattern of wrapping dataframes for additional functionality,,674,,[]
‚úÖ Best Practice: Include type hints for function parameters and return type for better readability and maintainability,"[26486, 227, 6705, 19939, 25, 40348, 2099, 20269, 329, 2163, 10007, 290, 1441, 2099, 329, 1365, 1100, 1799, 290, 5529, 1799]",1.0,683,best_practice,81,Include type hints for function parameters and return type for better readability and maintainability,,674,    return DataProxy(df),"[220, 220, 220, 1441, 6060, 44148, 7, 7568, 8]"
‚úÖ Best Practice: Use descriptive variable names for clarity,"[26486, 227, 6705, 19939, 25, 5765, 35644, 7885, 3891, 329, 16287]",1.0,683,best_practice,83,Use descriptive variable names for clarity,,683,,[]
‚ö†Ô∏è SAST Risk (Low): Using lambda functions can sometimes lead to less readable code and debugging difficulties,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 8554, 37456, 5499, 460, 3360, 1085, 284, 1342, 31744, 2438, 290, 28769, 13156]",1.0,699,sast_risk,88,Using lambda functions can sometimes lead to less readable code and debugging difficulties,Low,683,"        pl.col(""vt_symbol""),","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 36540, 62, 1837, 23650, 12340]"
"üß† ML Signal: Use of rolling window operations, common in time series analysis","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 10708, 4324, 4560, 11, 2219, 287, 640, 2168, 3781]",1.0,749,ml_signal,89,"Use of rolling window operations, common in time series analysis",,699,"        pl.col(""data"").cast(pl.Float32).rolling_map(lambda s: np.nanmean(s), window, min_samples=1).over(""vt_symbol"")","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 7890, 11074, 2701, 7, 489, 13, 43879, 2624, 737, 18886, 62, 8899, 7, 50033, 264, 25, 45941, 13, 12647, 32604, 7, 82, 828, 4324, 11, 949, 62, 82, 12629, 28, 16, 737, 2502, 7203, 36540, 62, 1837, 23650, 4943]"
"‚úÖ Best Practice: Return a well-defined object, ensuring the function's purpose is clear","[26486, 227, 6705, 19939, 25, 8229, 257, 880, 12, 23211, 2134, 11, 13359, 262, 2163, 338, 4007, 318, 1598]",0.5,758,best_practice,91,"Return a well-defined object, ensuring the function's purpose is clear",,749,    return DataProxy(df),"[220, 220, 220, 1441, 6060, 44148, 7, 7568, 8]"
üß† ML Signal: Function definition with specific parameters can indicate usage patterns for ML models,"[8582, 100, 254, 10373, 26484, 25, 15553, 6770, 351, 2176, 10007, 460, 7603, 8748, 7572, 329, 10373, 4981]",0.5,808,ml_signal,89,Function definition with specific parameters can indicate usage patterns for ML models,,758,"        pl.col(""data"").cast(pl.Float32).rolling_map(lambda s: np.nanmean(s), window, min_samples=1).over(""vt_symbol"")","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 7890, 11074, 2701, 7, 489, 13, 43879, 2624, 737, 18886, 62, 8899, 7, 50033, 264, 25, 45941, 13, 12647, 32604, 7, 82, 828, 4324, 11, 949, 62, 82, 12629, 28, 16, 737, 2502, 7203, 36540, 62, 1837, 23650, 4943]"
‚úÖ Best Practice: Type hinting for variables improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5994, 9254, 278, 329, 9633, 19575, 2438, 1100, 1799, 290, 5529, 1799]",0.5,817,best_practice,91,Type hinting for variables improves code readability and maintainability,,808,    return DataProxy(df),"[220, 220, 220, 1441, 6060, 44148, 7, 7568, 8]"
‚úÖ Best Practice: Explicitly selecting columns improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 11884, 306, 17246, 15180, 19575, 2438, 1100, 1799, 290, 5529, 1799]",0.5,833,best_practice,96,Explicitly selecting columns improves code readability and maintainability,,817,    df: pl.DataFrame = feature.df.select(,"[220, 220, 220, 47764, 25, 458, 13, 6601, 19778, 796, 3895, 13, 7568, 13, 19738, 7]"
üß† ML Signal: Use of rolling_map with quantile calculation can indicate time-series analysis patterns,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 10708, 62, 8899, 351, 5554, 576, 17952, 460, 7603, 640, 12, 25076, 3781, 7572]",1.0,847,ml_signal,97,Use of rolling_map with quantile calculation can indicate time-series analysis patterns,,833,"        pl.col(""datetime""),","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 19608, 8079, 12340]"
‚ö†Ô∏è SAST Risk (Low): Ensure that the lambda function does not introduce side effects or security issues,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 326, 262, 37456, 2163, 857, 407, 10400, 1735, 3048, 393, 2324, 2428]",0.5,863,sast_risk,98,Ensure that the lambda function does not introduce side effects or security issues,Low,847,"        pl.col(""vt_symbol""),","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 36540, 62, 1837, 23650, 12340]"
üß† ML Signal: Returning a DataProxy object can indicate a pattern of data encapsulation,"[8582, 100, 254, 10373, 26484, 25, 42882, 257, 6060, 44148, 2134, 460, 7603, 257, 3912, 286, 1366, 32652, 1741]",0.5,872,ml_signal,101,Returning a DataProxy object can indicate a pattern of data encapsulation,,863,    return DataProxy(df),"[220, 220, 220, 1441, 6060, 44148, 7, 7568, 8]"
‚úÖ Best Practice: Docstring provides a clear description of the function's purpose,"[26486, 227, 6705, 19939, 25, 14432, 8841, 3769, 257, 1598, 6764, 286, 262, 2163, 338, 4007]",0.5,920,best_practice,99,Docstring provides a clear description of the function's purpose,,872,"        pl.col(""data"").rolling_map(lambda s: np.nanstd(s, ddof=0), window, min_samples=1).over(""vt_symbol"")","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 7890, 11074, 18886, 62, 8899, 7, 50033, 264, 25, 45941, 13, 12647, 19282, 7, 82, 11, 49427, 1659, 28, 15, 828, 4324, 11, 949, 62, 82, 12629, 28, 16, 737, 2502, 7203, 36540, 62, 1837, 23650, 4943]"
‚úÖ Best Practice: Check if standard deviation is zero to avoid division by zero errors,"[26486, 227, 6705, 19939, 25, 6822, 611, 3210, 28833, 318, 6632, 284, 3368, 7297, 416, 6632, 8563]",1.0,929,best_practice,101,Check if standard deviation is zero to avoid division by zero errors,,920,    return DataProxy(df),"[220, 220, 220, 1441, 6060, 44148, 7, 7568, 8]"
"üß† ML Signal: Use of linear regression to calculate R-squared, common in predictive modeling","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 14174, 20683, 284, 15284, 371, 12, 16485, 1144, 11, 2219, 287, 33344, 21128]",1.0,929,ml_signal,102,"Use of linear regression to calculate R-squared, common in predictive modeling",,929,,[]
‚úÖ Best Practice: Type hint for DataFrame improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5994, 9254, 329, 6060, 19778, 19575, 2438, 1100, 1799, 290, 5529, 1799]",1.0,946,best_practice,105,Type hint for DataFrame improves code readability and maintainability,,929,"    """"""Calculate the slope of linear regression over a rolling window""""""","[220, 220, 220, 37227, 9771, 3129, 378, 262, 22638, 286, 14174, 20683, 625, 257, 10708, 4324, 37811]"
‚úÖ Best Practice: Explicitly selecting columns improves code readability,"[26486, 227, 6705, 19939, 25, 11884, 306, 17246, 15180, 19575, 2438, 1100, 1799]",0.5,995,best_practice,109,Explicitly selecting columns improves code readability,,946,"        pl.col(""data"").rolling_map(lambda s: np.polyfit(np.arange(len(s)), s, 1)[0], window).over(""vt_symbol"")","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 7890, 11074, 18886, 62, 8899, 7, 50033, 264, 25, 45941, 13, 35428, 11147, 7, 37659, 13, 283, 858, 7, 11925, 7, 82, 36911, 264, 11, 352, 38381, 15, 4357, 4324, 737, 2502, 7203, 36540, 62, 1837, 23650, 4943]"
"üß† ML Signal: Use of rolling_map for time series analysis, common in financial data processing","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 10708, 62, 8899, 329, 640, 2168, 3781, 11, 2219, 287, 3176, 1366, 7587]",0.5,995,ml_signal,112,"Use of rolling_map for time series analysis, common in financial data processing",,995,,[]
‚ö†Ô∏è SAST Risk (Low): Ensure DataProxy is a safe wrapper and does not introduce security risks,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 6060, 44148, 318, 257, 3338, 29908, 290, 857, 407, 10400, 2324, 7476]",1.0,1019,sast_risk,114,Ensure DataProxy is a safe wrapper and does not introduce security risks,Low,995,"def ts_quantile(feature: DataProxy, window: int, quantile: float) -> DataProxy:","[4299, 40379, 62, 40972, 576, 7, 30053, 25, 6060, 44148, 11, 4324, 25, 493, 11, 5554, 576, 25, 12178, 8, 4613, 6060, 44148, 25]"
‚úÖ Best Practice: Docstring provides a clear description of the function's purpose,"[26486, 227, 6705, 19939, 25, 14432, 8841, 3769, 257, 1598, 6764, 286, 262, 2163, 338, 4007]",1.0,1019,best_practice,112,Docstring provides a clear description of the function's purpose,,1019,,[]
‚úÖ Best Practice: Use of type annotations for variables improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 9633, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,1043,best_practice,114,Use of type annotations for variables improves code readability and maintainability.,,1019,"def ts_quantile(feature: DataProxy, window: int, quantile: float) -> DataProxy:","[4299, 40379, 62, 40972, 576, 7, 30053, 25, 6060, 44148, 11, 4324, 25, 493, 11, 5554, 576, 25, 12178, 8, 4613, 6060, 44148, 25]"
‚úÖ Best Practice: Use of type annotations for variables improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 9633, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,1059,best_practice,116,Use of type annotations for variables improves code readability and maintainability.,,1043,    df: pl.DataFrame = feature.df.select(,"[220, 220, 220, 47764, 25, 458, 13, 6601, 19778, 796, 3895, 13, 7568, 13, 19738, 7]"
‚úÖ Best Practice: Use of type annotations for variables improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 9633, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,1075,best_practice,118,Use of type annotations for variables improves code readability and maintainability.,,1059,"        pl.col(""vt_symbol""),","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 36540, 62, 1837, 23650, 12340]"
‚úÖ Best Practice: Use of type annotations for variables improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 9633, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,1079,best_practice,120,Use of type annotations for variables improves code readability and maintainability.,,1075,    ),"[220, 220, 220, 1267]"
‚úÖ Best Practice: Use of type annotations for variables improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 9633, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,1083,best_practice,120,Use of type annotations for variables improves code readability and maintainability.,,1079,    ),"[220, 220, 220, 1267]"
"üß† ML Signal: Use of rolling_map function indicates a pattern of applying a function over a rolling window, common in time series analysis.","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 10708, 62, 8899, 2163, 9217, 257, 3912, 286, 11524, 257, 2163, 625, 257, 10708, 4324, 11, 2219, 287, 640, 2168, 3781, 13]",1.0,1104,ml_signal,125,"Use of rolling_map function indicates a pattern of applying a function over a rolling window, common in time series analysis.",,1083,"    """"""Calculate the R-squared value of linear regression over a rolling window""""""","[220, 220, 220, 37227, 9771, 3129, 378, 262, 371, 12, 16485, 1144, 1988, 286, 14174, 20683, 625, 257, 10708, 4324, 37811]"
üß† ML Signal: Use of lambda functions for inline operations is a common pattern in data processing.,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 37456, 5499, 329, 26098, 4560, 318, 257, 2219, 3912, 287, 1366, 7587, 13]",0.5,1140,ml_signal,129,Use of lambda functions for inline operations is a common pattern in data processing.,,1104,"            return float(stats.linregress(np.arange(len(s)), s).rvalue ** 2)","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441, 12178, 7, 34242, 13, 2815, 2301, 601, 7, 37659, 13, 283, 858, 7, 11925, 7, 82, 36911, 264, 737, 81, 8367, 12429, 362, 8]"
‚ö†Ô∏è SAST Risk (Low): Use of lambda can sometimes lead to less readable code if overused or complex.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 5765, 286, 37456, 460, 3360, 1085, 284, 1342, 31744, 2438, 611, 625, 1484, 393, 3716, 13]",0.5,1176,sast_risk,129,Use of lambda can sometimes lead to less readable code if overused or complex.,Low,1140,"            return float(stats.linregress(np.arange(len(s)), s).rvalue ** 2)","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441, 12178, 7, 34242, 13, 2815, 2301, 601, 7, 37659, 13, 283, 858, 7, 11925, 7, 82, 36911, 264, 737, 81, 8367, 12429, 362, 8]"
üß† ML Signal: Returning a DataProxy object suggests a pattern of wrapping or abstracting data operations.,"[8582, 100, 254, 10373, 26484, 25, 42882, 257, 6060, 44148, 2134, 5644, 257, 3912, 286, 27074, 393, 12531, 278, 1366, 4560, 13]",0.5,1190,ml_signal,134,Returning a DataProxy object suggests a pattern of wrapping or abstracting data operations.,,1176,"        pl.col(""datetime""),","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 19608, 8079, 12340]"
‚úÖ Best Practice: Include type hints for function parameters and return type for better readability and maintainability.,"[26486, 227, 6705, 19939, 25, 40348, 2099, 20269, 329, 2163, 10007, 290, 1441, 2099, 329, 1365, 1100, 1799, 290, 5529, 1799, 13]",0.5,1206,best_practice,126,Include type hints for function parameters and return type for better readability and maintainability.,,1190,    def rsquare(s: pl.Series) -> float:,"[220, 220, 220, 825, 374, 23415, 7, 82, 25, 458, 13, 27996, 8, 4613, 12178, 25]"
"üß† ML Signal: Usage of DataFrame join operation, common in data preprocessing for ML tasks.","[8582, 100, 254, 10373, 26484, 25, 29566, 286, 6060, 19778, 4654, 4905, 11, 2219, 287, 1366, 662, 36948, 329, 10373, 8861, 13]",0.5,1242,ml_signal,129,"Usage of DataFrame join operation, common in data preprocessing for ML tasks.",,1206,"            return float(stats.linregress(np.arange(len(s)), s).rvalue ** 2)","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441, 12178, 7, 34242, 13, 2815, 2301, 601, 7, 37659, 13, 283, 858, 7, 11925, 7, 82, 36911, 264, 737, 81, 8367, 12429, 362, 8]"
"üß† ML Signal: Usage of rolling correlation, a common feature engineering technique in time series analysis.","[8582, 100, 254, 10373, 26484, 25, 29566, 286, 10708, 16096, 11, 257, 2219, 3895, 8705, 8173, 287, 640, 2168, 3781, 13]",0.5,1278,ml_signal,129,"Usage of rolling correlation, a common feature engineering technique in time series analysis.",,1242,"            return float(stats.linregress(np.arange(len(s)), s).rvalue ** 2)","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441, 12178, 7, 34242, 13, 2815, 2301, 601, 7, 37659, 13, 283, 858, 7, 11925, 7, 82, 36911, 264, 737, 81, 8367, 12429, 362, 8]"
"‚ö†Ô∏è SAST Risk (Low): Handling of infinite values, which could lead to incorrect data processing if not managed.","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 49500, 286, 15541, 3815, 11, 543, 714, 1085, 284, 11491, 1366, 7587, 611, 407, 5257, 13]",0.5,1287,sast_risk,137,"Handling of infinite values, which could lead to incorrect data processing if not managed.",Low,1278,    return DataProxy(df),"[220, 220, 220, 1441, 6060, 44148, 7, 7568, 8]"
"‚úÖ Best Practice: Returning a DataProxy object, maintaining encapsulation and abstraction.","[26486, 227, 6705, 19939, 25, 42882, 257, 6060, 44148, 2134, 11, 10941, 32652, 1741, 290, 34651, 13]",0.5,1304,best_practice,141,"Returning a DataProxy object, maintaining encapsulation and abstraction.",,1287,"    """"""Calculate the residual of linear regression over a rolling window""""""","[220, 220, 220, 37227, 9771, 3129, 378, 262, 29598, 286, 14174, 20683, 625, 257, 10708, 4324, 37811]"
‚úÖ Best Practice: Include type hints for function parameters and return type for better readability and maintainability.,"[26486, 227, 6705, 19939, 25, 40348, 2099, 20269, 329, 2163, 10007, 290, 1441, 2099, 329, 1365, 1100, 1799, 290, 5529, 1799, 13]",1.0,1304,best_practice,138,Include type hints for function parameters and return type for better readability and maintainability.,,1304,,[]
‚úÖ Best Practice: Use isinstance to check the type of feature2 for better code clarity and error handling.,"[26486, 227, 6705, 19939, 25, 5765, 318, 39098, 284, 2198, 262, 2099, 286, 3895, 17, 329, 1365, 2438, 16287, 290, 4049, 9041, 13]",1.0,1321,best_practice,141,Use isinstance to check the type of feature2 for better code clarity and error handling.,,1304,"    """"""Calculate the residual of linear regression over a rolling window""""""","[220, 220, 220, 37227, 9771, 3129, 378, 262, 29598, 286, 14174, 20683, 625, 257, 10708, 4324, 37811]"
‚ö†Ô∏è SAST Risk (Low): Ensure that the join operation does not expose sensitive data by verifying the columns being joined.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 326, 262, 4654, 4905, 857, 407, 15651, 8564, 1366, 416, 45505, 262, 15180, 852, 5399, 13]",0.5,1337,sast_risk,143,Ensure that the join operation does not expose sensitive data by verifying the columns being joined.,Low,1321,"        """"""Calculate residual for a series""""""","[220, 220, 220, 220, 220, 220, 220, 37227, 9771, 3129, 378, 29598, 329, 257, 2168, 37811]"
"‚úÖ Best Practice: Use with_columns to add a new column to the DataFrame, which is clear and concise.","[26486, 227, 6705, 19939, 25, 5765, 351, 62, 28665, 82, 284, 751, 257, 649, 5721, 284, 262, 6060, 19778, 11, 543, 318, 1598, 290, 35327, 13]",1.0,1360,best_practice,144,"Use with_columns to add a new column to the DataFrame, which is clear and concise.",,1337,        x: np.ndarray = np.arange(len(s)),"[220, 220, 220, 220, 220, 220, 220, 2124, 25, 45941, 13, 358, 18747, 796, 45941, 13, 283, 858, 7, 11925, 7, 82, 4008]"
‚úÖ Best Practice: Use min_horizontal for clear and efficient computation of the minimum value across specified columns.,"[26486, 227, 6705, 19939, 25, 5765, 949, 62, 17899, 38342, 329, 1598, 290, 6942, 29964, 286, 262, 5288, 1988, 1973, 7368, 15180, 13]",1.0,1376,best_practice,151,Use min_horizontal for clear and efficient computation of the minimum value across specified columns.,,1360,    df: pl.DataFrame = feature.df.select(,"[220, 220, 220, 47764, 25, 458, 13, 6601, 19778, 796, 3895, 13, 7568, 13, 19738, 7]"
üß† ML Signal: Returning a DataProxy object could indicate a pattern of data transformation or feature engineering.,"[8582, 100, 254, 10373, 26484, 25, 42882, 257, 6060, 44148, 2134, 714, 7603, 257, 3912, 286, 1366, 13389, 393, 3895, 8705, 13]",0.5,1392,ml_signal,153,Returning a DataProxy object could indicate a pattern of data transformation or feature engineering.,,1376,"        pl.col(""vt_symbol""),","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 36540, 62, 1837, 23650, 12340]"
‚úÖ Best Practice: Add type hints for function parameters and return type for better readability and maintainability,"[26486, 227, 6705, 19939, 25, 3060, 2099, 20269, 329, 2163, 10007, 290, 1441, 2099, 329, 1365, 1100, 1799, 290, 5529, 1799]",1.0,1392,best_practice,150,Add type hints for function parameters and return type for better readability and maintainability,,1392,,[]
"üß† ML Signal: Use of isinstance to check type, indicating dynamic type handling","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 318, 39098, 284, 2198, 2099, 11, 12739, 8925, 2099, 9041]",0.5,1408,ml_signal,153,"Use of isinstance to check type, indicating dynamic type handling",,1392,"        pl.col(""vt_symbol""),","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 36540, 62, 1837, 23650, 12340]"
"‚ö†Ô∏è SAST Risk (Low): Potential for key errors if ""datetime"" or ""vt_symbol"" columns are missing","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 1994, 8563, 611, 366, 19608, 8079, 1, 393, 366, 36540, 62, 1837, 23650, 1, 15180, 389, 4814]",0.5,1412,sast_risk,155,"Potential for key errors if ""datetime"" or ""vt_symbol"" columns are missing",Low,1408,    ),"[220, 220, 220, 1267]"
"‚úÖ Best Practice: Use of with_columns to add a new column, improving code readability","[26486, 227, 6705, 19939, 25, 5765, 286, 351, 62, 28665, 82, 284, 751, 257, 649, 5721, 11, 10068, 2438, 1100, 1799]",0.5,1421,best_practice,156,"Use of with_columns to add a new column, improving code readability",,1412,    return DataProxy(df),"[220, 220, 220, 1441, 6060, 44148, 7, 7568, 8]"
"‚úÖ Best Practice: Use of select to specify columns, enhancing code clarity","[26486, 227, 6705, 19939, 25, 5765, 286, 2922, 284, 11986, 15180, 11, 27496, 2438, 16287]",0.5,1459,best_practice,161,"Use of select to specify columns, enhancing code clarity",,1421,"    df_merged: pl.DataFrame = feature1.df.join(feature2.df, on=[""datetime"", ""vt_symbol""])","[220, 220, 220, 47764, 62, 647, 2004, 25, 458, 13, 6601, 19778, 796, 3895, 16, 13, 7568, 13, 22179, 7, 30053, 17, 13, 7568, 11, 319, 28, 14692, 19608, 8079, 1600, 366, 36540, 62, 1837, 23650, 8973, 8]"
"‚ö†Ô∏è SAST Risk (Low): Assumes ""data"" and ""data_right"" columns exist, potential for runtime errors","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 2195, 8139, 366, 7890, 1, 290, 366, 7890, 62, 3506, 1, 15180, 2152, 11, 2785, 329, 19124, 8563]",0.5,1473,sast_risk,164,"Assumes ""data"" and ""data_right"" columns exist, potential for runtime errors",Low,1459,"        pl.col(""datetime""),","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 19608, 8079, 12340]"
"üß† ML Signal: Returning a DataProxy object, indicating a pattern of wrapping dataframes","[8582, 100, 254, 10373, 26484, 25, 42882, 257, 6060, 44148, 2134, 11, 12739, 257, 3912, 286, 27074, 1366, 37805]",0.5,1485,ml_signal,169,"Returning a DataProxy object, indicating a pattern of wrapping dataframes",,1473,    df = df.with_columns(,"[220, 220, 220, 47764, 796, 47764, 13, 4480, 62, 28665, 82, 7]"
‚úÖ Best Practice: Include type hints for function parameters and return type for better readability and maintainability,"[26486, 227, 6705, 19939, 25, 40348, 2099, 20269, 329, 2163, 10007, 290, 1441, 2099, 329, 1365, 1100, 1799, 290, 5529, 1799]",1.0,1485,best_practice,162,Include type hints for function parameters and return type for better readability and maintainability,,1485,,[]
"üß† ML Signal: Use of natural logarithm transformation on data, common in feature engineering","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 3288, 2604, 283, 342, 76, 13389, 319, 1366, 11, 2219, 287, 3895, 8705]",0.5,1499,ml_signal,164,"Use of natural logarithm transformation on data, common in feature engineering",,1485,"        pl.col(""datetime""),","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 19608, 8079, 12340]"
‚úÖ Best Practice: Use of method chaining for concise and readable data manipulation,"[26486, 227, 6705, 19939, 25, 5765, 286, 2446, 442, 1397, 329, 35327, 290, 31744, 1366, 17512]",0.5,1513,best_practice,164,Use of method chaining for concise and readable data manipulation,,1499,"        pl.col(""datetime""),","[220, 220, 220, 220, 220, 220, 220, 458, 13, 4033, 7203, 19608, 8079, 12340]"
‚úÖ Best Practice: Explicitly selecting columns improves code readability and prevents unintended data manipulation,"[26486, 227, 6705, 19939, 25, 11884, 306, 17246, 15180, 19575, 2438, 1100, 1799, 290, 15174, 30261, 1366, 17512]",0.5,1525,best_practice,169,Explicitly selecting columns improves code readability and prevents unintended data manipulation,,1513,    df = df.with_columns(,"[220, 220, 220, 47764, 796, 47764, 13, 4480, 62, 28665, 82, 7]"
"‚ö†Ô∏è SAST Risk (Low): Ensure that the ""data"" column does not contain non-positive values to avoid math domain errors","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 326, 262, 366, 7890, 1, 5721, 857, 407, 3994, 1729, 12, 24561, 3815, 284, 3368, 10688, 7386, 8563]",1.0,1529,sast_risk,171,"Ensure that the ""data"" column does not contain non-positive values to avoid math domain errors",Low,1525,    ),"[220, 220, 220, 1267]"
"üß† ML Signal: Returning a DataProxy object, indicating a pattern of wrapping dataframes for additional functionality","[8582, 100, 254, 10373, 26484, 25, 42882, 257, 6060, 44148, 2134, 11, 12739, 257, 3912, 286, 27074, 1366, 37805, 329, 3224, 11244]",0.5,1529,ml_signal,172,"Returning a DataProxy object, indicating a pattern of wrapping dataframes for additional functionality",,1529,,[]
‚úÖ Best Practice: Include type hints for function parameters and return type for better readability and maintainability,"[26486, 227, 6705, 19939, 25, 40348, 2099, 20269, 329, 2163, 10007, 290, 1441, 2099, 329, 1365, 1100, 1799, 290, 5529, 1799]",1.0,1570,best_practice,170,Include type hints for function parameters and return type for better readability and maintainability,,1529,"        pl.when(pl.col(""data"").is_infinite()).then(None).otherwise(pl.col(""data"")).alias(""data"")","[220, 220, 220, 220, 220, 220, 220, 458, 13, 12518, 7, 489, 13, 4033, 7203, 7890, 11074, 271, 62, 10745, 9504, 3419, 737, 8524, 7, 14202, 737, 847, 3083, 7, 489, 13, 4033, 7203, 7890, 4943, 737, 26011, 7203, 7890, 4943]"
‚úÖ Best Practice: Use descriptive variable names for better readability,"[26486, 227, 6705, 19939, 25, 5765, 35644, 7885, 3891, 329, 1365, 1100, 1799]",1.0,1570,best_practice,172,Use descriptive variable names for better readability,,1570,,[]
‚úÖ Best Practice: Explicitly specify columns to select for clarity and to avoid unintended data exposure,"[26486, 227, 6705, 19939, 25, 11884, 306, 11986, 15180, 284, 2922, 329, 16287, 290, 284, 3368, 30261, 1366, 7111]",0.5,1582,best_practice,177,Explicitly specify columns to select for clarity and to avoid unintended data exposure,,1570,"    """"""Return the minimum value between two features""""""","[220, 220, 220, 37227, 13615, 262, 5288, 1988, 1022, 734, 3033, 37811]"
"‚ö†Ô∏è SAST Risk (Low): Ensure that the ""data"" column exists and contains numeric values to avoid runtime errors","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 326, 262, 366, 7890, 1, 5721, 7160, 290, 4909, 35575, 3815, 284, 3368, 19124, 8563]",0.5,1594,sast_risk,177,"Ensure that the ""data"" column exists and contains numeric values to avoid runtime errors",Low,1582,"    """"""Return the minimum value between two features""""""","[220, 220, 220, 37227, 13615, 262, 5288, 1988, 1022, 734, 3033, 37811]"
"üß† ML Signal: Returns a DataProxy object, indicating a pattern of data transformation","[8582, 100, 254, 10373, 26484, 25, 16409, 257, 6060, 44148, 2134, 11, 12739, 257, 3912, 286, 1366, 13389]",0.5,1606,ml_signal,177,"Returns a DataProxy object, indicating a pattern of data transformation",,1594,"    """"""Return the minimum value between two features""""""","[220, 220, 220, 37227, 13615, 262, 5288, 1988, 1022, 734, 3033, 37811]"
