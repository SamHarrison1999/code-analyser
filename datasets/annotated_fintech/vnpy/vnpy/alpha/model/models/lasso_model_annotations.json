[
  {
    "line": 2,
    "text": "import polars as pl",
    "annotation": "\u2705 Best Practice: Grouping imports from the same library together improves readability.",
    "confidence": 0.5,
    "tokens": [
      11748,
      755,
      945,
      355,
      458
    ],
    "start_token": 0,
    "end_token": 5,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      5888,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same library together improves readability."
  },
  {
    "line": 4,
    "text": "",
    "annotation": "\u2705 Best Practice: Grouping imports from the same library together improves readability.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 5,
    "end_token": 5,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      5888,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same library together improves readability."
  },
  {
    "line": 4,
    "text": "",
    "annotation": "\u2705 Best Practice: Grouping imports from the same library together improves readability.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 5,
    "end_token": 5,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      17944,
      422,
      262,
      976,
      5888,
      1978,
      19575,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping imports from the same library together improves readability."
  },
  {
    "line": 12,
    "text": "",
    "annotation": "\u2705 Best Practice: Class docstring provides a brief description of the class functionality",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 5,
    "end_token": 5,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      2205,
      8841,
      3769,
      257,
      4506,
      6764,
      286,
      262,
      1398,
      11244
    ],
    "label": "best_practice",
    "reason": "Class docstring provides a brief description of the class functionality"
  },
  {
    "line": 28,
    "text": "            Maximum number of iterations",
    "annotation": "\u2705 Best Practice: Type annotations for instance variables improve code readability and maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      22246,
      1271,
      286,
      34820
    ],
    "start_token": 5,
    "end_token": 20,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      37647,
      329,
      4554,
      9633,
      2987,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type annotations for instance variables improve code readability and maintainability"
  },
  {
    "line": 30,
    "text": "            Random seed",
    "annotation": "\u2705 Best Practice: Type annotations for instance variables improve code readability and maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      14534,
      9403
    ],
    "start_token": 20,
    "end_token": 33,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      37647,
      329,
      4554,
      9633,
      2987,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type annotations for instance variables improve code readability and maintainability"
  },
  {
    "line": 32,
    "text": "        self.alpha: float = alpha",
    "annotation": "\u2705 Best Practice: Type annotations for instance variables improve code readability and maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      26591,
      25,
      12178,
      796,
      17130
    ],
    "start_token": 33,
    "end_token": 47,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      37647,
      329,
      4554,
      9633,
      2987,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type annotations for instance variables improve code readability and maintainability"
  },
  {
    "line": 34,
    "text": "        self.random_state: int | None = random_state",
    "annotation": "\u2705 Best Practice: Initialize instance variables in the constructor",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      25120,
      62,
      5219,
      25,
      493,
      930,
      6045,
      796,
      4738,
      62,
      5219
    ],
    "start_token": 47,
    "end_token": 67,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      20768,
      1096,
      4554,
      9633,
      287,
      262,
      23772
    ],
    "label": "best_practice",
    "reason": "Initialize instance variables in the constructor"
  },
  {
    "line": 34,
    "text": "        self.random_state: int | None = random_state",
    "annotation": "\u2705 Best Practice: Initialize instance variables in the constructor",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      25120,
      62,
      5219,
      25,
      493,
      930,
      6045,
      796,
      4738,
      62,
      5219
    ],
    "start_token": 67,
    "end_token": 87,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      20768,
      1096,
      4554,
      9633,
      287,
      262,
      23772
    ],
    "label": "best_practice",
    "reason": "Initialize instance variables in the constructor"
  },
  {
    "line": 41,
    "text": "        \"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Fetching training and validation data for model fitting",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 87,
    "end_token": 95,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      376,
      7569,
      278,
      3047,
      290,
      21201,
      1366,
      329,
      2746,
      15830
    ],
    "label": "ml_signal",
    "reason": "Fetching training and validation data for model fitting"
  },
  {
    "line": 43,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Fetching training and validation data for model fitting",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 95,
    "end_token": 95,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      376,
      7569,
      278,
      3047,
      290,
      21201,
      1366,
      329,
      2746,
      15830
    ],
    "label": "ml_signal",
    "reason": "Fetching training and validation data for model fitting"
  },
  {
    "line": 45,
    "text": "        ----------",
    "annotation": "\u2705 Best Practice: Concatenating training and validation data for combined training",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      24200,
      438
    ],
    "start_token": 95,
    "end_token": 104,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      1482,
      9246,
      268,
      803,
      3047,
      290,
      21201,
      1366,
      329,
      5929,
      3047
    ],
    "label": "best_practice",
    "reason": "Concatenating training and validation data for combined training"
  },
  {
    "line": 47,
    "text": "            The dataset used for training",
    "annotation": "\u2705 Best Practice: Removing duplicates to ensure data quality",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      383,
      27039,
      973,
      329,
      3047
    ],
    "start_token": 104,
    "end_token": 120,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      3982,
      5165,
      14184,
      16856,
      284,
      4155,
      1366,
      3081
    ],
    "label": "best_practice",
    "reason": "Removing duplicates to ensure data quality"
  },
  {
    "line": 49,
    "text": "        # Get training data",
    "annotation": "\u2705 Best Practice: Sorting data to maintain order consistency",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      3497,
      3047,
      1366
    ],
    "start_token": 120,
    "end_token": 131,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      311,
      24707,
      1366,
      284,
      5529,
      1502,
      15794
    ],
    "label": "best_practice",
    "reason": "Sorting data to maintain order consistency"
  },
  {
    "line": 49,
    "text": "        # Get training data",
    "annotation": "\ud83e\udde0 ML Signal: Extracting feature names for model training",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      3497,
      3047,
      1366
    ],
    "start_token": 131,
    "end_token": 142,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29677,
      278,
      3895,
      3891,
      329,
      2746,
      3047
    ],
    "label": "ml_signal",
    "reason": "Extracting feature names for model training"
  },
  {
    "line": 56,
    "text": "        df_train = df_train.sort([\"datetime\", \"vt_symbol\"])",
    "annotation": "\ud83e\udde0 ML Signal: Converting DataFrame to numpy array for model input",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      62,
      27432,
      796,
      47764,
      62,
      27432,
      13,
      30619,
      7,
      14692,
      19608,
      8079,
      1600,
      366,
      36540,
      62,
      1837,
      23650,
      8973,
      8
    ],
    "start_token": 142,
    "end_token": 170,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      35602,
      889,
      6060,
      19778,
      284,
      299,
      32152,
      7177,
      329,
      2746,
      5128
    ],
    "label": "ml_signal",
    "reason": "Converting DataFrame to numpy array for model input"
  },
  {
    "line": 56,
    "text": "        df_train = df_train.sort([\"datetime\", \"vt_symbol\"])",
    "annotation": "\ud83e\udde0 ML Signal: Extracting labels for supervised learning",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      62,
      27432,
      796,
      47764,
      62,
      27432,
      13,
      30619,
      7,
      14692,
      19608,
      8079,
      1600,
      366,
      36540,
      62,
      1837,
      23650,
      8973,
      8
    ],
    "start_token": 170,
    "end_token": 198,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29677,
      278,
      14722,
      329,
      28679,
      4673
    ],
    "label": "ml_signal",
    "reason": "Extracting labels for supervised learning"
  },
  {
    "line": 57,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Initializing Lasso model with hyperparameters",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 198,
    "end_token": 198,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      2890,
      406,
      28372,
      2746,
      351,
      8718,
      17143,
      7307
    ],
    "label": "ml_signal",
    "reason": "Initializing Lasso model with hyperparameters"
  },
  {
    "line": 58,
    "text": "        # Extract feature names",
    "annotation": "\ud83e\udde0 ML Signal: Fitting the model with features and labels",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      29677,
      3895,
      3891
    ],
    "start_token": 198,
    "end_token": 209,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      376,
      2535,
      262,
      2746,
      351,
      3033,
      290,
      14722
    ],
    "label": "ml_signal",
    "reason": "Fitting the model with features and labels"
  },
  {
    "line": 75,
    "text": "    def predict(self, dataset: AlphaDataset, segment: Segment) -> np.ndarray:",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential for NoneType error if self.model is not properly initialized",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      4331,
      7,
      944,
      11,
      27039,
      25,
      12995,
      27354,
      292,
      316,
      11,
      10618,
      25,
      1001,
      5154,
      8,
      4613,
      45941,
      13,
      358,
      18747,
      25
    ],
    "start_token": 209,
    "end_token": 235,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      329,
      6045,
      6030,
      4049,
      611,
      2116,
      13,
      19849,
      318,
      407,
      6105,
      23224
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential for NoneType error if self.model is not properly initialized"
  },
  {
    "line": 78,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Fetching and sorting data for prediction",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 235,
    "end_token": 235,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      376,
      7569,
      278,
      290,
      29407,
      1366,
      329,
      17724
    ],
    "label": "ml_signal",
    "reason": "Fetching and sorting data for prediction"
  },
  {
    "line": 80,
    "text": "        ----------",
    "annotation": "\u2705 Best Practice: Sorting data to ensure consistent prediction results",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      24200,
      438
    ],
    "start_token": 235,
    "end_token": 244,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      311,
      24707,
      1366,
      284,
      4155,
      6414,
      17724,
      2482
    ],
    "label": "best_practice",
    "reason": "Sorting data to ensure consistent prediction results"
  },
  {
    "line": 82,
    "text": "            The dataset used for prediction",
    "annotation": "\ud83e\udde0 ML Signal: Converting DataFrame to numpy array for model prediction",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      383,
      27039,
      973,
      329,
      17724
    ],
    "start_token": 244,
    "end_token": 260,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      35602,
      889,
      6060,
      19778,
      284,
      299,
      32152,
      7177,
      329,
      2746,
      17724
    ],
    "label": "ml_signal",
    "reason": "Converting DataFrame to numpy array for model prediction"
  },
  {
    "line": 83,
    "text": "        segment : Segment",
    "annotation": "\ud83e\udde0 ML Signal: Using a model's predict method",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      10618,
      1058,
      1001,
      5154
    ],
    "start_token": 260,
    "end_token": 271,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8554,
      257,
      2746,
      338,
      4331,
      2446
    ],
    "label": "ml_signal",
    "reason": "Using a model's predict method"
  },
  {
    "line": 89,
    "text": "            Prediction results",
    "annotation": "\u2705 Best Practice: Type hinting for numpy array improves code readability and maintainability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      46690,
      2482
    ],
    "start_token": 271,
    "end_token": 284,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      299,
      32152,
      7177,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting for numpy array improves code readability and maintainability"
  },
  {
    "line": 91,
    "text": "        Raises",
    "annotation": "\u2705 Best Practice: Type hinting for list of tuples improves code readability and maintainability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      7567,
      2696
    ],
    "start_token": 284,
    "end_token": 293,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      1351,
      286,
      12777,
      2374,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting for list of tuples improves code readability and maintainability"
  },
  {
    "line": 92,
    "text": "        ------",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Using `strict=False` in `zip` can lead to unexpected behavior if lists are of different lengths",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      40103
    ],
    "start_token": 293,
    "end_token": 301,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      8554,
      4600,
      301,
      2012,
      28,
      25101,
      63,
      287,
      4600,
      13344,
      63,
      460,
      1085,
      284,
      10059,
      4069,
      611,
      8341,
      389,
      286,
      1180,
      20428
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Using `strict=False` in `zip` can lead to unexpected behavior if lists are of different lengths"
  },
  {
    "line": 94,
    "text": "            If the model has not been fitted yet",
    "annotation": "\u2705 Best Practice: List comprehension for filtering improves code readability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1002,
      262,
      2746,
      468,
      407,
      587,
      18235,
      1865
    ],
    "start_token": 301,
    "end_token": 320,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      7343,
      35915,
      329,
      25431,
      19575,
      2438,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "List comprehension for filtering improves code readability"
  },
  {
    "line": 96,
    "text": "        # Check if model exists",
    "annotation": "\u2705 Best Practice: Sorting with a key function improves code readability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      6822,
      611,
      2746,
      7160
    ],
    "start_token": 320,
    "end_token": 332,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      311,
      24707,
      351,
      257,
      1994,
      2163,
      19575,
      2438,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Sorting with a key function improves code readability"
  },
  {
    "line": 96,
    "text": "        # Check if model exists",
    "annotation": "\u2705 Best Practice: List comprehension for filtering improves code readability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      6822,
      611,
      2746,
      7160
    ],
    "start_token": 332,
    "end_token": 344,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      7343,
      35915,
      329,
      25431,
      19575,
      2438,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "List comprehension for filtering improves code readability"
  },
  {
    "line": 96,
    "text": "        # Check if model exists",
    "annotation": "\ud83e\udde0 ML Signal: Logging the number of features can be useful for monitoring model behavior",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      6822,
      611,
      2746,
      7160
    ],
    "start_token": 344,
    "end_token": 356,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      262,
      1271,
      286,
      3033,
      460,
      307,
      4465,
      329,
      9904,
      2746,
      4069
    ],
    "label": "ml_signal",
    "reason": "Logging the number of features can be useful for monitoring model behavior"
  },
  {
    "line": 96,
    "text": "        # Check if model exists",
    "annotation": "\ud83e\udde0 ML Signal: Logging feature names and their importance can be useful for model interpretability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      6822,
      611,
      2746,
      7160
    ],
    "start_token": 356,
    "end_token": 368,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      3895,
      3891,
      290,
      511,
      6817,
      460,
      307,
      4465,
      329,
      2746,
      6179,
      1799
    ],
    "label": "ml_signal",
    "reason": "Logging feature names and their importance can be useful for model interpretability"
  }
]