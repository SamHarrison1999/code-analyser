[
  {
    "line": 4,
    "text": "from pathlib import Path",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Using pickle can lead to arbitrary code execution if the data is tampered with.",
    "confidence": 1.0,
    "tokens": [
      6738,
      3108,
      8019,
      1330,
      10644
    ],
    "start_token": 0,
    "end_token": 5,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      8554,
      2298,
      293,
      460,
      1085,
      284,
      14977,
      2438,
      9706,
      611,
      262,
      1366,
      318,
      21885,
      13653,
      351,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Using pickle can lead to arbitrary code execution if the data is tampered with."
  },
  {
    "line": 10,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Importing specific classes from a module indicates usage patterns and dependencies.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 5,
    "end_token": 5,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17267,
      278,
      2176,
      6097,
      422,
      257,
      8265,
      9217,
      8748,
      7572,
      290,
      20086,
      13
    ],
    "label": "ml_signal",
    "reason": "Importing specific classes from a module indicates usage patterns and dependencies."
  },
  {
    "line": 17,
    "text": "from .model import AlphaModel",
    "annotation": "\u2705 Best Practice: Class docstring provides a brief description of the class",
    "confidence": 1.0,
    "tokens": [
      6738,
      764,
      19849,
      1330,
      12995,
      17633
    ],
    "start_token": 5,
    "end_token": 11,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      2205,
      8841,
      3769,
      257,
      4506,
      6764,
      286,
      262,
      1398
    ],
    "label": "best_practice",
    "reason": "Class docstring provides a brief description of the class"
  },
  {
    "line": 19,
    "text": "",
    "annotation": "\u2705 Best Practice: Type hinting for 'lab_path' improves code readability and maintainability.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 11,
    "end_token": 11,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      705,
      23912,
      62,
      6978,
      6,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Type hinting for 'lab_path' improves code readability and maintainability."
  },
  {
    "line": 21,
    "text": "    \"\"\"Alpha Research Laboratory\"\"\"",
    "annotation": "\u2705 Best Practice: Using Path.joinpath for constructing paths is more readable and maintainable.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      37227,
      38077,
      4992,
      18643,
      37811
    ],
    "start_token": 11,
    "end_token": 19,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      10644,
      13,
      22179,
      6978,
      329,
      30580,
      13532,
      318,
      517,
      31744,
      290,
      5529,
      540,
      13
    ],
    "label": "best_practice",
    "reason": "Using Path.joinpath for constructing paths is more readable and maintainable."
  },
  {
    "line": 39,
    "text": "        for path in [",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential race condition if the directory is created between the check and mkdir call.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      329,
      3108,
      287,
      685
    ],
    "start_token": 19,
    "end_token": 30,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      3234,
      4006,
      611,
      262,
      8619,
      318,
      2727,
      1022,
      262,
      2198,
      290,
      33480,
      15908,
      869,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential race condition if the directory is created between the check and mkdir call."
  },
  {
    "line": 40,
    "text": "            self.lab_path,",
    "annotation": "\u2705 Best Practice: Early return for empty input improves readability and efficiency.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      23912,
      62,
      6978,
      11
    ],
    "start_token": 30,
    "end_token": 47,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12556,
      1441,
      329,
      6565,
      5128,
      19575,
      1100,
      1799,
      290,
      9332,
      13
    ],
    "label": "best_practice",
    "reason": "Early return for empty input improves readability and efficiency."
  },
  {
    "line": 44,
    "text": "            self.dataset_path,",
    "annotation": "\u2705 Best Practice: Using specific paths based on conditions improves code organization.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      19608,
      292,
      316,
      62,
      6978,
      11
    ],
    "start_token": 47,
    "end_token": 66,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      2176,
      13532,
      1912,
      319,
      3403,
      19575,
      2438,
      4009,
      13
    ],
    "label": "best_practice",
    "reason": "Using specific paths based on conditions improves code organization."
  },
  {
    "line": 50,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Logging error messages can expose sensitive information.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 66,
    "end_token": 66,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5972,
      2667,
      4049,
      6218,
      460,
      15651,
      8564,
      1321,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Logging error messages can expose sensitive information."
  },
  {
    "line": 52,
    "text": "        \"\"\"Save bar data\"\"\"",
    "annotation": "\u2705 Best Practice: Removing timezone information ensures consistency in data storage.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227,
      16928,
      2318,
      1366,
      37811
    ],
    "start_token": 66,
    "end_token": 78,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      3982,
      5165,
      640,
      11340,
      1321,
      19047,
      15794,
      287,
      1366,
      6143,
      13
    ],
    "label": "best_practice",
    "reason": "Removing timezone information ensures consistency in data storage."
  },
  {
    "line": 68,
    "text": "        for bar in bars:",
    "annotation": "\ud83e\udde0 ML Signal: Checking for file existence before writing is a common pattern.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      329,
      2318,
      287,
      9210,
      25
    ],
    "start_token": 78,
    "end_token": 90,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      39432,
      329,
      2393,
      6224,
      878,
      3597,
      318,
      257,
      2219,
      3912,
      13
    ],
    "label": "ml_signal",
    "reason": "Checking for file existence before writing is a common pattern."
  },
  {
    "line": 70,
    "text": "                \"datetime\": bar.datetime.replace(tzinfo=None),",
    "annotation": "\ud83e\udde0 ML Signal: Concatenating and deduplicating data is a common data processing pattern.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      19608,
      8079,
      1298,
      2318,
      13,
      19608,
      8079,
      13,
      33491,
      7,
      22877,
      10951,
      28,
      14202,
      828
    ],
    "start_token": 90,
    "end_token": 121,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      1482,
      9246,
      268,
      803,
      290,
      4648,
      84,
      489,
      12364,
      1366,
      318,
      257,
      2219,
      1366,
      7587,
      3912,
      13
    ],
    "label": "ml_signal",
    "reason": "Concatenating and deduplicating data is a common data processing pattern."
  },
  {
    "line": 75,
    "text": "                \"volume\": bar.volume,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Writing to files can lead to data corruption if not handled properly.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      366,
      29048,
      1298,
      2318,
      13,
      29048,
      11
    ],
    "start_token": 121,
    "end_token": 143,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      22183,
      284,
      3696,
      460,
      1085,
      284,
      1366,
      9253,
      611,
      407,
      12118,
      6105,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Writing to files can lead to data corruption if not handled properly."
  },
  {
    "line": 78,
    "text": "            }",
    "annotation": "\ud83e\udde0 ML Signal: Type checking and conversion for 'interval' indicates handling of flexible input types",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1782
    ],
    "start_token": 143,
    "end_token": 155,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5994,
      10627,
      290,
      11315,
      329,
      705,
      3849,
      2100,
      6,
      9217,
      9041,
      286,
      12846,
      5128,
      3858
    ],
    "label": "ml_signal",
    "reason": "Type checking and conversion for 'interval' indicates handling of flexible input types"
  },
  {
    "line": 81,
    "text": "        new_df: pl.DataFrame = pl.DataFrame(data)",
    "annotation": "\ud83e\udde0 ML Signal: Conversion of 'start' and 'end' to datetime objects shows handling of flexible input types",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      649,
      62,
      7568,
      25,
      458,
      13,
      6601,
      19778,
      796,
      458,
      13,
      6601,
      19778,
      7,
      7890,
      8
    ],
    "start_token": 155,
    "end_token": 178,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      44101,
      286,
      705,
      9688,
      6,
      290,
      705,
      437,
      6,
      284,
      4818,
      8079,
      5563,
      2523,
      9041,
      286,
      12846,
      5128,
      3858
    ],
    "label": "ml_signal",
    "reason": "Conversion of 'start' and 'end' to datetime objects shows handling of flexible input types"
  },
  {
    "line": 89,
    "text": "            new_df = new_df.unique(subset=[\"datetime\"])",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Logging error messages can potentially expose sensitive information",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      649,
      62,
      7568,
      796,
      649,
      62,
      7568,
      13,
      34642,
      7,
      7266,
      2617,
      28,
      14692,
      19608,
      8079,
      8973,
      8
    ],
    "start_token": 178,
    "end_token": 207,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5972,
      2667,
      4049,
      6218,
      460,
      6196,
      15651,
      8564,
      1321
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Logging error messages can potentially expose sensitive information"
  },
  {
    "line": 93,
    "text": "        # Save to file",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Checking file existence without handling potential race conditions",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      12793,
      284,
      2393
    ],
    "start_token": 207,
    "end_token": 218,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      39432,
      2393,
      6224,
      1231,
      9041,
      2785,
      3234,
      3403
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Checking file existence without handling potential race conditions"
  },
  {
    "line": 95,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Logging error messages can potentially expose sensitive information",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 218,
    "end_token": 218,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5972,
      2667,
      4049,
      6218,
      460,
      6196,
      15651,
      8564,
      1321
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Logging error messages can potentially expose sensitive information"
  },
  {
    "line": 98,
    "text": "        vt_symbol: str,",
    "annotation": "\ud83e\udde0 ML Signal: Use of polars library for reading parquet files indicates preference for performance",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      410,
      83,
      62,
      1837,
      23650,
      25,
      965,
      11
    ],
    "start_token": 218,
    "end_token": 233,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      755,
      945,
      5888,
      329,
      3555,
      1582,
      21108,
      3696,
      9217,
      12741,
      329,
      2854
    ],
    "label": "ml_signal",
    "reason": "Use of polars library for reading parquet files indicates preference for performance"
  },
  {
    "line": 98,
    "text": "        vt_symbol: str,",
    "annotation": "\ud83e\udde0 ML Signal: Filtering data based on datetime range shows common data processing pattern",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      410,
      83,
      62,
      1837,
      23650,
      25,
      965,
      11
    ],
    "start_token": 233,
    "end_token": 248,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      7066,
      20212,
      1366,
      1912,
      319,
      4818,
      8079,
      2837,
      2523,
      2219,
      1366,
      7587,
      3912
    ],
    "label": "ml_signal",
    "reason": "Filtering data based on datetime range shows common data processing pattern"
  },
  {
    "line": 98,
    "text": "        vt_symbol: str,",
    "annotation": "\ud83e\udde0 ML Signal: Extraction of symbol and exchange from vt_symbol indicates common pattern in financial data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      410,
      83,
      62,
      1837,
      23650,
      25,
      965,
      11
    ],
    "start_token": 248,
    "end_token": 263,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5683,
      7861,
      286,
      6194,
      290,
      5163,
      422,
      410,
      83,
      62,
      1837,
      23650,
      9217,
      2219,
      3912,
      287,
      3176,
      1366
    ],
    "label": "ml_signal",
    "reason": "Extraction of symbol and exchange from vt_symbol indicates common pattern in financial data"
  },
  {
    "line": 112,
    "text": "        if interval == Interval.DAILY:",
    "annotation": "\u2705 Best Practice: Use of named arguments improves code readability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      16654,
      6624,
      4225,
      2100,
      13,
      5631,
      33340,
      25
    ],
    "start_token": 263,
    "end_token": 279,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      3706,
      7159,
      19575,
      2438,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of named arguments improves code readability"
  },
  {
    "line": 123,
    "text": "            logger.error(f\"File {file_path} does not exist\")",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential risk if vt_symbols is not validated for malicious input",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      49706,
      13,
      18224,
      7,
      69,
      1,
      8979,
      1391,
      7753,
      62,
      6978,
      92,
      857,
      407,
      2152,
      4943
    ],
    "start_token": 279,
    "end_token": 306,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2526,
      611,
      410,
      83,
      62,
      1837,
      2022,
      10220,
      318,
      407,
      31031,
      329,
      17412,
      5128
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential risk if vt_symbols is not validated for malicious input"
  },
  {
    "line": 126,
    "text": "        # Open file",
    "annotation": "\u2705 Best Practice: Check and convert interval to a consistent type",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      4946,
      2393
    ],
    "start_token": 306,
    "end_token": 316,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      290,
      10385,
      16654,
      284,
      257,
      6414,
      2099
    ],
    "label": "best_practice",
    "reason": "Check and convert interval to a consistent type"
  },
  {
    "line": 129,
    "text": "        # Filter by date range",
    "annotation": "\u2705 Best Practice: Convert start and end to datetime and adjust with extended_days",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      25853,
      416,
      3128,
      2837
    ],
    "start_token": 316,
    "end_token": 328,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      38240,
      923,
      290,
      886,
      284,
      4818,
      8079,
      290,
      4532,
      351,
      7083,
      62,
      12545
    ],
    "label": "best_practice",
    "reason": "Convert start and end to datetime and adjust with extended_days"
  },
  {
    "line": 132,
    "text": "        # Convert to BarData objects",
    "annotation": "\u2705 Best Practice: Use clear conditional logic to determine folder_path",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      38240,
      284,
      2409,
      6601,
      5563
    ],
    "start_token": 328,
    "end_token": 341,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      1598,
      26340,
      9156,
      284,
      5004,
      9483,
      62,
      6978
    ],
    "label": "best_practice",
    "reason": "Use clear conditional logic to determine folder_path"
  },
  {
    "line": 138,
    "text": "            bar = BarData(",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Logging error messages can expose sensitive information",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2318,
      796,
      2409,
      6601,
      7
    ],
    "start_token": 341,
    "end_token": 357,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5972,
      2667,
      4049,
      6218,
      460,
      15651,
      8564,
      1321
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Logging error messages can expose sensitive information"
  },
  {
    "line": 143,
    "text": "                open_price=row[\"open\"],",
    "annotation": "\u2705 Best Practice: Construct file path using joinpath for better readability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1280,
      62,
      20888,
      28,
      808,
      14692,
      9654,
      33116
    ],
    "start_token": 357,
    "end_token": 380,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      28407,
      2393,
      3108,
      1262,
      4654,
      6978,
      329,
      1365,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Construct file path using joinpath for better readability"
  },
  {
    "line": 144,
    "text": "                high_price=row[\"high\"],",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Check if file exists to prevent file not found errors",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1029,
      62,
      20888,
      28,
      808,
      14692,
      8929,
      33116
    ],
    "start_token": 380,
    "end_token": 403,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      6822,
      611,
      2393,
      7160,
      284,
      2948,
      2393,
      407,
      1043,
      8563
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Check if file exists to prevent file not found errors"
  },
  {
    "line": 144,
    "text": "                high_price=row[\"high\"],",
    "annotation": "\u2705 Best Practice: Use pl.read_parquet for efficient file reading",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1029,
      62,
      20888,
      28,
      808,
      14692,
      8929,
      33116
    ],
    "start_token": 403,
    "end_token": 426,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      458,
      13,
      961,
      62,
      1845,
      21108,
      329,
      6942,
      2393,
      3555
    ],
    "label": "best_practice",
    "reason": "Use pl.read_parquet for efficient file reading"
  },
  {
    "line": 154,
    "text": "        return bars",
    "annotation": "\u2705 Best Practice: Filter DataFrame rows based on datetime range",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      9210
    ],
    "start_token": 426,
    "end_token": 435,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      25853,
      6060,
      19778,
      15274,
      1912,
      319,
      4818,
      8079,
      2837
    ],
    "label": "best_practice",
    "reason": "Filter DataFrame rows based on datetime range"
  },
  {
    "line": 154,
    "text": "        return bars",
    "annotation": "\u2705 Best Practice: Cast columns to appropriate data types for consistency",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      9210
    ],
    "start_token": 435,
    "end_token": 444,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5833,
      15180,
      284,
      5035,
      1366,
      3858,
      329,
      15794
    ],
    "label": "best_practice",
    "reason": "Cast columns to appropriate data types for consistency"
  },
  {
    "line": 164,
    "text": "        \"\"\"Load bar data as DataFrame\"\"\"",
    "annotation": "\u2705 Best Practice: Skip processing if DataFrame is empty",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227,
      8912,
      2318,
      1366,
      355,
      6060,
      19778,
      37811
    ],
    "start_token": 444,
    "end_token": 459,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      32214,
      7587,
      611,
      6060,
      19778,
      318,
      6565
    ],
    "label": "best_practice",
    "reason": "Skip processing if DataFrame is empty"
  },
  {
    "line": 168,
    "text": "        # Convert types",
    "annotation": "\u2705 Best Practice: Calculate close_0 for normalization",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      38240,
      3858
    ],
    "start_token": 459,
    "end_token": 469,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      27131,
      378,
      1969,
      62,
      15,
      329,
      3487,
      1634
    ],
    "label": "best_practice",
    "reason": "Calculate close_0 for normalization"
  },
  {
    "line": 169,
    "text": "        if isinstance(interval, str):",
    "annotation": "\u2705 Best Practice: Normalize columns by close_0",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      318,
      39098,
      7,
      3849,
      2100,
      11,
      965,
      2599
    ],
    "start_token": 469,
    "end_token": 485,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      14435,
      1096,
      15180,
      416,
      1969,
      62,
      15
    ],
    "label": "best_practice",
    "reason": "Normalize columns by close_0"
  },
  {
    "line": 177,
    "text": "            folder_path: Path = self.daily_path",
    "annotation": "\u2705 Best Practice: Create mask for rows with all zero values",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9483,
      62,
      6978,
      25,
      10644,
      796,
      2116,
      13,
      29468,
      62,
      6978
    ],
    "start_token": 485,
    "end_token": 507,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      13610,
      9335,
      329,
      15274,
      351,
      477,
      6632,
      3815
    ],
    "label": "best_practice",
    "reason": "Create mask for rows with all zero values"
  },
  {
    "line": 179,
    "text": "            folder_path = self.minute_path",
    "annotation": "\u2705 Best Practice: Replace zero rows with NaN for clarity",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      9483,
      62,
      6978,
      796,
      2116,
      13,
      11374,
      62,
      6978
    ],
    "start_token": 507,
    "end_token": 527,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      40177,
      6632,
      15274,
      351,
      11013,
      45,
      329,
      16287
    ],
    "label": "best_practice",
    "reason": "Replace zero rows with NaN for clarity"
  },
  {
    "line": 182,
    "text": "            return None",
    "annotation": "\u2705 Best Practice: Add vt_symbol column for identification",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      6045
    ],
    "start_token": 527,
    "end_token": 540,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      3060,
      410,
      83,
      62,
      1837,
      23650,
      5721,
      329,
      11795
    ],
    "label": "best_practice",
    "reason": "Add vt_symbol column for identification"
  },
  {
    "line": 182,
    "text": "            return None",
    "annotation": "\ud83e\udde0 ML Signal: Appending DataFrames to a list for later concatenation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      6045
    ],
    "start_token": 540,
    "end_token": 553,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2034,
      1571,
      6060,
      35439,
      284,
      257,
      1351,
      329,
      1568,
      1673,
      36686,
      341
    ],
    "label": "ml_signal",
    "reason": "Appending DataFrames to a list for later concatenation"
  },
  {
    "line": 188,
    "text": "            # Check if file exists",
    "annotation": "\u2705 Best Practice: Concatenate all DataFrames into a single result DataFrame",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      6822,
      611,
      2393,
      7160
    ],
    "start_token": 553,
    "end_token": 569,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      1482,
      9246,
      268,
      378,
      477,
      6060,
      35439,
      656,
      257,
      2060,
      1255,
      6060,
      19778
    ],
    "label": "best_practice",
    "reason": "Concatenate all DataFrames into a single result DataFrame"
  },
  {
    "line": 178,
    "text": "        elif interval == Interval.MINUTE:",
    "annotation": "\u2705 Best Practice: Use of type annotations for function parameters and return type",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1288,
      361,
      16654,
      6624,
      4225,
      2100,
      13,
      23678,
      37780,
      25
    ],
    "start_token": 569,
    "end_token": 586,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      2163,
      10007,
      290,
      1441,
      2099
    ],
    "label": "best_practice",
    "reason": "Use of type annotations for function parameters and return type"
  },
  {
    "line": 180,
    "text": "        else:",
    "annotation": "\u2705 Best Practice: Use of Path.joinpath for constructing file paths",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 586,
    "end_token": 595,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      10644,
      13,
      22179,
      6978,
      329,
      30580,
      2393,
      13532
    ],
    "label": "best_practice",
    "reason": "Use of Path.joinpath for constructing file paths"
  },
  {
    "line": 182,
    "text": "            return None",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of shelve can lead to data corruption if not properly closed",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      6045
    ],
    "start_token": 595,
    "end_token": 608,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      7497,
      303,
      460,
      1085,
      284,
      1366,
      9253,
      611,
      407,
      6105,
      4838
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of shelve can lead to data corruption if not properly closed"
  },
  {
    "line": 182,
    "text": "            return None",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of updating a shelve database with a dictionary",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      6045
    ],
    "start_token": 608,
    "end_token": 621,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      19698,
      257,
      7497,
      303,
      6831,
      351,
      257,
      22155
    ],
    "label": "ml_signal",
    "reason": "Pattern of updating a shelve database with a dictionary"
  },
  {
    "line": 186,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of lru_cache to cache function results for performance optimization",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 621,
    "end_token": 621,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      300,
      622,
      62,
      23870,
      284,
      12940,
      2163,
      2482,
      329,
      2854,
      23989
    ],
    "label": "best_practice",
    "reason": "Use of lru_cache to cache function results for performance optimization"
  },
  {
    "line": 189,
    "text": "            file_path: Path = folder_path.joinpath(f\"{vt_symbol}.parquet\")",
    "annotation": "\u2705 Best Practice: Use of type hinting for file_path improves code readability and maintainability.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2393,
      62,
      6978,
      25,
      10644,
      796,
      9483,
      62,
      6978,
      13,
      22179,
      6978,
      7,
      69,
      1,
      90,
      36540,
      62,
      1837,
      23650,
      27422,
      1845,
      21108,
      4943
    ],
    "start_token": 621,
    "end_token": 656,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      9254,
      278,
      329,
      2393,
      62,
      6978,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Use of type hinting for file_path improves code readability and maintainability."
  },
  {
    "line": 191,
    "text": "                logger.error(f\"File {file_path} does not exist\")",
    "annotation": "\u2705 Best Practice: Converting start and end to datetime ensures consistent data type usage.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      49706,
      13,
      18224,
      7,
      69,
      1,
      8979,
      1391,
      7753,
      62,
      6978,
      92,
      857,
      407,
      2152,
      4943
    ],
    "start_token": 656,
    "end_token": 687,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      35602,
      889,
      923,
      290,
      886,
      284,
      4818,
      8079,
      19047,
      6414,
      1366,
      2099,
      8748,
      13
    ],
    "label": "best_practice",
    "reason": "Converting start and end to datetime ensures consistent data type usage."
  },
  {
    "line": 194,
    "text": "            # Open file",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Using shelve without specifying a protocol can lead to compatibility issues.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      4946,
      2393
    ],
    "start_token": 687,
    "end_token": 701,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      8554,
      7497,
      303,
      1231,
      31577,
      257,
      8435,
      460,
      1085,
      284,
      17764,
      2428,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Using shelve without specifying a protocol can lead to compatibility issues."
  },
  {
    "line": 196,
    "text": "",
    "annotation": "\u2705 Best Practice: Explicitly defining the type of keys improves code readability.",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 701,
    "end_token": 701,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11884,
      306,
      16215,
      262,
      2099,
      286,
      8251,
      19575,
      2438,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Explicitly defining the type of keys improves code readability."
  },
  {
    "line": 198,
    "text": "            df = df.filter((pl.col(\"datetime\") >= start) & (pl.col(\"datetime\") <= end))",
    "annotation": "\u2705 Best Practice: Sorting keys ensures consistent order of processing.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      796,
      47764,
      13,
      24455,
      19510,
      489,
      13,
      4033,
      7203,
      19608,
      8079,
      4943,
      18189,
      923,
      8,
      1222,
      357,
      489,
      13,
      4033,
      7203,
      19608,
      8079,
      4943,
      19841,
      886,
      4008
    ],
    "start_token": 701,
    "end_token": 740,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      311,
      24707,
      8251,
      19047,
      6414,
      1502,
      286,
      7587,
      13
    ],
    "label": "best_practice",
    "reason": "Sorting keys ensures consistent order of processing."
  },
  {
    "line": 200,
    "text": "            # Specify data types",
    "annotation": "\u2705 Best Practice: Using a dictionary to store index components provides efficient data retrieval.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      18291,
      1958,
      1366,
      3858
    ],
    "start_token": 740,
    "end_token": 756,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      257,
      22155,
      284,
      3650,
      6376,
      6805,
      3769,
      6942,
      1366,
      45069,
      13
    ],
    "label": "best_practice",
    "reason": "Using a dictionary to store index components provides efficient data retrieval."
  },
  {
    "line": 201,
    "text": "            df = df.with_columns(",
    "annotation": "\u2705 Best Practice: Explicitly defining the type of dt improves code readability.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      47764,
      796,
      47764,
      13,
      4480,
      62,
      28665,
      82,
      7
    ],
    "start_token": 756,
    "end_token": 776,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11884,
      306,
      16215,
      262,
      2099,
      286,
      288,
      83,
      19575,
      2438,
      1100,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Explicitly defining the type of dt improves code readability."
  },
  {
    "line": 205,
    "text": "                pl.col(\"close\").cast(pl.Float32),",
    "annotation": "\u2705 Best Practice: Using a range check for dates ensures only relevant data is processed.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      458,
      13,
      4033,
      7203,
      19836,
      11074,
      2701,
      7,
      489,
      13,
      43879,
      2624,
      828
    ],
    "start_token": 776,
    "end_token": 804,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      257,
      2837,
      2198,
      329,
      9667,
      19047,
      691,
      5981,
      1366,
      318,
      13686,
      13
    ],
    "label": "best_practice",
    "reason": "Using a range check for dates ensures only relevant data is processed."
  },
  {
    "line": 208,
    "text": "                pl.col(\"open_interest\").cast(pl.Float32),",
    "annotation": "\u2705 Best Practice: Type hinting for the return type improves code readability and maintainability.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      458,
      13,
      4033,
      7203,
      9654,
      62,
      9446,
      11074,
      2701,
      7,
      489,
      13,
      43879,
      2624,
      828
    ],
    "start_token": 804,
    "end_token": 834,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      262,
      1441,
      2099,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Type hinting for the return type improves code readability and maintainability."
  },
  {
    "line": 214,
    "text": "                continue",
    "annotation": "\u2705 Best Practice: Using a set to collect symbols ensures uniqueness and prevents duplicates.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2555
    ],
    "start_token": 834,
    "end_token": 850,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      257,
      900,
      284,
      2824,
      14354,
      19047,
      49650,
      290,
      15174,
      14184,
      16856,
      13
    ],
    "label": "best_practice",
    "reason": "Using a set to collect symbols ensures uniqueness and prevents duplicates."
  },
  {
    "line": 217,
    "text": "            close_0: float = df.select(pl.col(\"close\")).item(0, 0)",
    "annotation": "\u2705 Best Practice: Converting the set back to a list before returning to match the return type hint.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1969,
      62,
      15,
      25,
      12178,
      796,
      47764,
      13,
      19738,
      7,
      489,
      13,
      4033,
      7203,
      19836,
      4943,
      737,
      9186,
      7,
      15,
      11,
      657,
      8
    ],
    "start_token": 850,
    "end_token": 884,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      35602,
      889,
      262,
      900,
      736,
      284,
      257,
      1351,
      878,
      8024,
      284,
      2872,
      262,
      1441,
      2099,
      9254,
      13
    ],
    "label": "best_practice",
    "reason": "Converting the set back to a list before returning to match the return type hint."
  },
  {
    "line": 224,
    "text": "            )",
    "annotation": "\u2705 Best Practice: Type hinting for index_components improves code readability and maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 884,
    "end_token": 896,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      6376,
      62,
      5589,
      3906,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting for index_components improves code readability and maintainability"
  },
  {
    "line": 230,
    "text": "",
    "annotation": "\u2705 Best Practice: Sorting trading_dates ensures consistent processing order",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 896,
    "end_token": 896,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      311,
      24707,
      7313,
      62,
      19581,
      19047,
      6414,
      7587,
      1502
    ],
    "label": "best_practice",
    "reason": "Sorting trading_dates ensures consistent processing order"
  },
  {
    "line": 232,
    "text": "                [pl.when(mask).then(float(\"nan\")).otherwise(pl.col(col)).alias(col) for col in numeric_columns]",
    "annotation": "\u2705 Best Practice: Type hinting for component_filters improves code readability and maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      685,
      489,
      13,
      12518,
      7,
      27932,
      737,
      8524,
      7,
      22468,
      7203,
      12647,
      4943,
      737,
      847,
      3083,
      7,
      489,
      13,
      4033,
      7,
      4033,
      29720,
      26011,
      7,
      4033,
      8,
      329,
      951,
      287,
      35575,
      62,
      28665,
      82,
      60
    ],
    "start_token": 896,
    "end_token": 946,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      7515,
      62,
      10379,
      1010,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting for component_filters improves code readability and maintainability"
  },
  {
    "line": 234,
    "text": "",
    "annotation": "\u2705 Best Practice: Type hinting for all_symbols improves code readability and maintainability",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 946,
    "end_token": 946,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      477,
      62,
      1837,
      2022,
      10220,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting for all_symbols improves code readability and maintainability"
  },
  {
    "line": 237,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of update method on set to collect unique symbols",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 946,
    "end_token": 946,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      4296,
      2446,
      319,
      900,
      284,
      2824,
      3748,
      14354
    ],
    "label": "ml_signal",
    "reason": "Usage of update method on set to collect unique symbols"
  },
  {
    "line": 240,
    "text": "",
    "annotation": "\u2705 Best Practice: Type hinting for period_start and period_end improves code readability and maintainability",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 946,
    "end_token": 946,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      2278,
      62,
      9688,
      290,
      2278,
      62,
      437,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting for period_start and period_end improves code readability and maintainability"
  },
  {
    "line": 250,
    "text": "        \"\"\"Save index component data\"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Appending tuples to lists in a dictionary to track periods",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227,
      16928,
      6376,
      7515,
      1366,
      37811
    ],
    "start_token": 946,
    "end_token": 959,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2034,
      1571,
      12777,
      2374,
      284,
      8341,
      287,
      257,
      22155,
      284,
      2610,
      9574
    ],
    "label": "ml_signal",
    "reason": "Appending tuples to lists in a dictionary to track periods"
  },
  {
    "line": 259,
    "text": "        index_symbol: str,",
    "annotation": "\u2705 Best Practice: Initialize contracts as a dictionary to store contract settings.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6376,
      62,
      1837,
      23650,
      25,
      965,
      11
    ],
    "start_token": 959,
    "end_token": 973,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      20768,
      1096,
      8592,
      355,
      257,
      22155,
      284,
      3650,
      2775,
      6460,
      13
    ],
    "label": "best_practice",
    "reason": "Initialize contracts as a dictionary to store contract settings."
  },
  {
    "line": 261,
    "text": "        end: datetime | str",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential file existence check race condition.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      886,
      25,
      4818,
      8079,
      930,
      965
    ],
    "start_token": 973,
    "end_token": 986,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2393,
      6224,
      2198,
      3234,
      4006,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential file existence check race condition."
  },
  {
    "line": 263,
    "text": "        \"\"\"Load index component data as DataFrame\"\"\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): File is opened without exception handling.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227,
      8912,
      6376,
      7515,
      1366,
      355,
      6060,
      19778,
      37811
    ],
    "start_token": 986,
    "end_token": 1002,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      9220,
      318,
      4721,
      1231,
      6631,
      9041,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "File is opened without exception handling."
  },
  {
    "line": 263,
    "text": "        \"\"\"Load index component data as DataFrame\"\"\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): json.load can raise exceptions if the file content is not valid JSON.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227,
      8912,
      6376,
      7515,
      1366,
      355,
      6060,
      19778,
      37811
    ],
    "start_token": 1002,
    "end_token": 1018,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      33918,
      13,
      2220,
      460,
      5298,
      13269,
      611,
      262,
      2393,
      2695,
      318,
      407,
      4938,
      19449,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "json.load can raise exceptions if the file content is not valid JSON."
  },
  {
    "line": 269,
    "text": "        with shelve.open(str(file_path)) as db:",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of updating a dictionary with new data.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      351,
      7497,
      303,
      13,
      9654,
      7,
      2536,
      7,
      7753,
      62,
      6978,
      4008,
      355,
      20613,
      25
    ],
    "start_token": 1018,
    "end_token": 1040,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      19698,
      257,
      22155,
      351,
      649,
      1366,
      13
    ],
    "label": "ml_signal",
    "reason": "Pattern of updating a dictionary with new data."
  },
  {
    "line": 276,
    "text": "                if start <= dt <= end:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): File is opened without exception handling.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      923,
      19841,
      288,
      83,
      19841,
      886,
      25
    ],
    "start_token": 1040,
    "end_token": 1063,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      9220,
      318,
      4721,
      1231,
      6631,
      9041,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "File is opened without exception handling."
  },
  {
    "line": 276,
    "text": "                if start <= dt <= end:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): json.dump can raise exceptions if the data is not serializable.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      923,
      19841,
      288,
      83,
      19841,
      886,
      25
    ],
    "start_token": 1063,
    "end_token": 1086,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      33918,
      13,
      39455,
      460,
      5298,
      13269,
      611,
      262,
      1366,
      318,
      407,
      11389,
      13821,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "json.dump can raise exceptions if the data is not serializable."
  },
  {
    "line": 276,
    "text": "                if start <= dt <= end:",
    "annotation": "\u2705 Best Practice: Method name contains a typo, should be 'load_contract_settings'",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      923,
      19841,
      288,
      83,
      19841,
      886,
      25
    ],
    "start_token": 1086,
    "end_token": 1109,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11789,
      1438,
      4909,
      257,
      46517,
      11,
      815,
      307,
      705,
      2220,
      62,
      28484,
      62,
      33692,
      6
    ],
    "label": "best_practice",
    "reason": "Method name contains a typo, should be 'load_contract_settings'"
  },
  {
    "line": 280,
    "text": "",
    "annotation": "\u2705 Best Practice: Check if the path exists before opening the file",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1109,
    "end_token": 1109,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      611,
      262,
      3108,
      7160,
      878,
      4756,
      262,
      2393
    ],
    "label": "best_practice",
    "reason": "Check if the path exists before opening the file"
  },
  {
    "line": 282,
    "text": "        self,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): No error handling for file operations",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      11
    ],
    "start_token": 1109,
    "end_token": 1118,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1400,
      4049,
      9041,
      329,
      2393,
      4560
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "No error handling for file operations"
  },
  {
    "line": 284,
    "text": "        start: datetime | str,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): No error handling for JSON parsing",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      923,
      25,
      4818,
      8079,
      930,
      965,
      11
    ],
    "start_token": 1118,
    "end_token": 1132,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      1400,
      4049,
      9041,
      329,
      19449,
      32096
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "No error handling for JSON parsing"
  },
  {
    "line": 283,
    "text": "        index_symbol: str,",
    "annotation": "\u2705 Best Practice: Type hinting for function parameters and return type improves code readability and maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6376,
      62,
      1837,
      23650,
      25,
      965,
      11
    ],
    "start_token": 1132,
    "end_token": 1146,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      2163,
      10007,
      290,
      1441,
      2099,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting for function parameters and return type improves code readability and maintainability"
  },
  {
    "line": 286,
    "text": "    ) -> list[str]:",
    "annotation": "\u2705 Best Practice: Using Path.joinpath for file path operations improves code readability and cross-platform compatibility",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1267,
      4613,
      1351,
      58,
      2536,
      5974
    ],
    "start_token": 1146,
    "end_token": 1155,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      10644,
      13,
      22179,
      6978,
      329,
      2393,
      3108,
      4560,
      19575,
      2438,
      1100,
      1799,
      290,
      3272,
      12,
      24254,
      17764
    ],
    "label": "best_practice",
    "reason": "Using Path.joinpath for file path operations improves code readability and cross-platform compatibility"
  },
  {
    "line": 288,
    "text": "        index_components: dict[datetime, list[str]] = self.load_component_data(",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Ensure that the file path is validated or sanitized to prevent path traversal vulnerabilities",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6376,
      62,
      5589,
      3906,
      25,
      8633,
      58,
      19608,
      8079,
      11,
      1351,
      58,
      2536,
      11907,
      796,
      2116,
      13,
      2220,
      62,
      42895,
      62,
      7890,
      7
    ],
    "start_token": 1155,
    "end_token": 1185,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      48987,
      326,
      262,
      2393,
      3108,
      318,
      31031,
      393,
      5336,
      36951,
      284,
      2948,
      3108,
      33038,
      282,
      23805
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Ensure that the file path is validated or sanitized to prevent path traversal vulnerabilities"
  },
  {
    "line": 290,
    "text": "            start,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Ensure that the dataset object is trusted or sanitized to prevent pickle injection vulnerabilities",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      923,
      11
    ],
    "start_token": 1185,
    "end_token": 1198,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      48987,
      326,
      262,
      27039,
      2134,
      318,
      13467,
      393,
      5336,
      36951,
      284,
      2948,
      2298,
      293,
      16954,
      23805
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Ensure that the dataset object is trusted or sanitized to prevent pickle injection vulnerabilities"
  },
  {
    "line": 290,
    "text": "            start,",
    "annotation": "\u2705 Best Practice: Use of type hinting for function parameters and return type improves code readability and maintainability.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      923,
      11
    ],
    "start_token": 1198,
    "end_token": 1211,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      9254,
      278,
      329,
      2163,
      10007,
      290,
      1441,
      2099,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Use of type hinting for function parameters and return type improves code readability and maintainability."
  },
  {
    "line": 292,
    "text": "        )",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential path traversal if 'name' is not properly validated or sanitized.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 1211,
    "end_token": 1219,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      3108,
      33038,
      282,
      611,
      705,
      3672,
      6,
      318,
      407,
      6105,
      31031,
      393,
      5336,
      36951,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential path traversal if 'name' is not properly validated or sanitized."
  },
  {
    "line": 294,
    "text": "        component_symbols: set[str] = set()",
    "annotation": "\ud83e\udde0 ML Signal: Logging error messages can be used to train models to recognize error patterns.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      7515,
      62,
      1837,
      2022,
      10220,
      25,
      900,
      58,
      2536,
      60,
      796,
      900,
      3419
    ],
    "start_token": 1219,
    "end_token": 1239,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      4049,
      6218,
      460,
      307,
      973,
      284,
      4512,
      4981,
      284,
      7564,
      4049,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "Logging error messages can be used to train models to recognize error patterns."
  },
  {
    "line": 298,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Unpickling data from a file can lead to arbitrary code execution if the file is tampered with.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 1239,
    "end_token": 1239,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      791,
      27729,
      1359,
      1366,
      422,
      257,
      2393,
      460,
      1085,
      284,
      14977,
      2438,
      9706,
      611,
      262,
      2393,
      318,
      21885,
      13653,
      351,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Unpickling data from a file can lead to arbitrary code execution if the file is tampered with."
  },
  {
    "line": 299,
    "text": "        return list(component_symbols)",
    "annotation": "\u2705 Best Practice: Use of type hint for file_path improves code readability and maintainability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      1351,
      7,
      42895,
      62,
      1837,
      2022,
      10220,
      8
    ],
    "start_token": 1239,
    "end_token": 1255,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      9254,
      329,
      2393,
      62,
      6978,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of type hint for file_path improves code readability and maintainability"
  },
  {
    "line": 301,
    "text": "    def load_component_filters(",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for path traversal if 'name' is not properly validated",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      3440,
      62,
      42895,
      62,
      10379,
      1010,
      7
    ],
    "start_token": 1255,
    "end_token": 1266,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      3108,
      33038,
      282,
      611,
      705,
      3672,
      6,
      318,
      407,
      6105,
      31031
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for path traversal if 'name' is not properly validated"
  },
  {
    "line": 303,
    "text": "        index_symbol: str,",
    "annotation": "\ud83e\udde0 ML Signal: Logging error messages can be used to identify common failure points",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6376,
      62,
      1837,
      23650,
      25,
      965,
      11
    ],
    "start_token": 1266,
    "end_token": 1280,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      4049,
      6218,
      460,
      307,
      973,
      284,
      5911,
      2219,
      5287,
      2173
    ],
    "label": "ml_signal",
    "reason": "Logging error messages can be used to identify common failure points"
  },
  {
    "line": 306,
    "text": "    ) -> dict[str, list[tuple[datetime, datetime]]]:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Directly deleting files without backup or confirmation",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1267,
      4613,
      8633,
      58,
      2536,
      11,
      1351,
      58,
      83,
      29291,
      58,
      19608,
      8079,
      11,
      4818,
      8079,
      11907,
      5974
    ],
    "start_token": 1280,
    "end_token": 1301,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      4128,
      306,
      34817,
      3696,
      1231,
      11559,
      393,
      12641
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Directly deleting files without backup or confirmation"
  },
  {
    "line": 305,
    "text": "        end: datetime | str",
    "annotation": "\u2705 Best Practice: Type hinting improves code readability and maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      886,
      25,
      4818,
      8079,
      930,
      965
    ],
    "start_token": 1301,
    "end_token": 1314,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting improves code readability and maintainability"
  },
  {
    "line": 308,
    "text": "        index_components: dict[datetime, list[str]] = self.load_component_data(",
    "annotation": "\ud83e\udde0 ML Signal: Use of list comprehension to process file paths",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6376,
      62,
      5589,
      3906,
      25,
      8633,
      58,
      19608,
      8079,
      11,
      1351,
      58,
      2536,
      11907,
      796,
      2116,
      13,
      2220,
      62,
      42895,
      62,
      7890,
      7
    ],
    "start_token": 1314,
    "end_token": 1344,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      1351,
      35915,
      284,
      1429,
      2393,
      13532
    ],
    "label": "ml_signal",
    "reason": "Use of list comprehension to process file paths"
  },
  {
    "line": 309,
    "text": "            index_symbol,",
    "annotation": "\ud83e\udde0 ML Signal: Use of pathlib for file operations",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6376,
      62,
      1837,
      23650,
      11
    ],
    "start_token": 1344,
    "end_token": 1360,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      3108,
      8019,
      329,
      2393,
      4560
    ],
    "label": "ml_signal",
    "reason": "Use of pathlib for file operations"
  },
  {
    "line": 310,
    "text": "            start,",
    "annotation": "\u2705 Best Practice: Use of type annotations for function parameters and return type improves code readability and maintainability.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      923,
      11
    ],
    "start_token": 1360,
    "end_token": 1373,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      37647,
      329,
      2163,
      10007,
      290,
      1441,
      2099,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Use of type annotations for function parameters and return type improves code readability and maintainability."
  },
  {
    "line": 312,
    "text": "        )",
    "annotation": "\u2705 Best Practice: Using Path.joinpath is preferred over string concatenation for file paths.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1267
    ],
    "start_token": 1373,
    "end_token": 1381,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      10644,
      13,
      22179,
      6978,
      318,
      9871,
      625,
      4731,
      1673,
      36686,
      341,
      329,
      2393,
      13532,
      13
    ],
    "label": "best_practice",
    "reason": "Using Path.joinpath is preferred over string concatenation for file paths."
  },
  {
    "line": 314,
    "text": "        # Get all trading dates and sort",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Pickle is not secure against erroneous or maliciously constructed data. Ensure the source of the model is trusted.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      3497,
      477,
      7313,
      9667,
      290,
      3297
    ],
    "start_token": 1381,
    "end_token": 1395,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      12346,
      293,
      318,
      407,
      5713,
      1028,
      35366,
      393,
      17412,
      306,
      12006,
      1366,
      13,
      48987,
      262,
      2723,
      286,
      262,
      2746,
      318,
      13467,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Pickle is not secure against erroneous or maliciously constructed data. Ensure the source of the model is trusted."
  },
  {
    "line": 315,
    "text": "        trading_dates: list[datetime] = sorted(index_components.keys())",
    "annotation": "\u2705 Best Practice: Use of type hinting for the variable 'file_path' improves code readability and maintainability.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      7313,
      62,
      19581,
      25,
      1351,
      58,
      19608,
      8079,
      60,
      796,
      23243,
      7,
      9630,
      62,
      5589,
      3906,
      13,
      13083,
      28955
    ],
    "start_token": 1395,
    "end_token": 1421,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2099,
      9254,
      278,
      329,
      262,
      7885,
      705,
      7753,
      62,
      6978,
      6,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Use of type hinting for the variable 'file_path' improves code readability and maintainability."
  },
  {
    "line": 318,
    "text": "        component_filters: dict[str, list[tuple[datetime, datetime]]] = defaultdict(list)",
    "annotation": "\ud83e\udde0 ML Signal: Logging an error when a model file does not exist can be used to track model loading issues.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      7515,
      62,
      10379,
      1010,
      25,
      8633,
      58,
      2536,
      11,
      1351,
      58,
      83,
      29291,
      58,
      19608,
      8079,
      11,
      4818,
      8079,
      11907,
      60,
      796,
      4277,
      11600,
      7,
      4868,
      8
    ],
    "start_token": 1421,
    "end_token": 1455,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      281,
      4049,
      618,
      257,
      2746,
      2393,
      857,
      407,
      2152,
      460,
      307,
      973,
      284,
      2610,
      2746,
      11046,
      2428,
      13
    ],
    "label": "ml_signal",
    "reason": "Logging an error when a model file does not exist can be used to track model loading issues."
  },
  {
    "line": 321,
    "text": "        all_symbols: set[str] = set()",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Using pickle for loading data can lead to arbitrary code execution if the file is tampered with.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      477,
      62,
      1837,
      2022,
      10220,
      25,
      900,
      58,
      2536,
      60,
      796,
      900,
      3419
    ],
    "start_token": 1455,
    "end_token": 1475,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      8554,
      2298,
      293,
      329,
      11046,
      1366,
      460,
      1085,
      284,
      14977,
      2438,
      9706,
      611,
      262,
      2393,
      318,
      21885,
      13653,
      351,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Using pickle for loading data can lead to arbitrary code execution if the file is tampered with."
  },
  {
    "line": 324,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Function to remove a model file, indicating model lifecycle management",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1475,
    "end_token": 1475,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      15553,
      284,
      4781,
      257,
      2746,
      2393,
      11,
      12739,
      2746,
      3868,
      47510,
      4542
    ],
    "label": "ml_signal",
    "reason": "Function to remove a model file, indicating model lifecycle management"
  },
  {
    "line": 326,
    "text": "        for vt_symbol in all_symbols:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for path traversal if `name` is not validated",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      329,
      410,
      83,
      62,
      1837,
      23650,
      287,
      477,
      62,
      1837,
      2022,
      10220,
      25
    ],
    "start_token": 1475,
    "end_token": 1495,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      3108,
      33038,
      282,
      611,
      4600,
      3672,
      63,
      318,
      407,
      31031
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for path traversal if `name` is not validated"
  },
  {
    "line": 328,
    "text": "            period_end: datetime | None = None",
    "annotation": "\ud83e\udde0 ML Signal: Logging an error when a model file does not exist",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2278,
      62,
      437,
      25,
      4818,
      8079,
      930,
      6045,
      796,
      6045
    ],
    "start_token": 1495,
    "end_token": 1516,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      281,
      4049,
      618,
      257,
      2746,
      2393,
      857,
      407,
      2152
    ],
    "label": "ml_signal",
    "reason": "Logging an error when a model file does not exist"
  },
  {
    "line": 331,
    "text": "            for trading_date in trading_dates:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Deleting a file without backup or confirmation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      329,
      7313,
      62,
      4475,
      287,
      7313,
      62,
      19581,
      25
    ],
    "start_token": 1516,
    "end_token": 1536,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      42226,
      889,
      257,
      2393,
      1231,
      11559,
      393,
      12641
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Deleting a file without backup or confirmation"
  },
  {
    "line": 330,
    "text": "            # Iterate through each trading day to identify continuous holding periods",
    "annotation": "\u2705 Best Practice: Type hinting for the return value improves code readability and maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      40806,
      378,
      832,
      1123,
      7313,
      1110,
      284,
      5911,
      12948,
      4769,
      9574
    ],
    "start_token": 1536,
    "end_token": 1559,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      262,
      1441,
      1988,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting for the return value improves code readability and maintainability"
  },
  {
    "line": 333,
    "text": "                    if period_start is None:",
    "annotation": "\ud83e\udde0 ML Signal: Usage of file extensions like .pkl can indicate model serialization/deserialization",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      2278,
      62,
      9688,
      318,
      6045,
      25
    ],
    "start_token": 1559,
    "end_token": 1585,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2393,
      18366,
      588,
      764,
      79,
      41582,
      460,
      7603,
      2746,
      11389,
      1634,
      14,
      8906,
      48499,
      1634
    ],
    "label": "ml_signal",
    "reason": "Usage of file extensions like .pkl can indicate model serialization/deserialization"
  },
  {
    "line": 334,
    "text": "                        period_start = trading_date",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Reliance on file extensions for model identification can be error-prone if files are misnamed",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2278,
      62,
      9688,
      796,
      7313,
      62,
      4475
    ],
    "start_token": 1585,
    "end_token": 1615,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      4718,
      3610,
      319,
      2393,
      18366,
      329,
      2746,
      11795,
      460,
      307,
      4049,
      12,
      46330,
      611,
      3696,
      389,
      2984,
      13190
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Reliance on file extensions for model identification can be error-prone if files are misnamed"
  },
  {
    "line": 333,
    "text": "                    if period_start is None:",
    "annotation": "\u2705 Best Practice: Include a docstring to describe the method's purpose",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      2278,
      62,
      9688,
      318,
      6045,
      25
    ],
    "start_token": 1615,
    "end_token": 1641,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      40348,
      257,
      2205,
      8841,
      284,
      6901,
      262,
      2446,
      338,
      4007
    ],
    "label": "best_practice",
    "reason": "Include a docstring to describe the method's purpose"
  },
  {
    "line": 336,
    "text": "                    period_end = trading_date",
    "annotation": "\u2705 Best Practice: Use type annotations for function parameters and return type",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2278,
      62,
      437,
      796,
      7313,
      62,
      4475
    ],
    "start_token": 1641,
    "end_token": 1667,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      2099,
      37647,
      329,
      2163,
      10007,
      290,
      1441,
      2099
    ],
    "label": "best_practice",
    "reason": "Use type annotations for function parameters and return type"
  },
  {
    "line": 338,
    "text": "                    if period_start and period_end:",
    "annotation": "\ud83e\udde0 ML Signal: Usage of file paths and file operations",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      2278,
      62,
      9688,
      290,
      2278,
      62,
      437,
      25
    ],
    "start_token": 1667,
    "end_token": 1695,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2393,
      13532,
      290,
      2393,
      4560
    ],
    "label": "ml_signal",
    "reason": "Usage of file paths and file operations"
  },
  {
    "line": 339,
    "text": "                        component_filters[vt_symbol].append((period_start, period_end))",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential risk of path traversal if 'name' is not validated",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      7515,
      62,
      10379,
      1010,
      58,
      36540,
      62,
      1837,
      23650,
      4083,
      33295,
      19510,
      41007,
      62,
      9688,
      11,
      2278,
      62,
      437,
      4008
    ],
    "start_token": 1695,
    "end_token": 1738,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      2526,
      286,
      3108,
      33038,
      282,
      611,
      705,
      3672,
      6,
      318,
      407,
      31031
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential risk of path traversal if 'name' is not validated"
  },
  {
    "line": 341,
    "text": "                        period_end = None",
    "annotation": "\ud83e\udde0 ML Signal: Usage of specific file format (parquet) for data storage",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2278,
      62,
      437,
      796,
      6045
    ],
    "start_token": 1738,
    "end_token": 1766,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2176,
      2393,
      5794,
      357,
      1845,
      21108,
      8,
      329,
      1366,
      6143
    ],
    "label": "ml_signal",
    "reason": "Usage of specific file format (parquet) for data storage"
  },
  {
    "line": 337,
    "text": "                else:",
    "annotation": "\u2705 Best Practice: Type hinting for function parameters and return type improves code readability and maintainability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 1766,
    "end_token": 1783,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      2163,
      10007,
      290,
      1441,
      2099,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting for function parameters and return type improves code readability and maintainability"
  },
  {
    "line": 340,
    "text": "                        period_start = None",
    "annotation": "\u2705 Best Practice: Using Path.joinpath for file path construction is more readable and less error-prone than string concatenation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2278,
      62,
      9688,
      796,
      6045
    ],
    "start_token": 1783,
    "end_token": 1811,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      10644,
      13,
      22179,
      6978,
      329,
      2393,
      3108,
      5103,
      318,
      517,
      31744,
      290,
      1342,
      4049,
      12,
      46330,
      621,
      4731,
      1673,
      36686,
      341
    ],
    "label": "best_practice",
    "reason": "Using Path.joinpath for file path construction is more readable and less error-prone than string concatenation"
  },
  {
    "line": 342,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Logging file paths can expose sensitive information in logs",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1811,
    "end_token": 1811,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5972,
      2667,
      2393,
      13532,
      460,
      15651,
      8564,
      1321,
      287,
      17259
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Logging file paths can expose sensitive information in logs"
  },
  {
    "line": 346,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of pl.read_parquet indicates interaction with parquet files, which can be a feature for ML models",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1811,
    "end_token": 1811,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      458,
      13,
      961,
      62,
      1845,
      21108,
      9217,
      10375,
      351,
      1582,
      21108,
      3696,
      11,
      543,
      460,
      307,
      257,
      3895,
      329,
      10373,
      4981
    ],
    "label": "ml_signal",
    "reason": "Usage of pl.read_parquet indicates interaction with parquet files, which can be a feature for ML models"
  },
  {
    "line": 346,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Use of file path operations to manage resources",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1811,
    "end_token": 1811,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2393,
      3108,
      4560,
      284,
      6687,
      4133
    ],
    "label": "ml_signal",
    "reason": "Use of file path operations to manage resources"
  },
  {
    "line": 348,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for path traversal if 'name' is not validated",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 1811,
    "end_token": 1811,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      3108,
      33038,
      282,
      611,
      705,
      3672,
      6,
      318,
      407,
      31031
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for path traversal if 'name' is not validated"
  },
  {
    "line": 350,
    "text": "        self,",
    "annotation": "\ud83e\udde0 ML Signal: Logging error messages for non-existent files",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      11
    ],
    "start_token": 1811,
    "end_token": 1820,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      4049,
      6218,
      329,
      1729,
      12,
      32786,
      3696
    ],
    "label": "ml_signal",
    "reason": "Logging error messages for non-existent files"
  },
  {
    "line": 353,
    "text": "        short_rate: float,",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Deleting files without backup or confirmation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1790,
      62,
      4873,
      25,
      12178,
      11
    ],
    "start_token": 1820,
    "end_token": 1833,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      42226,
      889,
      3696,
      1231,
      11559,
      393,
      12641
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Deleting files without backup or confirmation"
  },
  {
    "line": 352,
    "text": "        long_rate: float,",
    "annotation": "\u2705 Best Practice: Type hinting for the return type improves code readability and maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      890,
      62,
      4873,
      25,
      12178,
      11
    ],
    "start_token": 1833,
    "end_token": 1846,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      262,
      1441,
      2099,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting for the return type improves code readability and maintainability"
  },
  {
    "line": 354,
    "text": "        size: float,",
    "annotation": "\ud83e\udde0 ML Signal: Usage of file extensions to filter files can indicate data processing patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2546,
      25,
      12178,
      11
    ],
    "start_token": 1846,
    "end_token": 1857,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2393,
      18366,
      284,
      8106,
      3696,
      460,
      7603,
      1366,
      7587,
      7572
    ],
    "label": "ml_signal",
    "reason": "Usage of file extensions to filter files can indicate data processing patterns"
  }
]