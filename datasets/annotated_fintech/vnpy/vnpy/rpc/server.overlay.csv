annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
‚úÖ Best Practice: Use of collections.abc.Callable for type hinting improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5765, 286, 17268, 13, 39305, 13, 14134, 540, 329, 2099, 9254, 278, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",0.5,7,best_practice,4,Use of collections.abc.Callable for type hinting improves code readability and maintainability.,,0,from collections.abc import Callable,"[6738, 17268, 13, 39305, 1330, 4889, 540]"
üß† ML Signal: Importing specific constants from a module indicates usage patterns and dependencies.,"[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 38491, 422, 257, 8265, 9217, 8748, 7572, 290, 20086, 13]",0.5,7,ml_signal,7,Importing specific constants from a module indicates usage patterns and dependencies.,,7,,[]
‚úÖ Best Practice: Consider adding a class docstring to describe the purpose and usage of the RpcServer class.,"[26486, 227, 6705, 19939, 25, 12642, 4375, 257, 1398, 2205, 8841, 284, 6901, 262, 4007, 290, 8748, 286, 262, 371, 14751, 10697, 1398, 13]",1.0,7,best_practice,9,Consider adding a class docstring to describe the purpose and usage of the RpcServer class.,,7,,[]
‚úÖ Best Practice: Use of type annotations for better code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 1365, 2438, 1100, 1799, 290, 5529, 1799]",1.0,7,best_practice,13,Use of type annotations for better code readability and maintainability,,7,,[]
‚úÖ Best Practice: Use of type annotations for better code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 1365, 2438, 1100, 1799, 290, 5529, 1799]",1.0,15,best_practice,15,Use of type annotations for better code readability and maintainability,,7,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚úÖ Best Practice: Use of type annotations for better code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 1365, 2438, 1100, 1799, 290, 5529, 1799]",1.0,23,best_practice,17,Use of type annotations for better code readability and maintainability,,15,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚úÖ Best Practice: Use of type annotations for better code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 1365, 2438, 1100, 1799, 290, 5529, 1799]",1.0,44,best_practice,19,Use of type annotations for better code readability and maintainability,,23,"        self._functions: dict[str, Callable] = {}","[220, 220, 220, 220, 220, 220, 220, 2116, 13557, 12543, 2733, 25, 8633, 58, 2536, 11, 4889, 540, 60, 796, 23884]"
‚úÖ Best Practice: Use of type annotations for better code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 1365, 2438, 1100, 1799, 290, 5529, 1799]",1.0,57,best_practice,21,Use of type annotations for better code readability and maintainability,,44,        # Zmq port related,"[220, 220, 220, 220, 220, 220, 220, 1303, 1168, 76, 80, 2493, 3519]"
‚úÖ Best Practice: Use of type annotations for better code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 1365, 2438, 1100, 1799, 290, 5529, 1799]",1.0,57,best_practice,23,Use of type annotations for better code readability and maintainability,,57,,[]
‚úÖ Best Practice: Use of type annotations for better code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 1365, 2438, 1100, 1799, 290, 5529, 1799]",1.0,73,best_practice,24,Use of type annotations for better code readability and maintainability,,57,        # Reply socket (Request‚Äìreply pattern),"[220, 220, 220, 220, 220, 220, 220, 1303, 14883, 17802, 357, 18453, 1906, 47768, 3912, 8]"
‚úÖ Best Practice: Use of type annotations for better code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 37647, 329, 1365, 2438, 1100, 1799, 290, 5529, 1799]",1.0,92,best_practice,27,Use of type annotations for better code readability and maintainability,,73,        # Publish socket (Publish‚Äìsubscribe pattern),"[220, 220, 220, 220, 220, 220, 220, 1303, 8525, 1836, 17802, 357, 14876, 1836, 1906, 7266, 12522, 3912, 8]"
‚úÖ Best Practice: Method should have a descriptive docstring explaining its purpose,"[26486, 227, 6705, 19939, 25, 11789, 815, 423, 257, 35644, 2205, 8841, 11170, 663, 4007]",1.0,105,best_practice,21,Method should have a descriptive docstring explaining its purpose,,92,        # Zmq port related,"[220, 220, 220, 220, 220, 220, 220, 1303, 1168, 76, 80, 2493, 3519]"
üß† ML Signal: Method returning a boolean value indicating state,"[8582, 100, 254, 10373, 26484, 25, 11789, 8024, 257, 25131, 1988, 12739, 1181]",1.0,105,ml_signal,23,Method returning a boolean value indicating state,,105,,[]
‚úÖ Best Practice: Check if the server is already active to prevent redundant operations,"[26486, 227, 6705, 19939, 25, 6822, 611, 262, 4382, 318, 1541, 4075, 284, 2948, 30806, 4560]",1.0,136,best_practice,32,Check if the server is already active to prevent redundant operations,,105,        self._thread: threading.Thread | None = None        # RpcServer thread,"[220, 220, 220, 220, 220, 220, 220, 2116, 13557, 16663, 25, 4704, 278, 13, 16818, 930, 6045, 796, 6045, 220, 220, 220, 220, 220, 220, 220, 1303, 371, 14751, 10697, 4704]"
‚ö†Ô∏è SAST Risk (Medium): Binding to addresses without validation can lead to security vulnerabilities,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 38904, 284, 9405, 1231, 21201, 460, 1085, 284, 2324, 23805]",1.0,147,sast_risk,35,Binding to addresses without validation can lead to security vulnerabilities,Medium,136,        # Heartbeat related,"[220, 220, 220, 220, 220, 220, 220, 1303, 8894, 12945, 3519]"
‚ö†Ô∏è SAST Risk (Medium): Binding to addresses without validation can lead to security vulnerabilities,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 38904, 284, 9405, 1231, 21201, 460, 1085, 284, 2324, 23805]",1.0,147,sast_risk,37,Binding to addresses without validation can lead to security vulnerabilities,Medium,147,,[]
‚úÖ Best Practice: Using a separate thread to run the server allows for non-blocking operations,"[26486, 227, 6705, 19939, 25, 8554, 257, 4553, 4704, 284, 1057, 262, 4382, 3578, 329, 1729, 12, 41938, 4560]",0.5,158,best_practice,40,Using a separate thread to run the server allows for non-blocking operations,,147,        return self._active,"[220, 220, 220, 220, 220, 220, 220, 1441, 2116, 13557, 5275]"
üß† ML Signal: Starting a thread is a common pattern for asynchronous operations,"[8582, 100, 254, 10373, 26484, 25, 17962, 257, 4704, 318, 257, 2219, 3912, 329, 39354, 4560]",0.5,158,ml_signal,41,Starting a thread is a common pattern for asynchronous operations,,158,,[]
üß† ML Signal: Setting a heartbeat interval is a common pattern for maintaining server health,"[8582, 100, 254, 10373, 26484, 25, 25700, 257, 36051, 16654, 318, 257, 2219, 3912, 329, 10941, 4382, 1535]",1.0,171,ml_signal,44,Setting a heartbeat interval is a common pattern for maintaining server health,,158,"        rep_address: str,","[220, 220, 220, 220, 220, 220, 220, 1128, 62, 21975, 25, 965, 11]"
‚úÖ Best Practice: Check if the server is active before attempting to stop it,"[26486, 227, 6705, 19939, 25, 6822, 611, 262, 4382, 318, 4075, 878, 9361, 284, 2245, 340]",1.0,184,best_practice,44,Check if the server is active before attempting to stop it,,171,"        rep_address: str,","[220, 220, 220, 220, 220, 220, 220, 1128, 62, 21975, 25, 965, 11]"
"üß† ML Signal: Changing the state of an object, indicating a state transition","[8582, 100, 254, 10373, 26484, 25, 33680, 262, 1181, 286, 281, 2134, 11, 12739, 257, 1181, 6801]",1.0,192,ml_signal,47,"Changing the state of an object, indicating a state transition",,184,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚úÖ Best Practice: Check if the thread is alive before joining to avoid unnecessary blocking.,"[26486, 227, 6705, 19939, 25, 6822, 611, 262, 4704, 318, 6776, 878, 9679, 284, 3368, 13114, 12013, 13]",0.5,200,best_practice,49,Check if the thread is alive before joining to avoid unnecessary blocking.,,192,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚úÖ Best Practice: Resetting the thread reference to None after joining to prevent reuse.,"[26486, 227, 6705, 19939, 25, 30027, 889, 262, 4704, 4941, 284, 6045, 706, 9679, 284, 2948, 32349, 13]",1.0,212,best_practice,51,Resetting the thread reference to None after joining to prevent reuse.,,200,            return,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441]"
‚úÖ Best Practice: Regularly checking for a heartbeat ensures the server is responsive and can detect failures.,"[26486, 227, 6705, 19939, 25, 23603, 306, 10627, 329, 257, 36051, 19047, 262, 4382, 318, 21802, 290, 460, 4886, 15536, 13]",1.0,225,best_practice,57,Regularly checking for a heartbeat ensures the server is responsive and can detect failures.,,212,        # Start RpcServer status,"[220, 220, 220, 220, 220, 220, 220, 1303, 7253, 371, 14751, 10697, 3722]"
üß† ML Signal: Receiving and processing objects from a socket can indicate a pattern of network communication.,"[8582, 100, 254, 10373, 26484, 25, 19520, 1412, 290, 7587, 5563, 422, 257, 17802, 460, 7603, 257, 3912, 286, 3127, 6946, 13]",1.0,247,ml_signal,61,Receiving and processing objects from a socket can indicate a pattern of network communication.,,225,        self._thread = threading.Thread(target=self.run),"[220, 220, 220, 220, 220, 220, 220, 2116, 13557, 16663, 796, 4704, 278, 13, 16818, 7, 16793, 28, 944, 13, 5143, 8]"
üß† ML Signal: Unpacking received data into specific variables can indicate expected data structure.,"[8582, 100, 254, 10373, 26484, 25, 791, 41291, 2722, 1366, 656, 2176, 9633, 460, 7603, 2938, 1366, 4645, 13]",0.5,247,ml_signal,63,Unpacking received data into specific variables can indicate expected data structure.,,247,,[]
‚ö†Ô∏è SAST Risk (Medium): Accessing a function by name from a dictionary can lead to code execution risks if not properly validated.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 8798, 278, 257, 2163, 416, 1438, 422, 257, 22155, 460, 1085, 284, 2438, 9706, 7476, 611, 407, 6105, 31031, 13]",0.5,271,sast_risk,65,Accessing a function by name from a dictionary can lead to code execution risks if not properly validated.,Medium,247,        self._heartbeat_at = time() + HEARTBEAT_INTERVAL,"[220, 220, 220, 220, 220, 220, 220, 2116, 13557, 11499, 12945, 62, 265, 796, 640, 3419, 1343, 11179, 7227, 12473, 1404, 62, 41358, 23428]"
üß† ML Signal: Dynamic function invocation with arguments can indicate a pattern of flexible execution.,"[8582, 100, 254, 10373, 26484, 25, 26977, 2163, 43219, 351, 7159, 460, 7603, 257, 3912, 286, 12846, 9706, 13]",0.5,279,ml_signal,68,Dynamic function invocation with arguments can indicate a pattern of flexible execution.,,271,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚úÖ Best Practice: Catching exceptions and formatting traceback helps in debugging and error reporting.,"[26486, 227, 6705, 19939, 25, 327, 19775, 13269, 290, 33313, 12854, 1891, 5419, 287, 28769, 290, 4049, 6447, 13]",0.5,291,best_practice,72,Catching exceptions and formatting traceback helps in debugging and error reporting.,,279,            return,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1441]"
üß† ML Signal: Sending objects over a socket can indicate a pattern of network communication.,"[8582, 100, 254, 10373, 26484, 25, 32038, 5563, 625, 257, 17802, 460, 7603, 257, 3912, 286, 3127, 6946, 13]",1.0,303,ml_signal,75,Sending objects over a socket can indicate a pattern of network communication.,,291,        self._active = False,"[220, 220, 220, 220, 220, 220, 220, 2116, 13557, 5275, 796, 10352]"
‚úÖ Best Practice: Closing sockets when done to release resources and avoid potential leaks.,"[26486, 227, 6705, 19939, 25, 47055, 37037, 618, 1760, 284, 2650, 4133, 290, 3368, 2785, 17316, 13]",1.0,303,best_practice,76,Closing sockets when done to release resources and avoid potential leaks.,,303,,[]
‚úÖ Best Practice: Use of a lock to ensure thread safety when accessing shared resources,"[26486, 227, 6705, 19939, 25, 5765, 286, 257, 5793, 284, 4155, 4704, 3747, 618, 22534, 4888, 4133]",1.0,315,best_practice,75,Use of a lock to ensure thread safety when accessing shared resources,,303,        self._active = False,"[220, 220, 220, 220, 220, 220, 220, 2116, 13557, 5275, 796, 10352]"
üß† ML Signal: Usage of socket communication for data transmission,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 17802, 6946, 329, 1366, 11478]",0.5,326,ml_signal,77,Usage of socket communication for data transmission,,315,    def join(self) -> None:,"[220, 220, 220, 825, 4654, 7, 944, 8, 4613, 6045, 25]"
‚ö†Ô∏è SAST Risk (Low): Potential data leakage if sensitive information is sent over an insecure channel,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 1366, 47988, 611, 8564, 1321, 318, 1908, 625, 281, 31955, 6518]",0.5,342,sast_risk,78,Potential data leakage if sensitive information is sent over an insecure channel,Low,326,        # Wait for RpcServer thread to exit,"[220, 220, 220, 220, 220, 220, 220, 1303, 16314, 329, 371, 14751, 10697, 4704, 284, 8420]"
‚úÖ Best Practice: Add type hint for the return type of the function,"[26486, 227, 6705, 19939, 25, 3060, 2099, 9254, 329, 262, 1441, 2099, 286, 262, 2163]",1.0,353,best_practice,77,Add type hint for the return type of the function,,342,    def join(self) -> None:,"[220, 220, 220, 825, 4654, 7, 944, 8, 4613, 6045, 25]"
üß† ML Signal: Usage of function registration pattern,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 2163, 9352, 3912]",0.5,353,ml_signal,82,Usage of function registration pattern,,353,,[]
‚ö†Ô∏è SAST Risk (Low): Potential risk of overwriting existing functions with the same name,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 286, 6993, 799, 278, 4683, 5499, 351, 262, 976, 1438]",1.0,364,sast_risk,83,Potential risk of overwriting existing functions with the same name,Low,353,    def run(self) -> None:,"[220, 220, 220, 825, 1057, 7, 944, 8, 4613, 6045, 25]"
‚úÖ Best Practice: Include type hints for function return type,"[26486, 227, 6705, 19939, 25, 40348, 2099, 20269, 329, 2163, 1441, 2099]",1.0,364,best_practice,82,Include type hints for function return type,,364,,[]
‚úÖ Best Practice: Use descriptive variable names,"[26486, 227, 6705, 19939, 25, 5765, 35644, 7885, 3891]",0.5,376,best_practice,87,Use descriptive variable names,,364,        while self._active:,"[220, 220, 220, 220, 220, 220, 220, 981, 2116, 13557, 5275, 25]"
‚ö†Ô∏è SAST Risk (Low): Potential time-based logic flaw if time is manipulated,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 640, 12, 3106, 9156, 11804, 611, 640, 318, 25036]",0.5,401,sast_risk,89,Potential time-based logic flaw if time is manipulated,Low,376,            n: int = self._socket_rep.poll(1000),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 299, 25, 493, 796, 2116, 13557, 44971, 62, 7856, 13, 30393, 7, 12825, 8]"
üß† ML Signal: Usage of publish-subscribe pattern,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 7715, 12, 7266, 12522, 3912]",0.5,426,ml_signal,89,Usage of publish-subscribe pattern,,401,            n: int = self._socket_rep.poll(1000),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 299, 25, 493, 796, 2116, 13557, 44971, 62, 7856, 13, 30393, 7, 12825, 8]"
üß† ML Signal: Pattern of updating state with time-based logic,"[8582, 100, 254, 10373, 26484, 25, 23939, 286, 19698, 1181, 351, 640, 12, 3106, 9156]",0.5,451,ml_signal,89,Pattern of updating state with time-based logic,,426,            n: int = self._socket_rep.poll(1000),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 299, 25, 493, 796, 2116, 13557, 44971, 62, 7856, 13, 30393, 7, 12825, 8]"
