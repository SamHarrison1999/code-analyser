[
  {
    "line": 2,
    "text": "from typing import TYPE_CHECKING",
    "annotation": "\u2705 Best Practice: Consider using deepcopy if nested objects are involved to ensure all levels are copied.",
    "confidence": 0.5,
    "tokens": [
      6738,
      19720,
      1330,
      41876,
      62,
      50084,
      2751
    ],
    "start_token": 0,
    "end_token": 7,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      2769,
      30073,
      611,
      28376,
      5563,
      389,
      2950,
      284,
      4155,
      477,
      2974,
      389,
      18984,
      13
    ],
    "label": "best_practice",
    "reason": "Consider using deepcopy if nested objects are involved to ensure all levels are copied."
  },
  {
    "line": 3,
    "text": "",
    "annotation": "\u2705 Best Practice: TYPE_CHECKING is used to avoid circular imports and improve performance during runtime.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 7,
    "end_token": 7,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      41876,
      62,
      50084,
      2751,
      318,
      973,
      284,
      3368,
      18620,
      17944,
      290,
      2987,
      2854,
      1141,
      19124,
      13
    ],
    "label": "best_practice",
    "reason": "TYPE_CHECKING is used to avoid circular imports and improve performance during runtime."
  },
  {
    "line": 12,
    "text": "",
    "annotation": "\u2705 Best Practice: Grouping related imports together improves readability and maintainability.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 7,
    "end_token": 7,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      3519,
      17944,
      1978,
      19575,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping related imports together improves readability and maintainability."
  },
  {
    "line": 14,
    "text": "    from .engine import OmsEngine",
    "annotation": "\u2705 Best Practice: Grouping related imports together improves readability and maintainability.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      422,
      764,
      18392,
      1330,
      440,
      907,
      13798
    ],
    "start_token": 7,
    "end_token": 17,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4912,
      278,
      3519,
      17944,
      1978,
      19575,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Grouping related imports together improves readability and maintainability."
  },
  {
    "line": 17,
    "text": "class PositionHolding:",
    "annotation": "\u2705 Best Practice: TYPE_CHECKING is used to avoid circular imports and improve performance during runtime.",
    "confidence": 1.0,
    "tokens": [
      4871,
      23158,
      26807,
      278,
      25
    ],
    "start_token": 17,
    "end_token": 22,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      41876,
      62,
      50084,
      2751,
      318,
      973,
      284,
      3368,
      18620,
      17944,
      290,
      2987,
      2854,
      1141,
      19124,
      13
    ],
    "label": "best_practice",
    "reason": "TYPE_CHECKING is used to avoid circular imports and improve performance during runtime."
  },
  {
    "line": 15,
    "text": "",
    "annotation": "\u2705 Best Practice: Consider adding a class docstring to describe the purpose and usage of the class.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 22,
    "end_token": 22,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      4375,
      257,
      1398,
      2205,
      8841,
      284,
      6901,
      262,
      4007,
      290,
      8748,
      286,
      262,
      1398,
      13
    ],
    "label": "best_practice",
    "reason": "Consider adding a class docstring to describe the purpose and usage of the class."
  },
  {
    "line": 17,
    "text": "class PositionHolding:",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of object attributes from a data structure",
    "confidence": 1.0,
    "tokens": [
      4871,
      23158,
      26807,
      278,
      25
    ],
    "start_token": 22,
    "end_token": 27,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      2134,
      12608,
      422,
      257,
      1366,
      4645
    ],
    "label": "ml_signal",
    "reason": "Initialization of object attributes from a data structure"
  },
  {
    "line": 19,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of object attributes from a data structure",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 27,
    "end_token": 27,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      2134,
      12608,
      422,
      257,
      1366,
      4645
    ],
    "label": "ml_signal",
    "reason": "Initialization of object attributes from a data structure"
  },
  {
    "line": 21,
    "text": "        \"\"\"\"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of a dictionary to store orders",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      13538,
      15931,
      15931
    ],
    "start_token": 27,
    "end_token": 37,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      257,
      22155,
      284,
      3650,
      6266
    ],
    "label": "ml_signal",
    "reason": "Initialization of a dictionary to store orders"
  },
  {
    "line": 23,
    "text": "        self.exchange: Exchange = contract.exchange",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of position-related attributes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      1069,
      3803,
      25,
      12516,
      796,
      2775,
      13,
      1069,
      3803
    ],
    "start_token": 37,
    "end_token": 55,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      2292,
      12,
      5363,
      12608
    ],
    "label": "ml_signal",
    "reason": "Initialization of position-related attributes"
  },
  {
    "line": 25,
    "text": "        self.active_orders: dict[str, OrderData] = {}",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of position-related attributes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      5275,
      62,
      6361,
      25,
      8633,
      58,
      2536,
      11,
      8284,
      6601,
      60,
      796,
      23884
    ],
    "start_token": 55,
    "end_token": 77,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      2292,
      12,
      5363,
      12608
    ],
    "label": "ml_signal",
    "reason": "Initialization of position-related attributes"
  },
  {
    "line": 27,
    "text": "        self.long_pos: float = 0",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of position-related attributes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      6511,
      62,
      1930,
      25,
      12178,
      796,
      657
    ],
    "start_token": 77,
    "end_token": 93,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      2292,
      12,
      5363,
      12608
    ],
    "label": "ml_signal",
    "reason": "Initialization of position-related attributes"
  },
  {
    "line": 29,
    "text": "        self.long_td: float = 0",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of position-related attributes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      6511,
      62,
      8671,
      25,
      12178,
      796,
      657
    ],
    "start_token": 93,
    "end_token": 109,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      2292,
      12,
      5363,
      12608
    ],
    "label": "ml_signal",
    "reason": "Initialization of position-related attributes"
  },
  {
    "line": 31,
    "text": "        self.short_pos: float = 0",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of position-related attributes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      19509,
      62,
      1930,
      25,
      12178,
      796,
      657
    ],
    "start_token": 109,
    "end_token": 125,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      2292,
      12,
      5363,
      12608
    ],
    "label": "ml_signal",
    "reason": "Initialization of position-related attributes"
  },
  {
    "line": 33,
    "text": "        self.short_td: float = 0",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of position-related attributes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      19509,
      62,
      8671,
      25,
      12178,
      796,
      657
    ],
    "start_token": 125,
    "end_token": 141,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      2292,
      12,
      5363,
      12608
    ],
    "label": "ml_signal",
    "reason": "Initialization of position-related attributes"
  },
  {
    "line": 35,
    "text": "        self.long_pos_frozen: float = 0",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of frozen position-related attributes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      6511,
      62,
      1930,
      62,
      69,
      42005,
      25,
      12178,
      796,
      657
    ],
    "start_token": 141,
    "end_token": 160,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      12912,
      2292,
      12,
      5363,
      12608
    ],
    "label": "ml_signal",
    "reason": "Initialization of frozen position-related attributes"
  },
  {
    "line": 37,
    "text": "        self.long_td_frozen: float = 0",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of frozen position-related attributes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      6511,
      62,
      8671,
      62,
      69,
      42005,
      25,
      12178,
      796,
      657
    ],
    "start_token": 160,
    "end_token": 179,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      12912,
      2292,
      12,
      5363,
      12608
    ],
    "label": "ml_signal",
    "reason": "Initialization of frozen position-related attributes"
  },
  {
    "line": 39,
    "text": "        self.short_pos_frozen: float = 0",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of frozen position-related attributes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      19509,
      62,
      1930,
      62,
      69,
      42005,
      25,
      12178,
      796,
      657
    ],
    "start_token": 179,
    "end_token": 198,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      12912,
      2292,
      12,
      5363,
      12608
    ],
    "label": "ml_signal",
    "reason": "Initialization of frozen position-related attributes"
  },
  {
    "line": 41,
    "text": "        self.short_td_frozen: float = 0",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of frozen position-related attributes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      19509,
      62,
      8671,
      62,
      69,
      42005,
      25,
      12178,
      796,
      657
    ],
    "start_token": 198,
    "end_token": 217,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      12912,
      2292,
      12,
      5363,
      12608
    ],
    "label": "ml_signal",
    "reason": "Initialization of frozen position-related attributes"
  },
  {
    "line": 43,
    "text": "    def update_position(self, position: PositionData) -> None:",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of frozen position-related attributes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      4296,
      62,
      9150,
      7,
      944,
      11,
      2292,
      25,
      23158,
      6601,
      8,
      4613,
      6045,
      25
    ],
    "start_token": 217,
    "end_token": 235,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      12912,
      2292,
      12,
      5363,
      12608
    ],
    "label": "ml_signal",
    "reason": "Initialization of frozen position-related attributes"
  },
  {
    "line": 45,
    "text": "        if position.direction == Direction.LONG:",
    "annotation": "\ud83e\udde0 ML Signal: Initialization of frozen position-related attributes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      2292,
      13,
      37295,
      6624,
      41837,
      13,
      43,
      18494,
      25
    ],
    "start_token": 235,
    "end_token": 252,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20768,
      1634,
      286,
      12912,
      2292,
      12,
      5363,
      12608
    ],
    "label": "ml_signal",
    "reason": "Initialization of frozen position-related attributes"
  },
  {
    "line": 34,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on attribute values",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 252,
    "end_token": 252,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      11688,
      3815
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on attribute values"
  },
  {
    "line": 36,
    "text": "        self.long_yd_frozen: float = 0",
    "annotation": "\ud83e\udde0 ML Signal: Attribute assignment based on condition",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      6511,
      62,
      5173,
      62,
      69,
      42005,
      25,
      12178,
      796,
      657
    ],
    "start_token": 252,
    "end_token": 271,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3460,
      4163,
      16237,
      1912,
      319,
      4006
    ],
    "label": "ml_signal",
    "reason": "Attribute assignment based on condition"
  },
  {
    "line": 37,
    "text": "        self.long_td_frozen: float = 0",
    "annotation": "\ud83e\udde0 ML Signal: Attribute assignment based on condition",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      6511,
      62,
      8671,
      62,
      69,
      42005,
      25,
      12178,
      796,
      657
    ],
    "start_token": 271,
    "end_token": 290,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3460,
      4163,
      16237,
      1912,
      319,
      4006
    ],
    "label": "ml_signal",
    "reason": "Attribute assignment based on condition"
  },
  {
    "line": 40,
    "text": "        self.short_yd_frozen: float = 0",
    "annotation": "\ud83e\udde0 ML Signal: Calculation and assignment based on attributes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      19509,
      62,
      5173,
      62,
      69,
      42005,
      25,
      12178,
      796,
      657
    ],
    "start_token": 290,
    "end_token": 309,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2199,
      14902,
      290,
      16237,
      1912,
      319,
      12608
    ],
    "label": "ml_signal",
    "reason": "Calculation and assignment based on attributes"
  },
  {
    "line": 43,
    "text": "    def update_position(self, position: PositionData) -> None:",
    "annotation": "\ud83e\udde0 ML Signal: Attribute assignment based on condition",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      4296,
      62,
      9150,
      7,
      944,
      11,
      2292,
      25,
      23158,
      6601,
      8,
      4613,
      6045,
      25
    ],
    "start_token": 309,
    "end_token": 327,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3460,
      4163,
      16237,
      1912,
      319,
      4006
    ],
    "label": "ml_signal",
    "reason": "Attribute assignment based on condition"
  },
  {
    "line": 45,
    "text": "        if position.direction == Direction.LONG:",
    "annotation": "\ud83e\udde0 ML Signal: Attribute assignment based on condition",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      2292,
      13,
      37295,
      6624,
      41837,
      13,
      43,
      18494,
      25
    ],
    "start_token": 327,
    "end_token": 344,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3460,
      4163,
      16237,
      1912,
      319,
      4006
    ],
    "label": "ml_signal",
    "reason": "Attribute assignment based on condition"
  },
  {
    "line": 47,
    "text": "            self.long_yd = position.yd_volume",
    "annotation": "\ud83e\udde0 ML Signal: Calculation and assignment based on attributes",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      6511,
      62,
      5173,
      796,
      2292,
      13,
      5173,
      62,
      29048
    ],
    "start_token": 344,
    "end_token": 366,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2199,
      14902,
      290,
      16237,
      1912,
      319,
      12608
    ],
    "label": "ml_signal",
    "reason": "Calculation and assignment based on attributes"
  },
  {
    "line": 44,
    "text": "        \"\"\"\"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Checks if an order is active, indicating a pattern of managing order states.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      13538,
      15931,
      15931
    ],
    "start_token": 366,
    "end_token": 376,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47719,
      611,
      281,
      1502,
      318,
      4075,
      11,
      12739,
      257,
      3912,
      286,
      11149,
      1502,
      2585,
      13
    ],
    "label": "ml_signal",
    "reason": "Checks if an order is active, indicating a pattern of managing order states."
  },
  {
    "line": 45,
    "text": "        if position.direction == Direction.LONG:",
    "annotation": "\ud83e\udde0 ML Signal: Updates active orders, showing a pattern of maintaining a collection of active items.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      2292,
      13,
      37295,
      6624,
      41837,
      13,
      43,
      18494,
      25
    ],
    "start_token": 376,
    "end_token": 393,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      28090,
      4075,
      6266,
      11,
      4478,
      257,
      3912,
      286,
      10941,
      257,
      4947,
      286,
      4075,
      3709,
      13
    ],
    "label": "ml_signal",
    "reason": "Updates active orders, showing a pattern of maintaining a collection of active items."
  },
  {
    "line": 49,
    "text": "        else:",
    "annotation": "\ud83e\udde0 ML Signal: Checks for order existence before removal, indicating a pattern of safe deletion.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 393,
    "end_token": 402,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47719,
      329,
      1502,
      6224,
      878,
      9934,
      11,
      12739,
      257,
      3912,
      286,
      3338,
      39948,
      13
    ],
    "label": "ml_signal",
    "reason": "Checks for order existence before removal, indicating a pattern of safe deletion."
  },
  {
    "line": 51,
    "text": "            self.short_yd = position.yd_volume",
    "annotation": "\ud83e\udde0 ML Signal: Removes inactive orders, showing a pattern of cleaning up resources.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      19509,
      62,
      5173,
      796,
      2292,
      13,
      5173,
      62,
      29048
    ],
    "start_token": 402,
    "end_token": 424,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3982,
      5241,
      28621,
      6266,
      11,
      4478,
      257,
      3912,
      286,
      12724,
      510,
      4133,
      13
    ],
    "label": "ml_signal",
    "reason": "Removes inactive orders, showing a pattern of cleaning up resources."
  },
  {
    "line": 53,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Calls a method to recalculate resources, indicating a pattern of resource management.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 424,
    "end_token": 424,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      27592,
      257,
      2446,
      284,
      42653,
      3129,
      378,
      4133,
      11,
      12739,
      257,
      3912,
      286,
      8271,
      4542,
      13
    ],
    "label": "ml_signal",
    "reason": "Calls a method to recalculate resources, indicating a pattern of resource management."
  },
  {
    "line": 52,
    "text": "            self.short_td = self.short_pos - self.short_yd",
    "annotation": "\u2705 Best Practice: Consider adding a docstring to describe the method's purpose and parameters.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      19509,
      62,
      8671,
      796,
      2116,
      13,
      19509,
      62,
      1930,
      532,
      2116,
      13,
      19509,
      62,
      5173
    ],
    "start_token": 424,
    "end_token": 452,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      4375,
      257,
      2205,
      8841,
      284,
      6901,
      262,
      2446,
      338,
      4007,
      290,
      10007,
      13
    ],
    "label": "best_practice",
    "reason": "Consider adding a docstring to describe the method's purpose and parameters."
  },
  {
    "line": 54,
    "text": "    def update_order(self, order: OrderData) -> None:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Assumes vt_orderid is always in the correct format and does not handle potential exceptions from split.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      4296,
      62,
      2875,
      7,
      944,
      11,
      1502,
      25,
      8284,
      6601,
      8,
      4613,
      6045,
      25
    ],
    "start_token": 452,
    "end_token": 470,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      2195,
      8139,
      410,
      83,
      62,
      2875,
      312,
      318,
      1464,
      287,
      262,
      3376,
      5794,
      290,
      857,
      407,
      5412,
      2785,
      13269,
      422,
      6626,
      13
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Assumes vt_orderid is always in the correct format and does not handle potential exceptions from split."
  },
  {
    "line": 56,
    "text": "        if order.is_active():",
    "annotation": "\ud83e\udde0 ML Signal: Usage of method chaining to create an order object.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      1502,
      13,
      271,
      62,
      5275,
      33529
    ],
    "start_token": 470,
    "end_token": 484,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2446,
      442,
      1397,
      284,
      2251,
      281,
      1502,
      2134,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of method chaining to create an order object."
  },
  {
    "line": 58,
    "text": "        else:",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of updating an order using a method call.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 484,
    "end_token": 493,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      19698,
      281,
      1502,
      1262,
      257,
      2446,
      869,
      13
    ],
    "label": "ml_signal",
    "reason": "Pattern of updating an order using a method call."
  },
  {
    "line": 57,
    "text": "            self.active_orders[order.vt_orderid] = order",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on trade direction and offset",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      5275,
      62,
      6361,
      58,
      2875,
      13,
      36540,
      62,
      2875,
      312,
      60,
      796,
      1502
    ],
    "start_token": 493,
    "end_token": 519,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      3292,
      4571,
      290,
      11677
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on trade direction and offset"
  },
  {
    "line": 59,
    "text": "            if order.vt_orderid in self.active_orders:",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of updating long and short positions based on trade offset",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      1502,
      13,
      36540,
      62,
      2875,
      312,
      287,
      2116,
      13,
      5275,
      62,
      6361,
      25
    ],
    "start_token": 519,
    "end_token": 544,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      19698,
      890,
      290,
      1790,
      6116,
      1912,
      319,
      3292,
      11677
    ],
    "label": "ml_signal",
    "reason": "Pattern of updating long and short positions based on trade offset"
  },
  {
    "line": 66,
    "text": "        gateway_name, orderid = vt_orderid.split(\".\")",
    "annotation": "\ud83e\udde0 ML Signal: Special handling for specific exchanges",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      24308,
      62,
      3672,
      11,
      1502,
      312,
      796,
      410,
      83,
      62,
      2875,
      312,
      13,
      35312,
      7203,
      19570
    ],
    "start_token": 544,
    "end_token": 567,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6093,
      9041,
      329,
      2176,
      14525
    ],
    "label": "ml_signal",
    "reason": "Special handling for specific exchanges"
  },
  {
    "line": 71,
    "text": "    def update_trade(self, trade: TradeData) -> None:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential negative value adjustment",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      4296,
      62,
      25351,
      7,
      944,
      11,
      3292,
      25,
      9601,
      6601,
      8,
      4613,
      6045,
      25
    ],
    "start_token": 567,
    "end_token": 585,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      4633,
      1988,
      15068
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential negative value adjustment"
  },
  {
    "line": 88,
    "text": "                        self.short_td = 0",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential negative value adjustment",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      19509,
      62,
      8671,
      796,
      657
    ],
    "start_token": 585,
    "end_token": 615,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      4633,
      1988,
      15068
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential negative value adjustment"
  },
  {
    "line": 92,
    "text": "            elif trade.offset == Offset.CLOSETODAY:",
    "annotation": "\u2705 Best Practice: Clear calculation of long and short positions",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1288,
      361,
      3292,
      13,
      28968,
      6624,
      3242,
      2617,
      13,
      5097,
      2640,
      2767,
      3727,
      4792,
      25
    ],
    "start_token": 615,
    "end_token": 641,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11459,
      17952,
      286,
      890,
      290,
      1790,
      6116
    ],
    "label": "best_practice",
    "reason": "Clear calculation of long and short positions"
  },
  {
    "line": 95,
    "text": "                self.long_yd -= trade.volume",
    "annotation": "\ud83e\udde0 ML Signal: Method call to update frozen positions",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      6511,
      62,
      5173,
      48185,
      3292,
      13,
      29048
    ],
    "start_token": 641,
    "end_token": 665,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      869,
      284,
      4296,
      12912,
      6116
    ],
    "label": "ml_signal",
    "reason": "Method call to update frozen positions"
  },
  {
    "line": 92,
    "text": "            elif trade.offset == Offset.CLOSETODAY:",
    "annotation": "\u2705 Best Practice: Initialize variables at the start of the function for clarity and maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1288,
      361,
      3292,
      13,
      28968,
      6624,
      3242,
      2617,
      13,
      5097,
      2640,
      2767,
      3727,
      4792,
      25
    ],
    "start_token": 665,
    "end_token": 691,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      20768,
      1096,
      9633,
      379,
      262,
      923,
      286,
      262,
      2163,
      329,
      16287,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Initialize variables at the start of the function for clarity and maintainability"
  },
  {
    "line": 99,
    "text": "                else:",
    "annotation": "\ud83e\udde0 ML Signal: Iterating over a collection of objects, common pattern in data processing",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 691,
    "end_token": 708,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      40806,
      803,
      625,
      257,
      4947,
      286,
      5563,
      11,
      2219,
      3912,
      287,
      1366,
      7587
    ],
    "label": "ml_signal",
    "reason": "Iterating over a collection of objects, common pattern in data processing"
  },
  {
    "line": 101,
    "text": "",
    "annotation": "\u2705 Best Practice: Use of continue to skip unnecessary iterations",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 708,
    "end_token": 708,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2555,
      284,
      14267,
      13114,
      34820
    ],
    "label": "best_practice",
    "reason": "Use of continue to skip unnecessary iterations"
  },
  {
    "line": 104,
    "text": "                        self.long_td = 0",
    "annotation": "\u2705 Best Practice: Type hinting for variable 'frozen' improves code readability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      6511,
      62,
      8671,
      796,
      657
    ],
    "start_token": 708,
    "end_token": 738,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      7885,
      705,
      69,
      42005,
      6,
      19575,
      2438,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting for variable 'frozen' improves code readability"
  },
  {
    "line": 113,
    "text": "        \"\"\"\"\"\"",
    "annotation": "\u2705 Best Practice: Use of conditional logic to handle different cases",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      13538,
      15931,
      15931
    ],
    "start_token": 738,
    "end_token": 748,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      26340,
      9156,
      284,
      5412,
      1180,
      2663
    ],
    "label": "best_practice",
    "reason": "Use of conditional logic to handle different cases"
  },
  {
    "line": 129,
    "text": "            if order.direction == Direction.LONG:",
    "annotation": "\u2705 Best Practice: Encapsulation of functionality in a separate method call",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      1502,
      13,
      37295,
      6624,
      41837,
      13,
      43,
      18494,
      25
    ],
    "start_token": 748,
    "end_token": 769,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      14711,
      1686,
      1741,
      286,
      11244,
      287,
      257,
      4553,
      2446,
      869
    ],
    "label": "best_practice",
    "reason": "Encapsulation of functionality in a separate method call"
  },
  {
    "line": 127,
    "text": "            frozen: float = order.volume - order.traded",
    "annotation": "\u2705 Best Practice: Use of min function ensures that the frozen values do not exceed current values",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      12912,
      25,
      12178,
      796,
      1502,
      13,
      29048,
      532,
      1502,
      13,
      2213,
      5286
    ],
    "start_token": 769,
    "end_token": 792,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      949,
      2163,
      19047,
      326,
      262,
      12912,
      3815,
      466,
      407,
      7074,
      1459,
      3815
    ],
    "label": "best_practice",
    "reason": "Use of min function ensures that the frozen values do not exceed current values"
  },
  {
    "line": 129,
    "text": "            if order.direction == Direction.LONG:",
    "annotation": "\u2705 Best Practice: Use of min function ensures that the frozen values do not exceed current values",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      1502,
      13,
      37295,
      6624,
      41837,
      13,
      43,
      18494,
      25
    ],
    "start_token": 792,
    "end_token": 813,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      949,
      2163,
      19047,
      326,
      262,
      12912,
      3815,
      466,
      407,
      7074,
      1459,
      3815
    ],
    "label": "best_practice",
    "reason": "Use of min function ensures that the frozen values do not exceed current values"
  },
  {
    "line": 131,
    "text": "                    self.short_td_frozen += frozen",
    "annotation": "\u2705 Best Practice: Use of min function ensures that the frozen values do not exceed current values",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      19509,
      62,
      8671,
      62,
      69,
      42005,
      15853,
      12912
    ],
    "start_token": 813,
    "end_token": 842,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      949,
      2163,
      19047,
      326,
      262,
      12912,
      3815,
      466,
      407,
      7074,
      1459,
      3815
    ],
    "label": "best_practice",
    "reason": "Use of min function ensures that the frozen values do not exceed current values"
  },
  {
    "line": 133,
    "text": "                    self.short_yd_frozen += frozen",
    "annotation": "\u2705 Best Practice: Use of min function ensures that the frozen values do not exceed current values",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      19509,
      62,
      5173,
      62,
      69,
      42005,
      15853,
      12912
    ],
    "start_token": 842,
    "end_token": 871,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      949,
      2163,
      19047,
      326,
      262,
      12912,
      3815,
      466,
      407,
      7074,
      1459,
      3815
    ],
    "label": "best_practice",
    "reason": "Use of min function ensures that the frozen values do not exceed current values"
  },
  {
    "line": 135,
    "text": "                    self.short_td_frozen += frozen",
    "annotation": "\ud83e\udde0 ML Signal: Calculation of frozen positions could indicate a pattern of interest for ML models",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      19509,
      62,
      8671,
      62,
      69,
      42005,
      15853,
      12912
    ],
    "start_token": 871,
    "end_token": 900,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2199,
      14902,
      286,
      12912,
      6116,
      714,
      7603,
      257,
      3912,
      286,
      1393,
      329,
      10373,
      4981
    ],
    "label": "ml_signal",
    "reason": "Calculation of frozen positions could indicate a pattern of interest for ML models"
  },
  {
    "line": 137,
    "text": "                    if self.short_td_frozen > self.short_td:",
    "annotation": "\ud83e\udde0 ML Signal: Calculation of frozen positions could indicate a pattern of interest for ML models",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      2116,
      13,
      19509,
      62,
      8671,
      62,
      69,
      42005,
      1875,
      2116,
      13,
      19509,
      62,
      8671,
      25
    ],
    "start_token": 900,
    "end_token": 935,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2199,
      14902,
      286,
      12912,
      6116,
      714,
      7603,
      257,
      3912,
      286,
      1393,
      329,
      10373,
      4981
    ],
    "label": "ml_signal",
    "reason": "Calculation of frozen positions could indicate a pattern of interest for ML models"
  },
  {
    "line": 135,
    "text": "                    self.short_td_frozen += frozen",
    "annotation": "\ud83e\udde0 ML Signal: Checks for specific offset value, indicating a pattern in order processing",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      19509,
      62,
      8671,
      62,
      69,
      42005,
      15853,
      12912
    ],
    "start_token": 935,
    "end_token": 964,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47719,
      329,
      2176,
      11677,
      1988,
      11,
      12739,
      257,
      3912,
      287,
      1502,
      7587
    ],
    "label": "ml_signal",
    "reason": "Checks for specific offset value, indicating a pattern in order processing"
  },
  {
    "line": 138,
    "text": "                        self.short_yd_frozen += (self.short_td_frozen",
    "annotation": "\ud83e\udde0 ML Signal: Differentiates behavior based on direction, useful for learning trading strategies",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      19509,
      62,
      5173,
      62,
      69,
      42005,
      15853,
      357,
      944,
      13,
      19509,
      62,
      8671,
      62,
      69,
      42005
    ],
    "start_token": 964,
    "end_token": 1005,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      20615,
      32820,
      4069,
      1912,
      319,
      4571,
      11,
      4465,
      329,
      4673,
      7313,
      10064
    ],
    "label": "ml_signal",
    "reason": "Differentiates behavior based on direction, useful for learning trading strategies"
  },
  {
    "line": 139,
    "text": "                                                 - self.short_td)",
    "annotation": "\u2705 Best Practice: Type hinting improves code readability and maintainability",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      532,
      2116,
      13,
      19509,
      62,
      8671,
      8
    ],
    "start_token": 1005,
    "end_token": 1060,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting improves code readability and maintainability"
  },
  {
    "line": 146,
    "text": "                elif order.offset == Offset.CLOSE:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential for incorrect logic if pos_available is negative",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1288,
      361,
      1502,
      13,
      28968,
      6624,
      3242,
      2617,
      13,
      32737,
      25
    ],
    "start_token": 1060,
    "end_token": 1086,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      329,
      11491,
      9156,
      611,
      1426,
      62,
      15182,
      318,
      4633
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential for incorrect logic if pos_available is negative"
  },
  {
    "line": 150,
    "text": "                        self.long_yd_frozen += (self.long_td_frozen",
    "annotation": "\u2705 Best Practice: Copying objects to avoid unintended side effects",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      6511,
      62,
      5173,
      62,
      69,
      42005,
      15853,
      357,
      944,
      13,
      6511,
      62,
      8671,
      62,
      69,
      42005
    ],
    "start_token": 1086,
    "end_token": 1127,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6955,
      1112,
      5563,
      284,
      3368,
      30261,
      1735,
      3048
    ],
    "label": "best_practice",
    "reason": "Copying objects to avoid unintended side effects"
  },
  {
    "line": 155,
    "text": "",
    "annotation": "\u2705 Best Practice: Initializing lists before use",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1127,
    "end_token": 1127,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      20768,
      2890,
      8341,
      878,
      779
    ],
    "label": "best_practice",
    "reason": "Initializing lists before use"
  },
  {
    "line": 163,
    "text": "        self.short_yd_frozen = min(self.short_yd_frozen, self.short_yd)",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on 'req.direction' can indicate trading strategy patterns.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      19509,
      62,
      5173,
      62,
      69,
      42005,
      796,
      949,
      7,
      944,
      13,
      19509,
      62,
      5173,
      62,
      69,
      42005,
      11,
      2116,
      13,
      19509,
      62,
      5173,
      8
    ],
    "start_token": 1127,
    "end_token": 1160,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      705,
      42180,
      13,
      37295,
      6,
      460,
      7603,
      7313,
      4811,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on 'req.direction' can indicate trading strategy patterns."
  },
  {
    "line": 170,
    "text": "        if req.offset == Offset.OPEN:",
    "annotation": "\ud83e\udde0 ML Signal: Use of specific exchanges can indicate market preferences or restrictions.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      43089,
      13,
      28968,
      6624,
      3242,
      2617,
      13,
      3185,
      1677,
      25
    ],
    "start_token": 1160,
    "end_token": 1178,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2176,
      14525,
      460,
      7603,
      1910,
      15387,
      393,
      8733,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of specific exchanges can indicate market preferences or restrictions."
  },
  {
    "line": 172,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on 'td_volume' and 'self.exchange' can indicate trading strategy patterns.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 1178,
    "end_token": 1178,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      705,
      8671,
      62,
      29048,
      6,
      290,
      705,
      944,
      13,
      1069,
      3803,
      6,
      460,
      7603,
      7313,
      4811,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on 'td_volume' and 'self.exchange' can indicate trading strategy patterns."
  },
  {
    "line": 173,
    "text": "        if req.direction == Direction.LONG:",
    "annotation": "\u2705 Best Practice: Use of 'copy' to avoid modifying the original request object.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      43089,
      13,
      37295,
      6624,
      41837,
      13,
      43,
      18494,
      25
    ],
    "start_token": 1178,
    "end_token": 1195,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      705,
      30073,
      6,
      284,
      3368,
      30620,
      262,
      2656,
      2581,
      2134,
      13
    ],
    "label": "best_practice",
    "reason": "Use of 'copy' to avoid modifying the original request object."
  },
  {
    "line": 179,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Calculation of 'close_volume' and 'open_volume' can indicate trading strategy patterns.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 1195,
    "end_token": 1195,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      2199,
      14902,
      286,
      705,
      19836,
      62,
      29048,
      6,
      290,
      705,
      9654,
      62,
      29048,
      6,
      460,
      7603,
      7313,
      4811,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "Calculation of 'close_volume' and 'open_volume' can indicate trading strategy patterns."
  },
  {
    "line": 183,
    "text": "            req_td: OrderRequest = copy(req)",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on 'yd_available' can indicate trading strategy patterns.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      43089,
      62,
      8671,
      25,
      8284,
      18453,
      796,
      4866,
      7,
      42180,
      8
    ],
    "start_token": 1195,
    "end_token": 1217,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      705,
      5173,
      62,
      15182,
      6,
      460,
      7603,
      7313,
      4811,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on 'yd_available' can indicate trading strategy patterns."
  },
  {
    "line": 185,
    "text": "            return [req_td]",
    "annotation": "\u2705 Best Practice: Use of 'copy' to avoid modifying the original request object.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1441,
      685,
      42180,
      62,
      8671,
      60
    ],
    "start_token": 1217,
    "end_token": 1234,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      705,
      30073,
      6,
      284,
      3368,
      30620,
      262,
      2656,
      2581,
      2134,
      13
    ],
    "label": "best_practice",
    "reason": "Use of 'copy' to avoid modifying the original request object."
  },
  {
    "line": 187,
    "text": "            req_list: list[OrderRequest] = []",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on 'self.exchange' can indicate trading strategy patterns.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      43089,
      62,
      4868,
      25,
      1351,
      58,
      18743,
      18453,
      60,
      796,
      17635
    ],
    "start_token": 1234,
    "end_token": 1256,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      705,
      944,
      13,
      1069,
      3803,
      6,
      460,
      7603,
      7313,
      4811,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on 'self.exchange' can indicate trading strategy patterns."
  },
  {
    "line": 194,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on 'open_volume' can indicate trading strategy patterns.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 1256,
    "end_token": 1256,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      705,
      9654,
      62,
      29048,
      6,
      460,
      7603,
      7313,
      4811,
      7572,
      13
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on 'open_volume' can indicate trading strategy patterns."
  },
  {
    "line": 196,
    "text": "            req_yd.offset = Offset.CLOSEYESTERDAY",
    "annotation": "\u2705 Best Practice: Use of 'copy' to avoid modifying the original request object.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      43089,
      62,
      5173,
      13,
      28968,
      796,
      3242,
      2617,
      13,
      32737,
      43335,
      5781,
      26442
    ],
    "start_token": 1256,
    "end_token": 1280,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      705,
      30073,
      6,
      284,
      3368,
      30620,
      262,
      2656,
      2581,
      2134,
      13
    ],
    "label": "best_practice",
    "reason": "Use of 'copy' to avoid modifying the original request object."
  },
  {
    "line": 194,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic based on 'req.direction' indicates a pattern of handling different order directions.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 1280,
    "end_token": 1280,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      1912,
      319,
      705,
      42180,
      13,
      37295,
      6,
      9217,
      257,
      3912,
      286,
      9041,
      1180,
      1502,
      11678,
      13
    ],
    "label": "ml_signal",
    "reason": "Conditional logic based on 'req.direction' indicates a pattern of handling different order directions."
  },
  {
    "line": 203,
    "text": "        \"\"\"\"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Use of specific exchanges indicates a pattern of handling different market rules.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      13538,
      15931,
      15931
    ],
    "start_token": 1280,
    "end_token": 1290,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2176,
      14525,
      9217,
      257,
      3912,
      286,
      9041,
      1180,
      1910,
      3173,
      13
    ],
    "label": "ml_signal",
    "reason": "Use of specific exchanges indicates a pattern of handling different market rules."
  },
  {
    "line": 210,
    "text": "",
    "annotation": "\u2705 Best Practice: Using 'copy' to duplicate 'req' ensures the original request is not modified.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 1290,
    "end_token": 1290,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      705,
      30073,
      6,
      284,
      23418,
      705,
      42180,
      6,
      19047,
      262,
      2656,
      2581,
      318,
      407,
      9518,
      13
    ],
    "label": "best_practice",
    "reason": "Using 'copy' to duplicate 'req' ensures the original request is not modified."
  },
  {
    "line": 234,
    "text": "            if open_volume:",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Incorrect volume deduction, should be 'volume_left -= close_volume'.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      1280,
      62,
      29048,
      25
    ],
    "start_token": 1290,
    "end_token": 1306,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      3457,
      47315,
      6115,
      24374,
      11,
      815,
      307,
      705,
      29048,
      62,
      9464,
      48185,
      1969,
      62,
      29048,
      4458
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Incorrect volume deduction, should be 'volume_left -= close_volume'."
  },
  {
    "line": 245,
    "text": "            pos_available: float = self.short_pos - self.short_pos_frozen",
    "annotation": "\u2705 Best Practice: Consider adding a class docstring to describe the purpose and usage of the class.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1426,
      62,
      15182,
      25,
      12178,
      796,
      2116,
      13,
      19509,
      62,
      1930,
      532,
      2116,
      13,
      19509,
      62,
      1930,
      62,
      69,
      42005
    ],
    "start_token": 1306,
    "end_token": 1337,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      4375,
      257,
      1398,
      2205,
      8841,
      284,
      6901,
      262,
      4007,
      290,
      8748,
      286,
      262,
      1398,
      13
    ],
    "label": "best_practice",
    "reason": "Consider adding a class docstring to describe the purpose and usage of the class."
  },
  {
    "line": 247,
    "text": "            yd_available: float = self.short_yd - self.short_yd_frozen",
    "annotation": "\u2705 Best Practice: Initialize instance variables in the constructor for clarity and maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      331,
      67,
      62,
      15182,
      25,
      12178,
      796,
      2116,
      13,
      19509,
      62,
      5173,
      532,
      2116,
      13,
      19509,
      62,
      5173,
      62,
      69,
      42005
    ],
    "start_token": 1337,
    "end_token": 1369,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      20768,
      1096,
      4554,
      9633,
      287,
      262,
      23772,
      329,
      16287,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Initialize instance variables in the constructor for clarity and maintainability"
  },
  {
    "line": 249,
    "text": "            pos_available = self.long_pos - self.long_pos_frozen",
    "annotation": "\ud83e\udde0 ML Signal: Usage of dependency injection pattern with oms_engine",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1426,
      62,
      15182,
      796,
      2116,
      13,
      6511,
      62,
      1930,
      532,
      2116,
      13,
      6511,
      62,
      1930,
      62,
      69,
      42005
    ],
    "start_token": 1369,
    "end_token": 1398,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      20203,
      16954,
      3912,
      351,
      267,
      907,
      62,
      18392
    ],
    "label": "ml_signal",
    "reason": "Usage of dependency injection pattern with oms_engine"
  },
  {
    "line": 250,
    "text": "            td_available = self.long_td - self.long_td_frozen",
    "annotation": "\ud83e\udde0 ML Signal: Storing a method reference from another object",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      41560,
      62,
      15182,
      796,
      2116,
      13,
      6511,
      62,
      8671,
      532,
      2116,
      13,
      6511,
      62,
      8671,
      62,
      69,
      42005
    ],
    "start_token": 1398,
    "end_token": 1427,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      520,
      3255,
      257,
      2446,
      4941,
      422,
      1194,
      2134
    ],
    "label": "ml_signal",
    "reason": "Storing a method reference from another object"
  },
  {
    "line": 251,
    "text": "            yd_available = self.long_yd - self.long_yd_frozen",
    "annotation": "\u2705 Best Practice: Check if conversion is required before proceeding with the update",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      331,
      67,
      62,
      15182,
      796,
      2116,
      13,
      6511,
      62,
      5173,
      532,
      2116,
      13,
      6511,
      62,
      5173,
      62,
      69,
      42005
    ],
    "start_token": 1427,
    "end_token": 1457,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      611,
      11315,
      318,
      2672,
      878,
      18788,
      351,
      262,
      4296
    ],
    "label": "best_practice",
    "reason": "Check if conversion is required before proceeding with the update"
  },
  {
    "line": 254,
    "text": "        if req.exchange in {Exchange.SHFE, Exchange.INE}:",
    "annotation": "\ud83e\udde0 ML Signal: Use of type hinting for variable declaration",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      43089,
      13,
      1069,
      3803,
      287,
      1391,
      3109,
      3803,
      13,
      9693,
      15112,
      11,
      12516,
      13,
      8881,
      38362
    ],
    "start_token": 1457,
    "end_token": 1481,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      2099,
      9254,
      278,
      329,
      7885,
      14305
    ],
    "label": "ml_signal",
    "reason": "Use of type hinting for variable declaration"
  },
  {
    "line": 257,
    "text": "",
    "annotation": "\u2705 Best Practice: Update existing holding only if it exists",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1481,
    "end_token": 1481,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      10133,
      4683,
      4769,
      691,
      611,
      340,
      7160
    ],
    "label": "best_practice",
    "reason": "Update existing holding only if it exists"
  },
  {
    "line": 258,
    "text": "            if td_available:",
    "annotation": "\ud83e\udde0 ML Signal: Checks for a condition before proceeding, indicating a decision point in the code.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      611,
      41560,
      62,
      15182,
      25
    ],
    "start_token": 1481,
    "end_token": 1497,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47719,
      329,
      257,
      4006,
      878,
      18788,
      11,
      12739,
      257,
      2551,
      966,
      287,
      262,
      2438,
      13
    ],
    "label": "ml_signal",
    "reason": "Checks for a condition before proceeding, indicating a decision point in the code."
  },
  {
    "line": 261,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Type hinting for variable, useful for understanding data flow and types.",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 1497,
    "end_token": 1497,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5994,
      9254,
      278,
      329,
      7885,
      11,
      4465,
      329,
      4547,
      1366,
      5202,
      290,
      3858,
      13
    ],
    "label": "ml_signal",
    "reason": "Type hinting for variable, useful for understanding data flow and types."
  },
  {
    "line": 263,
    "text": "                td_req.offset = Offset.CLOSETODAY",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic to handle optional data, indicating a pattern of handling None values.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      41560,
      62,
      42180,
      13,
      28968,
      796,
      3242,
      2617,
      13,
      5097,
      2640,
      2767,
      3727,
      4792
    ],
    "start_token": 1497,
    "end_token": 1526,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      284,
      5412,
      11902,
      1366,
      11,
      12739,
      257,
      3912,
      286,
      9041,
      6045,
      3815,
      13
    ],
    "label": "ml_signal",
    "reason": "Conditional logic to handle optional data, indicating a pattern of handling None values."
  },
  {
    "line": 265,
    "text": "                reqs.append(td_req)",
    "annotation": "\ud83e\udde0 ML Signal: Method call on an object, indicating object-oriented design and behavior.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      43089,
      82,
      13,
      33295,
      7,
      8671,
      62,
      42180,
      8
    ],
    "start_token": 1526,
    "end_token": 1550,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      869,
      319,
      281,
      2134,
      11,
      12739,
      2134,
      12,
      17107,
      1486,
      290,
      4069,
      13
    ],
    "label": "ml_signal",
    "reason": "Method call on an object, indicating object-oriented design and behavior."
  },
  {
    "line": 265,
    "text": "                reqs.append(td_req)",
    "annotation": "\u2705 Best Practice: Check if conversion is required before proceeding with the update",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      43089,
      82,
      13,
      33295,
      7,
      8671,
      62,
      42180,
      8
    ],
    "start_token": 1550,
    "end_token": 1574,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      611,
      11315,
      318,
      2672,
      878,
      18788,
      351,
      262,
      4296
    ],
    "label": "best_practice",
    "reason": "Check if conversion is required before proceeding with the update"
  },
  {
    "line": 268,
    "text": "                yd_volume: float = min(yd_available, volume_left)",
    "annotation": "\ud83e\udde0 ML Signal: Usage of type hinting for variable 'holding'",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      331,
      67,
      62,
      29048,
      25,
      12178,
      796,
      949,
      7,
      5173,
      62,
      15182,
      11,
      6115,
      62,
      9464,
      8
    ],
    "start_token": 1574,
    "end_token": 1606,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2099,
      9254,
      278,
      329,
      7885,
      705,
      19216,
      6
    ],
    "label": "ml_signal",
    "reason": "Usage of type hinting for variable 'holding'"
  },
  {
    "line": 270,
    "text": "",
    "annotation": "\u2705 Best Practice: Check if 'holding' is not None before calling update_order",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1606,
    "end_token": 1606,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      611,
      705,
      19216,
      6,
      318,
      407,
      6045,
      878,
      4585,
      4296,
      62,
      2875
    ],
    "label": "best_practice",
    "reason": "Check if 'holding' is not None before calling update_order"
  },
  {
    "line": 272,
    "text": "                yd_req.offset = Offset.CLOSEYESTERDAY",
    "annotation": "\u2705 Best Practice: Check if conversion is required before proceeding with the update",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      331,
      67,
      62,
      42180,
      13,
      28968,
      796,
      3242,
      2617,
      13,
      32737,
      43335,
      5781,
      26442
    ],
    "start_token": 1606,
    "end_token": 1635,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      611,
      11315,
      318,
      2672,
      878,
      18788,
      351,
      262,
      4296
    ],
    "label": "best_practice",
    "reason": "Check if conversion is required before proceeding with the update"
  },
  {
    "line": 275,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of type hinting for variable 'holding'",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1635,
    "end_token": 1635,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2099,
      9254,
      278,
      329,
      7885,
      705,
      19216,
      6
    ],
    "label": "ml_signal",
    "reason": "Usage of type hinting for variable 'holding'"
  },
  {
    "line": 278,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Method call on an object if it exists",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1635,
    "end_token": 1635,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      869,
      319,
      281,
      2134,
      611,
      340,
      7160
    ],
    "label": "ml_signal",
    "reason": "Method call on an object if it exists"
  },
  {
    "line": 279,
    "text": "                open_req: OrderRequest = copy(req)",
    "annotation": "\ud83e\udde0 ML Signal: Accessing a dictionary with a default value pattern",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1280,
      62,
      42180,
      25,
      8284,
      18453,
      796,
      4866,
      7,
      42180,
      8
    ],
    "start_token": 1635,
    "end_token": 1661,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8798,
      278,
      257,
      22155,
      351,
      257,
      4277,
      1988,
      3912
    ],
    "label": "ml_signal",
    "reason": "Accessing a dictionary with a default value pattern"
  },
  {
    "line": 282,
    "text": "                reqs.append(open_req)",
    "annotation": "\ud83e\udde0 ML Signal: Conditional logic to handle missing data",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      43089,
      82,
      13,
      33295,
      7,
      9654,
      62,
      42180,
      8
    ],
    "start_token": 1661,
    "end_token": 1685,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9724,
      1859,
      9156,
      284,
      5412,
      4814,
      1366
    ],
    "label": "ml_signal",
    "reason": "Conditional logic to handle missing data"
  },
  {
    "line": 285,
    "text": "        # Just use close for other exchanges",
    "annotation": "\ud83e\udde0 ML Signal: Object instantiation based on condition",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      2329,
      779,
      1969,
      329,
      584,
      14525
    ],
    "start_token": 1685,
    "end_token": 1699,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      9515,
      9113,
      3920,
      1912,
      319,
      4006
    ],
    "label": "ml_signal",
    "reason": "Object instantiation based on condition"
  },
  {
    "line": 286,
    "text": "        else:",
    "annotation": "\ud83e\udde0 ML Signal: Updating a dictionary with new data",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2073,
      25
    ],
    "start_token": 1699,
    "end_token": 1708,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      3205,
      38734,
      257,
      22155,
      351,
      649,
      1366
    ],
    "label": "ml_signal",
    "reason": "Updating a dictionary with new data"
  },
  {
    "line": 293,
    "text": "",
    "annotation": "\u2705 Best Practice: Check if conversion is required before proceeding with further logic",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 1708,
    "end_token": 1708,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      6822,
      611,
      11315,
      318,
      2672,
      878,
      18788,
      351,
      2252,
      9156
    ],
    "label": "best_practice",
    "reason": "Check if conversion is required before proceeding with further logic"
  },
  {
    "line": 296,
    "text": "                close_req.volume = close_volume",
    "annotation": "\u2705 Best Practice: Type hinting improves code readability and maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1969,
      62,
      42180,
      13,
      29048,
      796,
      1969,
      62,
      29048
    ],
    "start_token": 1708,
    "end_token": 1732,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting improves code readability and maintainability"
  },
  {
    "line": 300,
    "text": "                open_volume = volume_left",
    "annotation": "\u2705 Best Practice: Use of elif for mutually exclusive conditions improves readability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1280,
      62,
      29048,
      796,
      6115,
      62,
      9464
    ],
    "start_token": 1732,
    "end_token": 1754,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      1288,
      361,
      329,
      26519,
      8568,
      3403,
      19575,
      1100,
      1799
    ],
    "label": "best_practice",
    "reason": "Use of elif for mutually exclusive conditions improves readability"
  },
  {
    "line": 305,
    "text": "                reqs.append(open_req)",
    "annotation": "\u2705 Best Practice: Use of set for membership test is efficient",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      43089,
      82,
      13,
      33295,
      7,
      9654,
      62,
      42180,
      8
    ],
    "start_token": 1754,
    "end_token": 1778,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      900,
      329,
      9931,
      1332,
      318,
      6942
    ],
    "label": "best_practice",
    "reason": "Use of set for membership test is efficient"
  },
  {
    "line": 310,
    "text": "class OffsetConverter:",
    "annotation": "\ud83e\udde0 ML Signal: Usage of type hinting for function return and parameters",
    "confidence": 0.5,
    "tokens": [
      4871,
      3242,
      2617,
      3103,
      332,
      353,
      25
    ],
    "start_token": 1778,
    "end_token": 1785,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2099,
      9254,
      278,
      329,
      2163,
      1441,
      290,
      10007
    ],
    "label": "ml_signal",
    "reason": "Usage of type hinting for function return and parameters"
  },
  {
    "line": 312,
    "text": "",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Potential None dereference if get_contract returns None",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 1785,
    "end_token": 1785,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      32480,
      6045,
      390,
      35790,
      611,
      651,
      62,
      28484,
      5860,
      6045
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Potential None dereference if get_contract returns None"
  }
]