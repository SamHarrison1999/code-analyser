annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
"üß† ML Signal: Use of abstract base class pattern, indicating a design choice for extensibility","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 12531, 2779, 1398, 3912, 11, 12739, 257, 1486, 3572, 329, 1070, 641, 2247]",0.5,0,ml_signal,2,"Use of abstract base class pattern, indicating a design choice for extensibility",,0,,[]
"üß† ML Signal: Importing specific classes from a module, indicating selective usage","[8582, 100, 254, 10373, 26484, 25, 17267, 278, 2176, 6097, 422, 257, 8265, 11, 12739, 21792, 8748]",0.5,11,ml_signal,3,"Importing specific classes from a module, indicating selective usage",,0,"from vnpy.event import Event, EventEngine","[6738, 410, 77, 9078, 13, 15596, 1330, 8558, 11, 8558, 13798]"
"üß† ML Signal: Importing constants, indicating event-driven architecture","[8582, 100, 254, 10373, 26484, 25, 17267, 278, 38491, 11, 12739, 1785, 12, 15808, 10959]",0.5,12,ml_signal,13,"Importing constants, indicating event-driven architecture",,11,),[8]
"üß† ML Signal: Importing multiple data structures and request types, indicating a complex system","[8582, 100, 254, 10373, 26484, 25, 17267, 278, 3294, 1366, 8573, 290, 2581, 3858, 11, 12739, 257, 3716, 1080]",0.5,12,ml_signal,31,"Importing multiple data structures and request types, indicating a complex system",,12,,[]
‚úÖ Best Practice: Use of type hints for class attributes improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 20269, 329, 1398, 12608, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,19,best_practice,56,Use of type hints for class attributes improves code readability and maintainability.,,12,    * on_tick,"[220, 220, 220, 1635, 319, 62, 42298]"
‚úÖ Best Practice: Use of type hints for class attributes improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 20269, 329, 1398, 12608, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,26,best_practice,58,Use of type hints for class attributes improves code readability and maintainability.,,19,    * on_order,"[220, 220, 220, 1635, 319, 62, 2875]"
‚ö†Ô∏è SAST Risk (Low): Mutable default value for class attribute can lead to unexpected behavior if modified.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 13859, 540, 4277, 1988, 329, 1398, 11688, 460, 1085, 284, 10059, 4069, 611, 9518, 13]",1.0,33,sast_risk,60,Mutable default value for class attribute can lead to unexpected behavior if modified.,Low,26,    * on_account,"[220, 220, 220, 1635, 319, 62, 23317]"
‚úÖ Best Practice: Type annotations for constructor parameters improve code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5994, 37647, 329, 23772, 10007, 2987, 2438, 1100, 1799, 290, 5529, 1799, 13]",0.5,40,best_practice,61,Type annotations for constructor parameters improve code readability and maintainability.,,33,    * on_contract,"[220, 220, 220, 1635, 319, 62, 28484]"
‚úÖ Best Practice: Type annotations for instance variables improve code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5994, 37647, 329, 4554, 9633, 2987, 2438, 1100, 1799, 290, 5529, 1799, 13]",0.5,58,best_practice,63,Type annotations for instance variables improve code readability and maintainability.,,40,"    All the XxxData passed to callback should be constant, which means that","[220, 220, 220, 1439, 262, 1395, 5324, 6601, 3804, 284, 23838, 815, 307, 6937, 11, 543, 1724, 326]"
‚úÖ Best Practice: Use of type hints for function parameters and return type improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 20269, 329, 2163, 10007, 290, 1441, 2099, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",0.5,78,best_practice,64,Use of type hints for function parameters and return type improves code readability and maintainability.,,58,        the object should not be modified after passing to on_xxxx.,"[220, 220, 220, 220, 220, 220, 220, 262, 2134, 815, 407, 307, 9518, 706, 6427, 284, 319, 62, 12343, 13]"
üß† ML Signal: Instantiation of an Event object with type and data parameters could indicate a pattern of event-driven architecture.,"[8582, 100, 254, 10373, 26484, 25, 24470, 3920, 286, 281, 8558, 2134, 351, 2099, 290, 1366, 10007, 714, 7603, 257, 3912, 286, 1785, 12, 15808, 10959, 13]",0.5,78,ml_signal,69,Instantiation of an Event object with type and data parameters could indicate a pattern of event-driven architecture.,,78,,[]
üß† ML Signal: Usage of an event engine to handle events suggests a pattern of decoupled system components.,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 281, 1785, 3113, 284, 5412, 2995, 5644, 257, 3912, 286, 875, 280, 10137, 1080, 6805, 13]",0.5,82,ml_signal,70,Usage of an event engine to handle events suggests a pattern of decoupled system components.,,78,"    """"""","[220, 220, 220, 37227]"
"üß† ML Signal: Method handling tick data, useful for learning event-driven patterns","[8582, 100, 254, 10373, 26484, 25, 11789, 9041, 4378, 1366, 11, 4465, 329, 4673, 1785, 12, 15808, 7572]",1.0,82,ml_signal,74,"Method handling tick data, useful for learning event-driven patterns",,82,,[]
‚úÖ Best Practice: Use of descriptive method name and type hints for clarity,"[26486, 227, 6705, 19939, 25, 5765, 286, 35644, 2446, 1438, 290, 2099, 20269, 329, 16287]",1.0,95,best_practice,75,Use of descriptive method name and type hints for clarity,,82,    # Fields required in setting dict for connect function.,"[220, 220, 220, 1303, 23948, 2672, 287, 4634, 8633, 329, 2018, 2163, 13]"
üß† ML Signal: Usage of event-driven architecture with dynamic event identifiers,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 1785, 12, 15808, 10959, 351, 8925, 1785, 42814]",0.5,95,ml_signal,77,Usage of event-driven architecture with dynamic event identifiers,,95,,[]
‚ö†Ô∏è SAST Risk (Low): Potential risk if EVENT_TICK or tick.vt_symbol are user-controlled and not validated,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 49261, 62, 51, 11860, 393, 4378, 13, 36540, 62, 1837, 23650, 389, 2836, 12, 14401, 290, 407, 31031]",0.5,95,sast_risk,77,Potential risk if EVENT_TICK or tick.vt_symbol are user-controlled and not validated,Low,95,,[]
"üß† ML Signal: Handling events with specific identifiers, useful for learning event handling patterns","[8582, 100, 254, 10373, 26484, 25, 49500, 2995, 351, 2176, 42814, 11, 4465, 329, 4673, 1785, 9041, 7572]",0.5,121,ml_signal,81,"Handling events with specific identifiers, useful for learning event handling patterns",,95,"    def __init__(self, event_engine: EventEngine, gateway_name: str) -> None:","[220, 220, 220, 825, 11593, 15003, 834, 7, 944, 11, 1785, 62, 18392, 25, 8558, 13798, 11, 24308, 62, 3672, 25, 965, 8, 4613, 6045, 25]"
‚ö†Ô∏è SAST Risk (Low): Potential risk if tick.vt_symbol is user-controlled and not validated,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 4378, 13, 36540, 62, 1837, 23650, 318, 2836, 12, 14401, 290, 407, 31031]",0.5,147,sast_risk,81,Potential risk if tick.vt_symbol is user-controlled and not validated,Low,121,"    def __init__(self, event_engine: EventEngine, gateway_name: str) -> None:","[220, 220, 220, 825, 11593, 15003, 834, 7, 944, 11, 1785, 62, 18392, 25, 8558, 13798, 11, 24308, 62, 3672, 25, 965, 8, 4613, 6045, 25]"
"üß† ML Signal: Method handling trade events, useful for learning event-driven patterns","[8582, 100, 254, 10373, 26484, 25, 11789, 9041, 3292, 2995, 11, 4465, 329, 4673, 1785, 12, 15808, 7572]",1.0,173,ml_signal,81,"Method handling trade events, useful for learning event-driven patterns",,147,"    def __init__(self, event_engine: EventEngine, gateway_name: str) -> None:","[220, 220, 220, 825, 11593, 15003, 834, 7, 944, 11, 1785, 62, 18392, 25, 8558, 13798, 11, 24308, 62, 3672, 25, 965, 8, 4613, 6045, 25]"
‚úÖ Best Practice: Use of descriptive method name and type hinting for clarity,"[26486, 227, 6705, 19939, 25, 5765, 286, 35644, 2446, 1438, 290, 2099, 9254, 278, 329, 16287]",1.0,183,best_practice,82,Use of descriptive method name and type hinting for clarity,,173,"        """"""""""""","[220, 220, 220, 220, 220, 220, 220, 13538, 15931, 15931]"
üß† ML Signal: Pattern of event handling with dynamic event identifiers,"[8582, 100, 254, 10373, 26484, 25, 23939, 286, 1785, 9041, 351, 8925, 1785, 42814]",1.0,202,ml_signal,84,Pattern of event handling with dynamic event identifiers,,183,        self.gateway_name: str = gateway_name,"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 10494, 1014, 62, 3672, 25, 965, 796, 24308, 62, 3672]"
‚ö†Ô∏è SAST Risk (Low): Potential risk if EVENT_TRADE or trade.vt_symbol are not validated,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 49261, 62, 5446, 19266, 393, 3292, 13, 36540, 62, 1837, 23650, 389, 407, 31031]",1.0,221,sast_risk,84,Potential risk if EVENT_TRADE or trade.vt_symbol are not validated,Low,202,        self.gateway_name: str = gateway_name,"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 10494, 1014, 62, 3672, 25, 965, 796, 24308, 62, 3672]"
"üß† ML Signal: Handling events with specific identifiers, useful for learning event-driven patterns","[8582, 100, 254, 10373, 26484, 25, 49500, 2995, 351, 2176, 42814, 11, 4465, 329, 4673, 1785, 12, 15808, 7572]",1.0,232,ml_signal,88,"Handling events with specific identifiers, useful for learning event-driven patterns",,221,        General event push.,"[220, 220, 220, 220, 220, 220, 220, 3611, 1785, 4574, 13]"
‚ö†Ô∏è SAST Risk (Low): Potential risk if EVENT_TRADE or trade.vt_symbol are not validated,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 49261, 62, 5446, 19266, 393, 3292, 13, 36540, 62, 1837, 23650, 389, 407, 31031]",1.0,243,sast_risk,88,Potential risk if EVENT_TRADE or trade.vt_symbol are not validated,Low,232,        General event push.,"[220, 220, 220, 220, 220, 220, 220, 3611, 1785, 4574, 13]"
"üß† ML Signal: Method handling order events, useful for learning event-driven patterns.","[8582, 100, 254, 10373, 26484, 25, 11789, 9041, 1502, 2995, 11, 4465, 329, 4673, 1785, 12, 15808, 7572, 13]",1.0,254,ml_signal,88,"Method handling order events, useful for learning event-driven patterns.",,243,        General event push.,"[220, 220, 220, 220, 220, 220, 220, 3611, 1785, 4574, 13]"
‚úÖ Best Practice: Use of descriptive method name and docstring for clarity.,"[26486, 227, 6705, 19939, 25, 5765, 286, 35644, 2446, 1438, 290, 2205, 8841, 329, 16287, 13]",1.0,262,best_practice,89,Use of descriptive method name and docstring for clarity.,,254,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
"üß† ML Signal: Usage of event-driven architecture, useful for learning event handling patterns.","[8582, 100, 254, 10373, 26484, 25, 29566, 286, 1785, 12, 15808, 10959, 11, 4465, 329, 4673, 1785, 9041, 7572, 13]",0.5,279,ml_signal,91,"Usage of event-driven architecture, useful for learning event handling patterns.",,262,        self.event_engine.put(event),"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 15596, 62, 18392, 13, 1996, 7, 15596, 8]"
‚ö†Ô∏è SAST Risk (Low): Potential risk if EVENT_ORDER or order.vt_orderid are not properly validated.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 49261, 62, 12532, 1137, 393, 1502, 13, 36540, 62, 2875, 312, 389, 407, 6105, 31031, 13]",1.0,296,sast_risk,91,Potential risk if EVENT_ORDER or order.vt_orderid are not properly validated.,Low,279,        self.event_engine.put(event),"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 15596, 62, 18392, 13, 1996, 7, 15596, 8]"
"üß† ML Signal: Handling specific order events, useful for learning event-specific processing.","[8582, 100, 254, 10373, 26484, 25, 49500, 2176, 1502, 2995, 11, 4465, 329, 4673, 1785, 12, 11423, 7587, 13]",0.5,307,ml_signal,95,"Handling specific order events, useful for learning event-specific processing.",,296,        Tick event push.,"[220, 220, 220, 220, 220, 220, 220, 46093, 1785, 4574, 13]"
‚ö†Ô∏è SAST Risk (Low): Potential risk if concatenation of EVENT_ORDER and order.vt_orderid is not handled safely.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 1673, 36686, 341, 286, 49261, 62, 12532, 1137, 290, 1502, 13, 36540, 62, 2875, 312, 318, 407, 12118, 11512, 13]",0.5,318,sast_risk,95,Potential risk if concatenation of EVENT_ORDER and order.vt_orderid is not handled safely.,Low,307,        Tick event push.,"[220, 220, 220, 220, 220, 220, 220, 46093, 1785, 4574, 13]"
"üß† ML Signal: Method handling position events, useful for learning event-driven patterns","[8582, 100, 254, 10373, 26484, 25, 11789, 9041, 2292, 2995, 11, 4465, 329, 4673, 1785, 12, 15808, 7572]",0.5,329,ml_signal,95,"Method handling position events, useful for learning event-driven patterns",,318,        Tick event push.,"[220, 220, 220, 220, 220, 220, 220, 46093, 1785, 4574, 13]"
‚úÖ Best Practice: Use of docstring to describe the method's purpose,"[26486, 227, 6705, 19939, 25, 5765, 286, 2205, 8841, 284, 6901, 262, 2446, 338, 4007]",1.0,350,best_practice,96,Use of docstring to describe the method's purpose,,329,        Tick event of a specific vt_symbol is also pushed.,"[220, 220, 220, 220, 220, 220, 220, 46093, 1785, 286, 257, 2176, 410, 83, 62, 1837, 23650, 318, 635, 7121, 13]"
"üß† ML Signal: Event-driven architecture pattern, useful for ML models to learn from","[8582, 100, 254, 10373, 26484, 25, 8558, 12, 15808, 10959, 3912, 11, 4465, 329, 10373, 4981, 284, 2193, 422]",0.5,371,ml_signal,98,"Event-driven architecture pattern, useful for ML models to learn from",,350,"        self.on_event(EVENT_TICK, tick)","[220, 220, 220, 220, 220, 220, 220, 2116, 13, 261, 62, 15596, 7, 20114, 3525, 62, 51, 11860, 11, 4378, 8]"
‚ö†Ô∏è SAST Risk (Low): Potential risk if EVENT_POSITION is user-controlled and not validated,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 49261, 62, 37997, 17941, 318, 2836, 12, 14401, 290, 407, 31031]",0.5,392,sast_risk,98,Potential risk if EVENT_POSITION is user-controlled and not validated,Low,371,"        self.on_event(EVENT_TICK, tick)","[220, 220, 220, 220, 220, 220, 220, 2116, 13, 261, 62, 15596, 7, 20114, 3525, 62, 51, 11860, 11, 4378, 8]"
"üß† ML Signal: Handling events with dynamic identifiers, useful for learning dynamic event handling","[8582, 100, 254, 10373, 26484, 25, 49500, 2995, 351, 8925, 42814, 11, 4465, 329, 4673, 8925, 1785, 9041]",0.5,400,ml_signal,102,"Handling events with dynamic identifiers, useful for learning dynamic event handling",,392,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚ö†Ô∏è SAST Risk (Low): Potential risk if position.vt_symbol is user-controlled and not validated,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 2292, 13, 36540, 62, 1837, 23650, 318, 2836, 12, 14401, 290, 407, 31031]",1.0,408,sast_risk,102,Potential risk if position.vt_symbol is user-controlled and not validated,Low,400,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
"üß† ML Signal: Method handling account events, useful for learning event-driven patterns","[8582, 100, 254, 10373, 26484, 25, 11789, 9041, 1848, 2995, 11, 4465, 329, 4673, 1785, 12, 15808, 7572]",1.0,416,ml_signal,102,"Method handling account events, useful for learning event-driven patterns",,408,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚úÖ Best Practice: Use of descriptive method name and docstring for clarity,"[26486, 227, 6705, 19939, 25, 5765, 286, 35644, 2446, 1438, 290, 2205, 8841, 329, 16287]",1.0,427,best_practice,103,Use of descriptive method name and docstring for clarity,,416,        Trade event push.,"[220, 220, 220, 220, 220, 220, 220, 9601, 1785, 4574, 13]"
"üß† ML Signal: Event handling with specific account ID, useful for learning event-driven patterns","[8582, 100, 254, 10373, 26484, 25, 8558, 9041, 351, 2176, 1848, 4522, 11, 4465, 329, 4673, 1785, 12, 15808, 7572]",1.0,435,ml_signal,105,"Event handling with specific account ID, useful for learning event-driven patterns",,427,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
"‚úÖ Best Practice: Concatenating strings for event types, indicating dynamic event handling","[26486, 227, 6705, 19939, 25, 1482, 9246, 268, 803, 13042, 329, 1785, 3858, 11, 12739, 8925, 1785, 9041]",0.5,443,best_practice,105,"Concatenating strings for event types, indicating dynamic event handling",,435,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
üß† ML Signal: Method handling event-driven architecture,"[8582, 100, 254, 10373, 26484, 25, 11789, 9041, 1785, 12, 15808, 10959]",0.5,461,ml_signal,109,Method handling event-driven architecture,,443,"    def on_order(self, order: OrderData) -> None:","[220, 220, 220, 825, 319, 62, 2875, 7, 944, 11, 1502, 25, 8284, 6601, 8, 4613, 6045, 25]"
‚úÖ Best Practice: Use of descriptive method name for clarity,"[26486, 227, 6705, 19939, 25, 5765, 286, 35644, 2446, 1438, 329, 16287]",0.5,469,best_practice,110,Use of descriptive method name for clarity,,461,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
üß† ML Signal: Event handling with dynamic event types,"[8582, 100, 254, 10373, 26484, 25, 8558, 9041, 351, 8925, 1785, 3858]",0.5,490,ml_signal,112,Event handling with dynamic event types,,469,        Order event of a specific vt_orderid is also pushed.,"[220, 220, 220, 220, 220, 220, 220, 8284, 1785, 286, 257, 2176, 410, 83, 62, 2875, 312, 318, 635, 7121, 13]"
‚ö†Ô∏è SAST Risk (Low): Potential risk if EVENT_QUOTE or vt_symbol are user-controlled,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 49261, 62, 10917, 23051, 393, 410, 83, 62, 1837, 23650, 389, 2836, 12, 14401]",0.5,511,sast_risk,112,Potential risk if EVENT_QUOTE or vt_symbol are user-controlled,Low,490,        Order event of a specific vt_orderid is also pushed.,"[220, 220, 220, 220, 220, 220, 220, 8284, 1785, 286, 257, 2176, 410, 83, 62, 2875, 312, 318, 635, 7121, 13]"
"üß† ML Signal: Method for handling log events, useful for understanding event-driven patterns","[8582, 100, 254, 10373, 26484, 25, 11789, 329, 9041, 2604, 2995, 11, 4465, 329, 4547, 1785, 12, 15808, 7572]",1.0,539,ml_signal,115,"Method for handling log events, useful for understanding event-driven patterns",,511,"        self.on_event(EVENT_ORDER + order.vt_orderid, order)","[220, 220, 220, 220, 220, 220, 220, 2116, 13, 261, 62, 15596, 7, 20114, 3525, 62, 12532, 1137, 1343, 1502, 13, 36540, 62, 2875, 312, 11, 1502, 8]"
‚úÖ Best Practice: Use of type hinting for method parameters and return type,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 9254, 278, 329, 2446, 10007, 290, 1441, 2099]",0.5,539,best_practice,116,Use of type hinting for method parameters and return type,,539,,[]
üß† ML Signal: Method handling event-driven architecture,"[8582, 100, 254, 10373, 26484, 25, 11789, 9041, 1785, 12, 15808, 10959]",0.5,560,ml_signal,120,Method handling event-driven architecture,,539,        Position event of a specific vt_symbol is also pushed.,"[220, 220, 220, 220, 220, 220, 220, 23158, 1785, 286, 257, 2176, 410, 83, 62, 1837, 23650, 318, 635, 7121, 13]"
‚úÖ Best Practice: Use of type hinting for method parameters and return type,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 9254, 278, 329, 2446, 10007, 290, 1441, 2099]",0.5,568,best_practice,121,Use of type hinting for method parameters and return type,,560,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
üß† ML Signal: Usage of a logging function which could indicate logging patterns,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 18931, 2163, 543, 714, 7603, 18931, 7572]",0.5,586,ml_signal,125,Usage of a logging function which could indicate logging patterns,,568,"    def on_account(self, account: AccountData) -> None:","[220, 220, 220, 825, 319, 62, 23317, 7, 944, 11, 1848, 25, 10781, 6601, 8, 4613, 6045, 25]"
"üß† ML Signal: Invocation of a method with a specific object, indicating event handling","[8582, 100, 254, 10373, 26484, 25, 10001, 5040, 286, 257, 2446, 351, 257, 2176, 2134, 11, 12739, 1785, 9041]",0.5,594,ml_signal,126,"Invocation of a method with a specific object, indicating event handling",,586,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚úÖ Best Practice: Use of abstractmethod decorator to enforce implementation in subclasses,"[26486, 227, 6705, 19939, 25, 5765, 286, 12531, 24396, 11705, 1352, 284, 4605, 7822, 287, 850, 37724]",0.5,602,best_practice,129,Use of abstractmethod decorator to enforce implementation in subclasses,,594,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚úÖ Best Practice: Use of @abstractmethod indicates this method should be overridden in subclasses.,"[26486, 227, 6705, 19939, 25, 5765, 286, 2488, 397, 8709, 24396, 9217, 428, 2446, 815, 307, 23170, 4651, 287, 850, 37724, 13]",1.0,602,best_practice,146,Use of @abstractmethod indicates this method should be overridden in subclasses.,,602,,[]
‚úÖ Best Practice: Use of @abstractmethod indicates this method should be implemented by subclasses,"[26486, 227, 6705, 19939, 25, 5765, 286, 2488, 397, 8709, 24396, 9217, 428, 2446, 815, 307, 9177, 416, 850, 37724]",1.0,610,best_practice,150,Use of @abstractmethod indicates this method should be implemented by subclasses,,602,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚úÖ Best Practice: Include type hints for method parameters and return type for better readability and maintainability.,"[26486, 227, 6705, 19939, 25, 40348, 2099, 20269, 329, 2446, 10007, 290, 1441, 2099, 329, 1365, 1100, 1799, 290, 5529, 1799, 13]",0.5,627,best_practice,153,Include type hints for method parameters and return type for better readability and maintainability.,,610,"    def write_log(self, msg: str) -> None:","[220, 220, 220, 825, 3551, 62, 6404, 7, 944, 11, 31456, 25, 965, 8, 4613, 6045, 25]"
‚úÖ Best Practice: Use @abstractmethod to enforce implementation of this method in subclasses.,"[26486, 227, 6705, 19939, 25, 5765, 2488, 397, 8709, 24396, 284, 4605, 7822, 286, 428, 2446, 287, 850, 37724, 13]",0.5,627,best_practice,159,Use @abstractmethod to enforce implementation of this method in subclasses.,,627,,[]
‚úÖ Best Practice: Use of @abstractmethod indicates this method should be implemented by subclasses,"[26486, 227, 6705, 19939, 25, 5765, 286, 2488, 397, 8709, 24396, 9217, 428, 2446, 815, 307, 9177, 416, 850, 37724]",1.0,645,best_practice,171,Use of @abstractmethod indicates this method should be implemented by subclasses,,627,            * account holding: on_position,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1635, 1848, 4769, 25, 319, 62, 9150]"
‚úÖ Best Practice: Include a docstring to describe the method's purpose and tasks,"[26486, 227, 6705, 19939, 25, 40348, 257, 2205, 8841, 284, 6901, 262, 2446, 338, 4007, 290, 8861]",1.0,664,best_practice,173,Include a docstring to describe the method's purpose and tasks,,645,            * trades of account: on_trade,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1635, 17674, 286, 1848, 25, 319, 62, 25351]"
‚úÖ Best Practice: Use 'pass' as a placeholder for future implementation,"[26486, 227, 6705, 19939, 25, 5765, 705, 6603, 6, 355, 257, 46076, 329, 2003, 7822]",0.5,672,best_practice,180,Use 'pass' as a placeholder for future implementation,,664,        pass,"[220, 220, 220, 220, 220, 220, 220, 1208]"
‚úÖ Best Practice: Return a meaningful value or raise NotImplementedError if the method is not yet implemented,"[26486, 227, 6705, 19939, 25, 8229, 257, 11570, 1988, 393, 5298, 1892, 3546, 1154, 12061, 12331, 611, 262, 2446, 318, 407, 1865, 9177]",0.5,680,best_practice,193,Return a meaningful value or raise NotImplementedError if the method is not yet implemented,,672,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
‚úÖ Best Practice: Include a docstring to describe the method's purpose and behavior,"[26486, 227, 6705, 19939, 25, 40348, 257, 2205, 8841, 284, 6901, 262, 2446, 338, 4007, 290, 4069]",1.0,680,best_practice,195,Include a docstring to describe the method's purpose and behavior,,680,,[]
‚úÖ Best Practice: Use decorators like @abstractmethod to enforce method implementation in subclasses,"[26486, 227, 6705, 19939, 25, 5765, 11705, 2024, 588, 2488, 397, 8709, 24396, 284, 4605, 2446, 7822, 287, 850, 37724]",1.0,703,best_practice,202,Use decorators like @abstractmethod to enforce method implementation in subclasses,,680,        * create an OrderData from req using OrderRequest.create_order_data,"[220, 220, 220, 220, 220, 220, 220, 1635, 2251, 281, 8284, 6601, 422, 43089, 1262, 8284, 18453, 13, 17953, 62, 2875, 62, 7890]"
‚úÖ Best Practice: Use of type hint for return value improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 9254, 329, 1441, 1988, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,703,best_practice,209,Use of type hint for return value improves code readability and maintainability.,,703,,[]
‚úÖ Best Practice: Include a docstring to describe the method's purpose,"[26486, 227, 6705, 19939, 25, 40348, 257, 2205, 8841, 284, 6901, 262, 2446, 338, 4007]",1.0,710,best_practice,214,Include a docstring to describe the method's purpose,,703,    @abstractmethod,"[220, 220, 220, 2488, 397, 8709, 24396]"
‚úÖ Best Practice: Return an empty list as a default value,"[26486, 227, 6705, 19939, 25, 8229, 281, 6565, 1351, 355, 257, 4277, 1988]",1.0,724,best_practice,218,Return an empty list as a default value,,710,        implementation should finish the tasks blow:,"[220, 220, 220, 220, 220, 220, 220, 7822, 815, 5461, 262, 8861, 6611, 25]"
‚úÖ Best Practice: Type hinting improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5994, 9254, 278, 19575, 2438, 1100, 1799, 290, 5529, 1799]",1.0,736,best_practice,219,Type hinting improves code readability and maintainability,,724,        * send request to server,"[220, 220, 220, 220, 220, 220, 220, 1635, 3758, 2581, 284, 4382]"
"üß† ML Signal: Accessing an instance attribute, indicating a pattern of object-oriented design","[8582, 100, 254, 10373, 26484, 25, 8798, 278, 281, 4554, 11688, 11, 12739, 257, 3912, 286, 2134, 12, 17107, 1486]",1.0,736,ml_signal,222,"Accessing an instance attribute, indicating a pattern of object-oriented design",,736,,[]
