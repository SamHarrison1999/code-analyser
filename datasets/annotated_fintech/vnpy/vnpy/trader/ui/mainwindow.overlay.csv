annotation,annotation_tokens,confidence,end_token,label,line,reason,severity,start_token,text,tokens
✅ Best Practice: Grouping standard library imports at the top improves readability and maintainability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 3210, 5888, 17944, 379, 262, 1353, 19575, 1100, 1799, 290, 5529, 1799, 13]",1.0,0,best_practice,4,Grouping standard library imports at the top improves readability and maintainability.,,0,,[]
✅ Best Practice: Grouping standard library imports at the top improves readability and maintainability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 3210, 5888, 17944, 379, 262, 1353, 19575, 1100, 1799, 290, 5529, 1799, 13]",1.0,3,best_practice,6,Grouping standard library imports at the top improves readability and maintainability.,,0,import webbrowser,"[11748, 3992, 40259]"
✅ Best Practice: Grouping standard library imports at the top improves readability and maintainability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 3210, 5888, 17944, 379, 262, 1353, 19575, 1100, 1799, 290, 5529, 1799, 13]",1.0,10,best_practice,8,Grouping standard library imports at the top improves readability and maintainability.,,3,from importlib import import_module,"[6738, 1330, 8019, 1330, 1330, 62, 21412]"
✅ Best Practice: Grouping standard library imports at the top improves readability and maintainability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 3210, 5888, 17944, 379, 262, 1353, 19575, 1100, 1799, 290, 5529, 1799, 13]",1.0,17,best_practice,10,Grouping standard library imports at the top improves readability and maintainability.,,10,from collections.abc import Callable,"[6738, 17268, 13, 39305, 1330, 4889, 540]"
✅ Best Practice: Grouping standard library imports at the top improves readability and maintainability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 3210, 5888, 17944, 379, 262, 1353, 19575, 1100, 1799, 290, 5529, 1799, 13]",1.0,21,best_practice,12,Grouping standard library imports at the top improves readability and maintainability.,,17,import vnpy,"[11748, 410, 77, 9078]"
✅ Best Practice: Grouping standard library imports at the top improves readability and maintainability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 3210, 5888, 17944, 379, 262, 1353, 19575, 1100, 1799, 290, 5529, 1799, 13]",1.0,30,best_practice,13,Grouping standard library imports at the top improves readability and maintainability.,,21,from vnpy.event import EventEngine,"[6738, 410, 77, 9078, 13, 15596, 1330, 8558, 13798]"
✅ Best Practice: Grouping third-party library imports separately improves readability and maintainability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 2368, 12, 10608, 5888, 17944, 13869, 19575, 1100, 1799, 290, 5529, 1799, 13]",1.0,39,best_practice,13,Grouping third-party library imports separately improves readability and maintainability.,,30,from vnpy.event import EventEngine,"[6738, 410, 77, 9078, 13, 15596, 1330, 8558, 13798]"
✅ Best Practice: Grouping third-party library imports separately improves readability and maintainability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 2368, 12, 10608, 5888, 17944, 13869, 19575, 1100, 1799, 290, 5529, 1799, 13]",1.0,48,best_practice,13,Grouping third-party library imports separately improves readability and maintainability.,,39,from vnpy.event import EventEngine,"[6738, 410, 77, 9078, 13, 15596, 1330, 8558, 13798]"
✅ Best Practice: Grouping local application/library specific imports separately improves readability and maintainability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 1957, 3586, 14, 32016, 2176, 17944, 13869, 19575, 1100, 1799, 290, 5529, 1799, 13]",1.0,57,best_practice,13,Grouping local application/library specific imports separately improves readability and maintainability.,,48,from vnpy.event import EventEngine,"[6738, 410, 77, 9078, 13, 15596, 1330, 8558, 13798]"
✅ Best Practice: Grouping local application/library specific imports separately improves readability and maintainability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 1957, 3586, 14, 32016, 2176, 17944, 13869, 19575, 1100, 1799, 290, 5529, 1799, 13]",1.0,63,best_practice,28,Grouping local application/library specific imports separately improves readability and maintainability.,,57,"    AboutDialog,","[220, 220, 220, 7994, 44204, 11]"
✅ Best Practice: Grouping local application/library specific imports separately improves readability and maintainability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 1957, 3586, 14, 32016, 2176, 17944, 13869, 19575, 1100, 1799, 290, 5529, 1799, 13]",1.0,63,best_practice,38,Grouping local application/library specific imports separately improves readability and maintainability.,,63,,[]
✅ Best Practice: Grouping local application/library specific imports separately improves readability and maintainability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 1957, 3586, 14, 32016, 2176, 17944, 13869, 19575, 1100, 1799, 290, 5529, 1799, 13]",1.0,67,best_practice,40,Grouping local application/library specific imports separately improves readability and maintainability.,,63,"    """"""","[220, 220, 220, 37227]"
✅ Best Practice: Grouping local application/library specific imports separately improves readability and maintainability.,"[26486, 227, 6705, 19939, 25, 4912, 278, 1957, 3586, 14, 32016, 2176, 17944, 13869, 19575, 1100, 1799, 290, 5529, 1799, 13]",1.0,71,best_practice,42,Grouping local application/library specific imports separately improves readability and maintainability.,,67,"    """"""","[220, 220, 220, 37227]"
"🧠 ML Signal: Use of TypeVar indicates generic programming, which can be a signal for type inference models.","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 5994, 19852, 9217, 14276, 8300, 11, 543, 460, 307, 257, 6737, 329, 2099, 32278, 4981, 13]",0.5,98,ml_signal,44,"Use of TypeVar indicates generic programming, which can be a signal for type inference models.",,71,"    def __init__(self, main_engine: MainEngine, event_engine: EventEngine) -> None:","[220, 220, 220, 825, 11593, 15003, 834, 7, 944, 11, 1388, 62, 18392, 25, 8774, 13798, 11, 1785, 62, 18392, 25, 8558, 13798, 8, 4613, 6045, 25]"
"🧠 ML Signal: Class definition for a GUI application, indicating a pattern for UI-based applications","[8582, 100, 254, 10373, 26484, 25, 5016, 6770, 329, 257, 25757, 3586, 11, 12739, 257, 3912, 329, 12454, 12, 3106, 5479]",0.5,114,ml_signal,32,"Class definition for a GUI application, indicating a pattern for UI-based applications",,98,"from ..utility import get_icon_path, TRADER_DIR","[6738, 11485, 315, 879, 1330, 651, 62, 4749, 62, 6978, 11, 7579, 2885, 1137, 62, 34720]"
🧠 ML Signal: Use of internationalization with _() function,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 3230, 1634, 351, 4808, 3419, 2163]",0.5,124,ml_signal,41,Use of internationalization with _() function,,114,    Main window of the trading platform.,"[220, 220, 220, 8774, 4324, 286, 262, 7313, 3859, 13]"
✅ Best Practice: Use of type hints for dictionary with specific key-value types,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 20269, 329, 22155, 351, 2176, 1994, 12, 8367, 3858]",0.5,124,best_practice,43,Use of type hints for dictionary with specific key-value types,,124,,[]
✅ Best Practice: Use of type hints for dictionary with specific key-value types,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 20269, 329, 22155, 351, 2176, 1994, 12, 8367, 3858]",0.5,134,best_practice,45,Use of type hints for dictionary with specific key-value types,,124,"        """"""""""""","[220, 220, 220, 220, 220, 220, 220, 13538, 15931, 15931]"
🧠 ML Signal: Initialization of UI components in a dedicated method,"[8582, 100, 254, 10373, 26484, 25, 20768, 1634, 286, 12454, 6805, 287, 257, 7256, 2446]",0.5,134,ml_signal,47,Initialization of UI components in a dedicated method,,134,,[]
🧠 ML Signal: Method names starting with 'init_' suggest initialization patterns,"[8582, 100, 254, 10373, 26484, 25, 11789, 3891, 3599, 351, 705, 15003, 62, 6, 1950, 37588, 7572]",1.0,134,ml_signal,47,Method names starting with 'init_' suggest initialization patterns,,134,,[]
🧠 ML Signal: UI setup methods often follow a specific sequence,"[8582, 100, 254, 10373, 26484, 25, 12454, 9058, 5050, 1690, 1061, 257, 2176, 8379]",1.0,153,ml_signal,49,UI setup methods often follow a specific sequence,,134,        self.event_engine: EventEngine = event_engine,"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 15596, 62, 18392, 25, 8558, 13798, 796, 1785, 62, 18392]"
🧠 ML Signal: UI setup methods often follow a specific sequence,"[8582, 100, 254, 10373, 26484, 25, 12454, 9058, 5050, 1690, 1061, 257, 2176, 8379]",1.0,205,ml_signal,51,UI setup methods often follow a specific sequence,,153,"        self.window_title: str = _(""VeighNa Trader 社区版 - {}   [{}]"").format(vnpy.__version__, TRADER_DIR)","[220, 220, 220, 220, 220, 220, 220, 2116, 13, 17497, 62, 7839, 25, 965, 796, 4808, 7203, 26979, 394, 26705, 41956, 13328, 97, 122, 44293, 118, 48304, 532, 23884, 220, 220, 685, 90, 92, 60, 11074, 18982, 7, 85, 77, 9078, 13, 834, 9641, 834, 11, 7579, 2885, 1137, 62, 34720, 8]"
🧠 ML Signal: UI setup methods often follow a specific sequence,"[8582, 100, 254, 10373, 26484, 25, 12454, 9058, 5050, 1690, 1061, 257, 2176, 8379]",1.0,231,ml_signal,53,UI setup methods often follow a specific sequence,,205,"        self.widgets: dict[str, QtWidgets.QWidget] = {}","[220, 220, 220, 220, 220, 220, 220, 2116, 13, 28029, 11407, 25, 8633, 58, 2536, 11, 33734, 54, 312, 11407, 13, 48, 38300, 60, 796, 23884]"
🧠 ML Signal: Loading settings is a common pattern in UI initialization,"[8582, 100, 254, 10373, 26484, 25, 12320, 6460, 318, 257, 2219, 3912, 287, 12454, 37588]",1.0,252,ml_signal,54,Loading settings is a common pattern in UI initialization,,231,"        self.monitors: dict[str, BaseMonitor] = {}","[220, 220, 220, 220, 220, 220, 220, 2116, 13, 2144, 6742, 25, 8633, 58, 2536, 11, 7308, 35479, 60, 796, 23884]"
🧠 ML Signal: Usage of a method to create and initialize dock widgets,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2446, 284, 2251, 290, 41216, 23423, 40803]",1.0,273,ml_signal,54,Usage of a method to create and initialize dock widgets,,252,"        self.monitors: dict[str, BaseMonitor] = {}","[220, 220, 220, 220, 220, 220, 220, 2116, 13, 2144, 6742, 25, 8633, 58, 2536, 11, 7308, 35479, 60, 796, 23884]"
🧠 ML Signal: Usage of a method to create and initialize dock widgets,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2446, 284, 2251, 290, 41216, 23423, 40803]",1.0,273,ml_signal,57,Usage of a method to create and initialize dock widgets,,273,,[]
🧠 ML Signal: Usage of a method to create and initialize dock widgets,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2446, 284, 2251, 290, 41216, 23423, 40803]",1.0,286,ml_signal,63,Usage of a method to create and initialize dock widgets,,273,        self.init_menu(),"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 15003, 62, 26272, 3419]"
🧠 ML Signal: Usage of a method to create and initialize dock widgets,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2446, 284, 2251, 290, 41216, 23423, 40803]",1.0,300,ml_signal,66,Usage of a method to create and initialize dock widgets,,286,    def init_dock(self) -> None:,"[220, 220, 220, 825, 2315, 62, 67, 735, 7, 944, 8, 4613, 6045, 25]"
🧠 ML Signal: Usage of a method to create and initialize dock widgets,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2446, 284, 2251, 290, 41216, 23423, 40803]",1.0,337,ml_signal,69,Usage of a method to create and initialize dock widgets,,300,"            TradingWidget, _(""交易""), QtCore.Qt.DockWidgetArea.LeftDockWidgetArea","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 25469, 38300, 11, 4808, 7203, 12859, 97, 23626, 241, 12340, 33734, 14055, 13, 48, 83, 13, 35, 735, 38300, 30547, 13, 18819, 35, 735, 38300, 30547]"
🧠 ML Signal: Usage of a method to create and initialize dock widgets,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2446, 284, 2251, 290, 41216, 23423, 40803]",1.0,374,ml_signal,75,Usage of a method to create and initialize dock widgets,,337,"            OrderMonitor, _(""委托""), QtCore.Qt.DockWidgetArea.RightDockWidgetArea","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 8284, 35479, 11, 4808, 7203, 34650, 242, 33699, 246, 12340, 33734, 14055, 13, 48, 83, 13, 35, 735, 38300, 30547, 13, 11028, 35, 735, 38300, 30547]"
🧠 ML Signal: Usage of a method to create and initialize dock widgets,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2446, 284, 2251, 290, 41216, 23423, 40803]",1.0,413,ml_signal,78,Usage of a method to create and initialize dock widgets,,374,"            ActiveOrderMonitor, _(""活动""), QtCore.Qt.DockWidgetArea.RightDockWidgetArea","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 14199, 18743, 35479, 11, 4808, 7203, 162, 112, 119, 27950, 101, 12340, 33734, 14055, 13, 48, 83, 13, 35, 735, 38300, 30547, 13, 11028, 35, 735, 38300, 30547]"
🧠 ML Signal: Usage of a method to create and initialize dock widgets,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 257, 2446, 284, 2251, 290, 41216, 23423, 40803]",1.0,421,ml_signal,82,Usage of a method to create and initialize dock widgets,,413,        ),"[220, 220, 220, 220, 220, 220, 220, 1267]"
🧠 ML Signal: Usage of tabifying dock widgets,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 7400, 4035, 23423, 40803]",1.0,444,ml_signal,86,Usage of tabifying dock widgets,,421,"        account_widget, account_dock = self.create_dock(","[220, 220, 220, 220, 220, 220, 220, 1848, 62, 42655, 11, 1848, 62, 67, 735, 796, 2116, 13, 17953, 62, 67, 735, 7]"
🧠 ML Signal: Saving window settings,"[8582, 100, 254, 10373, 26484, 25, 34689, 4324, 6460]",0.5,452,ml_signal,88,Saving window settings,,444,        ),"[220, 220, 220, 220, 220, 220, 220, 1267]"
⚠️ SAST Risk (Low): Potential for unhandled exceptions if the connection fails,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 555, 38788, 13269, 611, 262, 4637, 10143]",0.5,490,sast_risk,90,Potential for unhandled exceptions if the connection fails,Low,452,"            PositionMonitor, _(""持仓""), QtCore.Qt.DockWidgetArea.BottomDockWidgetArea","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 23158, 35479, 11, 4808, 7203, 162, 234, 223, 20015, 241, 12340, 33734, 14055, 13, 48, 83, 13, 35, 735, 38300, 30547, 13, 34104, 35, 735, 38300, 30547]"
⚠️ SAST Risk (Low): Potential for unhandled exceptions if the connection fails,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 555, 38788, 13269, 611, 262, 4637, 10143]",0.5,528,sast_risk,90,Potential for unhandled exceptions if the connection fails,Low,490,"            PositionMonitor, _(""持仓""), QtCore.Qt.DockWidgetArea.BottomDockWidgetArea","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 23158, 35479, 11, 4808, 7203, 162, 234, 223, 20015, 241, 12340, 33734, 14055, 13, 48, 83, 13, 35, 735, 38300, 30547, 13, 34104, 35, 735, 38300, 30547]"
🧠 ML Signal: Usage of QtWidgets for GUI menu creation,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 33734, 54, 312, 11407, 329, 25757, 6859, 6282]",0.5,565,ml_signal,84,Usage of QtWidgets for GUI menu creation,,528,"            LogMonitor, _(""日志""), QtCore.Qt.DockWidgetArea.BottomDockWidgetArea","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 5972, 35479, 11, 4808, 7203, 33768, 98, 33232, 245, 12340, 33734, 14055, 13, 48, 83, 13, 35, 735, 38300, 30547, 13, 34104, 35, 735, 38300, 30547]"
✅ Best Practice: Explicitly setting native menu bar to False for cross-platform consistency,"[26486, 227, 6705, 19939, 25, 11884, 306, 4634, 6868, 6859, 2318, 284, 10352, 329, 3272, 12, 24254, 15794]",1.0,588,best_practice,86,Explicitly setting native menu bar to False for cross-platform consistency,,565,"        account_widget, account_dock = self.create_dock(","[220, 220, 220, 220, 220, 220, 220, 1848, 62, 42655, 11, 1848, 62, 67, 735, 796, 2116, 13, 17953, 62, 67, 735, 7]"
🧠 ML Signal: Adding a system menu with localization support,"[8582, 100, 254, 10373, 26484, 25, 18247, 257, 1080, 6859, 351, 42842, 1104]",0.5,596,ml_signal,88,Adding a system menu with localization support,,588,        ),"[220, 220, 220, 220, 220, 220, 220, 1267]"
🧠 ML Signal: Dynamic retrieval of gateway names,"[8582, 100, 254, 10373, 26484, 25, 26977, 45069, 286, 24308, 3891]",0.5,634,ml_signal,90,Dynamic retrieval of gateway names,,596,"            PositionMonitor, _(""持仓""), QtCore.Qt.DockWidgetArea.BottomDockWidgetArea","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 23158, 35479, 11, 4808, 7203, 162, 234, 223, 20015, 241, 12340, 33734, 14055, 13, 48, 83, 13, 35, 735, 38300, 30547, 13, 34104, 35, 735, 38300, 30547]"
🧠 ML Signal: Use of partial to bind function arguments,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 13027, 284, 11007, 2163, 7159]",0.5,672,ml_signal,90,Use of partial to bind function arguments,,634,"            PositionMonitor, _(""持仓""), QtCore.Qt.DockWidgetArea.BottomDockWidgetArea","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 23158, 35479, 11, 4808, 7203, 162, 234, 223, 20015, 241, 12340, 33734, 14055, 13, 48, 83, 13, 35, 735, 38300, 30547, 13, 34104, 35, 735, 38300, 30547]"
🧠 ML Signal: Adding actions to the menu with icons and callbacks,"[8582, 100, 254, 10373, 26484, 25, 18247, 4028, 284, 262, 6859, 351, 17149, 290, 869, 10146]",0.5,672,ml_signal,96,Adding actions to the menu with icons and callbacks,,672,,[]
🧠 ML Signal: Adding a separator in the menu,"[8582, 100, 254, 10373, 26484, 25, 18247, 257, 2880, 1352, 287, 262, 6859]",1.0,697,ml_signal,103,Adding a separator in the menu,,672,        bar.setNativeMenuBar(False)     # for mac and linux,"[220, 220, 220, 220, 220, 220, 220, 2318, 13, 2617, 31272, 23381, 10374, 7, 25101, 8, 220, 220, 220, 220, 1303, 329, 8352, 290, 32639]"
🧠 ML Signal: Adding an exit action to the system menu,"[8582, 100, 254, 10373, 26484, 25, 18247, 281, 8420, 2223, 284, 262, 1080, 6859]",1.0,697,ml_signal,104,Adding an exit action to the system menu,,697,,[]
🧠 ML Signal: Adding an application menu with localization support,"[8582, 100, 254, 10373, 26484, 25, 18247, 281, 3586, 6859, 351, 42842, 1104]",0.5,714,ml_signal,111,Adding an application menu with localization support,,697,            self.add_action(,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 2860, 62, 2673, 7]"
🧠 ML Signal: Dynamic retrieval of all applications,"[8582, 100, 254, 10373, 26484, 25, 26977, 45069, 286, 477, 5479]",0.5,743,ml_signal,113,Dynamic retrieval of all applications,,714,"                _(""连接{}"").format(name),","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4808, 7203, 32573, 252, 162, 236, 98, 90, 92, 11074, 18982, 7, 3672, 828]"
⚠️ SAST Risk (Medium): Dynamic import of modules can lead to code execution risks,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 26977, 1330, 286, 13103, 460, 1085, 284, 2438, 9706, 7476]",0.5,773,sast_risk,114,Dynamic import of modules can lead to code execution risks,Medium,743,"                get_icon_path(__file__, ""connect.ico""),","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 651, 62, 4749, 62, 6978, 7, 834, 7753, 834, 11, 366, 8443, 13, 3713, 12340]"
⚠️ SAST Risk (Medium): Use of getattr can lead to attribute access risks,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 31205, 2599, 5765, 286, 651, 35226, 460, 1085, 284, 11688, 1895, 7476]",0.5,788,sast_risk,121,Use of getattr can lead to attribute access risks,Medium,773,"            sys_menu,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 25064, 62, 26272, 11]"
🧠 ML Signal: Use of partial to bind function arguments,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 13027, 284, 11007, 2163, 7159]",0.5,803,ml_signal,121,Use of partial to bind function arguments,,788,"            sys_menu,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 25064, 62, 26272, 11]"
🧠 ML Signal: Adding actions to the menu with icons and callbacks,"[8582, 100, 254, 10373, 26484, 25, 18247, 4028, 284, 262, 6859, 351, 17149, 290, 869, 10146]",0.5,818,ml_signal,121,Adding actions to the menu with icons and callbacks,,803,"            sys_menu,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 25064, 62, 26272, 11]"
🧠 ML Signal: Creating a QAction for configuration,"[8582, 100, 254, 10373, 26484, 25, 30481, 257, 1195, 12502, 329, 8398]",1.0,833,ml_signal,121,Creating a QAction for configuration,,818,"            sys_menu,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 25064, 62, 26272, 11]"
🧠 ML Signal: Connecting QAction to a slot,"[8582, 100, 254, 10373, 26484, 25, 8113, 278, 1195, 12502, 284, 257, 10852]",1.0,843,ml_signal,127,Connecting QAction to a slot,,833,        # App menu,"[220, 220, 220, 220, 220, 220, 220, 1303, 2034, 6859]"
🧠 ML Signal: Adding action to the menu bar,"[8582, 100, 254, 10373, 26484, 25, 18247, 2223, 284, 262, 6859, 2318]",1.0,853,ml_signal,127,Adding action to the menu bar,,843,        # App menu,"[220, 220, 220, 220, 220, 220, 220, 1303, 2034, 6859]"
🧠 ML Signal: Adding a help menu with localization support,"[8582, 100, 254, 10373, 26484, 25, 18247, 257, 1037, 6859, 351, 42842, 1104]",0.5,863,ml_signal,127,Adding a help menu with localization support,,853,        # App menu,"[220, 220, 220, 220, 220, 220, 220, 1303, 2034, 6859]"
🧠 ML Signal: Adding actions to the help menu with icons and callbacks,"[8582, 100, 254, 10373, 26484, 25, 18247, 4028, 284, 262, 1037, 6859, 351, 17149, 290, 869, 10146]",1.0,903,ml_signal,133,Adding actions to the help menu with icons and callbacks,,863,"            widget_class: type[QtWidgets.QWidget] = getattr(ui_module, app.widget_name)","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 26295, 62, 4871, 25, 2099, 58, 48, 83, 54, 312, 11407, 13, 48, 38300, 60, 796, 651, 35226, 7, 9019, 62, 21412, 11, 598, 13, 42655, 62, 3672, 8]"
✅ Best Practice: Type hinting for self.toolbar improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5994, 9254, 278, 329, 2116, 13, 25981, 5657, 19575, 2438, 1100, 1799, 290, 5529, 1799]",0.5,918,best_practice,148,Type hinting for self.toolbar improves code readability and maintainability,,903,"            help_menu,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1037, 62, 26272, 11]"
🧠 ML Signal: Use of setObjectName with a localized string indicates internationalization support,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 900, 10267, 5376, 351, 257, 36618, 4731, 9217, 3230, 1634, 1104]",0.5,944,ml_signal,150,Use of setObjectName with a localized string indicates internationalization support,,918,"            get_icon_path(__file__, ""contract.ico""),","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 651, 62, 4749, 62, 6978, 7, 834, 7753, 834, 11, 366, 28484, 13, 3713, 12340]"
✅ Best Practice: Disabling floatable and movable properties for a toolbar can improve UI consistency,"[26486, 227, 6705, 19939, 25, 3167, 11716, 12178, 540, 290, 1409, 540, 6608, 329, 257, 50149, 460, 2987, 12454, 15794]",0.5,956,best_practice,152,Disabling floatable and movable properties for a toolbar can improve UI consistency,,944,            True,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 6407]"
✅ Best Practice: Type hinting for variable 'w' improves code readability,"[26486, 227, 6705, 19939, 25, 5994, 9254, 278, 329, 7885, 705, 86, 6, 19575, 2438, 1100, 1799]",0.5,969,best_practice,155,Type hinting for variable 'w' improves code readability,,956,        self.add_action(,"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 2860, 62, 2673, 7]"
✅ Best Practice: Using a variable for size improves maintainability and readability,"[26486, 227, 6705, 19939, 25, 8554, 257, 7885, 329, 2546, 19575, 5529, 1799, 290, 1100, 1799]",0.5,992,best_practice,157,Using a variable for size improves maintainability and readability,,969,"            _(""还原窗口""),","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4808, 7203, 32573, 246, 43889, 253, 163, 103, 245, 20998, 96, 12340]"
✅ Best Practice: Type hinting for layout improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5994, 9254, 278, 329, 12461, 19575, 2438, 1100, 1799, 290, 5529, 1799]",0.5,1011,best_practice,159,Type hinting for layout improves code readability and maintainability,,992,            self.restore_window_setting,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 2118, 382, 62, 17497, 62, 33990]"
✅ Best Practice: Setting spacing for layout improves UI consistency,"[26486, 227, 6705, 19939, 25, 25700, 31050, 329, 12461, 19575, 12454, 15794]",0.5,1030,best_practice,159,Setting spacing for layout improves UI consistency,,1011,            self.restore_window_setting,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 2118, 382, 62, 17497, 62, 33990]"
🧠 ML Signal: Adding toolbar to a specific area indicates a fixed UI layout pattern,"[8582, 100, 254, 10373, 26484, 25, 18247, 50149, 284, 257, 2176, 1989, 9217, 257, 5969, 12454, 12461, 3912]",0.5,1056,ml_signal,165,Adding toolbar to a specific area indicates a fixed UI layout pattern,,1030,"            get_icon_path(__file__, ""email.ico""),","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 651, 62, 4749, 62, 6978, 7, 834, 7753, 834, 11, 366, 12888, 13, 3713, 12340]"
✅ Best Practice: Type hinting improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5994, 9254, 278, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,1064,best_practice,167,Type hinting improves code readability and maintainability.,,1056,        ),"[220, 220, 220, 220, 220, 220, 220, 1267]"
✅ Best Practice: Explicit type declaration for icon improves code clarity.,"[26486, 227, 6705, 19939, 25, 11884, 2099, 14305, 329, 7196, 19575, 2438, 16287, 13]",0.5,1079,best_practice,170,Explicit type declaration for icon improves code clarity.,,1064,"            help_menu,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 1037, 62, 26272, 11]"
✅ Best Practice: Explicit type declaration for action improves code clarity.,"[26486, 227, 6705, 19939, 25, 11884, 2099, 14305, 329, 2223, 19575, 2438, 16287, 13]",0.5,1105,best_practice,172,Explicit type declaration for action improves code clarity.,,1079,"            get_icon_path(__file__, ""forum.ico""),","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 651, 62, 4749, 62, 6978, 7, 834, 7753, 834, 11, 366, 27302, 13, 3713, 12340]"
⚠️ SAST Risk (Low): Ensure 'func' is a safe callable to avoid executing arbitrary code.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 705, 20786, 6, 318, 257, 3338, 869, 540, 284, 3368, 23710, 14977, 2438, 13]",0.5,1117,sast_risk,174,Ensure 'func' is a safe callable to avoid executing arbitrary code.,Low,1105,            True,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 6407]"
"🧠 ML Signal: Pattern of adding actions to a menu, useful for UI behavior modeling.","[8582, 100, 254, 10373, 26484, 25, 23939, 286, 4375, 4028, 284, 257, 6859, 11, 4465, 329, 12454, 4069, 21128, 13]",0.5,1125,ml_signal,175,"Pattern of adding actions to a menu, useful for UI behavior modeling.",,1117,        ),"[220, 220, 220, 220, 220, 220, 220, 1267]"
"🧠 ML Signal: Conditional logic for adding actions to a toolbar, useful for UI behavior modeling.","[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9156, 329, 4375, 4028, 284, 257, 50149, 11, 4465, 329, 12454, 4069, 21128, 13]",1.0,1150,ml_signal,181,"Conditional logic for adding actions to a toolbar, useful for UI behavior modeling.",,1125,"            partial(self.open_widget, AboutDialog, ""about""),","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 13027, 7, 944, 13, 9654, 62, 42655, 11, 7994, 44204, 11, 366, 10755, 12340]"
🧠 ML Signal: Usage of type hinting for function parameters and return type,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 2099, 9254, 278, 329, 2163, 10007, 290, 1441, 2099]",1.0,1164,ml_signal,184,Usage of type hinting for function parameters and return type,,1150,    def init_toolbar(self) -> None:,"[220, 220, 220, 825, 2315, 62, 25981, 5657, 7, 944, 8, 4613, 6045, 25]"
🧠 ML Signal: Checking instance type to conditionally store in a dictionary,"[8582, 100, 254, 10373, 26484, 25, 39432, 4554, 2099, 284, 4006, 453, 3650, 287, 257, 22155]",0.5,1196,ml_signal,186,Checking instance type to conditionally store in a dictionary,,1164,        self.toolbar: QtWidgets.QToolBar = QtWidgets.QToolBar(self),"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 25981, 5657, 25, 33734, 54, 312, 11407, 13, 48, 25391, 10374, 796, 33734, 54, 312, 11407, 13, 48, 25391, 10374, 7, 944, 8]"
🧠 ML Signal: Creating a QDockWidget with a specific name,"[8582, 100, 254, 10373, 26484, 25, 30481, 257, 1195, 35, 735, 38300, 351, 257, 2176, 1438]",1.0,1214,ml_signal,189,Creating a QDockWidget with a specific name,,1196,        self.toolbar.setMovable(False),"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 25981, 5657, 13, 2617, 44, 21985, 7, 25101, 8]"
✅ Best Practice: Explicitly setting the widget for the dock,"[26486, 227, 6705, 19939, 25, 11884, 306, 4634, 262, 26295, 329, 262, 23423]",0.5,1225,best_practice,191,Explicitly setting the widget for the dock,,1214,        # Set button size,"[220, 220, 220, 220, 220, 220, 220, 1303, 5345, 4936, 2546]"
✅ Best Practice: Setting an object name for the dock widget,"[26486, 227, 6705, 19939, 25, 25700, 281, 2134, 1438, 329, 262, 23423, 26295]",0.5,1244,best_practice,193,Setting an object name for the dock widget,,1225,"        size = QtCore.QSize(w, w)","[220, 220, 220, 220, 220, 220, 220, 2546, 796, 33734, 14055, 13, 48, 10699, 7, 86, 11, 266, 8]"
✅ Best Practice: Setting features for the dock widget to enhance user interaction,"[26486, 227, 6705, 19939, 25, 25700, 3033, 329, 262, 23423, 26295, 284, 9494, 2836, 10375]",0.5,1262,best_practice,194,Setting features for the dock widget to enhance user interaction,,1244,        self.toolbar.setIconSize(size),"[220, 220, 220, 220, 220, 220, 220, 2116, 13, 25981, 5657, 13, 2617, 19578, 10699, 7, 7857, 8]"
🧠 ML Signal: Adding the dock widget to a specific area,"[8582, 100, 254, 10373, 26484, 25, 18247, 262, 23423, 26295, 284, 257, 2176, 1989]",1.0,1289,ml_signal,197,Adding the dock widget to a specific area,,1262,        layout: QtWidgets.QLayout | None = self.toolbar.layout(),"[220, 220, 220, 220, 220, 220, 220, 12461, 25, 33734, 54, 312, 11407, 13, 9711, 323, 448, 930, 6045, 796, 2116, 13, 25981, 5657, 13, 39786, 3419]"
🧠 ML Signal: Returning a tuple of widget and dock,"[8582, 100, 254, 10373, 26484, 25, 42882, 257, 46545, 286, 26295, 290, 23423]",1.0,1308,ml_signal,199,Returning a tuple of widget and dock,,1289,            layout.setSpacing(10),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 12461, 13, 2617, 4561, 4092, 7, 940, 8]"
"🧠 ML Signal: Type hinting is used, indicating a pattern of explicit type usage","[8582, 100, 254, 10373, 26484, 25, 5994, 9254, 278, 318, 973, 11, 12739, 257, 3912, 286, 7952, 2099, 8748]",0.5,1335,ml_signal,197,"Type hinting is used, indicating a pattern of explicit type usage",,1308,        layout: QtWidgets.QLayout | None = self.toolbar.layout(),"[220, 220, 220, 220, 220, 220, 220, 12461, 25, 33734, 54, 312, 11407, 13, 9711, 323, 448, 930, 6045, 796, 2116, 13, 25981, 5657, 13, 39786, 3419]"
✅ Best Practice: Use of type hinting for gateway_name improves code readability and maintainability,"[26486, 227, 6705, 19939, 25, 5765, 286, 2099, 9254, 278, 329, 24308, 62, 3672, 19575, 2438, 1100, 1799, 290, 5529, 1799]",1.0,1345,best_practice,198,Use of type hinting for gateway_name improves code readability and maintainability,,1335,        if layout:,"[220, 220, 220, 220, 220, 220, 220, 611, 12461, 25]"
"🧠 ML Signal: Instantiation of a dialog object, indicating a UI interaction pattern","[8582, 100, 254, 10373, 26484, 25, 24470, 3920, 286, 257, 17310, 2134, 11, 12739, 257, 12454, 10375, 3912]",0.5,1345,ml_signal,200,"Instantiation of a dialog object, indicating a UI interaction pattern",,1345,,[]
✅ Best Practice: Explicit type declaration for dialog variable enhances code clarity,"[26486, 227, 6705, 19939, 25, 11884, 2099, 14305, 329, 17310, 7885, 32479, 2438, 16287]",0.5,1345,best_practice,200,Explicit type declaration for dialog variable enhances code clarity,,1345,,[]
"🧠 ML Signal: Execution of a dialog, indicating a pattern of user interaction","[8582, 100, 254, 10373, 26484, 25, 37497, 286, 257, 17310, 11, 12739, 257, 3912, 286, 2836, 10375]",0.5,1353,ml_signal,203,"Execution of a dialog, indicating a pattern of user interaction",,1345,    def add_action(,"[220, 220, 220, 825, 751, 62, 2673, 7]"
⚠️ SAST Risk (Low): Potential for blocking call if dialog.exec() is a modal dialog,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 12013, 869, 611, 17310, 13, 18558, 3419, 318, 257, 953, 282, 17310]",0.5,1361,sast_risk,203,Potential for blocking call if dialog.exec() is a modal dialog,Low,1353,    def add_action(,"[220, 220, 220, 825, 751, 62, 2673, 7]"
✅ Best Practice: Use of QMessageBox for user confirmation is a good practice for critical actions.,"[26486, 227, 6705, 19939, 25, 5765, 286, 1195, 12837, 14253, 329, 2836, 12641, 318, 257, 922, 3357, 329, 4688, 4028, 13]",1.0,1369,best_practice,203,Use of QMessageBox for user confirmation is a good practice for critical actions.,,1361,    def add_action(,"[220, 220, 220, 825, 751, 62, 2673, 7]"
🧠 ML Signal: User confirmation pattern for application exit.,"[8582, 100, 254, 10373, 26484, 25, 11787, 12641, 3912, 329, 3586, 8420, 13]",1.0,1379,ml_signal,211,User confirmation pattern for application exit.,,1369,"        """"""""""""","[220, 220, 220, 220, 220, 220, 220, 13538, 15931, 15931]"
🧠 ML Signal: Iterating over widgets to close them is a common pattern in GUI applications.,"[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 40803, 284, 1969, 606, 318, 257, 2219, 3912, 287, 25757, 5479, 13]",1.0,1379,ml_signal,213,Iterating over widgets to close them is a common pattern in GUI applications.,,1379,,[]
🧠 ML Signal: Iterating over monitors to save settings is a common pattern in applications with user settings.,"[8582, 100, 254, 10373, 26484, 25, 40806, 803, 625, 19374, 284, 3613, 6460, 318, 257, 2219, 3912, 287, 5479, 351, 2836, 6460, 13]",1.0,1393,ml_signal,216,Iterating over monitors to save settings is a common pattern in applications with user settings.,,1379,        action.setIcon(icon),"[220, 220, 220, 220, 220, 220, 220, 2223, 13, 2617, 19578, 7, 4749, 8]"
✅ Best Practice: Saving window settings before closing is a good practice for user experience.,"[26486, 227, 6705, 19939, 25, 34689, 4324, 6460, 878, 9605, 318, 257, 922, 3357, 329, 2836, 1998, 13]",0.5,1393,best_practice,219,Saving window settings before closing is a good practice for user experience.,,1393,,[]
⚠️ SAST Risk (Low): Ensure main_engine.close() handles exceptions internally to prevent application crash.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 48987, 1388, 62, 18392, 13, 19836, 3419, 17105, 13269, 20947, 284, 2948, 3586, 7014, 13]",1.0,1414,sast_risk,221,Ensure main_engine.close() handles exceptions internally to prevent application crash.,Low,1393,            self.toolbar.addAction(action),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 13, 25981, 5657, 13, 2860, 12502, 7, 2673, 8]"
✅ Best Practice: Include type hints for function parameters and return type for better readability and maintainability.,"[26486, 227, 6705, 19939, 25, 40348, 2099, 20269, 329, 2163, 10007, 290, 1441, 2099, 329, 1365, 1100, 1799, 290, 5529, 1799, 13]",0.5,1424,best_practice,220,Include type hints for function parameters and return type for better readability and maintainability.,,1414,        if toolbar:,"[220, 220, 220, 220, 220, 220, 220, 611, 50149, 25]"
🧠 ML Signal: Usage of dictionary get method with default value to handle missing keys.,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 22155, 651, 2446, 351, 4277, 1988, 284, 5412, 4814, 8251, 13]",0.5,1440,ml_signal,225,Usage of dictionary get method with default value to handle missing keys.,,1424,"        widget_class: type[WidgetType],","[220, 220, 220, 220, 220, 220, 220, 26295, 62, 4871, 25, 2099, 58, 38300, 6030, 4357]"
🧠 ML Signal: Pattern of instantiating a class with specific arguments.,"[8582, 100, 254, 10373, 26484, 25, 23939, 286, 9113, 26336, 257, 1398, 351, 2176, 7159, 13]",0.5,1460,ml_signal,228,Pattern of instantiating a class with specific arguments.,,1440,"    ) -> tuple[WidgetType, QtWidgets.QDockWidget]:","[220, 220, 220, 1267, 4613, 46545, 58, 38300, 6030, 11, 33734, 54, 312, 11407, 13, 48, 35, 735, 38300, 5974]"
🧠 ML Signal: Storing newly created widget in a dictionary for later access.,"[8582, 100, 254, 10373, 26484, 25, 520, 3255, 8308, 2727, 26295, 287, 257, 22155, 329, 1568, 1895, 13]",1.0,1468,ml_signal,229,Storing newly created widget in a dictionary for later access.,,1460,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
🧠 ML Signal: Conditional logic to handle different widget types.,"[8582, 100, 254, 10373, 26484, 25, 9724, 1859, 9156, 284, 5412, 1180, 26295, 3858, 13]",0.5,1506,ml_signal,232,Conditional logic to handle different widget types.,,1468,"        widget: WidgetType = widget_class(self.main_engine, self.event_engine)      # type: ignore","[220, 220, 220, 220, 220, 220, 220, 26295, 25, 370, 17484, 6030, 796, 26295, 62, 4871, 7, 944, 13, 12417, 62, 18392, 11, 2116, 13, 15596, 62, 18392, 8, 220, 220, 220, 220, 220, 1303, 2099, 25, 8856]"
⚠️ SAST Risk (Low): Blocking call with exec() can freeze the application if not handled properly.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 1086, 8629, 869, 351, 2452, 3419, 460, 16611, 262, 3586, 611, 407, 12118, 6105, 13]",1.0,1522,sast_risk,233,Blocking call with exec() can freeze the application if not handled properly.,Low,1506,"        if isinstance(widget, BaseMonitor):","[220, 220, 220, 220, 220, 220, 220, 611, 318, 39098, 7, 42655, 11, 7308, 35479, 2599]"
🧠 ML Signal: Pattern of showing a widget in a GUI application.,"[8582, 100, 254, 10373, 26484, 25, 23939, 286, 4478, 257, 26295, 287, 257, 25757, 3586, 13]",0.5,1536,ml_signal,237,Pattern of showing a widget in a GUI application.,,1522,        dock.setWidget(widget),"[220, 220, 220, 220, 220, 220, 220, 23423, 13, 2617, 38300, 7, 42655, 8]"
✅ Best Practice: Type hinting for 'settings' improves code readability and maintainability.,"[26486, 227, 6705, 19939, 25, 5994, 9254, 278, 329, 705, 33692, 6, 19575, 2438, 1100, 1799, 290, 5529, 1799, 13]",1.0,1567,best_practice,236,Type hinting for 'settings' improves code readability and maintainability.,,1536,        dock: QtWidgets.QDockWidget = QtWidgets.QDockWidget(name),"[220, 220, 220, 220, 220, 220, 220, 23423, 25, 33734, 54, 312, 11407, 13, 48, 35, 735, 38300, 796, 33734, 54, 312, 11407, 13, 48, 35, 735, 38300, 7, 3672, 8]"
🧠 ML Signal: Usage of QSettings to persist application state can be a pattern for ML models.,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 1195, 26232, 284, 21160, 3586, 1181, 460, 307, 257, 3912, 329, 10373, 4981, 13]",0.5,1582,ml_signal,238,Usage of QSettings to persist application state can be a pattern for ML models.,,1567,        dock.setObjectName(name),"[220, 220, 220, 220, 220, 220, 220, 23423, 13, 2617, 10267, 5376, 7, 3672, 8]"
🧠 ML Signal: Saving geometry settings is a common pattern for applications with GUI.,"[8582, 100, 254, 10373, 26484, 25, 34689, 22939, 6460, 318, 257, 2219, 3912, 329, 5479, 351, 25757, 13]",0.5,1600,ml_signal,240,Saving geometry settings is a common pattern for applications with GUI.,,1582,"        self.addDockWidget(area, dock)","[220, 220, 220, 220, 220, 220, 220, 2116, 13, 2860, 35, 735, 38300, 7, 20337, 11, 23423, 8]"
🧠 ML Signal: Use of QtCore.QSettings indicates a pattern of saving/loading application settings,"[8582, 100, 254, 10373, 26484, 25, 5765, 286, 33734, 14055, 13, 48, 26232, 9217, 257, 3912, 286, 8914, 14, 25138, 3586, 6460]",1.0,1620,ml_signal,243,Use of QtCore.QSettings indicates a pattern of saving/loading application settings,,1600,"    def connect_gateway(self, gateway_name: str) -> None:","[220, 220, 220, 825, 2018, 62, 10494, 1014, 7, 944, 11, 24308, 62, 3672, 25, 965, 8, 4613, 6045, 25]"
🧠 ML Signal: Retrieving stored state and geometry values is a common pattern for UI state management,"[8582, 100, 254, 10373, 26484, 25, 4990, 37418, 8574, 1181, 290, 22939, 3815, 318, 257, 2219, 3912, 329, 12454, 1181, 4542]",0.5,1634,ml_signal,245,Retrieving stored state and geometry values is a common pattern for UI state management,,1620,        Open connect dialog for gateway connection.,"[220, 220, 220, 220, 220, 220, 220, 4946, 2018, 17310, 329, 24308, 4637, 13]"
✅ Best Practice: Checking the type of 'state' ensures that the method calls are safe,"[26486, 227, 6705, 19939, 25, 39432, 262, 2099, 286, 705, 5219, 6, 19047, 326, 262, 2446, 3848, 389, 3338]",0.5,1645,best_practice,248,Checking the type of 'state' ensures that the method calls are safe,,1634,        dialog.exec(),"[220, 220, 220, 220, 220, 220, 220, 17310, 13, 18558, 3419]"
"⚠️ SAST Risk (Low): Potential risk if 'state' or 'geometry' are tampered with, leading to unexpected behavior","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 705, 5219, 6, 393, 705, 469, 15748, 6, 389, 21885, 13653, 351, 11, 3756, 284, 10059, 4069]",0.5,1667,sast_risk,250,"Potential risk if 'state' or 'geometry' are tampered with, leading to unexpected behavior",Low,1645,"    def closeEvent(self, event: QtGui.QCloseEvent) -> None:","[220, 220, 220, 825, 1969, 9237, 7, 944, 11, 1785, 25, 33734, 8205, 72, 13, 48, 26125, 9237, 8, 4613, 6045, 25]"
"⚠️ SAST Risk (Low): Potential risk if 'geometry' is tampered with, leading to unexpected behavior","[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 2526, 611, 705, 469, 15748, 6, 318, 21885, 13653, 351, 11, 3756, 284, 10059, 4069]",0.5,1675,sast_risk,253,"Potential risk if 'geometry' is tampered with, leading to unexpected behavior",Low,1667,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
✅ Best Practice: Use of a descriptive method name enhances code readability.,"[26486, 227, 6705, 19939, 25, 5765, 286, 257, 35644, 2446, 1438, 32479, 2438, 1100, 1799, 13]",0.5,1683,best_practice,253,Use of a descriptive method name enhances code readability.,,1675,"        """"""","[220, 220, 220, 220, 220, 220, 220, 37227]"
🧠 ML Signal: Calling a method with a specific string argument can indicate a common usage pattern.,"[8582, 100, 254, 10373, 26484, 25, 32677, 257, 2446, 351, 257, 2176, 4731, 4578, 460, 7603, 257, 2219, 8748, 3912, 13]",0.5,1696,ml_signal,255,Calling a method with a specific string argument can indicate a common usage pattern.,,1683,"            self,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 2116, 11]"
🧠 ML Signal: Method calls that change UI state can be indicative of user interaction patterns.,"[8582, 100, 254, 10373, 26484, 25, 11789, 3848, 326, 1487, 12454, 1181, 460, 307, 29105, 286, 2836, 10375, 7572, 13]",0.5,1714,ml_signal,256,Method calls that change UI state can be indicative of user interaction patterns.,,1696,"            _(""退出""),","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 4808, 7203, 34460, 222, 49035, 118, 12340]"
"🧠 ML Signal: Method for sending emails, useful for detecting communication patterns","[8582, 100, 254, 10373, 26484, 25, 11789, 329, 7216, 7237, 11, 4465, 329, 31521, 6946, 7572]",1.0,1739,ml_signal,259,"Method for sending emails, useful for detecting communication patterns",,1714,"            QtWidgets.QMessageBox.StandardButton.No,","[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 33734, 54, 312, 11407, 13, 48, 12837, 14253, 13, 23615, 21864, 13, 2949, 11]"
⚠️ SAST Risk (Low): Potential for misuse if email content is not properly validated,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 32480, 329, 29169, 611, 3053, 2695, 318, 407, 6105, 31031]",0.5,1747,sast_risk,260,Potential for misuse if email content is not properly validated,Low,1739,        ),"[220, 220, 220, 220, 220, 220, 220, 1267]"
⚠️ SAST Risk (Low): Opening a URL without validation can lead to security risks if the URL is user-controlled.,"[158, 248, 254, 37929, 311, 11262, 19602, 357, 20535, 2599, 25522, 257, 10289, 1231, 21201, 460, 1085, 284, 2324, 7476, 611, 262, 10289, 318, 2836, 12, 14401, 13]",1.0,1768,sast_risk,263,Opening a URL without validation can lead to security risks if the URL is user-controlled.,Low,1747,            for widget in self.widgets.values():,"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 329, 26295, 287, 2116, 13, 28029, 11407, 13, 27160, 33529]"
🧠 ML Signal: Usage of webbrowser to open URLs can indicate user interaction patterns.,"[8582, 100, 254, 10373, 26484, 25, 29566, 286, 3992, 40259, 284, 1280, 32336, 460, 7603, 2836, 10375, 7572, 13]",0.5,1787,ml_signal,264,Usage of webbrowser to open URLs can indicate user interaction patterns.,,1768,                widget.close(),"[220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 220, 26295, 13, 19836, 3419]"
✅ Best Practice: Add a docstring to describe the purpose and behavior of the function,"[26486, 227, 6705, 19939, 25, 3060, 257, 2205, 8841, 284, 6901, 262, 4007, 290, 4069, 286, 262, 2163]",1.0,1787,best_practice,265,Add a docstring to describe the purpose and behavior of the function,,1787,,[]
"🧠 ML Signal: Use of a dialog pattern, which may indicate a GUI application","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 257, 17310, 3912, 11, 543, 743, 7603, 257, 25757, 3586]",1.0,1787,ml_signal,268,"Use of a dialog pattern, which may indicate a GUI application",,1787,,[]
"🧠 ML Signal: Use of exec method, which may indicate execution of a dialog or command","[8582, 100, 254, 10373, 26484, 25, 5765, 286, 2452, 2446, 11, 543, 743, 7603, 9706, 286, 257, 17310, 393, 3141]",0.5,1787,ml_signal,268,"Use of exec method, which may indicate execution of a dialog or command",,1787,,[]
