[
  {
    "line": 17,
    "text": "from vnpy.trader.event import EVENT_CONTRACT",
    "annotation": "\u2705 Best Practice: Centralized configuration for logging settings improves maintainability.",
    "confidence": 1.0,
    "tokens": [
      6738,
      410,
      77,
      9078,
      13,
      2213,
      5067,
      13,
      15596,
      1330,
      49261,
      62,
      10943,
      5446,
      10659
    ],
    "start_token": 0,
    "end_token": 15,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5694,
      1143,
      8398,
      329,
      18931,
      6460,
      19575,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Centralized configuration for logging settings improves maintainability."
  },
  {
    "line": 19,
    "text": "# \u52a0\u8f7dVeighNa\u63d2\u4ef6\u6a21\u5757",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Storing sensitive information like username and password in plaintext is insecure.",
    "confidence": 1.0,
    "tokens": [
      2,
      10263,
      232,
      254,
      164,
      121,
      121,
      26979,
      394,
      26705,
      162,
      237,
      240,
      20015,
      35050,
      101,
      94,
      161,
      251,
      245
    ],
    "start_token": 15,
    "end_token": 35,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      520,
      3255,
      8564,
      1321,
      588,
      20579,
      290,
      9206,
      287,
      8631,
      5239,
      318,
      31955,
      13
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Storing sensitive information like username and password in plaintext is insecure."
  },
  {
    "line": 34,
    "text": "ctp_setting: dict[str, str] = {",
    "annotation": "\ud83e\udde0 ML Signal: Usage of specific exchanges can indicate user preferences or trading behavior.",
    "confidence": 1.0,
    "tokens": [
      310,
      79,
      62,
      33990,
      25,
      8633,
      58,
      2536,
      11,
      965,
      60,
      796,
      1391
    ],
    "start_token": 35,
    "end_token": 48,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2176,
      14525,
      460,
      7603,
      2836,
      15387,
      393,
      7313,
      4069,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of specific exchanges can indicate user preferences or trading behavior."
  },
  {
    "line": 35,
    "text": "    \"\u7528\u6237\u540d\": \"888888\",                       # SimNow\u8d26\u6237\u540d",
    "annotation": "\ud83e\udde0 ML Signal: Usage of specific products can indicate user preferences or trading behavior.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      366,
      18796,
      101,
      22755,
      115,
      28938,
      235,
      1298,
      366,
      3459,
      3459,
      3459,
      1600,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      3184,
      3844,
      164,
      112,
      99,
      22755,
      115,
      28938,
      235
    ],
    "start_token": 48,
    "end_token": 96,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      2176,
      3186,
      460,
      7603,
      2836,
      15387,
      393,
      7313,
      4069,
      13
    ],
    "label": "ml_signal",
    "reason": "Usage of specific products can indicate user preferences or trading behavior."
  },
  {
    "line": 43,
    "text": "",
    "annotation": "\u2705 Best Practice: Type annotations improve code readability and maintainability",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 96,
    "end_token": 96,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      37647,
      2987,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type annotations improve code readability and maintainability"
  },
  {
    "line": 45,
    "text": "# \u8981\u5f55\u5236\u6570\u636e\u7684\u4ea4\u6613\u6240\u5217\u8868",
    "annotation": "\u2705 Best Practice: Type annotations improve code readability and maintainability",
    "confidence": 1.0,
    "tokens": [
      2,
      5525,
      99,
      223,
      37605,
      243,
      26344,
      35050,
      243,
      108,
      162,
      235,
      106,
      21410,
      12859,
      97,
      23626,
      241,
      33699,
      222,
      26344,
      245,
      26193,
      101
    ],
    "start_token": 96,
    "end_token": 120,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      37647,
      2987,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type annotations improve code readability and maintainability"
  },
  {
    "line": 47,
    "text": "recording_exchanges: list[Exchange] = [",
    "annotation": "\ud83e\udde0 ML Signal: Usage of add_gateway method indicates integration with external systems",
    "confidence": 1.0,
    "tokens": [
      8344,
      1284,
      62,
      1069,
      36653,
      25,
      1351,
      58,
      3109,
      3803,
      60,
      796,
      685
    ],
    "start_token": 120,
    "end_token": 133,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      751,
      62,
      10494,
      1014,
      2446,
      9217,
      11812,
      351,
      7097,
      3341
    ],
    "label": "ml_signal",
    "reason": "Usage of add_gateway method indicates integration with external systems"
  },
  {
    "line": 48,
    "text": "    Exchange.CFFEX,          # \u4e2d\u56fd\u91d1\u878d\u671f\u8d27\u4ea4\u6613\u6240",
    "annotation": "\u2705 Best Practice: Type annotations improve code readability and maintainability",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      12516,
      13,
      34,
      5777,
      6369,
      11,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      1303,
      220,
      40792,
      32368,
      121,
      34932,
      239,
      164,
      252,
      235,
      17312,
      253,
      164,
      112,
      100,
      12859,
      97,
      23626,
      241,
      33699,
      222
    ],
    "start_token": 133,
    "end_token": 172,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      37647,
      2987,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type annotations improve code readability and maintainability"
  },
  {
    "line": 55,
    "text": "",
    "annotation": "\u2705 Best Practice: Type hinting for contract variable improves code readability and maintainability",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 172,
    "end_token": 172,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      2775,
      7885,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting for contract variable improves code readability and maintainability"
  },
  {
    "line": 56,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Usage of conditional checks to filter data based on predefined criteria",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 172,
    "end_token": 172,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      29566,
      286,
      26340,
      8794,
      284,
      8106,
      1366,
      1912,
      319,
      2747,
      18156,
      9987
    ],
    "label": "ml_signal",
    "reason": "Usage of conditional checks to filter data based on predefined criteria"
  },
  {
    "line": 62,
    "text": "]",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of adding tasks based on conditions",
    "confidence": 0.5,
    "tokens": [
      60
    ],
    "start_token": 172,
    "end_token": 173,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      4375,
      8861,
      1912,
      319,
      3403
    ],
    "label": "ml_signal",
    "reason": "Pattern of adding tasks based on conditions"
  },
  {
    "line": 64,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Pattern of adding tasks based on conditions",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 173,
    "end_token": 173,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23939,
      286,
      4375,
      8861,
      1912,
      319,
      3403
    ],
    "label": "ml_signal",
    "reason": "Pattern of adding tasks based on conditions"
  },
  {
    "line": 65,
    "text": "def run_recorder() -> None:",
    "annotation": "\ud83e\udde0 ML Signal: Event-driven programming pattern with event registration",
    "confidence": 1.0,
    "tokens": [
      4299,
      1057,
      62,
      8344,
      2875,
      3419,
      4613,
      6045,
      25
    ],
    "start_token": 173,
    "end_token": 182,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8558,
      12,
      15808,
      8300,
      3912,
      351,
      1785,
      9352
    ],
    "label": "ml_signal",
    "reason": "Event-driven programming pattern with event registration"
  },
  {
    "line": 65,
    "text": "def run_recorder() -> None:",
    "annotation": "\u2705 Best Practice: Type hinting for log_engine variable improves code readability and maintainability",
    "confidence": 0.5,
    "tokens": [
      4299,
      1057,
      62,
      8344,
      2875,
      3419,
      4613,
      6045,
      25
    ],
    "start_token": 182,
    "end_token": 191,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5994,
      9254,
      278,
      329,
      2604,
      62,
      18392,
      7885,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799
    ],
    "label": "best_practice",
    "reason": "Type hinting for log_engine variable improves code readability and maintainability"
  },
  {
    "line": 65,
    "text": "def run_recorder() -> None:",
    "annotation": "\u2705 Best Practice: Docstring provides a clear explanation of the function's purpose and parameters",
    "confidence": 0.5,
    "tokens": [
      4299,
      1057,
      62,
      8344,
      2875,
      3419,
      4613,
      6045,
      25
    ],
    "start_token": 191,
    "end_token": 200,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      14432,
      8841,
      3769,
      257,
      1598,
      7468,
      286,
      262,
      2163,
      338,
      4007,
      290,
      10007
    ],
    "label": "best_practice",
    "reason": "Docstring provides a clear explanation of the function's purpose and parameters"
  },
  {
    "line": 73,
    "text": "    4. \u8fde\u63a5\u5230\u4ea4\u6613\u6240\u5e76\u5f00\u59cb\u5f55\u5236\u6570\u636e",
    "annotation": "\ud83e\udde0 ML Signal: Logging events can be used to train models on system behavior and error patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      604,
      13,
      5525,
      123,
      252,
      162,
      236,
      98,
      26344,
      108,
      12859,
      97,
      23626,
      241,
      33699,
      222,
      33176,
      114,
      28156,
      222,
      34650,
      233,
      37605,
      243,
      26344,
      35050,
      243,
      108,
      162,
      235,
      106
    ],
    "start_token": 200,
    "end_token": 234,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5972,
      2667,
      2995,
      460,
      307,
      973,
      284,
      4512,
      4981,
      319,
      1080,
      4069,
      290,
      4049,
      7572
    ],
    "label": "ml_signal",
    "reason": "Logging events can be used to train models on system behavior and error patterns"
  },
  {
    "line": 75,
    "text": "    # \u521b\u5efa\u4e8b\u4ef6\u5f15\u64ce\uff0c\u8d1f\u8d23\u7cfb\u7edf\u5185\u5404\u6a21\u5757\u95f4\u7684\u901a\u4fe1",
    "annotation": "\ud83e\udde0 ML Signal: Registering event handlers can indicate system behavior and event-driven architecture",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1303,
      10263,
      230,
      249,
      161,
      119,
      118,
      12859,
      233,
      20015,
      114,
      28156,
      243,
      162,
      241,
      236,
      171,
      120,
      234,
      164,
      112,
      253,
      164,
      112,
      96,
      163,
      111,
      119,
      163,
      119,
      253,
      37863,
      227,
      28938,
      226,
      162,
      101,
      94,
      161,
      251,
      245,
      29785,
      112,
      21410,
      34460,
      248,
      46479,
      94
    ],
    "start_token": 234,
    "end_token": 285,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17296,
      278,
      1785,
      32847,
      460,
      7603,
      1080,
      4069,
      290,
      1785,
      12,
      15808,
      10959
    ],
    "label": "ml_signal",
    "reason": "Registering event handlers can indicate system behavior and event-driven architecture"
  },
  {
    "line": 77,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Connecting to external systems can be used to understand integration patterns",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 285,
    "end_token": 285,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      8113,
      278,
      284,
      7097,
      3341,
      460,
      307,
      973,
      284,
      1833,
      11812,
      7572
    ],
    "label": "ml_signal",
    "reason": "Connecting to external systems can be used to understand integration patterns"
  },
  {
    "line": 79,
    "text": "    main_engine: MainEngine = MainEngine(event_engine)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of sleep can lead to performance issues or unintended delays",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1388,
      62,
      18392,
      25,
      8774,
      13798,
      796,
      8774,
      13798,
      7,
      15596,
      62,
      18392,
      8
    ],
    "start_token": 285,
    "end_token": 302,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      3993,
      460,
      1085,
      284,
      2854,
      2428,
      393,
      30261,
      16119
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of sleep can lead to performance issues or unintended delays"
  },
  {
    "line": 79,
    "text": "    main_engine: MainEngine = MainEngine(event_engine)",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of input can lead to blocking behavior and is not suitable for non-interactive environments",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1388,
      62,
      18392,
      25,
      8774,
      13798,
      796,
      8774,
      13798,
      7,
      15596,
      62,
      18392,
      8
    ],
    "start_token": 302,
    "end_token": 319,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      5128,
      460,
      1085,
      284,
      12013,
      4069,
      290,
      318,
      407,
      11080,
      329,
      1729,
      12,
      3849,
      5275,
      12493
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of input can lead to blocking behavior and is not suitable for non-interactive environments"
  },
  {
    "line": 79,
    "text": "    main_engine: MainEngine = MainEngine(event_engine)",
    "annotation": "\ud83e\udde0 ML Signal: Closing connections can be used to understand resource management patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1388,
      62,
      18392,
      25,
      8774,
      13798,
      796,
      8774,
      13798,
      7,
      15596,
      62,
      18392,
      8
    ],
    "start_token": 319,
    "end_token": 336,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      47055,
      8787,
      460,
      307,
      973,
      284,
      1833,
      8271,
      4542,
      7572
    ],
    "label": "ml_signal",
    "reason": "Closing connections can be used to understand resource management patterns"
  },
  {
    "line": 79,
    "text": "    main_engine: MainEngine = MainEngine(event_engine)",
    "annotation": "\u2705 Best Practice: Using the main guard to ensure code is only executed when the script is run directly",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1388,
      62,
      18392,
      25,
      8774,
      13798,
      796,
      8774,
      13798,
      7,
      15596,
      62,
      18392,
      8
    ],
    "start_token": 336,
    "end_token": 353,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      8554,
      262,
      1388,
      4860,
      284,
      4155,
      2438,
      318,
      691,
      10945,
      618,
      262,
      4226,
      318,
      1057,
      3264
    ],
    "label": "best_practice",
    "reason": "Using the main guard to ensure code is only executed when the script is run directly"
  }
]