[
  {
    "line": 1,
    "text": "from time import sleep, time",
    "annotation": "\u2705 Best Practice: Importing only necessary modules for clarity and efficiency",
    "confidence": 0.5,
    "tokens": [
      6738,
      640,
      1330,
      3993,
      11,
      640
    ],
    "start_token": 0,
    "end_token": 6,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      17267,
      278,
      691,
      3306,
      13103,
      329,
      16287,
      290,
      9332
    ],
    "label": "best_practice",
    "reason": "Importing only necessary modules for clarity and efficiency"
  },
  {
    "line": 3,
    "text": "from vnpy.rpc import RpcServer",
    "annotation": "\u2705 Best Practice: Importing the RpcServer class for RPC functionality",
    "confidence": 0.5,
    "tokens": [
      6738,
      410,
      77,
      9078,
      13,
      81,
      14751,
      1330,
      371,
      14751,
      10697
    ],
    "start_token": 6,
    "end_token": 17,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      17267,
      278,
      262,
      371,
      14751,
      10697,
      1398,
      329,
      39400,
      11244
    ],
    "label": "best_practice",
    "reason": "Importing the RpcServer class for RPC functionality"
  },
  {
    "line": 7,
    "text": "    \"\"\"",
    "annotation": "\u2705 Best Practice: Class docstring provided, which improves code readability and maintainability.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      37227
    ],
    "start_token": 17,
    "end_token": 21,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      2205,
      8841,
      2810,
      11,
      543,
      19575,
      2438,
      1100,
      1799,
      290,
      5529,
      1799,
      13
    ],
    "label": "best_practice",
    "reason": "Class docstring provided, which improves code readability and maintainability."
  },
  {
    "line": 12,
    "text": "        \"\"\"",
    "annotation": "\u2705 Best Practice: Explicitly calling the superclass constructor ensures proper initialization of the base class.",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 21,
    "end_token": 29,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11884,
      306,
      4585,
      262,
      2208,
      4871,
      23772,
      19047,
      1774,
      37588,
      286,
      262,
      2779,
      1398,
      13
    ],
    "label": "best_practice",
    "reason": "Explicitly calling the superclass constructor ensures proper initialization of the base class."
  },
  {
    "line": 14,
    "text": "        \"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Method registration pattern, useful for identifying plugin or callback systems.",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 29,
    "end_token": 37,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      9352,
      3912,
      11,
      4465,
      329,
      13720,
      13877,
      393,
      23838,
      3341,
      13
    ],
    "label": "ml_signal",
    "reason": "Method registration pattern, useful for identifying plugin or callback systems."
  },
  {
    "line": 17,
    "text": "        self.register(self.add)",
    "annotation": "\u2705 Best Practice: Consider using logging instead of print for better control over output levels and destinations",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      2116,
      13,
      30238,
      7,
      944,
      13,
      2860,
      8
    ],
    "start_token": 37,
    "end_token": 52,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      18931,
      2427,
      286,
      3601,
      329,
      1365,
      1630,
      625,
      5072,
      2974,
      290,
      23982
    ],
    "label": "best_practice",
    "reason": "Consider using logging instead of print for better control over output levels and destinations"
  },
  {
    "line": 21,
    "text": "        Test function",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Binding to all network interfaces with a wildcard address can expose the service to external access",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      6208,
      2163
    ],
    "start_token": 52,
    "end_token": 61,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      38904,
      284,
      477,
      3127,
      20314,
      351,
      257,
      4295,
      9517,
      2209,
      460,
      15651,
      262,
      2139,
      284,
      7097,
      1895
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Binding to all network interfaces with a wildcard address can expose the service to external access"
  },
  {
    "line": 23,
    "text": "        print(f\"receiving:{a} {b}\")",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Binding to all network interfaces with a wildcard address can expose the service to external access",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      3601,
      7,
      69,
      1,
      260,
      344,
      1412,
      29164,
      64,
      92,
      1391,
      65,
      92,
      4943
    ],
    "start_token": 61,
    "end_token": 82,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      38904,
      284,
      477,
      3127,
      20314,
      351,
      257,
      4295,
      9517,
      2209,
      460,
      15651,
      262,
      2139,
      284,
      7097,
      1895
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Binding to all network interfaces with a wildcard address can expose the service to external access"
  },
  {
    "line": 25,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of a server object, indicating a server-client architecture",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 82,
    "end_token": 82,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      257,
      4382,
      2134,
      11,
      12739,
      257,
      4382,
      12,
      16366,
      10959
    ],
    "label": "ml_signal",
    "reason": "Instantiation of a server object, indicating a server-client architecture"
  },
  {
    "line": 27,
    "text": "if __name__ == \"__main__\":",
    "annotation": "\ud83e\udde0 ML Signal: Starting a server with specific addresses, indicating network communication",
    "confidence": 0.5,
    "tokens": [
      361,
      11593,
      3672,
      834,
      6624,
      366,
      834,
      12417,
      834,
      1298
    ],
    "start_token": 82,
    "end_token": 92,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      17962,
      257,
      4382,
      351,
      2176,
      9405,
      11,
      12739,
      3127,
      6946
    ],
    "label": "ml_signal",
    "reason": "Starting a server with specific addresses, indicating network communication"
  },
  {
    "line": 28,
    "text": "    rep_address = \"tcp://*:2014\"",
    "annotation": "\ud83e\udde0 ML Signal: Periodic logging of server time, indicating a time-based operation",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1128,
      62,
      21975,
      796,
      366,
      83,
      13155,
      1378,
      47026,
      4967,
      1
    ],
    "start_token": 92,
    "end_token": 106,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      18581,
      291,
      18931,
      286,
      4382,
      640,
      11,
      12739,
      257,
      640,
      12,
      3106,
      4905
    ],
    "label": "ml_signal",
    "reason": "Periodic logging of server time, indicating a time-based operation"
  },
  {
    "line": 28,
    "text": "    rep_address = \"tcp://*:2014\"",
    "annotation": "\u2705 Best Practice: Consider using logging instead of print for better control over output levels and destinations",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      1128,
      62,
      21975,
      796,
      366,
      83,
      13155,
      1378,
      47026,
      4967,
      1
    ],
    "start_token": 106,
    "end_token": 120,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      18931,
      2427,
      286,
      3601,
      329,
      1365,
      1630,
      625,
      5072,
      2974,
      290,
      23982
    ],
    "label": "best_practice",
    "reason": "Consider using logging instead of print for better control over output levels and destinations"
  },
  {
    "line": 28,
    "text": "    rep_address = \"tcp://*:2014\"",
    "annotation": "\ud83e\udde0 ML Signal: Publishing messages to a topic, indicating a publish-subscribe pattern",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1128,
      62,
      21975,
      796,
      366,
      83,
      13155,
      1378,
      47026,
      4967,
      1
    ],
    "start_token": 120,
    "end_token": 134,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23499,
      6218,
      284,
      257,
      7243,
      11,
      12739,
      257,
      7715,
      12,
      7266,
      12522,
      3912
    ],
    "label": "ml_signal",
    "reason": "Publishing messages to a topic, indicating a publish-subscribe pattern"
  },
  {
    "line": 28,
    "text": "    rep_address = \"tcp://*:2014\"",
    "annotation": "\ud83e\udde0 ML Signal: Regular sleep intervals in a loop, indicating a periodic task",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      1128,
      62,
      21975,
      796,
      366,
      83,
      13155,
      1378,
      47026,
      4967,
      1
    ],
    "start_token": 134,
    "end_token": 148,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      23603,
      3993,
      20016,
      287,
      257,
      9052,
      11,
      12739,
      257,
      27458,
      4876
    ],
    "label": "ml_signal",
    "reason": "Regular sleep intervals in a loop, indicating a periodic task"
  }
]