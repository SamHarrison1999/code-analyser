[
  {
    "line": 5,
    "text": "",
    "annotation": "\u2705 Best Practice: Class definition should follow PEP 8 naming conventions",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 0,
    "end_token": 0,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      6770,
      815,
      1061,
      350,
      8905,
      807,
      19264,
      21396
    ],
    "label": "best_practice",
    "reason": "Class definition should follow PEP 8 naming conventions"
  },
  {
    "line": 8,
    "text": "    Test RpcClient",
    "annotation": "\u2705 Best Practice: Constructor should initialize all attributes",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      6208,
      371,
      14751,
      11792
    ],
    "start_token": 0,
    "end_token": 7,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      28407,
      273,
      815,
      41216,
      477,
      12608
    ],
    "label": "best_practice",
    "reason": "Constructor should initialize all attributes"
  },
  {
    "line": 9,
    "text": "    \"\"\"",
    "annotation": "\u2705 Best Practice: Use of super() to initialize parent class",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      37227
    ],
    "start_token": 7,
    "end_token": 11,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5765,
      286,
      2208,
      3419,
      284,
      41216,
      2560,
      1398
    ],
    "label": "best_practice",
    "reason": "Use of super() to initialize parent class"
  },
  {
    "line": 14,
    "text": "        \"\"\"",
    "annotation": "\u2705 Best Practice: Method names should be descriptive of their functionality",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 11,
    "end_token": 19,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11789,
      3891,
      815,
      307,
      35644,
      286,
      511,
      11244
    ],
    "label": "best_practice",
    "reason": "Method names should be descriptive of their functionality"
  },
  {
    "line": 17,
    "text": "    def callback(self, topic: str, data: Any) -> None:",
    "annotation": "\ud83e\udde0 ML Signal: Repeated connection attempts with sleep intervals",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      825,
      23838,
      7,
      944,
      11,
      7243,
      25,
      965,
      11,
      1366,
      25,
      4377,
      8,
      4613,
      6045,
      25
    ],
    "start_token": 19,
    "end_token": 38,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      30558,
      515,
      4637,
      6370,
      351,
      3993,
      20016
    ],
    "label": "ml_signal",
    "reason": "Repeated connection attempts with sleep intervals"
  },
  {
    "line": 20,
    "text": "        \"\"\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential exception handling without specific error types",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 38,
    "end_token": 46,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      6631,
      9041,
      1231,
      2176,
      4049,
      3858
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential exception handling without specific error types"
  },
  {
    "line": 24,
    "text": "if __name__ == \"__main__\":",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Generic exception handling",
    "confidence": 0.5,
    "tokens": [
      361,
      11593,
      3672,
      834,
      6624,
      366,
      834,
      12417,
      834,
      1298
    ],
    "start_token": 46,
    "end_token": 56,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      42044,
      6631,
      9041
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Generic exception handling"
  },
  {
    "line": 26,
    "text": "    sub_address = \"tcp://localhost:4102\"",
    "annotation": "\ud83e\udde0 ML Signal: Use of sleep for retry logic",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      21975,
      796,
      366,
      83,
      13155,
      1378,
      36750,
      25,
      19,
      15377,
      1
    ],
    "start_token": 56,
    "end_token": 72,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      5765,
      286,
      3993,
      329,
      1005,
      563,
      9156
    ],
    "label": "ml_signal",
    "reason": "Use of sleep for retry logic"
  },
  {
    "line": 26,
    "text": "    sub_address = \"tcp://localhost:4102\"",
    "annotation": "\u2705 Best Practice: Method names should be descriptive of their functionality",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      21975,
      796,
      366,
      83,
      13155,
      1378,
      36750,
      25,
      19,
      15377,
      1
    ],
    "start_token": 72,
    "end_token": 88,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      11789,
      3891,
      815,
      307,
      35644,
      286,
      511,
      11244
    ],
    "label": "best_practice",
    "reason": "Method names should be descriptive of their functionality"
  },
  {
    "line": 26,
    "text": "    sub_address = \"tcp://localhost:4102\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Medium): Potential for remote code execution if method names are not validated",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      21975,
      796,
      366,
      83,
      13155,
      1378,
      36750,
      25,
      19,
      15377,
      1
    ],
    "start_token": 88,
    "end_token": 104,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      31205,
      2599,
      32480,
      329,
      6569,
      2438,
      9706,
      611,
      2446,
      3891,
      389,
      407,
      31031
    ],
    "label": "sast_risk",
    "severity": "Medium",
    "reason": "Potential for remote code execution if method names are not validated"
  },
  {
    "line": 5,
    "text": "",
    "annotation": "\u2705 Best Practice: Class docstring provided for documentation",
    "confidence": 0.5,
    "tokens": [],
    "start_token": 104,
    "end_token": 104,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      5016,
      2205,
      8841,
      2810,
      329,
      10314
    ],
    "label": "best_practice",
    "reason": "Class docstring provided for documentation"
  },
  {
    "line": 9,
    "text": "    \"\"\"",
    "annotation": "\u2705 Best Practice: Include a docstring to describe the constructor's purpose",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      37227
    ],
    "start_token": 104,
    "end_token": 108,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      40348,
      257,
      2205,
      8841,
      284,
      6901,
      262,
      23772,
      338,
      4007
    ],
    "label": "best_practice",
    "reason": "Include a docstring to describe the constructor's purpose"
  },
  {
    "line": 13,
    "text": "        Constructor",
    "annotation": "\u2705 Best Practice: Call to super() ensures proper initialization of the base class",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      28407,
      273
    ],
    "start_token": 108,
    "end_token": 117,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      4889,
      284,
      2208,
      3419,
      19047,
      1774,
      37588,
      286,
      262,
      2779,
      1398
    ],
    "label": "best_practice",
    "reason": "Call to super() ensures proper initialization of the base class"
  },
  {
    "line": 17,
    "text": "    def callback(self, topic: str, data: Any) -> None:",
    "annotation": "\u2705 Best Practice: Consider using logging instead of print for better control over output",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      825,
      23838,
      7,
      944,
      11,
      7243,
      25,
      965,
      11,
      1366,
      25,
      4377,
      8,
      4613,
      6045,
      25
    ],
    "start_token": 117,
    "end_token": 136,
    "annotation_tokens": [
      26486,
      227,
      6705,
      19939,
      25,
      12642,
      1262,
      18931,
      2427,
      286,
      3601,
      329,
      1365,
      1630,
      625,
      5072
    ],
    "label": "best_practice",
    "reason": "Consider using logging instead of print for better control over output"
  },
  {
    "line": 20,
    "text": "        \"\"\"",
    "annotation": "\ud83e\udde0 ML Signal: Hardcoded addresses can indicate default or test configurations",
    "confidence": 1.0,
    "tokens": [
      220,
      220,
      220,
      220,
      220,
      220,
      220,
      37227
    ],
    "start_token": 136,
    "end_token": 144,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6912,
      40976,
      9405,
      460,
      7603,
      4277,
      393,
      1332,
      25412
    ],
    "label": "ml_signal",
    "reason": "Hardcoded addresses can indicate default or test configurations"
  },
  {
    "line": 22,
    "text": "",
    "annotation": "\ud83e\udde0 ML Signal: Hardcoded addresses can indicate default or test configurations",
    "confidence": 1.0,
    "tokens": [],
    "start_token": 144,
    "end_token": 144,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      6912,
      40976,
      9405,
      460,
      7603,
      4277,
      393,
      1332,
      25412
    ],
    "label": "ml_signal",
    "reason": "Hardcoded addresses can indicate default or test configurations"
  },
  {
    "line": 24,
    "text": "if __name__ == \"__main__\":",
    "annotation": "\ud83e\udde0 ML Signal: Instantiation of a class can indicate usage patterns",
    "confidence": 0.5,
    "tokens": [
      361,
      11593,
      3672,
      834,
      6624,
      366,
      834,
      12417,
      834,
      1298
    ],
    "start_token": 144,
    "end_token": 154,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      24470,
      3920,
      286,
      257,
      1398,
      460,
      7603,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Instantiation of a class can indicate usage patterns"
  },
  {
    "line": 26,
    "text": "    sub_address = \"tcp://localhost:4102\"",
    "annotation": "\ud83e\udde0 ML Signal: Method calls on objects can indicate usage patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      21975,
      796,
      366,
      83,
      13155,
      1378,
      36750,
      25,
      19,
      15377,
      1
    ],
    "start_token": 154,
    "end_token": 170,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      3848,
      319,
      5563,
      460,
      7603,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Method calls on objects can indicate usage patterns"
  },
  {
    "line": 26,
    "text": "    sub_address = \"tcp://localhost:4102\"",
    "annotation": "\ud83e\udde0 ML Signal: Method calls on objects can indicate usage patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      21975,
      796,
      366,
      83,
      13155,
      1378,
      36750,
      25,
      19,
      15377,
      1
    ],
    "start_token": 170,
    "end_token": 186,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      3848,
      319,
      5563,
      460,
      7603,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Method calls on objects can indicate usage patterns"
  },
  {
    "line": 26,
    "text": "    sub_address = \"tcp://localhost:4102\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Infinite loop can cause unresponsiveness or high CPU usage",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      21975,
      796,
      366,
      83,
      13155,
      1378,
      36750,
      25,
      19,
      15377,
      1
    ],
    "start_token": 186,
    "end_token": 202,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      22380,
      9052,
      460,
      2728,
      555,
      16733,
      6517,
      393,
      1029,
      9135,
      8748
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Infinite loop can cause unresponsiveness or high CPU usage"
  },
  {
    "line": 26,
    "text": "    sub_address = \"tcp://localhost:4102\"",
    "annotation": "\ud83e\udde0 ML Signal: Method calls on objects can indicate usage patterns",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      21975,
      796,
      366,
      83,
      13155,
      1378,
      36750,
      25,
      19,
      15377,
      1
    ],
    "start_token": 202,
    "end_token": 218,
    "annotation_tokens": [
      8582,
      100,
      254,
      10373,
      26484,
      25,
      11789,
      3848,
      319,
      5563,
      460,
      7603,
      8748,
      7572
    ],
    "label": "ml_signal",
    "reason": "Method calls on objects can indicate usage patterns"
  },
  {
    "line": 26,
    "text": "    sub_address = \"tcp://localhost:4102\"",
    "annotation": "\u26a0\ufe0f SAST Risk (Low): Use of sleep in a loop can indicate a polling mechanism",
    "confidence": 0.5,
    "tokens": [
      220,
      220,
      220,
      850,
      62,
      21975,
      796,
      366,
      83,
      13155,
      1378,
      36750,
      25,
      19,
      15377,
      1
    ],
    "start_token": 218,
    "end_token": 234,
    "annotation_tokens": [
      158,
      248,
      254,
      37929,
      311,
      11262,
      19602,
      357,
      20535,
      2599,
      5765,
      286,
      3993,
      287,
      257,
      9052,
      460,
      7603,
      257,
      13985,
      9030
    ],
    "label": "sast_risk",
    "severity": "Low",
    "reason": "Use of sleep in a loop can indicate a polling mechanism"
  }
]