name: 🧪 CI Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: 🔍 Run Tests, Lint, Security, and Coverage
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: src

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: 🛠️ Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-tk xvfb cloc

      - name: 📦 Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[gui,test]
          pip install pytest coverage requests ruff black bandit codecov

      - name: 🧪 Run full test suite with Xvfb
        run: |
          xvfb-run --auto-servernum --server-args="-screen 0 1024x768x24" coverage run -m pytest
          coverage report --fail-under=75
          coverage html
          coverage xml  # Required for Codecov

      - name: 📤 Upload coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: htmlcov
          path: htmlcov/

      - name: 📈 Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          fail_ci_if_error: true

      - name: 🔐 Run Bandit security scan
        run: bandit -r src -ll -ii -x src/gui/tkinter_fonts.py

      - name: 🧹 Run ruff linter
        run: ruff check .

      - name: 🎨 Run black (check mode)
        run: black --check .

      - name: 🔐 Run fail-threshold test
        run: xvfb-run -a coverage run -m pytest tests/test_fail_threshold.py

      - name: ⚠️ Run fail-if-nonzero test
        run: xvfb-run -a coverage run -m pytest tests/test_fail_if_nonzero.py

      - name: 📤 Run CLI output test
        run: xvfb-run -a coverage run -m pytest tests/test_cli_output.py

      - name: 📝 Run summary output test
        run: xvfb-run -a coverage run -m pytest tests/test_summary_output_txt.py
